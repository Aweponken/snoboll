Shader "Custom/davnickstartshaderOP" {

Properties {
 _Color ("Color", Color) = (1,1,1,1)
 _MainTex ("Albedo", 2D) = "white" { }
 _Cutoff ("Alpha Cutoff", Range(0,1)) = 0.5
 _Glossiness ("Smoothness", Range(0,1)) = 0.5
[Gamma]  _Metallic ("Metallic", Range(0,1)) = 0
 _MetallicGlossMap ("Metallic", 2D) = "white" { }
 _BumpScale ("Scale", Float) = 1
 _BumpMap ("Normal Map", 2D) = "bump" { }
 _Parallax ("Height Scale", Range(0.005,0.08)) = 0.02
 _ParallaxMap ("Height Map", 2D) = "black" { }
 _OcclusionStrength ("Strength", Range(0,1)) = 1
 _OcclusionMap ("Occlusion", 2D) = "white" { }
 _EmissionColor ("Color", Color) = (0.2941176,0.2941176,0.2941176,0.2941176)
 _EmissionMap ("Emission", 2D) = "white" { }
 _DetailMask ("Detail Mask", 2D) = "white" { }
 _DetailAlbedoMap ("Detail Albedo x2", 2D) = "grey" { }
 _DetailNormalMapScale ("Scale", Float) = 1
 _DetailNormalMap ("Normal Map", 2D) = "bump" { }
[Enum(UV0,0,UV1,1)]  _UVSec ("UV Set for secondary textures", Float) = 0
[HideInInspector]  _Mode ("__mode", Float) = 0
[HideInInspector]  _SrcBlend ("__src", Float) = 1
[HideInInspector]  _DstBlend ("__dst", Float) = 0
[HideInInspector]  _ZWrite ("__zw", Float) = 1
}
SubShader { 
 LOD 300
 Tags { "RenderType"="Opaque" "PerformanceChecks"="False" }


 // Stats for Vertex shader:
 //       d3d11 : 46 avg math (33..60)
 //        d3d9 : 53 avg math (34..73)
 //      opengl : 180 avg math (179..182), 5 avg texture (4..6), 13 branch
 // Stats for Fragment shader:
 //       d3d11 : 145 avg math (143..147), 3 avg texture (2..4), 4 branch
 //        d3d9 : 167 avg math (166..168), 7 avg texture (6..8), 5 branch
 Pass {
  Name "FORWARD"
  Tags { "LIGHTMODE"="ForwardBase" "SHADOWSUPPORT"="true" "RenderType"="Opaque" "PerformanceChecks"="False" }
  ZWrite [_ZWrite]
  Blend [_SrcBlend] [_DstBlend]
  GpuProgramID 39223
Program "vp" {
SubProgram "opengl " {
// Stats: 179 math, 4 textures, 13 branches
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
"#version 120

#ifdef VERTEX
uniform vec3 _WorldSpaceCameraPos;
uniform vec4 unity_SHBr;
uniform vec4 unity_SHBg;
uniform vec4 unity_SHBb;
uniform vec4 unity_SHC;

uniform mat4 _Object2World;
uniform mat4 _World2Object;
uniform vec4 unity_ColorSpaceLuminance;
uniform vec4 _MainTex_ST;
uniform vec4 _DetailAlbedoMap_ST;
uniform float _UVSec;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
varying vec3 xlv_TEXCOORD8;
void main ()
{
  vec2 tmpvar_1;
  tmpvar_1 = gl_MultiTexCoord0.xy;
  vec2 tmpvar_2;
  tmpvar_2 = gl_MultiTexCoord1.xy;
  vec4 tmpvar_3;
  vec4 tmpvar_4;
  vec4 tmpvar_5;
  vec4 tmpvar_6;
  vec3 tmpvar_7;
  vec4 tmpvar_8;
  tmpvar_8 = (_Object2World * gl_Vertex);
  tmpvar_7 = tmpvar_8.xyz;
  tmpvar_3 = (gl_ModelViewProjectionMatrix * gl_Vertex);
  vec4 texcoord_9;
  texcoord_9.xy = ((gl_MultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  vec2 tmpvar_10;
  if ((_UVSec == 0.0)) {
    tmpvar_10 = tmpvar_1;
  } else {
    tmpvar_10 = tmpvar_2;
  };
  texcoord_9.zw = ((tmpvar_10 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  vec3 n_11;
  n_11 = (tmpvar_8.xyz - _WorldSpaceCameraPos);
  vec4 v_12;
  v_12.x = _World2Object[0].x;
  v_12.y = _World2Object[1].x;
  v_12.z = _World2Object[2].x;
  v_12.w = _World2Object[3].x;
  vec4 v_13;
  v_13.x = _World2Object[0].y;
  v_13.y = _World2Object[1].y;
  v_13.z = _World2Object[2].y;
  v_13.w = _World2Object[3].y;
  vec4 v_14;
  v_14.x = _World2Object[0].z;
  v_14.y = _World2Object[1].z;
  v_14.z = _World2Object[2].z;
  v_14.w = _World2Object[3].z;
  vec3 tmpvar_15;
  tmpvar_15 = normalize(((
    (v_12.xyz * gl_Normal.x)
   + 
    (v_13.xyz * gl_Normal.y)
  ) + (v_14.xyz * gl_Normal.z)));
  tmpvar_4.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_5.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_6.xyz = tmpvar_15;
  vec4 ambientOrLightmapUV_16;
  ambientOrLightmapUV_16 = vec4(0.0, 0.0, 0.0, 0.0);
  vec3 ambient_17;
  ambient_17 = vec3(0.0, 0.0, 0.0);
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    ambient_17 = vec3(0.0, 0.0, 0.0);
  };
  vec3 x1_18;
  vec4 tmpvar_19;
  tmpvar_19 = (tmpvar_15.xyzz * tmpvar_15.yzzx);
  x1_18.x = dot (unity_SHBr, tmpvar_19);
  x1_18.y = dot (unity_SHBg, tmpvar_19);
  x1_18.z = dot (unity_SHBb, tmpvar_19);
  ambient_17 = (ambient_17 + (x1_18 + (unity_SHC.xyz * 
    ((tmpvar_15.x * tmpvar_15.x) - (tmpvar_15.y * tmpvar_15.y))
  )));
  ambientOrLightmapUV_16.xyz = ambient_17;
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = texcoord_9;
  xlv_TEXCOORD1 = n_11;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  xlv_TEXCOORD5 = ambientOrLightmapUV_16;
  xlv_TEXCOORD8 = tmpvar_7;
}


#endif
#ifdef FRAGMENT
#extension GL_ARB_shader_texture_lod : enable
uniform vec4 _WorldSpaceLightPos0;
uniform vec4 unity_SHAr;
uniform vec4 unity_SHAg;
uniform vec4 unity_SHAb;
uniform samplerCube unity_SpecCube0;
uniform samplerCube unity_SpecCube1;
uniform vec4 unity_SpecCube0_BoxMax;
uniform vec4 unity_SpecCube0_BoxMin;
uniform vec4 unity_SpecCube0_ProbePosition;
uniform vec4 unity_SpecCube0_HDR;
uniform vec4 unity_SpecCube1_BoxMax;
uniform vec4 unity_SpecCube1_BoxMin;
uniform vec4 unity_SpecCube1_ProbePosition;
uniform vec4 unity_SpecCube1_HDR;
uniform vec4 unity_ColorSpaceDielectricSpec;
uniform vec4 unity_ColorSpaceLuminance;
uniform vec4 _LightColor0;
uniform vec4 _Color;
uniform sampler2D _MainTex;
uniform float _Metallic;
uniform float _Glossiness;
uniform sampler2D _OcclusionMap;
uniform float _OcclusionStrength;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
varying vec3 xlv_TEXCOORD8;
void main ()
{
  vec4 c_1;
  vec3 tmpvar_2;
  tmpvar_2 = (_Color.xyz * texture2D (_MainTex, xlv_TEXCOORD0.xy).xyz);
  vec3 tmpvar_3;
  vec3 tmpvar_4;
  tmpvar_4 = mix (unity_ColorSpaceDielectricSpec.xyz, tmpvar_2, vec3(_Metallic));
  float tmpvar_5;
  tmpvar_5 = (unity_ColorSpaceDielectricSpec.w - (_Metallic * unity_ColorSpaceDielectricSpec.w));
  tmpvar_3 = (tmpvar_2 * tmpvar_5);
  vec3 tmpvar_6;
  tmpvar_6 = normalize(xlv_TEXCOORD2_2.xyz);
  vec3 tmpvar_7;
  tmpvar_7 = normalize(xlv_TEXCOORD1);
  float tmpvar_8;
  tmpvar_8 = ((1.0 - _OcclusionStrength) + (texture2D (_OcclusionMap, xlv_TEXCOORD0.xy).y * _OcclusionStrength));
  float tmpvar_9;
  tmpvar_9 = (1.0 - _Glossiness);
  vec3 tmpvar_10;
  tmpvar_10 = (tmpvar_7 - (2.0 * (
    dot (tmpvar_6, tmpvar_7)
   * tmpvar_6)));
  vec3 tmpvar_11;
  vec3 tmpvar_12;
  tmpvar_12 = vec3(0.0, 0.0, 0.0);
  vec3 ambient_13;
  vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = tmpvar_6;
  vec3 x_15;
  x_15.x = dot (unity_SHAr, tmpvar_14);
  x_15.y = dot (unity_SHAg, tmpvar_14);
  x_15.z = dot (unity_SHAb, tmpvar_14);
  vec3 tmpvar_16;
  tmpvar_16 = max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD5.xyz + x_15));
  ambient_13 = tmpvar_16;
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    ambient_13 = max (((1.055 * 
      pow (max (tmpvar_16, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
    ) - 0.055), vec3(0.0, 0.0, 0.0));
  };
  tmpvar_12 = (ambient_13 * tmpvar_8);
  tmpvar_11 = vec3(0.0, 0.0, 0.0);
  vec3 specular_17;
  vec3 worldRefl_18;
  worldRefl_18 = tmpvar_10;
  vec3 worldPos_19;
  worldPos_19 = xlv_TEXCOORD8;
  if ((unity_SpecCube0_ProbePosition.w > 0.0)) {
    vec3 tmpvar_20;
    tmpvar_20 = normalize(tmpvar_10);
    vec3 tmpvar_21;
    tmpvar_21 = ((unity_SpecCube0_BoxMax.xyz - xlv_TEXCOORD8) / tmpvar_20);
    vec3 tmpvar_22;
    tmpvar_22 = ((unity_SpecCube0_BoxMin.xyz - xlv_TEXCOORD8) / tmpvar_20);
    bvec3 tmpvar_23;
    tmpvar_23 = greaterThan (tmpvar_20, vec3(0.0, 0.0, 0.0));
    float tmpvar_24;
    if (tmpvar_23.x) {
      tmpvar_24 = tmpvar_21.x;
    } else {
      tmpvar_24 = tmpvar_22.x;
    };
    float tmpvar_25;
    if (tmpvar_23.y) {
      tmpvar_25 = tmpvar_21.y;
    } else {
      tmpvar_25 = tmpvar_22.y;
    };
    float tmpvar_26;
    if (tmpvar_23.z) {
      tmpvar_26 = tmpvar_21.z;
    } else {
      tmpvar_26 = tmpvar_22.z;
    };
    worldPos_19 = (xlv_TEXCOORD8 - unity_SpecCube0_ProbePosition.xyz);
    worldRefl_18 = (worldPos_19 + (tmpvar_20 * min (
      min (tmpvar_24, tmpvar_25)
    , tmpvar_26)));
  };
  vec4 tmpvar_27;
  tmpvar_27.xyz = worldRefl_18;
  tmpvar_27.w = ((tmpvar_9 * (1.7 - 
    (0.7 * tmpvar_9)
  )) * 6.0);
  vec4 tmpvar_28;
  tmpvar_28 = textureCubeLod (unity_SpecCube0, worldRefl_18, tmpvar_27.w);
  vec3 tmpvar_29;
  tmpvar_29 = ((unity_SpecCube0_HDR.x * pow (tmpvar_28.w, unity_SpecCube0_HDR.y)) * tmpvar_28.xyz);
  if ((unity_SpecCube0_BoxMin.w < 0.99999)) {
    vec3 worldRefl_30;
    worldRefl_30 = tmpvar_10;
    vec3 worldPos_31;
    worldPos_31 = xlv_TEXCOORD8;
    if ((unity_SpecCube1_ProbePosition.w > 0.0)) {
      vec3 tmpvar_32;
      tmpvar_32 = normalize(tmpvar_10);
      vec3 tmpvar_33;
      tmpvar_33 = ((unity_SpecCube1_BoxMax.xyz - xlv_TEXCOORD8) / tmpvar_32);
      vec3 tmpvar_34;
      tmpvar_34 = ((unity_SpecCube1_BoxMin.xyz - xlv_TEXCOORD8) / tmpvar_32);
      bvec3 tmpvar_35;
      tmpvar_35 = greaterThan (tmpvar_32, vec3(0.0, 0.0, 0.0));
      float tmpvar_36;
      if (tmpvar_35.x) {
        tmpvar_36 = tmpvar_33.x;
      } else {
        tmpvar_36 = tmpvar_34.x;
      };
      float tmpvar_37;
      if (tmpvar_35.y) {
        tmpvar_37 = tmpvar_33.y;
      } else {
        tmpvar_37 = tmpvar_34.y;
      };
      float tmpvar_38;
      if (tmpvar_35.z) {
        tmpvar_38 = tmpvar_33.z;
      } else {
        tmpvar_38 = tmpvar_34.z;
      };
      worldPos_31 = (xlv_TEXCOORD8 - unity_SpecCube1_ProbePosition.xyz);
      worldRefl_30 = (worldPos_31 + (tmpvar_32 * min (
        min (tmpvar_36, tmpvar_37)
      , tmpvar_38)));
    };
    vec4 tmpvar_39;
    tmpvar_39.xyz = worldRefl_30;
    tmpvar_39.w = ((tmpvar_9 * (1.7 - 
      (0.7 * tmpvar_9)
    )) * 6.0);
    vec4 tmpvar_40;
    tmpvar_40 = textureCubeLod (unity_SpecCube1, worldRefl_30, tmpvar_39.w);
    specular_17 = mix (((unity_SpecCube1_HDR.x * 
      pow (tmpvar_40.w, unity_SpecCube1_HDR.y)
    ) * tmpvar_40.xyz), tmpvar_29, unity_SpecCube0_BoxMin.www);
  } else {
    specular_17 = tmpvar_29;
  };
  tmpvar_11 = (specular_17 * tmpvar_8);
  vec3 viewDir_41;
  viewDir_41 = -(tmpvar_7);
  float surfaceReduction_42;
  float specularTerm_43;
  float tmpvar_44;
  tmpvar_44 = (1.0 - _Glossiness);
  vec3 tmpvar_45;
  vec3 inVec_46;
  inVec_46 = (_WorldSpaceLightPos0.xyz + viewDir_41);
  tmpvar_45 = (inVec_46 * inversesqrt(max (0.001, 
    dot (inVec_46, inVec_46)
  )));
  float tmpvar_47;
  tmpvar_47 = dot (tmpvar_6, viewDir_41);
  vec3 tmpvar_48;
  if ((tmpvar_47 < 0.0)) {
    tmpvar_48 = (tmpvar_6 + (viewDir_41 * (
      -(tmpvar_47)
     + 1e-05)));
  } else {
    tmpvar_48 = tmpvar_6;
  };
  float tmpvar_49;
  tmpvar_49 = max (0.0, dot (tmpvar_48, _WorldSpaceLightPos0.xyz));
  float tmpvar_50;
  tmpvar_50 = max (0.0, dot (tmpvar_48, tmpvar_45));
  float tmpvar_51;
  tmpvar_51 = max (0.0, dot (tmpvar_48, viewDir_41));
  float tmpvar_52;
  tmpvar_52 = max (0.0, dot (_WorldSpaceLightPos0.xyz, tmpvar_45));
  float tmpvar_53;
  tmpvar_53 = (tmpvar_44 * tmpvar_44);
  float tmpvar_54;
  tmpvar_54 = (tmpvar_44 * tmpvar_44);
  float tmpvar_55;
  tmpvar_55 = (tmpvar_54 * tmpvar_54);
  float tmpvar_56;
  tmpvar_56 = (((tmpvar_50 * tmpvar_50) * (tmpvar_55 - 1.0)) + 1.0);
  float x_57;
  x_57 = (1.0 - tmpvar_49);
  float x_58;
  x_58 = (1.0 - tmpvar_51);
  float tmpvar_59;
  tmpvar_59 = (0.5 + ((2.0 * tmpvar_52) * (tmpvar_52 * tmpvar_44)));
  float tmpvar_60;
  tmpvar_60 = ((1.0 + (
    (tmpvar_59 - 1.0)
   * 
    ((x_57 * x_57) * ((x_57 * x_57) * x_57))
  )) * (1.0 + (
    (tmpvar_59 - 1.0)
   * 
    ((x_58 * x_58) * ((x_58 * x_58) * x_58))
  )));
  float tmpvar_61;
  tmpvar_61 = (((2.0 / 
    (((tmpvar_49 * (
      (tmpvar_51 * (1.0 - tmpvar_53))
     + tmpvar_53)) + (tmpvar_51 * (
      (tmpvar_49 * (1.0 - tmpvar_53))
     + tmpvar_53))) + 1e-05)
  ) * (tmpvar_55 / 
    (((3.141593 * tmpvar_56) * tmpvar_56) + 1e-07)
  )) * 0.7853982);
  specularTerm_43 = tmpvar_61;
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    specularTerm_43 = sqrt(max (0.0001, tmpvar_61));
  };
  float tmpvar_62;
  tmpvar_62 = max (0.0, (specularTerm_43 * tmpvar_49));
  specularTerm_43 = tmpvar_62;
  float tmpvar_63;
  tmpvar_63 = (tmpvar_60 * tmpvar_49);
  float tmpvar_64;
  tmpvar_64 = (tmpvar_44 * tmpvar_44);
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    surfaceReduction_42 = (1.0 - ((0.28 * tmpvar_64) * tmpvar_44));
  } else {
    surfaceReduction_42 = (1.0/(((tmpvar_64 * tmpvar_64) + 1.0)));
  };
  float x_65;
  x_65 = (1.0 - tmpvar_52);
  float x_66;
  x_66 = (1.0 - tmpvar_51);
  vec3 tmpvar_67;
  tmpvar_67 = (((tmpvar_3 * 
    (tmpvar_12 + (_LightColor0.xyz * tmpvar_63))
  ) + (
    (tmpvar_62 * _LightColor0.xyz)
   * 
    (tmpvar_4 + ((1.0 - tmpvar_4) * ((x_65 * x_65) * (
      (x_65 * x_65)
     * x_65))))
  )) + ((surfaceReduction_42 * tmpvar_11) * mix (tmpvar_4, vec3(
    clamp ((_Glossiness + (1.0 - tmpvar_5)), 0.0, 1.0)
  ), vec3(
    ((x_66 * x_66) * ((x_66 * x_66) * x_66))
  ))));
  vec4 tmpvar_68;
  tmpvar_68.w = 1.0;
  tmpvar_68.xyz = tmpvar_67;
  c_1.w = tmpvar_68.w;
  c_1.xyz = tmpvar_67;
  c_1.xyz = c_1.xyz;
  vec4 xlat_varoutput_69;
  xlat_varoutput_69.xyz = c_1.xyz;
  xlat_varoutput_69.w = 1.0;
  gl_FragData[0] = xlat_varoutput_69;
}


#endif
"
}
SubProgram "d3d9 " {
// Stats: 34 math
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Matrix 4 [_Object2World] 3
Matrix 7 [_World2Object] 3
Matrix 0 [glstate_matrix_mvp]
Vector 16 [_DetailAlbedoMap_ST]
Vector 15 [_MainTex_ST]
Float 17 [_UVSec]
Vector 10 [_WorldSpaceCameraPos]
Vector 13 [unity_SHBb]
Vector 12 [unity_SHBg]
Vector 11 [unity_SHBr]
Vector 14 [unity_SHC]
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   row_major float4x4 _Object2World;
//   float _UVSec;
//   row_major float4x4 _World2Object;
//   float3 _WorldSpaceCameraPos;
//   row_major float4x4 glstate_matrix_mvp;
//   float4 unity_SHBb;
//   float4 unity_SHBg;
//   float4 unity_SHBr;
//   float4 unity_SHC;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   glstate_matrix_mvp   c0       4
//   _Object2World        c4       3
//   _World2Object        c7       3
//   _WorldSpaceCameraPos c10      1
//   unity_SHBr           c11      1
//   unity_SHBg           c12      1
//   unity_SHBb           c13      1
//   unity_SHC            c14      1
//   _MainTex_ST          c15      1
//   _DetailAlbedoMap_ST  c16      1
//   _UVSec               c17      1
//

    vs_3_0
    def c18, 0, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6
    dcl_texcoord8 o7.xyz
    dp4 o0.x, c0, v0
    dp4 o0.y, c1, v0
    dp4 o0.z, c2, v0
    dp4 o0.w, c3, v0
    mad o1.xy, v2, c15, c15.zwzw
    abs r0.x, c17.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c16.xyxy, c16
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add o2.xyz, r0, -c10
    mov o7.xyz, r0
    mul r0.xyz, c8, v1.y
    mad r0.xyz, c7, v1.x, r0
    mad r0.xyz, c9, v1.z, r0
    nrm r1.xyz, r0
    mul r0.x, r1.y, r1.y
    mad r0.x, r1.x, r1.x, -r0.x
    mul r2, r1.yzzx, r1.xyzz
    mov o5.xyz, r1
    dp4 r1.x, c11, r2
    dp4 r1.y, c12, r2
    dp4 r1.z, c13, r2
    mad o6.xyz, c14, r0.x, r1
    mov o3, c18.x
    mov o4, c18.x
    mov o5.w, c18.x
    mov o6.w, c18.x

// approximately 33 instruction slots used
"
}
SubProgram "d3d11 " {
// Stats: 33 math
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
ConstBuffer "$Globals" 240
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 656 [unity_SHBr]
Vector 672 [unity_SHBg]
Vector 688 [unity_SHBb]
Vector 704 [unity_SHC]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 8   xyz         7     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer cb0[14], immediateIndexed
      dcl_constantbuffer cb1[5], immediateIndexed
      dcl_constantbuffer cb2[45], immediateIndexed
      dcl_constantbuffer cb3[19], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyz
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: mad o0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   4: eq r0.x, cb0[13].z, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[11].xxxy, cb0[11].zzzw
   7: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  13: mov o7.xyz, r0.xyzx
  14: mov o3.xyzw, l(0,0,0,0)
  15: mov o4.xyzw, l(0,0,0,0)
  16: mul r0.x, v1.x, cb3[16].x
  17: mul r0.y, v1.x, cb3[17].x
  18: mul r0.z, v1.x, cb3[18].x
  19: mul r1.x, v1.y, cb3[16].y
  20: mul r1.y, v1.y, cb3[17].y
  21: mul r1.z, v1.y, cb3[18].y
  22: add r0.xyz, r0.xyzx, r1.xyzx
  23: mul r1.x, v1.z, cb3[16].z
  24: mul r1.y, v1.z, cb3[17].z
  25: mul r1.z, v1.z, cb3[18].z
  26: add r0.xyz, r0.xyzx, r1.xyzx
  27: dp3 r0.w, r0.xyzx, r0.xyzx
  28: rsq r0.w, r0.w
  29: mul r0.xyz, r0.wwww, r0.xyzx
  30: mov o5.xyz, r0.xyzx
  31: mov o5.w, l(0)
  32: mul r0.w, r0.y, r0.y
  33: mad r0.w, r0.x, r0.x, -r0.w
  34: mul r1.xyzw, r0.yzzx, r0.xyzz
  35: dp4 r0.x, cb2[41].xyzw, r1.xyzw
  36: dp4 r0.y, cb2[42].xyzw, r1.xyzw
  37: dp4 r0.z, cb2[43].xyzw, r1.xyzw
  38: mad o6.xyz, cb2[44].xyzx, r0.wwww, r0.xyzx
  39: mov o6.w, l(0)
  40: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
// Stats: 180 math, 5 textures, 13 branches
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
"#version 120

#ifdef VERTEX
uniform vec3 _WorldSpaceCameraPos;
uniform vec4 _ProjectionParams;
uniform vec4 unity_SHBr;
uniform vec4 unity_SHBg;
uniform vec4 unity_SHBb;
uniform vec4 unity_SHC;

uniform mat4 _Object2World;
uniform mat4 _World2Object;
uniform vec4 unity_ColorSpaceLuminance;
uniform vec4 _MainTex_ST;
uniform vec4 _DetailAlbedoMap_ST;
uniform float _UVSec;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
varying vec4 xlv_TEXCOORD6;
varying vec3 xlv_TEXCOORD8;
void main ()
{
  vec2 tmpvar_1;
  tmpvar_1 = gl_MultiTexCoord0.xy;
  vec2 tmpvar_2;
  tmpvar_2 = gl_MultiTexCoord1.xy;
  vec4 tmpvar_3;
  vec4 tmpvar_4;
  vec4 tmpvar_5;
  vec4 tmpvar_6;
  vec3 tmpvar_7;
  vec4 tmpvar_8;
  tmpvar_8 = (_Object2World * gl_Vertex);
  tmpvar_7 = tmpvar_8.xyz;
  tmpvar_3 = (gl_ModelViewProjectionMatrix * gl_Vertex);
  vec4 texcoord_9;
  texcoord_9.xy = ((gl_MultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  vec2 tmpvar_10;
  if ((_UVSec == 0.0)) {
    tmpvar_10 = tmpvar_1;
  } else {
    tmpvar_10 = tmpvar_2;
  };
  texcoord_9.zw = ((tmpvar_10 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  vec3 n_11;
  n_11 = (tmpvar_8.xyz - _WorldSpaceCameraPos);
  vec4 v_12;
  v_12.x = _World2Object[0].x;
  v_12.y = _World2Object[1].x;
  v_12.z = _World2Object[2].x;
  v_12.w = _World2Object[3].x;
  vec4 v_13;
  v_13.x = _World2Object[0].y;
  v_13.y = _World2Object[1].y;
  v_13.z = _World2Object[2].y;
  v_13.w = _World2Object[3].y;
  vec4 v_14;
  v_14.x = _World2Object[0].z;
  v_14.y = _World2Object[1].z;
  v_14.z = _World2Object[2].z;
  v_14.w = _World2Object[3].z;
  vec3 tmpvar_15;
  tmpvar_15 = normalize(((
    (v_12.xyz * gl_Normal.x)
   + 
    (v_13.xyz * gl_Normal.y)
  ) + (v_14.xyz * gl_Normal.z)));
  tmpvar_4.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_5.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_6.xyz = tmpvar_15;
  vec4 o_16;
  vec4 tmpvar_17;
  tmpvar_17 = (tmpvar_3 * 0.5);
  vec2 tmpvar_18;
  tmpvar_18.x = tmpvar_17.x;
  tmpvar_18.y = (tmpvar_17.y * _ProjectionParams.x);
  o_16.xy = (tmpvar_18 + tmpvar_17.w);
  o_16.zw = tmpvar_3.zw;
  vec4 ambientOrLightmapUV_19;
  ambientOrLightmapUV_19 = vec4(0.0, 0.0, 0.0, 0.0);
  vec3 ambient_20;
  ambient_20 = vec3(0.0, 0.0, 0.0);
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    ambient_20 = vec3(0.0, 0.0, 0.0);
  };
  vec3 x1_21;
  vec4 tmpvar_22;
  tmpvar_22 = (tmpvar_15.xyzz * tmpvar_15.yzzx);
  x1_21.x = dot (unity_SHBr, tmpvar_22);
  x1_21.y = dot (unity_SHBg, tmpvar_22);
  x1_21.z = dot (unity_SHBb, tmpvar_22);
  ambient_20 = (ambient_20 + (x1_21 + (unity_SHC.xyz * 
    ((tmpvar_15.x * tmpvar_15.x) - (tmpvar_15.y * tmpvar_15.y))
  )));
  ambientOrLightmapUV_19.xyz = ambient_20;
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = texcoord_9;
  xlv_TEXCOORD1 = n_11;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  xlv_TEXCOORD5 = ambientOrLightmapUV_19;
  xlv_TEXCOORD6 = o_16;
  xlv_TEXCOORD8 = tmpvar_7;
}


#endif
#ifdef FRAGMENT
#extension GL_ARB_shader_texture_lod : enable
uniform vec4 _WorldSpaceLightPos0;
uniform vec4 unity_SHAr;
uniform vec4 unity_SHAg;
uniform vec4 unity_SHAb;
uniform samplerCube unity_SpecCube0;
uniform samplerCube unity_SpecCube1;
uniform vec4 unity_SpecCube0_BoxMax;
uniform vec4 unity_SpecCube0_BoxMin;
uniform vec4 unity_SpecCube0_ProbePosition;
uniform vec4 unity_SpecCube0_HDR;
uniform vec4 unity_SpecCube1_BoxMax;
uniform vec4 unity_SpecCube1_BoxMin;
uniform vec4 unity_SpecCube1_ProbePosition;
uniform vec4 unity_SpecCube1_HDR;
uniform vec4 unity_ColorSpaceDielectricSpec;
uniform vec4 unity_ColorSpaceLuminance;
uniform vec4 _LightColor0;
uniform vec4 _Color;
uniform sampler2D _MainTex;
uniform float _Metallic;
uniform float _Glossiness;
uniform sampler2D _OcclusionMap;
uniform float _OcclusionStrength;
uniform sampler2D _ShadowMapTexture;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
varying vec4 xlv_TEXCOORD6;
varying vec3 xlv_TEXCOORD8;
void main ()
{
  vec4 c_1;
  vec3 tmpvar_2;
  tmpvar_2 = (_Color.xyz * texture2D (_MainTex, xlv_TEXCOORD0.xy).xyz);
  vec3 tmpvar_3;
  vec3 tmpvar_4;
  tmpvar_4 = mix (unity_ColorSpaceDielectricSpec.xyz, tmpvar_2, vec3(_Metallic));
  float tmpvar_5;
  tmpvar_5 = (unity_ColorSpaceDielectricSpec.w - (_Metallic * unity_ColorSpaceDielectricSpec.w));
  tmpvar_3 = (tmpvar_2 * tmpvar_5);
  vec3 tmpvar_6;
  tmpvar_6 = normalize(xlv_TEXCOORD2_2.xyz);
  vec3 tmpvar_7;
  tmpvar_7 = normalize(xlv_TEXCOORD1);
  float tmpvar_8;
  tmpvar_8 = ((1.0 - _OcclusionStrength) + (texture2D (_OcclusionMap, xlv_TEXCOORD0.xy).y * _OcclusionStrength));
  float tmpvar_9;
  tmpvar_9 = (1.0 - _Glossiness);
  vec3 tmpvar_10;
  tmpvar_10 = (tmpvar_7 - (2.0 * (
    dot (tmpvar_6, tmpvar_7)
   * tmpvar_6)));
  vec3 tmpvar_11;
  vec3 tmpvar_12;
  vec3 tmpvar_13;
  tmpvar_13 = vec3(0.0, 0.0, 0.0);
  tmpvar_12 = (_LightColor0.xyz * texture2DProj (_ShadowMapTexture, xlv_TEXCOORD6).x);
  vec3 ambient_14;
  vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = tmpvar_6;
  vec3 x_16;
  x_16.x = dot (unity_SHAr, tmpvar_15);
  x_16.y = dot (unity_SHAg, tmpvar_15);
  x_16.z = dot (unity_SHAb, tmpvar_15);
  vec3 tmpvar_17;
  tmpvar_17 = max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD5.xyz + x_16));
  ambient_14 = tmpvar_17;
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    ambient_14 = max (((1.055 * 
      pow (max (tmpvar_17, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
    ) - 0.055), vec3(0.0, 0.0, 0.0));
  };
  tmpvar_13 = (ambient_14 * tmpvar_8);
  tmpvar_11 = vec3(0.0, 0.0, 0.0);
  vec3 specular_18;
  vec3 worldRefl_19;
  worldRefl_19 = tmpvar_10;
  vec3 worldPos_20;
  worldPos_20 = xlv_TEXCOORD8;
  if ((unity_SpecCube0_ProbePosition.w > 0.0)) {
    vec3 tmpvar_21;
    tmpvar_21 = normalize(tmpvar_10);
    vec3 tmpvar_22;
    tmpvar_22 = ((unity_SpecCube0_BoxMax.xyz - xlv_TEXCOORD8) / tmpvar_21);
    vec3 tmpvar_23;
    tmpvar_23 = ((unity_SpecCube0_BoxMin.xyz - xlv_TEXCOORD8) / tmpvar_21);
    bvec3 tmpvar_24;
    tmpvar_24 = greaterThan (tmpvar_21, vec3(0.0, 0.0, 0.0));
    float tmpvar_25;
    if (tmpvar_24.x) {
      tmpvar_25 = tmpvar_22.x;
    } else {
      tmpvar_25 = tmpvar_23.x;
    };
    float tmpvar_26;
    if (tmpvar_24.y) {
      tmpvar_26 = tmpvar_22.y;
    } else {
      tmpvar_26 = tmpvar_23.y;
    };
    float tmpvar_27;
    if (tmpvar_24.z) {
      tmpvar_27 = tmpvar_22.z;
    } else {
      tmpvar_27 = tmpvar_23.z;
    };
    worldPos_20 = (xlv_TEXCOORD8 - unity_SpecCube0_ProbePosition.xyz);
    worldRefl_19 = (worldPos_20 + (tmpvar_21 * min (
      min (tmpvar_25, tmpvar_26)
    , tmpvar_27)));
  };
  vec4 tmpvar_28;
  tmpvar_28.xyz = worldRefl_19;
  tmpvar_28.w = ((tmpvar_9 * (1.7 - 
    (0.7 * tmpvar_9)
  )) * 6.0);
  vec4 tmpvar_29;
  tmpvar_29 = textureCubeLod (unity_SpecCube0, worldRefl_19, tmpvar_28.w);
  vec3 tmpvar_30;
  tmpvar_30 = ((unity_SpecCube0_HDR.x * pow (tmpvar_29.w, unity_SpecCube0_HDR.y)) * tmpvar_29.xyz);
  if ((unity_SpecCube0_BoxMin.w < 0.99999)) {
    vec3 worldRefl_31;
    worldRefl_31 = tmpvar_10;
    vec3 worldPos_32;
    worldPos_32 = xlv_TEXCOORD8;
    if ((unity_SpecCube1_ProbePosition.w > 0.0)) {
      vec3 tmpvar_33;
      tmpvar_33 = normalize(tmpvar_10);
      vec3 tmpvar_34;
      tmpvar_34 = ((unity_SpecCube1_BoxMax.xyz - xlv_TEXCOORD8) / tmpvar_33);
      vec3 tmpvar_35;
      tmpvar_35 = ((unity_SpecCube1_BoxMin.xyz - xlv_TEXCOORD8) / tmpvar_33);
      bvec3 tmpvar_36;
      tmpvar_36 = greaterThan (tmpvar_33, vec3(0.0, 0.0, 0.0));
      float tmpvar_37;
      if (tmpvar_36.x) {
        tmpvar_37 = tmpvar_34.x;
      } else {
        tmpvar_37 = tmpvar_35.x;
      };
      float tmpvar_38;
      if (tmpvar_36.y) {
        tmpvar_38 = tmpvar_34.y;
      } else {
        tmpvar_38 = tmpvar_35.y;
      };
      float tmpvar_39;
      if (tmpvar_36.z) {
        tmpvar_39 = tmpvar_34.z;
      } else {
        tmpvar_39 = tmpvar_35.z;
      };
      worldPos_32 = (xlv_TEXCOORD8 - unity_SpecCube1_ProbePosition.xyz);
      worldRefl_31 = (worldPos_32 + (tmpvar_33 * min (
        min (tmpvar_37, tmpvar_38)
      , tmpvar_39)));
    };
    vec4 tmpvar_40;
    tmpvar_40.xyz = worldRefl_31;
    tmpvar_40.w = ((tmpvar_9 * (1.7 - 
      (0.7 * tmpvar_9)
    )) * 6.0);
    vec4 tmpvar_41;
    tmpvar_41 = textureCubeLod (unity_SpecCube1, worldRefl_31, tmpvar_40.w);
    specular_18 = mix (((unity_SpecCube1_HDR.x * 
      pow (tmpvar_41.w, unity_SpecCube1_HDR.y)
    ) * tmpvar_41.xyz), tmpvar_30, unity_SpecCube0_BoxMin.www);
  } else {
    specular_18 = tmpvar_30;
  };
  tmpvar_11 = (specular_18 * tmpvar_8);
  vec3 viewDir_42;
  viewDir_42 = -(tmpvar_7);
  float surfaceReduction_43;
  float specularTerm_44;
  float tmpvar_45;
  tmpvar_45 = (1.0 - _Glossiness);
  vec3 tmpvar_46;
  vec3 inVec_47;
  inVec_47 = (_WorldSpaceLightPos0.xyz + viewDir_42);
  tmpvar_46 = (inVec_47 * inversesqrt(max (0.001, 
    dot (inVec_47, inVec_47)
  )));
  float tmpvar_48;
  tmpvar_48 = dot (tmpvar_6, viewDir_42);
  vec3 tmpvar_49;
  if ((tmpvar_48 < 0.0)) {
    tmpvar_49 = (tmpvar_6 + (viewDir_42 * (
      -(tmpvar_48)
     + 1e-05)));
  } else {
    tmpvar_49 = tmpvar_6;
  };
  float tmpvar_50;
  tmpvar_50 = max (0.0, dot (tmpvar_49, _WorldSpaceLightPos0.xyz));
  float tmpvar_51;
  tmpvar_51 = max (0.0, dot (tmpvar_49, tmpvar_46));
  float tmpvar_52;
  tmpvar_52 = max (0.0, dot (tmpvar_49, viewDir_42));
  float tmpvar_53;
  tmpvar_53 = max (0.0, dot (_WorldSpaceLightPos0.xyz, tmpvar_46));
  float tmpvar_54;
  tmpvar_54 = (tmpvar_45 * tmpvar_45);
  float tmpvar_55;
  tmpvar_55 = (tmpvar_45 * tmpvar_45);
  float tmpvar_56;
  tmpvar_56 = (tmpvar_55 * tmpvar_55);
  float tmpvar_57;
  tmpvar_57 = (((tmpvar_51 * tmpvar_51) * (tmpvar_56 - 1.0)) + 1.0);
  float x_58;
  x_58 = (1.0 - tmpvar_50);
  float x_59;
  x_59 = (1.0 - tmpvar_52);
  float tmpvar_60;
  tmpvar_60 = (0.5 + ((2.0 * tmpvar_53) * (tmpvar_53 * tmpvar_45)));
  float tmpvar_61;
  tmpvar_61 = ((1.0 + (
    (tmpvar_60 - 1.0)
   * 
    ((x_58 * x_58) * ((x_58 * x_58) * x_58))
  )) * (1.0 + (
    (tmpvar_60 - 1.0)
   * 
    ((x_59 * x_59) * ((x_59 * x_59) * x_59))
  )));
  float tmpvar_62;
  tmpvar_62 = (((2.0 / 
    (((tmpvar_50 * (
      (tmpvar_52 * (1.0 - tmpvar_54))
     + tmpvar_54)) + (tmpvar_52 * (
      (tmpvar_50 * (1.0 - tmpvar_54))
     + tmpvar_54))) + 1e-05)
  ) * (tmpvar_56 / 
    (((3.141593 * tmpvar_57) * tmpvar_57) + 1e-07)
  )) * 0.7853982);
  specularTerm_44 = tmpvar_62;
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    specularTerm_44 = sqrt(max (0.0001, tmpvar_62));
  };
  float tmpvar_63;
  tmpvar_63 = max (0.0, (specularTerm_44 * tmpvar_50));
  specularTerm_44 = tmpvar_63;
  float tmpvar_64;
  tmpvar_64 = (tmpvar_61 * tmpvar_50);
  float tmpvar_65;
  tmpvar_65 = (tmpvar_45 * tmpvar_45);
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    surfaceReduction_43 = (1.0 - ((0.28 * tmpvar_65) * tmpvar_45));
  } else {
    surfaceReduction_43 = (1.0/(((tmpvar_65 * tmpvar_65) + 1.0)));
  };
  float x_66;
  x_66 = (1.0 - tmpvar_53);
  float x_67;
  x_67 = (1.0 - tmpvar_52);
  vec3 tmpvar_68;
  tmpvar_68 = (((tmpvar_3 * 
    (tmpvar_13 + (tmpvar_12 * tmpvar_64))
  ) + (
    (tmpvar_63 * tmpvar_12)
   * 
    (tmpvar_4 + ((1.0 - tmpvar_4) * ((x_66 * x_66) * (
      (x_66 * x_66)
     * x_66))))
  )) + ((surfaceReduction_43 * tmpvar_11) * mix (tmpvar_4, vec3(
    clamp ((_Glossiness + (1.0 - tmpvar_5)), 0.0, 1.0)
  ), vec3(
    ((x_67 * x_67) * ((x_67 * x_67) * x_67))
  ))));
  vec4 tmpvar_69;
  tmpvar_69.w = 1.0;
  tmpvar_69.xyz = tmpvar_68;
  c_1.w = tmpvar_69.w;
  c_1.xyz = tmpvar_68;
  c_1.xyz = c_1.xyz;
  vec4 xlat_varoutput_70;
  xlat_varoutput_70.xyz = c_1.xyz;
  xlat_varoutput_70.w = 1.0;
  gl_FragData[0] = xlat_varoutput_70;
}


#endif
"
}
SubProgram "d3d9 " {
// Stats: 40 math
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Matrix 4 [_Object2World] 3
Matrix 7 [_World2Object] 3
Matrix 0 [glstate_matrix_mvp]
Vector 18 [_DetailAlbedoMap_ST]
Vector 17 [_MainTex_ST]
Vector 11 [_ProjectionParams]
Vector 12 [_ScreenParams]
Float 19 [_UVSec]
Vector 10 [_WorldSpaceCameraPos]
Vector 15 [unity_SHBb]
Vector 14 [unity_SHBg]
Vector 13 [unity_SHBr]
Vector 16 [unity_SHC]
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   row_major float4x4 _Object2World;
//   float4 _ProjectionParams;
//   float4 _ScreenParams;
//   float _UVSec;
//   row_major float4x4 _World2Object;
//   float3 _WorldSpaceCameraPos;
//   row_major float4x4 glstate_matrix_mvp;
//   float4 unity_SHBb;
//   float4 unity_SHBg;
//   float4 unity_SHBr;
//   float4 unity_SHC;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   glstate_matrix_mvp   c0       4
//   _Object2World        c4       3
//   _World2Object        c7       3
//   _WorldSpaceCameraPos c10      1
//   _ProjectionParams    c11      1
//   _ScreenParams        c12      1
//   unity_SHBr           c13      1
//   unity_SHBg           c14      1
//   unity_SHBb           c15      1
//   unity_SHC            c16      1
//   _MainTex_ST          c17      1
//   _DetailAlbedoMap_ST  c18      1
//   _UVSec               c19      1
//

    vs_3_0
    def c20, 0.5, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6
    dcl_texcoord6 o7
    dcl_texcoord8 o8.xyz
    mad o1.xy, v2, c17, c17.zwzw
    abs r0.x, c19.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c18.xyxy, c18
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add o2.xyz, r0, -c10
    mov o8.xyz, r0
    dp4 r0.y, c1, v0
    mul r1.x, r0.y, c11.x
    mul r1.w, r1.x, c20.x
    dp4 r0.x, c0, v0
    dp4 r0.w, c3, v0
    mul r1.xz, r0.xyww, c20.x
    mad o7.xy, r1.z, c12.zwzw, r1.xwzw
    mul r1.xyz, c8, v1.y
    mad r1.xyz, c7, v1.x, r1
    mad r1.xyz, c9, v1.z, r1
    nrm r2.xyz, r1
    mul r1.x, r2.y, r2.y
    mad r1.x, r2.x, r2.x, -r1.x
    mul r3, r2.yzzx, r2.xyzz
    mov o5.xyz, r2
    dp4 r2.x, c13, r3
    dp4 r2.y, c14, r3
    dp4 r2.z, c15, r3
    mad o6.xyz, c16, r1.x, r2
    dp4 r0.z, c2, v0
    mov o0, r0
    mov o7.zw, r0
    mov o3, c20.y
    mov o4, c20.y
    mov o5.w, c20.y
    mov o6.w, c20.y

// approximately 39 instruction slots used
"
}
SubProgram "d3d11 " {
// Stats: 36 math
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
ConstBuffer "$Globals" 240
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
Vector 80 [_ProjectionParams]
ConstBuffer "UnityLighting" 720
Vector 656 [unity_SHBr]
Vector 672 [unity_SHBg]
Vector 688 [unity_SHBb]
Vector 704 [unity_SHC]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
// TEXCOORD                 8   xyz         8     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer cb0[14], immediateIndexed
      dcl_constantbuffer cb1[6], immediateIndexed
      dcl_constantbuffer cb2[45], immediateIndexed
      dcl_constantbuffer cb3[19], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_output o8.xyz
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   4: mov o0.xyzw, r0.xyzw
   5: eq r1.x, cb0[13].z, l(0.000000)
   6: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
   7: mad o1.zw, r1.xxxy, cb0[11].xxxy, cb0[11].zzzw
   8: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   9: mul r1.xyz, v0.yyyy, cb3[13].xyzx
  10: mad r1.xyz, cb3[12].xyzx, v0.xxxx, r1.xyzx
  11: mad r1.xyz, cb3[14].xyzx, v0.zzzz, r1.xyzx
  12: mad r1.xyz, cb3[15].xyzx, v0.wwww, r1.xyzx
  13: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  14: mov o8.xyz, r1.xyzx
  15: mov o3.xyzw, l(0,0,0,0)
  16: mov o4.xyzw, l(0,0,0,0)
  17: mul r1.x, v1.x, cb3[16].x
  18: mul r1.y, v1.x, cb3[17].x
  19: mul r1.z, v1.x, cb3[18].x
  20: mul r2.x, v1.y, cb3[16].y
  21: mul r2.y, v1.y, cb3[17].y
  22: mul r2.z, v1.y, cb3[18].y
  23: add r1.xyz, r1.xyzx, r2.xyzx
  24: mul r2.x, v1.z, cb3[16].z
  25: mul r2.y, v1.z, cb3[17].z
  26: mul r2.z, v1.z, cb3[18].z
  27: add r1.xyz, r1.xyzx, r2.xyzx
  28: dp3 r1.w, r1.xyzx, r1.xyzx
  29: rsq r1.w, r1.w
  30: mul r1.xyz, r1.wwww, r1.xyzx
  31: mov o5.xyz, r1.xyzx
  32: mov o5.w, l(0)
  33: mul r1.w, r1.y, r1.y
  34: mad r1.w, r1.x, r1.x, -r1.w
  35: mul r2.xyzw, r1.yzzx, r1.xyzz
  36: dp4 r1.x, cb2[41].xyzw, r2.xyzw
  37: dp4 r1.y, cb2[42].xyzw, r2.xyzw
  38: dp4 r1.z, cb2[43].xyzw, r2.xyzw
  39: mad o6.xyz, cb2[44].xyzx, r1.wwww, r1.xyzx
  40: mov o6.w, l(0)
  41: mul r0.y, r0.y, cb1[5].x
  42: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  43: mov o7.zw, r0.zzzw
  44: add o7.xy, r1.zzzz, r1.xwxx
  45: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
// Stats: 179 math, 4 textures, 13 branches
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" }
"#version 120

#ifdef VERTEX
uniform vec3 _WorldSpaceCameraPos;
uniform vec4 unity_4LightPosX0;
uniform vec4 unity_4LightPosY0;
uniform vec4 unity_4LightPosZ0;
uniform vec4 unity_4LightAtten0;
uniform vec4 unity_LightColor[8];
uniform vec4 unity_SHBr;
uniform vec4 unity_SHBg;
uniform vec4 unity_SHBb;
uniform vec4 unity_SHC;

uniform mat4 _Object2World;
uniform mat4 _World2Object;
uniform vec4 unity_ColorSpaceLuminance;
uniform vec4 _MainTex_ST;
uniform vec4 _DetailAlbedoMap_ST;
uniform float _UVSec;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
varying vec3 xlv_TEXCOORD8;
void main ()
{
  vec2 tmpvar_1;
  tmpvar_1 = gl_MultiTexCoord0.xy;
  vec2 tmpvar_2;
  tmpvar_2 = gl_MultiTexCoord1.xy;
  vec4 tmpvar_3;
  vec4 tmpvar_4;
  vec4 tmpvar_5;
  vec4 tmpvar_6;
  vec3 tmpvar_7;
  vec4 tmpvar_8;
  tmpvar_8 = (_Object2World * gl_Vertex);
  tmpvar_7 = tmpvar_8.xyz;
  tmpvar_3 = (gl_ModelViewProjectionMatrix * gl_Vertex);
  vec4 texcoord_9;
  texcoord_9.xy = ((gl_MultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  vec2 tmpvar_10;
  if ((_UVSec == 0.0)) {
    tmpvar_10 = tmpvar_1;
  } else {
    tmpvar_10 = tmpvar_2;
  };
  texcoord_9.zw = ((tmpvar_10 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  vec3 n_11;
  n_11 = (tmpvar_8.xyz - _WorldSpaceCameraPos);
  vec4 v_12;
  v_12.x = _World2Object[0].x;
  v_12.y = _World2Object[1].x;
  v_12.z = _World2Object[2].x;
  v_12.w = _World2Object[3].x;
  vec4 v_13;
  v_13.x = _World2Object[0].y;
  v_13.y = _World2Object[1].y;
  v_13.z = _World2Object[2].y;
  v_13.w = _World2Object[3].y;
  vec4 v_14;
  v_14.x = _World2Object[0].z;
  v_14.y = _World2Object[1].z;
  v_14.z = _World2Object[2].z;
  v_14.w = _World2Object[3].z;
  vec3 tmpvar_15;
  tmpvar_15 = normalize(((
    (v_12.xyz * gl_Normal.x)
   + 
    (v_13.xyz * gl_Normal.y)
  ) + (v_14.xyz * gl_Normal.z)));
  tmpvar_4.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_5.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_6.xyz = tmpvar_15;
  vec4 ambientOrLightmapUV_16;
  ambientOrLightmapUV_16.w = 0.0;
  vec3 col_17;
  vec4 ndotl_18;
  vec4 lengthSq_19;
  vec4 tmpvar_20;
  tmpvar_20 = (unity_4LightPosX0 - tmpvar_8.x);
  vec4 tmpvar_21;
  tmpvar_21 = (unity_4LightPosY0 - tmpvar_8.y);
  vec4 tmpvar_22;
  tmpvar_22 = (unity_4LightPosZ0 - tmpvar_8.z);
  lengthSq_19 = (tmpvar_20 * tmpvar_20);
  lengthSq_19 = (lengthSq_19 + (tmpvar_21 * tmpvar_21));
  lengthSq_19 = (lengthSq_19 + (tmpvar_22 * tmpvar_22));
  ndotl_18 = (tmpvar_20 * tmpvar_15.x);
  ndotl_18 = (ndotl_18 + (tmpvar_21 * tmpvar_15.y));
  ndotl_18 = (ndotl_18 + (tmpvar_22 * tmpvar_15.z));
  vec4 tmpvar_23;
  tmpvar_23 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_18 * inversesqrt(lengthSq_19)));
  ndotl_18 = tmpvar_23;
  vec4 tmpvar_24;
  tmpvar_24 = (tmpvar_23 * (1.0/((1.0 + 
    (lengthSq_19 * unity_4LightAtten0)
  ))));
  col_17 = (unity_LightColor[0].xyz * tmpvar_24.x);
  col_17 = (col_17 + (unity_LightColor[1].xyz * tmpvar_24.y));
  col_17 = (col_17 + (unity_LightColor[2].xyz * tmpvar_24.z));
  col_17 = (col_17 + (unity_LightColor[3].xyz * tmpvar_24.w));
  ambientOrLightmapUV_16.xyz = col_17;
  vec3 ambient_25;
  ambient_25 = ambientOrLightmapUV_16.xyz;
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    ambient_25 = (col_17 * ((col_17 * 
      ((col_17 * 0.305306) + 0.6821711)
    ) + 0.01252288));
  };
  vec3 x1_26;
  vec4 tmpvar_27;
  tmpvar_27 = (tmpvar_15.xyzz * tmpvar_15.yzzx);
  x1_26.x = dot (unity_SHBr, tmpvar_27);
  x1_26.y = dot (unity_SHBg, tmpvar_27);
  x1_26.z = dot (unity_SHBb, tmpvar_27);
  ambient_25 = (ambient_25 + (x1_26 + (unity_SHC.xyz * 
    ((tmpvar_15.x * tmpvar_15.x) - (tmpvar_15.y * tmpvar_15.y))
  )));
  ambientOrLightmapUV_16.xyz = ambient_25;
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = texcoord_9;
  xlv_TEXCOORD1 = n_11;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  xlv_TEXCOORD5 = ambientOrLightmapUV_16;
  xlv_TEXCOORD8 = tmpvar_7;
}


#endif
#ifdef FRAGMENT
#extension GL_ARB_shader_texture_lod : enable
uniform vec4 _WorldSpaceLightPos0;
uniform vec4 unity_SHAr;
uniform vec4 unity_SHAg;
uniform vec4 unity_SHAb;
uniform samplerCube unity_SpecCube0;
uniform samplerCube unity_SpecCube1;
uniform vec4 unity_SpecCube0_BoxMax;
uniform vec4 unity_SpecCube0_BoxMin;
uniform vec4 unity_SpecCube0_ProbePosition;
uniform vec4 unity_SpecCube0_HDR;
uniform vec4 unity_SpecCube1_BoxMax;
uniform vec4 unity_SpecCube1_BoxMin;
uniform vec4 unity_SpecCube1_ProbePosition;
uniform vec4 unity_SpecCube1_HDR;
uniform vec4 unity_ColorSpaceDielectricSpec;
uniform vec4 unity_ColorSpaceLuminance;
uniform vec4 _LightColor0;
uniform vec4 _Color;
uniform sampler2D _MainTex;
uniform float _Metallic;
uniform float _Glossiness;
uniform sampler2D _OcclusionMap;
uniform float _OcclusionStrength;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
varying vec3 xlv_TEXCOORD8;
void main ()
{
  vec4 c_1;
  vec3 tmpvar_2;
  tmpvar_2 = (_Color.xyz * texture2D (_MainTex, xlv_TEXCOORD0.xy).xyz);
  vec3 tmpvar_3;
  vec3 tmpvar_4;
  tmpvar_4 = mix (unity_ColorSpaceDielectricSpec.xyz, tmpvar_2, vec3(_Metallic));
  float tmpvar_5;
  tmpvar_5 = (unity_ColorSpaceDielectricSpec.w - (_Metallic * unity_ColorSpaceDielectricSpec.w));
  tmpvar_3 = (tmpvar_2 * tmpvar_5);
  vec3 tmpvar_6;
  tmpvar_6 = normalize(xlv_TEXCOORD2_2.xyz);
  vec3 tmpvar_7;
  tmpvar_7 = normalize(xlv_TEXCOORD1);
  float tmpvar_8;
  tmpvar_8 = ((1.0 - _OcclusionStrength) + (texture2D (_OcclusionMap, xlv_TEXCOORD0.xy).y * _OcclusionStrength));
  float tmpvar_9;
  tmpvar_9 = (1.0 - _Glossiness);
  vec3 tmpvar_10;
  tmpvar_10 = (tmpvar_7 - (2.0 * (
    dot (tmpvar_6, tmpvar_7)
   * tmpvar_6)));
  vec3 tmpvar_11;
  vec3 tmpvar_12;
  tmpvar_12 = vec3(0.0, 0.0, 0.0);
  vec3 ambient_13;
  vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = tmpvar_6;
  vec3 x_15;
  x_15.x = dot (unity_SHAr, tmpvar_14);
  x_15.y = dot (unity_SHAg, tmpvar_14);
  x_15.z = dot (unity_SHAb, tmpvar_14);
  vec3 tmpvar_16;
  tmpvar_16 = max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD5.xyz + x_15));
  ambient_13 = tmpvar_16;
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    ambient_13 = max (((1.055 * 
      pow (max (tmpvar_16, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
    ) - 0.055), vec3(0.0, 0.0, 0.0));
  };
  tmpvar_12 = (ambient_13 * tmpvar_8);
  tmpvar_11 = vec3(0.0, 0.0, 0.0);
  vec3 specular_17;
  vec3 worldRefl_18;
  worldRefl_18 = tmpvar_10;
  vec3 worldPos_19;
  worldPos_19 = xlv_TEXCOORD8;
  if ((unity_SpecCube0_ProbePosition.w > 0.0)) {
    vec3 tmpvar_20;
    tmpvar_20 = normalize(tmpvar_10);
    vec3 tmpvar_21;
    tmpvar_21 = ((unity_SpecCube0_BoxMax.xyz - xlv_TEXCOORD8) / tmpvar_20);
    vec3 tmpvar_22;
    tmpvar_22 = ((unity_SpecCube0_BoxMin.xyz - xlv_TEXCOORD8) / tmpvar_20);
    bvec3 tmpvar_23;
    tmpvar_23 = greaterThan (tmpvar_20, vec3(0.0, 0.0, 0.0));
    float tmpvar_24;
    if (tmpvar_23.x) {
      tmpvar_24 = tmpvar_21.x;
    } else {
      tmpvar_24 = tmpvar_22.x;
    };
    float tmpvar_25;
    if (tmpvar_23.y) {
      tmpvar_25 = tmpvar_21.y;
    } else {
      tmpvar_25 = tmpvar_22.y;
    };
    float tmpvar_26;
    if (tmpvar_23.z) {
      tmpvar_26 = tmpvar_21.z;
    } else {
      tmpvar_26 = tmpvar_22.z;
    };
    worldPos_19 = (xlv_TEXCOORD8 - unity_SpecCube0_ProbePosition.xyz);
    worldRefl_18 = (worldPos_19 + (tmpvar_20 * min (
      min (tmpvar_24, tmpvar_25)
    , tmpvar_26)));
  };
  vec4 tmpvar_27;
  tmpvar_27.xyz = worldRefl_18;
  tmpvar_27.w = ((tmpvar_9 * (1.7 - 
    (0.7 * tmpvar_9)
  )) * 6.0);
  vec4 tmpvar_28;
  tmpvar_28 = textureCubeLod (unity_SpecCube0, worldRefl_18, tmpvar_27.w);
  vec3 tmpvar_29;
  tmpvar_29 = ((unity_SpecCube0_HDR.x * pow (tmpvar_28.w, unity_SpecCube0_HDR.y)) * tmpvar_28.xyz);
  if ((unity_SpecCube0_BoxMin.w < 0.99999)) {
    vec3 worldRefl_30;
    worldRefl_30 = tmpvar_10;
    vec3 worldPos_31;
    worldPos_31 = xlv_TEXCOORD8;
    if ((unity_SpecCube1_ProbePosition.w > 0.0)) {
      vec3 tmpvar_32;
      tmpvar_32 = normalize(tmpvar_10);
      vec3 tmpvar_33;
      tmpvar_33 = ((unity_SpecCube1_BoxMax.xyz - xlv_TEXCOORD8) / tmpvar_32);
      vec3 tmpvar_34;
      tmpvar_34 = ((unity_SpecCube1_BoxMin.xyz - xlv_TEXCOORD8) / tmpvar_32);
      bvec3 tmpvar_35;
      tmpvar_35 = greaterThan (tmpvar_32, vec3(0.0, 0.0, 0.0));
      float tmpvar_36;
      if (tmpvar_35.x) {
        tmpvar_36 = tmpvar_33.x;
      } else {
        tmpvar_36 = tmpvar_34.x;
      };
      float tmpvar_37;
      if (tmpvar_35.y) {
        tmpvar_37 = tmpvar_33.y;
      } else {
        tmpvar_37 = tmpvar_34.y;
      };
      float tmpvar_38;
      if (tmpvar_35.z) {
        tmpvar_38 = tmpvar_33.z;
      } else {
        tmpvar_38 = tmpvar_34.z;
      };
      worldPos_31 = (xlv_TEXCOORD8 - unity_SpecCube1_ProbePosition.xyz);
      worldRefl_30 = (worldPos_31 + (tmpvar_32 * min (
        min (tmpvar_36, tmpvar_37)
      , tmpvar_38)));
    };
    vec4 tmpvar_39;
    tmpvar_39.xyz = worldRefl_30;
    tmpvar_39.w = ((tmpvar_9 * (1.7 - 
      (0.7 * tmpvar_9)
    )) * 6.0);
    vec4 tmpvar_40;
    tmpvar_40 = textureCubeLod (unity_SpecCube1, worldRefl_30, tmpvar_39.w);
    specular_17 = mix (((unity_SpecCube1_HDR.x * 
      pow (tmpvar_40.w, unity_SpecCube1_HDR.y)
    ) * tmpvar_40.xyz), tmpvar_29, unity_SpecCube0_BoxMin.www);
  } else {
    specular_17 = tmpvar_29;
  };
  tmpvar_11 = (specular_17 * tmpvar_8);
  vec3 viewDir_41;
  viewDir_41 = -(tmpvar_7);
  float surfaceReduction_42;
  float specularTerm_43;
  float tmpvar_44;
  tmpvar_44 = (1.0 - _Glossiness);
  vec3 tmpvar_45;
  vec3 inVec_46;
  inVec_46 = (_WorldSpaceLightPos0.xyz + viewDir_41);
  tmpvar_45 = (inVec_46 * inversesqrt(max (0.001, 
    dot (inVec_46, inVec_46)
  )));
  float tmpvar_47;
  tmpvar_47 = dot (tmpvar_6, viewDir_41);
  vec3 tmpvar_48;
  if ((tmpvar_47 < 0.0)) {
    tmpvar_48 = (tmpvar_6 + (viewDir_41 * (
      -(tmpvar_47)
     + 1e-05)));
  } else {
    tmpvar_48 = tmpvar_6;
  };
  float tmpvar_49;
  tmpvar_49 = max (0.0, dot (tmpvar_48, _WorldSpaceLightPos0.xyz));
  float tmpvar_50;
  tmpvar_50 = max (0.0, dot (tmpvar_48, tmpvar_45));
  float tmpvar_51;
  tmpvar_51 = max (0.0, dot (tmpvar_48, viewDir_41));
  float tmpvar_52;
  tmpvar_52 = max (0.0, dot (_WorldSpaceLightPos0.xyz, tmpvar_45));
  float tmpvar_53;
  tmpvar_53 = (tmpvar_44 * tmpvar_44);
  float tmpvar_54;
  tmpvar_54 = (tmpvar_44 * tmpvar_44);
  float tmpvar_55;
  tmpvar_55 = (tmpvar_54 * tmpvar_54);
  float tmpvar_56;
  tmpvar_56 = (((tmpvar_50 * tmpvar_50) * (tmpvar_55 - 1.0)) + 1.0);
  float x_57;
  x_57 = (1.0 - tmpvar_49);
  float x_58;
  x_58 = (1.0 - tmpvar_51);
  float tmpvar_59;
  tmpvar_59 = (0.5 + ((2.0 * tmpvar_52) * (tmpvar_52 * tmpvar_44)));
  float tmpvar_60;
  tmpvar_60 = ((1.0 + (
    (tmpvar_59 - 1.0)
   * 
    ((x_57 * x_57) * ((x_57 * x_57) * x_57))
  )) * (1.0 + (
    (tmpvar_59 - 1.0)
   * 
    ((x_58 * x_58) * ((x_58 * x_58) * x_58))
  )));
  float tmpvar_61;
  tmpvar_61 = (((2.0 / 
    (((tmpvar_49 * (
      (tmpvar_51 * (1.0 - tmpvar_53))
     + tmpvar_53)) + (tmpvar_51 * (
      (tmpvar_49 * (1.0 - tmpvar_53))
     + tmpvar_53))) + 1e-05)
  ) * (tmpvar_55 / 
    (((3.141593 * tmpvar_56) * tmpvar_56) + 1e-07)
  )) * 0.7853982);
  specularTerm_43 = tmpvar_61;
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    specularTerm_43 = sqrt(max (0.0001, tmpvar_61));
  };
  float tmpvar_62;
  tmpvar_62 = max (0.0, (specularTerm_43 * tmpvar_49));
  specularTerm_43 = tmpvar_62;
  float tmpvar_63;
  tmpvar_63 = (tmpvar_60 * tmpvar_49);
  float tmpvar_64;
  tmpvar_64 = (tmpvar_44 * tmpvar_44);
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    surfaceReduction_42 = (1.0 - ((0.28 * tmpvar_64) * tmpvar_44));
  } else {
    surfaceReduction_42 = (1.0/(((tmpvar_64 * tmpvar_64) + 1.0)));
  };
  float x_65;
  x_65 = (1.0 - tmpvar_52);
  float x_66;
  x_66 = (1.0 - tmpvar_51);
  vec3 tmpvar_67;
  tmpvar_67 = (((tmpvar_3 * 
    (tmpvar_12 + (_LightColor0.xyz * tmpvar_63))
  ) + (
    (tmpvar_62 * _LightColor0.xyz)
   * 
    (tmpvar_4 + ((1.0 - tmpvar_4) * ((x_65 * x_65) * (
      (x_65 * x_65)
     * x_65))))
  )) + ((surfaceReduction_42 * tmpvar_11) * mix (tmpvar_4, vec3(
    clamp ((_Glossiness + (1.0 - tmpvar_5)), 0.0, 1.0)
  ), vec3(
    ((x_66 * x_66) * ((x_66 * x_66) * x_66))
  ))));
  vec4 tmpvar_68;
  tmpvar_68.w = 1.0;
  tmpvar_68.xyz = tmpvar_67;
  c_1.w = tmpvar_68.w;
  c_1.xyz = tmpvar_67;
  c_1.xyz = c_1.xyz;
  vec4 xlat_varoutput_69;
  xlat_varoutput_69.xyz = c_1.xyz;
  xlat_varoutput_69.w = 1.0;
  gl_FragData[0] = xlat_varoutput_69;
}


#endif
"
}
SubProgram "d3d9 " {
// Stats: 67 math
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Matrix 8 [_Object2World] 3
Matrix 11 [_World2Object] 3
Matrix 4 [glstate_matrix_mvp]
Vector 25 [_DetailAlbedoMap_ST]
Vector 24 [_MainTex_ST]
Float 26 [_UVSec]
Vector 14 [_WorldSpaceCameraPos]
Vector 18 [unity_4LightAtten0]
Vector 15 [unity_4LightPosX0]
Vector 16 [unity_4LightPosY0]
Vector 17 [unity_4LightPosZ0]
Vector 23 [unity_ColorSpaceLuminance]
Vector 0 [unity_LightColor0]
Vector 1 [unity_LightColor1]
Vector 2 [unity_LightColor2]
Vector 3 [unity_LightColor3]
Vector 21 [unity_SHBb]
Vector 20 [unity_SHBg]
Vector 19 [unity_SHBr]
Vector 22 [unity_SHC]
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   row_major float4x4 _Object2World;
//   float _UVSec;
//   row_major float4x4 _World2Object;
//   float3 _WorldSpaceCameraPos;
//   row_major float4x4 glstate_matrix_mvp;
//   float4 unity_4LightAtten0;
//   float4 unity_4LightPosX0;
//   float4 unity_4LightPosY0;
//   float4 unity_4LightPosZ0;
//   float4 unity_ColorSpaceLuminance;
//   float4 unity_LightColor[8];
//   float4 unity_SHBb;
//   float4 unity_SHBg;
//   float4 unity_SHBr;
//   float4 unity_SHC;
//
//
// Registers:
//
//   Name                      Reg   Size
//   ------------------------- ----- ----
//   unity_LightColor          c0       4
//   glstate_matrix_mvp        c4       4
//   _Object2World             c8       3
//   _World2Object             c11      3
//   _WorldSpaceCameraPos      c14      1
//   unity_4LightPosX0         c15      1
//   unity_4LightPosY0         c16      1
//   unity_4LightPosZ0         c17      1
//   unity_4LightAtten0        c18      1
//   unity_SHBr                c19      1
//   unity_SHBg                c20      1
//   unity_SHBb                c21      1
//   unity_SHC                 c22      1
//   unity_ColorSpaceLuminance c23      1
//   _MainTex_ST               c24      1
//   _DetailAlbedoMap_ST       c25      1
//   _UVSec                    c26      1
//

    vs_3_0
    def c27, 0, 1, 0.305306017, 0.682171106
    def c28, 0.0125228781, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6
    dcl_texcoord8 o7.xyz
    dp4 o0.x, c4, v0
    dp4 o0.y, c5, v0
    dp4 o0.z, c6, v0
    dp4 o0.w, c7, v0
    mad o1.xy, v2, c24, c24.zwzw
    abs r0.x, c26.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c25.xyxy, c25
    dp4 r0.x, c8, v0
    dp4 r0.y, c9, v0
    dp4 r0.z, c10, v0
    add o2.xyz, r0, -c14
    add r1, -r0.z, c17
    mov o7.xyz, r0
    add r2, -r0.x, c15
    add r0, -r0.y, c16
    mul r3.xyz, c12, v1.y
    mad r3.xyz, c11, v1.x, r3
    mad r3.xyz, c13, v1.z, r3
    nrm r4.xyz, r3
    mul r3, r0, r4.y
    mul r0, r0, r0
    mad r0, r2, r2, r0
    mad r2, r2, r4.x, r3
    mad r2, r1, r4.z, r2
    mad r0, r1, r1, r0
    rsq r1.x, r0.x
    rsq r1.y, r0.y
    rsq r1.z, r0.z
    rsq r1.w, r0.w
    mov r3.y, c27.y
    mad r0, r0, c18, r3.y
    mul r1, r1, r2
    max r1, r1, c27.x
    rcp r2.x, r0.x
    rcp r2.y, r0.y
    rcp r2.z, r0.z
    rcp r2.w, r0.w
    mul r0, r1, r2
    mul r1.xyz, r0.y, c1
    mad r1.xyz, c0, r0.x, r1
    mad r0.xyz, c2, r0.z, r1
    mad r0.xyz, c3, r0.w, r0
    mad r1.xyz, r0, c27.z, c27.w
    mad r1.xyz, r0, r1, c28.x
    mad r1.xyz, r0, r1, -r0
    abs r0.w, c23.w
    sge r0.w, -r0.w, r0.w
    mad r0.xyz, r0.w, r1, r0
    mul r0.w, r4.y, r4.y
    mad r0.w, r4.x, r4.x, -r0.w
    mul r1, r4.yzzx, r4.xyzz
    mov o5.xyz, r4
    dp4 r2.x, c19, r1
    dp4 r2.y, c20, r1
    dp4 r2.z, c21, r1
    mad r1.xyz, c22, r0.w, r2
    add o6.xyz, r0, r1
    mov o3, c27.x
    mov o4, c27.x
    mov o5.w, c27.x
    mov o6.w, c27.x

// approximately 66 instruction slots used
"
}
SubProgram "d3d11 " {
// Stats: 57 math
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
ConstBuffer "$Globals" 240
Vector 48 [unity_ColorSpaceLuminance]
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 32 [unity_4LightPosX0]
Vector 48 [unity_4LightPosY0]
Vector 64 [unity_4LightPosZ0]
Vector 80 [unity_4LightAtten0]
Vector 96 [unity_LightColor0]
Vector 112 [unity_LightColor1]
Vector 128 [unity_LightColor2]
Vector 144 [unity_LightColor3]
Vector 160 [unity_LightColor4]
Vector 176 [unity_LightColor5]
Vector 192 [unity_LightColor6]
Vector 208 [unity_LightColor7]
Vector 656 [unity_SHBr]
Vector 672 [unity_SHBg]
Vector 688 [unity_SHBb]
Vector 704 [unity_SHC]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 8   xyz         7     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer cb0[14], immediateIndexed
      dcl_constantbuffer cb1[5], immediateIndexed
      dcl_constantbuffer cb2[45], immediateIndexed
      dcl_constantbuffer cb3[19], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyz
      dcl_temps 5
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: mad o0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   4: eq r0.x, cb0[13].z, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[11].xxxy, cb0[11].zzzw
   7: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  13: mov o3.xyzw, l(0,0,0,0)
  14: mov o4.xyzw, l(0,0,0,0)
  15: mul r1.x, v1.x, cb3[16].x
  16: mul r1.y, v1.x, cb3[17].x
  17: mul r1.z, v1.x, cb3[18].x
  18: mul r2.x, v1.y, cb3[16].y
  19: mul r2.y, v1.y, cb3[17].y
  20: mul r2.z, v1.y, cb3[18].y
  21: add r1.xyz, r1.xyzx, r2.xyzx
  22: mul r2.x, v1.z, cb3[16].z
  23: mul r2.y, v1.z, cb3[17].z
  24: mul r2.z, v1.z, cb3[18].z
  25: add r1.xyz, r1.xyzx, r2.xyzx
  26: dp3 r0.w, r1.xyzx, r1.xyzx
  27: rsq r0.w, r0.w
  28: mul r1.xyz, r0.wwww, r1.xyzx
  29: mov o5.xyz, r1.xyzx
  30: mov o5.w, l(0)
  31: add r2.xyzw, -r0.yyyy, cb2[3].xyzw
  32: mul r3.xyzw, r1.yyyy, r2.xyzw
  33: mul r2.xyzw, r2.xyzw, r2.xyzw
  34: add r4.xyzw, -r0.xxxx, cb2[2].xyzw
  35: mad r3.xyzw, r4.xyzw, r1.xxxx, r3.xyzw
  36: mad r2.xyzw, r4.xyzw, r4.xyzw, r2.xyzw
  37: add r4.xyzw, -r0.zzzz, cb2[4].xyzw
  38: mov o7.xyz, r0.xyzx
  39: mad r0.xyzw, r4.xyzw, r1.zzzz, r3.xyzw
  40: mad r2.xyzw, r4.xyzw, r4.xyzw, r2.xyzw
  41: rsq r3.xyzw, r2.xyzw
  42: mad r2.xyzw, r2.xyzw, cb2[5].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  43: div r2.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r2.xyzw
  44: mul r0.xyzw, r0.xyzw, r3.xyzw
  45: max r0.xyzw, r0.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  46: mul r0.xyzw, r2.xyzw, r0.xyzw
  47: mul r2.xyz, r0.yyyy, cb2[7].xyzx
  48: mad r2.xyz, cb2[6].xyzx, r0.xxxx, r2.xyzx
  49: mad r0.xyz, cb2[8].xyzx, r0.zzzz, r2.xyzx
  50: mad r0.xyz, cb2[9].xyzx, r0.wwww, r0.xyzx
  51: mad r2.xyz, r0.xyzx, l(0.305306, 0.305306, 0.305306, 0.000000), l(0.682171, 0.682171, 0.682171, 0.000000)
  52: mad r2.xyz, r0.xyzx, r2.xyzx, l(0.012523, 0.012523, 0.012523, 0.000000)
  53: mul r2.xyz, r0.xyzx, r2.xyzx
  54: eq r0.w, cb0[3].w, l(0.000000)
  55: movc r0.xyz, r0.wwww, r2.xyzx, r0.xyzx
  56: mul r0.w, r1.y, r1.y
  57: mad r0.w, r1.x, r1.x, -r0.w
  58: mul r1.xyzw, r1.yzzx, r1.xyzz
  59: dp4 r2.x, cb2[41].xyzw, r1.xyzw
  60: dp4 r2.y, cb2[42].xyzw, r1.xyzw
  61: dp4 r2.z, cb2[43].xyzw, r1.xyzw
  62: mad r1.xyz, cb2[44].xyzx, r0.wwww, r2.xyzx
  63: add o6.xyz, r0.xyzx, r1.xyzx
  64: mov o6.w, l(0)
  65: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
// Stats: 180 math, 5 textures, 13 branches
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" }
"#version 120

#ifdef VERTEX
uniform vec3 _WorldSpaceCameraPos;
uniform vec4 _ProjectionParams;
uniform vec4 unity_4LightPosX0;
uniform vec4 unity_4LightPosY0;
uniform vec4 unity_4LightPosZ0;
uniform vec4 unity_4LightAtten0;
uniform vec4 unity_LightColor[8];
uniform vec4 unity_SHBr;
uniform vec4 unity_SHBg;
uniform vec4 unity_SHBb;
uniform vec4 unity_SHC;

uniform mat4 _Object2World;
uniform mat4 _World2Object;
uniform vec4 unity_ColorSpaceLuminance;
uniform vec4 _MainTex_ST;
uniform vec4 _DetailAlbedoMap_ST;
uniform float _UVSec;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
varying vec4 xlv_TEXCOORD6;
varying vec3 xlv_TEXCOORD8;
void main ()
{
  vec2 tmpvar_1;
  tmpvar_1 = gl_MultiTexCoord0.xy;
  vec2 tmpvar_2;
  tmpvar_2 = gl_MultiTexCoord1.xy;
  vec4 tmpvar_3;
  vec4 tmpvar_4;
  vec4 tmpvar_5;
  vec4 tmpvar_6;
  vec3 tmpvar_7;
  vec4 tmpvar_8;
  tmpvar_8 = (_Object2World * gl_Vertex);
  tmpvar_7 = tmpvar_8.xyz;
  tmpvar_3 = (gl_ModelViewProjectionMatrix * gl_Vertex);
  vec4 texcoord_9;
  texcoord_9.xy = ((gl_MultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  vec2 tmpvar_10;
  if ((_UVSec == 0.0)) {
    tmpvar_10 = tmpvar_1;
  } else {
    tmpvar_10 = tmpvar_2;
  };
  texcoord_9.zw = ((tmpvar_10 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  vec3 n_11;
  n_11 = (tmpvar_8.xyz - _WorldSpaceCameraPos);
  vec4 v_12;
  v_12.x = _World2Object[0].x;
  v_12.y = _World2Object[1].x;
  v_12.z = _World2Object[2].x;
  v_12.w = _World2Object[3].x;
  vec4 v_13;
  v_13.x = _World2Object[0].y;
  v_13.y = _World2Object[1].y;
  v_13.z = _World2Object[2].y;
  v_13.w = _World2Object[3].y;
  vec4 v_14;
  v_14.x = _World2Object[0].z;
  v_14.y = _World2Object[1].z;
  v_14.z = _World2Object[2].z;
  v_14.w = _World2Object[3].z;
  vec3 tmpvar_15;
  tmpvar_15 = normalize(((
    (v_12.xyz * gl_Normal.x)
   + 
    (v_13.xyz * gl_Normal.y)
  ) + (v_14.xyz * gl_Normal.z)));
  tmpvar_4.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_5.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_6.xyz = tmpvar_15;
  vec4 o_16;
  vec4 tmpvar_17;
  tmpvar_17 = (tmpvar_3 * 0.5);
  vec2 tmpvar_18;
  tmpvar_18.x = tmpvar_17.x;
  tmpvar_18.y = (tmpvar_17.y * _ProjectionParams.x);
  o_16.xy = (tmpvar_18 + tmpvar_17.w);
  o_16.zw = tmpvar_3.zw;
  vec4 ambientOrLightmapUV_19;
  ambientOrLightmapUV_19.w = 0.0;
  vec3 col_20;
  vec4 ndotl_21;
  vec4 lengthSq_22;
  vec4 tmpvar_23;
  tmpvar_23 = (unity_4LightPosX0 - tmpvar_8.x);
  vec4 tmpvar_24;
  tmpvar_24 = (unity_4LightPosY0 - tmpvar_8.y);
  vec4 tmpvar_25;
  tmpvar_25 = (unity_4LightPosZ0 - tmpvar_8.z);
  lengthSq_22 = (tmpvar_23 * tmpvar_23);
  lengthSq_22 = (lengthSq_22 + (tmpvar_24 * tmpvar_24));
  lengthSq_22 = (lengthSq_22 + (tmpvar_25 * tmpvar_25));
  ndotl_21 = (tmpvar_23 * tmpvar_15.x);
  ndotl_21 = (ndotl_21 + (tmpvar_24 * tmpvar_15.y));
  ndotl_21 = (ndotl_21 + (tmpvar_25 * tmpvar_15.z));
  vec4 tmpvar_26;
  tmpvar_26 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_21 * inversesqrt(lengthSq_22)));
  ndotl_21 = tmpvar_26;
  vec4 tmpvar_27;
  tmpvar_27 = (tmpvar_26 * (1.0/((1.0 + 
    (lengthSq_22 * unity_4LightAtten0)
  ))));
  col_20 = (unity_LightColor[0].xyz * tmpvar_27.x);
  col_20 = (col_20 + (unity_LightColor[1].xyz * tmpvar_27.y));
  col_20 = (col_20 + (unity_LightColor[2].xyz * tmpvar_27.z));
  col_20 = (col_20 + (unity_LightColor[3].xyz * tmpvar_27.w));
  ambientOrLightmapUV_19.xyz = col_20;
  vec3 ambient_28;
  ambient_28 = ambientOrLightmapUV_19.xyz;
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    ambient_28 = (col_20 * ((col_20 * 
      ((col_20 * 0.305306) + 0.6821711)
    ) + 0.01252288));
  };
  vec3 x1_29;
  vec4 tmpvar_30;
  tmpvar_30 = (tmpvar_15.xyzz * tmpvar_15.yzzx);
  x1_29.x = dot (unity_SHBr, tmpvar_30);
  x1_29.y = dot (unity_SHBg, tmpvar_30);
  x1_29.z = dot (unity_SHBb, tmpvar_30);
  ambient_28 = (ambient_28 + (x1_29 + (unity_SHC.xyz * 
    ((tmpvar_15.x * tmpvar_15.x) - (tmpvar_15.y * tmpvar_15.y))
  )));
  ambientOrLightmapUV_19.xyz = ambient_28;
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = texcoord_9;
  xlv_TEXCOORD1 = n_11;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  xlv_TEXCOORD5 = ambientOrLightmapUV_19;
  xlv_TEXCOORD6 = o_16;
  xlv_TEXCOORD8 = tmpvar_7;
}


#endif
#ifdef FRAGMENT
#extension GL_ARB_shader_texture_lod : enable
uniform vec4 _WorldSpaceLightPos0;
uniform vec4 unity_SHAr;
uniform vec4 unity_SHAg;
uniform vec4 unity_SHAb;
uniform samplerCube unity_SpecCube0;
uniform samplerCube unity_SpecCube1;
uniform vec4 unity_SpecCube0_BoxMax;
uniform vec4 unity_SpecCube0_BoxMin;
uniform vec4 unity_SpecCube0_ProbePosition;
uniform vec4 unity_SpecCube0_HDR;
uniform vec4 unity_SpecCube1_BoxMax;
uniform vec4 unity_SpecCube1_BoxMin;
uniform vec4 unity_SpecCube1_ProbePosition;
uniform vec4 unity_SpecCube1_HDR;
uniform vec4 unity_ColorSpaceDielectricSpec;
uniform vec4 unity_ColorSpaceLuminance;
uniform vec4 _LightColor0;
uniform vec4 _Color;
uniform sampler2D _MainTex;
uniform float _Metallic;
uniform float _Glossiness;
uniform sampler2D _OcclusionMap;
uniform float _OcclusionStrength;
uniform sampler2D _ShadowMapTexture;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
varying vec4 xlv_TEXCOORD6;
varying vec3 xlv_TEXCOORD8;
void main ()
{
  vec4 c_1;
  vec3 tmpvar_2;
  tmpvar_2 = (_Color.xyz * texture2D (_MainTex, xlv_TEXCOORD0.xy).xyz);
  vec3 tmpvar_3;
  vec3 tmpvar_4;
  tmpvar_4 = mix (unity_ColorSpaceDielectricSpec.xyz, tmpvar_2, vec3(_Metallic));
  float tmpvar_5;
  tmpvar_5 = (unity_ColorSpaceDielectricSpec.w - (_Metallic * unity_ColorSpaceDielectricSpec.w));
  tmpvar_3 = (tmpvar_2 * tmpvar_5);
  vec3 tmpvar_6;
  tmpvar_6 = normalize(xlv_TEXCOORD2_2.xyz);
  vec3 tmpvar_7;
  tmpvar_7 = normalize(xlv_TEXCOORD1);
  float tmpvar_8;
  tmpvar_8 = ((1.0 - _OcclusionStrength) + (texture2D (_OcclusionMap, xlv_TEXCOORD0.xy).y * _OcclusionStrength));
  float tmpvar_9;
  tmpvar_9 = (1.0 - _Glossiness);
  vec3 tmpvar_10;
  tmpvar_10 = (tmpvar_7 - (2.0 * (
    dot (tmpvar_6, tmpvar_7)
   * tmpvar_6)));
  vec3 tmpvar_11;
  vec3 tmpvar_12;
  vec3 tmpvar_13;
  tmpvar_13 = vec3(0.0, 0.0, 0.0);
  tmpvar_12 = (_LightColor0.xyz * texture2DProj (_ShadowMapTexture, xlv_TEXCOORD6).x);
  vec3 ambient_14;
  vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = tmpvar_6;
  vec3 x_16;
  x_16.x = dot (unity_SHAr, tmpvar_15);
  x_16.y = dot (unity_SHAg, tmpvar_15);
  x_16.z = dot (unity_SHAb, tmpvar_15);
  vec3 tmpvar_17;
  tmpvar_17 = max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD5.xyz + x_16));
  ambient_14 = tmpvar_17;
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    ambient_14 = max (((1.055 * 
      pow (max (tmpvar_17, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
    ) - 0.055), vec3(0.0, 0.0, 0.0));
  };
  tmpvar_13 = (ambient_14 * tmpvar_8);
  tmpvar_11 = vec3(0.0, 0.0, 0.0);
  vec3 specular_18;
  vec3 worldRefl_19;
  worldRefl_19 = tmpvar_10;
  vec3 worldPos_20;
  worldPos_20 = xlv_TEXCOORD8;
  if ((unity_SpecCube0_ProbePosition.w > 0.0)) {
    vec3 tmpvar_21;
    tmpvar_21 = normalize(tmpvar_10);
    vec3 tmpvar_22;
    tmpvar_22 = ((unity_SpecCube0_BoxMax.xyz - xlv_TEXCOORD8) / tmpvar_21);
    vec3 tmpvar_23;
    tmpvar_23 = ((unity_SpecCube0_BoxMin.xyz - xlv_TEXCOORD8) / tmpvar_21);
    bvec3 tmpvar_24;
    tmpvar_24 = greaterThan (tmpvar_21, vec3(0.0, 0.0, 0.0));
    float tmpvar_25;
    if (tmpvar_24.x) {
      tmpvar_25 = tmpvar_22.x;
    } else {
      tmpvar_25 = tmpvar_23.x;
    };
    float tmpvar_26;
    if (tmpvar_24.y) {
      tmpvar_26 = tmpvar_22.y;
    } else {
      tmpvar_26 = tmpvar_23.y;
    };
    float tmpvar_27;
    if (tmpvar_24.z) {
      tmpvar_27 = tmpvar_22.z;
    } else {
      tmpvar_27 = tmpvar_23.z;
    };
    worldPos_20 = (xlv_TEXCOORD8 - unity_SpecCube0_ProbePosition.xyz);
    worldRefl_19 = (worldPos_20 + (tmpvar_21 * min (
      min (tmpvar_25, tmpvar_26)
    , tmpvar_27)));
  };
  vec4 tmpvar_28;
  tmpvar_28.xyz = worldRefl_19;
  tmpvar_28.w = ((tmpvar_9 * (1.7 - 
    (0.7 * tmpvar_9)
  )) * 6.0);
  vec4 tmpvar_29;
  tmpvar_29 = textureCubeLod (unity_SpecCube0, worldRefl_19, tmpvar_28.w);
  vec3 tmpvar_30;
  tmpvar_30 = ((unity_SpecCube0_HDR.x * pow (tmpvar_29.w, unity_SpecCube0_HDR.y)) * tmpvar_29.xyz);
  if ((unity_SpecCube0_BoxMin.w < 0.99999)) {
    vec3 worldRefl_31;
    worldRefl_31 = tmpvar_10;
    vec3 worldPos_32;
    worldPos_32 = xlv_TEXCOORD8;
    if ((unity_SpecCube1_ProbePosition.w > 0.0)) {
      vec3 tmpvar_33;
      tmpvar_33 = normalize(tmpvar_10);
      vec3 tmpvar_34;
      tmpvar_34 = ((unity_SpecCube1_BoxMax.xyz - xlv_TEXCOORD8) / tmpvar_33);
      vec3 tmpvar_35;
      tmpvar_35 = ((unity_SpecCube1_BoxMin.xyz - xlv_TEXCOORD8) / tmpvar_33);
      bvec3 tmpvar_36;
      tmpvar_36 = greaterThan (tmpvar_33, vec3(0.0, 0.0, 0.0));
      float tmpvar_37;
      if (tmpvar_36.x) {
        tmpvar_37 = tmpvar_34.x;
      } else {
        tmpvar_37 = tmpvar_35.x;
      };
      float tmpvar_38;
      if (tmpvar_36.y) {
        tmpvar_38 = tmpvar_34.y;
      } else {
        tmpvar_38 = tmpvar_35.y;
      };
      float tmpvar_39;
      if (tmpvar_36.z) {
        tmpvar_39 = tmpvar_34.z;
      } else {
        tmpvar_39 = tmpvar_35.z;
      };
      worldPos_32 = (xlv_TEXCOORD8 - unity_SpecCube1_ProbePosition.xyz);
      worldRefl_31 = (worldPos_32 + (tmpvar_33 * min (
        min (tmpvar_37, tmpvar_38)
      , tmpvar_39)));
    };
    vec4 tmpvar_40;
    tmpvar_40.xyz = worldRefl_31;
    tmpvar_40.w = ((tmpvar_9 * (1.7 - 
      (0.7 * tmpvar_9)
    )) * 6.0);
    vec4 tmpvar_41;
    tmpvar_41 = textureCubeLod (unity_SpecCube1, worldRefl_31, tmpvar_40.w);
    specular_18 = mix (((unity_SpecCube1_HDR.x * 
      pow (tmpvar_41.w, unity_SpecCube1_HDR.y)
    ) * tmpvar_41.xyz), tmpvar_30, unity_SpecCube0_BoxMin.www);
  } else {
    specular_18 = tmpvar_30;
  };
  tmpvar_11 = (specular_18 * tmpvar_8);
  vec3 viewDir_42;
  viewDir_42 = -(tmpvar_7);
  float surfaceReduction_43;
  float specularTerm_44;
  float tmpvar_45;
  tmpvar_45 = (1.0 - _Glossiness);
  vec3 tmpvar_46;
  vec3 inVec_47;
  inVec_47 = (_WorldSpaceLightPos0.xyz + viewDir_42);
  tmpvar_46 = (inVec_47 * inversesqrt(max (0.001, 
    dot (inVec_47, inVec_47)
  )));
  float tmpvar_48;
  tmpvar_48 = dot (tmpvar_6, viewDir_42);
  vec3 tmpvar_49;
  if ((tmpvar_48 < 0.0)) {
    tmpvar_49 = (tmpvar_6 + (viewDir_42 * (
      -(tmpvar_48)
     + 1e-05)));
  } else {
    tmpvar_49 = tmpvar_6;
  };
  float tmpvar_50;
  tmpvar_50 = max (0.0, dot (tmpvar_49, _WorldSpaceLightPos0.xyz));
  float tmpvar_51;
  tmpvar_51 = max (0.0, dot (tmpvar_49, tmpvar_46));
  float tmpvar_52;
  tmpvar_52 = max (0.0, dot (tmpvar_49, viewDir_42));
  float tmpvar_53;
  tmpvar_53 = max (0.0, dot (_WorldSpaceLightPos0.xyz, tmpvar_46));
  float tmpvar_54;
  tmpvar_54 = (tmpvar_45 * tmpvar_45);
  float tmpvar_55;
  tmpvar_55 = (tmpvar_45 * tmpvar_45);
  float tmpvar_56;
  tmpvar_56 = (tmpvar_55 * tmpvar_55);
  float tmpvar_57;
  tmpvar_57 = (((tmpvar_51 * tmpvar_51) * (tmpvar_56 - 1.0)) + 1.0);
  float x_58;
  x_58 = (1.0 - tmpvar_50);
  float x_59;
  x_59 = (1.0 - tmpvar_52);
  float tmpvar_60;
  tmpvar_60 = (0.5 + ((2.0 * tmpvar_53) * (tmpvar_53 * tmpvar_45)));
  float tmpvar_61;
  tmpvar_61 = ((1.0 + (
    (tmpvar_60 - 1.0)
   * 
    ((x_58 * x_58) * ((x_58 * x_58) * x_58))
  )) * (1.0 + (
    (tmpvar_60 - 1.0)
   * 
    ((x_59 * x_59) * ((x_59 * x_59) * x_59))
  )));
  float tmpvar_62;
  tmpvar_62 = (((2.0 / 
    (((tmpvar_50 * (
      (tmpvar_52 * (1.0 - tmpvar_54))
     + tmpvar_54)) + (tmpvar_52 * (
      (tmpvar_50 * (1.0 - tmpvar_54))
     + tmpvar_54))) + 1e-05)
  ) * (tmpvar_56 / 
    (((3.141593 * tmpvar_57) * tmpvar_57) + 1e-07)
  )) * 0.7853982);
  specularTerm_44 = tmpvar_62;
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    specularTerm_44 = sqrt(max (0.0001, tmpvar_62));
  };
  float tmpvar_63;
  tmpvar_63 = max (0.0, (specularTerm_44 * tmpvar_50));
  specularTerm_44 = tmpvar_63;
  float tmpvar_64;
  tmpvar_64 = (tmpvar_61 * tmpvar_50);
  float tmpvar_65;
  tmpvar_65 = (tmpvar_45 * tmpvar_45);
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    surfaceReduction_43 = (1.0 - ((0.28 * tmpvar_65) * tmpvar_45));
  } else {
    surfaceReduction_43 = (1.0/(((tmpvar_65 * tmpvar_65) + 1.0)));
  };
  float x_66;
  x_66 = (1.0 - tmpvar_53);
  float x_67;
  x_67 = (1.0 - tmpvar_52);
  vec3 tmpvar_68;
  tmpvar_68 = (((tmpvar_3 * 
    (tmpvar_13 + (tmpvar_12 * tmpvar_64))
  ) + (
    (tmpvar_63 * tmpvar_12)
   * 
    (tmpvar_4 + ((1.0 - tmpvar_4) * ((x_66 * x_66) * (
      (x_66 * x_66)
     * x_66))))
  )) + ((surfaceReduction_43 * tmpvar_11) * mix (tmpvar_4, vec3(
    clamp ((_Glossiness + (1.0 - tmpvar_5)), 0.0, 1.0)
  ), vec3(
    ((x_67 * x_67) * ((x_67 * x_67) * x_67))
  ))));
  vec4 tmpvar_69;
  tmpvar_69.w = 1.0;
  tmpvar_69.xyz = tmpvar_68;
  c_1.w = tmpvar_69.w;
  c_1.xyz = tmpvar_68;
  c_1.xyz = c_1.xyz;
  vec4 xlat_varoutput_70;
  xlat_varoutput_70.xyz = c_1.xyz;
  xlat_varoutput_70.w = 1.0;
  gl_FragData[0] = xlat_varoutput_70;
}


#endif
"
}
SubProgram "d3d9 " {
// Stats: 73 math
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Matrix 8 [_Object2World] 3
Matrix 11 [_World2Object] 3
Matrix 4 [glstate_matrix_mvp]
Vector 27 [_DetailAlbedoMap_ST]
Vector 26 [_MainTex_ST]
Vector 15 [_ProjectionParams]
Vector 16 [_ScreenParams]
Float 28 [_UVSec]
Vector 14 [_WorldSpaceCameraPos]
Vector 20 [unity_4LightAtten0]
Vector 17 [unity_4LightPosX0]
Vector 18 [unity_4LightPosY0]
Vector 19 [unity_4LightPosZ0]
Vector 25 [unity_ColorSpaceLuminance]
Vector 0 [unity_LightColor0]
Vector 1 [unity_LightColor1]
Vector 2 [unity_LightColor2]
Vector 3 [unity_LightColor3]
Vector 23 [unity_SHBb]
Vector 22 [unity_SHBg]
Vector 21 [unity_SHBr]
Vector 24 [unity_SHC]
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   row_major float4x4 _Object2World;
//   float4 _ProjectionParams;
//   float4 _ScreenParams;
//   float _UVSec;
//   row_major float4x4 _World2Object;
//   float3 _WorldSpaceCameraPos;
//   row_major float4x4 glstate_matrix_mvp;
//   float4 unity_4LightAtten0;
//   float4 unity_4LightPosX0;
//   float4 unity_4LightPosY0;
//   float4 unity_4LightPosZ0;
//   float4 unity_ColorSpaceLuminance;
//   float4 unity_LightColor[8];
//   float4 unity_SHBb;
//   float4 unity_SHBg;
//   float4 unity_SHBr;
//   float4 unity_SHC;
//
//
// Registers:
//
//   Name                      Reg   Size
//   ------------------------- ----- ----
//   unity_LightColor          c0       4
//   glstate_matrix_mvp        c4       4
//   _Object2World             c8       3
//   _World2Object             c11      3
//   _WorldSpaceCameraPos      c14      1
//   _ProjectionParams         c15      1
//   _ScreenParams             c16      1
//   unity_4LightPosX0         c17      1
//   unity_4LightPosY0         c18      1
//   unity_4LightPosZ0         c19      1
//   unity_4LightAtten0        c20      1
//   unity_SHBr                c21      1
//   unity_SHBg                c22      1
//   unity_SHBb                c23      1
//   unity_SHC                 c24      1
//   unity_ColorSpaceLuminance c25      1
//   _MainTex_ST               c26      1
//   _DetailAlbedoMap_ST       c27      1
//   _UVSec                    c28      1
//

    vs_3_0
    def c29, 0.5, 0, 1, 0.0125228781
    def c30, 0.305306017, 0.682171106, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6
    dcl_texcoord6 o7
    dcl_texcoord8 o8.xyz
    mad o1.xy, v2, c26, c26.zwzw
    abs r0.x, c28.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c27.xyxy, c27
    dp4 r0.x, c8, v0
    dp4 r0.y, c9, v0
    dp4 r0.z, c10, v0
    add o2.xyz, r0, -c14
    dp4 r1.y, c5, v0
    mul r0.w, r1.y, c15.x
    mul r2.w, r0.w, c29.x
    dp4 r1.x, c4, v0
    dp4 r1.w, c7, v0
    mul r2.xz, r1.xyww, c29.x
    mad o7.xy, r2.z, c16.zwzw, r2.xwzw
    add r2, -r0.z, c19
    mov o8.xyz, r0
    add r3, -r0.x, c17
    add r0, -r0.y, c18
    mul r4.xyz, c12, v1.y
    mad r4.xyz, c11, v1.x, r4
    mad r4.xyz, c13, v1.z, r4
    nrm r5.xyz, r4
    mul r4, r0, r5.y
    mul r0, r0, r0
    mad r0, r3, r3, r0
    mad r3, r3, r5.x, r4
    mad r3, r2, r5.z, r3
    mad r0, r2, r2, r0
    rsq r2.x, r0.x
    rsq r2.y, r0.y
    rsq r2.z, r0.z
    rsq r2.w, r0.w
    mov r4.z, c29.z
    mad r0, r0, c20, r4.z
    mul r2, r2, r3
    max r2, r2, c29.y
    rcp r3.x, r0.x
    rcp r3.y, r0.y
    rcp r3.z, r0.z
    rcp r3.w, r0.w
    mul r0, r2, r3
    mul r2.xyz, r0.y, c1
    mad r2.xyz, c0, r0.x, r2
    mad r0.xyz, c2, r0.z, r2
    mad r0.xyz, c3, r0.w, r0
    mad r2.xyz, r0, c30.x, c30.y
    mad r2.xyz, r0, r2, c29.w
    mad r2.xyz, r0, r2, -r0
    abs r0.w, c25.w
    sge r0.w, -r0.w, r0.w
    mad r0.xyz, r0.w, r2, r0
    mul r0.w, r5.y, r5.y
    mad r0.w, r5.x, r5.x, -r0.w
    mul r2, r5.yzzx, r5.xyzz
    mov o5.xyz, r5
    dp4 r3.x, c21, r2
    dp4 r3.y, c22, r2
    dp4 r3.z, c23, r2
    mad r2.xyz, c24, r0.w, r3
    add o6.xyz, r0, r2
    dp4 r1.z, c6, v0
    mov o0, r1
    mov o7.zw, r1
    mov o3, c29.y
    mov o4, c29.y
    mov o5.w, c29.y
    mov o6.w, c29.y

// approximately 72 instruction slots used
"
}
SubProgram "d3d11 " {
// Stats: 60 math
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
ConstBuffer "$Globals" 240
Vector 48 [unity_ColorSpaceLuminance]
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
Vector 80 [_ProjectionParams]
ConstBuffer "UnityLighting" 720
Vector 32 [unity_4LightPosX0]
Vector 48 [unity_4LightPosY0]
Vector 64 [unity_4LightPosZ0]
Vector 80 [unity_4LightAtten0]
Vector 96 [unity_LightColor0]
Vector 112 [unity_LightColor1]
Vector 128 [unity_LightColor2]
Vector 144 [unity_LightColor3]
Vector 160 [unity_LightColor4]
Vector 176 [unity_LightColor5]
Vector 192 [unity_LightColor6]
Vector 208 [unity_LightColor7]
Vector 656 [unity_SHBr]
Vector 672 [unity_SHBg]
Vector 688 [unity_SHBb]
Vector 704 [unity_SHC]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
// TEXCOORD                 8   xyz         8     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer cb0[14], immediateIndexed
      dcl_constantbuffer cb1[6], immediateIndexed
      dcl_constantbuffer cb2[45], immediateIndexed
      dcl_constantbuffer cb3[19], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_output o8.xyz
      dcl_temps 6
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   4: mov o0.xyzw, r0.xyzw
   5: eq r1.x, cb0[13].z, l(0.000000)
   6: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
   7: mad o1.zw, r1.xxxy, cb0[11].xxxy, cb0[11].zzzw
   8: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   9: mul r1.xyz, v0.yyyy, cb3[13].xyzx
  10: mad r1.xyz, cb3[12].xyzx, v0.xxxx, r1.xyzx
  11: mad r1.xyz, cb3[14].xyzx, v0.zzzz, r1.xyzx
  12: mad r1.xyz, cb3[15].xyzx, v0.wwww, r1.xyzx
  13: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  14: mov o3.xyzw, l(0,0,0,0)
  15: mov o4.xyzw, l(0,0,0,0)
  16: mul r2.x, v1.x, cb3[16].x
  17: mul r2.y, v1.x, cb3[17].x
  18: mul r2.z, v1.x, cb3[18].x
  19: mul r3.x, v1.y, cb3[16].y
  20: mul r3.y, v1.y, cb3[17].y
  21: mul r3.z, v1.y, cb3[18].y
  22: add r2.xyz, r2.xyzx, r3.xyzx
  23: mul r3.x, v1.z, cb3[16].z
  24: mul r3.y, v1.z, cb3[17].z
  25: mul r3.z, v1.z, cb3[18].z
  26: add r2.xyz, r2.xyzx, r3.xyzx
  27: dp3 r1.w, r2.xyzx, r2.xyzx
  28: rsq r1.w, r1.w
  29: mul r2.xyz, r1.wwww, r2.xyzx
  30: mov o5.xyz, r2.xyzx
  31: mov o5.w, l(0)
  32: add r3.xyzw, -r1.yyyy, cb2[3].xyzw
  33: mul r4.xyzw, r2.yyyy, r3.xyzw
  34: mul r3.xyzw, r3.xyzw, r3.xyzw
  35: add r5.xyzw, -r1.xxxx, cb2[2].xyzw
  36: mad r4.xyzw, r5.xyzw, r2.xxxx, r4.xyzw
  37: mad r3.xyzw, r5.xyzw, r5.xyzw, r3.xyzw
  38: add r5.xyzw, -r1.zzzz, cb2[4].xyzw
  39: mov o8.xyz, r1.xyzx
  40: mad r1.xyzw, r5.xyzw, r2.zzzz, r4.xyzw
  41: mad r3.xyzw, r5.xyzw, r5.xyzw, r3.xyzw
  42: rsq r4.xyzw, r3.xyzw
  43: mad r3.xyzw, r3.xyzw, cb2[5].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  44: div r3.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r3.xyzw
  45: mul r1.xyzw, r1.xyzw, r4.xyzw
  46: max r1.xyzw, r1.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  47: mul r1.xyzw, r3.xyzw, r1.xyzw
  48: mul r3.xyz, r1.yyyy, cb2[7].xyzx
  49: mad r3.xyz, cb2[6].xyzx, r1.xxxx, r3.xyzx
  50: mad r1.xyz, cb2[8].xyzx, r1.zzzz, r3.xyzx
  51: mad r1.xyz, cb2[9].xyzx, r1.wwww, r1.xyzx
  52: mad r3.xyz, r1.xyzx, l(0.305306, 0.305306, 0.305306, 0.000000), l(0.682171, 0.682171, 0.682171, 0.000000)
  53: mad r3.xyz, r1.xyzx, r3.xyzx, l(0.012523, 0.012523, 0.012523, 0.000000)
  54: mul r3.xyz, r1.xyzx, r3.xyzx
  55: eq r1.w, cb0[3].w, l(0.000000)
  56: movc r1.xyz, r1.wwww, r3.xyzx, r1.xyzx
  57: mul r1.w, r2.y, r2.y
  58: mad r1.w, r2.x, r2.x, -r1.w
  59: mul r2.xyzw, r2.yzzx, r2.xyzz
  60: dp4 r3.x, cb2[41].xyzw, r2.xyzw
  61: dp4 r3.y, cb2[42].xyzw, r2.xyzw
  62: dp4 r3.z, cb2[43].xyzw, r2.xyzw
  63: mad r2.xyz, cb2[44].xyzx, r1.wwww, r3.xyzx
  64: add o6.xyz, r1.xyzx, r2.xyzx
  65: mov o6.w, l(0)
  66: mul r0.y, r0.y, cb1[5].x
  67: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  68: mov o7.zw, r0.zzzw
  69: add o7.xy, r1.zzzz, r1.xwxx
  70: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
// Stats: 181 math, 5 textures, 13 branches
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" }
"#version 120

#ifdef VERTEX
uniform vec3 _WorldSpaceCameraPos;
uniform vec4 unity_SHBr;
uniform vec4 unity_SHBg;
uniform vec4 unity_SHBb;
uniform vec4 unity_SHC;

uniform mat4 _Object2World;
uniform mat4 _World2Object;
uniform vec4 unity_ColorSpaceLuminance;
uniform vec4 _MainTex_ST;
uniform vec4 _DetailAlbedoMap_ST;
uniform float _UVSec;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
varying vec3 xlv_TEXCOORD8;
void main ()
{
  vec2 tmpvar_1;
  tmpvar_1 = gl_MultiTexCoord0.xy;
  vec2 tmpvar_2;
  tmpvar_2 = gl_MultiTexCoord1.xy;
  vec4 tmpvar_3;
  vec4 tmpvar_4;
  vec4 tmpvar_5;
  vec4 tmpvar_6;
  vec3 tmpvar_7;
  vec4 tmpvar_8;
  tmpvar_8 = (_Object2World * gl_Vertex);
  tmpvar_7 = tmpvar_8.xyz;
  tmpvar_3 = (gl_ModelViewProjectionMatrix * gl_Vertex);
  vec4 texcoord_9;
  texcoord_9.xy = ((gl_MultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  vec2 tmpvar_10;
  if ((_UVSec == 0.0)) {
    tmpvar_10 = tmpvar_1;
  } else {
    tmpvar_10 = tmpvar_2;
  };
  texcoord_9.zw = ((tmpvar_10 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  vec3 n_11;
  n_11 = (tmpvar_8.xyz - _WorldSpaceCameraPos);
  vec4 v_12;
  v_12.x = _World2Object[0].x;
  v_12.y = _World2Object[1].x;
  v_12.z = _World2Object[2].x;
  v_12.w = _World2Object[3].x;
  vec4 v_13;
  v_13.x = _World2Object[0].y;
  v_13.y = _World2Object[1].y;
  v_13.z = _World2Object[2].y;
  v_13.w = _World2Object[3].y;
  vec4 v_14;
  v_14.x = _World2Object[0].z;
  v_14.y = _World2Object[1].z;
  v_14.z = _World2Object[2].z;
  v_14.w = _World2Object[3].z;
  vec3 tmpvar_15;
  tmpvar_15 = normalize(((
    (v_12.xyz * gl_Normal.x)
   + 
    (v_13.xyz * gl_Normal.y)
  ) + (v_14.xyz * gl_Normal.z)));
  tmpvar_4.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_5.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_6.xyz = tmpvar_15;
  vec4 ambientOrLightmapUV_16;
  ambientOrLightmapUV_16 = vec4(0.0, 0.0, 0.0, 0.0);
  vec3 ambient_17;
  ambient_17 = vec3(0.0, 0.0, 0.0);
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    ambient_17 = vec3(0.0, 0.0, 0.0);
  };
  vec3 x1_18;
  vec4 tmpvar_19;
  tmpvar_19 = (tmpvar_15.xyzz * tmpvar_15.yzzx);
  x1_18.x = dot (unity_SHBr, tmpvar_19);
  x1_18.y = dot (unity_SHBg, tmpvar_19);
  x1_18.z = dot (unity_SHBb, tmpvar_19);
  ambient_17 = (ambient_17 + (x1_18 + (unity_SHC.xyz * 
    ((tmpvar_15.x * tmpvar_15.x) - (tmpvar_15.y * tmpvar_15.y))
  )));
  ambientOrLightmapUV_16.xyz = ambient_17;
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = texcoord_9;
  xlv_TEXCOORD1 = n_11;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  xlv_TEXCOORD5 = ambientOrLightmapUV_16;
  xlv_TEXCOORD8 = tmpvar_7;
}


#endif
#ifdef FRAGMENT
#extension GL_ARB_shader_texture_lod : enable
uniform vec4 _WorldSpaceLightPos0;
uniform vec4 unity_SHAr;
uniform vec4 unity_SHAg;
uniform vec4 unity_SHAb;
uniform samplerCube unity_SpecCube0;
uniform samplerCube unity_SpecCube1;
uniform vec4 unity_SpecCube0_BoxMax;
uniform vec4 unity_SpecCube0_BoxMin;
uniform vec4 unity_SpecCube0_ProbePosition;
uniform vec4 unity_SpecCube0_HDR;
uniform vec4 unity_SpecCube1_BoxMax;
uniform vec4 unity_SpecCube1_BoxMin;
uniform vec4 unity_SpecCube1_ProbePosition;
uniform vec4 unity_SpecCube1_HDR;
uniform vec4 unity_ColorSpaceDielectricSpec;
uniform vec4 unity_ColorSpaceLuminance;
uniform vec4 _LightColor0;
uniform vec4 _Color;
uniform sampler2D _MainTex;
uniform float _Metallic;
uniform float _Glossiness;
uniform sampler2D _OcclusionMap;
uniform float _OcclusionStrength;
uniform vec4 _EmissionColor;
uniform sampler2D _EmissionMap;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
varying vec3 xlv_TEXCOORD8;
void main ()
{
  vec4 c_1;
  vec3 tmpvar_2;
  tmpvar_2 = (_Color.xyz * texture2D (_MainTex, xlv_TEXCOORD0.xy).xyz);
  vec3 tmpvar_3;
  vec3 tmpvar_4;
  tmpvar_4 = mix (unity_ColorSpaceDielectricSpec.xyz, tmpvar_2, vec3(_Metallic));
  float tmpvar_5;
  tmpvar_5 = (unity_ColorSpaceDielectricSpec.w - (_Metallic * unity_ColorSpaceDielectricSpec.w));
  tmpvar_3 = (tmpvar_2 * tmpvar_5);
  vec3 tmpvar_6;
  tmpvar_6 = normalize(xlv_TEXCOORD2_2.xyz);
  vec3 tmpvar_7;
  tmpvar_7 = normalize(xlv_TEXCOORD1);
  float tmpvar_8;
  tmpvar_8 = ((1.0 - _OcclusionStrength) + (texture2D (_OcclusionMap, xlv_TEXCOORD0.xy).y * _OcclusionStrength));
  float tmpvar_9;
  tmpvar_9 = (1.0 - _Glossiness);
  vec3 tmpvar_10;
  tmpvar_10 = (tmpvar_7 - (2.0 * (
    dot (tmpvar_6, tmpvar_7)
   * tmpvar_6)));
  vec3 tmpvar_11;
  vec3 tmpvar_12;
  tmpvar_12 = vec3(0.0, 0.0, 0.0);
  vec3 ambient_13;
  vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = tmpvar_6;
  vec3 x_15;
  x_15.x = dot (unity_SHAr, tmpvar_14);
  x_15.y = dot (unity_SHAg, tmpvar_14);
  x_15.z = dot (unity_SHAb, tmpvar_14);
  vec3 tmpvar_16;
  tmpvar_16 = max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD5.xyz + x_15));
  ambient_13 = tmpvar_16;
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    ambient_13 = max (((1.055 * 
      pow (max (tmpvar_16, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
    ) - 0.055), vec3(0.0, 0.0, 0.0));
  };
  tmpvar_12 = (ambient_13 * tmpvar_8);
  tmpvar_11 = vec3(0.0, 0.0, 0.0);
  vec3 specular_17;
  vec3 worldRefl_18;
  worldRefl_18 = tmpvar_10;
  vec3 worldPos_19;
  worldPos_19 = xlv_TEXCOORD8;
  if ((unity_SpecCube0_ProbePosition.w > 0.0)) {
    vec3 tmpvar_20;
    tmpvar_20 = normalize(tmpvar_10);
    vec3 tmpvar_21;
    tmpvar_21 = ((unity_SpecCube0_BoxMax.xyz - xlv_TEXCOORD8) / tmpvar_20);
    vec3 tmpvar_22;
    tmpvar_22 = ((unity_SpecCube0_BoxMin.xyz - xlv_TEXCOORD8) / tmpvar_20);
    bvec3 tmpvar_23;
    tmpvar_23 = greaterThan (tmpvar_20, vec3(0.0, 0.0, 0.0));
    float tmpvar_24;
    if (tmpvar_23.x) {
      tmpvar_24 = tmpvar_21.x;
    } else {
      tmpvar_24 = tmpvar_22.x;
    };
    float tmpvar_25;
    if (tmpvar_23.y) {
      tmpvar_25 = tmpvar_21.y;
    } else {
      tmpvar_25 = tmpvar_22.y;
    };
    float tmpvar_26;
    if (tmpvar_23.z) {
      tmpvar_26 = tmpvar_21.z;
    } else {
      tmpvar_26 = tmpvar_22.z;
    };
    worldPos_19 = (xlv_TEXCOORD8 - unity_SpecCube0_ProbePosition.xyz);
    worldRefl_18 = (worldPos_19 + (tmpvar_20 * min (
      min (tmpvar_24, tmpvar_25)
    , tmpvar_26)));
  };
  vec4 tmpvar_27;
  tmpvar_27.xyz = worldRefl_18;
  tmpvar_27.w = ((tmpvar_9 * (1.7 - 
    (0.7 * tmpvar_9)
  )) * 6.0);
  vec4 tmpvar_28;
  tmpvar_28 = textureCubeLod (unity_SpecCube0, worldRefl_18, tmpvar_27.w);
  vec3 tmpvar_29;
  tmpvar_29 = ((unity_SpecCube0_HDR.x * pow (tmpvar_28.w, unity_SpecCube0_HDR.y)) * tmpvar_28.xyz);
  if ((unity_SpecCube0_BoxMin.w < 0.99999)) {
    vec3 worldRefl_30;
    worldRefl_30 = tmpvar_10;
    vec3 worldPos_31;
    worldPos_31 = xlv_TEXCOORD8;
    if ((unity_SpecCube1_ProbePosition.w > 0.0)) {
      vec3 tmpvar_32;
      tmpvar_32 = normalize(tmpvar_10);
      vec3 tmpvar_33;
      tmpvar_33 = ((unity_SpecCube1_BoxMax.xyz - xlv_TEXCOORD8) / tmpvar_32);
      vec3 tmpvar_34;
      tmpvar_34 = ((unity_SpecCube1_BoxMin.xyz - xlv_TEXCOORD8) / tmpvar_32);
      bvec3 tmpvar_35;
      tmpvar_35 = greaterThan (tmpvar_32, vec3(0.0, 0.0, 0.0));
      float tmpvar_36;
      if (tmpvar_35.x) {
        tmpvar_36 = tmpvar_33.x;
      } else {
        tmpvar_36 = tmpvar_34.x;
      };
      float tmpvar_37;
      if (tmpvar_35.y) {
        tmpvar_37 = tmpvar_33.y;
      } else {
        tmpvar_37 = tmpvar_34.y;
      };
      float tmpvar_38;
      if (tmpvar_35.z) {
        tmpvar_38 = tmpvar_33.z;
      } else {
        tmpvar_38 = tmpvar_34.z;
      };
      worldPos_31 = (xlv_TEXCOORD8 - unity_SpecCube1_ProbePosition.xyz);
      worldRefl_30 = (worldPos_31 + (tmpvar_32 * min (
        min (tmpvar_36, tmpvar_37)
      , tmpvar_38)));
    };
    vec4 tmpvar_39;
    tmpvar_39.xyz = worldRefl_30;
    tmpvar_39.w = ((tmpvar_9 * (1.7 - 
      (0.7 * tmpvar_9)
    )) * 6.0);
    vec4 tmpvar_40;
    tmpvar_40 = textureCubeLod (unity_SpecCube1, worldRefl_30, tmpvar_39.w);
    specular_17 = mix (((unity_SpecCube1_HDR.x * 
      pow (tmpvar_40.w, unity_SpecCube1_HDR.y)
    ) * tmpvar_40.xyz), tmpvar_29, unity_SpecCube0_BoxMin.www);
  } else {
    specular_17 = tmpvar_29;
  };
  tmpvar_11 = (specular_17 * tmpvar_8);
  vec3 viewDir_41;
  viewDir_41 = -(tmpvar_7);
  float surfaceReduction_42;
  float specularTerm_43;
  float tmpvar_44;
  tmpvar_44 = (1.0 - _Glossiness);
  vec3 tmpvar_45;
  vec3 inVec_46;
  inVec_46 = (_WorldSpaceLightPos0.xyz + viewDir_41);
  tmpvar_45 = (inVec_46 * inversesqrt(max (0.001, 
    dot (inVec_46, inVec_46)
  )));
  float tmpvar_47;
  tmpvar_47 = dot (tmpvar_6, viewDir_41);
  vec3 tmpvar_48;
  if ((tmpvar_47 < 0.0)) {
    tmpvar_48 = (tmpvar_6 + (viewDir_41 * (
      -(tmpvar_47)
     + 1e-05)));
  } else {
    tmpvar_48 = tmpvar_6;
  };
  float tmpvar_49;
  tmpvar_49 = max (0.0, dot (tmpvar_48, _WorldSpaceLightPos0.xyz));
  float tmpvar_50;
  tmpvar_50 = max (0.0, dot (tmpvar_48, tmpvar_45));
  float tmpvar_51;
  tmpvar_51 = max (0.0, dot (tmpvar_48, viewDir_41));
  float tmpvar_52;
  tmpvar_52 = max (0.0, dot (_WorldSpaceLightPos0.xyz, tmpvar_45));
  float tmpvar_53;
  tmpvar_53 = (tmpvar_44 * tmpvar_44);
  float tmpvar_54;
  tmpvar_54 = (tmpvar_44 * tmpvar_44);
  float tmpvar_55;
  tmpvar_55 = (tmpvar_54 * tmpvar_54);
  float tmpvar_56;
  tmpvar_56 = (((tmpvar_50 * tmpvar_50) * (tmpvar_55 - 1.0)) + 1.0);
  float x_57;
  x_57 = (1.0 - tmpvar_49);
  float x_58;
  x_58 = (1.0 - tmpvar_51);
  float tmpvar_59;
  tmpvar_59 = (0.5 + ((2.0 * tmpvar_52) * (tmpvar_52 * tmpvar_44)));
  float tmpvar_60;
  tmpvar_60 = ((1.0 + (
    (tmpvar_59 - 1.0)
   * 
    ((x_57 * x_57) * ((x_57 * x_57) * x_57))
  )) * (1.0 + (
    (tmpvar_59 - 1.0)
   * 
    ((x_58 * x_58) * ((x_58 * x_58) * x_58))
  )));
  float tmpvar_61;
  tmpvar_61 = (((2.0 / 
    (((tmpvar_49 * (
      (tmpvar_51 * (1.0 - tmpvar_53))
     + tmpvar_53)) + (tmpvar_51 * (
      (tmpvar_49 * (1.0 - tmpvar_53))
     + tmpvar_53))) + 1e-05)
  ) * (tmpvar_55 / 
    (((3.141593 * tmpvar_56) * tmpvar_56) + 1e-07)
  )) * 0.7853982);
  specularTerm_43 = tmpvar_61;
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    specularTerm_43 = sqrt(max (0.0001, tmpvar_61));
  };
  float tmpvar_62;
  tmpvar_62 = max (0.0, (specularTerm_43 * tmpvar_49));
  specularTerm_43 = tmpvar_62;
  float tmpvar_63;
  tmpvar_63 = (tmpvar_60 * tmpvar_49);
  float tmpvar_64;
  tmpvar_64 = (tmpvar_44 * tmpvar_44);
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    surfaceReduction_42 = (1.0 - ((0.28 * tmpvar_64) * tmpvar_44));
  } else {
    surfaceReduction_42 = (1.0/(((tmpvar_64 * tmpvar_64) + 1.0)));
  };
  float x_65;
  x_65 = (1.0 - tmpvar_52);
  float x_66;
  x_66 = (1.0 - tmpvar_51);
  vec3 tmpvar_67;
  tmpvar_67 = (((tmpvar_3 * 
    (tmpvar_12 + (_LightColor0.xyz * tmpvar_63))
  ) + (
    (tmpvar_62 * _LightColor0.xyz)
   * 
    (tmpvar_4 + ((1.0 - tmpvar_4) * ((x_65 * x_65) * (
      (x_65 * x_65)
     * x_65))))
  )) + ((surfaceReduction_42 * tmpvar_11) * mix (tmpvar_4, vec3(
    clamp ((_Glossiness + (1.0 - tmpvar_5)), 0.0, 1.0)
  ), vec3(
    ((x_66 * x_66) * ((x_66 * x_66) * x_66))
  ))));
  vec4 tmpvar_68;
  tmpvar_68.w = 1.0;
  tmpvar_68.xyz = tmpvar_67;
  c_1.w = tmpvar_68.w;
  c_1.xyz = (tmpvar_67 + (texture2D (_EmissionMap, xlv_TEXCOORD0.xy).xyz * _EmissionColor.xyz));
  vec4 xlat_varoutput_69;
  xlat_varoutput_69.xyz = c_1.xyz;
  xlat_varoutput_69.w = 1.0;
  gl_FragData[0] = xlat_varoutput_69;
}


#endif
"
}
SubProgram "d3d9 " {
// Stats: 34 math
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Matrix 4 [_Object2World] 3
Matrix 7 [_World2Object] 3
Matrix 0 [glstate_matrix_mvp]
Vector 16 [_DetailAlbedoMap_ST]
Vector 15 [_MainTex_ST]
Float 17 [_UVSec]
Vector 10 [_WorldSpaceCameraPos]
Vector 13 [unity_SHBb]
Vector 12 [unity_SHBg]
Vector 11 [unity_SHBr]
Vector 14 [unity_SHC]
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   row_major float4x4 _Object2World;
//   float _UVSec;
//   row_major float4x4 _World2Object;
//   float3 _WorldSpaceCameraPos;
//   row_major float4x4 glstate_matrix_mvp;
//   float4 unity_SHBb;
//   float4 unity_SHBg;
//   float4 unity_SHBr;
//   float4 unity_SHC;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   glstate_matrix_mvp   c0       4
//   _Object2World        c4       3
//   _World2Object        c7       3
//   _WorldSpaceCameraPos c10      1
//   unity_SHBr           c11      1
//   unity_SHBg           c12      1
//   unity_SHBb           c13      1
//   unity_SHC            c14      1
//   _MainTex_ST          c15      1
//   _DetailAlbedoMap_ST  c16      1
//   _UVSec               c17      1
//

    vs_3_0
    def c18, 0, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6
    dcl_texcoord8 o7.xyz
    dp4 o0.x, c0, v0
    dp4 o0.y, c1, v0
    dp4 o0.z, c2, v0
    dp4 o0.w, c3, v0
    mad o1.xy, v2, c15, c15.zwzw
    abs r0.x, c17.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c16.xyxy, c16
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add o2.xyz, r0, -c10
    mov o7.xyz, r0
    mul r0.xyz, c8, v1.y
    mad r0.xyz, c7, v1.x, r0
    mad r0.xyz, c9, v1.z, r0
    nrm r1.xyz, r0
    mul r0.x, r1.y, r1.y
    mad r0.x, r1.x, r1.x, -r0.x
    mul r2, r1.yzzx, r1.xyzz
    mov o5.xyz, r1
    dp4 r1.x, c11, r2
    dp4 r1.y, c12, r2
    dp4 r1.z, c13, r2
    mad o6.xyz, c14, r0.x, r1
    mov o3, c18.x
    mov o4, c18.x
    mov o5.w, c18.x
    mov o6.w, c18.x

// approximately 33 instruction slots used
"
}
SubProgram "d3d11 " {
// Stats: 33 math
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
ConstBuffer "$Globals" 240
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 656 [unity_SHBr]
Vector 672 [unity_SHBg]
Vector 688 [unity_SHBb]
Vector 704 [unity_SHC]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 8   xyz         7     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer cb0[14], immediateIndexed
      dcl_constantbuffer cb1[5], immediateIndexed
      dcl_constantbuffer cb2[45], immediateIndexed
      dcl_constantbuffer cb3[19], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyz
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: mad o0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   4: eq r0.x, cb0[13].z, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[11].xxxy, cb0[11].zzzw
   7: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  13: mov o7.xyz, r0.xyzx
  14: mov o3.xyzw, l(0,0,0,0)
  15: mov o4.xyzw, l(0,0,0,0)
  16: mul r0.x, v1.x, cb3[16].x
  17: mul r0.y, v1.x, cb3[17].x
  18: mul r0.z, v1.x, cb3[18].x
  19: mul r1.x, v1.y, cb3[16].y
  20: mul r1.y, v1.y, cb3[17].y
  21: mul r1.z, v1.y, cb3[18].y
  22: add r0.xyz, r0.xyzx, r1.xyzx
  23: mul r1.x, v1.z, cb3[16].z
  24: mul r1.y, v1.z, cb3[17].z
  25: mul r1.z, v1.z, cb3[18].z
  26: add r0.xyz, r0.xyzx, r1.xyzx
  27: dp3 r0.w, r0.xyzx, r0.xyzx
  28: rsq r0.w, r0.w
  29: mul r0.xyz, r0.wwww, r0.xyzx
  30: mov o5.xyz, r0.xyzx
  31: mov o5.w, l(0)
  32: mul r0.w, r0.y, r0.y
  33: mad r0.w, r0.x, r0.x, -r0.w
  34: mul r1.xyzw, r0.yzzx, r0.xyzz
  35: dp4 r0.x, cb2[41].xyzw, r1.xyzw
  36: dp4 r0.y, cb2[42].xyzw, r1.xyzw
  37: dp4 r0.z, cb2[43].xyzw, r1.xyzw
  38: mad o6.xyz, cb2[44].xyzx, r0.wwww, r0.xyzx
  39: mov o6.w, l(0)
  40: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
// Stats: 182 math, 6 textures, 13 branches
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" }
"#version 120

#ifdef VERTEX
uniform vec3 _WorldSpaceCameraPos;
uniform vec4 _ProjectionParams;
uniform vec4 unity_SHBr;
uniform vec4 unity_SHBg;
uniform vec4 unity_SHBb;
uniform vec4 unity_SHC;

uniform mat4 _Object2World;
uniform mat4 _World2Object;
uniform vec4 unity_ColorSpaceLuminance;
uniform vec4 _MainTex_ST;
uniform vec4 _DetailAlbedoMap_ST;
uniform float _UVSec;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
varying vec4 xlv_TEXCOORD6;
varying vec3 xlv_TEXCOORD8;
void main ()
{
  vec2 tmpvar_1;
  tmpvar_1 = gl_MultiTexCoord0.xy;
  vec2 tmpvar_2;
  tmpvar_2 = gl_MultiTexCoord1.xy;
  vec4 tmpvar_3;
  vec4 tmpvar_4;
  vec4 tmpvar_5;
  vec4 tmpvar_6;
  vec3 tmpvar_7;
  vec4 tmpvar_8;
  tmpvar_8 = (_Object2World * gl_Vertex);
  tmpvar_7 = tmpvar_8.xyz;
  tmpvar_3 = (gl_ModelViewProjectionMatrix * gl_Vertex);
  vec4 texcoord_9;
  texcoord_9.xy = ((gl_MultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  vec2 tmpvar_10;
  if ((_UVSec == 0.0)) {
    tmpvar_10 = tmpvar_1;
  } else {
    tmpvar_10 = tmpvar_2;
  };
  texcoord_9.zw = ((tmpvar_10 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  vec3 n_11;
  n_11 = (tmpvar_8.xyz - _WorldSpaceCameraPos);
  vec4 v_12;
  v_12.x = _World2Object[0].x;
  v_12.y = _World2Object[1].x;
  v_12.z = _World2Object[2].x;
  v_12.w = _World2Object[3].x;
  vec4 v_13;
  v_13.x = _World2Object[0].y;
  v_13.y = _World2Object[1].y;
  v_13.z = _World2Object[2].y;
  v_13.w = _World2Object[3].y;
  vec4 v_14;
  v_14.x = _World2Object[0].z;
  v_14.y = _World2Object[1].z;
  v_14.z = _World2Object[2].z;
  v_14.w = _World2Object[3].z;
  vec3 tmpvar_15;
  tmpvar_15 = normalize(((
    (v_12.xyz * gl_Normal.x)
   + 
    (v_13.xyz * gl_Normal.y)
  ) + (v_14.xyz * gl_Normal.z)));
  tmpvar_4.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_5.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_6.xyz = tmpvar_15;
  vec4 o_16;
  vec4 tmpvar_17;
  tmpvar_17 = (tmpvar_3 * 0.5);
  vec2 tmpvar_18;
  tmpvar_18.x = tmpvar_17.x;
  tmpvar_18.y = (tmpvar_17.y * _ProjectionParams.x);
  o_16.xy = (tmpvar_18 + tmpvar_17.w);
  o_16.zw = tmpvar_3.zw;
  vec4 ambientOrLightmapUV_19;
  ambientOrLightmapUV_19 = vec4(0.0, 0.0, 0.0, 0.0);
  vec3 ambient_20;
  ambient_20 = vec3(0.0, 0.0, 0.0);
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    ambient_20 = vec3(0.0, 0.0, 0.0);
  };
  vec3 x1_21;
  vec4 tmpvar_22;
  tmpvar_22 = (tmpvar_15.xyzz * tmpvar_15.yzzx);
  x1_21.x = dot (unity_SHBr, tmpvar_22);
  x1_21.y = dot (unity_SHBg, tmpvar_22);
  x1_21.z = dot (unity_SHBb, tmpvar_22);
  ambient_20 = (ambient_20 + (x1_21 + (unity_SHC.xyz * 
    ((tmpvar_15.x * tmpvar_15.x) - (tmpvar_15.y * tmpvar_15.y))
  )));
  ambientOrLightmapUV_19.xyz = ambient_20;
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = texcoord_9;
  xlv_TEXCOORD1 = n_11;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  xlv_TEXCOORD5 = ambientOrLightmapUV_19;
  xlv_TEXCOORD6 = o_16;
  xlv_TEXCOORD8 = tmpvar_7;
}


#endif
#ifdef FRAGMENT
#extension GL_ARB_shader_texture_lod : enable
uniform vec4 _WorldSpaceLightPos0;
uniform vec4 unity_SHAr;
uniform vec4 unity_SHAg;
uniform vec4 unity_SHAb;
uniform samplerCube unity_SpecCube0;
uniform samplerCube unity_SpecCube1;
uniform vec4 unity_SpecCube0_BoxMax;
uniform vec4 unity_SpecCube0_BoxMin;
uniform vec4 unity_SpecCube0_ProbePosition;
uniform vec4 unity_SpecCube0_HDR;
uniform vec4 unity_SpecCube1_BoxMax;
uniform vec4 unity_SpecCube1_BoxMin;
uniform vec4 unity_SpecCube1_ProbePosition;
uniform vec4 unity_SpecCube1_HDR;
uniform vec4 unity_ColorSpaceDielectricSpec;
uniform vec4 unity_ColorSpaceLuminance;
uniform vec4 _LightColor0;
uniform vec4 _Color;
uniform sampler2D _MainTex;
uniform float _Metallic;
uniform float _Glossiness;
uniform sampler2D _OcclusionMap;
uniform float _OcclusionStrength;
uniform vec4 _EmissionColor;
uniform sampler2D _EmissionMap;
uniform sampler2D _ShadowMapTexture;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
varying vec4 xlv_TEXCOORD6;
varying vec3 xlv_TEXCOORD8;
void main ()
{
  vec4 c_1;
  vec3 tmpvar_2;
  tmpvar_2 = (_Color.xyz * texture2D (_MainTex, xlv_TEXCOORD0.xy).xyz);
  vec3 tmpvar_3;
  vec3 tmpvar_4;
  tmpvar_4 = mix (unity_ColorSpaceDielectricSpec.xyz, tmpvar_2, vec3(_Metallic));
  float tmpvar_5;
  tmpvar_5 = (unity_ColorSpaceDielectricSpec.w - (_Metallic * unity_ColorSpaceDielectricSpec.w));
  tmpvar_3 = (tmpvar_2 * tmpvar_5);
  vec3 tmpvar_6;
  tmpvar_6 = normalize(xlv_TEXCOORD2_2.xyz);
  vec3 tmpvar_7;
  tmpvar_7 = normalize(xlv_TEXCOORD1);
  float tmpvar_8;
  tmpvar_8 = ((1.0 - _OcclusionStrength) + (texture2D (_OcclusionMap, xlv_TEXCOORD0.xy).y * _OcclusionStrength));
  float tmpvar_9;
  tmpvar_9 = (1.0 - _Glossiness);
  vec3 tmpvar_10;
  tmpvar_10 = (tmpvar_7 - (2.0 * (
    dot (tmpvar_6, tmpvar_7)
   * tmpvar_6)));
  vec3 tmpvar_11;
  vec3 tmpvar_12;
  vec3 tmpvar_13;
  tmpvar_13 = vec3(0.0, 0.0, 0.0);
  tmpvar_12 = (_LightColor0.xyz * texture2DProj (_ShadowMapTexture, xlv_TEXCOORD6).x);
  vec3 ambient_14;
  vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = tmpvar_6;
  vec3 x_16;
  x_16.x = dot (unity_SHAr, tmpvar_15);
  x_16.y = dot (unity_SHAg, tmpvar_15);
  x_16.z = dot (unity_SHAb, tmpvar_15);
  vec3 tmpvar_17;
  tmpvar_17 = max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD5.xyz + x_16));
  ambient_14 = tmpvar_17;
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    ambient_14 = max (((1.055 * 
      pow (max (tmpvar_17, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
    ) - 0.055), vec3(0.0, 0.0, 0.0));
  };
  tmpvar_13 = (ambient_14 * tmpvar_8);
  tmpvar_11 = vec3(0.0, 0.0, 0.0);
  vec3 specular_18;
  vec3 worldRefl_19;
  worldRefl_19 = tmpvar_10;
  vec3 worldPos_20;
  worldPos_20 = xlv_TEXCOORD8;
  if ((unity_SpecCube0_ProbePosition.w > 0.0)) {
    vec3 tmpvar_21;
    tmpvar_21 = normalize(tmpvar_10);
    vec3 tmpvar_22;
    tmpvar_22 = ((unity_SpecCube0_BoxMax.xyz - xlv_TEXCOORD8) / tmpvar_21);
    vec3 tmpvar_23;
    tmpvar_23 = ((unity_SpecCube0_BoxMin.xyz - xlv_TEXCOORD8) / tmpvar_21);
    bvec3 tmpvar_24;
    tmpvar_24 = greaterThan (tmpvar_21, vec3(0.0, 0.0, 0.0));
    float tmpvar_25;
    if (tmpvar_24.x) {
      tmpvar_25 = tmpvar_22.x;
    } else {
      tmpvar_25 = tmpvar_23.x;
    };
    float tmpvar_26;
    if (tmpvar_24.y) {
      tmpvar_26 = tmpvar_22.y;
    } else {
      tmpvar_26 = tmpvar_23.y;
    };
    float tmpvar_27;
    if (tmpvar_24.z) {
      tmpvar_27 = tmpvar_22.z;
    } else {
      tmpvar_27 = tmpvar_23.z;
    };
    worldPos_20 = (xlv_TEXCOORD8 - unity_SpecCube0_ProbePosition.xyz);
    worldRefl_19 = (worldPos_20 + (tmpvar_21 * min (
      min (tmpvar_25, tmpvar_26)
    , tmpvar_27)));
  };
  vec4 tmpvar_28;
  tmpvar_28.xyz = worldRefl_19;
  tmpvar_28.w = ((tmpvar_9 * (1.7 - 
    (0.7 * tmpvar_9)
  )) * 6.0);
  vec4 tmpvar_29;
  tmpvar_29 = textureCubeLod (unity_SpecCube0, worldRefl_19, tmpvar_28.w);
  vec3 tmpvar_30;
  tmpvar_30 = ((unity_SpecCube0_HDR.x * pow (tmpvar_29.w, unity_SpecCube0_HDR.y)) * tmpvar_29.xyz);
  if ((unity_SpecCube0_BoxMin.w < 0.99999)) {
    vec3 worldRefl_31;
    worldRefl_31 = tmpvar_10;
    vec3 worldPos_32;
    worldPos_32 = xlv_TEXCOORD8;
    if ((unity_SpecCube1_ProbePosition.w > 0.0)) {
      vec3 tmpvar_33;
      tmpvar_33 = normalize(tmpvar_10);
      vec3 tmpvar_34;
      tmpvar_34 = ((unity_SpecCube1_BoxMax.xyz - xlv_TEXCOORD8) / tmpvar_33);
      vec3 tmpvar_35;
      tmpvar_35 = ((unity_SpecCube1_BoxMin.xyz - xlv_TEXCOORD8) / tmpvar_33);
      bvec3 tmpvar_36;
      tmpvar_36 = greaterThan (tmpvar_33, vec3(0.0, 0.0, 0.0));
      float tmpvar_37;
      if (tmpvar_36.x) {
        tmpvar_37 = tmpvar_34.x;
      } else {
        tmpvar_37 = tmpvar_35.x;
      };
      float tmpvar_38;
      if (tmpvar_36.y) {
        tmpvar_38 = tmpvar_34.y;
      } else {
        tmpvar_38 = tmpvar_35.y;
      };
      float tmpvar_39;
      if (tmpvar_36.z) {
        tmpvar_39 = tmpvar_34.z;
      } else {
        tmpvar_39 = tmpvar_35.z;
      };
      worldPos_32 = (xlv_TEXCOORD8 - unity_SpecCube1_ProbePosition.xyz);
      worldRefl_31 = (worldPos_32 + (tmpvar_33 * min (
        min (tmpvar_37, tmpvar_38)
      , tmpvar_39)));
    };
    vec4 tmpvar_40;
    tmpvar_40.xyz = worldRefl_31;
    tmpvar_40.w = ((tmpvar_9 * (1.7 - 
      (0.7 * tmpvar_9)
    )) * 6.0);
    vec4 tmpvar_41;
    tmpvar_41 = textureCubeLod (unity_SpecCube1, worldRefl_31, tmpvar_40.w);
    specular_18 = mix (((unity_SpecCube1_HDR.x * 
      pow (tmpvar_41.w, unity_SpecCube1_HDR.y)
    ) * tmpvar_41.xyz), tmpvar_30, unity_SpecCube0_BoxMin.www);
  } else {
    specular_18 = tmpvar_30;
  };
  tmpvar_11 = (specular_18 * tmpvar_8);
  vec3 viewDir_42;
  viewDir_42 = -(tmpvar_7);
  float surfaceReduction_43;
  float specularTerm_44;
  float tmpvar_45;
  tmpvar_45 = (1.0 - _Glossiness);
  vec3 tmpvar_46;
  vec3 inVec_47;
  inVec_47 = (_WorldSpaceLightPos0.xyz + viewDir_42);
  tmpvar_46 = (inVec_47 * inversesqrt(max (0.001, 
    dot (inVec_47, inVec_47)
  )));
  float tmpvar_48;
  tmpvar_48 = dot (tmpvar_6, viewDir_42);
  vec3 tmpvar_49;
  if ((tmpvar_48 < 0.0)) {
    tmpvar_49 = (tmpvar_6 + (viewDir_42 * (
      -(tmpvar_48)
     + 1e-05)));
  } else {
    tmpvar_49 = tmpvar_6;
  };
  float tmpvar_50;
  tmpvar_50 = max (0.0, dot (tmpvar_49, _WorldSpaceLightPos0.xyz));
  float tmpvar_51;
  tmpvar_51 = max (0.0, dot (tmpvar_49, tmpvar_46));
  float tmpvar_52;
  tmpvar_52 = max (0.0, dot (tmpvar_49, viewDir_42));
  float tmpvar_53;
  tmpvar_53 = max (0.0, dot (_WorldSpaceLightPos0.xyz, tmpvar_46));
  float tmpvar_54;
  tmpvar_54 = (tmpvar_45 * tmpvar_45);
  float tmpvar_55;
  tmpvar_55 = (tmpvar_45 * tmpvar_45);
  float tmpvar_56;
  tmpvar_56 = (tmpvar_55 * tmpvar_55);
  float tmpvar_57;
  tmpvar_57 = (((tmpvar_51 * tmpvar_51) * (tmpvar_56 - 1.0)) + 1.0);
  float x_58;
  x_58 = (1.0 - tmpvar_50);
  float x_59;
  x_59 = (1.0 - tmpvar_52);
  float tmpvar_60;
  tmpvar_60 = (0.5 + ((2.0 * tmpvar_53) * (tmpvar_53 * tmpvar_45)));
  float tmpvar_61;
  tmpvar_61 = ((1.0 + (
    (tmpvar_60 - 1.0)
   * 
    ((x_58 * x_58) * ((x_58 * x_58) * x_58))
  )) * (1.0 + (
    (tmpvar_60 - 1.0)
   * 
    ((x_59 * x_59) * ((x_59 * x_59) * x_59))
  )));
  float tmpvar_62;
  tmpvar_62 = (((2.0 / 
    (((tmpvar_50 * (
      (tmpvar_52 * (1.0 - tmpvar_54))
     + tmpvar_54)) + (tmpvar_52 * (
      (tmpvar_50 * (1.0 - tmpvar_54))
     + tmpvar_54))) + 1e-05)
  ) * (tmpvar_56 / 
    (((3.141593 * tmpvar_57) * tmpvar_57) + 1e-07)
  )) * 0.7853982);
  specularTerm_44 = tmpvar_62;
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    specularTerm_44 = sqrt(max (0.0001, tmpvar_62));
  };
  float tmpvar_63;
  tmpvar_63 = max (0.0, (specularTerm_44 * tmpvar_50));
  specularTerm_44 = tmpvar_63;
  float tmpvar_64;
  tmpvar_64 = (tmpvar_61 * tmpvar_50);
  float tmpvar_65;
  tmpvar_65 = (tmpvar_45 * tmpvar_45);
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    surfaceReduction_43 = (1.0 - ((0.28 * tmpvar_65) * tmpvar_45));
  } else {
    surfaceReduction_43 = (1.0/(((tmpvar_65 * tmpvar_65) + 1.0)));
  };
  float x_66;
  x_66 = (1.0 - tmpvar_53);
  float x_67;
  x_67 = (1.0 - tmpvar_52);
  vec3 tmpvar_68;
  tmpvar_68 = (((tmpvar_3 * 
    (tmpvar_13 + (tmpvar_12 * tmpvar_64))
  ) + (
    (tmpvar_63 * tmpvar_12)
   * 
    (tmpvar_4 + ((1.0 - tmpvar_4) * ((x_66 * x_66) * (
      (x_66 * x_66)
     * x_66))))
  )) + ((surfaceReduction_43 * tmpvar_11) * mix (tmpvar_4, vec3(
    clamp ((_Glossiness + (1.0 - tmpvar_5)), 0.0, 1.0)
  ), vec3(
    ((x_67 * x_67) * ((x_67 * x_67) * x_67))
  ))));
  vec4 tmpvar_69;
  tmpvar_69.w = 1.0;
  tmpvar_69.xyz = tmpvar_68;
  c_1.w = tmpvar_69.w;
  c_1.xyz = (tmpvar_68 + (texture2D (_EmissionMap, xlv_TEXCOORD0.xy).xyz * _EmissionColor.xyz));
  vec4 xlat_varoutput_70;
  xlat_varoutput_70.xyz = c_1.xyz;
  xlat_varoutput_70.w = 1.0;
  gl_FragData[0] = xlat_varoutput_70;
}


#endif
"
}
SubProgram "d3d9 " {
// Stats: 40 math
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Matrix 4 [_Object2World] 3
Matrix 7 [_World2Object] 3
Matrix 0 [glstate_matrix_mvp]
Vector 18 [_DetailAlbedoMap_ST]
Vector 17 [_MainTex_ST]
Vector 11 [_ProjectionParams]
Vector 12 [_ScreenParams]
Float 19 [_UVSec]
Vector 10 [_WorldSpaceCameraPos]
Vector 15 [unity_SHBb]
Vector 14 [unity_SHBg]
Vector 13 [unity_SHBr]
Vector 16 [unity_SHC]
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   row_major float4x4 _Object2World;
//   float4 _ProjectionParams;
//   float4 _ScreenParams;
//   float _UVSec;
//   row_major float4x4 _World2Object;
//   float3 _WorldSpaceCameraPos;
//   row_major float4x4 glstate_matrix_mvp;
//   float4 unity_SHBb;
//   float4 unity_SHBg;
//   float4 unity_SHBr;
//   float4 unity_SHC;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   glstate_matrix_mvp   c0       4
//   _Object2World        c4       3
//   _World2Object        c7       3
//   _WorldSpaceCameraPos c10      1
//   _ProjectionParams    c11      1
//   _ScreenParams        c12      1
//   unity_SHBr           c13      1
//   unity_SHBg           c14      1
//   unity_SHBb           c15      1
//   unity_SHC            c16      1
//   _MainTex_ST          c17      1
//   _DetailAlbedoMap_ST  c18      1
//   _UVSec               c19      1
//

    vs_3_0
    def c20, 0.5, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6
    dcl_texcoord6 o7
    dcl_texcoord8 o8.xyz
    mad o1.xy, v2, c17, c17.zwzw
    abs r0.x, c19.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c18.xyxy, c18
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add o2.xyz, r0, -c10
    mov o8.xyz, r0
    dp4 r0.y, c1, v0
    mul r1.x, r0.y, c11.x
    mul r1.w, r1.x, c20.x
    dp4 r0.x, c0, v0
    dp4 r0.w, c3, v0
    mul r1.xz, r0.xyww, c20.x
    mad o7.xy, r1.z, c12.zwzw, r1.xwzw
    mul r1.xyz, c8, v1.y
    mad r1.xyz, c7, v1.x, r1
    mad r1.xyz, c9, v1.z, r1
    nrm r2.xyz, r1
    mul r1.x, r2.y, r2.y
    mad r1.x, r2.x, r2.x, -r1.x
    mul r3, r2.yzzx, r2.xyzz
    mov o5.xyz, r2
    dp4 r2.x, c13, r3
    dp4 r2.y, c14, r3
    dp4 r2.z, c15, r3
    mad o6.xyz, c16, r1.x, r2
    dp4 r0.z, c2, v0
    mov o0, r0
    mov o7.zw, r0
    mov o3, c20.y
    mov o4, c20.y
    mov o5.w, c20.y
    mov o6.w, c20.y

// approximately 39 instruction slots used
"
}
SubProgram "d3d11 " {
// Stats: 36 math
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
ConstBuffer "$Globals" 240
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
Vector 80 [_ProjectionParams]
ConstBuffer "UnityLighting" 720
Vector 656 [unity_SHBr]
Vector 672 [unity_SHBg]
Vector 688 [unity_SHBb]
Vector 704 [unity_SHC]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
// TEXCOORD                 8   xyz         8     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer cb0[14], immediateIndexed
      dcl_constantbuffer cb1[6], immediateIndexed
      dcl_constantbuffer cb2[45], immediateIndexed
      dcl_constantbuffer cb3[19], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_output o8.xyz
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   4: mov o0.xyzw, r0.xyzw
   5: eq r1.x, cb0[13].z, l(0.000000)
   6: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
   7: mad o1.zw, r1.xxxy, cb0[11].xxxy, cb0[11].zzzw
   8: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   9: mul r1.xyz, v0.yyyy, cb3[13].xyzx
  10: mad r1.xyz, cb3[12].xyzx, v0.xxxx, r1.xyzx
  11: mad r1.xyz, cb3[14].xyzx, v0.zzzz, r1.xyzx
  12: mad r1.xyz, cb3[15].xyzx, v0.wwww, r1.xyzx
  13: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  14: mov o8.xyz, r1.xyzx
  15: mov o3.xyzw, l(0,0,0,0)
  16: mov o4.xyzw, l(0,0,0,0)
  17: mul r1.x, v1.x, cb3[16].x
  18: mul r1.y, v1.x, cb3[17].x
  19: mul r1.z, v1.x, cb3[18].x
  20: mul r2.x, v1.y, cb3[16].y
  21: mul r2.y, v1.y, cb3[17].y
  22: mul r2.z, v1.y, cb3[18].y
  23: add r1.xyz, r1.xyzx, r2.xyzx
  24: mul r2.x, v1.z, cb3[16].z
  25: mul r2.y, v1.z, cb3[17].z
  26: mul r2.z, v1.z, cb3[18].z
  27: add r1.xyz, r1.xyzx, r2.xyzx
  28: dp3 r1.w, r1.xyzx, r1.xyzx
  29: rsq r1.w, r1.w
  30: mul r1.xyz, r1.wwww, r1.xyzx
  31: mov o5.xyz, r1.xyzx
  32: mov o5.w, l(0)
  33: mul r1.w, r1.y, r1.y
  34: mad r1.w, r1.x, r1.x, -r1.w
  35: mul r2.xyzw, r1.yzzx, r1.xyzz
  36: dp4 r1.x, cb2[41].xyzw, r2.xyzw
  37: dp4 r1.y, cb2[42].xyzw, r2.xyzw
  38: dp4 r1.z, cb2[43].xyzw, r2.xyzw
  39: mad o6.xyz, cb2[44].xyzx, r1.wwww, r1.xyzx
  40: mov o6.w, l(0)
  41: mul r0.y, r0.y, cb1[5].x
  42: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  43: mov o7.zw, r0.zzzw
  44: add o7.xy, r1.zzzz, r1.xwxx
  45: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
// Stats: 181 math, 5 textures, 13 branches
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "VERTEXLIGHT_ON" }
"#version 120

#ifdef VERTEX
uniform vec3 _WorldSpaceCameraPos;
uniform vec4 unity_4LightPosX0;
uniform vec4 unity_4LightPosY0;
uniform vec4 unity_4LightPosZ0;
uniform vec4 unity_4LightAtten0;
uniform vec4 unity_LightColor[8];
uniform vec4 unity_SHBr;
uniform vec4 unity_SHBg;
uniform vec4 unity_SHBb;
uniform vec4 unity_SHC;

uniform mat4 _Object2World;
uniform mat4 _World2Object;
uniform vec4 unity_ColorSpaceLuminance;
uniform vec4 _MainTex_ST;
uniform vec4 _DetailAlbedoMap_ST;
uniform float _UVSec;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
varying vec3 xlv_TEXCOORD8;
void main ()
{
  vec2 tmpvar_1;
  tmpvar_1 = gl_MultiTexCoord0.xy;
  vec2 tmpvar_2;
  tmpvar_2 = gl_MultiTexCoord1.xy;
  vec4 tmpvar_3;
  vec4 tmpvar_4;
  vec4 tmpvar_5;
  vec4 tmpvar_6;
  vec3 tmpvar_7;
  vec4 tmpvar_8;
  tmpvar_8 = (_Object2World * gl_Vertex);
  tmpvar_7 = tmpvar_8.xyz;
  tmpvar_3 = (gl_ModelViewProjectionMatrix * gl_Vertex);
  vec4 texcoord_9;
  texcoord_9.xy = ((gl_MultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  vec2 tmpvar_10;
  if ((_UVSec == 0.0)) {
    tmpvar_10 = tmpvar_1;
  } else {
    tmpvar_10 = tmpvar_2;
  };
  texcoord_9.zw = ((tmpvar_10 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  vec3 n_11;
  n_11 = (tmpvar_8.xyz - _WorldSpaceCameraPos);
  vec4 v_12;
  v_12.x = _World2Object[0].x;
  v_12.y = _World2Object[1].x;
  v_12.z = _World2Object[2].x;
  v_12.w = _World2Object[3].x;
  vec4 v_13;
  v_13.x = _World2Object[0].y;
  v_13.y = _World2Object[1].y;
  v_13.z = _World2Object[2].y;
  v_13.w = _World2Object[3].y;
  vec4 v_14;
  v_14.x = _World2Object[0].z;
  v_14.y = _World2Object[1].z;
  v_14.z = _World2Object[2].z;
  v_14.w = _World2Object[3].z;
  vec3 tmpvar_15;
  tmpvar_15 = normalize(((
    (v_12.xyz * gl_Normal.x)
   + 
    (v_13.xyz * gl_Normal.y)
  ) + (v_14.xyz * gl_Normal.z)));
  tmpvar_4.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_5.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_6.xyz = tmpvar_15;
  vec4 ambientOrLightmapUV_16;
  ambientOrLightmapUV_16.w = 0.0;
  vec3 col_17;
  vec4 ndotl_18;
  vec4 lengthSq_19;
  vec4 tmpvar_20;
  tmpvar_20 = (unity_4LightPosX0 - tmpvar_8.x);
  vec4 tmpvar_21;
  tmpvar_21 = (unity_4LightPosY0 - tmpvar_8.y);
  vec4 tmpvar_22;
  tmpvar_22 = (unity_4LightPosZ0 - tmpvar_8.z);
  lengthSq_19 = (tmpvar_20 * tmpvar_20);
  lengthSq_19 = (lengthSq_19 + (tmpvar_21 * tmpvar_21));
  lengthSq_19 = (lengthSq_19 + (tmpvar_22 * tmpvar_22));
  ndotl_18 = (tmpvar_20 * tmpvar_15.x);
  ndotl_18 = (ndotl_18 + (tmpvar_21 * tmpvar_15.y));
  ndotl_18 = (ndotl_18 + (tmpvar_22 * tmpvar_15.z));
  vec4 tmpvar_23;
  tmpvar_23 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_18 * inversesqrt(lengthSq_19)));
  ndotl_18 = tmpvar_23;
  vec4 tmpvar_24;
  tmpvar_24 = (tmpvar_23 * (1.0/((1.0 + 
    (lengthSq_19 * unity_4LightAtten0)
  ))));
  col_17 = (unity_LightColor[0].xyz * tmpvar_24.x);
  col_17 = (col_17 + (unity_LightColor[1].xyz * tmpvar_24.y));
  col_17 = (col_17 + (unity_LightColor[2].xyz * tmpvar_24.z));
  col_17 = (col_17 + (unity_LightColor[3].xyz * tmpvar_24.w));
  ambientOrLightmapUV_16.xyz = col_17;
  vec3 ambient_25;
  ambient_25 = ambientOrLightmapUV_16.xyz;
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    ambient_25 = (col_17 * ((col_17 * 
      ((col_17 * 0.305306) + 0.6821711)
    ) + 0.01252288));
  };
  vec3 x1_26;
  vec4 tmpvar_27;
  tmpvar_27 = (tmpvar_15.xyzz * tmpvar_15.yzzx);
  x1_26.x = dot (unity_SHBr, tmpvar_27);
  x1_26.y = dot (unity_SHBg, tmpvar_27);
  x1_26.z = dot (unity_SHBb, tmpvar_27);
  ambient_25 = (ambient_25 + (x1_26 + (unity_SHC.xyz * 
    ((tmpvar_15.x * tmpvar_15.x) - (tmpvar_15.y * tmpvar_15.y))
  )));
  ambientOrLightmapUV_16.xyz = ambient_25;
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = texcoord_9;
  xlv_TEXCOORD1 = n_11;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  xlv_TEXCOORD5 = ambientOrLightmapUV_16;
  xlv_TEXCOORD8 = tmpvar_7;
}


#endif
#ifdef FRAGMENT
#extension GL_ARB_shader_texture_lod : enable
uniform vec4 _WorldSpaceLightPos0;
uniform vec4 unity_SHAr;
uniform vec4 unity_SHAg;
uniform vec4 unity_SHAb;
uniform samplerCube unity_SpecCube0;
uniform samplerCube unity_SpecCube1;
uniform vec4 unity_SpecCube0_BoxMax;
uniform vec4 unity_SpecCube0_BoxMin;
uniform vec4 unity_SpecCube0_ProbePosition;
uniform vec4 unity_SpecCube0_HDR;
uniform vec4 unity_SpecCube1_BoxMax;
uniform vec4 unity_SpecCube1_BoxMin;
uniform vec4 unity_SpecCube1_ProbePosition;
uniform vec4 unity_SpecCube1_HDR;
uniform vec4 unity_ColorSpaceDielectricSpec;
uniform vec4 unity_ColorSpaceLuminance;
uniform vec4 _LightColor0;
uniform vec4 _Color;
uniform sampler2D _MainTex;
uniform float _Metallic;
uniform float _Glossiness;
uniform sampler2D _OcclusionMap;
uniform float _OcclusionStrength;
uniform vec4 _EmissionColor;
uniform sampler2D _EmissionMap;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
varying vec3 xlv_TEXCOORD8;
void main ()
{
  vec4 c_1;
  vec3 tmpvar_2;
  tmpvar_2 = (_Color.xyz * texture2D (_MainTex, xlv_TEXCOORD0.xy).xyz);
  vec3 tmpvar_3;
  vec3 tmpvar_4;
  tmpvar_4 = mix (unity_ColorSpaceDielectricSpec.xyz, tmpvar_2, vec3(_Metallic));
  float tmpvar_5;
  tmpvar_5 = (unity_ColorSpaceDielectricSpec.w - (_Metallic * unity_ColorSpaceDielectricSpec.w));
  tmpvar_3 = (tmpvar_2 * tmpvar_5);
  vec3 tmpvar_6;
  tmpvar_6 = normalize(xlv_TEXCOORD2_2.xyz);
  vec3 tmpvar_7;
  tmpvar_7 = normalize(xlv_TEXCOORD1);
  float tmpvar_8;
  tmpvar_8 = ((1.0 - _OcclusionStrength) + (texture2D (_OcclusionMap, xlv_TEXCOORD0.xy).y * _OcclusionStrength));
  float tmpvar_9;
  tmpvar_9 = (1.0 - _Glossiness);
  vec3 tmpvar_10;
  tmpvar_10 = (tmpvar_7 - (2.0 * (
    dot (tmpvar_6, tmpvar_7)
   * tmpvar_6)));
  vec3 tmpvar_11;
  vec3 tmpvar_12;
  tmpvar_12 = vec3(0.0, 0.0, 0.0);
  vec3 ambient_13;
  vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = tmpvar_6;
  vec3 x_15;
  x_15.x = dot (unity_SHAr, tmpvar_14);
  x_15.y = dot (unity_SHAg, tmpvar_14);
  x_15.z = dot (unity_SHAb, tmpvar_14);
  vec3 tmpvar_16;
  tmpvar_16 = max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD5.xyz + x_15));
  ambient_13 = tmpvar_16;
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    ambient_13 = max (((1.055 * 
      pow (max (tmpvar_16, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
    ) - 0.055), vec3(0.0, 0.0, 0.0));
  };
  tmpvar_12 = (ambient_13 * tmpvar_8);
  tmpvar_11 = vec3(0.0, 0.0, 0.0);
  vec3 specular_17;
  vec3 worldRefl_18;
  worldRefl_18 = tmpvar_10;
  vec3 worldPos_19;
  worldPos_19 = xlv_TEXCOORD8;
  if ((unity_SpecCube0_ProbePosition.w > 0.0)) {
    vec3 tmpvar_20;
    tmpvar_20 = normalize(tmpvar_10);
    vec3 tmpvar_21;
    tmpvar_21 = ((unity_SpecCube0_BoxMax.xyz - xlv_TEXCOORD8) / tmpvar_20);
    vec3 tmpvar_22;
    tmpvar_22 = ((unity_SpecCube0_BoxMin.xyz - xlv_TEXCOORD8) / tmpvar_20);
    bvec3 tmpvar_23;
    tmpvar_23 = greaterThan (tmpvar_20, vec3(0.0, 0.0, 0.0));
    float tmpvar_24;
    if (tmpvar_23.x) {
      tmpvar_24 = tmpvar_21.x;
    } else {
      tmpvar_24 = tmpvar_22.x;
    };
    float tmpvar_25;
    if (tmpvar_23.y) {
      tmpvar_25 = tmpvar_21.y;
    } else {
      tmpvar_25 = tmpvar_22.y;
    };
    float tmpvar_26;
    if (tmpvar_23.z) {
      tmpvar_26 = tmpvar_21.z;
    } else {
      tmpvar_26 = tmpvar_22.z;
    };
    worldPos_19 = (xlv_TEXCOORD8 - unity_SpecCube0_ProbePosition.xyz);
    worldRefl_18 = (worldPos_19 + (tmpvar_20 * min (
      min (tmpvar_24, tmpvar_25)
    , tmpvar_26)));
  };
  vec4 tmpvar_27;
  tmpvar_27.xyz = worldRefl_18;
  tmpvar_27.w = ((tmpvar_9 * (1.7 - 
    (0.7 * tmpvar_9)
  )) * 6.0);
  vec4 tmpvar_28;
  tmpvar_28 = textureCubeLod (unity_SpecCube0, worldRefl_18, tmpvar_27.w);
  vec3 tmpvar_29;
  tmpvar_29 = ((unity_SpecCube0_HDR.x * pow (tmpvar_28.w, unity_SpecCube0_HDR.y)) * tmpvar_28.xyz);
  if ((unity_SpecCube0_BoxMin.w < 0.99999)) {
    vec3 worldRefl_30;
    worldRefl_30 = tmpvar_10;
    vec3 worldPos_31;
    worldPos_31 = xlv_TEXCOORD8;
    if ((unity_SpecCube1_ProbePosition.w > 0.0)) {
      vec3 tmpvar_32;
      tmpvar_32 = normalize(tmpvar_10);
      vec3 tmpvar_33;
      tmpvar_33 = ((unity_SpecCube1_BoxMax.xyz - xlv_TEXCOORD8) / tmpvar_32);
      vec3 tmpvar_34;
      tmpvar_34 = ((unity_SpecCube1_BoxMin.xyz - xlv_TEXCOORD8) / tmpvar_32);
      bvec3 tmpvar_35;
      tmpvar_35 = greaterThan (tmpvar_32, vec3(0.0, 0.0, 0.0));
      float tmpvar_36;
      if (tmpvar_35.x) {
        tmpvar_36 = tmpvar_33.x;
      } else {
        tmpvar_36 = tmpvar_34.x;
      };
      float tmpvar_37;
      if (tmpvar_35.y) {
        tmpvar_37 = tmpvar_33.y;
      } else {
        tmpvar_37 = tmpvar_34.y;
      };
      float tmpvar_38;
      if (tmpvar_35.z) {
        tmpvar_38 = tmpvar_33.z;
      } else {
        tmpvar_38 = tmpvar_34.z;
      };
      worldPos_31 = (xlv_TEXCOORD8 - unity_SpecCube1_ProbePosition.xyz);
      worldRefl_30 = (worldPos_31 + (tmpvar_32 * min (
        min (tmpvar_36, tmpvar_37)
      , tmpvar_38)));
    };
    vec4 tmpvar_39;
    tmpvar_39.xyz = worldRefl_30;
    tmpvar_39.w = ((tmpvar_9 * (1.7 - 
      (0.7 * tmpvar_9)
    )) * 6.0);
    vec4 tmpvar_40;
    tmpvar_40 = textureCubeLod (unity_SpecCube1, worldRefl_30, tmpvar_39.w);
    specular_17 = mix (((unity_SpecCube1_HDR.x * 
      pow (tmpvar_40.w, unity_SpecCube1_HDR.y)
    ) * tmpvar_40.xyz), tmpvar_29, unity_SpecCube0_BoxMin.www);
  } else {
    specular_17 = tmpvar_29;
  };
  tmpvar_11 = (specular_17 * tmpvar_8);
  vec3 viewDir_41;
  viewDir_41 = -(tmpvar_7);
  float surfaceReduction_42;
  float specularTerm_43;
  float tmpvar_44;
  tmpvar_44 = (1.0 - _Glossiness);
  vec3 tmpvar_45;
  vec3 inVec_46;
  inVec_46 = (_WorldSpaceLightPos0.xyz + viewDir_41);
  tmpvar_45 = (inVec_46 * inversesqrt(max (0.001, 
    dot (inVec_46, inVec_46)
  )));
  float tmpvar_47;
  tmpvar_47 = dot (tmpvar_6, viewDir_41);
  vec3 tmpvar_48;
  if ((tmpvar_47 < 0.0)) {
    tmpvar_48 = (tmpvar_6 + (viewDir_41 * (
      -(tmpvar_47)
     + 1e-05)));
  } else {
    tmpvar_48 = tmpvar_6;
  };
  float tmpvar_49;
  tmpvar_49 = max (0.0, dot (tmpvar_48, _WorldSpaceLightPos0.xyz));
  float tmpvar_50;
  tmpvar_50 = max (0.0, dot (tmpvar_48, tmpvar_45));
  float tmpvar_51;
  tmpvar_51 = max (0.0, dot (tmpvar_48, viewDir_41));
  float tmpvar_52;
  tmpvar_52 = max (0.0, dot (_WorldSpaceLightPos0.xyz, tmpvar_45));
  float tmpvar_53;
  tmpvar_53 = (tmpvar_44 * tmpvar_44);
  float tmpvar_54;
  tmpvar_54 = (tmpvar_44 * tmpvar_44);
  float tmpvar_55;
  tmpvar_55 = (tmpvar_54 * tmpvar_54);
  float tmpvar_56;
  tmpvar_56 = (((tmpvar_50 * tmpvar_50) * (tmpvar_55 - 1.0)) + 1.0);
  float x_57;
  x_57 = (1.0 - tmpvar_49);
  float x_58;
  x_58 = (1.0 - tmpvar_51);
  float tmpvar_59;
  tmpvar_59 = (0.5 + ((2.0 * tmpvar_52) * (tmpvar_52 * tmpvar_44)));
  float tmpvar_60;
  tmpvar_60 = ((1.0 + (
    (tmpvar_59 - 1.0)
   * 
    ((x_57 * x_57) * ((x_57 * x_57) * x_57))
  )) * (1.0 + (
    (tmpvar_59 - 1.0)
   * 
    ((x_58 * x_58) * ((x_58 * x_58) * x_58))
  )));
  float tmpvar_61;
  tmpvar_61 = (((2.0 / 
    (((tmpvar_49 * (
      (tmpvar_51 * (1.0 - tmpvar_53))
     + tmpvar_53)) + (tmpvar_51 * (
      (tmpvar_49 * (1.0 - tmpvar_53))
     + tmpvar_53))) + 1e-05)
  ) * (tmpvar_55 / 
    (((3.141593 * tmpvar_56) * tmpvar_56) + 1e-07)
  )) * 0.7853982);
  specularTerm_43 = tmpvar_61;
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    specularTerm_43 = sqrt(max (0.0001, tmpvar_61));
  };
  float tmpvar_62;
  tmpvar_62 = max (0.0, (specularTerm_43 * tmpvar_49));
  specularTerm_43 = tmpvar_62;
  float tmpvar_63;
  tmpvar_63 = (tmpvar_60 * tmpvar_49);
  float tmpvar_64;
  tmpvar_64 = (tmpvar_44 * tmpvar_44);
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    surfaceReduction_42 = (1.0 - ((0.28 * tmpvar_64) * tmpvar_44));
  } else {
    surfaceReduction_42 = (1.0/(((tmpvar_64 * tmpvar_64) + 1.0)));
  };
  float x_65;
  x_65 = (1.0 - tmpvar_52);
  float x_66;
  x_66 = (1.0 - tmpvar_51);
  vec3 tmpvar_67;
  tmpvar_67 = (((tmpvar_3 * 
    (tmpvar_12 + (_LightColor0.xyz * tmpvar_63))
  ) + (
    (tmpvar_62 * _LightColor0.xyz)
   * 
    (tmpvar_4 + ((1.0 - tmpvar_4) * ((x_65 * x_65) * (
      (x_65 * x_65)
     * x_65))))
  )) + ((surfaceReduction_42 * tmpvar_11) * mix (tmpvar_4, vec3(
    clamp ((_Glossiness + (1.0 - tmpvar_5)), 0.0, 1.0)
  ), vec3(
    ((x_66 * x_66) * ((x_66 * x_66) * x_66))
  ))));
  vec4 tmpvar_68;
  tmpvar_68.w = 1.0;
  tmpvar_68.xyz = tmpvar_67;
  c_1.w = tmpvar_68.w;
  c_1.xyz = (tmpvar_67 + (texture2D (_EmissionMap, xlv_TEXCOORD0.xy).xyz * _EmissionColor.xyz));
  vec4 xlat_varoutput_69;
  xlat_varoutput_69.xyz = c_1.xyz;
  xlat_varoutput_69.w = 1.0;
  gl_FragData[0] = xlat_varoutput_69;
}


#endif
"
}
SubProgram "d3d9 " {
// Stats: 67 math
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "VERTEXLIGHT_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Matrix 8 [_Object2World] 3
Matrix 11 [_World2Object] 3
Matrix 4 [glstate_matrix_mvp]
Vector 25 [_DetailAlbedoMap_ST]
Vector 24 [_MainTex_ST]
Float 26 [_UVSec]
Vector 14 [_WorldSpaceCameraPos]
Vector 18 [unity_4LightAtten0]
Vector 15 [unity_4LightPosX0]
Vector 16 [unity_4LightPosY0]
Vector 17 [unity_4LightPosZ0]
Vector 23 [unity_ColorSpaceLuminance]
Vector 0 [unity_LightColor0]
Vector 1 [unity_LightColor1]
Vector 2 [unity_LightColor2]
Vector 3 [unity_LightColor3]
Vector 21 [unity_SHBb]
Vector 20 [unity_SHBg]
Vector 19 [unity_SHBr]
Vector 22 [unity_SHC]
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   row_major float4x4 _Object2World;
//   float _UVSec;
//   row_major float4x4 _World2Object;
//   float3 _WorldSpaceCameraPos;
//   row_major float4x4 glstate_matrix_mvp;
//   float4 unity_4LightAtten0;
//   float4 unity_4LightPosX0;
//   float4 unity_4LightPosY0;
//   float4 unity_4LightPosZ0;
//   float4 unity_ColorSpaceLuminance;
//   float4 unity_LightColor[8];
//   float4 unity_SHBb;
//   float4 unity_SHBg;
//   float4 unity_SHBr;
//   float4 unity_SHC;
//
//
// Registers:
//
//   Name                      Reg   Size
//   ------------------------- ----- ----
//   unity_LightColor          c0       4
//   glstate_matrix_mvp        c4       4
//   _Object2World             c8       3
//   _World2Object             c11      3
//   _WorldSpaceCameraPos      c14      1
//   unity_4LightPosX0         c15      1
//   unity_4LightPosY0         c16      1
//   unity_4LightPosZ0         c17      1
//   unity_4LightAtten0        c18      1
//   unity_SHBr                c19      1
//   unity_SHBg                c20      1
//   unity_SHBb                c21      1
//   unity_SHC                 c22      1
//   unity_ColorSpaceLuminance c23      1
//   _MainTex_ST               c24      1
//   _DetailAlbedoMap_ST       c25      1
//   _UVSec                    c26      1
//

    vs_3_0
    def c27, 0, 1, 0.305306017, 0.682171106
    def c28, 0.0125228781, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6
    dcl_texcoord8 o7.xyz
    dp4 o0.x, c4, v0
    dp4 o0.y, c5, v0
    dp4 o0.z, c6, v0
    dp4 o0.w, c7, v0
    mad o1.xy, v2, c24, c24.zwzw
    abs r0.x, c26.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c25.xyxy, c25
    dp4 r0.x, c8, v0
    dp4 r0.y, c9, v0
    dp4 r0.z, c10, v0
    add o2.xyz, r0, -c14
    add r1, -r0.z, c17
    mov o7.xyz, r0
    add r2, -r0.x, c15
    add r0, -r0.y, c16
    mul r3.xyz, c12, v1.y
    mad r3.xyz, c11, v1.x, r3
    mad r3.xyz, c13, v1.z, r3
    nrm r4.xyz, r3
    mul r3, r0, r4.y
    mul r0, r0, r0
    mad r0, r2, r2, r0
    mad r2, r2, r4.x, r3
    mad r2, r1, r4.z, r2
    mad r0, r1, r1, r0
    rsq r1.x, r0.x
    rsq r1.y, r0.y
    rsq r1.z, r0.z
    rsq r1.w, r0.w
    mov r3.y, c27.y
    mad r0, r0, c18, r3.y
    mul r1, r1, r2
    max r1, r1, c27.x
    rcp r2.x, r0.x
    rcp r2.y, r0.y
    rcp r2.z, r0.z
    rcp r2.w, r0.w
    mul r0, r1, r2
    mul r1.xyz, r0.y, c1
    mad r1.xyz, c0, r0.x, r1
    mad r0.xyz, c2, r0.z, r1
    mad r0.xyz, c3, r0.w, r0
    mad r1.xyz, r0, c27.z, c27.w
    mad r1.xyz, r0, r1, c28.x
    mad r1.xyz, r0, r1, -r0
    abs r0.w, c23.w
    sge r0.w, -r0.w, r0.w
    mad r0.xyz, r0.w, r1, r0
    mul r0.w, r4.y, r4.y
    mad r0.w, r4.x, r4.x, -r0.w
    mul r1, r4.yzzx, r4.xyzz
    mov o5.xyz, r4
    dp4 r2.x, c19, r1
    dp4 r2.y, c20, r1
    dp4 r2.z, c21, r1
    mad r1.xyz, c22, r0.w, r2
    add o6.xyz, r0, r1
    mov o3, c27.x
    mov o4, c27.x
    mov o5.w, c27.x
    mov o6.w, c27.x

// approximately 66 instruction slots used
"
}
SubProgram "d3d11 " {
// Stats: 57 math
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "VERTEXLIGHT_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
ConstBuffer "$Globals" 240
Vector 48 [unity_ColorSpaceLuminance]
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 32 [unity_4LightPosX0]
Vector 48 [unity_4LightPosY0]
Vector 64 [unity_4LightPosZ0]
Vector 80 [unity_4LightAtten0]
Vector 96 [unity_LightColor0]
Vector 112 [unity_LightColor1]
Vector 128 [unity_LightColor2]
Vector 144 [unity_LightColor3]
Vector 160 [unity_LightColor4]
Vector 176 [unity_LightColor5]
Vector 192 [unity_LightColor6]
Vector 208 [unity_LightColor7]
Vector 656 [unity_SHBr]
Vector 672 [unity_SHBg]
Vector 688 [unity_SHBb]
Vector 704 [unity_SHC]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 8   xyz         7     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer cb0[14], immediateIndexed
      dcl_constantbuffer cb1[5], immediateIndexed
      dcl_constantbuffer cb2[45], immediateIndexed
      dcl_constantbuffer cb3[19], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyz
      dcl_temps 5
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: mad o0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   4: eq r0.x, cb0[13].z, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[11].xxxy, cb0[11].zzzw
   7: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  13: mov o3.xyzw, l(0,0,0,0)
  14: mov o4.xyzw, l(0,0,0,0)
  15: mul r1.x, v1.x, cb3[16].x
  16: mul r1.y, v1.x, cb3[17].x
  17: mul r1.z, v1.x, cb3[18].x
  18: mul r2.x, v1.y, cb3[16].y
  19: mul r2.y, v1.y, cb3[17].y
  20: mul r2.z, v1.y, cb3[18].y
  21: add r1.xyz, r1.xyzx, r2.xyzx
  22: mul r2.x, v1.z, cb3[16].z
  23: mul r2.y, v1.z, cb3[17].z
  24: mul r2.z, v1.z, cb3[18].z
  25: add r1.xyz, r1.xyzx, r2.xyzx
  26: dp3 r0.w, r1.xyzx, r1.xyzx
  27: rsq r0.w, r0.w
  28: mul r1.xyz, r0.wwww, r1.xyzx
  29: mov o5.xyz, r1.xyzx
  30: mov o5.w, l(0)
  31: add r2.xyzw, -r0.yyyy, cb2[3].xyzw
  32: mul r3.xyzw, r1.yyyy, r2.xyzw
  33: mul r2.xyzw, r2.xyzw, r2.xyzw
  34: add r4.xyzw, -r0.xxxx, cb2[2].xyzw
  35: mad r3.xyzw, r4.xyzw, r1.xxxx, r3.xyzw
  36: mad r2.xyzw, r4.xyzw, r4.xyzw, r2.xyzw
  37: add r4.xyzw, -r0.zzzz, cb2[4].xyzw
  38: mov o7.xyz, r0.xyzx
  39: mad r0.xyzw, r4.xyzw, r1.zzzz, r3.xyzw
  40: mad r2.xyzw, r4.xyzw, r4.xyzw, r2.xyzw
  41: rsq r3.xyzw, r2.xyzw
  42: mad r2.xyzw, r2.xyzw, cb2[5].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  43: div r2.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r2.xyzw
  44: mul r0.xyzw, r0.xyzw, r3.xyzw
  45: max r0.xyzw, r0.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  46: mul r0.xyzw, r2.xyzw, r0.xyzw
  47: mul r2.xyz, r0.yyyy, cb2[7].xyzx
  48: mad r2.xyz, cb2[6].xyzx, r0.xxxx, r2.xyzx
  49: mad r0.xyz, cb2[8].xyzx, r0.zzzz, r2.xyzx
  50: mad r0.xyz, cb2[9].xyzx, r0.wwww, r0.xyzx
  51: mad r2.xyz, r0.xyzx, l(0.305306, 0.305306, 0.305306, 0.000000), l(0.682171, 0.682171, 0.682171, 0.000000)
  52: mad r2.xyz, r0.xyzx, r2.xyzx, l(0.012523, 0.012523, 0.012523, 0.000000)
  53: mul r2.xyz, r0.xyzx, r2.xyzx
  54: eq r0.w, cb0[3].w, l(0.000000)
  55: movc r0.xyz, r0.wwww, r2.xyzx, r0.xyzx
  56: mul r0.w, r1.y, r1.y
  57: mad r0.w, r1.x, r1.x, -r0.w
  58: mul r1.xyzw, r1.yzzx, r1.xyzz
  59: dp4 r2.x, cb2[41].xyzw, r1.xyzw
  60: dp4 r2.y, cb2[42].xyzw, r1.xyzw
  61: dp4 r2.z, cb2[43].xyzw, r1.xyzw
  62: mad r1.xyz, cb2[44].xyzx, r0.wwww, r2.xyzx
  63: add o6.xyz, r0.xyzx, r1.xyzx
  64: mov o6.w, l(0)
  65: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
// Stats: 182 math, 6 textures, 13 branches
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "VERTEXLIGHT_ON" }
"#version 120

#ifdef VERTEX
uniform vec3 _WorldSpaceCameraPos;
uniform vec4 _ProjectionParams;
uniform vec4 unity_4LightPosX0;
uniform vec4 unity_4LightPosY0;
uniform vec4 unity_4LightPosZ0;
uniform vec4 unity_4LightAtten0;
uniform vec4 unity_LightColor[8];
uniform vec4 unity_SHBr;
uniform vec4 unity_SHBg;
uniform vec4 unity_SHBb;
uniform vec4 unity_SHC;

uniform mat4 _Object2World;
uniform mat4 _World2Object;
uniform vec4 unity_ColorSpaceLuminance;
uniform vec4 _MainTex_ST;
uniform vec4 _DetailAlbedoMap_ST;
uniform float _UVSec;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
varying vec4 xlv_TEXCOORD6;
varying vec3 xlv_TEXCOORD8;
void main ()
{
  vec2 tmpvar_1;
  tmpvar_1 = gl_MultiTexCoord0.xy;
  vec2 tmpvar_2;
  tmpvar_2 = gl_MultiTexCoord1.xy;
  vec4 tmpvar_3;
  vec4 tmpvar_4;
  vec4 tmpvar_5;
  vec4 tmpvar_6;
  vec3 tmpvar_7;
  vec4 tmpvar_8;
  tmpvar_8 = (_Object2World * gl_Vertex);
  tmpvar_7 = tmpvar_8.xyz;
  tmpvar_3 = (gl_ModelViewProjectionMatrix * gl_Vertex);
  vec4 texcoord_9;
  texcoord_9.xy = ((gl_MultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  vec2 tmpvar_10;
  if ((_UVSec == 0.0)) {
    tmpvar_10 = tmpvar_1;
  } else {
    tmpvar_10 = tmpvar_2;
  };
  texcoord_9.zw = ((tmpvar_10 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  vec3 n_11;
  n_11 = (tmpvar_8.xyz - _WorldSpaceCameraPos);
  vec4 v_12;
  v_12.x = _World2Object[0].x;
  v_12.y = _World2Object[1].x;
  v_12.z = _World2Object[2].x;
  v_12.w = _World2Object[3].x;
  vec4 v_13;
  v_13.x = _World2Object[0].y;
  v_13.y = _World2Object[1].y;
  v_13.z = _World2Object[2].y;
  v_13.w = _World2Object[3].y;
  vec4 v_14;
  v_14.x = _World2Object[0].z;
  v_14.y = _World2Object[1].z;
  v_14.z = _World2Object[2].z;
  v_14.w = _World2Object[3].z;
  vec3 tmpvar_15;
  tmpvar_15 = normalize(((
    (v_12.xyz * gl_Normal.x)
   + 
    (v_13.xyz * gl_Normal.y)
  ) + (v_14.xyz * gl_Normal.z)));
  tmpvar_4.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_5.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_6.xyz = tmpvar_15;
  vec4 o_16;
  vec4 tmpvar_17;
  tmpvar_17 = (tmpvar_3 * 0.5);
  vec2 tmpvar_18;
  tmpvar_18.x = tmpvar_17.x;
  tmpvar_18.y = (tmpvar_17.y * _ProjectionParams.x);
  o_16.xy = (tmpvar_18 + tmpvar_17.w);
  o_16.zw = tmpvar_3.zw;
  vec4 ambientOrLightmapUV_19;
  ambientOrLightmapUV_19.w = 0.0;
  vec3 col_20;
  vec4 ndotl_21;
  vec4 lengthSq_22;
  vec4 tmpvar_23;
  tmpvar_23 = (unity_4LightPosX0 - tmpvar_8.x);
  vec4 tmpvar_24;
  tmpvar_24 = (unity_4LightPosY0 - tmpvar_8.y);
  vec4 tmpvar_25;
  tmpvar_25 = (unity_4LightPosZ0 - tmpvar_8.z);
  lengthSq_22 = (tmpvar_23 * tmpvar_23);
  lengthSq_22 = (lengthSq_22 + (tmpvar_24 * tmpvar_24));
  lengthSq_22 = (lengthSq_22 + (tmpvar_25 * tmpvar_25));
  ndotl_21 = (tmpvar_23 * tmpvar_15.x);
  ndotl_21 = (ndotl_21 + (tmpvar_24 * tmpvar_15.y));
  ndotl_21 = (ndotl_21 + (tmpvar_25 * tmpvar_15.z));
  vec4 tmpvar_26;
  tmpvar_26 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_21 * inversesqrt(lengthSq_22)));
  ndotl_21 = tmpvar_26;
  vec4 tmpvar_27;
  tmpvar_27 = (tmpvar_26 * (1.0/((1.0 + 
    (lengthSq_22 * unity_4LightAtten0)
  ))));
  col_20 = (unity_LightColor[0].xyz * tmpvar_27.x);
  col_20 = (col_20 + (unity_LightColor[1].xyz * tmpvar_27.y));
  col_20 = (col_20 + (unity_LightColor[2].xyz * tmpvar_27.z));
  col_20 = (col_20 + (unity_LightColor[3].xyz * tmpvar_27.w));
  ambientOrLightmapUV_19.xyz = col_20;
  vec3 ambient_28;
  ambient_28 = ambientOrLightmapUV_19.xyz;
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    ambient_28 = (col_20 * ((col_20 * 
      ((col_20 * 0.305306) + 0.6821711)
    ) + 0.01252288));
  };
  vec3 x1_29;
  vec4 tmpvar_30;
  tmpvar_30 = (tmpvar_15.xyzz * tmpvar_15.yzzx);
  x1_29.x = dot (unity_SHBr, tmpvar_30);
  x1_29.y = dot (unity_SHBg, tmpvar_30);
  x1_29.z = dot (unity_SHBb, tmpvar_30);
  ambient_28 = (ambient_28 + (x1_29 + (unity_SHC.xyz * 
    ((tmpvar_15.x * tmpvar_15.x) - (tmpvar_15.y * tmpvar_15.y))
  )));
  ambientOrLightmapUV_19.xyz = ambient_28;
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = texcoord_9;
  xlv_TEXCOORD1 = n_11;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  xlv_TEXCOORD5 = ambientOrLightmapUV_19;
  xlv_TEXCOORD6 = o_16;
  xlv_TEXCOORD8 = tmpvar_7;
}


#endif
#ifdef FRAGMENT
#extension GL_ARB_shader_texture_lod : enable
uniform vec4 _WorldSpaceLightPos0;
uniform vec4 unity_SHAr;
uniform vec4 unity_SHAg;
uniform vec4 unity_SHAb;
uniform samplerCube unity_SpecCube0;
uniform samplerCube unity_SpecCube1;
uniform vec4 unity_SpecCube0_BoxMax;
uniform vec4 unity_SpecCube0_BoxMin;
uniform vec4 unity_SpecCube0_ProbePosition;
uniform vec4 unity_SpecCube0_HDR;
uniform vec4 unity_SpecCube1_BoxMax;
uniform vec4 unity_SpecCube1_BoxMin;
uniform vec4 unity_SpecCube1_ProbePosition;
uniform vec4 unity_SpecCube1_HDR;
uniform vec4 unity_ColorSpaceDielectricSpec;
uniform vec4 unity_ColorSpaceLuminance;
uniform vec4 _LightColor0;
uniform vec4 _Color;
uniform sampler2D _MainTex;
uniform float _Metallic;
uniform float _Glossiness;
uniform sampler2D _OcclusionMap;
uniform float _OcclusionStrength;
uniform vec4 _EmissionColor;
uniform sampler2D _EmissionMap;
uniform sampler2D _ShadowMapTexture;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
varying vec4 xlv_TEXCOORD6;
varying vec3 xlv_TEXCOORD8;
void main ()
{
  vec4 c_1;
  vec3 tmpvar_2;
  tmpvar_2 = (_Color.xyz * texture2D (_MainTex, xlv_TEXCOORD0.xy).xyz);
  vec3 tmpvar_3;
  vec3 tmpvar_4;
  tmpvar_4 = mix (unity_ColorSpaceDielectricSpec.xyz, tmpvar_2, vec3(_Metallic));
  float tmpvar_5;
  tmpvar_5 = (unity_ColorSpaceDielectricSpec.w - (_Metallic * unity_ColorSpaceDielectricSpec.w));
  tmpvar_3 = (tmpvar_2 * tmpvar_5);
  vec3 tmpvar_6;
  tmpvar_6 = normalize(xlv_TEXCOORD2_2.xyz);
  vec3 tmpvar_7;
  tmpvar_7 = normalize(xlv_TEXCOORD1);
  float tmpvar_8;
  tmpvar_8 = ((1.0 - _OcclusionStrength) + (texture2D (_OcclusionMap, xlv_TEXCOORD0.xy).y * _OcclusionStrength));
  float tmpvar_9;
  tmpvar_9 = (1.0 - _Glossiness);
  vec3 tmpvar_10;
  tmpvar_10 = (tmpvar_7 - (2.0 * (
    dot (tmpvar_6, tmpvar_7)
   * tmpvar_6)));
  vec3 tmpvar_11;
  vec3 tmpvar_12;
  vec3 tmpvar_13;
  tmpvar_13 = vec3(0.0, 0.0, 0.0);
  tmpvar_12 = (_LightColor0.xyz * texture2DProj (_ShadowMapTexture, xlv_TEXCOORD6).x);
  vec3 ambient_14;
  vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = tmpvar_6;
  vec3 x_16;
  x_16.x = dot (unity_SHAr, tmpvar_15);
  x_16.y = dot (unity_SHAg, tmpvar_15);
  x_16.z = dot (unity_SHAb, tmpvar_15);
  vec3 tmpvar_17;
  tmpvar_17 = max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD5.xyz + x_16));
  ambient_14 = tmpvar_17;
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    ambient_14 = max (((1.055 * 
      pow (max (tmpvar_17, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
    ) - 0.055), vec3(0.0, 0.0, 0.0));
  };
  tmpvar_13 = (ambient_14 * tmpvar_8);
  tmpvar_11 = vec3(0.0, 0.0, 0.0);
  vec3 specular_18;
  vec3 worldRefl_19;
  worldRefl_19 = tmpvar_10;
  vec3 worldPos_20;
  worldPos_20 = xlv_TEXCOORD8;
  if ((unity_SpecCube0_ProbePosition.w > 0.0)) {
    vec3 tmpvar_21;
    tmpvar_21 = normalize(tmpvar_10);
    vec3 tmpvar_22;
    tmpvar_22 = ((unity_SpecCube0_BoxMax.xyz - xlv_TEXCOORD8) / tmpvar_21);
    vec3 tmpvar_23;
    tmpvar_23 = ((unity_SpecCube0_BoxMin.xyz - xlv_TEXCOORD8) / tmpvar_21);
    bvec3 tmpvar_24;
    tmpvar_24 = greaterThan (tmpvar_21, vec3(0.0, 0.0, 0.0));
    float tmpvar_25;
    if (tmpvar_24.x) {
      tmpvar_25 = tmpvar_22.x;
    } else {
      tmpvar_25 = tmpvar_23.x;
    };
    float tmpvar_26;
    if (tmpvar_24.y) {
      tmpvar_26 = tmpvar_22.y;
    } else {
      tmpvar_26 = tmpvar_23.y;
    };
    float tmpvar_27;
    if (tmpvar_24.z) {
      tmpvar_27 = tmpvar_22.z;
    } else {
      tmpvar_27 = tmpvar_23.z;
    };
    worldPos_20 = (xlv_TEXCOORD8 - unity_SpecCube0_ProbePosition.xyz);
    worldRefl_19 = (worldPos_20 + (tmpvar_21 * min (
      min (tmpvar_25, tmpvar_26)
    , tmpvar_27)));
  };
  vec4 tmpvar_28;
  tmpvar_28.xyz = worldRefl_19;
  tmpvar_28.w = ((tmpvar_9 * (1.7 - 
    (0.7 * tmpvar_9)
  )) * 6.0);
  vec4 tmpvar_29;
  tmpvar_29 = textureCubeLod (unity_SpecCube0, worldRefl_19, tmpvar_28.w);
  vec3 tmpvar_30;
  tmpvar_30 = ((unity_SpecCube0_HDR.x * pow (tmpvar_29.w, unity_SpecCube0_HDR.y)) * tmpvar_29.xyz);
  if ((unity_SpecCube0_BoxMin.w < 0.99999)) {
    vec3 worldRefl_31;
    worldRefl_31 = tmpvar_10;
    vec3 worldPos_32;
    worldPos_32 = xlv_TEXCOORD8;
    if ((unity_SpecCube1_ProbePosition.w > 0.0)) {
      vec3 tmpvar_33;
      tmpvar_33 = normalize(tmpvar_10);
      vec3 tmpvar_34;
      tmpvar_34 = ((unity_SpecCube1_BoxMax.xyz - xlv_TEXCOORD8) / tmpvar_33);
      vec3 tmpvar_35;
      tmpvar_35 = ((unity_SpecCube1_BoxMin.xyz - xlv_TEXCOORD8) / tmpvar_33);
      bvec3 tmpvar_36;
      tmpvar_36 = greaterThan (tmpvar_33, vec3(0.0, 0.0, 0.0));
      float tmpvar_37;
      if (tmpvar_36.x) {
        tmpvar_37 = tmpvar_34.x;
      } else {
        tmpvar_37 = tmpvar_35.x;
      };
      float tmpvar_38;
      if (tmpvar_36.y) {
        tmpvar_38 = tmpvar_34.y;
      } else {
        tmpvar_38 = tmpvar_35.y;
      };
      float tmpvar_39;
      if (tmpvar_36.z) {
        tmpvar_39 = tmpvar_34.z;
      } else {
        tmpvar_39 = tmpvar_35.z;
      };
      worldPos_32 = (xlv_TEXCOORD8 - unity_SpecCube1_ProbePosition.xyz);
      worldRefl_31 = (worldPos_32 + (tmpvar_33 * min (
        min (tmpvar_37, tmpvar_38)
      , tmpvar_39)));
    };
    vec4 tmpvar_40;
    tmpvar_40.xyz = worldRefl_31;
    tmpvar_40.w = ((tmpvar_9 * (1.7 - 
      (0.7 * tmpvar_9)
    )) * 6.0);
    vec4 tmpvar_41;
    tmpvar_41 = textureCubeLod (unity_SpecCube1, worldRefl_31, tmpvar_40.w);
    specular_18 = mix (((unity_SpecCube1_HDR.x * 
      pow (tmpvar_41.w, unity_SpecCube1_HDR.y)
    ) * tmpvar_41.xyz), tmpvar_30, unity_SpecCube0_BoxMin.www);
  } else {
    specular_18 = tmpvar_30;
  };
  tmpvar_11 = (specular_18 * tmpvar_8);
  vec3 viewDir_42;
  viewDir_42 = -(tmpvar_7);
  float surfaceReduction_43;
  float specularTerm_44;
  float tmpvar_45;
  tmpvar_45 = (1.0 - _Glossiness);
  vec3 tmpvar_46;
  vec3 inVec_47;
  inVec_47 = (_WorldSpaceLightPos0.xyz + viewDir_42);
  tmpvar_46 = (inVec_47 * inversesqrt(max (0.001, 
    dot (inVec_47, inVec_47)
  )));
  float tmpvar_48;
  tmpvar_48 = dot (tmpvar_6, viewDir_42);
  vec3 tmpvar_49;
  if ((tmpvar_48 < 0.0)) {
    tmpvar_49 = (tmpvar_6 + (viewDir_42 * (
      -(tmpvar_48)
     + 1e-05)));
  } else {
    tmpvar_49 = tmpvar_6;
  };
  float tmpvar_50;
  tmpvar_50 = max (0.0, dot (tmpvar_49, _WorldSpaceLightPos0.xyz));
  float tmpvar_51;
  tmpvar_51 = max (0.0, dot (tmpvar_49, tmpvar_46));
  float tmpvar_52;
  tmpvar_52 = max (0.0, dot (tmpvar_49, viewDir_42));
  float tmpvar_53;
  tmpvar_53 = max (0.0, dot (_WorldSpaceLightPos0.xyz, tmpvar_46));
  float tmpvar_54;
  tmpvar_54 = (tmpvar_45 * tmpvar_45);
  float tmpvar_55;
  tmpvar_55 = (tmpvar_45 * tmpvar_45);
  float tmpvar_56;
  tmpvar_56 = (tmpvar_55 * tmpvar_55);
  float tmpvar_57;
  tmpvar_57 = (((tmpvar_51 * tmpvar_51) * (tmpvar_56 - 1.0)) + 1.0);
  float x_58;
  x_58 = (1.0 - tmpvar_50);
  float x_59;
  x_59 = (1.0 - tmpvar_52);
  float tmpvar_60;
  tmpvar_60 = (0.5 + ((2.0 * tmpvar_53) * (tmpvar_53 * tmpvar_45)));
  float tmpvar_61;
  tmpvar_61 = ((1.0 + (
    (tmpvar_60 - 1.0)
   * 
    ((x_58 * x_58) * ((x_58 * x_58) * x_58))
  )) * (1.0 + (
    (tmpvar_60 - 1.0)
   * 
    ((x_59 * x_59) * ((x_59 * x_59) * x_59))
  )));
  float tmpvar_62;
  tmpvar_62 = (((2.0 / 
    (((tmpvar_50 * (
      (tmpvar_52 * (1.0 - tmpvar_54))
     + tmpvar_54)) + (tmpvar_52 * (
      (tmpvar_50 * (1.0 - tmpvar_54))
     + tmpvar_54))) + 1e-05)
  ) * (tmpvar_56 / 
    (((3.141593 * tmpvar_57) * tmpvar_57) + 1e-07)
  )) * 0.7853982);
  specularTerm_44 = tmpvar_62;
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    specularTerm_44 = sqrt(max (0.0001, tmpvar_62));
  };
  float tmpvar_63;
  tmpvar_63 = max (0.0, (specularTerm_44 * tmpvar_50));
  specularTerm_44 = tmpvar_63;
  float tmpvar_64;
  tmpvar_64 = (tmpvar_61 * tmpvar_50);
  float tmpvar_65;
  tmpvar_65 = (tmpvar_45 * tmpvar_45);
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    surfaceReduction_43 = (1.0 - ((0.28 * tmpvar_65) * tmpvar_45));
  } else {
    surfaceReduction_43 = (1.0/(((tmpvar_65 * tmpvar_65) + 1.0)));
  };
  float x_66;
  x_66 = (1.0 - tmpvar_53);
  float x_67;
  x_67 = (1.0 - tmpvar_52);
  vec3 tmpvar_68;
  tmpvar_68 = (((tmpvar_3 * 
    (tmpvar_13 + (tmpvar_12 * tmpvar_64))
  ) + (
    (tmpvar_63 * tmpvar_12)
   * 
    (tmpvar_4 + ((1.0 - tmpvar_4) * ((x_66 * x_66) * (
      (x_66 * x_66)
     * x_66))))
  )) + ((surfaceReduction_43 * tmpvar_11) * mix (tmpvar_4, vec3(
    clamp ((_Glossiness + (1.0 - tmpvar_5)), 0.0, 1.0)
  ), vec3(
    ((x_67 * x_67) * ((x_67 * x_67) * x_67))
  ))));
  vec4 tmpvar_69;
  tmpvar_69.w = 1.0;
  tmpvar_69.xyz = tmpvar_68;
  c_1.w = tmpvar_69.w;
  c_1.xyz = (tmpvar_68 + (texture2D (_EmissionMap, xlv_TEXCOORD0.xy).xyz * _EmissionColor.xyz));
  vec4 xlat_varoutput_70;
  xlat_varoutput_70.xyz = c_1.xyz;
  xlat_varoutput_70.w = 1.0;
  gl_FragData[0] = xlat_varoutput_70;
}


#endif
"
}
SubProgram "d3d9 " {
// Stats: 73 math
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "VERTEXLIGHT_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Matrix 8 [_Object2World] 3
Matrix 11 [_World2Object] 3
Matrix 4 [glstate_matrix_mvp]
Vector 27 [_DetailAlbedoMap_ST]
Vector 26 [_MainTex_ST]
Vector 15 [_ProjectionParams]
Vector 16 [_ScreenParams]
Float 28 [_UVSec]
Vector 14 [_WorldSpaceCameraPos]
Vector 20 [unity_4LightAtten0]
Vector 17 [unity_4LightPosX0]
Vector 18 [unity_4LightPosY0]
Vector 19 [unity_4LightPosZ0]
Vector 25 [unity_ColorSpaceLuminance]
Vector 0 [unity_LightColor0]
Vector 1 [unity_LightColor1]
Vector 2 [unity_LightColor2]
Vector 3 [unity_LightColor3]
Vector 23 [unity_SHBb]
Vector 22 [unity_SHBg]
Vector 21 [unity_SHBr]
Vector 24 [unity_SHC]
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   row_major float4x4 _Object2World;
//   float4 _ProjectionParams;
//   float4 _ScreenParams;
//   float _UVSec;
//   row_major float4x4 _World2Object;
//   float3 _WorldSpaceCameraPos;
//   row_major float4x4 glstate_matrix_mvp;
//   float4 unity_4LightAtten0;
//   float4 unity_4LightPosX0;
//   float4 unity_4LightPosY0;
//   float4 unity_4LightPosZ0;
//   float4 unity_ColorSpaceLuminance;
//   float4 unity_LightColor[8];
//   float4 unity_SHBb;
//   float4 unity_SHBg;
//   float4 unity_SHBr;
//   float4 unity_SHC;
//
//
// Registers:
//
//   Name                      Reg   Size
//   ------------------------- ----- ----
//   unity_LightColor          c0       4
//   glstate_matrix_mvp        c4       4
//   _Object2World             c8       3
//   _World2Object             c11      3
//   _WorldSpaceCameraPos      c14      1
//   _ProjectionParams         c15      1
//   _ScreenParams             c16      1
//   unity_4LightPosX0         c17      1
//   unity_4LightPosY0         c18      1
//   unity_4LightPosZ0         c19      1
//   unity_4LightAtten0        c20      1
//   unity_SHBr                c21      1
//   unity_SHBg                c22      1
//   unity_SHBb                c23      1
//   unity_SHC                 c24      1
//   unity_ColorSpaceLuminance c25      1
//   _MainTex_ST               c26      1
//   _DetailAlbedoMap_ST       c27      1
//   _UVSec                    c28      1
//

    vs_3_0
    def c29, 0.5, 0, 1, 0.0125228781
    def c30, 0.305306017, 0.682171106, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6
    dcl_texcoord6 o7
    dcl_texcoord8 o8.xyz
    mad o1.xy, v2, c26, c26.zwzw
    abs r0.x, c28.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c27.xyxy, c27
    dp4 r0.x, c8, v0
    dp4 r0.y, c9, v0
    dp4 r0.z, c10, v0
    add o2.xyz, r0, -c14
    dp4 r1.y, c5, v0
    mul r0.w, r1.y, c15.x
    mul r2.w, r0.w, c29.x
    dp4 r1.x, c4, v0
    dp4 r1.w, c7, v0
    mul r2.xz, r1.xyww, c29.x
    mad o7.xy, r2.z, c16.zwzw, r2.xwzw
    add r2, -r0.z, c19
    mov o8.xyz, r0
    add r3, -r0.x, c17
    add r0, -r0.y, c18
    mul r4.xyz, c12, v1.y
    mad r4.xyz, c11, v1.x, r4
    mad r4.xyz, c13, v1.z, r4
    nrm r5.xyz, r4
    mul r4, r0, r5.y
    mul r0, r0, r0
    mad r0, r3, r3, r0
    mad r3, r3, r5.x, r4
    mad r3, r2, r5.z, r3
    mad r0, r2, r2, r0
    rsq r2.x, r0.x
    rsq r2.y, r0.y
    rsq r2.z, r0.z
    rsq r2.w, r0.w
    mov r4.z, c29.z
    mad r0, r0, c20, r4.z
    mul r2, r2, r3
    max r2, r2, c29.y
    rcp r3.x, r0.x
    rcp r3.y, r0.y
    rcp r3.z, r0.z
    rcp r3.w, r0.w
    mul r0, r2, r3
    mul r2.xyz, r0.y, c1
    mad r2.xyz, c0, r0.x, r2
    mad r0.xyz, c2, r0.z, r2
    mad r0.xyz, c3, r0.w, r0
    mad r2.xyz, r0, c30.x, c30.y
    mad r2.xyz, r0, r2, c29.w
    mad r2.xyz, r0, r2, -r0
    abs r0.w, c25.w
    sge r0.w, -r0.w, r0.w
    mad r0.xyz, r0.w, r2, r0
    mul r0.w, r5.y, r5.y
    mad r0.w, r5.x, r5.x, -r0.w
    mul r2, r5.yzzx, r5.xyzz
    mov o5.xyz, r5
    dp4 r3.x, c21, r2
    dp4 r3.y, c22, r2
    dp4 r3.z, c23, r2
    mad r2.xyz, c24, r0.w, r3
    add o6.xyz, r0, r2
    dp4 r1.z, c6, v0
    mov o0, r1
    mov o7.zw, r1
    mov o3, c29.y
    mov o4, c29.y
    mov o5.w, c29.y
    mov o6.w, c29.y

// approximately 72 instruction slots used
"
}
SubProgram "d3d11 " {
// Stats: 60 math
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "VERTEXLIGHT_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
ConstBuffer "$Globals" 240
Vector 48 [unity_ColorSpaceLuminance]
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
Vector 80 [_ProjectionParams]
ConstBuffer "UnityLighting" 720
Vector 32 [unity_4LightPosX0]
Vector 48 [unity_4LightPosY0]
Vector 64 [unity_4LightPosZ0]
Vector 80 [unity_4LightAtten0]
Vector 96 [unity_LightColor0]
Vector 112 [unity_LightColor1]
Vector 128 [unity_LightColor2]
Vector 144 [unity_LightColor3]
Vector 160 [unity_LightColor4]
Vector 176 [unity_LightColor5]
Vector 192 [unity_LightColor6]
Vector 208 [unity_LightColor7]
Vector 656 [unity_SHBr]
Vector 672 [unity_SHBg]
Vector 688 [unity_SHBb]
Vector 704 [unity_SHC]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
// TEXCOORD                 8   xyz         8     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer cb0[14], immediateIndexed
      dcl_constantbuffer cb1[6], immediateIndexed
      dcl_constantbuffer cb2[45], immediateIndexed
      dcl_constantbuffer cb3[19], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_output o8.xyz
      dcl_temps 6
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   4: mov o0.xyzw, r0.xyzw
   5: eq r1.x, cb0[13].z, l(0.000000)
   6: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
   7: mad o1.zw, r1.xxxy, cb0[11].xxxy, cb0[11].zzzw
   8: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   9: mul r1.xyz, v0.yyyy, cb3[13].xyzx
  10: mad r1.xyz, cb3[12].xyzx, v0.xxxx, r1.xyzx
  11: mad r1.xyz, cb3[14].xyzx, v0.zzzz, r1.xyzx
  12: mad r1.xyz, cb3[15].xyzx, v0.wwww, r1.xyzx
  13: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  14: mov o3.xyzw, l(0,0,0,0)
  15: mov o4.xyzw, l(0,0,0,0)
  16: mul r2.x, v1.x, cb3[16].x
  17: mul r2.y, v1.x, cb3[17].x
  18: mul r2.z, v1.x, cb3[18].x
  19: mul r3.x, v1.y, cb3[16].y
  20: mul r3.y, v1.y, cb3[17].y
  21: mul r3.z, v1.y, cb3[18].y
  22: add r2.xyz, r2.xyzx, r3.xyzx
  23: mul r3.x, v1.z, cb3[16].z
  24: mul r3.y, v1.z, cb3[17].z
  25: mul r3.z, v1.z, cb3[18].z
  26: add r2.xyz, r2.xyzx, r3.xyzx
  27: dp3 r1.w, r2.xyzx, r2.xyzx
  28: rsq r1.w, r1.w
  29: mul r2.xyz, r1.wwww, r2.xyzx
  30: mov o5.xyz, r2.xyzx
  31: mov o5.w, l(0)
  32: add r3.xyzw, -r1.yyyy, cb2[3].xyzw
  33: mul r4.xyzw, r2.yyyy, r3.xyzw
  34: mul r3.xyzw, r3.xyzw, r3.xyzw
  35: add r5.xyzw, -r1.xxxx, cb2[2].xyzw
  36: mad r4.xyzw, r5.xyzw, r2.xxxx, r4.xyzw
  37: mad r3.xyzw, r5.xyzw, r5.xyzw, r3.xyzw
  38: add r5.xyzw, -r1.zzzz, cb2[4].xyzw
  39: mov o8.xyz, r1.xyzx
  40: mad r1.xyzw, r5.xyzw, r2.zzzz, r4.xyzw
  41: mad r3.xyzw, r5.xyzw, r5.xyzw, r3.xyzw
  42: rsq r4.xyzw, r3.xyzw
  43: mad r3.xyzw, r3.xyzw, cb2[5].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  44: div r3.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r3.xyzw
  45: mul r1.xyzw, r1.xyzw, r4.xyzw
  46: max r1.xyzw, r1.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  47: mul r1.xyzw, r3.xyzw, r1.xyzw
  48: mul r3.xyz, r1.yyyy, cb2[7].xyzx
  49: mad r3.xyz, cb2[6].xyzx, r1.xxxx, r3.xyzx
  50: mad r1.xyz, cb2[8].xyzx, r1.zzzz, r3.xyzx
  51: mad r1.xyz, cb2[9].xyzx, r1.wwww, r1.xyzx
  52: mad r3.xyz, r1.xyzx, l(0.305306, 0.305306, 0.305306, 0.000000), l(0.682171, 0.682171, 0.682171, 0.000000)
  53: mad r3.xyz, r1.xyzx, r3.xyzx, l(0.012523, 0.012523, 0.012523, 0.000000)
  54: mul r3.xyz, r1.xyzx, r3.xyzx
  55: eq r1.w, cb0[3].w, l(0.000000)
  56: movc r1.xyz, r1.wwww, r3.xyzx, r1.xyzx
  57: mul r1.w, r2.y, r2.y
  58: mad r1.w, r2.x, r2.x, -r1.w
  59: mul r2.xyzw, r2.yzzx, r2.xyzz
  60: dp4 r3.x, cb2[41].xyzw, r2.xyzw
  61: dp4 r3.y, cb2[42].xyzw, r2.xyzw
  62: dp4 r3.z, cb2[43].xyzw, r2.xyzw
  63: mad r2.xyz, cb2[44].xyzx, r1.wwww, r3.xyzx
  64: add o6.xyz, r1.xyzx, r2.xyzx
  65: mov o6.w, l(0)
  66: mul r0.y, r0.y, cb1[5].x
  67: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  68: mov o7.zw, r0.zzzw
  69: add o7.xy, r1.zzzz, r1.xwxx
  70: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
// Stats: 179 math, 4 textures, 13 branches
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_ALPHABLEND_ON" }
"#version 120

#ifdef VERTEX
uniform vec3 _WorldSpaceCameraPos;
uniform vec4 unity_SHBr;
uniform vec4 unity_SHBg;
uniform vec4 unity_SHBb;
uniform vec4 unity_SHC;

uniform mat4 _Object2World;
uniform mat4 _World2Object;
uniform vec4 unity_ColorSpaceLuminance;
uniform vec4 _MainTex_ST;
uniform vec4 _DetailAlbedoMap_ST;
uniform float _UVSec;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
varying vec3 xlv_TEXCOORD8;
void main ()
{
  vec2 tmpvar_1;
  tmpvar_1 = gl_MultiTexCoord0.xy;
  vec2 tmpvar_2;
  tmpvar_2 = gl_MultiTexCoord1.xy;
  vec4 tmpvar_3;
  vec4 tmpvar_4;
  vec4 tmpvar_5;
  vec4 tmpvar_6;
  vec3 tmpvar_7;
  vec4 tmpvar_8;
  tmpvar_8 = (_Object2World * gl_Vertex);
  tmpvar_7 = tmpvar_8.xyz;
  tmpvar_3 = (gl_ModelViewProjectionMatrix * gl_Vertex);
  vec4 texcoord_9;
  texcoord_9.xy = ((gl_MultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  vec2 tmpvar_10;
  if ((_UVSec == 0.0)) {
    tmpvar_10 = tmpvar_1;
  } else {
    tmpvar_10 = tmpvar_2;
  };
  texcoord_9.zw = ((tmpvar_10 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  vec3 n_11;
  n_11 = (tmpvar_8.xyz - _WorldSpaceCameraPos);
  vec4 v_12;
  v_12.x = _World2Object[0].x;
  v_12.y = _World2Object[1].x;
  v_12.z = _World2Object[2].x;
  v_12.w = _World2Object[3].x;
  vec4 v_13;
  v_13.x = _World2Object[0].y;
  v_13.y = _World2Object[1].y;
  v_13.z = _World2Object[2].y;
  v_13.w = _World2Object[3].y;
  vec4 v_14;
  v_14.x = _World2Object[0].z;
  v_14.y = _World2Object[1].z;
  v_14.z = _World2Object[2].z;
  v_14.w = _World2Object[3].z;
  vec3 tmpvar_15;
  tmpvar_15 = normalize(((
    (v_12.xyz * gl_Normal.x)
   + 
    (v_13.xyz * gl_Normal.y)
  ) + (v_14.xyz * gl_Normal.z)));
  tmpvar_4.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_5.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_6.xyz = tmpvar_15;
  vec4 ambientOrLightmapUV_16;
  ambientOrLightmapUV_16 = vec4(0.0, 0.0, 0.0, 0.0);
  vec3 ambient_17;
  ambient_17 = vec3(0.0, 0.0, 0.0);
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    ambient_17 = vec3(0.0, 0.0, 0.0);
  };
  vec3 x1_18;
  vec4 tmpvar_19;
  tmpvar_19 = (tmpvar_15.xyzz * tmpvar_15.yzzx);
  x1_18.x = dot (unity_SHBr, tmpvar_19);
  x1_18.y = dot (unity_SHBg, tmpvar_19);
  x1_18.z = dot (unity_SHBb, tmpvar_19);
  ambient_17 = (ambient_17 + (x1_18 + (unity_SHC.xyz * 
    ((tmpvar_15.x * tmpvar_15.x) - (tmpvar_15.y * tmpvar_15.y))
  )));
  ambientOrLightmapUV_16.xyz = ambient_17;
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = texcoord_9;
  xlv_TEXCOORD1 = n_11;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  xlv_TEXCOORD5 = ambientOrLightmapUV_16;
  xlv_TEXCOORD8 = tmpvar_7;
}


#endif
#ifdef FRAGMENT
#extension GL_ARB_shader_texture_lod : enable
uniform vec4 _WorldSpaceLightPos0;
uniform vec4 unity_SHAr;
uniform vec4 unity_SHAg;
uniform vec4 unity_SHAb;
uniform samplerCube unity_SpecCube0;
uniform samplerCube unity_SpecCube1;
uniform vec4 unity_SpecCube0_BoxMax;
uniform vec4 unity_SpecCube0_BoxMin;
uniform vec4 unity_SpecCube0_ProbePosition;
uniform vec4 unity_SpecCube0_HDR;
uniform vec4 unity_SpecCube1_BoxMax;
uniform vec4 unity_SpecCube1_BoxMin;
uniform vec4 unity_SpecCube1_ProbePosition;
uniform vec4 unity_SpecCube1_HDR;
uniform vec4 unity_ColorSpaceDielectricSpec;
uniform vec4 unity_ColorSpaceLuminance;
uniform vec4 _LightColor0;
uniform vec4 _Color;
uniform sampler2D _MainTex;
uniform float _Metallic;
uniform float _Glossiness;
uniform sampler2D _OcclusionMap;
uniform float _OcclusionStrength;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
varying vec3 xlv_TEXCOORD8;
void main ()
{
  vec4 c_1;
  float tmpvar_2;
  vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  tmpvar_2 = (tmpvar_3.w * _Color.w);
  vec3 tmpvar_4;
  tmpvar_4 = (_Color.xyz * tmpvar_3.xyz);
  vec3 tmpvar_5;
  vec3 tmpvar_6;
  tmpvar_6 = mix (unity_ColorSpaceDielectricSpec.xyz, tmpvar_4, vec3(_Metallic));
  float tmpvar_7;
  tmpvar_7 = (unity_ColorSpaceDielectricSpec.w - (_Metallic * unity_ColorSpaceDielectricSpec.w));
  tmpvar_5 = (tmpvar_4 * tmpvar_7);
  vec3 tmpvar_8;
  tmpvar_8 = normalize(xlv_TEXCOORD2_2.xyz);
  vec3 tmpvar_9;
  tmpvar_9 = normalize(xlv_TEXCOORD1);
  float tmpvar_10;
  tmpvar_10 = ((1.0 - _OcclusionStrength) + (texture2D (_OcclusionMap, xlv_TEXCOORD0.xy).y * _OcclusionStrength));
  float tmpvar_11;
  tmpvar_11 = (1.0 - _Glossiness);
  vec3 tmpvar_12;
  tmpvar_12 = (tmpvar_9 - (2.0 * (
    dot (tmpvar_8, tmpvar_9)
   * tmpvar_8)));
  vec3 tmpvar_13;
  vec3 tmpvar_14;
  tmpvar_14 = vec3(0.0, 0.0, 0.0);
  vec3 ambient_15;
  vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = tmpvar_8;
  vec3 x_17;
  x_17.x = dot (unity_SHAr, tmpvar_16);
  x_17.y = dot (unity_SHAg, tmpvar_16);
  x_17.z = dot (unity_SHAb, tmpvar_16);
  vec3 tmpvar_18;
  tmpvar_18 = max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD5.xyz + x_17));
  ambient_15 = tmpvar_18;
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    ambient_15 = max (((1.055 * 
      pow (max (tmpvar_18, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
    ) - 0.055), vec3(0.0, 0.0, 0.0));
  };
  tmpvar_14 = (ambient_15 * tmpvar_10);
  tmpvar_13 = vec3(0.0, 0.0, 0.0);
  vec3 specular_19;
  vec3 worldRefl_20;
  worldRefl_20 = tmpvar_12;
  vec3 worldPos_21;
  worldPos_21 = xlv_TEXCOORD8;
  if ((unity_SpecCube0_ProbePosition.w > 0.0)) {
    vec3 tmpvar_22;
    tmpvar_22 = normalize(tmpvar_12);
    vec3 tmpvar_23;
    tmpvar_23 = ((unity_SpecCube0_BoxMax.xyz - xlv_TEXCOORD8) / tmpvar_22);
    vec3 tmpvar_24;
    tmpvar_24 = ((unity_SpecCube0_BoxMin.xyz - xlv_TEXCOORD8) / tmpvar_22);
    bvec3 tmpvar_25;
    tmpvar_25 = greaterThan (tmpvar_22, vec3(0.0, 0.0, 0.0));
    float tmpvar_26;
    if (tmpvar_25.x) {
      tmpvar_26 = tmpvar_23.x;
    } else {
      tmpvar_26 = tmpvar_24.x;
    };
    float tmpvar_27;
    if (tmpvar_25.y) {
      tmpvar_27 = tmpvar_23.y;
    } else {
      tmpvar_27 = tmpvar_24.y;
    };
    float tmpvar_28;
    if (tmpvar_25.z) {
      tmpvar_28 = tmpvar_23.z;
    } else {
      tmpvar_28 = tmpvar_24.z;
    };
    worldPos_21 = (xlv_TEXCOORD8 - unity_SpecCube0_ProbePosition.xyz);
    worldRefl_20 = (worldPos_21 + (tmpvar_22 * min (
      min (tmpvar_26, tmpvar_27)
    , tmpvar_28)));
  };
  vec4 tmpvar_29;
  tmpvar_29.xyz = worldRefl_20;
  tmpvar_29.w = ((tmpvar_11 * (1.7 - 
    (0.7 * tmpvar_11)
  )) * 6.0);
  vec4 tmpvar_30;
  tmpvar_30 = textureCubeLod (unity_SpecCube0, worldRefl_20, tmpvar_29.w);
  vec3 tmpvar_31;
  tmpvar_31 = ((unity_SpecCube0_HDR.x * pow (tmpvar_30.w, unity_SpecCube0_HDR.y)) * tmpvar_30.xyz);
  if ((unity_SpecCube0_BoxMin.w < 0.99999)) {
    vec3 worldRefl_32;
    worldRefl_32 = tmpvar_12;
    vec3 worldPos_33;
    worldPos_33 = xlv_TEXCOORD8;
    if ((unity_SpecCube1_ProbePosition.w > 0.0)) {
      vec3 tmpvar_34;
      tmpvar_34 = normalize(tmpvar_12);
      vec3 tmpvar_35;
      tmpvar_35 = ((unity_SpecCube1_BoxMax.xyz - xlv_TEXCOORD8) / tmpvar_34);
      vec3 tmpvar_36;
      tmpvar_36 = ((unity_SpecCube1_BoxMin.xyz - xlv_TEXCOORD8) / tmpvar_34);
      bvec3 tmpvar_37;
      tmpvar_37 = greaterThan (tmpvar_34, vec3(0.0, 0.0, 0.0));
      float tmpvar_38;
      if (tmpvar_37.x) {
        tmpvar_38 = tmpvar_35.x;
      } else {
        tmpvar_38 = tmpvar_36.x;
      };
      float tmpvar_39;
      if (tmpvar_37.y) {
        tmpvar_39 = tmpvar_35.y;
      } else {
        tmpvar_39 = tmpvar_36.y;
      };
      float tmpvar_40;
      if (tmpvar_37.z) {
        tmpvar_40 = tmpvar_35.z;
      } else {
        tmpvar_40 = tmpvar_36.z;
      };
      worldPos_33 = (xlv_TEXCOORD8 - unity_SpecCube1_ProbePosition.xyz);
      worldRefl_32 = (worldPos_33 + (tmpvar_34 * min (
        min (tmpvar_38, tmpvar_39)
      , tmpvar_40)));
    };
    vec4 tmpvar_41;
    tmpvar_41.xyz = worldRefl_32;
    tmpvar_41.w = ((tmpvar_11 * (1.7 - 
      (0.7 * tmpvar_11)
    )) * 6.0);
    vec4 tmpvar_42;
    tmpvar_42 = textureCubeLod (unity_SpecCube1, worldRefl_32, tmpvar_41.w);
    specular_19 = mix (((unity_SpecCube1_HDR.x * 
      pow (tmpvar_42.w, unity_SpecCube1_HDR.y)
    ) * tmpvar_42.xyz), tmpvar_31, unity_SpecCube0_BoxMin.www);
  } else {
    specular_19 = tmpvar_31;
  };
  tmpvar_13 = (specular_19 * tmpvar_10);
  vec3 viewDir_43;
  viewDir_43 = -(tmpvar_9);
  float surfaceReduction_44;
  float specularTerm_45;
  float tmpvar_46;
  tmpvar_46 = (1.0 - _Glossiness);
  vec3 tmpvar_47;
  vec3 inVec_48;
  inVec_48 = (_WorldSpaceLightPos0.xyz + viewDir_43);
  tmpvar_47 = (inVec_48 * inversesqrt(max (0.001, 
    dot (inVec_48, inVec_48)
  )));
  float tmpvar_49;
  tmpvar_49 = dot (tmpvar_8, viewDir_43);
  vec3 tmpvar_50;
  if ((tmpvar_49 < 0.0)) {
    tmpvar_50 = (tmpvar_8 + (viewDir_43 * (
      -(tmpvar_49)
     + 1e-05)));
  } else {
    tmpvar_50 = tmpvar_8;
  };
  float tmpvar_51;
  tmpvar_51 = max (0.0, dot (tmpvar_50, _WorldSpaceLightPos0.xyz));
  float tmpvar_52;
  tmpvar_52 = max (0.0, dot (tmpvar_50, tmpvar_47));
  float tmpvar_53;
  tmpvar_53 = max (0.0, dot (tmpvar_50, viewDir_43));
  float tmpvar_54;
  tmpvar_54 = max (0.0, dot (_WorldSpaceLightPos0.xyz, tmpvar_47));
  float tmpvar_55;
  tmpvar_55 = (tmpvar_46 * tmpvar_46);
  float tmpvar_56;
  tmpvar_56 = (tmpvar_46 * tmpvar_46);
  float tmpvar_57;
  tmpvar_57 = (tmpvar_56 * tmpvar_56);
  float tmpvar_58;
  tmpvar_58 = (((tmpvar_52 * tmpvar_52) * (tmpvar_57 - 1.0)) + 1.0);
  float x_59;
  x_59 = (1.0 - tmpvar_51);
  float x_60;
  x_60 = (1.0 - tmpvar_53);
  float tmpvar_61;
  tmpvar_61 = (0.5 + ((2.0 * tmpvar_54) * (tmpvar_54 * tmpvar_46)));
  float tmpvar_62;
  tmpvar_62 = ((1.0 + (
    (tmpvar_61 - 1.0)
   * 
    ((x_59 * x_59) * ((x_59 * x_59) * x_59))
  )) * (1.0 + (
    (tmpvar_61 - 1.0)
   * 
    ((x_60 * x_60) * ((x_60 * x_60) * x_60))
  )));
  float tmpvar_63;
  tmpvar_63 = (((2.0 / 
    (((tmpvar_51 * (
      (tmpvar_53 * (1.0 - tmpvar_55))
     + tmpvar_55)) + (tmpvar_53 * (
      (tmpvar_51 * (1.0 - tmpvar_55))
     + tmpvar_55))) + 1e-05)
  ) * (tmpvar_57 / 
    (((3.141593 * tmpvar_58) * tmpvar_58) + 1e-07)
  )) * 0.7853982);
  specularTerm_45 = tmpvar_63;
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    specularTerm_45 = sqrt(max (0.0001, tmpvar_63));
  };
  float tmpvar_64;
  tmpvar_64 = max (0.0, (specularTerm_45 * tmpvar_51));
  specularTerm_45 = tmpvar_64;
  float tmpvar_65;
  tmpvar_65 = (tmpvar_62 * tmpvar_51);
  float tmpvar_66;
  tmpvar_66 = (tmpvar_46 * tmpvar_46);
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    surfaceReduction_44 = (1.0 - ((0.28 * tmpvar_66) * tmpvar_46));
  } else {
    surfaceReduction_44 = (1.0/(((tmpvar_66 * tmpvar_66) + 1.0)));
  };
  float x_67;
  x_67 = (1.0 - tmpvar_54);
  float x_68;
  x_68 = (1.0 - tmpvar_53);
  vec3 tmpvar_69;
  tmpvar_69 = (((tmpvar_5 * 
    (tmpvar_14 + (_LightColor0.xyz * tmpvar_65))
  ) + (
    (tmpvar_64 * _LightColor0.xyz)
   * 
    (tmpvar_6 + ((1.0 - tmpvar_6) * ((x_67 * x_67) * (
      (x_67 * x_67)
     * x_67))))
  )) + ((surfaceReduction_44 * tmpvar_13) * mix (tmpvar_6, vec3(
    clamp ((_Glossiness + (1.0 - tmpvar_7)), 0.0, 1.0)
  ), vec3(
    ((x_68 * x_68) * ((x_68 * x_68) * x_68))
  ))));
  vec4 tmpvar_70;
  tmpvar_70.w = 1.0;
  tmpvar_70.xyz = tmpvar_69;
  c_1.w = tmpvar_70.w;
  c_1.xyz = tmpvar_69;
  c_1.xyz = c_1.xyz;
  vec4 xlat_varoutput_71;
  xlat_varoutput_71.xyz = c_1.xyz;
  xlat_varoutput_71.w = tmpvar_2;
  gl_FragData[0] = xlat_varoutput_71;
}


#endif
"
}
SubProgram "d3d9 " {
// Stats: 34 math
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_ALPHABLEND_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Matrix 4 [_Object2World] 3
Matrix 7 [_World2Object] 3
Matrix 0 [glstate_matrix_mvp]
Vector 16 [_DetailAlbedoMap_ST]
Vector 15 [_MainTex_ST]
Float 17 [_UVSec]
Vector 10 [_WorldSpaceCameraPos]
Vector 13 [unity_SHBb]
Vector 12 [unity_SHBg]
Vector 11 [unity_SHBr]
Vector 14 [unity_SHC]
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   row_major float4x4 _Object2World;
//   float _UVSec;
//   row_major float4x4 _World2Object;
//   float3 _WorldSpaceCameraPos;
//   row_major float4x4 glstate_matrix_mvp;
//   float4 unity_SHBb;
//   float4 unity_SHBg;
//   float4 unity_SHBr;
//   float4 unity_SHC;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   glstate_matrix_mvp   c0       4
//   _Object2World        c4       3
//   _World2Object        c7       3
//   _WorldSpaceCameraPos c10      1
//   unity_SHBr           c11      1
//   unity_SHBg           c12      1
//   unity_SHBb           c13      1
//   unity_SHC            c14      1
//   _MainTex_ST          c15      1
//   _DetailAlbedoMap_ST  c16      1
//   _UVSec               c17      1
//

    vs_3_0
    def c18, 0, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6
    dcl_texcoord8 o7.xyz
    dp4 o0.x, c0, v0
    dp4 o0.y, c1, v0
    dp4 o0.z, c2, v0
    dp4 o0.w, c3, v0
    mad o1.xy, v2, c15, c15.zwzw
    abs r0.x, c17.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c16.xyxy, c16
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add o2.xyz, r0, -c10
    mov o7.xyz, r0
    mul r0.xyz, c8, v1.y
    mad r0.xyz, c7, v1.x, r0
    mad r0.xyz, c9, v1.z, r0
    nrm r1.xyz, r0
    mul r0.x, r1.y, r1.y
    mad r0.x, r1.x, r1.x, -r0.x
    mul r2, r1.yzzx, r1.xyzz
    mov o5.xyz, r1
    dp4 r1.x, c11, r2
    dp4 r1.y, c12, r2
    dp4 r1.z, c13, r2
    mad o6.xyz, c14, r0.x, r1
    mov o3, c18.x
    mov o4, c18.x
    mov o5.w, c18.x
    mov o6.w, c18.x

// approximately 33 instruction slots used
"
}
SubProgram "d3d11 " {
// Stats: 33 math
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_ALPHABLEND_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
ConstBuffer "$Globals" 240
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 656 [unity_SHBr]
Vector 672 [unity_SHBg]
Vector 688 [unity_SHBb]
Vector 704 [unity_SHC]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 8   xyz         7     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer cb0[14], immediateIndexed
      dcl_constantbuffer cb1[5], immediateIndexed
      dcl_constantbuffer cb2[45], immediateIndexed
      dcl_constantbuffer cb3[19], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyz
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: mad o0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   4: eq r0.x, cb0[13].z, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[11].xxxy, cb0[11].zzzw
   7: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  13: mov o7.xyz, r0.xyzx
  14: mov o3.xyzw, l(0,0,0,0)
  15: mov o4.xyzw, l(0,0,0,0)
  16: mul r0.x, v1.x, cb3[16].x
  17: mul r0.y, v1.x, cb3[17].x
  18: mul r0.z, v1.x, cb3[18].x
  19: mul r1.x, v1.y, cb3[16].y
  20: mul r1.y, v1.y, cb3[17].y
  21: mul r1.z, v1.y, cb3[18].y
  22: add r0.xyz, r0.xyzx, r1.xyzx
  23: mul r1.x, v1.z, cb3[16].z
  24: mul r1.y, v1.z, cb3[17].z
  25: mul r1.z, v1.z, cb3[18].z
  26: add r0.xyz, r0.xyzx, r1.xyzx
  27: dp3 r0.w, r0.xyzx, r0.xyzx
  28: rsq r0.w, r0.w
  29: mul r0.xyz, r0.wwww, r0.xyzx
  30: mov o5.xyz, r0.xyzx
  31: mov o5.w, l(0)
  32: mul r0.w, r0.y, r0.y
  33: mad r0.w, r0.x, r0.x, -r0.w
  34: mul r1.xyzw, r0.yzzx, r0.xyzz
  35: dp4 r0.x, cb2[41].xyzw, r1.xyzw
  36: dp4 r0.y, cb2[42].xyzw, r1.xyzw
  37: dp4 r0.z, cb2[43].xyzw, r1.xyzw
  38: mad o6.xyz, cb2[44].xyzx, r0.wwww, r0.xyzx
  39: mov o6.w, l(0)
  40: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
// Stats: 180 math, 5 textures, 13 branches
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_ALPHABLEND_ON" }
"#version 120

#ifdef VERTEX
uniform vec3 _WorldSpaceCameraPos;
uniform vec4 _ProjectionParams;
uniform vec4 unity_SHBr;
uniform vec4 unity_SHBg;
uniform vec4 unity_SHBb;
uniform vec4 unity_SHC;

uniform mat4 _Object2World;
uniform mat4 _World2Object;
uniform vec4 unity_ColorSpaceLuminance;
uniform vec4 _MainTex_ST;
uniform vec4 _DetailAlbedoMap_ST;
uniform float _UVSec;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
varying vec4 xlv_TEXCOORD6;
varying vec3 xlv_TEXCOORD8;
void main ()
{
  vec2 tmpvar_1;
  tmpvar_1 = gl_MultiTexCoord0.xy;
  vec2 tmpvar_2;
  tmpvar_2 = gl_MultiTexCoord1.xy;
  vec4 tmpvar_3;
  vec4 tmpvar_4;
  vec4 tmpvar_5;
  vec4 tmpvar_6;
  vec3 tmpvar_7;
  vec4 tmpvar_8;
  tmpvar_8 = (_Object2World * gl_Vertex);
  tmpvar_7 = tmpvar_8.xyz;
  tmpvar_3 = (gl_ModelViewProjectionMatrix * gl_Vertex);
  vec4 texcoord_9;
  texcoord_9.xy = ((gl_MultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  vec2 tmpvar_10;
  if ((_UVSec == 0.0)) {
    tmpvar_10 = tmpvar_1;
  } else {
    tmpvar_10 = tmpvar_2;
  };
  texcoord_9.zw = ((tmpvar_10 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  vec3 n_11;
  n_11 = (tmpvar_8.xyz - _WorldSpaceCameraPos);
  vec4 v_12;
  v_12.x = _World2Object[0].x;
  v_12.y = _World2Object[1].x;
  v_12.z = _World2Object[2].x;
  v_12.w = _World2Object[3].x;
  vec4 v_13;
  v_13.x = _World2Object[0].y;
  v_13.y = _World2Object[1].y;
  v_13.z = _World2Object[2].y;
  v_13.w = _World2Object[3].y;
  vec4 v_14;
  v_14.x = _World2Object[0].z;
  v_14.y = _World2Object[1].z;
  v_14.z = _World2Object[2].z;
  v_14.w = _World2Object[3].z;
  vec3 tmpvar_15;
  tmpvar_15 = normalize(((
    (v_12.xyz * gl_Normal.x)
   + 
    (v_13.xyz * gl_Normal.y)
  ) + (v_14.xyz * gl_Normal.z)));
  tmpvar_4.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_5.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_6.xyz = tmpvar_15;
  vec4 o_16;
  vec4 tmpvar_17;
  tmpvar_17 = (tmpvar_3 * 0.5);
  vec2 tmpvar_18;
  tmpvar_18.x = tmpvar_17.x;
  tmpvar_18.y = (tmpvar_17.y * _ProjectionParams.x);
  o_16.xy = (tmpvar_18 + tmpvar_17.w);
  o_16.zw = tmpvar_3.zw;
  vec4 ambientOrLightmapUV_19;
  ambientOrLightmapUV_19 = vec4(0.0, 0.0, 0.0, 0.0);
  vec3 ambient_20;
  ambient_20 = vec3(0.0, 0.0, 0.0);
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    ambient_20 = vec3(0.0, 0.0, 0.0);
  };
  vec3 x1_21;
  vec4 tmpvar_22;
  tmpvar_22 = (tmpvar_15.xyzz * tmpvar_15.yzzx);
  x1_21.x = dot (unity_SHBr, tmpvar_22);
  x1_21.y = dot (unity_SHBg, tmpvar_22);
  x1_21.z = dot (unity_SHBb, tmpvar_22);
  ambient_20 = (ambient_20 + (x1_21 + (unity_SHC.xyz * 
    ((tmpvar_15.x * tmpvar_15.x) - (tmpvar_15.y * tmpvar_15.y))
  )));
  ambientOrLightmapUV_19.xyz = ambient_20;
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = texcoord_9;
  xlv_TEXCOORD1 = n_11;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  xlv_TEXCOORD5 = ambientOrLightmapUV_19;
  xlv_TEXCOORD6 = o_16;
  xlv_TEXCOORD8 = tmpvar_7;
}


#endif
#ifdef FRAGMENT
#extension GL_ARB_shader_texture_lod : enable
uniform vec4 _WorldSpaceLightPos0;
uniform vec4 unity_SHAr;
uniform vec4 unity_SHAg;
uniform vec4 unity_SHAb;
uniform samplerCube unity_SpecCube0;
uniform samplerCube unity_SpecCube1;
uniform vec4 unity_SpecCube0_BoxMax;
uniform vec4 unity_SpecCube0_BoxMin;
uniform vec4 unity_SpecCube0_ProbePosition;
uniform vec4 unity_SpecCube0_HDR;
uniform vec4 unity_SpecCube1_BoxMax;
uniform vec4 unity_SpecCube1_BoxMin;
uniform vec4 unity_SpecCube1_ProbePosition;
uniform vec4 unity_SpecCube1_HDR;
uniform vec4 unity_ColorSpaceDielectricSpec;
uniform vec4 unity_ColorSpaceLuminance;
uniform vec4 _LightColor0;
uniform vec4 _Color;
uniform sampler2D _MainTex;
uniform float _Metallic;
uniform float _Glossiness;
uniform sampler2D _OcclusionMap;
uniform float _OcclusionStrength;
uniform sampler2D _ShadowMapTexture;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
varying vec4 xlv_TEXCOORD6;
varying vec3 xlv_TEXCOORD8;
void main ()
{
  vec4 c_1;
  float tmpvar_2;
  vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  tmpvar_2 = (tmpvar_3.w * _Color.w);
  vec3 tmpvar_4;
  tmpvar_4 = (_Color.xyz * tmpvar_3.xyz);
  vec3 tmpvar_5;
  vec3 tmpvar_6;
  tmpvar_6 = mix (unity_ColorSpaceDielectricSpec.xyz, tmpvar_4, vec3(_Metallic));
  float tmpvar_7;
  tmpvar_7 = (unity_ColorSpaceDielectricSpec.w - (_Metallic * unity_ColorSpaceDielectricSpec.w));
  tmpvar_5 = (tmpvar_4 * tmpvar_7);
  vec3 tmpvar_8;
  tmpvar_8 = normalize(xlv_TEXCOORD2_2.xyz);
  vec3 tmpvar_9;
  tmpvar_9 = normalize(xlv_TEXCOORD1);
  float tmpvar_10;
  tmpvar_10 = ((1.0 - _OcclusionStrength) + (texture2D (_OcclusionMap, xlv_TEXCOORD0.xy).y * _OcclusionStrength));
  float tmpvar_11;
  tmpvar_11 = (1.0 - _Glossiness);
  vec3 tmpvar_12;
  tmpvar_12 = (tmpvar_9 - (2.0 * (
    dot (tmpvar_8, tmpvar_9)
   * tmpvar_8)));
  vec3 tmpvar_13;
  vec3 tmpvar_14;
  vec3 tmpvar_15;
  tmpvar_15 = vec3(0.0, 0.0, 0.0);
  tmpvar_14 = (_LightColor0.xyz * texture2DProj (_ShadowMapTexture, xlv_TEXCOORD6).x);
  vec3 ambient_16;
  vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = tmpvar_8;
  vec3 x_18;
  x_18.x = dot (unity_SHAr, tmpvar_17);
  x_18.y = dot (unity_SHAg, tmpvar_17);
  x_18.z = dot (unity_SHAb, tmpvar_17);
  vec3 tmpvar_19;
  tmpvar_19 = max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD5.xyz + x_18));
  ambient_16 = tmpvar_19;
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    ambient_16 = max (((1.055 * 
      pow (max (tmpvar_19, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
    ) - 0.055), vec3(0.0, 0.0, 0.0));
  };
  tmpvar_15 = (ambient_16 * tmpvar_10);
  tmpvar_13 = vec3(0.0, 0.0, 0.0);
  vec3 specular_20;
  vec3 worldRefl_21;
  worldRefl_21 = tmpvar_12;
  vec3 worldPos_22;
  worldPos_22 = xlv_TEXCOORD8;
  if ((unity_SpecCube0_ProbePosition.w > 0.0)) {
    vec3 tmpvar_23;
    tmpvar_23 = normalize(tmpvar_12);
    vec3 tmpvar_24;
    tmpvar_24 = ((unity_SpecCube0_BoxMax.xyz - xlv_TEXCOORD8) / tmpvar_23);
    vec3 tmpvar_25;
    tmpvar_25 = ((unity_SpecCube0_BoxMin.xyz - xlv_TEXCOORD8) / tmpvar_23);
    bvec3 tmpvar_26;
    tmpvar_26 = greaterThan (tmpvar_23, vec3(0.0, 0.0, 0.0));
    float tmpvar_27;
    if (tmpvar_26.x) {
      tmpvar_27 = tmpvar_24.x;
    } else {
      tmpvar_27 = tmpvar_25.x;
    };
    float tmpvar_28;
    if (tmpvar_26.y) {
      tmpvar_28 = tmpvar_24.y;
    } else {
      tmpvar_28 = tmpvar_25.y;
    };
    float tmpvar_29;
    if (tmpvar_26.z) {
      tmpvar_29 = tmpvar_24.z;
    } else {
      tmpvar_29 = tmpvar_25.z;
    };
    worldPos_22 = (xlv_TEXCOORD8 - unity_SpecCube0_ProbePosition.xyz);
    worldRefl_21 = (worldPos_22 + (tmpvar_23 * min (
      min (tmpvar_27, tmpvar_28)
    , tmpvar_29)));
  };
  vec4 tmpvar_30;
  tmpvar_30.xyz = worldRefl_21;
  tmpvar_30.w = ((tmpvar_11 * (1.7 - 
    (0.7 * tmpvar_11)
  )) * 6.0);
  vec4 tmpvar_31;
  tmpvar_31 = textureCubeLod (unity_SpecCube0, worldRefl_21, tmpvar_30.w);
  vec3 tmpvar_32;
  tmpvar_32 = ((unity_SpecCube0_HDR.x * pow (tmpvar_31.w, unity_SpecCube0_HDR.y)) * tmpvar_31.xyz);
  if ((unity_SpecCube0_BoxMin.w < 0.99999)) {
    vec3 worldRefl_33;
    worldRefl_33 = tmpvar_12;
    vec3 worldPos_34;
    worldPos_34 = xlv_TEXCOORD8;
    if ((unity_SpecCube1_ProbePosition.w > 0.0)) {
      vec3 tmpvar_35;
      tmpvar_35 = normalize(tmpvar_12);
      vec3 tmpvar_36;
      tmpvar_36 = ((unity_SpecCube1_BoxMax.xyz - xlv_TEXCOORD8) / tmpvar_35);
      vec3 tmpvar_37;
      tmpvar_37 = ((unity_SpecCube1_BoxMin.xyz - xlv_TEXCOORD8) / tmpvar_35);
      bvec3 tmpvar_38;
      tmpvar_38 = greaterThan (tmpvar_35, vec3(0.0, 0.0, 0.0));
      float tmpvar_39;
      if (tmpvar_38.x) {
        tmpvar_39 = tmpvar_36.x;
      } else {
        tmpvar_39 = tmpvar_37.x;
      };
      float tmpvar_40;
      if (tmpvar_38.y) {
        tmpvar_40 = tmpvar_36.y;
      } else {
        tmpvar_40 = tmpvar_37.y;
      };
      float tmpvar_41;
      if (tmpvar_38.z) {
        tmpvar_41 = tmpvar_36.z;
      } else {
        tmpvar_41 = tmpvar_37.z;
      };
      worldPos_34 = (xlv_TEXCOORD8 - unity_SpecCube1_ProbePosition.xyz);
      worldRefl_33 = (worldPos_34 + (tmpvar_35 * min (
        min (tmpvar_39, tmpvar_40)
      , tmpvar_41)));
    };
    vec4 tmpvar_42;
    tmpvar_42.xyz = worldRefl_33;
    tmpvar_42.w = ((tmpvar_11 * (1.7 - 
      (0.7 * tmpvar_11)
    )) * 6.0);
    vec4 tmpvar_43;
    tmpvar_43 = textureCubeLod (unity_SpecCube1, worldRefl_33, tmpvar_42.w);
    specular_20 = mix (((unity_SpecCube1_HDR.x * 
      pow (tmpvar_43.w, unity_SpecCube1_HDR.y)
    ) * tmpvar_43.xyz), tmpvar_32, unity_SpecCube0_BoxMin.www);
  } else {
    specular_20 = tmpvar_32;
  };
  tmpvar_13 = (specular_20 * tmpvar_10);
  vec3 viewDir_44;
  viewDir_44 = -(tmpvar_9);
  float surfaceReduction_45;
  float specularTerm_46;
  float tmpvar_47;
  tmpvar_47 = (1.0 - _Glossiness);
  vec3 tmpvar_48;
  vec3 inVec_49;
  inVec_49 = (_WorldSpaceLightPos0.xyz + viewDir_44);
  tmpvar_48 = (inVec_49 * inversesqrt(max (0.001, 
    dot (inVec_49, inVec_49)
  )));
  float tmpvar_50;
  tmpvar_50 = dot (tmpvar_8, viewDir_44);
  vec3 tmpvar_51;
  if ((tmpvar_50 < 0.0)) {
    tmpvar_51 = (tmpvar_8 + (viewDir_44 * (
      -(tmpvar_50)
     + 1e-05)));
  } else {
    tmpvar_51 = tmpvar_8;
  };
  float tmpvar_52;
  tmpvar_52 = max (0.0, dot (tmpvar_51, _WorldSpaceLightPos0.xyz));
  float tmpvar_53;
  tmpvar_53 = max (0.0, dot (tmpvar_51, tmpvar_48));
  float tmpvar_54;
  tmpvar_54 = max (0.0, dot (tmpvar_51, viewDir_44));
  float tmpvar_55;
  tmpvar_55 = max (0.0, dot (_WorldSpaceLightPos0.xyz, tmpvar_48));
  float tmpvar_56;
  tmpvar_56 = (tmpvar_47 * tmpvar_47);
  float tmpvar_57;
  tmpvar_57 = (tmpvar_47 * tmpvar_47);
  float tmpvar_58;
  tmpvar_58 = (tmpvar_57 * tmpvar_57);
  float tmpvar_59;
  tmpvar_59 = (((tmpvar_53 * tmpvar_53) * (tmpvar_58 - 1.0)) + 1.0);
  float x_60;
  x_60 = (1.0 - tmpvar_52);
  float x_61;
  x_61 = (1.0 - tmpvar_54);
  float tmpvar_62;
  tmpvar_62 = (0.5 + ((2.0 * tmpvar_55) * (tmpvar_55 * tmpvar_47)));
  float tmpvar_63;
  tmpvar_63 = ((1.0 + (
    (tmpvar_62 - 1.0)
   * 
    ((x_60 * x_60) * ((x_60 * x_60) * x_60))
  )) * (1.0 + (
    (tmpvar_62 - 1.0)
   * 
    ((x_61 * x_61) * ((x_61 * x_61) * x_61))
  )));
  float tmpvar_64;
  tmpvar_64 = (((2.0 / 
    (((tmpvar_52 * (
      (tmpvar_54 * (1.0 - tmpvar_56))
     + tmpvar_56)) + (tmpvar_54 * (
      (tmpvar_52 * (1.0 - tmpvar_56))
     + tmpvar_56))) + 1e-05)
  ) * (tmpvar_58 / 
    (((3.141593 * tmpvar_59) * tmpvar_59) + 1e-07)
  )) * 0.7853982);
  specularTerm_46 = tmpvar_64;
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    specularTerm_46 = sqrt(max (0.0001, tmpvar_64));
  };
  float tmpvar_65;
  tmpvar_65 = max (0.0, (specularTerm_46 * tmpvar_52));
  specularTerm_46 = tmpvar_65;
  float tmpvar_66;
  tmpvar_66 = (tmpvar_63 * tmpvar_52);
  float tmpvar_67;
  tmpvar_67 = (tmpvar_47 * tmpvar_47);
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    surfaceReduction_45 = (1.0 - ((0.28 * tmpvar_67) * tmpvar_47));
  } else {
    surfaceReduction_45 = (1.0/(((tmpvar_67 * tmpvar_67) + 1.0)));
  };
  float x_68;
  x_68 = (1.0 - tmpvar_55);
  float x_69;
  x_69 = (1.0 - tmpvar_54);
  vec3 tmpvar_70;
  tmpvar_70 = (((tmpvar_5 * 
    (tmpvar_15 + (tmpvar_14 * tmpvar_66))
  ) + (
    (tmpvar_65 * tmpvar_14)
   * 
    (tmpvar_6 + ((1.0 - tmpvar_6) * ((x_68 * x_68) * (
      (x_68 * x_68)
     * x_68))))
  )) + ((surfaceReduction_45 * tmpvar_13) * mix (tmpvar_6, vec3(
    clamp ((_Glossiness + (1.0 - tmpvar_7)), 0.0, 1.0)
  ), vec3(
    ((x_69 * x_69) * ((x_69 * x_69) * x_69))
  ))));
  vec4 tmpvar_71;
  tmpvar_71.w = 1.0;
  tmpvar_71.xyz = tmpvar_70;
  c_1.w = tmpvar_71.w;
  c_1.xyz = tmpvar_70;
  c_1.xyz = c_1.xyz;
  vec4 xlat_varoutput_72;
  xlat_varoutput_72.xyz = c_1.xyz;
  xlat_varoutput_72.w = tmpvar_2;
  gl_FragData[0] = xlat_varoutput_72;
}


#endif
"
}
SubProgram "d3d9 " {
// Stats: 40 math
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_ALPHABLEND_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Matrix 4 [_Object2World] 3
Matrix 7 [_World2Object] 3
Matrix 0 [glstate_matrix_mvp]
Vector 18 [_DetailAlbedoMap_ST]
Vector 17 [_MainTex_ST]
Vector 11 [_ProjectionParams]
Vector 12 [_ScreenParams]
Float 19 [_UVSec]
Vector 10 [_WorldSpaceCameraPos]
Vector 15 [unity_SHBb]
Vector 14 [unity_SHBg]
Vector 13 [unity_SHBr]
Vector 16 [unity_SHC]
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   row_major float4x4 _Object2World;
//   float4 _ProjectionParams;
//   float4 _ScreenParams;
//   float _UVSec;
//   row_major float4x4 _World2Object;
//   float3 _WorldSpaceCameraPos;
//   row_major float4x4 glstate_matrix_mvp;
//   float4 unity_SHBb;
//   float4 unity_SHBg;
//   float4 unity_SHBr;
//   float4 unity_SHC;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   glstate_matrix_mvp   c0       4
//   _Object2World        c4       3
//   _World2Object        c7       3
//   _WorldSpaceCameraPos c10      1
//   _ProjectionParams    c11      1
//   _ScreenParams        c12      1
//   unity_SHBr           c13      1
//   unity_SHBg           c14      1
//   unity_SHBb           c15      1
//   unity_SHC            c16      1
//   _MainTex_ST          c17      1
//   _DetailAlbedoMap_ST  c18      1
//   _UVSec               c19      1
//

    vs_3_0
    def c20, 0.5, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6
    dcl_texcoord6 o7
    dcl_texcoord8 o8.xyz
    mad o1.xy, v2, c17, c17.zwzw
    abs r0.x, c19.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c18.xyxy, c18
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add o2.xyz, r0, -c10
    mov o8.xyz, r0
    dp4 r0.y, c1, v0
    mul r1.x, r0.y, c11.x
    mul r1.w, r1.x, c20.x
    dp4 r0.x, c0, v0
    dp4 r0.w, c3, v0
    mul r1.xz, r0.xyww, c20.x
    mad o7.xy, r1.z, c12.zwzw, r1.xwzw
    mul r1.xyz, c8, v1.y
    mad r1.xyz, c7, v1.x, r1
    mad r1.xyz, c9, v1.z, r1
    nrm r2.xyz, r1
    mul r1.x, r2.y, r2.y
    mad r1.x, r2.x, r2.x, -r1.x
    mul r3, r2.yzzx, r2.xyzz
    mov o5.xyz, r2
    dp4 r2.x, c13, r3
    dp4 r2.y, c14, r3
    dp4 r2.z, c15, r3
    mad o6.xyz, c16, r1.x, r2
    dp4 r0.z, c2, v0
    mov o0, r0
    mov o7.zw, r0
    mov o3, c20.y
    mov o4, c20.y
    mov o5.w, c20.y
    mov o6.w, c20.y

// approximately 39 instruction slots used
"
}
SubProgram "d3d11 " {
// Stats: 36 math
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_ALPHABLEND_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
ConstBuffer "$Globals" 240
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
Vector 80 [_ProjectionParams]
ConstBuffer "UnityLighting" 720
Vector 656 [unity_SHBr]
Vector 672 [unity_SHBg]
Vector 688 [unity_SHBb]
Vector 704 [unity_SHC]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
// TEXCOORD                 8   xyz         8     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer cb0[14], immediateIndexed
      dcl_constantbuffer cb1[6], immediateIndexed
      dcl_constantbuffer cb2[45], immediateIndexed
      dcl_constantbuffer cb3[19], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_output o8.xyz
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   4: mov o0.xyzw, r0.xyzw
   5: eq r1.x, cb0[13].z, l(0.000000)
   6: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
   7: mad o1.zw, r1.xxxy, cb0[11].xxxy, cb0[11].zzzw
   8: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   9: mul r1.xyz, v0.yyyy, cb3[13].xyzx
  10: mad r1.xyz, cb3[12].xyzx, v0.xxxx, r1.xyzx
  11: mad r1.xyz, cb3[14].xyzx, v0.zzzz, r1.xyzx
  12: mad r1.xyz, cb3[15].xyzx, v0.wwww, r1.xyzx
  13: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  14: mov o8.xyz, r1.xyzx
  15: mov o3.xyzw, l(0,0,0,0)
  16: mov o4.xyzw, l(0,0,0,0)
  17: mul r1.x, v1.x, cb3[16].x
  18: mul r1.y, v1.x, cb3[17].x
  19: mul r1.z, v1.x, cb3[18].x
  20: mul r2.x, v1.y, cb3[16].y
  21: mul r2.y, v1.y, cb3[17].y
  22: mul r2.z, v1.y, cb3[18].y
  23: add r1.xyz, r1.xyzx, r2.xyzx
  24: mul r2.x, v1.z, cb3[16].z
  25: mul r2.y, v1.z, cb3[17].z
  26: mul r2.z, v1.z, cb3[18].z
  27: add r1.xyz, r1.xyzx, r2.xyzx
  28: dp3 r1.w, r1.xyzx, r1.xyzx
  29: rsq r1.w, r1.w
  30: mul r1.xyz, r1.wwww, r1.xyzx
  31: mov o5.xyz, r1.xyzx
  32: mov o5.w, l(0)
  33: mul r1.w, r1.y, r1.y
  34: mad r1.w, r1.x, r1.x, -r1.w
  35: mul r2.xyzw, r1.yzzx, r1.xyzz
  36: dp4 r1.x, cb2[41].xyzw, r2.xyzw
  37: dp4 r1.y, cb2[42].xyzw, r2.xyzw
  38: dp4 r1.z, cb2[43].xyzw, r2.xyzw
  39: mad o6.xyz, cb2[44].xyzx, r1.wwww, r1.xyzx
  40: mov o6.w, l(0)
  41: mul r0.y, r0.y, cb1[5].x
  42: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  43: mov o7.zw, r0.zzzw
  44: add o7.xy, r1.zzzz, r1.xwxx
  45: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
// Stats: 179 math, 4 textures, 13 branches
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" "_ALPHABLEND_ON" }
"#version 120

#ifdef VERTEX
uniform vec3 _WorldSpaceCameraPos;
uniform vec4 unity_4LightPosX0;
uniform vec4 unity_4LightPosY0;
uniform vec4 unity_4LightPosZ0;
uniform vec4 unity_4LightAtten0;
uniform vec4 unity_LightColor[8];
uniform vec4 unity_SHBr;
uniform vec4 unity_SHBg;
uniform vec4 unity_SHBb;
uniform vec4 unity_SHC;

uniform mat4 _Object2World;
uniform mat4 _World2Object;
uniform vec4 unity_ColorSpaceLuminance;
uniform vec4 _MainTex_ST;
uniform vec4 _DetailAlbedoMap_ST;
uniform float _UVSec;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
varying vec3 xlv_TEXCOORD8;
void main ()
{
  vec2 tmpvar_1;
  tmpvar_1 = gl_MultiTexCoord0.xy;
  vec2 tmpvar_2;
  tmpvar_2 = gl_MultiTexCoord1.xy;
  vec4 tmpvar_3;
  vec4 tmpvar_4;
  vec4 tmpvar_5;
  vec4 tmpvar_6;
  vec3 tmpvar_7;
  vec4 tmpvar_8;
  tmpvar_8 = (_Object2World * gl_Vertex);
  tmpvar_7 = tmpvar_8.xyz;
  tmpvar_3 = (gl_ModelViewProjectionMatrix * gl_Vertex);
  vec4 texcoord_9;
  texcoord_9.xy = ((gl_MultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  vec2 tmpvar_10;
  if ((_UVSec == 0.0)) {
    tmpvar_10 = tmpvar_1;
  } else {
    tmpvar_10 = tmpvar_2;
  };
  texcoord_9.zw = ((tmpvar_10 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  vec3 n_11;
  n_11 = (tmpvar_8.xyz - _WorldSpaceCameraPos);
  vec4 v_12;
  v_12.x = _World2Object[0].x;
  v_12.y = _World2Object[1].x;
  v_12.z = _World2Object[2].x;
  v_12.w = _World2Object[3].x;
  vec4 v_13;
  v_13.x = _World2Object[0].y;
  v_13.y = _World2Object[1].y;
  v_13.z = _World2Object[2].y;
  v_13.w = _World2Object[3].y;
  vec4 v_14;
  v_14.x = _World2Object[0].z;
  v_14.y = _World2Object[1].z;
  v_14.z = _World2Object[2].z;
  v_14.w = _World2Object[3].z;
  vec3 tmpvar_15;
  tmpvar_15 = normalize(((
    (v_12.xyz * gl_Normal.x)
   + 
    (v_13.xyz * gl_Normal.y)
  ) + (v_14.xyz * gl_Normal.z)));
  tmpvar_4.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_5.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_6.xyz = tmpvar_15;
  vec4 ambientOrLightmapUV_16;
  ambientOrLightmapUV_16.w = 0.0;
  vec3 col_17;
  vec4 ndotl_18;
  vec4 lengthSq_19;
  vec4 tmpvar_20;
  tmpvar_20 = (unity_4LightPosX0 - tmpvar_8.x);
  vec4 tmpvar_21;
  tmpvar_21 = (unity_4LightPosY0 - tmpvar_8.y);
  vec4 tmpvar_22;
  tmpvar_22 = (unity_4LightPosZ0 - tmpvar_8.z);
  lengthSq_19 = (tmpvar_20 * tmpvar_20);
  lengthSq_19 = (lengthSq_19 + (tmpvar_21 * tmpvar_21));
  lengthSq_19 = (lengthSq_19 + (tmpvar_22 * tmpvar_22));
  ndotl_18 = (tmpvar_20 * tmpvar_15.x);
  ndotl_18 = (ndotl_18 + (tmpvar_21 * tmpvar_15.y));
  ndotl_18 = (ndotl_18 + (tmpvar_22 * tmpvar_15.z));
  vec4 tmpvar_23;
  tmpvar_23 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_18 * inversesqrt(lengthSq_19)));
  ndotl_18 = tmpvar_23;
  vec4 tmpvar_24;
  tmpvar_24 = (tmpvar_23 * (1.0/((1.0 + 
    (lengthSq_19 * unity_4LightAtten0)
  ))));
  col_17 = (unity_LightColor[0].xyz * tmpvar_24.x);
  col_17 = (col_17 + (unity_LightColor[1].xyz * tmpvar_24.y));
  col_17 = (col_17 + (unity_LightColor[2].xyz * tmpvar_24.z));
  col_17 = (col_17 + (unity_LightColor[3].xyz * tmpvar_24.w));
  ambientOrLightmapUV_16.xyz = col_17;
  vec3 ambient_25;
  ambient_25 = ambientOrLightmapUV_16.xyz;
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    ambient_25 = (col_17 * ((col_17 * 
      ((col_17 * 0.305306) + 0.6821711)
    ) + 0.01252288));
  };
  vec3 x1_26;
  vec4 tmpvar_27;
  tmpvar_27 = (tmpvar_15.xyzz * tmpvar_15.yzzx);
  x1_26.x = dot (unity_SHBr, tmpvar_27);
  x1_26.y = dot (unity_SHBg, tmpvar_27);
  x1_26.z = dot (unity_SHBb, tmpvar_27);
  ambient_25 = (ambient_25 + (x1_26 + (unity_SHC.xyz * 
    ((tmpvar_15.x * tmpvar_15.x) - (tmpvar_15.y * tmpvar_15.y))
  )));
  ambientOrLightmapUV_16.xyz = ambient_25;
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = texcoord_9;
  xlv_TEXCOORD1 = n_11;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  xlv_TEXCOORD5 = ambientOrLightmapUV_16;
  xlv_TEXCOORD8 = tmpvar_7;
}


#endif
#ifdef FRAGMENT
#extension GL_ARB_shader_texture_lod : enable
uniform vec4 _WorldSpaceLightPos0;
uniform vec4 unity_SHAr;
uniform vec4 unity_SHAg;
uniform vec4 unity_SHAb;
uniform samplerCube unity_SpecCube0;
uniform samplerCube unity_SpecCube1;
uniform vec4 unity_SpecCube0_BoxMax;
uniform vec4 unity_SpecCube0_BoxMin;
uniform vec4 unity_SpecCube0_ProbePosition;
uniform vec4 unity_SpecCube0_HDR;
uniform vec4 unity_SpecCube1_BoxMax;
uniform vec4 unity_SpecCube1_BoxMin;
uniform vec4 unity_SpecCube1_ProbePosition;
uniform vec4 unity_SpecCube1_HDR;
uniform vec4 unity_ColorSpaceDielectricSpec;
uniform vec4 unity_ColorSpaceLuminance;
uniform vec4 _LightColor0;
uniform vec4 _Color;
uniform sampler2D _MainTex;
uniform float _Metallic;
uniform float _Glossiness;
uniform sampler2D _OcclusionMap;
uniform float _OcclusionStrength;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
varying vec3 xlv_TEXCOORD8;
void main ()
{
  vec4 c_1;
  float tmpvar_2;
  vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  tmpvar_2 = (tmpvar_3.w * _Color.w);
  vec3 tmpvar_4;
  tmpvar_4 = (_Color.xyz * tmpvar_3.xyz);
  vec3 tmpvar_5;
  vec3 tmpvar_6;
  tmpvar_6 = mix (unity_ColorSpaceDielectricSpec.xyz, tmpvar_4, vec3(_Metallic));
  float tmpvar_7;
  tmpvar_7 = (unity_ColorSpaceDielectricSpec.w - (_Metallic * unity_ColorSpaceDielectricSpec.w));
  tmpvar_5 = (tmpvar_4 * tmpvar_7);
  vec3 tmpvar_8;
  tmpvar_8 = normalize(xlv_TEXCOORD2_2.xyz);
  vec3 tmpvar_9;
  tmpvar_9 = normalize(xlv_TEXCOORD1);
  float tmpvar_10;
  tmpvar_10 = ((1.0 - _OcclusionStrength) + (texture2D (_OcclusionMap, xlv_TEXCOORD0.xy).y * _OcclusionStrength));
  float tmpvar_11;
  tmpvar_11 = (1.0 - _Glossiness);
  vec3 tmpvar_12;
  tmpvar_12 = (tmpvar_9 - (2.0 * (
    dot (tmpvar_8, tmpvar_9)
   * tmpvar_8)));
  vec3 tmpvar_13;
  vec3 tmpvar_14;
  tmpvar_14 = vec3(0.0, 0.0, 0.0);
  vec3 ambient_15;
  vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = tmpvar_8;
  vec3 x_17;
  x_17.x = dot (unity_SHAr, tmpvar_16);
  x_17.y = dot (unity_SHAg, tmpvar_16);
  x_17.z = dot (unity_SHAb, tmpvar_16);
  vec3 tmpvar_18;
  tmpvar_18 = max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD5.xyz + x_17));
  ambient_15 = tmpvar_18;
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    ambient_15 = max (((1.055 * 
      pow (max (tmpvar_18, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
    ) - 0.055), vec3(0.0, 0.0, 0.0));
  };
  tmpvar_14 = (ambient_15 * tmpvar_10);
  tmpvar_13 = vec3(0.0, 0.0, 0.0);
  vec3 specular_19;
  vec3 worldRefl_20;
  worldRefl_20 = tmpvar_12;
  vec3 worldPos_21;
  worldPos_21 = xlv_TEXCOORD8;
  if ((unity_SpecCube0_ProbePosition.w > 0.0)) {
    vec3 tmpvar_22;
    tmpvar_22 = normalize(tmpvar_12);
    vec3 tmpvar_23;
    tmpvar_23 = ((unity_SpecCube0_BoxMax.xyz - xlv_TEXCOORD8) / tmpvar_22);
    vec3 tmpvar_24;
    tmpvar_24 = ((unity_SpecCube0_BoxMin.xyz - xlv_TEXCOORD8) / tmpvar_22);
    bvec3 tmpvar_25;
    tmpvar_25 = greaterThan (tmpvar_22, vec3(0.0, 0.0, 0.0));
    float tmpvar_26;
    if (tmpvar_25.x) {
      tmpvar_26 = tmpvar_23.x;
    } else {
      tmpvar_26 = tmpvar_24.x;
    };
    float tmpvar_27;
    if (tmpvar_25.y) {
      tmpvar_27 = tmpvar_23.y;
    } else {
      tmpvar_27 = tmpvar_24.y;
    };
    float tmpvar_28;
    if (tmpvar_25.z) {
      tmpvar_28 = tmpvar_23.z;
    } else {
      tmpvar_28 = tmpvar_24.z;
    };
    worldPos_21 = (xlv_TEXCOORD8 - unity_SpecCube0_ProbePosition.xyz);
    worldRefl_20 = (worldPos_21 + (tmpvar_22 * min (
      min (tmpvar_26, tmpvar_27)
    , tmpvar_28)));
  };
  vec4 tmpvar_29;
  tmpvar_29.xyz = worldRefl_20;
  tmpvar_29.w = ((tmpvar_11 * (1.7 - 
    (0.7 * tmpvar_11)
  )) * 6.0);
  vec4 tmpvar_30;
  tmpvar_30 = textureCubeLod (unity_SpecCube0, worldRefl_20, tmpvar_29.w);
  vec3 tmpvar_31;
  tmpvar_31 = ((unity_SpecCube0_HDR.x * pow (tmpvar_30.w, unity_SpecCube0_HDR.y)) * tmpvar_30.xyz);
  if ((unity_SpecCube0_BoxMin.w < 0.99999)) {
    vec3 worldRefl_32;
    worldRefl_32 = tmpvar_12;
    vec3 worldPos_33;
    worldPos_33 = xlv_TEXCOORD8;
    if ((unity_SpecCube1_ProbePosition.w > 0.0)) {
      vec3 tmpvar_34;
      tmpvar_34 = normalize(tmpvar_12);
      vec3 tmpvar_35;
      tmpvar_35 = ((unity_SpecCube1_BoxMax.xyz - xlv_TEXCOORD8) / tmpvar_34);
      vec3 tmpvar_36;
      tmpvar_36 = ((unity_SpecCube1_BoxMin.xyz - xlv_TEXCOORD8) / tmpvar_34);
      bvec3 tmpvar_37;
      tmpvar_37 = greaterThan (tmpvar_34, vec3(0.0, 0.0, 0.0));
      float tmpvar_38;
      if (tmpvar_37.x) {
        tmpvar_38 = tmpvar_35.x;
      } else {
        tmpvar_38 = tmpvar_36.x;
      };
      float tmpvar_39;
      if (tmpvar_37.y) {
        tmpvar_39 = tmpvar_35.y;
      } else {
        tmpvar_39 = tmpvar_36.y;
      };
      float tmpvar_40;
      if (tmpvar_37.z) {
        tmpvar_40 = tmpvar_35.z;
      } else {
        tmpvar_40 = tmpvar_36.z;
      };
      worldPos_33 = (xlv_TEXCOORD8 - unity_SpecCube1_ProbePosition.xyz);
      worldRefl_32 = (worldPos_33 + (tmpvar_34 * min (
        min (tmpvar_38, tmpvar_39)
      , tmpvar_40)));
    };
    vec4 tmpvar_41;
    tmpvar_41.xyz = worldRefl_32;
    tmpvar_41.w = ((tmpvar_11 * (1.7 - 
      (0.7 * tmpvar_11)
    )) * 6.0);
    vec4 tmpvar_42;
    tmpvar_42 = textureCubeLod (unity_SpecCube1, worldRefl_32, tmpvar_41.w);
    specular_19 = mix (((unity_SpecCube1_HDR.x * 
      pow (tmpvar_42.w, unity_SpecCube1_HDR.y)
    ) * tmpvar_42.xyz), tmpvar_31, unity_SpecCube0_BoxMin.www);
  } else {
    specular_19 = tmpvar_31;
  };
  tmpvar_13 = (specular_19 * tmpvar_10);
  vec3 viewDir_43;
  viewDir_43 = -(tmpvar_9);
  float surfaceReduction_44;
  float specularTerm_45;
  float tmpvar_46;
  tmpvar_46 = (1.0 - _Glossiness);
  vec3 tmpvar_47;
  vec3 inVec_48;
  inVec_48 = (_WorldSpaceLightPos0.xyz + viewDir_43);
  tmpvar_47 = (inVec_48 * inversesqrt(max (0.001, 
    dot (inVec_48, inVec_48)
  )));
  float tmpvar_49;
  tmpvar_49 = dot (tmpvar_8, viewDir_43);
  vec3 tmpvar_50;
  if ((tmpvar_49 < 0.0)) {
    tmpvar_50 = (tmpvar_8 + (viewDir_43 * (
      -(tmpvar_49)
     + 1e-05)));
  } else {
    tmpvar_50 = tmpvar_8;
  };
  float tmpvar_51;
  tmpvar_51 = max (0.0, dot (tmpvar_50, _WorldSpaceLightPos0.xyz));
  float tmpvar_52;
  tmpvar_52 = max (0.0, dot (tmpvar_50, tmpvar_47));
  float tmpvar_53;
  tmpvar_53 = max (0.0, dot (tmpvar_50, viewDir_43));
  float tmpvar_54;
  tmpvar_54 = max (0.0, dot (_WorldSpaceLightPos0.xyz, tmpvar_47));
  float tmpvar_55;
  tmpvar_55 = (tmpvar_46 * tmpvar_46);
  float tmpvar_56;
  tmpvar_56 = (tmpvar_46 * tmpvar_46);
  float tmpvar_57;
  tmpvar_57 = (tmpvar_56 * tmpvar_56);
  float tmpvar_58;
  tmpvar_58 = (((tmpvar_52 * tmpvar_52) * (tmpvar_57 - 1.0)) + 1.0);
  float x_59;
  x_59 = (1.0 - tmpvar_51);
  float x_60;
  x_60 = (1.0 - tmpvar_53);
  float tmpvar_61;
  tmpvar_61 = (0.5 + ((2.0 * tmpvar_54) * (tmpvar_54 * tmpvar_46)));
  float tmpvar_62;
  tmpvar_62 = ((1.0 + (
    (tmpvar_61 - 1.0)
   * 
    ((x_59 * x_59) * ((x_59 * x_59) * x_59))
  )) * (1.0 + (
    (tmpvar_61 - 1.0)
   * 
    ((x_60 * x_60) * ((x_60 * x_60) * x_60))
  )));
  float tmpvar_63;
  tmpvar_63 = (((2.0 / 
    (((tmpvar_51 * (
      (tmpvar_53 * (1.0 - tmpvar_55))
     + tmpvar_55)) + (tmpvar_53 * (
      (tmpvar_51 * (1.0 - tmpvar_55))
     + tmpvar_55))) + 1e-05)
  ) * (tmpvar_57 / 
    (((3.141593 * tmpvar_58) * tmpvar_58) + 1e-07)
  )) * 0.7853982);
  specularTerm_45 = tmpvar_63;
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    specularTerm_45 = sqrt(max (0.0001, tmpvar_63));
  };
  float tmpvar_64;
  tmpvar_64 = max (0.0, (specularTerm_45 * tmpvar_51));
  specularTerm_45 = tmpvar_64;
  float tmpvar_65;
  tmpvar_65 = (tmpvar_62 * tmpvar_51);
  float tmpvar_66;
  tmpvar_66 = (tmpvar_46 * tmpvar_46);
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    surfaceReduction_44 = (1.0 - ((0.28 * tmpvar_66) * tmpvar_46));
  } else {
    surfaceReduction_44 = (1.0/(((tmpvar_66 * tmpvar_66) + 1.0)));
  };
  float x_67;
  x_67 = (1.0 - tmpvar_54);
  float x_68;
  x_68 = (1.0 - tmpvar_53);
  vec3 tmpvar_69;
  tmpvar_69 = (((tmpvar_5 * 
    (tmpvar_14 + (_LightColor0.xyz * tmpvar_65))
  ) + (
    (tmpvar_64 * _LightColor0.xyz)
   * 
    (tmpvar_6 + ((1.0 - tmpvar_6) * ((x_67 * x_67) * (
      (x_67 * x_67)
     * x_67))))
  )) + ((surfaceReduction_44 * tmpvar_13) * mix (tmpvar_6, vec3(
    clamp ((_Glossiness + (1.0 - tmpvar_7)), 0.0, 1.0)
  ), vec3(
    ((x_68 * x_68) * ((x_68 * x_68) * x_68))
  ))));
  vec4 tmpvar_70;
  tmpvar_70.w = 1.0;
  tmpvar_70.xyz = tmpvar_69;
  c_1.w = tmpvar_70.w;
  c_1.xyz = tmpvar_69;
  c_1.xyz = c_1.xyz;
  vec4 xlat_varoutput_71;
  xlat_varoutput_71.xyz = c_1.xyz;
  xlat_varoutput_71.w = tmpvar_2;
  gl_FragData[0] = xlat_varoutput_71;
}


#endif
"
}
SubProgram "d3d9 " {
// Stats: 67 math
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" "_ALPHABLEND_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Matrix 8 [_Object2World] 3
Matrix 11 [_World2Object] 3
Matrix 4 [glstate_matrix_mvp]
Vector 25 [_DetailAlbedoMap_ST]
Vector 24 [_MainTex_ST]
Float 26 [_UVSec]
Vector 14 [_WorldSpaceCameraPos]
Vector 18 [unity_4LightAtten0]
Vector 15 [unity_4LightPosX0]
Vector 16 [unity_4LightPosY0]
Vector 17 [unity_4LightPosZ0]
Vector 23 [unity_ColorSpaceLuminance]
Vector 0 [unity_LightColor0]
Vector 1 [unity_LightColor1]
Vector 2 [unity_LightColor2]
Vector 3 [unity_LightColor3]
Vector 21 [unity_SHBb]
Vector 20 [unity_SHBg]
Vector 19 [unity_SHBr]
Vector 22 [unity_SHC]
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   row_major float4x4 _Object2World;
//   float _UVSec;
//   row_major float4x4 _World2Object;
//   float3 _WorldSpaceCameraPos;
//   row_major float4x4 glstate_matrix_mvp;
//   float4 unity_4LightAtten0;
//   float4 unity_4LightPosX0;
//   float4 unity_4LightPosY0;
//   float4 unity_4LightPosZ0;
//   float4 unity_ColorSpaceLuminance;
//   float4 unity_LightColor[8];
//   float4 unity_SHBb;
//   float4 unity_SHBg;
//   float4 unity_SHBr;
//   float4 unity_SHC;
//
//
// Registers:
//
//   Name                      Reg   Size
//   ------------------------- ----- ----
//   unity_LightColor          c0       4
//   glstate_matrix_mvp        c4       4
//   _Object2World             c8       3
//   _World2Object             c11      3
//   _WorldSpaceCameraPos      c14      1
//   unity_4LightPosX0         c15      1
//   unity_4LightPosY0         c16      1
//   unity_4LightPosZ0         c17      1
//   unity_4LightAtten0        c18      1
//   unity_SHBr                c19      1
//   unity_SHBg                c20      1
//   unity_SHBb                c21      1
//   unity_SHC                 c22      1
//   unity_ColorSpaceLuminance c23      1
//   _MainTex_ST               c24      1
//   _DetailAlbedoMap_ST       c25      1
//   _UVSec                    c26      1
//

    vs_3_0
    def c27, 0, 1, 0.305306017, 0.682171106
    def c28, 0.0125228781, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6
    dcl_texcoord8 o7.xyz
    dp4 o0.x, c4, v0
    dp4 o0.y, c5, v0
    dp4 o0.z, c6, v0
    dp4 o0.w, c7, v0
    mad o1.xy, v2, c24, c24.zwzw
    abs r0.x, c26.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c25.xyxy, c25
    dp4 r0.x, c8, v0
    dp4 r0.y, c9, v0
    dp4 r0.z, c10, v0
    add o2.xyz, r0, -c14
    add r1, -r0.z, c17
    mov o7.xyz, r0
    add r2, -r0.x, c15
    add r0, -r0.y, c16
    mul r3.xyz, c12, v1.y
    mad r3.xyz, c11, v1.x, r3
    mad r3.xyz, c13, v1.z, r3
    nrm r4.xyz, r3
    mul r3, r0, r4.y
    mul r0, r0, r0
    mad r0, r2, r2, r0
    mad r2, r2, r4.x, r3
    mad r2, r1, r4.z, r2
    mad r0, r1, r1, r0
    rsq r1.x, r0.x
    rsq r1.y, r0.y
    rsq r1.z, r0.z
    rsq r1.w, r0.w
    mov r3.y, c27.y
    mad r0, r0, c18, r3.y
    mul r1, r1, r2
    max r1, r1, c27.x
    rcp r2.x, r0.x
    rcp r2.y, r0.y
    rcp r2.z, r0.z
    rcp r2.w, r0.w
    mul r0, r1, r2
    mul r1.xyz, r0.y, c1
    mad r1.xyz, c0, r0.x, r1
    mad r0.xyz, c2, r0.z, r1
    mad r0.xyz, c3, r0.w, r0
    mad r1.xyz, r0, c27.z, c27.w
    mad r1.xyz, r0, r1, c28.x
    mad r1.xyz, r0, r1, -r0
    abs r0.w, c23.w
    sge r0.w, -r0.w, r0.w
    mad r0.xyz, r0.w, r1, r0
    mul r0.w, r4.y, r4.y
    mad r0.w, r4.x, r4.x, -r0.w
    mul r1, r4.yzzx, r4.xyzz
    mov o5.xyz, r4
    dp4 r2.x, c19, r1
    dp4 r2.y, c20, r1
    dp4 r2.z, c21, r1
    mad r1.xyz, c22, r0.w, r2
    add o6.xyz, r0, r1
    mov o3, c27.x
    mov o4, c27.x
    mov o5.w, c27.x
    mov o6.w, c27.x

// approximately 66 instruction slots used
"
}
SubProgram "d3d11 " {
// Stats: 57 math
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" "_ALPHABLEND_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
ConstBuffer "$Globals" 240
Vector 48 [unity_ColorSpaceLuminance]
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 32 [unity_4LightPosX0]
Vector 48 [unity_4LightPosY0]
Vector 64 [unity_4LightPosZ0]
Vector 80 [unity_4LightAtten0]
Vector 96 [unity_LightColor0]
Vector 112 [unity_LightColor1]
Vector 128 [unity_LightColor2]
Vector 144 [unity_LightColor3]
Vector 160 [unity_LightColor4]
Vector 176 [unity_LightColor5]
Vector 192 [unity_LightColor6]
Vector 208 [unity_LightColor7]
Vector 656 [unity_SHBr]
Vector 672 [unity_SHBg]
Vector 688 [unity_SHBb]
Vector 704 [unity_SHC]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 8   xyz         7     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer cb0[14], immediateIndexed
      dcl_constantbuffer cb1[5], immediateIndexed
      dcl_constantbuffer cb2[45], immediateIndexed
      dcl_constantbuffer cb3[19], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyz
      dcl_temps 5
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: mad o0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   4: eq r0.x, cb0[13].z, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[11].xxxy, cb0[11].zzzw
   7: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  13: mov o3.xyzw, l(0,0,0,0)
  14: mov o4.xyzw, l(0,0,0,0)
  15: mul r1.x, v1.x, cb3[16].x
  16: mul r1.y, v1.x, cb3[17].x
  17: mul r1.z, v1.x, cb3[18].x
  18: mul r2.x, v1.y, cb3[16].y
  19: mul r2.y, v1.y, cb3[17].y
  20: mul r2.z, v1.y, cb3[18].y
  21: add r1.xyz, r1.xyzx, r2.xyzx
  22: mul r2.x, v1.z, cb3[16].z
  23: mul r2.y, v1.z, cb3[17].z
  24: mul r2.z, v1.z, cb3[18].z
  25: add r1.xyz, r1.xyzx, r2.xyzx
  26: dp3 r0.w, r1.xyzx, r1.xyzx
  27: rsq r0.w, r0.w
  28: mul r1.xyz, r0.wwww, r1.xyzx
  29: mov o5.xyz, r1.xyzx
  30: mov o5.w, l(0)
  31: add r2.xyzw, -r0.yyyy, cb2[3].xyzw
  32: mul r3.xyzw, r1.yyyy, r2.xyzw
  33: mul r2.xyzw, r2.xyzw, r2.xyzw
  34: add r4.xyzw, -r0.xxxx, cb2[2].xyzw
  35: mad r3.xyzw, r4.xyzw, r1.xxxx, r3.xyzw
  36: mad r2.xyzw, r4.xyzw, r4.xyzw, r2.xyzw
  37: add r4.xyzw, -r0.zzzz, cb2[4].xyzw
  38: mov o7.xyz, r0.xyzx
  39: mad r0.xyzw, r4.xyzw, r1.zzzz, r3.xyzw
  40: mad r2.xyzw, r4.xyzw, r4.xyzw, r2.xyzw
  41: rsq r3.xyzw, r2.xyzw
  42: mad r2.xyzw, r2.xyzw, cb2[5].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  43: div r2.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r2.xyzw
  44: mul r0.xyzw, r0.xyzw, r3.xyzw
  45: max r0.xyzw, r0.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  46: mul r0.xyzw, r2.xyzw, r0.xyzw
  47: mul r2.xyz, r0.yyyy, cb2[7].xyzx
  48: mad r2.xyz, cb2[6].xyzx, r0.xxxx, r2.xyzx
  49: mad r0.xyz, cb2[8].xyzx, r0.zzzz, r2.xyzx
  50: mad r0.xyz, cb2[9].xyzx, r0.wwww, r0.xyzx
  51: mad r2.xyz, r0.xyzx, l(0.305306, 0.305306, 0.305306, 0.000000), l(0.682171, 0.682171, 0.682171, 0.000000)
  52: mad r2.xyz, r0.xyzx, r2.xyzx, l(0.012523, 0.012523, 0.012523, 0.000000)
  53: mul r2.xyz, r0.xyzx, r2.xyzx
  54: eq r0.w, cb0[3].w, l(0.000000)
  55: movc r0.xyz, r0.wwww, r2.xyzx, r0.xyzx
  56: mul r0.w, r1.y, r1.y
  57: mad r0.w, r1.x, r1.x, -r0.w
  58: mul r1.xyzw, r1.yzzx, r1.xyzz
  59: dp4 r2.x, cb2[41].xyzw, r1.xyzw
  60: dp4 r2.y, cb2[42].xyzw, r1.xyzw
  61: dp4 r2.z, cb2[43].xyzw, r1.xyzw
  62: mad r1.xyz, cb2[44].xyzx, r0.wwww, r2.xyzx
  63: add o6.xyz, r0.xyzx, r1.xyzx
  64: mov o6.w, l(0)
  65: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
// Stats: 180 math, 5 textures, 13 branches
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" "_ALPHABLEND_ON" }
"#version 120

#ifdef VERTEX
uniform vec3 _WorldSpaceCameraPos;
uniform vec4 _ProjectionParams;
uniform vec4 unity_4LightPosX0;
uniform vec4 unity_4LightPosY0;
uniform vec4 unity_4LightPosZ0;
uniform vec4 unity_4LightAtten0;
uniform vec4 unity_LightColor[8];
uniform vec4 unity_SHBr;
uniform vec4 unity_SHBg;
uniform vec4 unity_SHBb;
uniform vec4 unity_SHC;

uniform mat4 _Object2World;
uniform mat4 _World2Object;
uniform vec4 unity_ColorSpaceLuminance;
uniform vec4 _MainTex_ST;
uniform vec4 _DetailAlbedoMap_ST;
uniform float _UVSec;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
varying vec4 xlv_TEXCOORD6;
varying vec3 xlv_TEXCOORD8;
void main ()
{
  vec2 tmpvar_1;
  tmpvar_1 = gl_MultiTexCoord0.xy;
  vec2 tmpvar_2;
  tmpvar_2 = gl_MultiTexCoord1.xy;
  vec4 tmpvar_3;
  vec4 tmpvar_4;
  vec4 tmpvar_5;
  vec4 tmpvar_6;
  vec3 tmpvar_7;
  vec4 tmpvar_8;
  tmpvar_8 = (_Object2World * gl_Vertex);
  tmpvar_7 = tmpvar_8.xyz;
  tmpvar_3 = (gl_ModelViewProjectionMatrix * gl_Vertex);
  vec4 texcoord_9;
  texcoord_9.xy = ((gl_MultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  vec2 tmpvar_10;
  if ((_UVSec == 0.0)) {
    tmpvar_10 = tmpvar_1;
  } else {
    tmpvar_10 = tmpvar_2;
  };
  texcoord_9.zw = ((tmpvar_10 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  vec3 n_11;
  n_11 = (tmpvar_8.xyz - _WorldSpaceCameraPos);
  vec4 v_12;
  v_12.x = _World2Object[0].x;
  v_12.y = _World2Object[1].x;
  v_12.z = _World2Object[2].x;
  v_12.w = _World2Object[3].x;
  vec4 v_13;
  v_13.x = _World2Object[0].y;
  v_13.y = _World2Object[1].y;
  v_13.z = _World2Object[2].y;
  v_13.w = _World2Object[3].y;
  vec4 v_14;
  v_14.x = _World2Object[0].z;
  v_14.y = _World2Object[1].z;
  v_14.z = _World2Object[2].z;
  v_14.w = _World2Object[3].z;
  vec3 tmpvar_15;
  tmpvar_15 = normalize(((
    (v_12.xyz * gl_Normal.x)
   + 
    (v_13.xyz * gl_Normal.y)
  ) + (v_14.xyz * gl_Normal.z)));
  tmpvar_4.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_5.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_6.xyz = tmpvar_15;
  vec4 o_16;
  vec4 tmpvar_17;
  tmpvar_17 = (tmpvar_3 * 0.5);
  vec2 tmpvar_18;
  tmpvar_18.x = tmpvar_17.x;
  tmpvar_18.y = (tmpvar_17.y * _ProjectionParams.x);
  o_16.xy = (tmpvar_18 + tmpvar_17.w);
  o_16.zw = tmpvar_3.zw;
  vec4 ambientOrLightmapUV_19;
  ambientOrLightmapUV_19.w = 0.0;
  vec3 col_20;
  vec4 ndotl_21;
  vec4 lengthSq_22;
  vec4 tmpvar_23;
  tmpvar_23 = (unity_4LightPosX0 - tmpvar_8.x);
  vec4 tmpvar_24;
  tmpvar_24 = (unity_4LightPosY0 - tmpvar_8.y);
  vec4 tmpvar_25;
  tmpvar_25 = (unity_4LightPosZ0 - tmpvar_8.z);
  lengthSq_22 = (tmpvar_23 * tmpvar_23);
  lengthSq_22 = (lengthSq_22 + (tmpvar_24 * tmpvar_24));
  lengthSq_22 = (lengthSq_22 + (tmpvar_25 * tmpvar_25));
  ndotl_21 = (tmpvar_23 * tmpvar_15.x);
  ndotl_21 = (ndotl_21 + (tmpvar_24 * tmpvar_15.y));
  ndotl_21 = (ndotl_21 + (tmpvar_25 * tmpvar_15.z));
  vec4 tmpvar_26;
  tmpvar_26 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_21 * inversesqrt(lengthSq_22)));
  ndotl_21 = tmpvar_26;
  vec4 tmpvar_27;
  tmpvar_27 = (tmpvar_26 * (1.0/((1.0 + 
    (lengthSq_22 * unity_4LightAtten0)
  ))));
  col_20 = (unity_LightColor[0].xyz * tmpvar_27.x);
  col_20 = (col_20 + (unity_LightColor[1].xyz * tmpvar_27.y));
  col_20 = (col_20 + (unity_LightColor[2].xyz * tmpvar_27.z));
  col_20 = (col_20 + (unity_LightColor[3].xyz * tmpvar_27.w));
  ambientOrLightmapUV_19.xyz = col_20;
  vec3 ambient_28;
  ambient_28 = ambientOrLightmapUV_19.xyz;
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    ambient_28 = (col_20 * ((col_20 * 
      ((col_20 * 0.305306) + 0.6821711)
    ) + 0.01252288));
  };
  vec3 x1_29;
  vec4 tmpvar_30;
  tmpvar_30 = (tmpvar_15.xyzz * tmpvar_15.yzzx);
  x1_29.x = dot (unity_SHBr, tmpvar_30);
  x1_29.y = dot (unity_SHBg, tmpvar_30);
  x1_29.z = dot (unity_SHBb, tmpvar_30);
  ambient_28 = (ambient_28 + (x1_29 + (unity_SHC.xyz * 
    ((tmpvar_15.x * tmpvar_15.x) - (tmpvar_15.y * tmpvar_15.y))
  )));
  ambientOrLightmapUV_19.xyz = ambient_28;
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = texcoord_9;
  xlv_TEXCOORD1 = n_11;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  xlv_TEXCOORD5 = ambientOrLightmapUV_19;
  xlv_TEXCOORD6 = o_16;
  xlv_TEXCOORD8 = tmpvar_7;
}


#endif
#ifdef FRAGMENT
#extension GL_ARB_shader_texture_lod : enable
uniform vec4 _WorldSpaceLightPos0;
uniform vec4 unity_SHAr;
uniform vec4 unity_SHAg;
uniform vec4 unity_SHAb;
uniform samplerCube unity_SpecCube0;
uniform samplerCube unity_SpecCube1;
uniform vec4 unity_SpecCube0_BoxMax;
uniform vec4 unity_SpecCube0_BoxMin;
uniform vec4 unity_SpecCube0_ProbePosition;
uniform vec4 unity_SpecCube0_HDR;
uniform vec4 unity_SpecCube1_BoxMax;
uniform vec4 unity_SpecCube1_BoxMin;
uniform vec4 unity_SpecCube1_ProbePosition;
uniform vec4 unity_SpecCube1_HDR;
uniform vec4 unity_ColorSpaceDielectricSpec;
uniform vec4 unity_ColorSpaceLuminance;
uniform vec4 _LightColor0;
uniform vec4 _Color;
uniform sampler2D _MainTex;
uniform float _Metallic;
uniform float _Glossiness;
uniform sampler2D _OcclusionMap;
uniform float _OcclusionStrength;
uniform sampler2D _ShadowMapTexture;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
varying vec4 xlv_TEXCOORD6;
varying vec3 xlv_TEXCOORD8;
void main ()
{
  vec4 c_1;
  float tmpvar_2;
  vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  tmpvar_2 = (tmpvar_3.w * _Color.w);
  vec3 tmpvar_4;
  tmpvar_4 = (_Color.xyz * tmpvar_3.xyz);
  vec3 tmpvar_5;
  vec3 tmpvar_6;
  tmpvar_6 = mix (unity_ColorSpaceDielectricSpec.xyz, tmpvar_4, vec3(_Metallic));
  float tmpvar_7;
  tmpvar_7 = (unity_ColorSpaceDielectricSpec.w - (_Metallic * unity_ColorSpaceDielectricSpec.w));
  tmpvar_5 = (tmpvar_4 * tmpvar_7);
  vec3 tmpvar_8;
  tmpvar_8 = normalize(xlv_TEXCOORD2_2.xyz);
  vec3 tmpvar_9;
  tmpvar_9 = normalize(xlv_TEXCOORD1);
  float tmpvar_10;
  tmpvar_10 = ((1.0 - _OcclusionStrength) + (texture2D (_OcclusionMap, xlv_TEXCOORD0.xy).y * _OcclusionStrength));
  float tmpvar_11;
  tmpvar_11 = (1.0 - _Glossiness);
  vec3 tmpvar_12;
  tmpvar_12 = (tmpvar_9 - (2.0 * (
    dot (tmpvar_8, tmpvar_9)
   * tmpvar_8)));
  vec3 tmpvar_13;
  vec3 tmpvar_14;
  vec3 tmpvar_15;
  tmpvar_15 = vec3(0.0, 0.0, 0.0);
  tmpvar_14 = (_LightColor0.xyz * texture2DProj (_ShadowMapTexture, xlv_TEXCOORD6).x);
  vec3 ambient_16;
  vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = tmpvar_8;
  vec3 x_18;
  x_18.x = dot (unity_SHAr, tmpvar_17);
  x_18.y = dot (unity_SHAg, tmpvar_17);
  x_18.z = dot (unity_SHAb, tmpvar_17);
  vec3 tmpvar_19;
  tmpvar_19 = max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD5.xyz + x_18));
  ambient_16 = tmpvar_19;
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    ambient_16 = max (((1.055 * 
      pow (max (tmpvar_19, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
    ) - 0.055), vec3(0.0, 0.0, 0.0));
  };
  tmpvar_15 = (ambient_16 * tmpvar_10);
  tmpvar_13 = vec3(0.0, 0.0, 0.0);
  vec3 specular_20;
  vec3 worldRefl_21;
  worldRefl_21 = tmpvar_12;
  vec3 worldPos_22;
  worldPos_22 = xlv_TEXCOORD8;
  if ((unity_SpecCube0_ProbePosition.w > 0.0)) {
    vec3 tmpvar_23;
    tmpvar_23 = normalize(tmpvar_12);
    vec3 tmpvar_24;
    tmpvar_24 = ((unity_SpecCube0_BoxMax.xyz - xlv_TEXCOORD8) / tmpvar_23);
    vec3 tmpvar_25;
    tmpvar_25 = ((unity_SpecCube0_BoxMin.xyz - xlv_TEXCOORD8) / tmpvar_23);
    bvec3 tmpvar_26;
    tmpvar_26 = greaterThan (tmpvar_23, vec3(0.0, 0.0, 0.0));
    float tmpvar_27;
    if (tmpvar_26.x) {
      tmpvar_27 = tmpvar_24.x;
    } else {
      tmpvar_27 = tmpvar_25.x;
    };
    float tmpvar_28;
    if (tmpvar_26.y) {
      tmpvar_28 = tmpvar_24.y;
    } else {
      tmpvar_28 = tmpvar_25.y;
    };
    float tmpvar_29;
    if (tmpvar_26.z) {
      tmpvar_29 = tmpvar_24.z;
    } else {
      tmpvar_29 = tmpvar_25.z;
    };
    worldPos_22 = (xlv_TEXCOORD8 - unity_SpecCube0_ProbePosition.xyz);
    worldRefl_21 = (worldPos_22 + (tmpvar_23 * min (
      min (tmpvar_27, tmpvar_28)
    , tmpvar_29)));
  };
  vec4 tmpvar_30;
  tmpvar_30.xyz = worldRefl_21;
  tmpvar_30.w = ((tmpvar_11 * (1.7 - 
    (0.7 * tmpvar_11)
  )) * 6.0);
  vec4 tmpvar_31;
  tmpvar_31 = textureCubeLod (unity_SpecCube0, worldRefl_21, tmpvar_30.w);
  vec3 tmpvar_32;
  tmpvar_32 = ((unity_SpecCube0_HDR.x * pow (tmpvar_31.w, unity_SpecCube0_HDR.y)) * tmpvar_31.xyz);
  if ((unity_SpecCube0_BoxMin.w < 0.99999)) {
    vec3 worldRefl_33;
    worldRefl_33 = tmpvar_12;
    vec3 worldPos_34;
    worldPos_34 = xlv_TEXCOORD8;
    if ((unity_SpecCube1_ProbePosition.w > 0.0)) {
      vec3 tmpvar_35;
      tmpvar_35 = normalize(tmpvar_12);
      vec3 tmpvar_36;
      tmpvar_36 = ((unity_SpecCube1_BoxMax.xyz - xlv_TEXCOORD8) / tmpvar_35);
      vec3 tmpvar_37;
      tmpvar_37 = ((unity_SpecCube1_BoxMin.xyz - xlv_TEXCOORD8) / tmpvar_35);
      bvec3 tmpvar_38;
      tmpvar_38 = greaterThan (tmpvar_35, vec3(0.0, 0.0, 0.0));
      float tmpvar_39;
      if (tmpvar_38.x) {
        tmpvar_39 = tmpvar_36.x;
      } else {
        tmpvar_39 = tmpvar_37.x;
      };
      float tmpvar_40;
      if (tmpvar_38.y) {
        tmpvar_40 = tmpvar_36.y;
      } else {
        tmpvar_40 = tmpvar_37.y;
      };
      float tmpvar_41;
      if (tmpvar_38.z) {
        tmpvar_41 = tmpvar_36.z;
      } else {
        tmpvar_41 = tmpvar_37.z;
      };
      worldPos_34 = (xlv_TEXCOORD8 - unity_SpecCube1_ProbePosition.xyz);
      worldRefl_33 = (worldPos_34 + (tmpvar_35 * min (
        min (tmpvar_39, tmpvar_40)
      , tmpvar_41)));
    };
    vec4 tmpvar_42;
    tmpvar_42.xyz = worldRefl_33;
    tmpvar_42.w = ((tmpvar_11 * (1.7 - 
      (0.7 * tmpvar_11)
    )) * 6.0);
    vec4 tmpvar_43;
    tmpvar_43 = textureCubeLod (unity_SpecCube1, worldRefl_33, tmpvar_42.w);
    specular_20 = mix (((unity_SpecCube1_HDR.x * 
      pow (tmpvar_43.w, unity_SpecCube1_HDR.y)
    ) * tmpvar_43.xyz), tmpvar_32, unity_SpecCube0_BoxMin.www);
  } else {
    specular_20 = tmpvar_32;
  };
  tmpvar_13 = (specular_20 * tmpvar_10);
  vec3 viewDir_44;
  viewDir_44 = -(tmpvar_9);
  float surfaceReduction_45;
  float specularTerm_46;
  float tmpvar_47;
  tmpvar_47 = (1.0 - _Glossiness);
  vec3 tmpvar_48;
  vec3 inVec_49;
  inVec_49 = (_WorldSpaceLightPos0.xyz + viewDir_44);
  tmpvar_48 = (inVec_49 * inversesqrt(max (0.001, 
    dot (inVec_49, inVec_49)
  )));
  float tmpvar_50;
  tmpvar_50 = dot (tmpvar_8, viewDir_44);
  vec3 tmpvar_51;
  if ((tmpvar_50 < 0.0)) {
    tmpvar_51 = (tmpvar_8 + (viewDir_44 * (
      -(tmpvar_50)
     + 1e-05)));
  } else {
    tmpvar_51 = tmpvar_8;
  };
  float tmpvar_52;
  tmpvar_52 = max (0.0, dot (tmpvar_51, _WorldSpaceLightPos0.xyz));
  float tmpvar_53;
  tmpvar_53 = max (0.0, dot (tmpvar_51, tmpvar_48));
  float tmpvar_54;
  tmpvar_54 = max (0.0, dot (tmpvar_51, viewDir_44));
  float tmpvar_55;
  tmpvar_55 = max (0.0, dot (_WorldSpaceLightPos0.xyz, tmpvar_48));
  float tmpvar_56;
  tmpvar_56 = (tmpvar_47 * tmpvar_47);
  float tmpvar_57;
  tmpvar_57 = (tmpvar_47 * tmpvar_47);
  float tmpvar_58;
  tmpvar_58 = (tmpvar_57 * tmpvar_57);
  float tmpvar_59;
  tmpvar_59 = (((tmpvar_53 * tmpvar_53) * (tmpvar_58 - 1.0)) + 1.0);
  float x_60;
  x_60 = (1.0 - tmpvar_52);
  float x_61;
  x_61 = (1.0 - tmpvar_54);
  float tmpvar_62;
  tmpvar_62 = (0.5 + ((2.0 * tmpvar_55) * (tmpvar_55 * tmpvar_47)));
  float tmpvar_63;
  tmpvar_63 = ((1.0 + (
    (tmpvar_62 - 1.0)
   * 
    ((x_60 * x_60) * ((x_60 * x_60) * x_60))
  )) * (1.0 + (
    (tmpvar_62 - 1.0)
   * 
    ((x_61 * x_61) * ((x_61 * x_61) * x_61))
  )));
  float tmpvar_64;
  tmpvar_64 = (((2.0 / 
    (((tmpvar_52 * (
      (tmpvar_54 * (1.0 - tmpvar_56))
     + tmpvar_56)) + (tmpvar_54 * (
      (tmpvar_52 * (1.0 - tmpvar_56))
     + tmpvar_56))) + 1e-05)
  ) * (tmpvar_58 / 
    (((3.141593 * tmpvar_59) * tmpvar_59) + 1e-07)
  )) * 0.7853982);
  specularTerm_46 = tmpvar_64;
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    specularTerm_46 = sqrt(max (0.0001, tmpvar_64));
  };
  float tmpvar_65;
  tmpvar_65 = max (0.0, (specularTerm_46 * tmpvar_52));
  specularTerm_46 = tmpvar_65;
  float tmpvar_66;
  tmpvar_66 = (tmpvar_63 * tmpvar_52);
  float tmpvar_67;
  tmpvar_67 = (tmpvar_47 * tmpvar_47);
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    surfaceReduction_45 = (1.0 - ((0.28 * tmpvar_67) * tmpvar_47));
  } else {
    surfaceReduction_45 = (1.0/(((tmpvar_67 * tmpvar_67) + 1.0)));
  };
  float x_68;
  x_68 = (1.0 - tmpvar_55);
  float x_69;
  x_69 = (1.0 - tmpvar_54);
  vec3 tmpvar_70;
  tmpvar_70 = (((tmpvar_5 * 
    (tmpvar_15 + (tmpvar_14 * tmpvar_66))
  ) + (
    (tmpvar_65 * tmpvar_14)
   * 
    (tmpvar_6 + ((1.0 - tmpvar_6) * ((x_68 * x_68) * (
      (x_68 * x_68)
     * x_68))))
  )) + ((surfaceReduction_45 * tmpvar_13) * mix (tmpvar_6, vec3(
    clamp ((_Glossiness + (1.0 - tmpvar_7)), 0.0, 1.0)
  ), vec3(
    ((x_69 * x_69) * ((x_69 * x_69) * x_69))
  ))));
  vec4 tmpvar_71;
  tmpvar_71.w = 1.0;
  tmpvar_71.xyz = tmpvar_70;
  c_1.w = tmpvar_71.w;
  c_1.xyz = tmpvar_70;
  c_1.xyz = c_1.xyz;
  vec4 xlat_varoutput_72;
  xlat_varoutput_72.xyz = c_1.xyz;
  xlat_varoutput_72.w = tmpvar_2;
  gl_FragData[0] = xlat_varoutput_72;
}


#endif
"
}
SubProgram "d3d9 " {
// Stats: 73 math
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" "_ALPHABLEND_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Matrix 8 [_Object2World] 3
Matrix 11 [_World2Object] 3
Matrix 4 [glstate_matrix_mvp]
Vector 27 [_DetailAlbedoMap_ST]
Vector 26 [_MainTex_ST]
Vector 15 [_ProjectionParams]
Vector 16 [_ScreenParams]
Float 28 [_UVSec]
Vector 14 [_WorldSpaceCameraPos]
Vector 20 [unity_4LightAtten0]
Vector 17 [unity_4LightPosX0]
Vector 18 [unity_4LightPosY0]
Vector 19 [unity_4LightPosZ0]
Vector 25 [unity_ColorSpaceLuminance]
Vector 0 [unity_LightColor0]
Vector 1 [unity_LightColor1]
Vector 2 [unity_LightColor2]
Vector 3 [unity_LightColor3]
Vector 23 [unity_SHBb]
Vector 22 [unity_SHBg]
Vector 21 [unity_SHBr]
Vector 24 [unity_SHC]
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   row_major float4x4 _Object2World;
//   float4 _ProjectionParams;
//   float4 _ScreenParams;
//   float _UVSec;
//   row_major float4x4 _World2Object;
//   float3 _WorldSpaceCameraPos;
//   row_major float4x4 glstate_matrix_mvp;
//   float4 unity_4LightAtten0;
//   float4 unity_4LightPosX0;
//   float4 unity_4LightPosY0;
//   float4 unity_4LightPosZ0;
//   float4 unity_ColorSpaceLuminance;
//   float4 unity_LightColor[8];
//   float4 unity_SHBb;
//   float4 unity_SHBg;
//   float4 unity_SHBr;
//   float4 unity_SHC;
//
//
// Registers:
//
//   Name                      Reg   Size
//   ------------------------- ----- ----
//   unity_LightColor          c0       4
//   glstate_matrix_mvp        c4       4
//   _Object2World             c8       3
//   _World2Object             c11      3
//   _WorldSpaceCameraPos      c14      1
//   _ProjectionParams         c15      1
//   _ScreenParams             c16      1
//   unity_4LightPosX0         c17      1
//   unity_4LightPosY0         c18      1
//   unity_4LightPosZ0         c19      1
//   unity_4LightAtten0        c20      1
//   unity_SHBr                c21      1
//   unity_SHBg                c22      1
//   unity_SHBb                c23      1
//   unity_SHC                 c24      1
//   unity_ColorSpaceLuminance c25      1
//   _MainTex_ST               c26      1
//   _DetailAlbedoMap_ST       c27      1
//   _UVSec                    c28      1
//

    vs_3_0
    def c29, 0.5, 0, 1, 0.0125228781
    def c30, 0.305306017, 0.682171106, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6
    dcl_texcoord6 o7
    dcl_texcoord8 o8.xyz
    mad o1.xy, v2, c26, c26.zwzw
    abs r0.x, c28.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c27.xyxy, c27
    dp4 r0.x, c8, v0
    dp4 r0.y, c9, v0
    dp4 r0.z, c10, v0
    add o2.xyz, r0, -c14
    dp4 r1.y, c5, v0
    mul r0.w, r1.y, c15.x
    mul r2.w, r0.w, c29.x
    dp4 r1.x, c4, v0
    dp4 r1.w, c7, v0
    mul r2.xz, r1.xyww, c29.x
    mad o7.xy, r2.z, c16.zwzw, r2.xwzw
    add r2, -r0.z, c19
    mov o8.xyz, r0
    add r3, -r0.x, c17
    add r0, -r0.y, c18
    mul r4.xyz, c12, v1.y
    mad r4.xyz, c11, v1.x, r4
    mad r4.xyz, c13, v1.z, r4
    nrm r5.xyz, r4
    mul r4, r0, r5.y
    mul r0, r0, r0
    mad r0, r3, r3, r0
    mad r3, r3, r5.x, r4
    mad r3, r2, r5.z, r3
    mad r0, r2, r2, r0
    rsq r2.x, r0.x
    rsq r2.y, r0.y
    rsq r2.z, r0.z
    rsq r2.w, r0.w
    mov r4.z, c29.z
    mad r0, r0, c20, r4.z
    mul r2, r2, r3
    max r2, r2, c29.y
    rcp r3.x, r0.x
    rcp r3.y, r0.y
    rcp r3.z, r0.z
    rcp r3.w, r0.w
    mul r0, r2, r3
    mul r2.xyz, r0.y, c1
    mad r2.xyz, c0, r0.x, r2
    mad r0.xyz, c2, r0.z, r2
    mad r0.xyz, c3, r0.w, r0
    mad r2.xyz, r0, c30.x, c30.y
    mad r2.xyz, r0, r2, c29.w
    mad r2.xyz, r0, r2, -r0
    abs r0.w, c25.w
    sge r0.w, -r0.w, r0.w
    mad r0.xyz, r0.w, r2, r0
    mul r0.w, r5.y, r5.y
    mad r0.w, r5.x, r5.x, -r0.w
    mul r2, r5.yzzx, r5.xyzz
    mov o5.xyz, r5
    dp4 r3.x, c21, r2
    dp4 r3.y, c22, r2
    dp4 r3.z, c23, r2
    mad r2.xyz, c24, r0.w, r3
    add o6.xyz, r0, r2
    dp4 r1.z, c6, v0
    mov o0, r1
    mov o7.zw, r1
    mov o3, c29.y
    mov o4, c29.y
    mov o5.w, c29.y
    mov o6.w, c29.y

// approximately 72 instruction slots used
"
}
SubProgram "d3d11 " {
// Stats: 60 math
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" "_ALPHABLEND_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
ConstBuffer "$Globals" 240
Vector 48 [unity_ColorSpaceLuminance]
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
Vector 80 [_ProjectionParams]
ConstBuffer "UnityLighting" 720
Vector 32 [unity_4LightPosX0]
Vector 48 [unity_4LightPosY0]
Vector 64 [unity_4LightPosZ0]
Vector 80 [unity_4LightAtten0]
Vector 96 [unity_LightColor0]
Vector 112 [unity_LightColor1]
Vector 128 [unity_LightColor2]
Vector 144 [unity_LightColor3]
Vector 160 [unity_LightColor4]
Vector 176 [unity_LightColor5]
Vector 192 [unity_LightColor6]
Vector 208 [unity_LightColor7]
Vector 656 [unity_SHBr]
Vector 672 [unity_SHBg]
Vector 688 [unity_SHBb]
Vector 704 [unity_SHC]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
// TEXCOORD                 8   xyz         8     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer cb0[14], immediateIndexed
      dcl_constantbuffer cb1[6], immediateIndexed
      dcl_constantbuffer cb2[45], immediateIndexed
      dcl_constantbuffer cb3[19], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_output o8.xyz
      dcl_temps 6
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   4: mov o0.xyzw, r0.xyzw
   5: eq r1.x, cb0[13].z, l(0.000000)
   6: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
   7: mad o1.zw, r1.xxxy, cb0[11].xxxy, cb0[11].zzzw
   8: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   9: mul r1.xyz, v0.yyyy, cb3[13].xyzx
  10: mad r1.xyz, cb3[12].xyzx, v0.xxxx, r1.xyzx
  11: mad r1.xyz, cb3[14].xyzx, v0.zzzz, r1.xyzx
  12: mad r1.xyz, cb3[15].xyzx, v0.wwww, r1.xyzx
  13: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  14: mov o3.xyzw, l(0,0,0,0)
  15: mov o4.xyzw, l(0,0,0,0)
  16: mul r2.x, v1.x, cb3[16].x
  17: mul r2.y, v1.x, cb3[17].x
  18: mul r2.z, v1.x, cb3[18].x
  19: mul r3.x, v1.y, cb3[16].y
  20: mul r3.y, v1.y, cb3[17].y
  21: mul r3.z, v1.y, cb3[18].y
  22: add r2.xyz, r2.xyzx, r3.xyzx
  23: mul r3.x, v1.z, cb3[16].z
  24: mul r3.y, v1.z, cb3[17].z
  25: mul r3.z, v1.z, cb3[18].z
  26: add r2.xyz, r2.xyzx, r3.xyzx
  27: dp3 r1.w, r2.xyzx, r2.xyzx
  28: rsq r1.w, r1.w
  29: mul r2.xyz, r1.wwww, r2.xyzx
  30: mov o5.xyz, r2.xyzx
  31: mov o5.w, l(0)
  32: add r3.xyzw, -r1.yyyy, cb2[3].xyzw
  33: mul r4.xyzw, r2.yyyy, r3.xyzw
  34: mul r3.xyzw, r3.xyzw, r3.xyzw
  35: add r5.xyzw, -r1.xxxx, cb2[2].xyzw
  36: mad r4.xyzw, r5.xyzw, r2.xxxx, r4.xyzw
  37: mad r3.xyzw, r5.xyzw, r5.xyzw, r3.xyzw
  38: add r5.xyzw, -r1.zzzz, cb2[4].xyzw
  39: mov o8.xyz, r1.xyzx
  40: mad r1.xyzw, r5.xyzw, r2.zzzz, r4.xyzw
  41: mad r3.xyzw, r5.xyzw, r5.xyzw, r3.xyzw
  42: rsq r4.xyzw, r3.xyzw
  43: mad r3.xyzw, r3.xyzw, cb2[5].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  44: div r3.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r3.xyzw
  45: mul r1.xyzw, r1.xyzw, r4.xyzw
  46: max r1.xyzw, r1.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  47: mul r1.xyzw, r3.xyzw, r1.xyzw
  48: mul r3.xyz, r1.yyyy, cb2[7].xyzx
  49: mad r3.xyz, cb2[6].xyzx, r1.xxxx, r3.xyzx
  50: mad r1.xyz, cb2[8].xyzx, r1.zzzz, r3.xyzx
  51: mad r1.xyz, cb2[9].xyzx, r1.wwww, r1.xyzx
  52: mad r3.xyz, r1.xyzx, l(0.305306, 0.305306, 0.305306, 0.000000), l(0.682171, 0.682171, 0.682171, 0.000000)
  53: mad r3.xyz, r1.xyzx, r3.xyzx, l(0.012523, 0.012523, 0.012523, 0.000000)
  54: mul r3.xyz, r1.xyzx, r3.xyzx
  55: eq r1.w, cb0[3].w, l(0.000000)
  56: movc r1.xyz, r1.wwww, r3.xyzx, r1.xyzx
  57: mul r1.w, r2.y, r2.y
  58: mad r1.w, r2.x, r2.x, -r1.w
  59: mul r2.xyzw, r2.yzzx, r2.xyzz
  60: dp4 r3.x, cb2[41].xyzw, r2.xyzw
  61: dp4 r3.y, cb2[42].xyzw, r2.xyzw
  62: dp4 r3.z, cb2[43].xyzw, r2.xyzw
  63: mad r2.xyz, cb2[44].xyzx, r1.wwww, r3.xyzx
  64: add o6.xyz, r1.xyzx, r2.xyzx
  65: mov o6.w, l(0)
  66: mul r0.y, r0.y, cb1[5].x
  67: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  68: mov o7.zw, r0.zzzw
  69: add o7.xy, r1.zzzz, r1.xwxx
  70: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
// Stats: 181 math, 5 textures, 13 branches
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "_ALPHABLEND_ON" }
"#version 120

#ifdef VERTEX
uniform vec3 _WorldSpaceCameraPos;
uniform vec4 unity_SHBr;
uniform vec4 unity_SHBg;
uniform vec4 unity_SHBb;
uniform vec4 unity_SHC;

uniform mat4 _Object2World;
uniform mat4 _World2Object;
uniform vec4 unity_ColorSpaceLuminance;
uniform vec4 _MainTex_ST;
uniform vec4 _DetailAlbedoMap_ST;
uniform float _UVSec;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
varying vec3 xlv_TEXCOORD8;
void main ()
{
  vec2 tmpvar_1;
  tmpvar_1 = gl_MultiTexCoord0.xy;
  vec2 tmpvar_2;
  tmpvar_2 = gl_MultiTexCoord1.xy;
  vec4 tmpvar_3;
  vec4 tmpvar_4;
  vec4 tmpvar_5;
  vec4 tmpvar_6;
  vec3 tmpvar_7;
  vec4 tmpvar_8;
  tmpvar_8 = (_Object2World * gl_Vertex);
  tmpvar_7 = tmpvar_8.xyz;
  tmpvar_3 = (gl_ModelViewProjectionMatrix * gl_Vertex);
  vec4 texcoord_9;
  texcoord_9.xy = ((gl_MultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  vec2 tmpvar_10;
  if ((_UVSec == 0.0)) {
    tmpvar_10 = tmpvar_1;
  } else {
    tmpvar_10 = tmpvar_2;
  };
  texcoord_9.zw = ((tmpvar_10 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  vec3 n_11;
  n_11 = (tmpvar_8.xyz - _WorldSpaceCameraPos);
  vec4 v_12;
  v_12.x = _World2Object[0].x;
  v_12.y = _World2Object[1].x;
  v_12.z = _World2Object[2].x;
  v_12.w = _World2Object[3].x;
  vec4 v_13;
  v_13.x = _World2Object[0].y;
  v_13.y = _World2Object[1].y;
  v_13.z = _World2Object[2].y;
  v_13.w = _World2Object[3].y;
  vec4 v_14;
  v_14.x = _World2Object[0].z;
  v_14.y = _World2Object[1].z;
  v_14.z = _World2Object[2].z;
  v_14.w = _World2Object[3].z;
  vec3 tmpvar_15;
  tmpvar_15 = normalize(((
    (v_12.xyz * gl_Normal.x)
   + 
    (v_13.xyz * gl_Normal.y)
  ) + (v_14.xyz * gl_Normal.z)));
  tmpvar_4.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_5.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_6.xyz = tmpvar_15;
  vec4 ambientOrLightmapUV_16;
  ambientOrLightmapUV_16 = vec4(0.0, 0.0, 0.0, 0.0);
  vec3 ambient_17;
  ambient_17 = vec3(0.0, 0.0, 0.0);
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    ambient_17 = vec3(0.0, 0.0, 0.0);
  };
  vec3 x1_18;
  vec4 tmpvar_19;
  tmpvar_19 = (tmpvar_15.xyzz * tmpvar_15.yzzx);
  x1_18.x = dot (unity_SHBr, tmpvar_19);
  x1_18.y = dot (unity_SHBg, tmpvar_19);
  x1_18.z = dot (unity_SHBb, tmpvar_19);
  ambient_17 = (ambient_17 + (x1_18 + (unity_SHC.xyz * 
    ((tmpvar_15.x * tmpvar_15.x) - (tmpvar_15.y * tmpvar_15.y))
  )));
  ambientOrLightmapUV_16.xyz = ambient_17;
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = texcoord_9;
  xlv_TEXCOORD1 = n_11;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  xlv_TEXCOORD5 = ambientOrLightmapUV_16;
  xlv_TEXCOORD8 = tmpvar_7;
}


#endif
#ifdef FRAGMENT
#extension GL_ARB_shader_texture_lod : enable
uniform vec4 _WorldSpaceLightPos0;
uniform vec4 unity_SHAr;
uniform vec4 unity_SHAg;
uniform vec4 unity_SHAb;
uniform samplerCube unity_SpecCube0;
uniform samplerCube unity_SpecCube1;
uniform vec4 unity_SpecCube0_BoxMax;
uniform vec4 unity_SpecCube0_BoxMin;
uniform vec4 unity_SpecCube0_ProbePosition;
uniform vec4 unity_SpecCube0_HDR;
uniform vec4 unity_SpecCube1_BoxMax;
uniform vec4 unity_SpecCube1_BoxMin;
uniform vec4 unity_SpecCube1_ProbePosition;
uniform vec4 unity_SpecCube1_HDR;
uniform vec4 unity_ColorSpaceDielectricSpec;
uniform vec4 unity_ColorSpaceLuminance;
uniform vec4 _LightColor0;
uniform vec4 _Color;
uniform sampler2D _MainTex;
uniform float _Metallic;
uniform float _Glossiness;
uniform sampler2D _OcclusionMap;
uniform float _OcclusionStrength;
uniform vec4 _EmissionColor;
uniform sampler2D _EmissionMap;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
varying vec3 xlv_TEXCOORD8;
void main ()
{
  vec4 c_1;
  float tmpvar_2;
  vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  tmpvar_2 = (tmpvar_3.w * _Color.w);
  vec3 tmpvar_4;
  tmpvar_4 = (_Color.xyz * tmpvar_3.xyz);
  vec3 tmpvar_5;
  vec3 tmpvar_6;
  tmpvar_6 = mix (unity_ColorSpaceDielectricSpec.xyz, tmpvar_4, vec3(_Metallic));
  float tmpvar_7;
  tmpvar_7 = (unity_ColorSpaceDielectricSpec.w - (_Metallic * unity_ColorSpaceDielectricSpec.w));
  tmpvar_5 = (tmpvar_4 * tmpvar_7);
  vec3 tmpvar_8;
  tmpvar_8 = normalize(xlv_TEXCOORD2_2.xyz);
  vec3 tmpvar_9;
  tmpvar_9 = normalize(xlv_TEXCOORD1);
  float tmpvar_10;
  tmpvar_10 = ((1.0 - _OcclusionStrength) + (texture2D (_OcclusionMap, xlv_TEXCOORD0.xy).y * _OcclusionStrength));
  float tmpvar_11;
  tmpvar_11 = (1.0 - _Glossiness);
  vec3 tmpvar_12;
  tmpvar_12 = (tmpvar_9 - (2.0 * (
    dot (tmpvar_8, tmpvar_9)
   * tmpvar_8)));
  vec3 tmpvar_13;
  vec3 tmpvar_14;
  tmpvar_14 = vec3(0.0, 0.0, 0.0);
  vec3 ambient_15;
  vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = tmpvar_8;
  vec3 x_17;
  x_17.x = dot (unity_SHAr, tmpvar_16);
  x_17.y = dot (unity_SHAg, tmpvar_16);
  x_17.z = dot (unity_SHAb, tmpvar_16);
  vec3 tmpvar_18;
  tmpvar_18 = max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD5.xyz + x_17));
  ambient_15 = tmpvar_18;
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    ambient_15 = max (((1.055 * 
      pow (max (tmpvar_18, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
    ) - 0.055), vec3(0.0, 0.0, 0.0));
  };
  tmpvar_14 = (ambient_15 * tmpvar_10);
  tmpvar_13 = vec3(0.0, 0.0, 0.0);
  vec3 specular_19;
  vec3 worldRefl_20;
  worldRefl_20 = tmpvar_12;
  vec3 worldPos_21;
  worldPos_21 = xlv_TEXCOORD8;
  if ((unity_SpecCube0_ProbePosition.w > 0.0)) {
    vec3 tmpvar_22;
    tmpvar_22 = normalize(tmpvar_12);
    vec3 tmpvar_23;
    tmpvar_23 = ((unity_SpecCube0_BoxMax.xyz - xlv_TEXCOORD8) / tmpvar_22);
    vec3 tmpvar_24;
    tmpvar_24 = ((unity_SpecCube0_BoxMin.xyz - xlv_TEXCOORD8) / tmpvar_22);
    bvec3 tmpvar_25;
    tmpvar_25 = greaterThan (tmpvar_22, vec3(0.0, 0.0, 0.0));
    float tmpvar_26;
    if (tmpvar_25.x) {
      tmpvar_26 = tmpvar_23.x;
    } else {
      tmpvar_26 = tmpvar_24.x;
    };
    float tmpvar_27;
    if (tmpvar_25.y) {
      tmpvar_27 = tmpvar_23.y;
    } else {
      tmpvar_27 = tmpvar_24.y;
    };
    float tmpvar_28;
    if (tmpvar_25.z) {
      tmpvar_28 = tmpvar_23.z;
    } else {
      tmpvar_28 = tmpvar_24.z;
    };
    worldPos_21 = (xlv_TEXCOORD8 - unity_SpecCube0_ProbePosition.xyz);
    worldRefl_20 = (worldPos_21 + (tmpvar_22 * min (
      min (tmpvar_26, tmpvar_27)
    , tmpvar_28)));
  };
  vec4 tmpvar_29;
  tmpvar_29.xyz = worldRefl_20;
  tmpvar_29.w = ((tmpvar_11 * (1.7 - 
    (0.7 * tmpvar_11)
  )) * 6.0);
  vec4 tmpvar_30;
  tmpvar_30 = textureCubeLod (unity_SpecCube0, worldRefl_20, tmpvar_29.w);
  vec3 tmpvar_31;
  tmpvar_31 = ((unity_SpecCube0_HDR.x * pow (tmpvar_30.w, unity_SpecCube0_HDR.y)) * tmpvar_30.xyz);
  if ((unity_SpecCube0_BoxMin.w < 0.99999)) {
    vec3 worldRefl_32;
    worldRefl_32 = tmpvar_12;
    vec3 worldPos_33;
    worldPos_33 = xlv_TEXCOORD8;
    if ((unity_SpecCube1_ProbePosition.w > 0.0)) {
      vec3 tmpvar_34;
      tmpvar_34 = normalize(tmpvar_12);
      vec3 tmpvar_35;
      tmpvar_35 = ((unity_SpecCube1_BoxMax.xyz - xlv_TEXCOORD8) / tmpvar_34);
      vec3 tmpvar_36;
      tmpvar_36 = ((unity_SpecCube1_BoxMin.xyz - xlv_TEXCOORD8) / tmpvar_34);
      bvec3 tmpvar_37;
      tmpvar_37 = greaterThan (tmpvar_34, vec3(0.0, 0.0, 0.0));
      float tmpvar_38;
      if (tmpvar_37.x) {
        tmpvar_38 = tmpvar_35.x;
      } else {
        tmpvar_38 = tmpvar_36.x;
      };
      float tmpvar_39;
      if (tmpvar_37.y) {
        tmpvar_39 = tmpvar_35.y;
      } else {
        tmpvar_39 = tmpvar_36.y;
      };
      float tmpvar_40;
      if (tmpvar_37.z) {
        tmpvar_40 = tmpvar_35.z;
      } else {
        tmpvar_40 = tmpvar_36.z;
      };
      worldPos_33 = (xlv_TEXCOORD8 - unity_SpecCube1_ProbePosition.xyz);
      worldRefl_32 = (worldPos_33 + (tmpvar_34 * min (
        min (tmpvar_38, tmpvar_39)
      , tmpvar_40)));
    };
    vec4 tmpvar_41;
    tmpvar_41.xyz = worldRefl_32;
    tmpvar_41.w = ((tmpvar_11 * (1.7 - 
      (0.7 * tmpvar_11)
    )) * 6.0);
    vec4 tmpvar_42;
    tmpvar_42 = textureCubeLod (unity_SpecCube1, worldRefl_32, tmpvar_41.w);
    specular_19 = mix (((unity_SpecCube1_HDR.x * 
      pow (tmpvar_42.w, unity_SpecCube1_HDR.y)
    ) * tmpvar_42.xyz), tmpvar_31, unity_SpecCube0_BoxMin.www);
  } else {
    specular_19 = tmpvar_31;
  };
  tmpvar_13 = (specular_19 * tmpvar_10);
  vec3 viewDir_43;
  viewDir_43 = -(tmpvar_9);
  float surfaceReduction_44;
  float specularTerm_45;
  float tmpvar_46;
  tmpvar_46 = (1.0 - _Glossiness);
  vec3 tmpvar_47;
  vec3 inVec_48;
  inVec_48 = (_WorldSpaceLightPos0.xyz + viewDir_43);
  tmpvar_47 = (inVec_48 * inversesqrt(max (0.001, 
    dot (inVec_48, inVec_48)
  )));
  float tmpvar_49;
  tmpvar_49 = dot (tmpvar_8, viewDir_43);
  vec3 tmpvar_50;
  if ((tmpvar_49 < 0.0)) {
    tmpvar_50 = (tmpvar_8 + (viewDir_43 * (
      -(tmpvar_49)
     + 1e-05)));
  } else {
    tmpvar_50 = tmpvar_8;
  };
  float tmpvar_51;
  tmpvar_51 = max (0.0, dot (tmpvar_50, _WorldSpaceLightPos0.xyz));
  float tmpvar_52;
  tmpvar_52 = max (0.0, dot (tmpvar_50, tmpvar_47));
  float tmpvar_53;
  tmpvar_53 = max (0.0, dot (tmpvar_50, viewDir_43));
  float tmpvar_54;
  tmpvar_54 = max (0.0, dot (_WorldSpaceLightPos0.xyz, tmpvar_47));
  float tmpvar_55;
  tmpvar_55 = (tmpvar_46 * tmpvar_46);
  float tmpvar_56;
  tmpvar_56 = (tmpvar_46 * tmpvar_46);
  float tmpvar_57;
  tmpvar_57 = (tmpvar_56 * tmpvar_56);
  float tmpvar_58;
  tmpvar_58 = (((tmpvar_52 * tmpvar_52) * (tmpvar_57 - 1.0)) + 1.0);
  float x_59;
  x_59 = (1.0 - tmpvar_51);
  float x_60;
  x_60 = (1.0 - tmpvar_53);
  float tmpvar_61;
  tmpvar_61 = (0.5 + ((2.0 * tmpvar_54) * (tmpvar_54 * tmpvar_46)));
  float tmpvar_62;
  tmpvar_62 = ((1.0 + (
    (tmpvar_61 - 1.0)
   * 
    ((x_59 * x_59) * ((x_59 * x_59) * x_59))
  )) * (1.0 + (
    (tmpvar_61 - 1.0)
   * 
    ((x_60 * x_60) * ((x_60 * x_60) * x_60))
  )));
  float tmpvar_63;
  tmpvar_63 = (((2.0 / 
    (((tmpvar_51 * (
      (tmpvar_53 * (1.0 - tmpvar_55))
     + tmpvar_55)) + (tmpvar_53 * (
      (tmpvar_51 * (1.0 - tmpvar_55))
     + tmpvar_55))) + 1e-05)
  ) * (tmpvar_57 / 
    (((3.141593 * tmpvar_58) * tmpvar_58) + 1e-07)
  )) * 0.7853982);
  specularTerm_45 = tmpvar_63;
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    specularTerm_45 = sqrt(max (0.0001, tmpvar_63));
  };
  float tmpvar_64;
  tmpvar_64 = max (0.0, (specularTerm_45 * tmpvar_51));
  specularTerm_45 = tmpvar_64;
  float tmpvar_65;
  tmpvar_65 = (tmpvar_62 * tmpvar_51);
  float tmpvar_66;
  tmpvar_66 = (tmpvar_46 * tmpvar_46);
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    surfaceReduction_44 = (1.0 - ((0.28 * tmpvar_66) * tmpvar_46));
  } else {
    surfaceReduction_44 = (1.0/(((tmpvar_66 * tmpvar_66) + 1.0)));
  };
  float x_67;
  x_67 = (1.0 - tmpvar_54);
  float x_68;
  x_68 = (1.0 - tmpvar_53);
  vec3 tmpvar_69;
  tmpvar_69 = (((tmpvar_5 * 
    (tmpvar_14 + (_LightColor0.xyz * tmpvar_65))
  ) + (
    (tmpvar_64 * _LightColor0.xyz)
   * 
    (tmpvar_6 + ((1.0 - tmpvar_6) * ((x_67 * x_67) * (
      (x_67 * x_67)
     * x_67))))
  )) + ((surfaceReduction_44 * tmpvar_13) * mix (tmpvar_6, vec3(
    clamp ((_Glossiness + (1.0 - tmpvar_7)), 0.0, 1.0)
  ), vec3(
    ((x_68 * x_68) * ((x_68 * x_68) * x_68))
  ))));
  vec4 tmpvar_70;
  tmpvar_70.w = 1.0;
  tmpvar_70.xyz = tmpvar_69;
  c_1.w = tmpvar_70.w;
  c_1.xyz = (tmpvar_69 + (texture2D (_EmissionMap, xlv_TEXCOORD0.xy).xyz * _EmissionColor.xyz));
  vec4 xlat_varoutput_71;
  xlat_varoutput_71.xyz = c_1.xyz;
  xlat_varoutput_71.w = tmpvar_2;
  gl_FragData[0] = xlat_varoutput_71;
}


#endif
"
}
SubProgram "d3d9 " {
// Stats: 34 math
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "_ALPHABLEND_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Matrix 4 [_Object2World] 3
Matrix 7 [_World2Object] 3
Matrix 0 [glstate_matrix_mvp]
Vector 16 [_DetailAlbedoMap_ST]
Vector 15 [_MainTex_ST]
Float 17 [_UVSec]
Vector 10 [_WorldSpaceCameraPos]
Vector 13 [unity_SHBb]
Vector 12 [unity_SHBg]
Vector 11 [unity_SHBr]
Vector 14 [unity_SHC]
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   row_major float4x4 _Object2World;
//   float _UVSec;
//   row_major float4x4 _World2Object;
//   float3 _WorldSpaceCameraPos;
//   row_major float4x4 glstate_matrix_mvp;
//   float4 unity_SHBb;
//   float4 unity_SHBg;
//   float4 unity_SHBr;
//   float4 unity_SHC;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   glstate_matrix_mvp   c0       4
//   _Object2World        c4       3
//   _World2Object        c7       3
//   _WorldSpaceCameraPos c10      1
//   unity_SHBr           c11      1
//   unity_SHBg           c12      1
//   unity_SHBb           c13      1
//   unity_SHC            c14      1
//   _MainTex_ST          c15      1
//   _DetailAlbedoMap_ST  c16      1
//   _UVSec               c17      1
//

    vs_3_0
    def c18, 0, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6
    dcl_texcoord8 o7.xyz
    dp4 o0.x, c0, v0
    dp4 o0.y, c1, v0
    dp4 o0.z, c2, v0
    dp4 o0.w, c3, v0
    mad o1.xy, v2, c15, c15.zwzw
    abs r0.x, c17.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c16.xyxy, c16
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add o2.xyz, r0, -c10
    mov o7.xyz, r0
    mul r0.xyz, c8, v1.y
    mad r0.xyz, c7, v1.x, r0
    mad r0.xyz, c9, v1.z, r0
    nrm r1.xyz, r0
    mul r0.x, r1.y, r1.y
    mad r0.x, r1.x, r1.x, -r0.x
    mul r2, r1.yzzx, r1.xyzz
    mov o5.xyz, r1
    dp4 r1.x, c11, r2
    dp4 r1.y, c12, r2
    dp4 r1.z, c13, r2
    mad o6.xyz, c14, r0.x, r1
    mov o3, c18.x
    mov o4, c18.x
    mov o5.w, c18.x
    mov o6.w, c18.x

// approximately 33 instruction slots used
"
}
SubProgram "d3d11 " {
// Stats: 33 math
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "_ALPHABLEND_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
ConstBuffer "$Globals" 240
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 656 [unity_SHBr]
Vector 672 [unity_SHBg]
Vector 688 [unity_SHBb]
Vector 704 [unity_SHC]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 8   xyz         7     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer cb0[14], immediateIndexed
      dcl_constantbuffer cb1[5], immediateIndexed
      dcl_constantbuffer cb2[45], immediateIndexed
      dcl_constantbuffer cb3[19], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyz
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: mad o0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   4: eq r0.x, cb0[13].z, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[11].xxxy, cb0[11].zzzw
   7: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  13: mov o7.xyz, r0.xyzx
  14: mov o3.xyzw, l(0,0,0,0)
  15: mov o4.xyzw, l(0,0,0,0)
  16: mul r0.x, v1.x, cb3[16].x
  17: mul r0.y, v1.x, cb3[17].x
  18: mul r0.z, v1.x, cb3[18].x
  19: mul r1.x, v1.y, cb3[16].y
  20: mul r1.y, v1.y, cb3[17].y
  21: mul r1.z, v1.y, cb3[18].y
  22: add r0.xyz, r0.xyzx, r1.xyzx
  23: mul r1.x, v1.z, cb3[16].z
  24: mul r1.y, v1.z, cb3[17].z
  25: mul r1.z, v1.z, cb3[18].z
  26: add r0.xyz, r0.xyzx, r1.xyzx
  27: dp3 r0.w, r0.xyzx, r0.xyzx
  28: rsq r0.w, r0.w
  29: mul r0.xyz, r0.wwww, r0.xyzx
  30: mov o5.xyz, r0.xyzx
  31: mov o5.w, l(0)
  32: mul r0.w, r0.y, r0.y
  33: mad r0.w, r0.x, r0.x, -r0.w
  34: mul r1.xyzw, r0.yzzx, r0.xyzz
  35: dp4 r0.x, cb2[41].xyzw, r1.xyzw
  36: dp4 r0.y, cb2[42].xyzw, r1.xyzw
  37: dp4 r0.z, cb2[43].xyzw, r1.xyzw
  38: mad o6.xyz, cb2[44].xyzx, r0.wwww, r0.xyzx
  39: mov o6.w, l(0)
  40: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
// Stats: 182 math, 6 textures, 13 branches
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "_ALPHABLEND_ON" }
"#version 120

#ifdef VERTEX
uniform vec3 _WorldSpaceCameraPos;
uniform vec4 _ProjectionParams;
uniform vec4 unity_SHBr;
uniform vec4 unity_SHBg;
uniform vec4 unity_SHBb;
uniform vec4 unity_SHC;

uniform mat4 _Object2World;
uniform mat4 _World2Object;
uniform vec4 unity_ColorSpaceLuminance;
uniform vec4 _MainTex_ST;
uniform vec4 _DetailAlbedoMap_ST;
uniform float _UVSec;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
varying vec4 xlv_TEXCOORD6;
varying vec3 xlv_TEXCOORD8;
void main ()
{
  vec2 tmpvar_1;
  tmpvar_1 = gl_MultiTexCoord0.xy;
  vec2 tmpvar_2;
  tmpvar_2 = gl_MultiTexCoord1.xy;
  vec4 tmpvar_3;
  vec4 tmpvar_4;
  vec4 tmpvar_5;
  vec4 tmpvar_6;
  vec3 tmpvar_7;
  vec4 tmpvar_8;
  tmpvar_8 = (_Object2World * gl_Vertex);
  tmpvar_7 = tmpvar_8.xyz;
  tmpvar_3 = (gl_ModelViewProjectionMatrix * gl_Vertex);
  vec4 texcoord_9;
  texcoord_9.xy = ((gl_MultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  vec2 tmpvar_10;
  if ((_UVSec == 0.0)) {
    tmpvar_10 = tmpvar_1;
  } else {
    tmpvar_10 = tmpvar_2;
  };
  texcoord_9.zw = ((tmpvar_10 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  vec3 n_11;
  n_11 = (tmpvar_8.xyz - _WorldSpaceCameraPos);
  vec4 v_12;
  v_12.x = _World2Object[0].x;
  v_12.y = _World2Object[1].x;
  v_12.z = _World2Object[2].x;
  v_12.w = _World2Object[3].x;
  vec4 v_13;
  v_13.x = _World2Object[0].y;
  v_13.y = _World2Object[1].y;
  v_13.z = _World2Object[2].y;
  v_13.w = _World2Object[3].y;
  vec4 v_14;
  v_14.x = _World2Object[0].z;
  v_14.y = _World2Object[1].z;
  v_14.z = _World2Object[2].z;
  v_14.w = _World2Object[3].z;
  vec3 tmpvar_15;
  tmpvar_15 = normalize(((
    (v_12.xyz * gl_Normal.x)
   + 
    (v_13.xyz * gl_Normal.y)
  ) + (v_14.xyz * gl_Normal.z)));
  tmpvar_4.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_5.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_6.xyz = tmpvar_15;
  vec4 o_16;
  vec4 tmpvar_17;
  tmpvar_17 = (tmpvar_3 * 0.5);
  vec2 tmpvar_18;
  tmpvar_18.x = tmpvar_17.x;
  tmpvar_18.y = (tmpvar_17.y * _ProjectionParams.x);
  o_16.xy = (tmpvar_18 + tmpvar_17.w);
  o_16.zw = tmpvar_3.zw;
  vec4 ambientOrLightmapUV_19;
  ambientOrLightmapUV_19 = vec4(0.0, 0.0, 0.0, 0.0);
  vec3 ambient_20;
  ambient_20 = vec3(0.0, 0.0, 0.0);
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    ambient_20 = vec3(0.0, 0.0, 0.0);
  };
  vec3 x1_21;
  vec4 tmpvar_22;
  tmpvar_22 = (tmpvar_15.xyzz * tmpvar_15.yzzx);
  x1_21.x = dot (unity_SHBr, tmpvar_22);
  x1_21.y = dot (unity_SHBg, tmpvar_22);
  x1_21.z = dot (unity_SHBb, tmpvar_22);
  ambient_20 = (ambient_20 + (x1_21 + (unity_SHC.xyz * 
    ((tmpvar_15.x * tmpvar_15.x) - (tmpvar_15.y * tmpvar_15.y))
  )));
  ambientOrLightmapUV_19.xyz = ambient_20;
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = texcoord_9;
  xlv_TEXCOORD1 = n_11;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  xlv_TEXCOORD5 = ambientOrLightmapUV_19;
  xlv_TEXCOORD6 = o_16;
  xlv_TEXCOORD8 = tmpvar_7;
}


#endif
#ifdef FRAGMENT
#extension GL_ARB_shader_texture_lod : enable
uniform vec4 _WorldSpaceLightPos0;
uniform vec4 unity_SHAr;
uniform vec4 unity_SHAg;
uniform vec4 unity_SHAb;
uniform samplerCube unity_SpecCube0;
uniform samplerCube unity_SpecCube1;
uniform vec4 unity_SpecCube0_BoxMax;
uniform vec4 unity_SpecCube0_BoxMin;
uniform vec4 unity_SpecCube0_ProbePosition;
uniform vec4 unity_SpecCube0_HDR;
uniform vec4 unity_SpecCube1_BoxMax;
uniform vec4 unity_SpecCube1_BoxMin;
uniform vec4 unity_SpecCube1_ProbePosition;
uniform vec4 unity_SpecCube1_HDR;
uniform vec4 unity_ColorSpaceDielectricSpec;
uniform vec4 unity_ColorSpaceLuminance;
uniform vec4 _LightColor0;
uniform vec4 _Color;
uniform sampler2D _MainTex;
uniform float _Metallic;
uniform float _Glossiness;
uniform sampler2D _OcclusionMap;
uniform float _OcclusionStrength;
uniform vec4 _EmissionColor;
uniform sampler2D _EmissionMap;
uniform sampler2D _ShadowMapTexture;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
varying vec4 xlv_TEXCOORD6;
varying vec3 xlv_TEXCOORD8;
void main ()
{
  vec4 c_1;
  float tmpvar_2;
  vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  tmpvar_2 = (tmpvar_3.w * _Color.w);
  vec3 tmpvar_4;
  tmpvar_4 = (_Color.xyz * tmpvar_3.xyz);
  vec3 tmpvar_5;
  vec3 tmpvar_6;
  tmpvar_6 = mix (unity_ColorSpaceDielectricSpec.xyz, tmpvar_4, vec3(_Metallic));
  float tmpvar_7;
  tmpvar_7 = (unity_ColorSpaceDielectricSpec.w - (_Metallic * unity_ColorSpaceDielectricSpec.w));
  tmpvar_5 = (tmpvar_4 * tmpvar_7);
  vec3 tmpvar_8;
  tmpvar_8 = normalize(xlv_TEXCOORD2_2.xyz);
  vec3 tmpvar_9;
  tmpvar_9 = normalize(xlv_TEXCOORD1);
  float tmpvar_10;
  tmpvar_10 = ((1.0 - _OcclusionStrength) + (texture2D (_OcclusionMap, xlv_TEXCOORD0.xy).y * _OcclusionStrength));
  float tmpvar_11;
  tmpvar_11 = (1.0 - _Glossiness);
  vec3 tmpvar_12;
  tmpvar_12 = (tmpvar_9 - (2.0 * (
    dot (tmpvar_8, tmpvar_9)
   * tmpvar_8)));
  vec3 tmpvar_13;
  vec3 tmpvar_14;
  vec3 tmpvar_15;
  tmpvar_15 = vec3(0.0, 0.0, 0.0);
  tmpvar_14 = (_LightColor0.xyz * texture2DProj (_ShadowMapTexture, xlv_TEXCOORD6).x);
  vec3 ambient_16;
  vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = tmpvar_8;
  vec3 x_18;
  x_18.x = dot (unity_SHAr, tmpvar_17);
  x_18.y = dot (unity_SHAg, tmpvar_17);
  x_18.z = dot (unity_SHAb, tmpvar_17);
  vec3 tmpvar_19;
  tmpvar_19 = max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD5.xyz + x_18));
  ambient_16 = tmpvar_19;
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    ambient_16 = max (((1.055 * 
      pow (max (tmpvar_19, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
    ) - 0.055), vec3(0.0, 0.0, 0.0));
  };
  tmpvar_15 = (ambient_16 * tmpvar_10);
  tmpvar_13 = vec3(0.0, 0.0, 0.0);
  vec3 specular_20;
  vec3 worldRefl_21;
  worldRefl_21 = tmpvar_12;
  vec3 worldPos_22;
  worldPos_22 = xlv_TEXCOORD8;
  if ((unity_SpecCube0_ProbePosition.w > 0.0)) {
    vec3 tmpvar_23;
    tmpvar_23 = normalize(tmpvar_12);
    vec3 tmpvar_24;
    tmpvar_24 = ((unity_SpecCube0_BoxMax.xyz - xlv_TEXCOORD8) / tmpvar_23);
    vec3 tmpvar_25;
    tmpvar_25 = ((unity_SpecCube0_BoxMin.xyz - xlv_TEXCOORD8) / tmpvar_23);
    bvec3 tmpvar_26;
    tmpvar_26 = greaterThan (tmpvar_23, vec3(0.0, 0.0, 0.0));
    float tmpvar_27;
    if (tmpvar_26.x) {
      tmpvar_27 = tmpvar_24.x;
    } else {
      tmpvar_27 = tmpvar_25.x;
    };
    float tmpvar_28;
    if (tmpvar_26.y) {
      tmpvar_28 = tmpvar_24.y;
    } else {
      tmpvar_28 = tmpvar_25.y;
    };
    float tmpvar_29;
    if (tmpvar_26.z) {
      tmpvar_29 = tmpvar_24.z;
    } else {
      tmpvar_29 = tmpvar_25.z;
    };
    worldPos_22 = (xlv_TEXCOORD8 - unity_SpecCube0_ProbePosition.xyz);
    worldRefl_21 = (worldPos_22 + (tmpvar_23 * min (
      min (tmpvar_27, tmpvar_28)
    , tmpvar_29)));
  };
  vec4 tmpvar_30;
  tmpvar_30.xyz = worldRefl_21;
  tmpvar_30.w = ((tmpvar_11 * (1.7 - 
    (0.7 * tmpvar_11)
  )) * 6.0);
  vec4 tmpvar_31;
  tmpvar_31 = textureCubeLod (unity_SpecCube0, worldRefl_21, tmpvar_30.w);
  vec3 tmpvar_32;
  tmpvar_32 = ((unity_SpecCube0_HDR.x * pow (tmpvar_31.w, unity_SpecCube0_HDR.y)) * tmpvar_31.xyz);
  if ((unity_SpecCube0_BoxMin.w < 0.99999)) {
    vec3 worldRefl_33;
    worldRefl_33 = tmpvar_12;
    vec3 worldPos_34;
    worldPos_34 = xlv_TEXCOORD8;
    if ((unity_SpecCube1_ProbePosition.w > 0.0)) {
      vec3 tmpvar_35;
      tmpvar_35 = normalize(tmpvar_12);
      vec3 tmpvar_36;
      tmpvar_36 = ((unity_SpecCube1_BoxMax.xyz - xlv_TEXCOORD8) / tmpvar_35);
      vec3 tmpvar_37;
      tmpvar_37 = ((unity_SpecCube1_BoxMin.xyz - xlv_TEXCOORD8) / tmpvar_35);
      bvec3 tmpvar_38;
      tmpvar_38 = greaterThan (tmpvar_35, vec3(0.0, 0.0, 0.0));
      float tmpvar_39;
      if (tmpvar_38.x) {
        tmpvar_39 = tmpvar_36.x;
      } else {
        tmpvar_39 = tmpvar_37.x;
      };
      float tmpvar_40;
      if (tmpvar_38.y) {
        tmpvar_40 = tmpvar_36.y;
      } else {
        tmpvar_40 = tmpvar_37.y;
      };
      float tmpvar_41;
      if (tmpvar_38.z) {
        tmpvar_41 = tmpvar_36.z;
      } else {
        tmpvar_41 = tmpvar_37.z;
      };
      worldPos_34 = (xlv_TEXCOORD8 - unity_SpecCube1_ProbePosition.xyz);
      worldRefl_33 = (worldPos_34 + (tmpvar_35 * min (
        min (tmpvar_39, tmpvar_40)
      , tmpvar_41)));
    };
    vec4 tmpvar_42;
    tmpvar_42.xyz = worldRefl_33;
    tmpvar_42.w = ((tmpvar_11 * (1.7 - 
      (0.7 * tmpvar_11)
    )) * 6.0);
    vec4 tmpvar_43;
    tmpvar_43 = textureCubeLod (unity_SpecCube1, worldRefl_33, tmpvar_42.w);
    specular_20 = mix (((unity_SpecCube1_HDR.x * 
      pow (tmpvar_43.w, unity_SpecCube1_HDR.y)
    ) * tmpvar_43.xyz), tmpvar_32, unity_SpecCube0_BoxMin.www);
  } else {
    specular_20 = tmpvar_32;
  };
  tmpvar_13 = (specular_20 * tmpvar_10);
  vec3 viewDir_44;
  viewDir_44 = -(tmpvar_9);
  float surfaceReduction_45;
  float specularTerm_46;
  float tmpvar_47;
  tmpvar_47 = (1.0 - _Glossiness);
  vec3 tmpvar_48;
  vec3 inVec_49;
  inVec_49 = (_WorldSpaceLightPos0.xyz + viewDir_44);
  tmpvar_48 = (inVec_49 * inversesqrt(max (0.001, 
    dot (inVec_49, inVec_49)
  )));
  float tmpvar_50;
  tmpvar_50 = dot (tmpvar_8, viewDir_44);
  vec3 tmpvar_51;
  if ((tmpvar_50 < 0.0)) {
    tmpvar_51 = (tmpvar_8 + (viewDir_44 * (
      -(tmpvar_50)
     + 1e-05)));
  } else {
    tmpvar_51 = tmpvar_8;
  };
  float tmpvar_52;
  tmpvar_52 = max (0.0, dot (tmpvar_51, _WorldSpaceLightPos0.xyz));
  float tmpvar_53;
  tmpvar_53 = max (0.0, dot (tmpvar_51, tmpvar_48));
  float tmpvar_54;
  tmpvar_54 = max (0.0, dot (tmpvar_51, viewDir_44));
  float tmpvar_55;
  tmpvar_55 = max (0.0, dot (_WorldSpaceLightPos0.xyz, tmpvar_48));
  float tmpvar_56;
  tmpvar_56 = (tmpvar_47 * tmpvar_47);
  float tmpvar_57;
  tmpvar_57 = (tmpvar_47 * tmpvar_47);
  float tmpvar_58;
  tmpvar_58 = (tmpvar_57 * tmpvar_57);
  float tmpvar_59;
  tmpvar_59 = (((tmpvar_53 * tmpvar_53) * (tmpvar_58 - 1.0)) + 1.0);
  float x_60;
  x_60 = (1.0 - tmpvar_52);
  float x_61;
  x_61 = (1.0 - tmpvar_54);
  float tmpvar_62;
  tmpvar_62 = (0.5 + ((2.0 * tmpvar_55) * (tmpvar_55 * tmpvar_47)));
  float tmpvar_63;
  tmpvar_63 = ((1.0 + (
    (tmpvar_62 - 1.0)
   * 
    ((x_60 * x_60) * ((x_60 * x_60) * x_60))
  )) * (1.0 + (
    (tmpvar_62 - 1.0)
   * 
    ((x_61 * x_61) * ((x_61 * x_61) * x_61))
  )));
  float tmpvar_64;
  tmpvar_64 = (((2.0 / 
    (((tmpvar_52 * (
      (tmpvar_54 * (1.0 - tmpvar_56))
     + tmpvar_56)) + (tmpvar_54 * (
      (tmpvar_52 * (1.0 - tmpvar_56))
     + tmpvar_56))) + 1e-05)
  ) * (tmpvar_58 / 
    (((3.141593 * tmpvar_59) * tmpvar_59) + 1e-07)
  )) * 0.7853982);
  specularTerm_46 = tmpvar_64;
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    specularTerm_46 = sqrt(max (0.0001, tmpvar_64));
  };
  float tmpvar_65;
  tmpvar_65 = max (0.0, (specularTerm_46 * tmpvar_52));
  specularTerm_46 = tmpvar_65;
  float tmpvar_66;
  tmpvar_66 = (tmpvar_63 * tmpvar_52);
  float tmpvar_67;
  tmpvar_67 = (tmpvar_47 * tmpvar_47);
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    surfaceReduction_45 = (1.0 - ((0.28 * tmpvar_67) * tmpvar_47));
  } else {
    surfaceReduction_45 = (1.0/(((tmpvar_67 * tmpvar_67) + 1.0)));
  };
  float x_68;
  x_68 = (1.0 - tmpvar_55);
  float x_69;
  x_69 = (1.0 - tmpvar_54);
  vec3 tmpvar_70;
  tmpvar_70 = (((tmpvar_5 * 
    (tmpvar_15 + (tmpvar_14 * tmpvar_66))
  ) + (
    (tmpvar_65 * tmpvar_14)
   * 
    (tmpvar_6 + ((1.0 - tmpvar_6) * ((x_68 * x_68) * (
      (x_68 * x_68)
     * x_68))))
  )) + ((surfaceReduction_45 * tmpvar_13) * mix (tmpvar_6, vec3(
    clamp ((_Glossiness + (1.0 - tmpvar_7)), 0.0, 1.0)
  ), vec3(
    ((x_69 * x_69) * ((x_69 * x_69) * x_69))
  ))));
  vec4 tmpvar_71;
  tmpvar_71.w = 1.0;
  tmpvar_71.xyz = tmpvar_70;
  c_1.w = tmpvar_71.w;
  c_1.xyz = (tmpvar_70 + (texture2D (_EmissionMap, xlv_TEXCOORD0.xy).xyz * _EmissionColor.xyz));
  vec4 xlat_varoutput_72;
  xlat_varoutput_72.xyz = c_1.xyz;
  xlat_varoutput_72.w = tmpvar_2;
  gl_FragData[0] = xlat_varoutput_72;
}


#endif
"
}
SubProgram "d3d9 " {
// Stats: 40 math
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "_ALPHABLEND_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Matrix 4 [_Object2World] 3
Matrix 7 [_World2Object] 3
Matrix 0 [glstate_matrix_mvp]
Vector 18 [_DetailAlbedoMap_ST]
Vector 17 [_MainTex_ST]
Vector 11 [_ProjectionParams]
Vector 12 [_ScreenParams]
Float 19 [_UVSec]
Vector 10 [_WorldSpaceCameraPos]
Vector 15 [unity_SHBb]
Vector 14 [unity_SHBg]
Vector 13 [unity_SHBr]
Vector 16 [unity_SHC]
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   row_major float4x4 _Object2World;
//   float4 _ProjectionParams;
//   float4 _ScreenParams;
//   float _UVSec;
//   row_major float4x4 _World2Object;
//   float3 _WorldSpaceCameraPos;
//   row_major float4x4 glstate_matrix_mvp;
//   float4 unity_SHBb;
//   float4 unity_SHBg;
//   float4 unity_SHBr;
//   float4 unity_SHC;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   glstate_matrix_mvp   c0       4
//   _Object2World        c4       3
//   _World2Object        c7       3
//   _WorldSpaceCameraPos c10      1
//   _ProjectionParams    c11      1
//   _ScreenParams        c12      1
//   unity_SHBr           c13      1
//   unity_SHBg           c14      1
//   unity_SHBb           c15      1
//   unity_SHC            c16      1
//   _MainTex_ST          c17      1
//   _DetailAlbedoMap_ST  c18      1
//   _UVSec               c19      1
//

    vs_3_0
    def c20, 0.5, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6
    dcl_texcoord6 o7
    dcl_texcoord8 o8.xyz
    mad o1.xy, v2, c17, c17.zwzw
    abs r0.x, c19.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c18.xyxy, c18
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add o2.xyz, r0, -c10
    mov o8.xyz, r0
    dp4 r0.y, c1, v0
    mul r1.x, r0.y, c11.x
    mul r1.w, r1.x, c20.x
    dp4 r0.x, c0, v0
    dp4 r0.w, c3, v0
    mul r1.xz, r0.xyww, c20.x
    mad o7.xy, r1.z, c12.zwzw, r1.xwzw
    mul r1.xyz, c8, v1.y
    mad r1.xyz, c7, v1.x, r1
    mad r1.xyz, c9, v1.z, r1
    nrm r2.xyz, r1
    mul r1.x, r2.y, r2.y
    mad r1.x, r2.x, r2.x, -r1.x
    mul r3, r2.yzzx, r2.xyzz
    mov o5.xyz, r2
    dp4 r2.x, c13, r3
    dp4 r2.y, c14, r3
    dp4 r2.z, c15, r3
    mad o6.xyz, c16, r1.x, r2
    dp4 r0.z, c2, v0
    mov o0, r0
    mov o7.zw, r0
    mov o3, c20.y
    mov o4, c20.y
    mov o5.w, c20.y
    mov o6.w, c20.y

// approximately 39 instruction slots used
"
}
SubProgram "d3d11 " {
// Stats: 36 math
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "_ALPHABLEND_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
ConstBuffer "$Globals" 240
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
Vector 80 [_ProjectionParams]
ConstBuffer "UnityLighting" 720
Vector 656 [unity_SHBr]
Vector 672 [unity_SHBg]
Vector 688 [unity_SHBb]
Vector 704 [unity_SHC]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
// TEXCOORD                 8   xyz         8     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer cb0[14], immediateIndexed
      dcl_constantbuffer cb1[6], immediateIndexed
      dcl_constantbuffer cb2[45], immediateIndexed
      dcl_constantbuffer cb3[19], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_output o8.xyz
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   4: mov o0.xyzw, r0.xyzw
   5: eq r1.x, cb0[13].z, l(0.000000)
   6: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
   7: mad o1.zw, r1.xxxy, cb0[11].xxxy, cb0[11].zzzw
   8: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   9: mul r1.xyz, v0.yyyy, cb3[13].xyzx
  10: mad r1.xyz, cb3[12].xyzx, v0.xxxx, r1.xyzx
  11: mad r1.xyz, cb3[14].xyzx, v0.zzzz, r1.xyzx
  12: mad r1.xyz, cb3[15].xyzx, v0.wwww, r1.xyzx
  13: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  14: mov o8.xyz, r1.xyzx
  15: mov o3.xyzw, l(0,0,0,0)
  16: mov o4.xyzw, l(0,0,0,0)
  17: mul r1.x, v1.x, cb3[16].x
  18: mul r1.y, v1.x, cb3[17].x
  19: mul r1.z, v1.x, cb3[18].x
  20: mul r2.x, v1.y, cb3[16].y
  21: mul r2.y, v1.y, cb3[17].y
  22: mul r2.z, v1.y, cb3[18].y
  23: add r1.xyz, r1.xyzx, r2.xyzx
  24: mul r2.x, v1.z, cb3[16].z
  25: mul r2.y, v1.z, cb3[17].z
  26: mul r2.z, v1.z, cb3[18].z
  27: add r1.xyz, r1.xyzx, r2.xyzx
  28: dp3 r1.w, r1.xyzx, r1.xyzx
  29: rsq r1.w, r1.w
  30: mul r1.xyz, r1.wwww, r1.xyzx
  31: mov o5.xyz, r1.xyzx
  32: mov o5.w, l(0)
  33: mul r1.w, r1.y, r1.y
  34: mad r1.w, r1.x, r1.x, -r1.w
  35: mul r2.xyzw, r1.yzzx, r1.xyzz
  36: dp4 r1.x, cb2[41].xyzw, r2.xyzw
  37: dp4 r1.y, cb2[42].xyzw, r2.xyzw
  38: dp4 r1.z, cb2[43].xyzw, r2.xyzw
  39: mad o6.xyz, cb2[44].xyzx, r1.wwww, r1.xyzx
  40: mov o6.w, l(0)
  41: mul r0.y, r0.y, cb1[5].x
  42: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  43: mov o7.zw, r0.zzzw
  44: add o7.xy, r1.zzzz, r1.xwxx
  45: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
// Stats: 181 math, 5 textures, 13 branches
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "VERTEXLIGHT_ON" "_ALPHABLEND_ON" }
"#version 120

#ifdef VERTEX
uniform vec3 _WorldSpaceCameraPos;
uniform vec4 unity_4LightPosX0;
uniform vec4 unity_4LightPosY0;
uniform vec4 unity_4LightPosZ0;
uniform vec4 unity_4LightAtten0;
uniform vec4 unity_LightColor[8];
uniform vec4 unity_SHBr;
uniform vec4 unity_SHBg;
uniform vec4 unity_SHBb;
uniform vec4 unity_SHC;

uniform mat4 _Object2World;
uniform mat4 _World2Object;
uniform vec4 unity_ColorSpaceLuminance;
uniform vec4 _MainTex_ST;
uniform vec4 _DetailAlbedoMap_ST;
uniform float _UVSec;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
varying vec3 xlv_TEXCOORD8;
void main ()
{
  vec2 tmpvar_1;
  tmpvar_1 = gl_MultiTexCoord0.xy;
  vec2 tmpvar_2;
  tmpvar_2 = gl_MultiTexCoord1.xy;
  vec4 tmpvar_3;
  vec4 tmpvar_4;
  vec4 tmpvar_5;
  vec4 tmpvar_6;
  vec3 tmpvar_7;
  vec4 tmpvar_8;
  tmpvar_8 = (_Object2World * gl_Vertex);
  tmpvar_7 = tmpvar_8.xyz;
  tmpvar_3 = (gl_ModelViewProjectionMatrix * gl_Vertex);
  vec4 texcoord_9;
  texcoord_9.xy = ((gl_MultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  vec2 tmpvar_10;
  if ((_UVSec == 0.0)) {
    tmpvar_10 = tmpvar_1;
  } else {
    tmpvar_10 = tmpvar_2;
  };
  texcoord_9.zw = ((tmpvar_10 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  vec3 n_11;
  n_11 = (tmpvar_8.xyz - _WorldSpaceCameraPos);
  vec4 v_12;
  v_12.x = _World2Object[0].x;
  v_12.y = _World2Object[1].x;
  v_12.z = _World2Object[2].x;
  v_12.w = _World2Object[3].x;
  vec4 v_13;
  v_13.x = _World2Object[0].y;
  v_13.y = _World2Object[1].y;
  v_13.z = _World2Object[2].y;
  v_13.w = _World2Object[3].y;
  vec4 v_14;
  v_14.x = _World2Object[0].z;
  v_14.y = _World2Object[1].z;
  v_14.z = _World2Object[2].z;
  v_14.w = _World2Object[3].z;
  vec3 tmpvar_15;
  tmpvar_15 = normalize(((
    (v_12.xyz * gl_Normal.x)
   + 
    (v_13.xyz * gl_Normal.y)
  ) + (v_14.xyz * gl_Normal.z)));
  tmpvar_4.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_5.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_6.xyz = tmpvar_15;
  vec4 ambientOrLightmapUV_16;
  ambientOrLightmapUV_16.w = 0.0;
  vec3 col_17;
  vec4 ndotl_18;
  vec4 lengthSq_19;
  vec4 tmpvar_20;
  tmpvar_20 = (unity_4LightPosX0 - tmpvar_8.x);
  vec4 tmpvar_21;
  tmpvar_21 = (unity_4LightPosY0 - tmpvar_8.y);
  vec4 tmpvar_22;
  tmpvar_22 = (unity_4LightPosZ0 - tmpvar_8.z);
  lengthSq_19 = (tmpvar_20 * tmpvar_20);
  lengthSq_19 = (lengthSq_19 + (tmpvar_21 * tmpvar_21));
  lengthSq_19 = (lengthSq_19 + (tmpvar_22 * tmpvar_22));
  ndotl_18 = (tmpvar_20 * tmpvar_15.x);
  ndotl_18 = (ndotl_18 + (tmpvar_21 * tmpvar_15.y));
  ndotl_18 = (ndotl_18 + (tmpvar_22 * tmpvar_15.z));
  vec4 tmpvar_23;
  tmpvar_23 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_18 * inversesqrt(lengthSq_19)));
  ndotl_18 = tmpvar_23;
  vec4 tmpvar_24;
  tmpvar_24 = (tmpvar_23 * (1.0/((1.0 + 
    (lengthSq_19 * unity_4LightAtten0)
  ))));
  col_17 = (unity_LightColor[0].xyz * tmpvar_24.x);
  col_17 = (col_17 + (unity_LightColor[1].xyz * tmpvar_24.y));
  col_17 = (col_17 + (unity_LightColor[2].xyz * tmpvar_24.z));
  col_17 = (col_17 + (unity_LightColor[3].xyz * tmpvar_24.w));
  ambientOrLightmapUV_16.xyz = col_17;
  vec3 ambient_25;
  ambient_25 = ambientOrLightmapUV_16.xyz;
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    ambient_25 = (col_17 * ((col_17 * 
      ((col_17 * 0.305306) + 0.6821711)
    ) + 0.01252288));
  };
  vec3 x1_26;
  vec4 tmpvar_27;
  tmpvar_27 = (tmpvar_15.xyzz * tmpvar_15.yzzx);
  x1_26.x = dot (unity_SHBr, tmpvar_27);
  x1_26.y = dot (unity_SHBg, tmpvar_27);
  x1_26.z = dot (unity_SHBb, tmpvar_27);
  ambient_25 = (ambient_25 + (x1_26 + (unity_SHC.xyz * 
    ((tmpvar_15.x * tmpvar_15.x) - (tmpvar_15.y * tmpvar_15.y))
  )));
  ambientOrLightmapUV_16.xyz = ambient_25;
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = texcoord_9;
  xlv_TEXCOORD1 = n_11;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  xlv_TEXCOORD5 = ambientOrLightmapUV_16;
  xlv_TEXCOORD8 = tmpvar_7;
}


#endif
#ifdef FRAGMENT
#extension GL_ARB_shader_texture_lod : enable
uniform vec4 _WorldSpaceLightPos0;
uniform vec4 unity_SHAr;
uniform vec4 unity_SHAg;
uniform vec4 unity_SHAb;
uniform samplerCube unity_SpecCube0;
uniform samplerCube unity_SpecCube1;
uniform vec4 unity_SpecCube0_BoxMax;
uniform vec4 unity_SpecCube0_BoxMin;
uniform vec4 unity_SpecCube0_ProbePosition;
uniform vec4 unity_SpecCube0_HDR;
uniform vec4 unity_SpecCube1_BoxMax;
uniform vec4 unity_SpecCube1_BoxMin;
uniform vec4 unity_SpecCube1_ProbePosition;
uniform vec4 unity_SpecCube1_HDR;
uniform vec4 unity_ColorSpaceDielectricSpec;
uniform vec4 unity_ColorSpaceLuminance;
uniform vec4 _LightColor0;
uniform vec4 _Color;
uniform sampler2D _MainTex;
uniform float _Metallic;
uniform float _Glossiness;
uniform sampler2D _OcclusionMap;
uniform float _OcclusionStrength;
uniform vec4 _EmissionColor;
uniform sampler2D _EmissionMap;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
varying vec3 xlv_TEXCOORD8;
void main ()
{
  vec4 c_1;
  float tmpvar_2;
  vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  tmpvar_2 = (tmpvar_3.w * _Color.w);
  vec3 tmpvar_4;
  tmpvar_4 = (_Color.xyz * tmpvar_3.xyz);
  vec3 tmpvar_5;
  vec3 tmpvar_6;
  tmpvar_6 = mix (unity_ColorSpaceDielectricSpec.xyz, tmpvar_4, vec3(_Metallic));
  float tmpvar_7;
  tmpvar_7 = (unity_ColorSpaceDielectricSpec.w - (_Metallic * unity_ColorSpaceDielectricSpec.w));
  tmpvar_5 = (tmpvar_4 * tmpvar_7);
  vec3 tmpvar_8;
  tmpvar_8 = normalize(xlv_TEXCOORD2_2.xyz);
  vec3 tmpvar_9;
  tmpvar_9 = normalize(xlv_TEXCOORD1);
  float tmpvar_10;
  tmpvar_10 = ((1.0 - _OcclusionStrength) + (texture2D (_OcclusionMap, xlv_TEXCOORD0.xy).y * _OcclusionStrength));
  float tmpvar_11;
  tmpvar_11 = (1.0 - _Glossiness);
  vec3 tmpvar_12;
  tmpvar_12 = (tmpvar_9 - (2.0 * (
    dot (tmpvar_8, tmpvar_9)
   * tmpvar_8)));
  vec3 tmpvar_13;
  vec3 tmpvar_14;
  tmpvar_14 = vec3(0.0, 0.0, 0.0);
  vec3 ambient_15;
  vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = tmpvar_8;
  vec3 x_17;
  x_17.x = dot (unity_SHAr, tmpvar_16);
  x_17.y = dot (unity_SHAg, tmpvar_16);
  x_17.z = dot (unity_SHAb, tmpvar_16);
  vec3 tmpvar_18;
  tmpvar_18 = max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD5.xyz + x_17));
  ambient_15 = tmpvar_18;
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    ambient_15 = max (((1.055 * 
      pow (max (tmpvar_18, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
    ) - 0.055), vec3(0.0, 0.0, 0.0));
  };
  tmpvar_14 = (ambient_15 * tmpvar_10);
  tmpvar_13 = vec3(0.0, 0.0, 0.0);
  vec3 specular_19;
  vec3 worldRefl_20;
  worldRefl_20 = tmpvar_12;
  vec3 worldPos_21;
  worldPos_21 = xlv_TEXCOORD8;
  if ((unity_SpecCube0_ProbePosition.w > 0.0)) {
    vec3 tmpvar_22;
    tmpvar_22 = normalize(tmpvar_12);
    vec3 tmpvar_23;
    tmpvar_23 = ((unity_SpecCube0_BoxMax.xyz - xlv_TEXCOORD8) / tmpvar_22);
    vec3 tmpvar_24;
    tmpvar_24 = ((unity_SpecCube0_BoxMin.xyz - xlv_TEXCOORD8) / tmpvar_22);
    bvec3 tmpvar_25;
    tmpvar_25 = greaterThan (tmpvar_22, vec3(0.0, 0.0, 0.0));
    float tmpvar_26;
    if (tmpvar_25.x) {
      tmpvar_26 = tmpvar_23.x;
    } else {
      tmpvar_26 = tmpvar_24.x;
    };
    float tmpvar_27;
    if (tmpvar_25.y) {
      tmpvar_27 = tmpvar_23.y;
    } else {
      tmpvar_27 = tmpvar_24.y;
    };
    float tmpvar_28;
    if (tmpvar_25.z) {
      tmpvar_28 = tmpvar_23.z;
    } else {
      tmpvar_28 = tmpvar_24.z;
    };
    worldPos_21 = (xlv_TEXCOORD8 - unity_SpecCube0_ProbePosition.xyz);
    worldRefl_20 = (worldPos_21 + (tmpvar_22 * min (
      min (tmpvar_26, tmpvar_27)
    , tmpvar_28)));
  };
  vec4 tmpvar_29;
  tmpvar_29.xyz = worldRefl_20;
  tmpvar_29.w = ((tmpvar_11 * (1.7 - 
    (0.7 * tmpvar_11)
  )) * 6.0);
  vec4 tmpvar_30;
  tmpvar_30 = textureCubeLod (unity_SpecCube0, worldRefl_20, tmpvar_29.w);
  vec3 tmpvar_31;
  tmpvar_31 = ((unity_SpecCube0_HDR.x * pow (tmpvar_30.w, unity_SpecCube0_HDR.y)) * tmpvar_30.xyz);
  if ((unity_SpecCube0_BoxMin.w < 0.99999)) {
    vec3 worldRefl_32;
    worldRefl_32 = tmpvar_12;
    vec3 worldPos_33;
    worldPos_33 = xlv_TEXCOORD8;
    if ((unity_SpecCube1_ProbePosition.w > 0.0)) {
      vec3 tmpvar_34;
      tmpvar_34 = normalize(tmpvar_12);
      vec3 tmpvar_35;
      tmpvar_35 = ((unity_SpecCube1_BoxMax.xyz - xlv_TEXCOORD8) / tmpvar_34);
      vec3 tmpvar_36;
      tmpvar_36 = ((unity_SpecCube1_BoxMin.xyz - xlv_TEXCOORD8) / tmpvar_34);
      bvec3 tmpvar_37;
      tmpvar_37 = greaterThan (tmpvar_34, vec3(0.0, 0.0, 0.0));
      float tmpvar_38;
      if (tmpvar_37.x) {
        tmpvar_38 = tmpvar_35.x;
      } else {
        tmpvar_38 = tmpvar_36.x;
      };
      float tmpvar_39;
      if (tmpvar_37.y) {
        tmpvar_39 = tmpvar_35.y;
      } else {
        tmpvar_39 = tmpvar_36.y;
      };
      float tmpvar_40;
      if (tmpvar_37.z) {
        tmpvar_40 = tmpvar_35.z;
      } else {
        tmpvar_40 = tmpvar_36.z;
      };
      worldPos_33 = (xlv_TEXCOORD8 - unity_SpecCube1_ProbePosition.xyz);
      worldRefl_32 = (worldPos_33 + (tmpvar_34 * min (
        min (tmpvar_38, tmpvar_39)
      , tmpvar_40)));
    };
    vec4 tmpvar_41;
    tmpvar_41.xyz = worldRefl_32;
    tmpvar_41.w = ((tmpvar_11 * (1.7 - 
      (0.7 * tmpvar_11)
    )) * 6.0);
    vec4 tmpvar_42;
    tmpvar_42 = textureCubeLod (unity_SpecCube1, worldRefl_32, tmpvar_41.w);
    specular_19 = mix (((unity_SpecCube1_HDR.x * 
      pow (tmpvar_42.w, unity_SpecCube1_HDR.y)
    ) * tmpvar_42.xyz), tmpvar_31, unity_SpecCube0_BoxMin.www);
  } else {
    specular_19 = tmpvar_31;
  };
  tmpvar_13 = (specular_19 * tmpvar_10);
  vec3 viewDir_43;
  viewDir_43 = -(tmpvar_9);
  float surfaceReduction_44;
  float specularTerm_45;
  float tmpvar_46;
  tmpvar_46 = (1.0 - _Glossiness);
  vec3 tmpvar_47;
  vec3 inVec_48;
  inVec_48 = (_WorldSpaceLightPos0.xyz + viewDir_43);
  tmpvar_47 = (inVec_48 * inversesqrt(max (0.001, 
    dot (inVec_48, inVec_48)
  )));
  float tmpvar_49;
  tmpvar_49 = dot (tmpvar_8, viewDir_43);
  vec3 tmpvar_50;
  if ((tmpvar_49 < 0.0)) {
    tmpvar_50 = (tmpvar_8 + (viewDir_43 * (
      -(tmpvar_49)
     + 1e-05)));
  } else {
    tmpvar_50 = tmpvar_8;
  };
  float tmpvar_51;
  tmpvar_51 = max (0.0, dot (tmpvar_50, _WorldSpaceLightPos0.xyz));
  float tmpvar_52;
  tmpvar_52 = max (0.0, dot (tmpvar_50, tmpvar_47));
  float tmpvar_53;
  tmpvar_53 = max (0.0, dot (tmpvar_50, viewDir_43));
  float tmpvar_54;
  tmpvar_54 = max (0.0, dot (_WorldSpaceLightPos0.xyz, tmpvar_47));
  float tmpvar_55;
  tmpvar_55 = (tmpvar_46 * tmpvar_46);
  float tmpvar_56;
  tmpvar_56 = (tmpvar_46 * tmpvar_46);
  float tmpvar_57;
  tmpvar_57 = (tmpvar_56 * tmpvar_56);
  float tmpvar_58;
  tmpvar_58 = (((tmpvar_52 * tmpvar_52) * (tmpvar_57 - 1.0)) + 1.0);
  float x_59;
  x_59 = (1.0 - tmpvar_51);
  float x_60;
  x_60 = (1.0 - tmpvar_53);
  float tmpvar_61;
  tmpvar_61 = (0.5 + ((2.0 * tmpvar_54) * (tmpvar_54 * tmpvar_46)));
  float tmpvar_62;
  tmpvar_62 = ((1.0 + (
    (tmpvar_61 - 1.0)
   * 
    ((x_59 * x_59) * ((x_59 * x_59) * x_59))
  )) * (1.0 + (
    (tmpvar_61 - 1.0)
   * 
    ((x_60 * x_60) * ((x_60 * x_60) * x_60))
  )));
  float tmpvar_63;
  tmpvar_63 = (((2.0 / 
    (((tmpvar_51 * (
      (tmpvar_53 * (1.0 - tmpvar_55))
     + tmpvar_55)) + (tmpvar_53 * (
      (tmpvar_51 * (1.0 - tmpvar_55))
     + tmpvar_55))) + 1e-05)
  ) * (tmpvar_57 / 
    (((3.141593 * tmpvar_58) * tmpvar_58) + 1e-07)
  )) * 0.7853982);
  specularTerm_45 = tmpvar_63;
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    specularTerm_45 = sqrt(max (0.0001, tmpvar_63));
  };
  float tmpvar_64;
  tmpvar_64 = max (0.0, (specularTerm_45 * tmpvar_51));
  specularTerm_45 = tmpvar_64;
  float tmpvar_65;
  tmpvar_65 = (tmpvar_62 * tmpvar_51);
  float tmpvar_66;
  tmpvar_66 = (tmpvar_46 * tmpvar_46);
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    surfaceReduction_44 = (1.0 - ((0.28 * tmpvar_66) * tmpvar_46));
  } else {
    surfaceReduction_44 = (1.0/(((tmpvar_66 * tmpvar_66) + 1.0)));
  };
  float x_67;
  x_67 = (1.0 - tmpvar_54);
  float x_68;
  x_68 = (1.0 - tmpvar_53);
  vec3 tmpvar_69;
  tmpvar_69 = (((tmpvar_5 * 
    (tmpvar_14 + (_LightColor0.xyz * tmpvar_65))
  ) + (
    (tmpvar_64 * _LightColor0.xyz)
   * 
    (tmpvar_6 + ((1.0 - tmpvar_6) * ((x_67 * x_67) * (
      (x_67 * x_67)
     * x_67))))
  )) + ((surfaceReduction_44 * tmpvar_13) * mix (tmpvar_6, vec3(
    clamp ((_Glossiness + (1.0 - tmpvar_7)), 0.0, 1.0)
  ), vec3(
    ((x_68 * x_68) * ((x_68 * x_68) * x_68))
  ))));
  vec4 tmpvar_70;
  tmpvar_70.w = 1.0;
  tmpvar_70.xyz = tmpvar_69;
  c_1.w = tmpvar_70.w;
  c_1.xyz = (tmpvar_69 + (texture2D (_EmissionMap, xlv_TEXCOORD0.xy).xyz * _EmissionColor.xyz));
  vec4 xlat_varoutput_71;
  xlat_varoutput_71.xyz = c_1.xyz;
  xlat_varoutput_71.w = tmpvar_2;
  gl_FragData[0] = xlat_varoutput_71;
}


#endif
"
}
SubProgram "d3d9 " {
// Stats: 67 math
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "VERTEXLIGHT_ON" "_ALPHABLEND_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Matrix 8 [_Object2World] 3
Matrix 11 [_World2Object] 3
Matrix 4 [glstate_matrix_mvp]
Vector 25 [_DetailAlbedoMap_ST]
Vector 24 [_MainTex_ST]
Float 26 [_UVSec]
Vector 14 [_WorldSpaceCameraPos]
Vector 18 [unity_4LightAtten0]
Vector 15 [unity_4LightPosX0]
Vector 16 [unity_4LightPosY0]
Vector 17 [unity_4LightPosZ0]
Vector 23 [unity_ColorSpaceLuminance]
Vector 0 [unity_LightColor0]
Vector 1 [unity_LightColor1]
Vector 2 [unity_LightColor2]
Vector 3 [unity_LightColor3]
Vector 21 [unity_SHBb]
Vector 20 [unity_SHBg]
Vector 19 [unity_SHBr]
Vector 22 [unity_SHC]
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   row_major float4x4 _Object2World;
//   float _UVSec;
//   row_major float4x4 _World2Object;
//   float3 _WorldSpaceCameraPos;
//   row_major float4x4 glstate_matrix_mvp;
//   float4 unity_4LightAtten0;
//   float4 unity_4LightPosX0;
//   float4 unity_4LightPosY0;
//   float4 unity_4LightPosZ0;
//   float4 unity_ColorSpaceLuminance;
//   float4 unity_LightColor[8];
//   float4 unity_SHBb;
//   float4 unity_SHBg;
//   float4 unity_SHBr;
//   float4 unity_SHC;
//
//
// Registers:
//
//   Name                      Reg   Size
//   ------------------------- ----- ----
//   unity_LightColor          c0       4
//   glstate_matrix_mvp        c4       4
//   _Object2World             c8       3
//   _World2Object             c11      3
//   _WorldSpaceCameraPos      c14      1
//   unity_4LightPosX0         c15      1
//   unity_4LightPosY0         c16      1
//   unity_4LightPosZ0         c17      1
//   unity_4LightAtten0        c18      1
//   unity_SHBr                c19      1
//   unity_SHBg                c20      1
//   unity_SHBb                c21      1
//   unity_SHC                 c22      1
//   unity_ColorSpaceLuminance c23      1
//   _MainTex_ST               c24      1
//   _DetailAlbedoMap_ST       c25      1
//   _UVSec                    c26      1
//

    vs_3_0
    def c27, 0, 1, 0.305306017, 0.682171106
    def c28, 0.0125228781, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6
    dcl_texcoord8 o7.xyz
    dp4 o0.x, c4, v0
    dp4 o0.y, c5, v0
    dp4 o0.z, c6, v0
    dp4 o0.w, c7, v0
    mad o1.xy, v2, c24, c24.zwzw
    abs r0.x, c26.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c25.xyxy, c25
    dp4 r0.x, c8, v0
    dp4 r0.y, c9, v0
    dp4 r0.z, c10, v0
    add o2.xyz, r0, -c14
    add r1, -r0.z, c17
    mov o7.xyz, r0
    add r2, -r0.x, c15
    add r0, -r0.y, c16
    mul r3.xyz, c12, v1.y
    mad r3.xyz, c11, v1.x, r3
    mad r3.xyz, c13, v1.z, r3
    nrm r4.xyz, r3
    mul r3, r0, r4.y
    mul r0, r0, r0
    mad r0, r2, r2, r0
    mad r2, r2, r4.x, r3
    mad r2, r1, r4.z, r2
    mad r0, r1, r1, r0
    rsq r1.x, r0.x
    rsq r1.y, r0.y
    rsq r1.z, r0.z
    rsq r1.w, r0.w
    mov r3.y, c27.y
    mad r0, r0, c18, r3.y
    mul r1, r1, r2
    max r1, r1, c27.x
    rcp r2.x, r0.x
    rcp r2.y, r0.y
    rcp r2.z, r0.z
    rcp r2.w, r0.w
    mul r0, r1, r2
    mul r1.xyz, r0.y, c1
    mad r1.xyz, c0, r0.x, r1
    mad r0.xyz, c2, r0.z, r1
    mad r0.xyz, c3, r0.w, r0
    mad r1.xyz, r0, c27.z, c27.w
    mad r1.xyz, r0, r1, c28.x
    mad r1.xyz, r0, r1, -r0
    abs r0.w, c23.w
    sge r0.w, -r0.w, r0.w
    mad r0.xyz, r0.w, r1, r0
    mul r0.w, r4.y, r4.y
    mad r0.w, r4.x, r4.x, -r0.w
    mul r1, r4.yzzx, r4.xyzz
    mov o5.xyz, r4
    dp4 r2.x, c19, r1
    dp4 r2.y, c20, r1
    dp4 r2.z, c21, r1
    mad r1.xyz, c22, r0.w, r2
    add o6.xyz, r0, r1
    mov o3, c27.x
    mov o4, c27.x
    mov o5.w, c27.x
    mov o6.w, c27.x

// approximately 66 instruction slots used
"
}
SubProgram "d3d11 " {
// Stats: 57 math
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "VERTEXLIGHT_ON" "_ALPHABLEND_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
ConstBuffer "$Globals" 240
Vector 48 [unity_ColorSpaceLuminance]
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 32 [unity_4LightPosX0]
Vector 48 [unity_4LightPosY0]
Vector 64 [unity_4LightPosZ0]
Vector 80 [unity_4LightAtten0]
Vector 96 [unity_LightColor0]
Vector 112 [unity_LightColor1]
Vector 128 [unity_LightColor2]
Vector 144 [unity_LightColor3]
Vector 160 [unity_LightColor4]
Vector 176 [unity_LightColor5]
Vector 192 [unity_LightColor6]
Vector 208 [unity_LightColor7]
Vector 656 [unity_SHBr]
Vector 672 [unity_SHBg]
Vector 688 [unity_SHBb]
Vector 704 [unity_SHC]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 8   xyz         7     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer cb0[14], immediateIndexed
      dcl_constantbuffer cb1[5], immediateIndexed
      dcl_constantbuffer cb2[45], immediateIndexed
      dcl_constantbuffer cb3[19], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyz
      dcl_temps 5
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: mad o0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   4: eq r0.x, cb0[13].z, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[11].xxxy, cb0[11].zzzw
   7: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  13: mov o3.xyzw, l(0,0,0,0)
  14: mov o4.xyzw, l(0,0,0,0)
  15: mul r1.x, v1.x, cb3[16].x
  16: mul r1.y, v1.x, cb3[17].x
  17: mul r1.z, v1.x, cb3[18].x
  18: mul r2.x, v1.y, cb3[16].y
  19: mul r2.y, v1.y, cb3[17].y
  20: mul r2.z, v1.y, cb3[18].y
  21: add r1.xyz, r1.xyzx, r2.xyzx
  22: mul r2.x, v1.z, cb3[16].z
  23: mul r2.y, v1.z, cb3[17].z
  24: mul r2.z, v1.z, cb3[18].z
  25: add r1.xyz, r1.xyzx, r2.xyzx
  26: dp3 r0.w, r1.xyzx, r1.xyzx
  27: rsq r0.w, r0.w
  28: mul r1.xyz, r0.wwww, r1.xyzx
  29: mov o5.xyz, r1.xyzx
  30: mov o5.w, l(0)
  31: add r2.xyzw, -r0.yyyy, cb2[3].xyzw
  32: mul r3.xyzw, r1.yyyy, r2.xyzw
  33: mul r2.xyzw, r2.xyzw, r2.xyzw
  34: add r4.xyzw, -r0.xxxx, cb2[2].xyzw
  35: mad r3.xyzw, r4.xyzw, r1.xxxx, r3.xyzw
  36: mad r2.xyzw, r4.xyzw, r4.xyzw, r2.xyzw
  37: add r4.xyzw, -r0.zzzz, cb2[4].xyzw
  38: mov o7.xyz, r0.xyzx
  39: mad r0.xyzw, r4.xyzw, r1.zzzz, r3.xyzw
  40: mad r2.xyzw, r4.xyzw, r4.xyzw, r2.xyzw
  41: rsq r3.xyzw, r2.xyzw
  42: mad r2.xyzw, r2.xyzw, cb2[5].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  43: div r2.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r2.xyzw
  44: mul r0.xyzw, r0.xyzw, r3.xyzw
  45: max r0.xyzw, r0.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  46: mul r0.xyzw, r2.xyzw, r0.xyzw
  47: mul r2.xyz, r0.yyyy, cb2[7].xyzx
  48: mad r2.xyz, cb2[6].xyzx, r0.xxxx, r2.xyzx
  49: mad r0.xyz, cb2[8].xyzx, r0.zzzz, r2.xyzx
  50: mad r0.xyz, cb2[9].xyzx, r0.wwww, r0.xyzx
  51: mad r2.xyz, r0.xyzx, l(0.305306, 0.305306, 0.305306, 0.000000), l(0.682171, 0.682171, 0.682171, 0.000000)
  52: mad r2.xyz, r0.xyzx, r2.xyzx, l(0.012523, 0.012523, 0.012523, 0.000000)
  53: mul r2.xyz, r0.xyzx, r2.xyzx
  54: eq r0.w, cb0[3].w, l(0.000000)
  55: movc r0.xyz, r0.wwww, r2.xyzx, r0.xyzx
  56: mul r0.w, r1.y, r1.y
  57: mad r0.w, r1.x, r1.x, -r0.w
  58: mul r1.xyzw, r1.yzzx, r1.xyzz
  59: dp4 r2.x, cb2[41].xyzw, r1.xyzw
  60: dp4 r2.y, cb2[42].xyzw, r1.xyzw
  61: dp4 r2.z, cb2[43].xyzw, r1.xyzw
  62: mad r1.xyz, cb2[44].xyzx, r0.wwww, r2.xyzx
  63: add o6.xyz, r0.xyzx, r1.xyzx
  64: mov o6.w, l(0)
  65: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
// Stats: 182 math, 6 textures, 13 branches
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "VERTEXLIGHT_ON" "_ALPHABLEND_ON" }
"#version 120

#ifdef VERTEX
uniform vec3 _WorldSpaceCameraPos;
uniform vec4 _ProjectionParams;
uniform vec4 unity_4LightPosX0;
uniform vec4 unity_4LightPosY0;
uniform vec4 unity_4LightPosZ0;
uniform vec4 unity_4LightAtten0;
uniform vec4 unity_LightColor[8];
uniform vec4 unity_SHBr;
uniform vec4 unity_SHBg;
uniform vec4 unity_SHBb;
uniform vec4 unity_SHC;

uniform mat4 _Object2World;
uniform mat4 _World2Object;
uniform vec4 unity_ColorSpaceLuminance;
uniform vec4 _MainTex_ST;
uniform vec4 _DetailAlbedoMap_ST;
uniform float _UVSec;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
varying vec4 xlv_TEXCOORD6;
varying vec3 xlv_TEXCOORD8;
void main ()
{
  vec2 tmpvar_1;
  tmpvar_1 = gl_MultiTexCoord0.xy;
  vec2 tmpvar_2;
  tmpvar_2 = gl_MultiTexCoord1.xy;
  vec4 tmpvar_3;
  vec4 tmpvar_4;
  vec4 tmpvar_5;
  vec4 tmpvar_6;
  vec3 tmpvar_7;
  vec4 tmpvar_8;
  tmpvar_8 = (_Object2World * gl_Vertex);
  tmpvar_7 = tmpvar_8.xyz;
  tmpvar_3 = (gl_ModelViewProjectionMatrix * gl_Vertex);
  vec4 texcoord_9;
  texcoord_9.xy = ((gl_MultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  vec2 tmpvar_10;
  if ((_UVSec == 0.0)) {
    tmpvar_10 = tmpvar_1;
  } else {
    tmpvar_10 = tmpvar_2;
  };
  texcoord_9.zw = ((tmpvar_10 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  vec3 n_11;
  n_11 = (tmpvar_8.xyz - _WorldSpaceCameraPos);
  vec4 v_12;
  v_12.x = _World2Object[0].x;
  v_12.y = _World2Object[1].x;
  v_12.z = _World2Object[2].x;
  v_12.w = _World2Object[3].x;
  vec4 v_13;
  v_13.x = _World2Object[0].y;
  v_13.y = _World2Object[1].y;
  v_13.z = _World2Object[2].y;
  v_13.w = _World2Object[3].y;
  vec4 v_14;
  v_14.x = _World2Object[0].z;
  v_14.y = _World2Object[1].z;
  v_14.z = _World2Object[2].z;
  v_14.w = _World2Object[3].z;
  vec3 tmpvar_15;
  tmpvar_15 = normalize(((
    (v_12.xyz * gl_Normal.x)
   + 
    (v_13.xyz * gl_Normal.y)
  ) + (v_14.xyz * gl_Normal.z)));
  tmpvar_4.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_5.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_6.xyz = tmpvar_15;
  vec4 o_16;
  vec4 tmpvar_17;
  tmpvar_17 = (tmpvar_3 * 0.5);
  vec2 tmpvar_18;
  tmpvar_18.x = tmpvar_17.x;
  tmpvar_18.y = (tmpvar_17.y * _ProjectionParams.x);
  o_16.xy = (tmpvar_18 + tmpvar_17.w);
  o_16.zw = tmpvar_3.zw;
  vec4 ambientOrLightmapUV_19;
  ambientOrLightmapUV_19.w = 0.0;
  vec3 col_20;
  vec4 ndotl_21;
  vec4 lengthSq_22;
  vec4 tmpvar_23;
  tmpvar_23 = (unity_4LightPosX0 - tmpvar_8.x);
  vec4 tmpvar_24;
  tmpvar_24 = (unity_4LightPosY0 - tmpvar_8.y);
  vec4 tmpvar_25;
  tmpvar_25 = (unity_4LightPosZ0 - tmpvar_8.z);
  lengthSq_22 = (tmpvar_23 * tmpvar_23);
  lengthSq_22 = (lengthSq_22 + (tmpvar_24 * tmpvar_24));
  lengthSq_22 = (lengthSq_22 + (tmpvar_25 * tmpvar_25));
  ndotl_21 = (tmpvar_23 * tmpvar_15.x);
  ndotl_21 = (ndotl_21 + (tmpvar_24 * tmpvar_15.y));
  ndotl_21 = (ndotl_21 + (tmpvar_25 * tmpvar_15.z));
  vec4 tmpvar_26;
  tmpvar_26 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_21 * inversesqrt(lengthSq_22)));
  ndotl_21 = tmpvar_26;
  vec4 tmpvar_27;
  tmpvar_27 = (tmpvar_26 * (1.0/((1.0 + 
    (lengthSq_22 * unity_4LightAtten0)
  ))));
  col_20 = (unity_LightColor[0].xyz * tmpvar_27.x);
  col_20 = (col_20 + (unity_LightColor[1].xyz * tmpvar_27.y));
  col_20 = (col_20 + (unity_LightColor[2].xyz * tmpvar_27.z));
  col_20 = (col_20 + (unity_LightColor[3].xyz * tmpvar_27.w));
  ambientOrLightmapUV_19.xyz = col_20;
  vec3 ambient_28;
  ambient_28 = ambientOrLightmapUV_19.xyz;
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    ambient_28 = (col_20 * ((col_20 * 
      ((col_20 * 0.305306) + 0.6821711)
    ) + 0.01252288));
  };
  vec3 x1_29;
  vec4 tmpvar_30;
  tmpvar_30 = (tmpvar_15.xyzz * tmpvar_15.yzzx);
  x1_29.x = dot (unity_SHBr, tmpvar_30);
  x1_29.y = dot (unity_SHBg, tmpvar_30);
  x1_29.z = dot (unity_SHBb, tmpvar_30);
  ambient_28 = (ambient_28 + (x1_29 + (unity_SHC.xyz * 
    ((tmpvar_15.x * tmpvar_15.x) - (tmpvar_15.y * tmpvar_15.y))
  )));
  ambientOrLightmapUV_19.xyz = ambient_28;
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = texcoord_9;
  xlv_TEXCOORD1 = n_11;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  xlv_TEXCOORD5 = ambientOrLightmapUV_19;
  xlv_TEXCOORD6 = o_16;
  xlv_TEXCOORD8 = tmpvar_7;
}


#endif
#ifdef FRAGMENT
#extension GL_ARB_shader_texture_lod : enable
uniform vec4 _WorldSpaceLightPos0;
uniform vec4 unity_SHAr;
uniform vec4 unity_SHAg;
uniform vec4 unity_SHAb;
uniform samplerCube unity_SpecCube0;
uniform samplerCube unity_SpecCube1;
uniform vec4 unity_SpecCube0_BoxMax;
uniform vec4 unity_SpecCube0_BoxMin;
uniform vec4 unity_SpecCube0_ProbePosition;
uniform vec4 unity_SpecCube0_HDR;
uniform vec4 unity_SpecCube1_BoxMax;
uniform vec4 unity_SpecCube1_BoxMin;
uniform vec4 unity_SpecCube1_ProbePosition;
uniform vec4 unity_SpecCube1_HDR;
uniform vec4 unity_ColorSpaceDielectricSpec;
uniform vec4 unity_ColorSpaceLuminance;
uniform vec4 _LightColor0;
uniform vec4 _Color;
uniform sampler2D _MainTex;
uniform float _Metallic;
uniform float _Glossiness;
uniform sampler2D _OcclusionMap;
uniform float _OcclusionStrength;
uniform vec4 _EmissionColor;
uniform sampler2D _EmissionMap;
uniform sampler2D _ShadowMapTexture;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
varying vec4 xlv_TEXCOORD6;
varying vec3 xlv_TEXCOORD8;
void main ()
{
  vec4 c_1;
  float tmpvar_2;
  vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  tmpvar_2 = (tmpvar_3.w * _Color.w);
  vec3 tmpvar_4;
  tmpvar_4 = (_Color.xyz * tmpvar_3.xyz);
  vec3 tmpvar_5;
  vec3 tmpvar_6;
  tmpvar_6 = mix (unity_ColorSpaceDielectricSpec.xyz, tmpvar_4, vec3(_Metallic));
  float tmpvar_7;
  tmpvar_7 = (unity_ColorSpaceDielectricSpec.w - (_Metallic * unity_ColorSpaceDielectricSpec.w));
  tmpvar_5 = (tmpvar_4 * tmpvar_7);
  vec3 tmpvar_8;
  tmpvar_8 = normalize(xlv_TEXCOORD2_2.xyz);
  vec3 tmpvar_9;
  tmpvar_9 = normalize(xlv_TEXCOORD1);
  float tmpvar_10;
  tmpvar_10 = ((1.0 - _OcclusionStrength) + (texture2D (_OcclusionMap, xlv_TEXCOORD0.xy).y * _OcclusionStrength));
  float tmpvar_11;
  tmpvar_11 = (1.0 - _Glossiness);
  vec3 tmpvar_12;
  tmpvar_12 = (tmpvar_9 - (2.0 * (
    dot (tmpvar_8, tmpvar_9)
   * tmpvar_8)));
  vec3 tmpvar_13;
  vec3 tmpvar_14;
  vec3 tmpvar_15;
  tmpvar_15 = vec3(0.0, 0.0, 0.0);
  tmpvar_14 = (_LightColor0.xyz * texture2DProj (_ShadowMapTexture, xlv_TEXCOORD6).x);
  vec3 ambient_16;
  vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = tmpvar_8;
  vec3 x_18;
  x_18.x = dot (unity_SHAr, tmpvar_17);
  x_18.y = dot (unity_SHAg, tmpvar_17);
  x_18.z = dot (unity_SHAb, tmpvar_17);
  vec3 tmpvar_19;
  tmpvar_19 = max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD5.xyz + x_18));
  ambient_16 = tmpvar_19;
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    ambient_16 = max (((1.055 * 
      pow (max (tmpvar_19, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
    ) - 0.055), vec3(0.0, 0.0, 0.0));
  };
  tmpvar_15 = (ambient_16 * tmpvar_10);
  tmpvar_13 = vec3(0.0, 0.0, 0.0);
  vec3 specular_20;
  vec3 worldRefl_21;
  worldRefl_21 = tmpvar_12;
  vec3 worldPos_22;
  worldPos_22 = xlv_TEXCOORD8;
  if ((unity_SpecCube0_ProbePosition.w > 0.0)) {
    vec3 tmpvar_23;
    tmpvar_23 = normalize(tmpvar_12);
    vec3 tmpvar_24;
    tmpvar_24 = ((unity_SpecCube0_BoxMax.xyz - xlv_TEXCOORD8) / tmpvar_23);
    vec3 tmpvar_25;
    tmpvar_25 = ((unity_SpecCube0_BoxMin.xyz - xlv_TEXCOORD8) / tmpvar_23);
    bvec3 tmpvar_26;
    tmpvar_26 = greaterThan (tmpvar_23, vec3(0.0, 0.0, 0.0));
    float tmpvar_27;
    if (tmpvar_26.x) {
      tmpvar_27 = tmpvar_24.x;
    } else {
      tmpvar_27 = tmpvar_25.x;
    };
    float tmpvar_28;
    if (tmpvar_26.y) {
      tmpvar_28 = tmpvar_24.y;
    } else {
      tmpvar_28 = tmpvar_25.y;
    };
    float tmpvar_29;
    if (tmpvar_26.z) {
      tmpvar_29 = tmpvar_24.z;
    } else {
      tmpvar_29 = tmpvar_25.z;
    };
    worldPos_22 = (xlv_TEXCOORD8 - unity_SpecCube0_ProbePosition.xyz);
    worldRefl_21 = (worldPos_22 + (tmpvar_23 * min (
      min (tmpvar_27, tmpvar_28)
    , tmpvar_29)));
  };
  vec4 tmpvar_30;
  tmpvar_30.xyz = worldRefl_21;
  tmpvar_30.w = ((tmpvar_11 * (1.7 - 
    (0.7 * tmpvar_11)
  )) * 6.0);
  vec4 tmpvar_31;
  tmpvar_31 = textureCubeLod (unity_SpecCube0, worldRefl_21, tmpvar_30.w);
  vec3 tmpvar_32;
  tmpvar_32 = ((unity_SpecCube0_HDR.x * pow (tmpvar_31.w, unity_SpecCube0_HDR.y)) * tmpvar_31.xyz);
  if ((unity_SpecCube0_BoxMin.w < 0.99999)) {
    vec3 worldRefl_33;
    worldRefl_33 = tmpvar_12;
    vec3 worldPos_34;
    worldPos_34 = xlv_TEXCOORD8;
    if ((unity_SpecCube1_ProbePosition.w > 0.0)) {
      vec3 tmpvar_35;
      tmpvar_35 = normalize(tmpvar_12);
      vec3 tmpvar_36;
      tmpvar_36 = ((unity_SpecCube1_BoxMax.xyz - xlv_TEXCOORD8) / tmpvar_35);
      vec3 tmpvar_37;
      tmpvar_37 = ((unity_SpecCube1_BoxMin.xyz - xlv_TEXCOORD8) / tmpvar_35);
      bvec3 tmpvar_38;
      tmpvar_38 = greaterThan (tmpvar_35, vec3(0.0, 0.0, 0.0));
      float tmpvar_39;
      if (tmpvar_38.x) {
        tmpvar_39 = tmpvar_36.x;
      } else {
        tmpvar_39 = tmpvar_37.x;
      };
      float tmpvar_40;
      if (tmpvar_38.y) {
        tmpvar_40 = tmpvar_36.y;
      } else {
        tmpvar_40 = tmpvar_37.y;
      };
      float tmpvar_41;
      if (tmpvar_38.z) {
        tmpvar_41 = tmpvar_36.z;
      } else {
        tmpvar_41 = tmpvar_37.z;
      };
      worldPos_34 = (xlv_TEXCOORD8 - unity_SpecCube1_ProbePosition.xyz);
      worldRefl_33 = (worldPos_34 + (tmpvar_35 * min (
        min (tmpvar_39, tmpvar_40)
      , tmpvar_41)));
    };
    vec4 tmpvar_42;
    tmpvar_42.xyz = worldRefl_33;
    tmpvar_42.w = ((tmpvar_11 * (1.7 - 
      (0.7 * tmpvar_11)
    )) * 6.0);
    vec4 tmpvar_43;
    tmpvar_43 = textureCubeLod (unity_SpecCube1, worldRefl_33, tmpvar_42.w);
    specular_20 = mix (((unity_SpecCube1_HDR.x * 
      pow (tmpvar_43.w, unity_SpecCube1_HDR.y)
    ) * tmpvar_43.xyz), tmpvar_32, unity_SpecCube0_BoxMin.www);
  } else {
    specular_20 = tmpvar_32;
  };
  tmpvar_13 = (specular_20 * tmpvar_10);
  vec3 viewDir_44;
  viewDir_44 = -(tmpvar_9);
  float surfaceReduction_45;
  float specularTerm_46;
  float tmpvar_47;
  tmpvar_47 = (1.0 - _Glossiness);
  vec3 tmpvar_48;
  vec3 inVec_49;
  inVec_49 = (_WorldSpaceLightPos0.xyz + viewDir_44);
  tmpvar_48 = (inVec_49 * inversesqrt(max (0.001, 
    dot (inVec_49, inVec_49)
  )));
  float tmpvar_50;
  tmpvar_50 = dot (tmpvar_8, viewDir_44);
  vec3 tmpvar_51;
  if ((tmpvar_50 < 0.0)) {
    tmpvar_51 = (tmpvar_8 + (viewDir_44 * (
      -(tmpvar_50)
     + 1e-05)));
  } else {
    tmpvar_51 = tmpvar_8;
  };
  float tmpvar_52;
  tmpvar_52 = max (0.0, dot (tmpvar_51, _WorldSpaceLightPos0.xyz));
  float tmpvar_53;
  tmpvar_53 = max (0.0, dot (tmpvar_51, tmpvar_48));
  float tmpvar_54;
  tmpvar_54 = max (0.0, dot (tmpvar_51, viewDir_44));
  float tmpvar_55;
  tmpvar_55 = max (0.0, dot (_WorldSpaceLightPos0.xyz, tmpvar_48));
  float tmpvar_56;
  tmpvar_56 = (tmpvar_47 * tmpvar_47);
  float tmpvar_57;
  tmpvar_57 = (tmpvar_47 * tmpvar_47);
  float tmpvar_58;
  tmpvar_58 = (tmpvar_57 * tmpvar_57);
  float tmpvar_59;
  tmpvar_59 = (((tmpvar_53 * tmpvar_53) * (tmpvar_58 - 1.0)) + 1.0);
  float x_60;
  x_60 = (1.0 - tmpvar_52);
  float x_61;
  x_61 = (1.0 - tmpvar_54);
  float tmpvar_62;
  tmpvar_62 = (0.5 + ((2.0 * tmpvar_55) * (tmpvar_55 * tmpvar_47)));
  float tmpvar_63;
  tmpvar_63 = ((1.0 + (
    (tmpvar_62 - 1.0)
   * 
    ((x_60 * x_60) * ((x_60 * x_60) * x_60))
  )) * (1.0 + (
    (tmpvar_62 - 1.0)
   * 
    ((x_61 * x_61) * ((x_61 * x_61) * x_61))
  )));
  float tmpvar_64;
  tmpvar_64 = (((2.0 / 
    (((tmpvar_52 * (
      (tmpvar_54 * (1.0 - tmpvar_56))
     + tmpvar_56)) + (tmpvar_54 * (
      (tmpvar_52 * (1.0 - tmpvar_56))
     + tmpvar_56))) + 1e-05)
  ) * (tmpvar_58 / 
    (((3.141593 * tmpvar_59) * tmpvar_59) + 1e-07)
  )) * 0.7853982);
  specularTerm_46 = tmpvar_64;
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    specularTerm_46 = sqrt(max (0.0001, tmpvar_64));
  };
  float tmpvar_65;
  tmpvar_65 = max (0.0, (specularTerm_46 * tmpvar_52));
  specularTerm_46 = tmpvar_65;
  float tmpvar_66;
  tmpvar_66 = (tmpvar_63 * tmpvar_52);
  float tmpvar_67;
  tmpvar_67 = (tmpvar_47 * tmpvar_47);
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    surfaceReduction_45 = (1.0 - ((0.28 * tmpvar_67) * tmpvar_47));
  } else {
    surfaceReduction_45 = (1.0/(((tmpvar_67 * tmpvar_67) + 1.0)));
  };
  float x_68;
  x_68 = (1.0 - tmpvar_55);
  float x_69;
  x_69 = (1.0 - tmpvar_54);
  vec3 tmpvar_70;
  tmpvar_70 = (((tmpvar_5 * 
    (tmpvar_15 + (tmpvar_14 * tmpvar_66))
  ) + (
    (tmpvar_65 * tmpvar_14)
   * 
    (tmpvar_6 + ((1.0 - tmpvar_6) * ((x_68 * x_68) * (
      (x_68 * x_68)
     * x_68))))
  )) + ((surfaceReduction_45 * tmpvar_13) * mix (tmpvar_6, vec3(
    clamp ((_Glossiness + (1.0 - tmpvar_7)), 0.0, 1.0)
  ), vec3(
    ((x_69 * x_69) * ((x_69 * x_69) * x_69))
  ))));
  vec4 tmpvar_71;
  tmpvar_71.w = 1.0;
  tmpvar_71.xyz = tmpvar_70;
  c_1.w = tmpvar_71.w;
  c_1.xyz = (tmpvar_70 + (texture2D (_EmissionMap, xlv_TEXCOORD0.xy).xyz * _EmissionColor.xyz));
  vec4 xlat_varoutput_72;
  xlat_varoutput_72.xyz = c_1.xyz;
  xlat_varoutput_72.w = tmpvar_2;
  gl_FragData[0] = xlat_varoutput_72;
}


#endif
"
}
SubProgram "d3d9 " {
// Stats: 73 math
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "VERTEXLIGHT_ON" "_ALPHABLEND_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Matrix 8 [_Object2World] 3
Matrix 11 [_World2Object] 3
Matrix 4 [glstate_matrix_mvp]
Vector 27 [_DetailAlbedoMap_ST]
Vector 26 [_MainTex_ST]
Vector 15 [_ProjectionParams]
Vector 16 [_ScreenParams]
Float 28 [_UVSec]
Vector 14 [_WorldSpaceCameraPos]
Vector 20 [unity_4LightAtten0]
Vector 17 [unity_4LightPosX0]
Vector 18 [unity_4LightPosY0]
Vector 19 [unity_4LightPosZ0]
Vector 25 [unity_ColorSpaceLuminance]
Vector 0 [unity_LightColor0]
Vector 1 [unity_LightColor1]
Vector 2 [unity_LightColor2]
Vector 3 [unity_LightColor3]
Vector 23 [unity_SHBb]
Vector 22 [unity_SHBg]
Vector 21 [unity_SHBr]
Vector 24 [unity_SHC]
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   row_major float4x4 _Object2World;
//   float4 _ProjectionParams;
//   float4 _ScreenParams;
//   float _UVSec;
//   row_major float4x4 _World2Object;
//   float3 _WorldSpaceCameraPos;
//   row_major float4x4 glstate_matrix_mvp;
//   float4 unity_4LightAtten0;
//   float4 unity_4LightPosX0;
//   float4 unity_4LightPosY0;
//   float4 unity_4LightPosZ0;
//   float4 unity_ColorSpaceLuminance;
//   float4 unity_LightColor[8];
//   float4 unity_SHBb;
//   float4 unity_SHBg;
//   float4 unity_SHBr;
//   float4 unity_SHC;
//
//
// Registers:
//
//   Name                      Reg   Size
//   ------------------------- ----- ----
//   unity_LightColor          c0       4
//   glstate_matrix_mvp        c4       4
//   _Object2World             c8       3
//   _World2Object             c11      3
//   _WorldSpaceCameraPos      c14      1
//   _ProjectionParams         c15      1
//   _ScreenParams             c16      1
//   unity_4LightPosX0         c17      1
//   unity_4LightPosY0         c18      1
//   unity_4LightPosZ0         c19      1
//   unity_4LightAtten0        c20      1
//   unity_SHBr                c21      1
//   unity_SHBg                c22      1
//   unity_SHBb                c23      1
//   unity_SHC                 c24      1
//   unity_ColorSpaceLuminance c25      1
//   _MainTex_ST               c26      1
//   _DetailAlbedoMap_ST       c27      1
//   _UVSec                    c28      1
//

    vs_3_0
    def c29, 0.5, 0, 1, 0.0125228781
    def c30, 0.305306017, 0.682171106, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6
    dcl_texcoord6 o7
    dcl_texcoord8 o8.xyz
    mad o1.xy, v2, c26, c26.zwzw
    abs r0.x, c28.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c27.xyxy, c27
    dp4 r0.x, c8, v0
    dp4 r0.y, c9, v0
    dp4 r0.z, c10, v0
    add o2.xyz, r0, -c14
    dp4 r1.y, c5, v0
    mul r0.w, r1.y, c15.x
    mul r2.w, r0.w, c29.x
    dp4 r1.x, c4, v0
    dp4 r1.w, c7, v0
    mul r2.xz, r1.xyww, c29.x
    mad o7.xy, r2.z, c16.zwzw, r2.xwzw
    add r2, -r0.z, c19
    mov o8.xyz, r0
    add r3, -r0.x, c17
    add r0, -r0.y, c18
    mul r4.xyz, c12, v1.y
    mad r4.xyz, c11, v1.x, r4
    mad r4.xyz, c13, v1.z, r4
    nrm r5.xyz, r4
    mul r4, r0, r5.y
    mul r0, r0, r0
    mad r0, r3, r3, r0
    mad r3, r3, r5.x, r4
    mad r3, r2, r5.z, r3
    mad r0, r2, r2, r0
    rsq r2.x, r0.x
    rsq r2.y, r0.y
    rsq r2.z, r0.z
    rsq r2.w, r0.w
    mov r4.z, c29.z
    mad r0, r0, c20, r4.z
    mul r2, r2, r3
    max r2, r2, c29.y
    rcp r3.x, r0.x
    rcp r3.y, r0.y
    rcp r3.z, r0.z
    rcp r3.w, r0.w
    mul r0, r2, r3
    mul r2.xyz, r0.y, c1
    mad r2.xyz, c0, r0.x, r2
    mad r0.xyz, c2, r0.z, r2
    mad r0.xyz, c3, r0.w, r0
    mad r2.xyz, r0, c30.x, c30.y
    mad r2.xyz, r0, r2, c29.w
    mad r2.xyz, r0, r2, -r0
    abs r0.w, c25.w
    sge r0.w, -r0.w, r0.w
    mad r0.xyz, r0.w, r2, r0
    mul r0.w, r5.y, r5.y
    mad r0.w, r5.x, r5.x, -r0.w
    mul r2, r5.yzzx, r5.xyzz
    mov o5.xyz, r5
    dp4 r3.x, c21, r2
    dp4 r3.y, c22, r2
    dp4 r3.z, c23, r2
    mad r2.xyz, c24, r0.w, r3
    add o6.xyz, r0, r2
    dp4 r1.z, c6, v0
    mov o0, r1
    mov o7.zw, r1
    mov o3, c29.y
    mov o4, c29.y
    mov o5.w, c29.y
    mov o6.w, c29.y

// approximately 72 instruction slots used
"
}
SubProgram "d3d11 " {
// Stats: 60 math
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "VERTEXLIGHT_ON" "_ALPHABLEND_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
ConstBuffer "$Globals" 240
Vector 48 [unity_ColorSpaceLuminance]
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
Vector 80 [_ProjectionParams]
ConstBuffer "UnityLighting" 720
Vector 32 [unity_4LightPosX0]
Vector 48 [unity_4LightPosY0]
Vector 64 [unity_4LightPosZ0]
Vector 80 [unity_4LightAtten0]
Vector 96 [unity_LightColor0]
Vector 112 [unity_LightColor1]
Vector 128 [unity_LightColor2]
Vector 144 [unity_LightColor3]
Vector 160 [unity_LightColor4]
Vector 176 [unity_LightColor5]
Vector 192 [unity_LightColor6]
Vector 208 [unity_LightColor7]
Vector 656 [unity_SHBr]
Vector 672 [unity_SHBg]
Vector 688 [unity_SHBb]
Vector 704 [unity_SHC]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
// TEXCOORD                 8   xyz         8     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer cb0[14], immediateIndexed
      dcl_constantbuffer cb1[6], immediateIndexed
      dcl_constantbuffer cb2[45], immediateIndexed
      dcl_constantbuffer cb3[19], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_output o8.xyz
      dcl_temps 6
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   4: mov o0.xyzw, r0.xyzw
   5: eq r1.x, cb0[13].z, l(0.000000)
   6: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
   7: mad o1.zw, r1.xxxy, cb0[11].xxxy, cb0[11].zzzw
   8: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   9: mul r1.xyz, v0.yyyy, cb3[13].xyzx
  10: mad r1.xyz, cb3[12].xyzx, v0.xxxx, r1.xyzx
  11: mad r1.xyz, cb3[14].xyzx, v0.zzzz, r1.xyzx
  12: mad r1.xyz, cb3[15].xyzx, v0.wwww, r1.xyzx
  13: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  14: mov o3.xyzw, l(0,0,0,0)
  15: mov o4.xyzw, l(0,0,0,0)
  16: mul r2.x, v1.x, cb3[16].x
  17: mul r2.y, v1.x, cb3[17].x
  18: mul r2.z, v1.x, cb3[18].x
  19: mul r3.x, v1.y, cb3[16].y
  20: mul r3.y, v1.y, cb3[17].y
  21: mul r3.z, v1.y, cb3[18].y
  22: add r2.xyz, r2.xyzx, r3.xyzx
  23: mul r3.x, v1.z, cb3[16].z
  24: mul r3.y, v1.z, cb3[17].z
  25: mul r3.z, v1.z, cb3[18].z
  26: add r2.xyz, r2.xyzx, r3.xyzx
  27: dp3 r1.w, r2.xyzx, r2.xyzx
  28: rsq r1.w, r1.w
  29: mul r2.xyz, r1.wwww, r2.xyzx
  30: mov o5.xyz, r2.xyzx
  31: mov o5.w, l(0)
  32: add r3.xyzw, -r1.yyyy, cb2[3].xyzw
  33: mul r4.xyzw, r2.yyyy, r3.xyzw
  34: mul r3.xyzw, r3.xyzw, r3.xyzw
  35: add r5.xyzw, -r1.xxxx, cb2[2].xyzw
  36: mad r4.xyzw, r5.xyzw, r2.xxxx, r4.xyzw
  37: mad r3.xyzw, r5.xyzw, r5.xyzw, r3.xyzw
  38: add r5.xyzw, -r1.zzzz, cb2[4].xyzw
  39: mov o8.xyz, r1.xyzx
  40: mad r1.xyzw, r5.xyzw, r2.zzzz, r4.xyzw
  41: mad r3.xyzw, r5.xyzw, r5.xyzw, r3.xyzw
  42: rsq r4.xyzw, r3.xyzw
  43: mad r3.xyzw, r3.xyzw, cb2[5].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  44: div r3.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r3.xyzw
  45: mul r1.xyzw, r1.xyzw, r4.xyzw
  46: max r1.xyzw, r1.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  47: mul r1.xyzw, r3.xyzw, r1.xyzw
  48: mul r3.xyz, r1.yyyy, cb2[7].xyzx
  49: mad r3.xyz, cb2[6].xyzx, r1.xxxx, r3.xyzx
  50: mad r1.xyz, cb2[8].xyzx, r1.zzzz, r3.xyzx
  51: mad r1.xyz, cb2[9].xyzx, r1.wwww, r1.xyzx
  52: mad r3.xyz, r1.xyzx, l(0.305306, 0.305306, 0.305306, 0.000000), l(0.682171, 0.682171, 0.682171, 0.000000)
  53: mad r3.xyz, r1.xyzx, r3.xyzx, l(0.012523, 0.012523, 0.012523, 0.000000)
  54: mul r3.xyz, r1.xyzx, r3.xyzx
  55: eq r1.w, cb0[3].w, l(0.000000)
  56: movc r1.xyz, r1.wwww, r3.xyzx, r1.xyzx
  57: mul r1.w, r2.y, r2.y
  58: mad r1.w, r2.x, r2.x, -r1.w
  59: mul r2.xyzw, r2.yzzx, r2.xyzz
  60: dp4 r3.x, cb2[41].xyzw, r2.xyzw
  61: dp4 r3.y, cb2[42].xyzw, r2.xyzw
  62: dp4 r3.z, cb2[43].xyzw, r2.xyzw
  63: mad r2.xyz, cb2[44].xyzx, r1.wwww, r3.xyzx
  64: add o6.xyz, r1.xyzx, r2.xyzx
  65: mov o6.w, l(0)
  66: mul r0.y, r0.y, cb1[5].x
  67: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  68: mov o7.zw, r0.zzzw
  69: add o7.xy, r1.zzzz, r1.xwxx
  70: ret 
// Approximately 0 instruction slots used
"
}
}
Program "fp" {
SubProgram "opengl " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
"// shader disassembly not supported on opengl"
}
SubProgram "d3d9 " {
// Stats: 166 math, 6 textures, 5 branches
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
Vector 15 [_Color]
Float 17 [_Glossiness]
Vector 14 [_LightColor0]
Float 16 [_Metallic]
Float 18 [_OcclusionStrength]
Vector 0 [_WorldSpaceLightPos0]
Vector 12 [unity_ColorSpaceDielectricSpec]
Vector 13 [unity_ColorSpaceLuminance]
Vector 3 [unity_SHAb]
Vector 2 [unity_SHAg]
Vector 1 [unity_SHAr]
Vector 4 [unity_SpecCube0_BoxMax]
Vector 5 [unity_SpecCube0_BoxMin]
Vector 7 [unity_SpecCube0_HDR]
Vector 6 [unity_SpecCube0_ProbePosition]
Vector 8 [unity_SpecCube1_BoxMax]
Vector 9 [unity_SpecCube1_BoxMin]
Vector 11 [unity_SpecCube1_HDR]
Vector 10 [unity_SpecCube1_ProbePosition]
SetTexture 0 [unity_SpecCube0] CUBE 0
SetTexture 1 [unity_SpecCube1] CUBE 1
SetTexture 2 [_MainTex] 2D 2
SetTexture 3 [_OcclusionMap] 2D 3
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D _OcclusionMap;
//   float _OcclusionStrength;
//   float4 _WorldSpaceLightPos0;
//   float4 unity_ColorSpaceDielectricSpec;
//   float4 unity_ColorSpaceLuminance;
//   float4 unity_SHAb;
//   float4 unity_SHAg;
//   float4 unity_SHAr;
//   samplerCUBE unity_SpecCube0;
//   float4 unity_SpecCube0_BoxMax;
//   float4 unity_SpecCube0_BoxMin;
//   float4 unity_SpecCube0_HDR;
//   float4 unity_SpecCube0_ProbePosition;
//   samplerCUBE unity_SpecCube1;
//   float4 unity_SpecCube1_BoxMax;
//   float4 unity_SpecCube1_BoxMin;
//   float4 unity_SpecCube1_HDR;
//   float4 unity_SpecCube1_ProbePosition;
//
//
// Registers:
//
//   Name                           Reg   Size
//   ------------------------------ ----- ----
//   _WorldSpaceLightPos0           c0       1
//   unity_SHAr                     c1       1
//   unity_SHAg                     c2       1
//   unity_SHAb                     c3       1
//   unity_SpecCube0_BoxMax         c4       1
//   unity_SpecCube0_BoxMin         c5       1
//   unity_SpecCube0_ProbePosition  c6       1
//   unity_SpecCube0_HDR            c7       1
//   unity_SpecCube1_BoxMax         c8       1
//   unity_SpecCube1_BoxMin         c9       1
//   unity_SpecCube1_ProbePosition  c10      1
//   unity_SpecCube1_HDR            c11      1
//   unity_ColorSpaceDielectricSpec c12      1
//   unity_ColorSpaceLuminance      c13      1
//   _LightColor0                   c14      1
//   _Color                         c15      1
//   _Metallic                      c16      1
//   _Glossiness                    c17      1
//   _OcclusionStrength             c18      1
//   unity_SpecCube0                s0       1
//   unity_SpecCube1                s1       1
//   _MainTex                       s2       1
//   _OcclusionMap                  s3       1
//

    ps_3_0
    def c19, 1.05499995, -0.0549999997, 0.699999988, 1.70000005
    def c20, 1, 0, 0.416666657, 6
    def c21, 0.999989986, 0.00100000005, 31.622776, 9.99999975e-06
    def c22, -1, 1, 3.14159274, 1.00000001e-07
    def c23, -0.5, 0.785398185, 9.99999975e-05, 0.00999999978
    def c24, 0.280000001, 1, 0, 0
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord4_pp v2.xyz
    dcl_texcoord5_pp v3.xyz
    dcl_texcoord8 v4.xyz
    dcl_cube s0
    dcl_cube s1
    dcl_2d s2
    dcl_2d s3
    texld r0, v0, s2
    mul_pp r1.xyz, r0, c15
    mov r2, c12
    mad_pp r0.xyz, c15, r0, -r2
    mad_pp r0.xyz, c16.x, r0, r2
    mad_pp r0.w, c16.x, -r2.w, r2.w
    mul_pp r1.xyz, r0.w, r1
    nrm_pp r2.xyz, v2
    dp3_pp r1.w, v1, v1
    rsq_pp r1.w, r1.w
    mul_pp r3.xyz, r1.w, v1
    texld_pp r4, v0, s3
    mov r5.xy, c20
    add_pp r3.w, r5.x, -c18.x
    mad_pp r3.w, r4.y, c18.x, r3.w
    add_pp r4.x, r5.x, -c17.x
    dp3_pp r4.y, r3, r2
    add_pp r4.y, r4.y, r4.y
    mad_pp r4.yzw, r2.xxyz, -r4.y, r3.xxyz
    mov r2.w, c20.x
    dp4_pp r6.x, c1, r2
    dp4_pp r6.y, c2, r2
    dp4_pp r6.z, c3, r2
    add_pp r5.xzw, r6.xyyz, v3.xyyz
    max_pp r6.xyz, r5.xzww, c20.y
    abs r2.w, c13.w
    log_pp r7.x, r6.x
    log_pp r7.y, r6.y
    log_pp r7.z, r6.z
    mul_pp r5.xzw, r7.xyyz, c20.z
    exp_pp r7.x, r5.x
    exp_pp r7.y, r5.z
    exp_pp r7.z, r5.w
    mad_pp r5.xzw, r7.xyyz, c19.x, c19.y
    max_pp r7.xyz, r5.xzww, c20.y
    cmp_pp r5.xzw, -r2.w, r7.xyyz, r6.xyyz
    if_lt -c6.w, r5.y
      nrm_pp r6.xyz, r4.yzww
      add r7.xyz, c4, -v4
      rcp r8.x, r6.x
      rcp r8.y, r6.y
      rcp r8.z, r6.z
      mul_pp r7.xyz, r7, r8
      add r9.xyz, c5, -v4
      mul_pp r8.xyz, r8, r9
      cmp_pp r7.xyz, -r6, r8, r7
      min_pp r6.w, r7.y, r7.x
      min_pp r8.x, r7.z, r6.w
      add r7.xyz, -c6, v4
      mad_pp r6.xyz, r6, r8.x, r7
    else
      mov_pp r6.xyz, r4.yzww
    endif
    mad_pp r7.x, r4.x, -c19.z, c19.w
    mul_pp r7.x, r4.x, r7.x
    mul_pp r6.w, r7.x, c20.w
    texldl_pp r7, r6, s0
    pow_pp r8.x, r7.w, c7.y
    mul_pp r7.w, r8.x, c7.x
    mul_pp r8.xyz, r7, r7.w
    mov r8.w, c5.w
    if_lt r8.w, c21.x
      if_lt -c10.w, r5.y
        nrm_pp r9.xyz, r4.yzww
        add r10.xyz, c8, -v4
        rcp r11.x, r9.x
        rcp r11.y, r9.y
        rcp r11.z, r9.z
        mul_pp r10.xyz, r10, r11
        add r12.xyz, c9, -v4
        mul_pp r11.xyz, r11, r12
        cmp_pp r10.xyz, -r9, r11, r10
        min_pp r5.y, r10.y, r10.x
        min_pp r8.w, r10.z, r5.y
        add r10.xyz, -c10, v4
        mad_pp r6.xyz, r9, r8.w, r10
      else
        mov_pp r6.xyz, r4.yzww
      endif
      texldl_pp r6, r6, s1
      pow_pp r4.y, r6.w, c11.y
      mul_pp r4.y, r4.y, c11.x
      mul_pp r4.yzw, r6.xxyz, r4.y
      mad r6.xyz, r7.w, r7, -r4.yzww
      mad_pp r8.xyz, c5.w, r6, r4.yzww
    endif
    mul_pp r4.yzw, r3.w, r8.xxyz
    mad_pp r6.xyz, v1, -r1.w, c0
    dp3_pp r1.w, r6, r6
    add r5.y, -r1.w, c21.y
    rsq_pp r1.w, r1.w
    cmp_pp r1.w, r5.y, c21.z, r1.w
    mul_pp r6.xyz, r1.w, r6
    dp3_pp r1.w, r2, -r3
    add r5.y, -r1.w, c21.w
    mad_pp r7.xyz, -r3, r5.y, r2
    cmp_pp r2.xyz, r1.w, r2, r7
    dp3_pp r1.w, r2, c0
    max_pp r5.y, r1.w, c20.y
    dp3_pp r1.w, r2, r6
    max_pp r6.w, r1.w, c20.y
    dp3_pp r1.w, r2, -r3
    max_pp r2.x, r1.w, c20.y
    dp3_pp r1.w, c0, r6
    max_pp r2.y, r1.w, c20.y
    mul_pp r1.w, r4.x, r4.x
    mad_pp r2.z, r4.x, -r4.x, c20.x
    mad_pp r3.x, r2.x, r2.z, r1.w
    mad_pp r2.z, r5.y, r2.z, r1.w
    mul_pp r2.z, r2.z, r2.x
    mad r2.z, r5.y, r3.x, r2.z
    add r2.z, r2.z, c21.w
    rcp r2.z, r2.z
    add_pp r2.z, r2.z, r2.z
    mul_pp r3.x, r1.w, r1.w
    mul r3.y, r6.w, r6.w
    mad r6.xy, r1.w, r1.w, c22
    mad_pp r3.y, r3.y, r6.x, c20.x
    mul r3.y, r3.y, r3.y
    mad r3.y, r3.y, c22.z, c22.w
    rcp r3.y, r3.y
    mul_pp r3.x, r3.y, r3.x
    add_pp r3.y, -r5.y, c20.x
    mul_pp r3.z, r3.y, r3.y
    mul_pp r3.z, r3.z, r3.z
    mul_pp r3.y, r3.y, r3.z
    add_pp r2.x, -r2.x, c20.x
    mul_pp r3.z, r2.x, r2.x
    mul_pp r3.z, r3.z, r3.z
    mul_pp r2.x, r2.x, r3.z
    mul_pp r3.z, r2.y, r2.y
    dp2add_pp r3.z, r3.z, r4.x, c23.x
    mad_pp r3.y, r3.z, r3.y, c20.x
    mad_pp r3.z, r3.z, r2.x, c20.x
    mul_pp r3.y, r3.z, r3.y
    mul r2.z, r2.z, r3.x
    mul_pp r3.x, r2.z, c23.y
    mad r2.z, r2.z, -c23.y, c23.z
    rsq r3.z, r3.x
    rcp_pp r3.z, r3.z
    cmp_pp r2.z, r2.z, c23.w, r3.z
    cmp_pp r2.z, -r2.w, r2.z, r3.x
    mul_pp r2.z, r5.y, r2.z
    mul_pp r3.x, r5.y, r3.y
    mul_pp r1.w, r1.w, r4.x
    mad_pp r1.w, r1.w, -c24.x, c24.y
    rcp_pp r3.y, r6.y
    cmp_pp r1.w, -r2.w, r1.w, r3.y
    add_pp r0.w, -r0.w, c20.x
    add_sat_pp r0.w, r0.w, c17.x
    mul_pp r3.xyz, r3.x, c14
    mad_pp r3.xyz, r5.xzww, r3.w, r3
    mul_pp r5.xyz, r2.z, c14
    cmp_pp r5.xyz, r2.z, r5, c20.y
    add_pp r2.y, -r2.y, c20.x
    mul_pp r2.z, r2.y, r2.y
    mul_pp r2.z, r2.z, r2.z
    mul_pp r2.y, r2.y, r2.z
    lrp_pp r6.xyz, r2.y, c20.x, r0
    mul_pp r2.yzw, r5.xxyz, r6.xxyz
    mad_pp r1.xyz, r1, r3, r2.yzww
    mul_pp r2.yzw, r4, r1.w
    lrp_pp r3.xyz, r2.x, r0.w, r0
    mad_pp oC0.xyz, r2.yzww, r3, r1
    mov_pp oC0.w, c20.x

// approximately 184 instruction slots used (6 texture, 178 arithmetic)
"
}
SubProgram "d3d11 " {
// Stats: 143 math, 2 textures, 4 branches
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
SetTexture 0 [_MainTex] 2D 2
SetTexture 1 [_OcclusionMap] 2D 3
SetTexture 2 [unity_SpecCube0] CUBE 0
SetTexture 3 [unity_SpecCube1] CUBE 1
ConstBuffer "$Globals" 240
Vector 32 [unity_ColorSpaceDielectricSpec]
Vector 48 [unity_ColorSpaceLuminance]
Vector 96 [_LightColor0]
Vector 128 [_Color]
Float 200 [_Metallic]
Float 204 [_Glossiness]
Float 208 [_OcclusionStrength]
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
Vector 608 [unity_SHAr]
Vector 624 [unity_SHAg]
Vector 640 [unity_SHAb]
ConstBuffer "UnityReflectionProbes" 128
Vector 0 [unity_SpecCube0_BoxMax]
Vector 16 [unity_SpecCube0_BoxMin]
Vector 32 [unity_SpecCube0_ProbePosition]
Vector 48 [unity_SpecCube0_HDR]
Vector 64 [unity_SpecCube1_BoxMax]
Vector 80 [unity_SpecCube1_BoxMin]
Vector 96 [unity_SpecCube1_ProbePosition]
Vector 112 [unity_SpecCube1_HDR]
BindCB  "$Globals" 0
BindCB  "UnityLighting" 1
BindCB  "UnityReflectionProbes" 2
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
// TEXCOORD                 8   xyz         7     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer cb0[14], immediateIndexed
      dcl_constantbuffer cb1[41], immediateIndexed
      dcl_constantbuffer cb2[8], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texturecube (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 12
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyz, r0.xyzx, cb0[8].xyzx
   2: mad r0.xyz, cb0[8].xyzx, r0.xyzx, -cb0[2].xyzx
   3: mad r0.xyz, cb0[12].zzzz, r0.xyzx, cb0[2].xyzx
   4: mad r0.w, -cb0[12].z, cb0[2].w, cb0[2].w
   5: mul r1.xyz, r0.wwww, r1.xyzx
   6: dp3 r1.w, v5.xyzx, v5.xyzx
   7: rsq r1.w, r1.w
   8: mul r2.xyz, r1.wwww, v5.xyzx
   9: dp3 r1.w, v2.xyzx, v2.xyzx
  10: rsq r1.w, r1.w
  11: mul r3.xyz, r1.wwww, v2.xyzx
  12: sample r4.xyzw, v1.xyxx, t1.xyzw, s3
  13: add r3.w, -cb0[13].x, l(1.000000)
  14: mad r3.w, r4.y, cb0[13].x, r3.w
  15: add r4.x, -cb0[12].w, l(1.000000)
  16: dp3 r4.y, r3.xyzx, r2.xyzx
  17: add r4.y, r4.y, r4.y
  18: mad r4.yzw, r2.xxyz, -r4.yyyy, r3.xxyz
  19: mov r2.w, l(1.000000)
  20: dp4 r5.x, cb1[38].xyzw, r2.xyzw
  21: dp4 r5.y, cb1[39].xyzw, r2.xyzw
  22: dp4 r5.z, cb1[40].xyzw, r2.xyzw
  23: add r5.xyz, r5.xyzx, v6.xyzx
  24: max r5.xyz, r5.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  25: eq r2.w, cb0[3].w, l(0.000000)
  26: log r6.xyz, r5.xyzx
  27: mul r6.xyz, r6.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  28: exp r6.xyz, r6.xyzx
  29: mad r6.xyz, r6.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  30: max r6.xyz, r6.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  31: movc r5.xyz, r2.wwww, r6.xyzx, r5.xyzx
  32: lt r5.w, l(0.000000), cb2[2].w
  33: if_nz r5.w
  34:   dp3 r5.w, r4.yzwy, r4.yzwy
  35:   rsq r5.w, r5.w
  36:   mul r6.xyz, r4.yzwy, r5.wwww
  37:   add r7.xyz, -v7.xyzx, cb2[0].xyzx
  38:   div r7.xyz, r7.xyzx, r6.xyzx
  39:   add r8.xyz, -v7.xyzx, cb2[1].xyzx
  40:   div r8.xyz, r8.xyzx, r6.xyzx
  41:   lt r9.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r6.xyzx
  42:   movc r7.xyz, r9.xyzx, r7.xyzx, r8.xyzx
  43:   min r5.w, r7.y, r7.x
  44:   min r5.w, r7.z, r5.w
  45:   add r7.xyz, v7.xyzx, -cb2[2].xyzx
  46:   mad r6.xyz, r6.xyzx, r5.wwww, r7.xyzx
  47: else 
  48:   mov r6.xyz, r4.yzwy
  49: endif 
  50: mad r5.w, -r4.x, l(0.700000), l(1.700000)
  51: mul r5.w, r4.x, r5.w
  52: mul r5.w, r5.w, l(6.000000)
  53: sample_l r6.xyzw, r6.xyzx, t2.xyzw, s0, r5.w
  54: log r6.w, r6.w
  55: mul r6.w, r6.w, cb2[3].y
  56: exp r6.w, r6.w
  57: mul r6.w, r6.w, cb2[3].x
  58: mul r7.xyz, r6.xyzx, r6.wwww
  59: lt r7.w, cb2[1].w, l(0.999990)
  60: if_nz r7.w
  61:   lt r7.w, l(0.000000), cb2[6].w
  62:   if_nz r7.w
  63:     dp3 r7.w, r4.yzwy, r4.yzwy
  64:     rsq r7.w, r7.w
  65:     mul r8.xyz, r4.yzwy, r7.wwww
  66:     add r9.xyz, -v7.xyzx, cb2[4].xyzx
  67:     div r9.xyz, r9.xyzx, r8.xyzx
  68:     add r10.xyz, -v7.xyzx, cb2[5].xyzx
  69:     div r10.xyz, r10.xyzx, r8.xyzx
  70:     lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
  71:     movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
  72:     min r7.w, r9.y, r9.x
  73:     min r7.w, r9.z, r7.w
  74:     add r9.xyz, v7.xyzx, -cb2[6].xyzx
  75:     mad r4.yzw, r8.xxyz, r7.wwww, r9.xxyz
  76:   endif 
  77:   sample_l r8.xyzw, r4.yzwy, t3.xyzw, s1, r5.w
  78:   log r4.y, r8.w
  79:   mul r4.y, r4.y, cb2[7].y
  80:   exp r4.y, r4.y
  81:   mul r4.y, r4.y, cb2[7].x
  82:   mul r4.yzw, r8.xxyz, r4.yyyy
  83:   mad r6.xyz, r6.wwww, r6.xyzx, -r4.yzwy
  84:   mad r7.xyz, cb2[1].wwww, r6.xyzx, r4.yzwy
  85: endif 
  86: mul r4.yzw, r3.wwww, r7.xxyz
  87: mad r6.xyz, -v2.xyzx, r1.wwww, cb1[0].xyzx
  88: dp3 r1.w, r6.xyzx, r6.xyzx
  89: max r1.w, r1.w, l(0.001000)
  90: rsq r1.w, r1.w
  91: mul r6.xyz, r1.wwww, r6.xyzx
  92: dp3 r1.w, r2.xyzx, -r3.xyzx
  93: lt r5.w, r1.w, l(0.000000)
  94: add r1.w, -r1.w, l(0.000010)
  95: mad r7.xyz, -r3.xyzx, r1.wwww, r2.xyzx
  96: movc r2.xyz, r5.wwww, r7.xyzx, r2.xyzx
  97: dp3 r1.w, r2.xyzx, cb1[0].xyzx
  98: max r1.w, r1.w, l(0.000000)
  99: dp3 r5.w, r2.xyzx, r6.xyzx
 100: max r5.w, r5.w, l(0.000000)
 101: dp3 r2.x, r2.xyzx, -r3.xyzx
 102: dp3 r2.y, cb1[0].xyzx, r6.xyzx
 103: max r2.xy, r2.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
 104: mul r2.z, r4.x, r4.x
 105: mad r3.x, -r4.x, r4.x, l(1.000000)
 106: mad r3.y, r2.x, r3.x, r2.z
 107: mad r3.x, r1.w, r3.x, r2.z
 108: mul r3.x, r2.x, r3.x
 109: mad r3.x, r1.w, r3.y, r3.x
 110: add r3.x, r3.x, l(0.000010)
 111: div r3.x, l(2.000000), r3.x
 112: mul r3.y, r2.z, r2.z
 113: mul r3.z, r5.w, r5.w
 114: mad r6.xy, r2.zzzz, r2.zzzz, l(-1.000000, 1.000000, 0.000000, 0.000000)
 115: mad r3.z, r3.z, r6.x, l(1.000000)
 116: mul r5.w, r3.z, l(3.141593)
 117: mad r3.z, r5.w, r3.z, l(0.000000)
 118: div r3.y, r3.y, r3.z
 119: add r3.z, -r1.w, l(1.000000)
 120: mul r5.w, r3.z, r3.z
 121: mul r5.w, r5.w, r5.w
 122: mul r3.z, r3.z, r5.w
 123: add r2.x, -r2.x, l(1.000000)
 124: mul r5.w, r2.x, r2.x
 125: mul r5.w, r5.w, r5.w
 126: mul r2.x, r2.x, r5.w
 127: mul r5.w, r2.y, r2.y
 128: dp2 r5.w, r5.wwww, r4.xxxx
 129: add r5.w, r5.w, l(-0.500000)
 130: mad r3.z, r5.w, r3.z, l(1.000000)
 131: mad r5.w, r5.w, r2.x, l(1.000000)
 132: mul r3.z, r3.z, r5.w
 133: mul r3.x, r3.y, r3.x
 134: mul r3.x, r3.x, l(0.785398)
 135: max r3.y, r3.x, l(0.000100)
 136: sqrt r3.y, r3.y
 137: movc r3.x, r2.w, r3.y, r3.x
 138: mul r3.x, r1.w, r3.x
 139: max r3.x, r3.x, l(0.000000)
 140: mul r1.w, r1.w, r3.z
 141: mul r2.z, r2.z, r4.x
 142: mad r2.z, -r2.z, l(0.280000), l(1.000000)
 143: div r3.y, l(1.000000, 1.000000, 1.000000, 1.000000), r6.y
 144: movc r2.z, r2.w, r2.z, r3.y
 145: add r0.w, -r0.w, cb0[12].w
 146: add_sat r0.w, r0.w, l(1.000000)
 147: mul r6.xyz, r1.wwww, cb0[6].xyzx
 148: mad r3.yzw, r5.xxyz, r3.wwww, r6.xxyz
 149: mul r5.xyz, r3.xxxx, cb0[6].xyzx
 150: add r1.w, -r2.y, l(1.000000)
 151: mul r2.y, r1.w, r1.w
 152: mul r2.y, r2.y, r2.y
 153: mul r1.w, r1.w, r2.y
 154: add r6.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 155: mad r6.xyz, r6.xyzx, r1.wwww, r0.xyzx
 156: mul r5.xyz, r5.xyzx, r6.xyzx
 157: mad r1.xyz, r1.xyzx, r3.yzwy, r5.xyzx
 158: mul r2.yzw, r4.yyzw, r2.zzzz
 159: add r3.xyz, -r0.xyzx, r0.wwww
 160: mad r0.xyz, r2.xxxx, r3.xyzx, r0.xyzx
 161: mad o0.xyz, r2.yzwy, r0.xyzx, r1.xyzx
 162: mov o0.w, l(1.000000)
 163: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
"// shader disassembly not supported on opengl"
}
SubProgram "d3d9 " {
// Stats: 167 math, 7 textures, 5 branches
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
Vector 15 [_Color]
Float 17 [_Glossiness]
Vector 14 [_LightColor0]
Float 16 [_Metallic]
Float 18 [_OcclusionStrength]
Vector 0 [_WorldSpaceLightPos0]
Vector 12 [unity_ColorSpaceDielectricSpec]
Vector 13 [unity_ColorSpaceLuminance]
Vector 3 [unity_SHAb]
Vector 2 [unity_SHAg]
Vector 1 [unity_SHAr]
Vector 4 [unity_SpecCube0_BoxMax]
Vector 5 [unity_SpecCube0_BoxMin]
Vector 7 [unity_SpecCube0_HDR]
Vector 6 [unity_SpecCube0_ProbePosition]
Vector 8 [unity_SpecCube1_BoxMax]
Vector 9 [unity_SpecCube1_BoxMin]
Vector 11 [unity_SpecCube1_HDR]
Vector 10 [unity_SpecCube1_ProbePosition]
SetTexture 0 [unity_SpecCube0] CUBE 0
SetTexture 1 [unity_SpecCube1] CUBE 1
SetTexture 2 [_MainTex] 2D 2
SetTexture 3 [_OcclusionMap] 2D 3
SetTexture 4 [_ShadowMapTexture] 2D 4
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D _OcclusionMap;
//   float _OcclusionStrength;
//   sampler2D _ShadowMapTexture;
//   float4 _WorldSpaceLightPos0;
//   float4 unity_ColorSpaceDielectricSpec;
//   float4 unity_ColorSpaceLuminance;
//   float4 unity_SHAb;
//   float4 unity_SHAg;
//   float4 unity_SHAr;
//   samplerCUBE unity_SpecCube0;
//   float4 unity_SpecCube0_BoxMax;
//   float4 unity_SpecCube0_BoxMin;
//   float4 unity_SpecCube0_HDR;
//   float4 unity_SpecCube0_ProbePosition;
//   samplerCUBE unity_SpecCube1;
//   float4 unity_SpecCube1_BoxMax;
//   float4 unity_SpecCube1_BoxMin;
//   float4 unity_SpecCube1_HDR;
//   float4 unity_SpecCube1_ProbePosition;
//
//
// Registers:
//
//   Name                           Reg   Size
//   ------------------------------ ----- ----
//   _WorldSpaceLightPos0           c0       1
//   unity_SHAr                     c1       1
//   unity_SHAg                     c2       1
//   unity_SHAb                     c3       1
//   unity_SpecCube0_BoxMax         c4       1
//   unity_SpecCube0_BoxMin         c5       1
//   unity_SpecCube0_ProbePosition  c6       1
//   unity_SpecCube0_HDR            c7       1
//   unity_SpecCube1_BoxMax         c8       1
//   unity_SpecCube1_BoxMin         c9       1
//   unity_SpecCube1_ProbePosition  c10      1
//   unity_SpecCube1_HDR            c11      1
//   unity_ColorSpaceDielectricSpec c12      1
//   unity_ColorSpaceLuminance      c13      1
//   _LightColor0                   c14      1
//   _Color                         c15      1
//   _Metallic                      c16      1
//   _Glossiness                    c17      1
//   _OcclusionStrength             c18      1
//   unity_SpecCube0                s0       1
//   unity_SpecCube1                s1       1
//   _MainTex                       s2       1
//   _OcclusionMap                  s3       1
//   _ShadowMapTexture              s4       1
//

    ps_3_0
    def c19, 1.05499995, -0.0549999997, 0.699999988, 1.70000005
    def c20, 1, 0, 0.416666657, 6
    def c21, 0.999989986, 0.00100000005, 31.622776, 9.99999975e-06
    def c22, -1, 1, 3.14159274, 1.00000001e-07
    def c23, -0.5, 0.785398185, 9.99999975e-05, 0.00999999978
    def c24, 0.280000001, 1, 0, 0
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord4_pp v2.xyz
    dcl_texcoord5_pp v3.xyz
    dcl_texcoord6 v4
    dcl_texcoord8 v5.xyz
    dcl_cube s0
    dcl_cube s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    texld r0, v0, s2
    mul_pp r1.xyz, r0, c15
    mov r2, c12
    mad_pp r0.xyz, c15, r0, -r2
    mad_pp r0.xyz, c16.x, r0, r2
    mad_pp r0.w, c16.x, -r2.w, r2.w
    mul_pp r1.xyz, r0.w, r1
    nrm_pp r2.xyz, v2
    dp3_pp r1.w, v1, v1
    rsq_pp r1.w, r1.w
    mul_pp r3.xyz, r1.w, v1
    texldp_pp r4, v4, s4
    texld_pp r5, v0, s3
    mov r6.xy, c20
    add_pp r3.w, r6.x, -c18.x
    mad_pp r3.w, r5.y, c18.x, r3.w
    add_pp r4.y, r6.x, -c17.x
    dp3_pp r4.z, r3, r2
    add_pp r4.z, r4.z, r4.z
    mad_pp r5.xyz, r2, -r4.z, r3
    mul_pp r4.xzw, r4.x, c14.xyyz
    mov r2.w, c20.x
    dp4_pp r7.x, c1, r2
    dp4_pp r7.y, c2, r2
    dp4_pp r7.z, c3, r2
    add_pp r6.xzw, r7.xyyz, v3.xyyz
    max_pp r7.xyz, r6.xzww, c20.y
    abs r2.w, c13.w
    log_pp r8.x, r7.x
    log_pp r8.y, r7.y
    log_pp r8.z, r7.z
    mul_pp r6.xzw, r8.xyyz, c20.z
    exp_pp r8.x, r6.x
    exp_pp r8.y, r6.z
    exp_pp r8.z, r6.w
    mad_pp r6.xzw, r8.xyyz, c19.x, c19.y
    max_pp r8.xyz, r6.xzww, c20.y
    cmp_pp r6.xzw, -r2.w, r8.xyyz, r7.xyyz
    if_lt -c6.w, r6.y
      nrm_pp r7.xyz, r5
      add r8.xyz, c4, -v5
      rcp r9.x, r7.x
      rcp r9.y, r7.y
      rcp r9.z, r7.z
      mul_pp r8.xyz, r8, r9
      add r10.xyz, c5, -v5
      mul_pp r9.xyz, r9, r10
      cmp_pp r8.xyz, -r7, r9, r8
      min_pp r5.w, r8.y, r8.x
      min_pp r7.w, r8.z, r5.w
      add r8.xyz, -c6, v5
      mad_pp r7.xyz, r7, r7.w, r8
    else
      mov_pp r7.xyz, r5
    endif
    mad_pp r5.w, r4.y, -c19.z, c19.w
    mul_pp r5.w, r4.y, r5.w
    mul_pp r7.w, r5.w, c20.w
    texldl_pp r8, r7, s0
    pow_pp r5.w, r8.w, c7.y
    mul_pp r5.w, r5.w, c7.x
    mul_pp r9.xyz, r8, r5.w
    mov r8.w, c5.w
    if_lt r8.w, c21.x
      if_lt -c10.w, r6.y
        nrm_pp r10.xyz, r5
        add r11.xyz, c8, -v5
        rcp r12.x, r10.x
        rcp r12.y, r10.y
        rcp r12.z, r10.z
        mul_pp r11.xyz, r11, r12
        add r13.xyz, c9, -v5
        mul_pp r12.xyz, r12, r13
        cmp_pp r11.xyz, -r10, r12, r11
        min_pp r6.y, r11.y, r11.x
        min_pp r8.w, r11.z, r6.y
        add r11.xyz, -c10, v5
        mad_pp r7.xyz, r10, r8.w, r11
      else
        mov_pp r7.xyz, r5
      endif
      texldl_pp r7, r7, s1
      pow_pp r5.x, r7.w, c11.y
      mul_pp r5.x, r5.x, c11.x
      mul_pp r5.xyz, r7, r5.x
      mad r7.xyz, r5.w, r8, -r5
      mad_pp r9.xyz, c5.w, r7, r5
    endif
    mul_pp r5.xyz, r3.w, r9
    mad_pp r7.xyz, v1, -r1.w, c0
    dp3_pp r1.w, r7, r7
    add r5.w, -r1.w, c21.y
    rsq_pp r1.w, r1.w
    cmp_pp r1.w, r5.w, c21.z, r1.w
    mul_pp r7.xyz, r1.w, r7
    dp3_pp r1.w, r2, -r3
    add r5.w, -r1.w, c21.w
    mad_pp r8.xyz, -r3, r5.w, r2
    cmp_pp r2.xyz, r1.w, r2, r8
    dp3_pp r1.w, r2, c0
    max_pp r5.w, r1.w, c20.y
    dp3_pp r1.w, r2, r7
    max_pp r6.y, r1.w, c20.y
    dp3_pp r1.w, r2, -r3
    max_pp r2.x, r1.w, c20.y
    dp3_pp r1.w, c0, r7
    max_pp r2.y, r1.w, c20.y
    mul_pp r1.w, r4.y, r4.y
    mad_pp r2.z, r4.y, -r4.y, c20.x
    mad_pp r3.x, r2.x, r2.z, r1.w
    mad_pp r2.z, r5.w, r2.z, r1.w
    mul_pp r2.z, r2.z, r2.x
    mad r2.z, r5.w, r3.x, r2.z
    add r2.z, r2.z, c21.w
    rcp r2.z, r2.z
    add_pp r2.z, r2.z, r2.z
    mul_pp r3.x, r1.w, r1.w
    mul r3.y, r6.y, r6.y
    mad r7.xy, r1.w, r1.w, c22
    mad_pp r3.y, r3.y, r7.x, c20.x
    mul r3.y, r3.y, r3.y
    mad r3.y, r3.y, c22.z, c22.w
    rcp r3.y, r3.y
    mul_pp r3.x, r3.y, r3.x
    add_pp r3.y, -r5.w, c20.x
    mul_pp r3.z, r3.y, r3.y
    mul_pp r3.z, r3.z, r3.z
    mul_pp r3.y, r3.y, r3.z
    add_pp r2.x, -r2.x, c20.x
    mul_pp r3.z, r2.x, r2.x
    mul_pp r3.z, r3.z, r3.z
    mul_pp r2.x, r2.x, r3.z
    dp2add_pp r3.z, r2.y, r2.y, c20.y
    mad_pp r3.z, r3.z, r4.y, c23.x
    mad_pp r3.y, r3.z, r3.y, c20.x
    mad_pp r3.z, r3.z, r2.x, c20.x
    mul_pp r3.y, r3.z, r3.y
    mul r2.z, r2.z, r3.x
    mul_pp r3.x, r2.z, c23.y
    mad r2.z, r2.z, -c23.y, c23.z
    rsq r3.z, r3.x
    rcp_pp r3.z, r3.z
    cmp_pp r2.z, r2.z, c23.w, r3.z
    cmp_pp r2.z, -r2.w, r2.z, r3.x
    mul_pp r2.z, r5.w, r2.z
    max_pp r3.x, r2.z, c20.y
    mul_pp r2.z, r5.w, r3.y
    mul_pp r1.w, r1.w, r4.y
    mad_pp r1.w, r1.w, -c24.x, c24.y
    rcp_pp r3.y, r7.y
    cmp_pp r1.w, -r2.w, r1.w, r3.y
    add_pp r0.w, -r0.w, c20.x
    add_sat_pp r0.w, r0.w, c17.x
    mul_pp r7.xyz, r2.z, r4.xzww
    mad_pp r3.yzw, r6.xxzw, r3.w, r7.xxyz
    mul_pp r4.xyz, r4.xzww, r3.x
    add_pp r2.y, -r2.y, c20.x
    mul_pp r2.z, r2.y, r2.y
    mul_pp r2.z, r2.z, r2.z
    mul_pp r2.y, r2.y, r2.z
    lrp_pp r6.xyz, r2.y, c20.x, r0
    mul_pp r2.yzw, r4.xxyz, r6.xxyz
    mad_pp r1.xyz, r1, r3.yzww, r2.yzww
    mul_pp r2.yzw, r5.xxyz, r1.w
    lrp_pp r3.xyz, r2.x, r0.w, r0
    mad_pp oC0.xyz, r2.yzww, r3, r1
    mov_pp oC0.w, c20.x

// approximately 186 instruction slots used (7 texture, 179 arithmetic)
"
}
SubProgram "d3d11 " {
// Stats: 145 math, 3 textures, 4 branches
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
SetTexture 0 [_MainTex] 2D 2
SetTexture 1 [_ShadowMapTexture] 2D 4
SetTexture 2 [_OcclusionMap] 2D 3
SetTexture 3 [unity_SpecCube0] CUBE 0
SetTexture 4 [unity_SpecCube1] CUBE 1
ConstBuffer "$Globals" 240
Vector 32 [unity_ColorSpaceDielectricSpec]
Vector 48 [unity_ColorSpaceLuminance]
Vector 96 [_LightColor0]
Vector 128 [_Color]
Float 200 [_Metallic]
Float 204 [_Glossiness]
Float 208 [_OcclusionStrength]
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
Vector 608 [unity_SHAr]
Vector 624 [unity_SHAg]
Vector 640 [unity_SHAb]
ConstBuffer "UnityReflectionProbes" 128
Vector 0 [unity_SpecCube0_BoxMax]
Vector 16 [unity_SpecCube0_BoxMin]
Vector 32 [unity_SpecCube0_ProbePosition]
Vector 48 [unity_SpecCube0_HDR]
Vector 64 [unity_SpecCube1_BoxMax]
Vector 80 [unity_SpecCube1_BoxMin]
Vector 96 [unity_SpecCube1_ProbePosition]
Vector 112 [unity_SpecCube1_HDR]
BindCB  "$Globals" 0
BindCB  "UnityLighting" 1
BindCB  "UnityReflectionProbes" 2
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xy w
// TEXCOORD                 8   xyz         8     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer cb0[14], immediateIndexed
      dcl_constantbuffer cb1[41], immediateIndexed
      dcl_constantbuffer cb2[8], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.xyw
      dcl_input_ps linear v8.xyz
      dcl_output o0.xyzw
      dcl_temps 13
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyz, r0.xyzx, cb0[8].xyzx
   2: mad r0.xyz, cb0[8].xyzx, r0.xyzx, -cb0[2].xyzx
   3: mad r0.xyz, cb0[12].zzzz, r0.xyzx, cb0[2].xyzx
   4: mad r0.w, -cb0[12].z, cb0[2].w, cb0[2].w
   5: mul r1.xyz, r0.wwww, r1.xyzx
   6: dp3 r1.w, v5.xyzx, v5.xyzx
   7: rsq r1.w, r1.w
   8: mul r2.xyz, r1.wwww, v5.xyzx
   9: dp3 r1.w, v2.xyzx, v2.xyzx
  10: rsq r1.w, r1.w
  11: mul r3.xyz, r1.wwww, v2.xyzx
  12: div r4.xy, v7.xyxx, v7.wwww
  13: sample r4.xyzw, r4.xyxx, t1.xyzw, s4
  14: sample r5.xyzw, v1.xyxx, t2.xyzw, s3
  15: add r3.w, -cb0[13].x, l(1.000000)
  16: mad r3.w, r5.y, cb0[13].x, r3.w
  17: add r4.y, -cb0[12].w, l(1.000000)
  18: dp3 r4.z, r3.xyzx, r2.xyzx
  19: add r4.z, r4.z, r4.z
  20: mad r5.xyz, r2.xyzx, -r4.zzzz, r3.xyzx
  21: mul r4.xzw, r4.xxxx, cb0[6].xxyz
  22: mov r2.w, l(1.000000)
  23: dp4 r6.x, cb1[38].xyzw, r2.xyzw
  24: dp4 r6.y, cb1[39].xyzw, r2.xyzw
  25: dp4 r6.z, cb1[40].xyzw, r2.xyzw
  26: add r6.xyz, r6.xyzx, v6.xyzx
  27: max r6.xyz, r6.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  28: eq r2.w, cb0[3].w, l(0.000000)
  29: log r7.xyz, r6.xyzx
  30: mul r7.xyz, r7.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  31: exp r7.xyz, r7.xyzx
  32: mad r7.xyz, r7.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  33: max r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  34: movc r6.xyz, r2.wwww, r7.xyzx, r6.xyzx
  35: lt r5.w, l(0.000000), cb2[2].w
  36: if_nz r5.w
  37:   dp3 r5.w, r5.xyzx, r5.xyzx
  38:   rsq r5.w, r5.w
  39:   mul r7.xyz, r5.wwww, r5.xyzx
  40:   add r8.xyz, -v8.xyzx, cb2[0].xyzx
  41:   div r8.xyz, r8.xyzx, r7.xyzx
  42:   add r9.xyz, -v8.xyzx, cb2[1].xyzx
  43:   div r9.xyz, r9.xyzx, r7.xyzx
  44:   lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
  45:   movc r8.xyz, r10.xyzx, r8.xyzx, r9.xyzx
  46:   min r5.w, r8.y, r8.x
  47:   min r5.w, r8.z, r5.w
  48:   add r8.xyz, v8.xyzx, -cb2[2].xyzx
  49:   mad r7.xyz, r7.xyzx, r5.wwww, r8.xyzx
  50: else 
  51:   mov r7.xyz, r5.xyzx
  52: endif 
  53: mad r5.w, -r4.y, l(0.700000), l(1.700000)
  54: mul r5.w, r4.y, r5.w
  55: mul r5.w, r5.w, l(6.000000)
  56: sample_l r7.xyzw, r7.xyzx, t3.xyzw, s0, r5.w
  57: log r6.w, r7.w
  58: mul r6.w, r6.w, cb2[3].y
  59: exp r6.w, r6.w
  60: mul r6.w, r6.w, cb2[3].x
  61: mul r8.xyz, r7.xyzx, r6.wwww
  62: lt r7.w, cb2[1].w, l(0.999990)
  63: if_nz r7.w
  64:   lt r7.w, l(0.000000), cb2[6].w
  65:   if_nz r7.w
  66:     dp3 r7.w, r5.xyzx, r5.xyzx
  67:     rsq r7.w, r7.w
  68:     mul r9.xyz, r5.xyzx, r7.wwww
  69:     add r10.xyz, -v8.xyzx, cb2[4].xyzx
  70:     div r10.xyz, r10.xyzx, r9.xyzx
  71:     add r11.xyz, -v8.xyzx, cb2[5].xyzx
  72:     div r11.xyz, r11.xyzx, r9.xyzx
  73:     lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
  74:     movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
  75:     min r7.w, r10.y, r10.x
  76:     min r7.w, r10.z, r7.w
  77:     add r10.xyz, v8.xyzx, -cb2[6].xyzx
  78:     mad r5.xyz, r9.xyzx, r7.wwww, r10.xyzx
  79:   endif 
  80:   sample_l r5.xyzw, r5.xyzx, t4.xyzw, s1, r5.w
  81:   log r5.w, r5.w
  82:   mul r5.w, r5.w, cb2[7].y
  83:   exp r5.w, r5.w
  84:   mul r5.w, r5.w, cb2[7].x
  85:   mul r5.xyz, r5.xyzx, r5.wwww
  86:   mad r7.xyz, r6.wwww, r7.xyzx, -r5.xyzx
  87:   mad r8.xyz, cb2[1].wwww, r7.xyzx, r5.xyzx
  88: endif 
  89: mul r5.xyz, r3.wwww, r8.xyzx
  90: mad r7.xyz, -v2.xyzx, r1.wwww, cb1[0].xyzx
  91: dp3 r1.w, r7.xyzx, r7.xyzx
  92: max r1.w, r1.w, l(0.001000)
  93: rsq r1.w, r1.w
  94: mul r7.xyz, r1.wwww, r7.xyzx
  95: dp3 r1.w, r2.xyzx, -r3.xyzx
  96: lt r5.w, r1.w, l(0.000000)
  97: add r1.w, -r1.w, l(0.000010)
  98: mad r8.xyz, -r3.xyzx, r1.wwww, r2.xyzx
  99: movc r2.xyz, r5.wwww, r8.xyzx, r2.xyzx
 100: dp3 r1.w, r2.xyzx, cb1[0].xyzx
 101: max r1.w, r1.w, l(0.000000)
 102: dp3 r5.w, r2.xyzx, r7.xyzx
 103: max r5.w, r5.w, l(0.000000)
 104: dp3 r2.x, r2.xyzx, -r3.xyzx
 105: dp3 r2.y, cb1[0].xyzx, r7.xyzx
 106: max r2.xy, r2.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
 107: mul r2.z, r4.y, r4.y
 108: mad r3.x, -r4.y, r4.y, l(1.000000)
 109: mad r3.y, r2.x, r3.x, r2.z
 110: mad r3.x, r1.w, r3.x, r2.z
 111: mul r3.x, r2.x, r3.x
 112: mad r3.x, r1.w, r3.y, r3.x
 113: add r3.x, r3.x, l(0.000010)
 114: div r3.x, l(2.000000), r3.x
 115: mul r3.y, r2.z, r2.z
 116: mul r3.z, r5.w, r5.w
 117: mad r7.xy, r2.zzzz, r2.zzzz, l(-1.000000, 1.000000, 0.000000, 0.000000)
 118: mad r3.z, r3.z, r7.x, l(1.000000)
 119: mul r3.z, r3.z, r3.z
 120: mad r3.z, r3.z, l(3.141593), l(0.000000)
 121: div r3.y, r3.y, r3.z
 122: add r3.z, -r1.w, l(1.000000)
 123: mul r5.w, r3.z, r3.z
 124: mul r5.w, r5.w, r5.w
 125: mul r3.z, r3.z, r5.w
 126: add r2.x, -r2.x, l(1.000000)
 127: mul r5.w, r2.x, r2.x
 128: mul r5.w, r5.w, r5.w
 129: mul r2.x, r2.x, r5.w
 130: mul r5.w, r2.y, r2.y
 131: dp2 r5.w, r5.wwww, r4.yyyy
 132: add r5.w, r5.w, l(-0.500000)
 133: mad r3.z, r5.w, r3.z, l(1.000000)
 134: mad r5.w, r5.w, r2.x, l(1.000000)
 135: mul r3.z, r3.z, r5.w
 136: mul r3.x, r3.y, r3.x
 137: mul r3.x, r3.x, l(0.785398)
 138: max r3.y, r3.x, l(0.000100)
 139: sqrt r3.y, r3.y
 140: movc r3.x, r2.w, r3.y, r3.x
 141: mul r3.x, r1.w, r3.x
 142: max r3.x, r3.x, l(0.000000)
 143: mul r1.w, r1.w, r3.z
 144: mul r2.z, r2.z, r4.y
 145: mad r2.z, -r2.z, l(0.280000), l(1.000000)
 146: div r3.y, l(1.000000, 1.000000, 1.000000, 1.000000), r7.y
 147: movc r2.z, r2.w, r2.z, r3.y
 148: add r0.w, -r0.w, cb0[12].w
 149: add_sat r0.w, r0.w, l(1.000000)
 150: mul r7.xyz, r1.wwww, r4.xzwx
 151: mad r3.yzw, r6.xxyz, r3.wwww, r7.xxyz
 152: mul r4.xyz, r4.xzwx, r3.xxxx
 153: add r1.w, -r2.y, l(1.000000)
 154: mul r2.y, r1.w, r1.w
 155: mul r2.y, r2.y, r2.y
 156: mul r1.w, r1.w, r2.y
 157: add r6.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 158: mad r6.xyz, r6.xyzx, r1.wwww, r0.xyzx
 159: mul r4.xyz, r4.xyzx, r6.xyzx
 160: mad r1.xyz, r1.xyzx, r3.yzwy, r4.xyzx
 161: mul r2.yzw, r5.xxyz, r2.zzzz
 162: add r3.xyz, -r0.xyzx, r0.wwww
 163: mad r0.xyz, r2.xxxx, r3.xyzx, r0.xyzx
 164: mad o0.xyz, r2.yzwy, r0.xyzx, r1.xyzx
 165: mov o0.w, l(1.000000)
 166: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" }
"// shader disassembly not supported on opengl"
}
SubProgram "d3d9 " {
// Stats: 167 math, 7 textures, 5 branches
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" }
Vector 15 [_Color]
Vector 19 [_EmissionColor]
Float 17 [_Glossiness]
Vector 14 [_LightColor0]
Float 16 [_Metallic]
Float 18 [_OcclusionStrength]
Vector 0 [_WorldSpaceLightPos0]
Vector 12 [unity_ColorSpaceDielectricSpec]
Vector 13 [unity_ColorSpaceLuminance]
Vector 3 [unity_SHAb]
Vector 2 [unity_SHAg]
Vector 1 [unity_SHAr]
Vector 4 [unity_SpecCube0_BoxMax]
Vector 5 [unity_SpecCube0_BoxMin]
Vector 7 [unity_SpecCube0_HDR]
Vector 6 [unity_SpecCube0_ProbePosition]
Vector 8 [unity_SpecCube1_BoxMax]
Vector 9 [unity_SpecCube1_BoxMin]
Vector 11 [unity_SpecCube1_HDR]
Vector 10 [unity_SpecCube1_ProbePosition]
SetTexture 0 [unity_SpecCube0] CUBE 0
SetTexture 1 [unity_SpecCube1] CUBE 1
SetTexture 2 [_MainTex] 2D 2
SetTexture 3 [_OcclusionMap] 2D 3
SetTexture 4 [_EmissionMap] 2D 4
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _Color;
//   float4 _EmissionColor;
//   sampler2D _EmissionMap;
//   float _Glossiness;
//   float4 _LightColor0;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D _OcclusionMap;
//   float _OcclusionStrength;
//   float4 _WorldSpaceLightPos0;
//   float4 unity_ColorSpaceDielectricSpec;
//   float4 unity_ColorSpaceLuminance;
//   float4 unity_SHAb;
//   float4 unity_SHAg;
//   float4 unity_SHAr;
//   samplerCUBE unity_SpecCube0;
//   float4 unity_SpecCube0_BoxMax;
//   float4 unity_SpecCube0_BoxMin;
//   float4 unity_SpecCube0_HDR;
//   float4 unity_SpecCube0_ProbePosition;
//   samplerCUBE unity_SpecCube1;
//   float4 unity_SpecCube1_BoxMax;
//   float4 unity_SpecCube1_BoxMin;
//   float4 unity_SpecCube1_HDR;
//   float4 unity_SpecCube1_ProbePosition;
//
//
// Registers:
//
//   Name                           Reg   Size
//   ------------------------------ ----- ----
//   _WorldSpaceLightPos0           c0       1
//   unity_SHAr                     c1       1
//   unity_SHAg                     c2       1
//   unity_SHAb                     c3       1
//   unity_SpecCube0_BoxMax         c4       1
//   unity_SpecCube0_BoxMin         c5       1
//   unity_SpecCube0_ProbePosition  c6       1
//   unity_SpecCube0_HDR            c7       1
//   unity_SpecCube1_BoxMax         c8       1
//   unity_SpecCube1_BoxMin         c9       1
//   unity_SpecCube1_ProbePosition  c10      1
//   unity_SpecCube1_HDR            c11      1
//   unity_ColorSpaceDielectricSpec c12      1
//   unity_ColorSpaceLuminance      c13      1
//   _LightColor0                   c14      1
//   _Color                         c15      1
//   _Metallic                      c16      1
//   _Glossiness                    c17      1
//   _OcclusionStrength             c18      1
//   _EmissionColor                 c19      1
//   unity_SpecCube0                s0       1
//   unity_SpecCube1                s1       1
//   _MainTex                       s2       1
//   _OcclusionMap                  s3       1
//   _EmissionMap                   s4       1
//

    ps_3_0
    def c20, 1.05499995, -0.0549999997, 0.699999988, 1.70000005
    def c21, 1, 0, 0.416666657, 6
    def c22, 0.999989986, 0.00100000005, 31.622776, 9.99999975e-06
    def c23, -1, 1, 3.14159274, 1.00000001e-07
    def c24, -0.5, 0.785398185, 9.99999975e-05, 0.00999999978
    def c25, 0.280000001, 1, 0, 0
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord4_pp v2.xyz
    dcl_texcoord5_pp v3.xyz
    dcl_texcoord8 v4.xyz
    dcl_cube s0
    dcl_cube s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    texld r0, v0, s2
    mul_pp r1.xyz, r0, c15
    mov r2, c12
    mad_pp r0.xyz, c15, r0, -r2
    mad_pp r0.xyz, c16.x, r0, r2
    mad_pp r0.w, c16.x, -r2.w, r2.w
    mul_pp r1.xyz, r0.w, r1
    nrm_pp r2.xyz, v2
    dp3_pp r1.w, v1, v1
    rsq_pp r1.w, r1.w
    mul_pp r3.xyz, r1.w, v1
    texld_pp r4, v0, s3
    mov r5.xy, c21
    add_pp r3.w, r5.x, -c18.x
    mad_pp r3.w, r4.y, c18.x, r3.w
    add_pp r4.x, r5.x, -c17.x
    dp3_pp r4.y, r3, r2
    add_pp r4.y, r4.y, r4.y
    mad_pp r4.yzw, r2.xxyz, -r4.y, r3.xxyz
    mov r2.w, c21.x
    dp4_pp r6.x, c1, r2
    dp4_pp r6.y, c2, r2
    dp4_pp r6.z, c3, r2
    add_pp r5.xzw, r6.xyyz, v3.xyyz
    max_pp r6.xyz, r5.xzww, c21.y
    abs r2.w, c13.w
    log_pp r7.x, r6.x
    log_pp r7.y, r6.y
    log_pp r7.z, r6.z
    mul_pp r5.xzw, r7.xyyz, c21.z
    exp_pp r7.x, r5.x
    exp_pp r7.y, r5.z
    exp_pp r7.z, r5.w
    mad_pp r5.xzw, r7.xyyz, c20.x, c20.y
    max_pp r7.xyz, r5.xzww, c21.y
    cmp_pp r5.xzw, -r2.w, r7.xyyz, r6.xyyz
    if_lt -c6.w, r5.y
      nrm_pp r6.xyz, r4.yzww
      add r7.xyz, c4, -v4
      rcp r8.x, r6.x
      rcp r8.y, r6.y
      rcp r8.z, r6.z
      mul_pp r7.xyz, r7, r8
      add r9.xyz, c5, -v4
      mul_pp r8.xyz, r8, r9
      cmp_pp r7.xyz, -r6, r8, r7
      min_pp r6.w, r7.y, r7.x
      min_pp r8.x, r7.z, r6.w
      add r7.xyz, -c6, v4
      mad_pp r6.xyz, r6, r8.x, r7
    else
      mov_pp r6.xyz, r4.yzww
    endif
    mad_pp r7.x, r4.x, -c20.z, c20.w
    mul_pp r7.x, r4.x, r7.x
    mul_pp r6.w, r7.x, c21.w
    texldl_pp r7, r6, s0
    pow_pp r8.x, r7.w, c7.y
    mul_pp r7.w, r8.x, c7.x
    mul_pp r8.xyz, r7, r7.w
    mov r8.w, c5.w
    if_lt r8.w, c22.x
      if_lt -c10.w, r5.y
        nrm_pp r9.xyz, r4.yzww
        add r10.xyz, c8, -v4
        rcp r11.x, r9.x
        rcp r11.y, r9.y
        rcp r11.z, r9.z
        mul_pp r10.xyz, r10, r11
        add r12.xyz, c9, -v4
        mul_pp r11.xyz, r11, r12
        cmp_pp r10.xyz, -r9, r11, r10
        min_pp r5.y, r10.y, r10.x
        min_pp r8.w, r10.z, r5.y
        add r10.xyz, -c10, v4
        mad_pp r6.xyz, r9, r8.w, r10
      else
        mov_pp r6.xyz, r4.yzww
      endif
      texldl_pp r6, r6, s1
      pow_pp r4.y, r6.w, c11.y
      mul_pp r4.y, r4.y, c11.x
      mul_pp r4.yzw, r6.xxyz, r4.y
      mad r6.xyz, r7.w, r7, -r4.yzww
      mad_pp r8.xyz, c5.w, r6, r4.yzww
    endif
    mul_pp r4.yzw, r3.w, r8.xxyz
    mad_pp r6.xyz, v1, -r1.w, c0
    dp3_pp r1.w, r6, r6
    add r5.y, -r1.w, c22.y
    rsq_pp r1.w, r1.w
    cmp_pp r1.w, r5.y, c22.z, r1.w
    mul_pp r6.xyz, r1.w, r6
    dp3_pp r1.w, r2, -r3
    add r5.y, -r1.w, c22.w
    mad_pp r7.xyz, -r3, r5.y, r2
    cmp_pp r2.xyz, r1.w, r2, r7
    dp3_pp r1.w, r2, c0
    max_pp r5.y, r1.w, c21.y
    dp3_pp r1.w, r2, r6
    max_pp r6.w, r1.w, c21.y
    dp3_pp r1.w, r2, -r3
    max_pp r2.x, r1.w, c21.y
    dp3_pp r1.w, c0, r6
    max_pp r2.y, r1.w, c21.y
    mul_pp r1.w, r4.x, r4.x
    mad_pp r2.z, r4.x, -r4.x, c21.x
    mad_pp r3.x, r2.x, r2.z, r1.w
    mad_pp r2.z, r5.y, r2.z, r1.w
    mul_pp r2.z, r2.z, r2.x
    mad r2.z, r5.y, r3.x, r2.z
    add r2.z, r2.z, c22.w
    rcp r2.z, r2.z
    add_pp r2.z, r2.z, r2.z
    mul_pp r3.x, r1.w, r1.w
    mul r3.y, r6.w, r6.w
    mad r6.xy, r1.w, r1.w, c23
    mad_pp r3.y, r3.y, r6.x, c21.x
    mul r3.y, r3.y, r3.y
    mad r3.y, r3.y, c23.z, c23.w
    rcp r3.y, r3.y
    mul_pp r3.x, r3.y, r3.x
    add_pp r3.y, -r5.y, c21.x
    mul_pp r3.z, r3.y, r3.y
    mul_pp r3.z, r3.z, r3.z
    mul_pp r3.y, r3.y, r3.z
    add_pp r2.x, -r2.x, c21.x
    mul_pp r3.z, r2.x, r2.x
    mul_pp r3.z, r3.z, r3.z
    mul_pp r2.x, r2.x, r3.z
    mul_pp r3.z, r2.y, r2.y
    dp2add_pp r3.z, r3.z, r4.x, c24.x
    mad_pp r3.y, r3.z, r3.y, c21.x
    mad_pp r3.z, r3.z, r2.x, c21.x
    mul_pp r3.y, r3.z, r3.y
    mul r2.z, r2.z, r3.x
    mul_pp r3.x, r2.z, c24.y
    mad r2.z, r2.z, -c24.y, c24.z
    rsq r3.z, r3.x
    rcp_pp r3.z, r3.z
    cmp_pp r2.z, r2.z, c24.w, r3.z
    cmp_pp r2.z, -r2.w, r2.z, r3.x
    mul_pp r2.z, r5.y, r2.z
    mul_pp r3.x, r5.y, r3.y
    mul_pp r1.w, r1.w, r4.x
    mad_pp r1.w, r1.w, -c25.x, c25.y
    rcp_pp r3.y, r6.y
    cmp_pp r1.w, -r2.w, r1.w, r3.y
    add_pp r0.w, -r0.w, c21.x
    add_sat_pp r0.w, r0.w, c17.x
    mul_pp r3.xyz, r3.x, c14
    mad_pp r3.xyz, r5.xzww, r3.w, r3
    mul_pp r5.xyz, r2.z, c14
    cmp_pp r5.xyz, r2.z, r5, c21.y
    add_pp r2.y, -r2.y, c21.x
    mul_pp r2.z, r2.y, r2.y
    mul_pp r2.z, r2.z, r2.z
    mul_pp r2.y, r2.y, r2.z
    lrp_pp r6.xyz, r2.y, c21.x, r0
    mul_pp r2.yzw, r5.xxyz, r6.xxyz
    mad_pp r1.xyz, r1, r3, r2.yzww
    mul_pp r2.yzw, r4, r1.w
    lrp_pp r3.xyz, r2.x, r0.w, r0
    mad_pp r0.xyz, r2.yzww, r3, r1
    texld r1, v0, s4
    mad_pp oC0.xyz, r1, c19, r0
    mov_pp oC0.w, c21.x

// approximately 186 instruction slots used (7 texture, 179 arithmetic)
"
}
SubProgram "d3d11 " {
// Stats: 144 math, 3 textures, 4 branches
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" }
SetTexture 0 [_MainTex] 2D 2
SetTexture 1 [_OcclusionMap] 2D 3
SetTexture 2 [_EmissionMap] 2D 4
SetTexture 3 [unity_SpecCube0] CUBE 0
SetTexture 4 [unity_SpecCube1] CUBE 1
ConstBuffer "$Globals" 240
Vector 32 [unity_ColorSpaceDielectricSpec]
Vector 48 [unity_ColorSpaceLuminance]
Vector 96 [_LightColor0]
Vector 128 [_Color]
Float 200 [_Metallic]
Float 204 [_Glossiness]
Float 208 [_OcclusionStrength]
Vector 224 [_EmissionColor]
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
Vector 608 [unity_SHAr]
Vector 624 [unity_SHAg]
Vector 640 [unity_SHAb]
ConstBuffer "UnityReflectionProbes" 128
Vector 0 [unity_SpecCube0_BoxMax]
Vector 16 [unity_SpecCube0_BoxMin]
Vector 32 [unity_SpecCube0_ProbePosition]
Vector 48 [unity_SpecCube0_HDR]
Vector 64 [unity_SpecCube1_BoxMax]
Vector 80 [unity_SpecCube1_BoxMin]
Vector 96 [unity_SpecCube1_ProbePosition]
Vector 112 [unity_SpecCube1_HDR]
BindCB  "$Globals" 0
BindCB  "UnityLighting" 1
BindCB  "UnityReflectionProbes" 2
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
// TEXCOORD                 8   xyz         7     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer cb0[15], immediateIndexed
      dcl_constantbuffer cb1[41], immediateIndexed
      dcl_constantbuffer cb2[8], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 12
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyz, r0.xyzx, cb0[8].xyzx
   2: mad r0.xyz, cb0[8].xyzx, r0.xyzx, -cb0[2].xyzx
   3: mad r0.xyz, cb0[12].zzzz, r0.xyzx, cb0[2].xyzx
   4: mad r0.w, -cb0[12].z, cb0[2].w, cb0[2].w
   5: mul r1.xyz, r0.wwww, r1.xyzx
   6: dp3 r1.w, v5.xyzx, v5.xyzx
   7: rsq r1.w, r1.w
   8: mul r2.xyz, r1.wwww, v5.xyzx
   9: dp3 r1.w, v2.xyzx, v2.xyzx
  10: rsq r1.w, r1.w
  11: mul r3.xyz, r1.wwww, v2.xyzx
  12: sample r4.xyzw, v1.xyxx, t1.xyzw, s3
  13: add r3.w, -cb0[13].x, l(1.000000)
  14: mad r3.w, r4.y, cb0[13].x, r3.w
  15: add r4.x, -cb0[12].w, l(1.000000)
  16: dp3 r4.y, r3.xyzx, r2.xyzx
  17: add r4.y, r4.y, r4.y
  18: mad r4.yzw, r2.xxyz, -r4.yyyy, r3.xxyz
  19: mov r2.w, l(1.000000)
  20: dp4 r5.x, cb1[38].xyzw, r2.xyzw
  21: dp4 r5.y, cb1[39].xyzw, r2.xyzw
  22: dp4 r5.z, cb1[40].xyzw, r2.xyzw
  23: add r5.xyz, r5.xyzx, v6.xyzx
  24: max r5.xyz, r5.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  25: eq r2.w, cb0[3].w, l(0.000000)
  26: log r6.xyz, r5.xyzx
  27: mul r6.xyz, r6.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  28: exp r6.xyz, r6.xyzx
  29: mad r6.xyz, r6.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  30: max r6.xyz, r6.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  31: movc r5.xyz, r2.wwww, r6.xyzx, r5.xyzx
  32: lt r5.w, l(0.000000), cb2[2].w
  33: if_nz r5.w
  34:   dp3 r5.w, r4.yzwy, r4.yzwy
  35:   rsq r5.w, r5.w
  36:   mul r6.xyz, r4.yzwy, r5.wwww
  37:   add r7.xyz, -v7.xyzx, cb2[0].xyzx
  38:   div r7.xyz, r7.xyzx, r6.xyzx
  39:   add r8.xyz, -v7.xyzx, cb2[1].xyzx
  40:   div r8.xyz, r8.xyzx, r6.xyzx
  41:   lt r9.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r6.xyzx
  42:   movc r7.xyz, r9.xyzx, r7.xyzx, r8.xyzx
  43:   min r5.w, r7.y, r7.x
  44:   min r5.w, r7.z, r5.w
  45:   add r7.xyz, v7.xyzx, -cb2[2].xyzx
  46:   mad r6.xyz, r6.xyzx, r5.wwww, r7.xyzx
  47: else 
  48:   mov r6.xyz, r4.yzwy
  49: endif 
  50: mad r5.w, -r4.x, l(0.700000), l(1.700000)
  51: mul r5.w, r4.x, r5.w
  52: mul r5.w, r5.w, l(6.000000)
  53: sample_l r6.xyzw, r6.xyzx, t3.xyzw, s0, r5.w
  54: log r6.w, r6.w
  55: mul r6.w, r6.w, cb2[3].y
  56: exp r6.w, r6.w
  57: mul r6.w, r6.w, cb2[3].x
  58: mul r7.xyz, r6.xyzx, r6.wwww
  59: lt r7.w, cb2[1].w, l(0.999990)
  60: if_nz r7.w
  61:   lt r7.w, l(0.000000), cb2[6].w
  62:   if_nz r7.w
  63:     dp3 r7.w, r4.yzwy, r4.yzwy
  64:     rsq r7.w, r7.w
  65:     mul r8.xyz, r4.yzwy, r7.wwww
  66:     add r9.xyz, -v7.xyzx, cb2[4].xyzx
  67:     div r9.xyz, r9.xyzx, r8.xyzx
  68:     add r10.xyz, -v7.xyzx, cb2[5].xyzx
  69:     div r10.xyz, r10.xyzx, r8.xyzx
  70:     lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
  71:     movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
  72:     min r7.w, r9.y, r9.x
  73:     min r7.w, r9.z, r7.w
  74:     add r9.xyz, v7.xyzx, -cb2[6].xyzx
  75:     mad r4.yzw, r8.xxyz, r7.wwww, r9.xxyz
  76:   endif 
  77:   sample_l r8.xyzw, r4.yzwy, t4.xyzw, s1, r5.w
  78:   log r4.y, r8.w
  79:   mul r4.y, r4.y, cb2[7].y
  80:   exp r4.y, r4.y
  81:   mul r4.y, r4.y, cb2[7].x
  82:   mul r4.yzw, r8.xxyz, r4.yyyy
  83:   mad r6.xyz, r6.wwww, r6.xyzx, -r4.yzwy
  84:   mad r7.xyz, cb2[1].wwww, r6.xyzx, r4.yzwy
  85: endif 
  86: mul r4.yzw, r3.wwww, r7.xxyz
  87: mad r6.xyz, -v2.xyzx, r1.wwww, cb1[0].xyzx
  88: dp3 r1.w, r6.xyzx, r6.xyzx
  89: max r1.w, r1.w, l(0.001000)
  90: rsq r1.w, r1.w
  91: mul r6.xyz, r1.wwww, r6.xyzx
  92: dp3 r1.w, r2.xyzx, -r3.xyzx
  93: lt r5.w, r1.w, l(0.000000)
  94: add r1.w, -r1.w, l(0.000010)
  95: mad r7.xyz, -r3.xyzx, r1.wwww, r2.xyzx
  96: movc r2.xyz, r5.wwww, r7.xyzx, r2.xyzx
  97: dp3 r1.w, r2.xyzx, cb1[0].xyzx
  98: max r1.w, r1.w, l(0.000000)
  99: dp3 r5.w, r2.xyzx, r6.xyzx
 100: max r5.w, r5.w, l(0.000000)
 101: dp3 r2.x, r2.xyzx, -r3.xyzx
 102: dp3 r2.y, cb1[0].xyzx, r6.xyzx
 103: max r2.xy, r2.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
 104: mul r2.z, r4.x, r4.x
 105: mad r3.x, -r4.x, r4.x, l(1.000000)
 106: mad r3.y, r2.x, r3.x, r2.z
 107: mad r3.x, r1.w, r3.x, r2.z
 108: mul r3.x, r2.x, r3.x
 109: mad r3.x, r1.w, r3.y, r3.x
 110: add r3.x, r3.x, l(0.000010)
 111: div r3.x, l(2.000000), r3.x
 112: mul r3.y, r2.z, r2.z
 113: mul r3.z, r5.w, r5.w
 114: mad r6.xy, r2.zzzz, r2.zzzz, l(-1.000000, 1.000000, 0.000000, 0.000000)
 115: mad r3.z, r3.z, r6.x, l(1.000000)
 116: mul r5.w, r3.z, l(3.141593)
 117: mad r3.z, r5.w, r3.z, l(0.000000)
 118: div r3.y, r3.y, r3.z
 119: add r3.z, -r1.w, l(1.000000)
 120: mul r5.w, r3.z, r3.z
 121: mul r5.w, r5.w, r5.w
 122: mul r3.z, r3.z, r5.w
 123: add r2.x, -r2.x, l(1.000000)
 124: mul r5.w, r2.x, r2.x
 125: mul r5.w, r5.w, r5.w
 126: mul r2.x, r2.x, r5.w
 127: mul r5.w, r2.y, r2.y
 128: dp2 r5.w, r5.wwww, r4.xxxx
 129: add r5.w, r5.w, l(-0.500000)
 130: mad r3.z, r5.w, r3.z, l(1.000000)
 131: mad r5.w, r5.w, r2.x, l(1.000000)
 132: mul r3.z, r3.z, r5.w
 133: mul r3.x, r3.y, r3.x
 134: mul r3.x, r3.x, l(0.785398)
 135: max r3.y, r3.x, l(0.000100)
 136: sqrt r3.y, r3.y
 137: movc r3.x, r2.w, r3.y, r3.x
 138: mul r3.x, r1.w, r3.x
 139: max r3.x, r3.x, l(0.000000)
 140: mul r1.w, r1.w, r3.z
 141: mul r2.z, r2.z, r4.x
 142: mad r2.z, -r2.z, l(0.280000), l(1.000000)
 143: div r3.y, l(1.000000, 1.000000, 1.000000, 1.000000), r6.y
 144: movc r2.z, r2.w, r2.z, r3.y
 145: add r0.w, -r0.w, cb0[12].w
 146: add_sat r0.w, r0.w, l(1.000000)
 147: mul r6.xyz, r1.wwww, cb0[6].xyzx
 148: mad r3.yzw, r5.xxyz, r3.wwww, r6.xxyz
 149: mul r5.xyz, r3.xxxx, cb0[6].xyzx
 150: add r1.w, -r2.y, l(1.000000)
 151: mul r2.y, r1.w, r1.w
 152: mul r2.y, r2.y, r2.y
 153: mul r1.w, r1.w, r2.y
 154: add r6.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 155: mad r6.xyz, r6.xyzx, r1.wwww, r0.xyzx
 156: mul r5.xyz, r5.xyzx, r6.xyzx
 157: mad r1.xyz, r1.xyzx, r3.yzwy, r5.xyzx
 158: mul r2.yzw, r4.yyzw, r2.zzzz
 159: add r3.xyz, -r0.xyzx, r0.wwww
 160: mad r0.xyz, r2.xxxx, r3.xyzx, r0.xyzx
 161: mad r0.xyz, r2.yzwy, r0.xyzx, r1.xyzx
 162: sample r1.xyzw, v1.xyxx, t2.xyzw, s4
 163: mad o0.xyz, r1.xyzx, cb0[14].xyzx, r0.xyzx
 164: mov o0.w, l(1.000000)
 165: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" }
"// shader disassembly not supported on opengl"
}
SubProgram "d3d9 " {
// Stats: 168 math, 8 textures, 5 branches
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" }
Vector 15 [_Color]
Vector 19 [_EmissionColor]
Float 17 [_Glossiness]
Vector 14 [_LightColor0]
Float 16 [_Metallic]
Float 18 [_OcclusionStrength]
Vector 0 [_WorldSpaceLightPos0]
Vector 12 [unity_ColorSpaceDielectricSpec]
Vector 13 [unity_ColorSpaceLuminance]
Vector 3 [unity_SHAb]
Vector 2 [unity_SHAg]
Vector 1 [unity_SHAr]
Vector 4 [unity_SpecCube0_BoxMax]
Vector 5 [unity_SpecCube0_BoxMin]
Vector 7 [unity_SpecCube0_HDR]
Vector 6 [unity_SpecCube0_ProbePosition]
Vector 8 [unity_SpecCube1_BoxMax]
Vector 9 [unity_SpecCube1_BoxMin]
Vector 11 [unity_SpecCube1_HDR]
Vector 10 [unity_SpecCube1_ProbePosition]
SetTexture 0 [unity_SpecCube0] CUBE 0
SetTexture 1 [unity_SpecCube1] CUBE 1
SetTexture 2 [_MainTex] 2D 2
SetTexture 3 [_OcclusionMap] 2D 3
SetTexture 4 [_EmissionMap] 2D 4
SetTexture 5 [_ShadowMapTexture] 2D 5
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _Color;
//   float4 _EmissionColor;
//   sampler2D _EmissionMap;
//   float _Glossiness;
//   float4 _LightColor0;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D _OcclusionMap;
//   float _OcclusionStrength;
//   sampler2D _ShadowMapTexture;
//   float4 _WorldSpaceLightPos0;
//   float4 unity_ColorSpaceDielectricSpec;
//   float4 unity_ColorSpaceLuminance;
//   float4 unity_SHAb;
//   float4 unity_SHAg;
//   float4 unity_SHAr;
//   samplerCUBE unity_SpecCube0;
//   float4 unity_SpecCube0_BoxMax;
//   float4 unity_SpecCube0_BoxMin;
//   float4 unity_SpecCube0_HDR;
//   float4 unity_SpecCube0_ProbePosition;
//   samplerCUBE unity_SpecCube1;
//   float4 unity_SpecCube1_BoxMax;
//   float4 unity_SpecCube1_BoxMin;
//   float4 unity_SpecCube1_HDR;
//   float4 unity_SpecCube1_ProbePosition;
//
//
// Registers:
//
//   Name                           Reg   Size
//   ------------------------------ ----- ----
//   _WorldSpaceLightPos0           c0       1
//   unity_SHAr                     c1       1
//   unity_SHAg                     c2       1
//   unity_SHAb                     c3       1
//   unity_SpecCube0_BoxMax         c4       1
//   unity_SpecCube0_BoxMin         c5       1
//   unity_SpecCube0_ProbePosition  c6       1
//   unity_SpecCube0_HDR            c7       1
//   unity_SpecCube1_BoxMax         c8       1
//   unity_SpecCube1_BoxMin         c9       1
//   unity_SpecCube1_ProbePosition  c10      1
//   unity_SpecCube1_HDR            c11      1
//   unity_ColorSpaceDielectricSpec c12      1
//   unity_ColorSpaceLuminance      c13      1
//   _LightColor0                   c14      1
//   _Color                         c15      1
//   _Metallic                      c16      1
//   _Glossiness                    c17      1
//   _OcclusionStrength             c18      1
//   _EmissionColor                 c19      1
//   unity_SpecCube0                s0       1
//   unity_SpecCube1                s1       1
//   _MainTex                       s2       1
//   _OcclusionMap                  s3       1
//   _EmissionMap                   s4       1
//   _ShadowMapTexture              s5       1
//

    ps_3_0
    def c20, 1.05499995, -0.0549999997, 0.699999988, 1.70000005
    def c21, 1, 0, 0.416666657, 6
    def c22, 0.999989986, 0.00100000005, 31.622776, 9.99999975e-06
    def c23, -1, 1, 3.14159274, 1.00000001e-07
    def c24, -0.5, 0.785398185, 9.99999975e-05, 0.00999999978
    def c25, 0.280000001, 1, 0, 0
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord4_pp v2.xyz
    dcl_texcoord5_pp v3.xyz
    dcl_texcoord6 v4
    dcl_texcoord8 v5.xyz
    dcl_cube s0
    dcl_cube s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    dcl_2d s5
    texld r0, v0, s2
    mul_pp r1.xyz, r0, c15
    mov r2, c12
    mad_pp r0.xyz, c15, r0, -r2
    mad_pp r0.xyz, c16.x, r0, r2
    mad_pp r0.w, c16.x, -r2.w, r2.w
    mul_pp r1.xyz, r0.w, r1
    nrm_pp r2.xyz, v2
    dp3_pp r1.w, v1, v1
    rsq_pp r1.w, r1.w
    mul_pp r3.xyz, r1.w, v1
    texldp_pp r4, v4, s5
    texld_pp r5, v0, s3
    mov r6.xy, c21
    add_pp r3.w, r6.x, -c18.x
    mad_pp r3.w, r5.y, c18.x, r3.w
    add_pp r4.y, r6.x, -c17.x
    dp3_pp r4.z, r3, r2
    add_pp r4.z, r4.z, r4.z
    mad_pp r5.xyz, r2, -r4.z, r3
    mul_pp r4.xzw, r4.x, c14.xyyz
    mov r2.w, c21.x
    dp4_pp r7.x, c1, r2
    dp4_pp r7.y, c2, r2
    dp4_pp r7.z, c3, r2
    add_pp r6.xzw, r7.xyyz, v3.xyyz
    max_pp r7.xyz, r6.xzww, c21.y
    abs r2.w, c13.w
    log_pp r8.x, r7.x
    log_pp r8.y, r7.y
    log_pp r8.z, r7.z
    mul_pp r6.xzw, r8.xyyz, c21.z
    exp_pp r8.x, r6.x
    exp_pp r8.y, r6.z
    exp_pp r8.z, r6.w
    mad_pp r6.xzw, r8.xyyz, c20.x, c20.y
    max_pp r8.xyz, r6.xzww, c21.y
    cmp_pp r6.xzw, -r2.w, r8.xyyz, r7.xyyz
    if_lt -c6.w, r6.y
      nrm_pp r7.xyz, r5
      add r8.xyz, c4, -v5
      rcp r9.x, r7.x
      rcp r9.y, r7.y
      rcp r9.z, r7.z
      mul_pp r8.xyz, r8, r9
      add r10.xyz, c5, -v5
      mul_pp r9.xyz, r9, r10
      cmp_pp r8.xyz, -r7, r9, r8
      min_pp r5.w, r8.y, r8.x
      min_pp r7.w, r8.z, r5.w
      add r8.xyz, -c6, v5
      mad_pp r7.xyz, r7, r7.w, r8
    else
      mov_pp r7.xyz, r5
    endif
    mad_pp r5.w, r4.y, -c20.z, c20.w
    mul_pp r5.w, r4.y, r5.w
    mul_pp r7.w, r5.w, c21.w
    texldl_pp r8, r7, s0
    pow_pp r5.w, r8.w, c7.y
    mul_pp r5.w, r5.w, c7.x
    mul_pp r9.xyz, r8, r5.w
    mov r8.w, c5.w
    if_lt r8.w, c22.x
      if_lt -c10.w, r6.y
        nrm_pp r10.xyz, r5
        add r11.xyz, c8, -v5
        rcp r12.x, r10.x
        rcp r12.y, r10.y
        rcp r12.z, r10.z
        mul_pp r11.xyz, r11, r12
        add r13.xyz, c9, -v5
        mul_pp r12.xyz, r12, r13
        cmp_pp r11.xyz, -r10, r12, r11
        min_pp r6.y, r11.y, r11.x
        min_pp r8.w, r11.z, r6.y
        add r11.xyz, -c10, v5
        mad_pp r7.xyz, r10, r8.w, r11
      else
        mov_pp r7.xyz, r5
      endif
      texldl_pp r7, r7, s1
      pow_pp r5.x, r7.w, c11.y
      mul_pp r5.x, r5.x, c11.x
      mul_pp r5.xyz, r7, r5.x
      mad r7.xyz, r5.w, r8, -r5
      mad_pp r9.xyz, c5.w, r7, r5
    endif
    mul_pp r5.xyz, r3.w, r9
    mad_pp r7.xyz, v1, -r1.w, c0
    dp3_pp r1.w, r7, r7
    add r5.w, -r1.w, c22.y
    rsq_pp r1.w, r1.w
    cmp_pp r1.w, r5.w, c22.z, r1.w
    mul_pp r7.xyz, r1.w, r7
    dp3_pp r1.w, r2, -r3
    add r5.w, -r1.w, c22.w
    mad_pp r8.xyz, -r3, r5.w, r2
    cmp_pp r2.xyz, r1.w, r2, r8
    dp3_pp r1.w, r2, c0
    max_pp r5.w, r1.w, c21.y
    dp3_pp r1.w, r2, r7
    max_pp r6.y, r1.w, c21.y
    dp3_pp r1.w, r2, -r3
    max_pp r2.x, r1.w, c21.y
    dp3_pp r1.w, c0, r7
    max_pp r2.y, r1.w, c21.y
    mul_pp r1.w, r4.y, r4.y
    mad_pp r2.z, r4.y, -r4.y, c21.x
    mad_pp r3.x, r2.x, r2.z, r1.w
    mad_pp r2.z, r5.w, r2.z, r1.w
    mul_pp r2.z, r2.z, r2.x
    mad r2.z, r5.w, r3.x, r2.z
    add r2.z, r2.z, c22.w
    rcp r2.z, r2.z
    add_pp r2.z, r2.z, r2.z
    mul_pp r3.x, r1.w, r1.w
    mul r3.y, r6.y, r6.y
    mad r7.xy, r1.w, r1.w, c23
    mad_pp r3.y, r3.y, r7.x, c21.x
    mul r3.y, r3.y, r3.y
    mad r3.y, r3.y, c23.z, c23.w
    rcp r3.y, r3.y
    mul_pp r3.x, r3.y, r3.x
    add_pp r3.y, -r5.w, c21.x
    mul_pp r3.z, r3.y, r3.y
    mul_pp r3.z, r3.z, r3.z
    mul_pp r3.y, r3.y, r3.z
    add_pp r2.x, -r2.x, c21.x
    mul_pp r3.z, r2.x, r2.x
    mul_pp r3.z, r3.z, r3.z
    mul_pp r2.x, r2.x, r3.z
    dp2add_pp r3.z, r2.y, r2.y, c21.y
    mad_pp r3.z, r3.z, r4.y, c24.x
    mad_pp r3.y, r3.z, r3.y, c21.x
    mad_pp r3.z, r3.z, r2.x, c21.x
    mul_pp r3.y, r3.z, r3.y
    mul r2.z, r2.z, r3.x
    mul_pp r3.x, r2.z, c24.y
    mad r2.z, r2.z, -c24.y, c24.z
    rsq r3.z, r3.x
    rcp_pp r3.z, r3.z
    cmp_pp r2.z, r2.z, c24.w, r3.z
    cmp_pp r2.z, -r2.w, r2.z, r3.x
    mul_pp r2.z, r5.w, r2.z
    max_pp r3.x, r2.z, c21.y
    mul_pp r2.z, r5.w, r3.y
    mul_pp r1.w, r1.w, r4.y
    mad_pp r1.w, r1.w, -c25.x, c25.y
    rcp_pp r3.y, r7.y
    cmp_pp r1.w, -r2.w, r1.w, r3.y
    add_pp r0.w, -r0.w, c21.x
    add_sat_pp r0.w, r0.w, c17.x
    mul_pp r7.xyz, r2.z, r4.xzww
    mad_pp r3.yzw, r6.xxzw, r3.w, r7.xxyz
    mul_pp r4.xyz, r4.xzww, r3.x
    add_pp r2.y, -r2.y, c21.x
    mul_pp r2.z, r2.y, r2.y
    mul_pp r2.z, r2.z, r2.z
    mul_pp r2.y, r2.y, r2.z
    lrp_pp r6.xyz, r2.y, c21.x, r0
    mul_pp r2.yzw, r4.xxyz, r6.xxyz
    mad_pp r1.xyz, r1, r3.yzww, r2.yzww
    mul_pp r2.yzw, r5.xxyz, r1.w
    lrp_pp r3.xyz, r2.x, r0.w, r0
    mad_pp r0.xyz, r2.yzww, r3, r1
    texld r1, v0, s4
    mad_pp oC0.xyz, r1, c19, r0
    mov_pp oC0.w, c21.x

// approximately 188 instruction slots used (8 texture, 180 arithmetic)
"
}
SubProgram "d3d11 " {
// Stats: 146 math, 4 textures, 4 branches
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" }
SetTexture 0 [_MainTex] 2D 2
SetTexture 1 [_ShadowMapTexture] 2D 5
SetTexture 2 [_OcclusionMap] 2D 3
SetTexture 3 [_EmissionMap] 2D 4
SetTexture 4 [unity_SpecCube0] CUBE 0
SetTexture 5 [unity_SpecCube1] CUBE 1
ConstBuffer "$Globals" 240
Vector 32 [unity_ColorSpaceDielectricSpec]
Vector 48 [unity_ColorSpaceLuminance]
Vector 96 [_LightColor0]
Vector 128 [_Color]
Float 200 [_Metallic]
Float 204 [_Glossiness]
Float 208 [_OcclusionStrength]
Vector 224 [_EmissionColor]
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
Vector 608 [unity_SHAr]
Vector 624 [unity_SHAg]
Vector 640 [unity_SHAb]
ConstBuffer "UnityReflectionProbes" 128
Vector 0 [unity_SpecCube0_BoxMax]
Vector 16 [unity_SpecCube0_BoxMin]
Vector 32 [unity_SpecCube0_ProbePosition]
Vector 48 [unity_SpecCube0_HDR]
Vector 64 [unity_SpecCube1_BoxMax]
Vector 80 [unity_SpecCube1_BoxMin]
Vector 96 [unity_SpecCube1_ProbePosition]
Vector 112 [unity_SpecCube1_HDR]
BindCB  "$Globals" 0
BindCB  "UnityLighting" 1
BindCB  "UnityReflectionProbes" 2
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xy w
// TEXCOORD                 8   xyz         8     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer cb0[15], immediateIndexed
      dcl_constantbuffer cb1[41], immediateIndexed
      dcl_constantbuffer cb2[8], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_resource_texturecube (float,float,float,float) t5
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.xyw
      dcl_input_ps linear v8.xyz
      dcl_output o0.xyzw
      dcl_temps 13
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyz, r0.xyzx, cb0[8].xyzx
   2: mad r0.xyz, cb0[8].xyzx, r0.xyzx, -cb0[2].xyzx
   3: mad r0.xyz, cb0[12].zzzz, r0.xyzx, cb0[2].xyzx
   4: mad r0.w, -cb0[12].z, cb0[2].w, cb0[2].w
   5: mul r1.xyz, r0.wwww, r1.xyzx
   6: dp3 r1.w, v5.xyzx, v5.xyzx
   7: rsq r1.w, r1.w
   8: mul r2.xyz, r1.wwww, v5.xyzx
   9: dp3 r1.w, v2.xyzx, v2.xyzx
  10: rsq r1.w, r1.w
  11: mul r3.xyz, r1.wwww, v2.xyzx
  12: div r4.xy, v7.xyxx, v7.wwww
  13: sample r4.xyzw, r4.xyxx, t1.xyzw, s5
  14: sample r5.xyzw, v1.xyxx, t2.xyzw, s3
  15: add r3.w, -cb0[13].x, l(1.000000)
  16: mad r3.w, r5.y, cb0[13].x, r3.w
  17: add r4.y, -cb0[12].w, l(1.000000)
  18: dp3 r4.z, r3.xyzx, r2.xyzx
  19: add r4.z, r4.z, r4.z
  20: mad r5.xyz, r2.xyzx, -r4.zzzz, r3.xyzx
  21: mul r4.xzw, r4.xxxx, cb0[6].xxyz
  22: mov r2.w, l(1.000000)
  23: dp4 r6.x, cb1[38].xyzw, r2.xyzw
  24: dp4 r6.y, cb1[39].xyzw, r2.xyzw
  25: dp4 r6.z, cb1[40].xyzw, r2.xyzw
  26: add r6.xyz, r6.xyzx, v6.xyzx
  27: max r6.xyz, r6.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  28: eq r2.w, cb0[3].w, l(0.000000)
  29: log r7.xyz, r6.xyzx
  30: mul r7.xyz, r7.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  31: exp r7.xyz, r7.xyzx
  32: mad r7.xyz, r7.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  33: max r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  34: movc r6.xyz, r2.wwww, r7.xyzx, r6.xyzx
  35: lt r5.w, l(0.000000), cb2[2].w
  36: if_nz r5.w
  37:   dp3 r5.w, r5.xyzx, r5.xyzx
  38:   rsq r5.w, r5.w
  39:   mul r7.xyz, r5.wwww, r5.xyzx
  40:   add r8.xyz, -v8.xyzx, cb2[0].xyzx
  41:   div r8.xyz, r8.xyzx, r7.xyzx
  42:   add r9.xyz, -v8.xyzx, cb2[1].xyzx
  43:   div r9.xyz, r9.xyzx, r7.xyzx
  44:   lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
  45:   movc r8.xyz, r10.xyzx, r8.xyzx, r9.xyzx
  46:   min r5.w, r8.y, r8.x
  47:   min r5.w, r8.z, r5.w
  48:   add r8.xyz, v8.xyzx, -cb2[2].xyzx
  49:   mad r7.xyz, r7.xyzx, r5.wwww, r8.xyzx
  50: else 
  51:   mov r7.xyz, r5.xyzx
  52: endif 
  53: mad r5.w, -r4.y, l(0.700000), l(1.700000)
  54: mul r5.w, r4.y, r5.w
  55: mul r5.w, r5.w, l(6.000000)
  56: sample_l r7.xyzw, r7.xyzx, t4.xyzw, s0, r5.w
  57: log r6.w, r7.w
  58: mul r6.w, r6.w, cb2[3].y
  59: exp r6.w, r6.w
  60: mul r6.w, r6.w, cb2[3].x
  61: mul r8.xyz, r7.xyzx, r6.wwww
  62: lt r7.w, cb2[1].w, l(0.999990)
  63: if_nz r7.w
  64:   lt r7.w, l(0.000000), cb2[6].w
  65:   if_nz r7.w
  66:     dp3 r7.w, r5.xyzx, r5.xyzx
  67:     rsq r7.w, r7.w
  68:     mul r9.xyz, r5.xyzx, r7.wwww
  69:     add r10.xyz, -v8.xyzx, cb2[4].xyzx
  70:     div r10.xyz, r10.xyzx, r9.xyzx
  71:     add r11.xyz, -v8.xyzx, cb2[5].xyzx
  72:     div r11.xyz, r11.xyzx, r9.xyzx
  73:     lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
  74:     movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
  75:     min r7.w, r10.y, r10.x
  76:     min r7.w, r10.z, r7.w
  77:     add r10.xyz, v8.xyzx, -cb2[6].xyzx
  78:     mad r5.xyz, r9.xyzx, r7.wwww, r10.xyzx
  79:   endif 
  80:   sample_l r5.xyzw, r5.xyzx, t5.xyzw, s1, r5.w
  81:   log r5.w, r5.w
  82:   mul r5.w, r5.w, cb2[7].y
  83:   exp r5.w, r5.w
  84:   mul r5.w, r5.w, cb2[7].x
  85:   mul r5.xyz, r5.xyzx, r5.wwww
  86:   mad r7.xyz, r6.wwww, r7.xyzx, -r5.xyzx
  87:   mad r8.xyz, cb2[1].wwww, r7.xyzx, r5.xyzx
  88: endif 
  89: mul r5.xyz, r3.wwww, r8.xyzx
  90: mad r7.xyz, -v2.xyzx, r1.wwww, cb1[0].xyzx
  91: dp3 r1.w, r7.xyzx, r7.xyzx
  92: max r1.w, r1.w, l(0.001000)
  93: rsq r1.w, r1.w
  94: mul r7.xyz, r1.wwww, r7.xyzx
  95: dp3 r1.w, r2.xyzx, -r3.xyzx
  96: lt r5.w, r1.w, l(0.000000)
  97: add r1.w, -r1.w, l(0.000010)
  98: mad r8.xyz, -r3.xyzx, r1.wwww, r2.xyzx
  99: movc r2.xyz, r5.wwww, r8.xyzx, r2.xyzx
 100: dp3 r1.w, r2.xyzx, cb1[0].xyzx
 101: max r1.w, r1.w, l(0.000000)
 102: dp3 r5.w, r2.xyzx, r7.xyzx
 103: max r5.w, r5.w, l(0.000000)
 104: dp3 r2.x, r2.xyzx, -r3.xyzx
 105: dp3 r2.y, cb1[0].xyzx, r7.xyzx
 106: max r2.xy, r2.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
 107: mul r2.z, r4.y, r4.y
 108: mad r3.x, -r4.y, r4.y, l(1.000000)
 109: mad r3.y, r2.x, r3.x, r2.z
 110: mad r3.x, r1.w, r3.x, r2.z
 111: mul r3.x, r2.x, r3.x
 112: mad r3.x, r1.w, r3.y, r3.x
 113: add r3.x, r3.x, l(0.000010)
 114: div r3.x, l(2.000000), r3.x
 115: mul r3.y, r2.z, r2.z
 116: mul r3.z, r5.w, r5.w
 117: mad r7.xy, r2.zzzz, r2.zzzz, l(-1.000000, 1.000000, 0.000000, 0.000000)
 118: mad r3.z, r3.z, r7.x, l(1.000000)
 119: mul r3.z, r3.z, r3.z
 120: mad r3.z, r3.z, l(3.141593), l(0.000000)
 121: div r3.y, r3.y, r3.z
 122: add r3.z, -r1.w, l(1.000000)
 123: mul r5.w, r3.z, r3.z
 124: mul r5.w, r5.w, r5.w
 125: mul r3.z, r3.z, r5.w
 126: add r2.x, -r2.x, l(1.000000)
 127: mul r5.w, r2.x, r2.x
 128: mul r5.w, r5.w, r5.w
 129: mul r2.x, r2.x, r5.w
 130: mul r5.w, r2.y, r2.y
 131: dp2 r5.w, r5.wwww, r4.yyyy
 132: add r5.w, r5.w, l(-0.500000)
 133: mad r3.z, r5.w, r3.z, l(1.000000)
 134: mad r5.w, r5.w, r2.x, l(1.000000)
 135: mul r3.z, r3.z, r5.w
 136: mul r3.x, r3.y, r3.x
 137: mul r3.x, r3.x, l(0.785398)
 138: max r3.y, r3.x, l(0.000100)
 139: sqrt r3.y, r3.y
 140: movc r3.x, r2.w, r3.y, r3.x
 141: mul r3.x, r1.w, r3.x
 142: max r3.x, r3.x, l(0.000000)
 143: mul r1.w, r1.w, r3.z
 144: mul r2.z, r2.z, r4.y
 145: mad r2.z, -r2.z, l(0.280000), l(1.000000)
 146: div r3.y, l(1.000000, 1.000000, 1.000000, 1.000000), r7.y
 147: movc r2.z, r2.w, r2.z, r3.y
 148: add r0.w, -r0.w, cb0[12].w
 149: add_sat r0.w, r0.w, l(1.000000)
 150: mul r7.xyz, r1.wwww, r4.xzwx
 151: mad r3.yzw, r6.xxyz, r3.wwww, r7.xxyz
 152: mul r4.xyz, r4.xzwx, r3.xxxx
 153: add r1.w, -r2.y, l(1.000000)
 154: mul r2.y, r1.w, r1.w
 155: mul r2.y, r2.y, r2.y
 156: mul r1.w, r1.w, r2.y
 157: add r6.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 158: mad r6.xyz, r6.xyzx, r1.wwww, r0.xyzx
 159: mul r4.xyz, r4.xyzx, r6.xyzx
 160: mad r1.xyz, r1.xyzx, r3.yzwy, r4.xyzx
 161: mul r2.yzw, r5.xxyz, r2.zzzz
 162: add r3.xyz, -r0.xyzx, r0.wwww
 163: mad r0.xyz, r2.xxxx, r3.xyzx, r0.xyzx
 164: mad r0.xyz, r2.yzwy, r0.xyzx, r1.xyzx
 165: sample r1.xyzw, v1.xyxx, t3.xyzw, s4
 166: mad o0.xyz, r1.xyzx, cb0[14].xyzx, r0.xyzx
 167: mov o0.w, l(1.000000)
 168: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_ALPHABLEND_ON" }
"// shader disassembly not supported on opengl"
}
SubProgram "d3d9 " {
// Stats: 166 math, 6 textures, 5 branches
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_ALPHABLEND_ON" }
Vector 15 [_Color]
Float 17 [_Glossiness]
Vector 14 [_LightColor0]
Float 16 [_Metallic]
Float 18 [_OcclusionStrength]
Vector 0 [_WorldSpaceLightPos0]
Vector 12 [unity_ColorSpaceDielectricSpec]
Vector 13 [unity_ColorSpaceLuminance]
Vector 3 [unity_SHAb]
Vector 2 [unity_SHAg]
Vector 1 [unity_SHAr]
Vector 4 [unity_SpecCube0_BoxMax]
Vector 5 [unity_SpecCube0_BoxMin]
Vector 7 [unity_SpecCube0_HDR]
Vector 6 [unity_SpecCube0_ProbePosition]
Vector 8 [unity_SpecCube1_BoxMax]
Vector 9 [unity_SpecCube1_BoxMin]
Vector 11 [unity_SpecCube1_HDR]
Vector 10 [unity_SpecCube1_ProbePosition]
SetTexture 0 [unity_SpecCube0] CUBE 0
SetTexture 1 [unity_SpecCube1] CUBE 1
SetTexture 2 [_MainTex] 2D 2
SetTexture 3 [_OcclusionMap] 2D 3
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D _OcclusionMap;
//   float _OcclusionStrength;
//   float4 _WorldSpaceLightPos0;
//   float4 unity_ColorSpaceDielectricSpec;
//   float4 unity_ColorSpaceLuminance;
//   float4 unity_SHAb;
//   float4 unity_SHAg;
//   float4 unity_SHAr;
//   samplerCUBE unity_SpecCube0;
//   float4 unity_SpecCube0_BoxMax;
//   float4 unity_SpecCube0_BoxMin;
//   float4 unity_SpecCube0_HDR;
//   float4 unity_SpecCube0_ProbePosition;
//   samplerCUBE unity_SpecCube1;
//   float4 unity_SpecCube1_BoxMax;
//   float4 unity_SpecCube1_BoxMin;
//   float4 unity_SpecCube1_HDR;
//   float4 unity_SpecCube1_ProbePosition;
//
//
// Registers:
//
//   Name                           Reg   Size
//   ------------------------------ ----- ----
//   _WorldSpaceLightPos0           c0       1
//   unity_SHAr                     c1       1
//   unity_SHAg                     c2       1
//   unity_SHAb                     c3       1
//   unity_SpecCube0_BoxMax         c4       1
//   unity_SpecCube0_BoxMin         c5       1
//   unity_SpecCube0_ProbePosition  c6       1
//   unity_SpecCube0_HDR            c7       1
//   unity_SpecCube1_BoxMax         c8       1
//   unity_SpecCube1_BoxMin         c9       1
//   unity_SpecCube1_ProbePosition  c10      1
//   unity_SpecCube1_HDR            c11      1
//   unity_ColorSpaceDielectricSpec c12      1
//   unity_ColorSpaceLuminance      c13      1
//   _LightColor0                   c14      1
//   _Color                         c15      1
//   _Metallic                      c16      1
//   _Glossiness                    c17      1
//   _OcclusionStrength             c18      1
//   unity_SpecCube0                s0       1
//   unity_SpecCube1                s1       1
//   _MainTex                       s2       1
//   _OcclusionMap                  s3       1
//

    ps_3_0
    def c19, 1.05499995, -0.0549999997, 0.699999988, 1.70000005
    def c20, 1, 0, 0.416666657, 6
    def c21, 0.999989986, 0.00100000005, 31.622776, 9.99999975e-06
    def c22, -1, 1, 3.14159274, 1.00000001e-07
    def c23, -0.5, 0.785398185, 9.99999975e-05, 0.00999999978
    def c24, 0.280000001, 1, 0, 0
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord4_pp v2.xyz
    dcl_texcoord5_pp v3.xyz
    dcl_texcoord8 v4.xyz
    dcl_cube s0
    dcl_cube s1
    dcl_2d s2
    dcl_2d s3
    texld r0, v0, s2
    mul_pp oC0.w, r0.w, c15.w
    mul_pp r1.xyz, r0, c15
    mov r2, c12
    mad_pp r0.xyz, c15, r0, -r2
    mad_pp r0.xyz, c16.x, r0, r2
    mad_pp r0.w, c16.x, -r2.w, r2.w
    mul_pp r1.xyz, r0.w, r1
    nrm_pp r2.xyz, v2
    dp3_pp r1.w, v1, v1
    rsq_pp r1.w, r1.w
    mul_pp r3.xyz, r1.w, v1
    texld_pp r4, v0, s3
    mov r5.xy, c20
    add_pp r3.w, r5.x, -c18.x
    mad_pp r3.w, r4.y, c18.x, r3.w
    add_pp r4.x, r5.x, -c17.x
    dp3_pp r4.y, r3, r2
    add_pp r4.y, r4.y, r4.y
    mad_pp r4.yzw, r2.xxyz, -r4.y, r3.xxyz
    mov r2.w, c20.x
    dp4_pp r6.x, c1, r2
    dp4_pp r6.y, c2, r2
    dp4_pp r6.z, c3, r2
    add_pp r5.xzw, r6.xyyz, v3.xyyz
    max_pp r6.xyz, r5.xzww, c20.y
    abs r2.w, c13.w
    log_pp r7.x, r6.x
    log_pp r7.y, r6.y
    log_pp r7.z, r6.z
    mul_pp r5.xzw, r7.xyyz, c20.z
    exp_pp r7.x, r5.x
    exp_pp r7.y, r5.z
    exp_pp r7.z, r5.w
    mad_pp r5.xzw, r7.xyyz, c19.x, c19.y
    max_pp r7.xyz, r5.xzww, c20.y
    cmp_pp r5.xzw, -r2.w, r7.xyyz, r6.xyyz
    if_lt -c6.w, r5.y
      nrm_pp r6.xyz, r4.yzww
      add r7.xyz, c4, -v4
      rcp r8.x, r6.x
      rcp r8.y, r6.y
      rcp r8.z, r6.z
      mul_pp r7.xyz, r7, r8
      add r9.xyz, c5, -v4
      mul_pp r8.xyz, r8, r9
      cmp_pp r7.xyz, -r6, r8, r7
      min_pp r6.w, r7.y, r7.x
      min_pp r8.x, r7.z, r6.w
      add r7.xyz, -c6, v4
      mad_pp r6.xyz, r6, r8.x, r7
    else
      mov_pp r6.xyz, r4.yzww
    endif
    mad_pp r7.x, r4.x, -c19.z, c19.w
    mul_pp r7.x, r4.x, r7.x
    mul_pp r6.w, r7.x, c20.w
    texldl_pp r7, r6, s0
    pow_pp r8.x, r7.w, c7.y
    mul_pp r7.w, r8.x, c7.x
    mul_pp r8.xyz, r7, r7.w
    mov r8.w, c5.w
    if_lt r8.w, c21.x
      if_lt -c10.w, r5.y
        nrm_pp r9.xyz, r4.yzww
        add r10.xyz, c8, -v4
        rcp r11.x, r9.x
        rcp r11.y, r9.y
        rcp r11.z, r9.z
        mul_pp r10.xyz, r10, r11
        add r12.xyz, c9, -v4
        mul_pp r11.xyz, r11, r12
        cmp_pp r10.xyz, -r9, r11, r10
        min_pp r5.y, r10.y, r10.x
        min_pp r8.w, r10.z, r5.y
        add r10.xyz, -c10, v4
        mad_pp r6.xyz, r9, r8.w, r10
      else
        mov_pp r6.xyz, r4.yzww
      endif
      texldl_pp r6, r6, s1
      pow_pp r4.y, r6.w, c11.y
      mul_pp r4.y, r4.y, c11.x
      mul_pp r4.yzw, r6.xxyz, r4.y
      mad r6.xyz, r7.w, r7, -r4.yzww
      mad_pp r8.xyz, c5.w, r6, r4.yzww
    endif
    mul_pp r4.yzw, r3.w, r8.xxyz
    mad_pp r6.xyz, v1, -r1.w, c0
    dp3_pp r1.w, r6, r6
    add r5.y, -r1.w, c21.y
    rsq_pp r1.w, r1.w
    cmp_pp r1.w, r5.y, c21.z, r1.w
    mul_pp r6.xyz, r1.w, r6
    dp3_pp r1.w, r2, -r3
    add r5.y, -r1.w, c21.w
    mad_pp r7.xyz, -r3, r5.y, r2
    cmp_pp r2.xyz, r1.w, r2, r7
    dp3_pp r1.w, r2, c0
    max_pp r5.y, r1.w, c20.y
    dp3_pp r1.w, r2, r6
    max_pp r6.w, r1.w, c20.y
    dp3_pp r1.w, r2, -r3
    max_pp r2.x, r1.w, c20.y
    dp3_pp r1.w, c0, r6
    max_pp r2.y, r1.w, c20.y
    mul_pp r1.w, r4.x, r4.x
    mad_pp r2.z, r4.x, -r4.x, c20.x
    mad_pp r3.x, r2.x, r2.z, r1.w
    mad_pp r2.z, r5.y, r2.z, r1.w
    mul_pp r2.z, r2.z, r2.x
    mad r2.z, r5.y, r3.x, r2.z
    add r2.z, r2.z, c21.w
    rcp r2.z, r2.z
    add_pp r2.z, r2.z, r2.z
    mul_pp r3.x, r1.w, r1.w
    mul r3.y, r6.w, r6.w
    mad r6.xy, r1.w, r1.w, c22
    mad_pp r3.y, r3.y, r6.x, c20.x
    mul r3.y, r3.y, r3.y
    mad r3.y, r3.y, c22.z, c22.w
    rcp r3.y, r3.y
    mul_pp r3.x, r3.y, r3.x
    add_pp r3.y, -r5.y, c20.x
    mul_pp r3.z, r3.y, r3.y
    mul_pp r3.z, r3.z, r3.z
    mul_pp r3.y, r3.y, r3.z
    add_pp r2.x, -r2.x, c20.x
    mul_pp r3.z, r2.x, r2.x
    mul_pp r3.z, r3.z, r3.z
    mul_pp r2.x, r2.x, r3.z
    mul_pp r3.z, r2.y, r2.y
    dp2add_pp r3.z, r3.z, r4.x, c23.x
    mad_pp r3.y, r3.z, r3.y, c20.x
    mad_pp r3.z, r3.z, r2.x, c20.x
    mul_pp r3.y, r3.z, r3.y
    mul r2.z, r2.z, r3.x
    mul_pp r3.x, r2.z, c23.y
    mad r2.z, r2.z, -c23.y, c23.z
    rsq r3.z, r3.x
    rcp_pp r3.z, r3.z
    cmp_pp r2.z, r2.z, c23.w, r3.z
    cmp_pp r2.z, -r2.w, r2.z, r3.x
    mul_pp r2.z, r5.y, r2.z
    mul_pp r3.x, r5.y, r3.y
    mul_pp r1.w, r1.w, r4.x
    mad_pp r1.w, r1.w, -c24.x, c24.y
    rcp_pp r3.y, r6.y
    cmp_pp r1.w, -r2.w, r1.w, r3.y
    add_pp r0.w, -r0.w, c20.x
    add_sat_pp r0.w, r0.w, c17.x
    mul_pp r3.xyz, r3.x, c14
    mad_pp r3.xyz, r5.xzww, r3.w, r3
    mul_pp r5.xyz, r2.z, c14
    cmp_pp r5.xyz, r2.z, r5, c20.y
    add_pp r2.y, -r2.y, c20.x
    mul_pp r2.z, r2.y, r2.y
    mul_pp r2.z, r2.z, r2.z
    mul_pp r2.y, r2.y, r2.z
    lrp_pp r6.xyz, r2.y, c20.x, r0
    mul_pp r2.yzw, r5.xxyz, r6.xxyz
    mad_pp r1.xyz, r1, r3, r2.yzww
    mul_pp r2.yzw, r4, r1.w
    lrp_pp r3.xyz, r2.x, r0.w, r0
    mad_pp oC0.xyz, r2.yzww, r3, r1

// approximately 184 instruction slots used (6 texture, 178 arithmetic)
"
}
SubProgram "d3d11 " {
// Stats: 144 math, 2 textures, 4 branches
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_ALPHABLEND_ON" }
SetTexture 0 [_MainTex] 2D 2
SetTexture 1 [_OcclusionMap] 2D 3
SetTexture 2 [unity_SpecCube0] CUBE 0
SetTexture 3 [unity_SpecCube1] CUBE 1
ConstBuffer "$Globals" 240
Vector 32 [unity_ColorSpaceDielectricSpec]
Vector 48 [unity_ColorSpaceLuminance]
Vector 96 [_LightColor0]
Vector 128 [_Color]
Float 200 [_Metallic]
Float 204 [_Glossiness]
Float 208 [_OcclusionStrength]
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
Vector 608 [unity_SHAr]
Vector 624 [unity_SHAg]
Vector 640 [unity_SHAb]
ConstBuffer "UnityReflectionProbes" 128
Vector 0 [unity_SpecCube0_BoxMax]
Vector 16 [unity_SpecCube0_BoxMin]
Vector 32 [unity_SpecCube0_ProbePosition]
Vector 48 [unity_SpecCube0_HDR]
Vector 64 [unity_SpecCube1_BoxMax]
Vector 80 [unity_SpecCube1_BoxMin]
Vector 96 [unity_SpecCube1_ProbePosition]
Vector 112 [unity_SpecCube1_HDR]
BindCB  "$Globals" 0
BindCB  "UnityLighting" 1
BindCB  "UnityReflectionProbes" 2
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
// TEXCOORD                 8   xyz         7     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer cb0[14], immediateIndexed
      dcl_constantbuffer cb1[41], immediateIndexed
      dcl_constantbuffer cb2[8], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texturecube (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 12
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul o0.w, r0.w, cb0[8].w
   2: mul r1.xyz, r0.xyzx, cb0[8].xyzx
   3: mad r0.xyz, cb0[8].xyzx, r0.xyzx, -cb0[2].xyzx
   4: mad r0.xyz, cb0[12].zzzz, r0.xyzx, cb0[2].xyzx
   5: mad r0.w, -cb0[12].z, cb0[2].w, cb0[2].w
   6: mul r1.xyz, r0.wwww, r1.xyzx
   7: dp3 r1.w, v5.xyzx, v5.xyzx
   8: rsq r1.w, r1.w
   9: mul r2.xyz, r1.wwww, v5.xyzx
  10: dp3 r1.w, v2.xyzx, v2.xyzx
  11: rsq r1.w, r1.w
  12: mul r3.xyz, r1.wwww, v2.xyzx
  13: sample r4.xyzw, v1.xyxx, t1.xyzw, s3
  14: add r3.w, -cb0[13].x, l(1.000000)
  15: mad r3.w, r4.y, cb0[13].x, r3.w
  16: add r4.x, -cb0[12].w, l(1.000000)
  17: dp3 r4.y, r3.xyzx, r2.xyzx
  18: add r4.y, r4.y, r4.y
  19: mad r4.yzw, r2.xxyz, -r4.yyyy, r3.xxyz
  20: mov r2.w, l(1.000000)
  21: dp4 r5.x, cb1[38].xyzw, r2.xyzw
  22: dp4 r5.y, cb1[39].xyzw, r2.xyzw
  23: dp4 r5.z, cb1[40].xyzw, r2.xyzw
  24: add r5.xyz, r5.xyzx, v6.xyzx
  25: max r5.xyz, r5.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  26: eq r2.w, cb0[3].w, l(0.000000)
  27: log r6.xyz, r5.xyzx
  28: mul r6.xyz, r6.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  29: exp r6.xyz, r6.xyzx
  30: mad r6.xyz, r6.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  31: max r6.xyz, r6.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  32: movc r5.xyz, r2.wwww, r6.xyzx, r5.xyzx
  33: lt r5.w, l(0.000000), cb2[2].w
  34: if_nz r5.w
  35:   dp3 r5.w, r4.yzwy, r4.yzwy
  36:   rsq r5.w, r5.w
  37:   mul r6.xyz, r4.yzwy, r5.wwww
  38:   add r7.xyz, -v7.xyzx, cb2[0].xyzx
  39:   div r7.xyz, r7.xyzx, r6.xyzx
  40:   add r8.xyz, -v7.xyzx, cb2[1].xyzx
  41:   div r8.xyz, r8.xyzx, r6.xyzx
  42:   lt r9.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r6.xyzx
  43:   movc r7.xyz, r9.xyzx, r7.xyzx, r8.xyzx
  44:   min r5.w, r7.y, r7.x
  45:   min r5.w, r7.z, r5.w
  46:   add r7.xyz, v7.xyzx, -cb2[2].xyzx
  47:   mad r6.xyz, r6.xyzx, r5.wwww, r7.xyzx
  48: else 
  49:   mov r6.xyz, r4.yzwy
  50: endif 
  51: mad r5.w, -r4.x, l(0.700000), l(1.700000)
  52: mul r5.w, r4.x, r5.w
  53: mul r5.w, r5.w, l(6.000000)
  54: sample_l r6.xyzw, r6.xyzx, t2.xyzw, s0, r5.w
  55: log r6.w, r6.w
  56: mul r6.w, r6.w, cb2[3].y
  57: exp r6.w, r6.w
  58: mul r6.w, r6.w, cb2[3].x
  59: mul r7.xyz, r6.xyzx, r6.wwww
  60: lt r7.w, cb2[1].w, l(0.999990)
  61: if_nz r7.w
  62:   lt r7.w, l(0.000000), cb2[6].w
  63:   if_nz r7.w
  64:     dp3 r7.w, r4.yzwy, r4.yzwy
  65:     rsq r7.w, r7.w
  66:     mul r8.xyz, r4.yzwy, r7.wwww
  67:     add r9.xyz, -v7.xyzx, cb2[4].xyzx
  68:     div r9.xyz, r9.xyzx, r8.xyzx
  69:     add r10.xyz, -v7.xyzx, cb2[5].xyzx
  70:     div r10.xyz, r10.xyzx, r8.xyzx
  71:     lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
  72:     movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
  73:     min r7.w, r9.y, r9.x
  74:     min r7.w, r9.z, r7.w
  75:     add r9.xyz, v7.xyzx, -cb2[6].xyzx
  76:     mad r4.yzw, r8.xxyz, r7.wwww, r9.xxyz
  77:   endif 
  78:   sample_l r8.xyzw, r4.yzwy, t3.xyzw, s1, r5.w
  79:   log r4.y, r8.w
  80:   mul r4.y, r4.y, cb2[7].y
  81:   exp r4.y, r4.y
  82:   mul r4.y, r4.y, cb2[7].x
  83:   mul r4.yzw, r8.xxyz, r4.yyyy
  84:   mad r6.xyz, r6.wwww, r6.xyzx, -r4.yzwy
  85:   mad r7.xyz, cb2[1].wwww, r6.xyzx, r4.yzwy
  86: endif 
  87: mul r4.yzw, r3.wwww, r7.xxyz
  88: mad r6.xyz, -v2.xyzx, r1.wwww, cb1[0].xyzx
  89: dp3 r1.w, r6.xyzx, r6.xyzx
  90: max r1.w, r1.w, l(0.001000)
  91: rsq r1.w, r1.w
  92: mul r6.xyz, r1.wwww, r6.xyzx
  93: dp3 r1.w, r2.xyzx, -r3.xyzx
  94: lt r5.w, r1.w, l(0.000000)
  95: add r1.w, -r1.w, l(0.000010)
  96: mad r7.xyz, -r3.xyzx, r1.wwww, r2.xyzx
  97: movc r2.xyz, r5.wwww, r7.xyzx, r2.xyzx
  98: dp3 r1.w, r2.xyzx, cb1[0].xyzx
  99: max r1.w, r1.w, l(0.000000)
 100: dp3 r5.w, r2.xyzx, r6.xyzx
 101: max r5.w, r5.w, l(0.000000)
 102: dp3 r2.x, r2.xyzx, -r3.xyzx
 103: dp3 r2.y, cb1[0].xyzx, r6.xyzx
 104: max r2.xy, r2.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
 105: mul r2.z, r4.x, r4.x
 106: mad r3.x, -r4.x, r4.x, l(1.000000)
 107: mad r3.y, r2.x, r3.x, r2.z
 108: mad r3.x, r1.w, r3.x, r2.z
 109: mul r3.x, r2.x, r3.x
 110: mad r3.x, r1.w, r3.y, r3.x
 111: add r3.x, r3.x, l(0.000010)
 112: div r3.x, l(2.000000), r3.x
 113: mul r3.y, r2.z, r2.z
 114: mul r3.z, r5.w, r5.w
 115: mad r6.xy, r2.zzzz, r2.zzzz, l(-1.000000, 1.000000, 0.000000, 0.000000)
 116: mad r3.z, r3.z, r6.x, l(1.000000)
 117: mul r5.w, r3.z, l(3.141593)
 118: mad r3.z, r5.w, r3.z, l(0.000000)
 119: div r3.y, r3.y, r3.z
 120: add r3.z, -r1.w, l(1.000000)
 121: mul r5.w, r3.z, r3.z
 122: mul r5.w, r5.w, r5.w
 123: mul r3.z, r3.z, r5.w
 124: add r2.x, -r2.x, l(1.000000)
 125: mul r5.w, r2.x, r2.x
 126: mul r5.w, r5.w, r5.w
 127: mul r2.x, r2.x, r5.w
 128: mul r5.w, r2.y, r2.y
 129: dp2 r5.w, r5.wwww, r4.xxxx
 130: add r5.w, r5.w, l(-0.500000)
 131: mad r3.z, r5.w, r3.z, l(1.000000)
 132: mad r5.w, r5.w, r2.x, l(1.000000)
 133: mul r3.z, r3.z, r5.w
 134: mul r3.x, r3.y, r3.x
 135: mul r3.x, r3.x, l(0.785398)
 136: max r3.y, r3.x, l(0.000100)
 137: sqrt r3.y, r3.y
 138: movc r3.x, r2.w, r3.y, r3.x
 139: mul r3.x, r1.w, r3.x
 140: max r3.x, r3.x, l(0.000000)
 141: mul r1.w, r1.w, r3.z
 142: mul r2.z, r2.z, r4.x
 143: mad r2.z, -r2.z, l(0.280000), l(1.000000)
 144: div r3.y, l(1.000000, 1.000000, 1.000000, 1.000000), r6.y
 145: movc r2.z, r2.w, r2.z, r3.y
 146: add r0.w, -r0.w, cb0[12].w
 147: add_sat r0.w, r0.w, l(1.000000)
 148: mul r6.xyz, r1.wwww, cb0[6].xyzx
 149: mad r3.yzw, r5.xxyz, r3.wwww, r6.xxyz
 150: mul r5.xyz, r3.xxxx, cb0[6].xyzx
 151: add r1.w, -r2.y, l(1.000000)
 152: mul r2.y, r1.w, r1.w
 153: mul r2.y, r2.y, r2.y
 154: mul r1.w, r1.w, r2.y
 155: add r6.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 156: mad r6.xyz, r6.xyzx, r1.wwww, r0.xyzx
 157: mul r5.xyz, r5.xyzx, r6.xyzx
 158: mad r1.xyz, r1.xyzx, r3.yzwy, r5.xyzx
 159: mul r2.yzw, r4.yyzw, r2.zzzz
 160: add r3.xyz, -r0.xyzx, r0.wwww
 161: mad r0.xyz, r2.xxxx, r3.xyzx, r0.xyzx
 162: mad o0.xyz, r2.yzwy, r0.xyzx, r1.xyzx
 163: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_ALPHABLEND_ON" }
"// shader disassembly not supported on opengl"
}
SubProgram "d3d9 " {
// Stats: 167 math, 7 textures, 5 branches
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_ALPHABLEND_ON" }
Vector 15 [_Color]
Float 17 [_Glossiness]
Vector 14 [_LightColor0]
Float 16 [_Metallic]
Float 18 [_OcclusionStrength]
Vector 0 [_WorldSpaceLightPos0]
Vector 12 [unity_ColorSpaceDielectricSpec]
Vector 13 [unity_ColorSpaceLuminance]
Vector 3 [unity_SHAb]
Vector 2 [unity_SHAg]
Vector 1 [unity_SHAr]
Vector 4 [unity_SpecCube0_BoxMax]
Vector 5 [unity_SpecCube0_BoxMin]
Vector 7 [unity_SpecCube0_HDR]
Vector 6 [unity_SpecCube0_ProbePosition]
Vector 8 [unity_SpecCube1_BoxMax]
Vector 9 [unity_SpecCube1_BoxMin]
Vector 11 [unity_SpecCube1_HDR]
Vector 10 [unity_SpecCube1_ProbePosition]
SetTexture 0 [unity_SpecCube0] CUBE 0
SetTexture 1 [unity_SpecCube1] CUBE 1
SetTexture 2 [_MainTex] 2D 2
SetTexture 3 [_OcclusionMap] 2D 3
SetTexture 4 [_ShadowMapTexture] 2D 4
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D _OcclusionMap;
//   float _OcclusionStrength;
//   sampler2D _ShadowMapTexture;
//   float4 _WorldSpaceLightPos0;
//   float4 unity_ColorSpaceDielectricSpec;
//   float4 unity_ColorSpaceLuminance;
//   float4 unity_SHAb;
//   float4 unity_SHAg;
//   float4 unity_SHAr;
//   samplerCUBE unity_SpecCube0;
//   float4 unity_SpecCube0_BoxMax;
//   float4 unity_SpecCube0_BoxMin;
//   float4 unity_SpecCube0_HDR;
//   float4 unity_SpecCube0_ProbePosition;
//   samplerCUBE unity_SpecCube1;
//   float4 unity_SpecCube1_BoxMax;
//   float4 unity_SpecCube1_BoxMin;
//   float4 unity_SpecCube1_HDR;
//   float4 unity_SpecCube1_ProbePosition;
//
//
// Registers:
//
//   Name                           Reg   Size
//   ------------------------------ ----- ----
//   _WorldSpaceLightPos0           c0       1
//   unity_SHAr                     c1       1
//   unity_SHAg                     c2       1
//   unity_SHAb                     c3       1
//   unity_SpecCube0_BoxMax         c4       1
//   unity_SpecCube0_BoxMin         c5       1
//   unity_SpecCube0_ProbePosition  c6       1
//   unity_SpecCube0_HDR            c7       1
//   unity_SpecCube1_BoxMax         c8       1
//   unity_SpecCube1_BoxMin         c9       1
//   unity_SpecCube1_ProbePosition  c10      1
//   unity_SpecCube1_HDR            c11      1
//   unity_ColorSpaceDielectricSpec c12      1
//   unity_ColorSpaceLuminance      c13      1
//   _LightColor0                   c14      1
//   _Color                         c15      1
//   _Metallic                      c16      1
//   _Glossiness                    c17      1
//   _OcclusionStrength             c18      1
//   unity_SpecCube0                s0       1
//   unity_SpecCube1                s1       1
//   _MainTex                       s2       1
//   _OcclusionMap                  s3       1
//   _ShadowMapTexture              s4       1
//

    ps_3_0
    def c19, 1.05499995, -0.0549999997, 0.699999988, 1.70000005
    def c20, 1, 0, 0.416666657, 6
    def c21, 0.999989986, 0.00100000005, 31.622776, 9.99999975e-06
    def c22, -1, 1, 3.14159274, 1.00000001e-07
    def c23, -0.5, 0.785398185, 9.99999975e-05, 0.00999999978
    def c24, 0.280000001, 1, 0, 0
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord4_pp v2.xyz
    dcl_texcoord5_pp v3.xyz
    dcl_texcoord6 v4
    dcl_texcoord8 v5.xyz
    dcl_cube s0
    dcl_cube s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    texld r0, v0, s2
    mul_pp oC0.w, r0.w, c15.w
    mul_pp r1.xyz, r0, c15
    mov r2, c12
    mad_pp r0.xyz, c15, r0, -r2
    mad_pp r0.xyz, c16.x, r0, r2
    mad_pp r0.w, c16.x, -r2.w, r2.w
    mul_pp r1.xyz, r0.w, r1
    nrm_pp r2.xyz, v2
    dp3_pp r1.w, v1, v1
    rsq_pp r1.w, r1.w
    mul_pp r3.xyz, r1.w, v1
    texldp_pp r4, v4, s4
    texld_pp r5, v0, s3
    mov r6.xy, c20
    add_pp r3.w, r6.x, -c18.x
    mad_pp r3.w, r5.y, c18.x, r3.w
    add_pp r4.y, r6.x, -c17.x
    dp3_pp r4.z, r3, r2
    add_pp r4.z, r4.z, r4.z
    mad_pp r5.xyz, r2, -r4.z, r3
    mul_pp r4.xzw, r4.x, c14.xyyz
    mov r2.w, c20.x
    dp4_pp r7.x, c1, r2
    dp4_pp r7.y, c2, r2
    dp4_pp r7.z, c3, r2
    add_pp r6.xzw, r7.xyyz, v3.xyyz
    max_pp r7.xyz, r6.xzww, c20.y
    abs r2.w, c13.w
    log_pp r8.x, r7.x
    log_pp r8.y, r7.y
    log_pp r8.z, r7.z
    mul_pp r6.xzw, r8.xyyz, c20.z
    exp_pp r8.x, r6.x
    exp_pp r8.y, r6.z
    exp_pp r8.z, r6.w
    mad_pp r6.xzw, r8.xyyz, c19.x, c19.y
    max_pp r8.xyz, r6.xzww, c20.y
    cmp_pp r6.xzw, -r2.w, r8.xyyz, r7.xyyz
    if_lt -c6.w, r6.y
      nrm_pp r7.xyz, r5
      add r8.xyz, c4, -v5
      rcp r9.x, r7.x
      rcp r9.y, r7.y
      rcp r9.z, r7.z
      mul_pp r8.xyz, r8, r9
      add r10.xyz, c5, -v5
      mul_pp r9.xyz, r9, r10
      cmp_pp r8.xyz, -r7, r9, r8
      min_pp r5.w, r8.y, r8.x
      min_pp r7.w, r8.z, r5.w
      add r8.xyz, -c6, v5
      mad_pp r7.xyz, r7, r7.w, r8
    else
      mov_pp r7.xyz, r5
    endif
    mad_pp r5.w, r4.y, -c19.z, c19.w
    mul_pp r5.w, r4.y, r5.w
    mul_pp r7.w, r5.w, c20.w
    texldl_pp r8, r7, s0
    pow_pp r5.w, r8.w, c7.y
    mul_pp r5.w, r5.w, c7.x
    mul_pp r9.xyz, r8, r5.w
    mov r8.w, c5.w
    if_lt r8.w, c21.x
      if_lt -c10.w, r6.y
        nrm_pp r10.xyz, r5
        add r11.xyz, c8, -v5
        rcp r12.x, r10.x
        rcp r12.y, r10.y
        rcp r12.z, r10.z
        mul_pp r11.xyz, r11, r12
        add r13.xyz, c9, -v5
        mul_pp r12.xyz, r12, r13
        cmp_pp r11.xyz, -r10, r12, r11
        min_pp r6.y, r11.y, r11.x
        min_pp r8.w, r11.z, r6.y
        add r11.xyz, -c10, v5
        mad_pp r7.xyz, r10, r8.w, r11
      else
        mov_pp r7.xyz, r5
      endif
      texldl_pp r7, r7, s1
      pow_pp r5.x, r7.w, c11.y
      mul_pp r5.x, r5.x, c11.x
      mul_pp r5.xyz, r7, r5.x
      mad r7.xyz, r5.w, r8, -r5
      mad_pp r9.xyz, c5.w, r7, r5
    endif
    mul_pp r5.xyz, r3.w, r9
    mad_pp r7.xyz, v1, -r1.w, c0
    dp3_pp r1.w, r7, r7
    add r5.w, -r1.w, c21.y
    rsq_pp r1.w, r1.w
    cmp_pp r1.w, r5.w, c21.z, r1.w
    mul_pp r7.xyz, r1.w, r7
    dp3_pp r1.w, r2, -r3
    add r5.w, -r1.w, c21.w
    mad_pp r8.xyz, -r3, r5.w, r2
    cmp_pp r2.xyz, r1.w, r2, r8
    dp3_pp r1.w, r2, c0
    max_pp r5.w, r1.w, c20.y
    dp3_pp r1.w, r2, r7
    max_pp r6.y, r1.w, c20.y
    dp3_pp r1.w, r2, -r3
    max_pp r2.x, r1.w, c20.y
    dp3_pp r1.w, c0, r7
    max_pp r2.y, r1.w, c20.y
    mul_pp r1.w, r4.y, r4.y
    mad_pp r2.z, r4.y, -r4.y, c20.x
    mad_pp r3.x, r2.x, r2.z, r1.w
    mad_pp r2.z, r5.w, r2.z, r1.w
    mul_pp r2.z, r2.z, r2.x
    mad r2.z, r5.w, r3.x, r2.z
    add r2.z, r2.z, c21.w
    rcp r2.z, r2.z
    add_pp r2.z, r2.z, r2.z
    mul_pp r3.x, r1.w, r1.w
    mul r3.y, r6.y, r6.y
    mad r7.xy, r1.w, r1.w, c22
    mad_pp r3.y, r3.y, r7.x, c20.x
    mul r3.y, r3.y, r3.y
    mad r3.y, r3.y, c22.z, c22.w
    rcp r3.y, r3.y
    mul_pp r3.x, r3.y, r3.x
    add_pp r3.y, -r5.w, c20.x
    mul_pp r3.z, r3.y, r3.y
    mul_pp r3.z, r3.z, r3.z
    mul_pp r3.y, r3.y, r3.z
    add_pp r2.x, -r2.x, c20.x
    mul_pp r3.z, r2.x, r2.x
    mul_pp r3.z, r3.z, r3.z
    mul_pp r2.x, r2.x, r3.z
    dp2add_pp r3.z, r2.y, r2.y, c20.y
    mad_pp r3.z, r3.z, r4.y, c23.x
    mad_pp r3.y, r3.z, r3.y, c20.x
    mad_pp r3.z, r3.z, r2.x, c20.x
    mul_pp r3.y, r3.z, r3.y
    mul r2.z, r2.z, r3.x
    mul_pp r3.x, r2.z, c23.y
    mad r2.z, r2.z, -c23.y, c23.z
    rsq r3.z, r3.x
    rcp_pp r3.z, r3.z
    cmp_pp r2.z, r2.z, c23.w, r3.z
    cmp_pp r2.z, -r2.w, r2.z, r3.x
    mul_pp r2.z, r5.w, r2.z
    max_pp r3.x, r2.z, c20.y
    mul_pp r2.z, r5.w, r3.y
    mul_pp r1.w, r1.w, r4.y
    mad_pp r1.w, r1.w, -c24.x, c24.y
    rcp_pp r3.y, r7.y
    cmp_pp r1.w, -r2.w, r1.w, r3.y
    add_pp r0.w, -r0.w, c20.x
    add_sat_pp r0.w, r0.w, c17.x
    mul_pp r7.xyz, r2.z, r4.xzww
    mad_pp r3.yzw, r6.xxzw, r3.w, r7.xxyz
    mul_pp r4.xyz, r4.xzww, r3.x
    add_pp r2.y, -r2.y, c20.x
    mul_pp r2.z, r2.y, r2.y
    mul_pp r2.z, r2.z, r2.z
    mul_pp r2.y, r2.y, r2.z
    lrp_pp r6.xyz, r2.y, c20.x, r0
    mul_pp r2.yzw, r4.xxyz, r6.xxyz
    mad_pp r1.xyz, r1, r3.yzww, r2.yzww
    mul_pp r2.yzw, r5.xxyz, r1.w
    lrp_pp r3.xyz, r2.x, r0.w, r0
    mad_pp oC0.xyz, r2.yzww, r3, r1

// approximately 186 instruction slots used (7 texture, 179 arithmetic)
"
}
SubProgram "d3d11 " {
// Stats: 146 math, 3 textures, 4 branches
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_ALPHABLEND_ON" }
SetTexture 0 [_MainTex] 2D 2
SetTexture 1 [_ShadowMapTexture] 2D 4
SetTexture 2 [_OcclusionMap] 2D 3
SetTexture 3 [unity_SpecCube0] CUBE 0
SetTexture 4 [unity_SpecCube1] CUBE 1
ConstBuffer "$Globals" 240
Vector 32 [unity_ColorSpaceDielectricSpec]
Vector 48 [unity_ColorSpaceLuminance]
Vector 96 [_LightColor0]
Vector 128 [_Color]
Float 200 [_Metallic]
Float 204 [_Glossiness]
Float 208 [_OcclusionStrength]
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
Vector 608 [unity_SHAr]
Vector 624 [unity_SHAg]
Vector 640 [unity_SHAb]
ConstBuffer "UnityReflectionProbes" 128
Vector 0 [unity_SpecCube0_BoxMax]
Vector 16 [unity_SpecCube0_BoxMin]
Vector 32 [unity_SpecCube0_ProbePosition]
Vector 48 [unity_SpecCube0_HDR]
Vector 64 [unity_SpecCube1_BoxMax]
Vector 80 [unity_SpecCube1_BoxMin]
Vector 96 [unity_SpecCube1_ProbePosition]
Vector 112 [unity_SpecCube1_HDR]
BindCB  "$Globals" 0
BindCB  "UnityLighting" 1
BindCB  "UnityReflectionProbes" 2
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xy w
// TEXCOORD                 8   xyz         8     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer cb0[14], immediateIndexed
      dcl_constantbuffer cb1[41], immediateIndexed
      dcl_constantbuffer cb2[8], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.xyw
      dcl_input_ps linear v8.xyz
      dcl_output o0.xyzw
      dcl_temps 13
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul o0.w, r0.w, cb0[8].w
   2: mul r1.xyz, r0.xyzx, cb0[8].xyzx
   3: mad r0.xyz, cb0[8].xyzx, r0.xyzx, -cb0[2].xyzx
   4: mad r0.xyz, cb0[12].zzzz, r0.xyzx, cb0[2].xyzx
   5: mad r0.w, -cb0[12].z, cb0[2].w, cb0[2].w
   6: mul r1.xyz, r0.wwww, r1.xyzx
   7: dp3 r1.w, v5.xyzx, v5.xyzx
   8: rsq r1.w, r1.w
   9: mul r2.xyz, r1.wwww, v5.xyzx
  10: dp3 r1.w, v2.xyzx, v2.xyzx
  11: rsq r1.w, r1.w
  12: mul r3.xyz, r1.wwww, v2.xyzx
  13: div r4.xy, v7.xyxx, v7.wwww
  14: sample r4.xyzw, r4.xyxx, t1.xyzw, s4
  15: sample r5.xyzw, v1.xyxx, t2.xyzw, s3
  16: add r3.w, -cb0[13].x, l(1.000000)
  17: mad r3.w, r5.y, cb0[13].x, r3.w
  18: add r4.y, -cb0[12].w, l(1.000000)
  19: dp3 r4.z, r3.xyzx, r2.xyzx
  20: add r4.z, r4.z, r4.z
  21: mad r5.xyz, r2.xyzx, -r4.zzzz, r3.xyzx
  22: mul r4.xzw, r4.xxxx, cb0[6].xxyz
  23: mov r2.w, l(1.000000)
  24: dp4 r6.x, cb1[38].xyzw, r2.xyzw
  25: dp4 r6.y, cb1[39].xyzw, r2.xyzw
  26: dp4 r6.z, cb1[40].xyzw, r2.xyzw
  27: add r6.xyz, r6.xyzx, v6.xyzx
  28: max r6.xyz, r6.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  29: eq r2.w, cb0[3].w, l(0.000000)
  30: log r7.xyz, r6.xyzx
  31: mul r7.xyz, r7.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  32: exp r7.xyz, r7.xyzx
  33: mad r7.xyz, r7.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  34: max r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  35: movc r6.xyz, r2.wwww, r7.xyzx, r6.xyzx
  36: lt r5.w, l(0.000000), cb2[2].w
  37: if_nz r5.w
  38:   dp3 r5.w, r5.xyzx, r5.xyzx
  39:   rsq r5.w, r5.w
  40:   mul r7.xyz, r5.wwww, r5.xyzx
  41:   add r8.xyz, -v8.xyzx, cb2[0].xyzx
  42:   div r8.xyz, r8.xyzx, r7.xyzx
  43:   add r9.xyz, -v8.xyzx, cb2[1].xyzx
  44:   div r9.xyz, r9.xyzx, r7.xyzx
  45:   lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
  46:   movc r8.xyz, r10.xyzx, r8.xyzx, r9.xyzx
  47:   min r5.w, r8.y, r8.x
  48:   min r5.w, r8.z, r5.w
  49:   add r8.xyz, v8.xyzx, -cb2[2].xyzx
  50:   mad r7.xyz, r7.xyzx, r5.wwww, r8.xyzx
  51: else 
  52:   mov r7.xyz, r5.xyzx
  53: endif 
  54: mad r5.w, -r4.y, l(0.700000), l(1.700000)
  55: mul r5.w, r4.y, r5.w
  56: mul r5.w, r5.w, l(6.000000)
  57: sample_l r7.xyzw, r7.xyzx, t3.xyzw, s0, r5.w
  58: log r6.w, r7.w
  59: mul r6.w, r6.w, cb2[3].y
  60: exp r6.w, r6.w
  61: mul r6.w, r6.w, cb2[3].x
  62: mul r8.xyz, r7.xyzx, r6.wwww
  63: lt r7.w, cb2[1].w, l(0.999990)
  64: if_nz r7.w
  65:   lt r7.w, l(0.000000), cb2[6].w
  66:   if_nz r7.w
  67:     dp3 r7.w, r5.xyzx, r5.xyzx
  68:     rsq r7.w, r7.w
  69:     mul r9.xyz, r5.xyzx, r7.wwww
  70:     add r10.xyz, -v8.xyzx, cb2[4].xyzx
  71:     div r10.xyz, r10.xyzx, r9.xyzx
  72:     add r11.xyz, -v8.xyzx, cb2[5].xyzx
  73:     div r11.xyz, r11.xyzx, r9.xyzx
  74:     lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
  75:     movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
  76:     min r7.w, r10.y, r10.x
  77:     min r7.w, r10.z, r7.w
  78:     add r10.xyz, v8.xyzx, -cb2[6].xyzx
  79:     mad r5.xyz, r9.xyzx, r7.wwww, r10.xyzx
  80:   endif 
  81:   sample_l r5.xyzw, r5.xyzx, t4.xyzw, s1, r5.w
  82:   log r5.w, r5.w
  83:   mul r5.w, r5.w, cb2[7].y
  84:   exp r5.w, r5.w
  85:   mul r5.w, r5.w, cb2[7].x
  86:   mul r5.xyz, r5.xyzx, r5.wwww
  87:   mad r7.xyz, r6.wwww, r7.xyzx, -r5.xyzx
  88:   mad r8.xyz, cb2[1].wwww, r7.xyzx, r5.xyzx
  89: endif 
  90: mul r5.xyz, r3.wwww, r8.xyzx
  91: mad r7.xyz, -v2.xyzx, r1.wwww, cb1[0].xyzx
  92: dp3 r1.w, r7.xyzx, r7.xyzx
  93: max r1.w, r1.w, l(0.001000)
  94: rsq r1.w, r1.w
  95: mul r7.xyz, r1.wwww, r7.xyzx
  96: dp3 r1.w, r2.xyzx, -r3.xyzx
  97: lt r5.w, r1.w, l(0.000000)
  98: add r1.w, -r1.w, l(0.000010)
  99: mad r8.xyz, -r3.xyzx, r1.wwww, r2.xyzx
 100: movc r2.xyz, r5.wwww, r8.xyzx, r2.xyzx
 101: dp3 r1.w, r2.xyzx, cb1[0].xyzx
 102: max r1.w, r1.w, l(0.000000)
 103: dp3 r5.w, r2.xyzx, r7.xyzx
 104: max r5.w, r5.w, l(0.000000)
 105: dp3 r2.x, r2.xyzx, -r3.xyzx
 106: dp3 r2.y, cb1[0].xyzx, r7.xyzx
 107: max r2.xy, r2.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
 108: mul r2.z, r4.y, r4.y
 109: mad r3.x, -r4.y, r4.y, l(1.000000)
 110: mad r3.y, r2.x, r3.x, r2.z
 111: mad r3.x, r1.w, r3.x, r2.z
 112: mul r3.x, r2.x, r3.x
 113: mad r3.x, r1.w, r3.y, r3.x
 114: add r3.x, r3.x, l(0.000010)
 115: div r3.x, l(2.000000), r3.x
 116: mul r3.y, r2.z, r2.z
 117: mul r3.z, r5.w, r5.w
 118: mad r7.xy, r2.zzzz, r2.zzzz, l(-1.000000, 1.000000, 0.000000, 0.000000)
 119: mad r3.z, r3.z, r7.x, l(1.000000)
 120: mul r3.z, r3.z, r3.z
 121: mad r3.z, r3.z, l(3.141593), l(0.000000)
 122: div r3.y, r3.y, r3.z
 123: add r3.z, -r1.w, l(1.000000)
 124: mul r5.w, r3.z, r3.z
 125: mul r5.w, r5.w, r5.w
 126: mul r3.z, r3.z, r5.w
 127: add r2.x, -r2.x, l(1.000000)
 128: mul r5.w, r2.x, r2.x
 129: mul r5.w, r5.w, r5.w
 130: mul r2.x, r2.x, r5.w
 131: mul r5.w, r2.y, r2.y
 132: dp2 r5.w, r5.wwww, r4.yyyy
 133: add r5.w, r5.w, l(-0.500000)
 134: mad r3.z, r5.w, r3.z, l(1.000000)
 135: mad r5.w, r5.w, r2.x, l(1.000000)
 136: mul r3.z, r3.z, r5.w
 137: mul r3.x, r3.y, r3.x
 138: mul r3.x, r3.x, l(0.785398)
 139: max r3.y, r3.x, l(0.000100)
 140: sqrt r3.y, r3.y
 141: movc r3.x, r2.w, r3.y, r3.x
 142: mul r3.x, r1.w, r3.x
 143: max r3.x, r3.x, l(0.000000)
 144: mul r1.w, r1.w, r3.z
 145: mul r2.z, r2.z, r4.y
 146: mad r2.z, -r2.z, l(0.280000), l(1.000000)
 147: div r3.y, l(1.000000, 1.000000, 1.000000, 1.000000), r7.y
 148: movc r2.z, r2.w, r2.z, r3.y
 149: add r0.w, -r0.w, cb0[12].w
 150: add_sat r0.w, r0.w, l(1.000000)
 151: mul r7.xyz, r1.wwww, r4.xzwx
 152: mad r3.yzw, r6.xxyz, r3.wwww, r7.xxyz
 153: mul r4.xyz, r4.xzwx, r3.xxxx
 154: add r1.w, -r2.y, l(1.000000)
 155: mul r2.y, r1.w, r1.w
 156: mul r2.y, r2.y, r2.y
 157: mul r1.w, r1.w, r2.y
 158: add r6.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 159: mad r6.xyz, r6.xyzx, r1.wwww, r0.xyzx
 160: mul r4.xyz, r4.xyzx, r6.xyzx
 161: mad r1.xyz, r1.xyzx, r3.yzwy, r4.xyzx
 162: mul r2.yzw, r5.xxyz, r2.zzzz
 163: add r3.xyz, -r0.xyzx, r0.wwww
 164: mad r0.xyz, r2.xxxx, r3.xyzx, r0.xyzx
 165: mad o0.xyz, r2.yzwy, r0.xyzx, r1.xyzx
 166: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "_ALPHABLEND_ON" }
"// shader disassembly not supported on opengl"
}
SubProgram "d3d9 " {
// Stats: 167 math, 7 textures, 5 branches
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "_ALPHABLEND_ON" }
Vector 15 [_Color]
Vector 19 [_EmissionColor]
Float 17 [_Glossiness]
Vector 14 [_LightColor0]
Float 16 [_Metallic]
Float 18 [_OcclusionStrength]
Vector 0 [_WorldSpaceLightPos0]
Vector 12 [unity_ColorSpaceDielectricSpec]
Vector 13 [unity_ColorSpaceLuminance]
Vector 3 [unity_SHAb]
Vector 2 [unity_SHAg]
Vector 1 [unity_SHAr]
Vector 4 [unity_SpecCube0_BoxMax]
Vector 5 [unity_SpecCube0_BoxMin]
Vector 7 [unity_SpecCube0_HDR]
Vector 6 [unity_SpecCube0_ProbePosition]
Vector 8 [unity_SpecCube1_BoxMax]
Vector 9 [unity_SpecCube1_BoxMin]
Vector 11 [unity_SpecCube1_HDR]
Vector 10 [unity_SpecCube1_ProbePosition]
SetTexture 0 [unity_SpecCube0] CUBE 0
SetTexture 1 [unity_SpecCube1] CUBE 1
SetTexture 2 [_MainTex] 2D 2
SetTexture 3 [_OcclusionMap] 2D 3
SetTexture 4 [_EmissionMap] 2D 4
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _Color;
//   float4 _EmissionColor;
//   sampler2D _EmissionMap;
//   float _Glossiness;
//   float4 _LightColor0;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D _OcclusionMap;
//   float _OcclusionStrength;
//   float4 _WorldSpaceLightPos0;
//   float4 unity_ColorSpaceDielectricSpec;
//   float4 unity_ColorSpaceLuminance;
//   float4 unity_SHAb;
//   float4 unity_SHAg;
//   float4 unity_SHAr;
//   samplerCUBE unity_SpecCube0;
//   float4 unity_SpecCube0_BoxMax;
//   float4 unity_SpecCube0_BoxMin;
//   float4 unity_SpecCube0_HDR;
//   float4 unity_SpecCube0_ProbePosition;
//   samplerCUBE unity_SpecCube1;
//   float4 unity_SpecCube1_BoxMax;
//   float4 unity_SpecCube1_BoxMin;
//   float4 unity_SpecCube1_HDR;
//   float4 unity_SpecCube1_ProbePosition;
//
//
// Registers:
//
//   Name                           Reg   Size
//   ------------------------------ ----- ----
//   _WorldSpaceLightPos0           c0       1
//   unity_SHAr                     c1       1
//   unity_SHAg                     c2       1
//   unity_SHAb                     c3       1
//   unity_SpecCube0_BoxMax         c4       1
//   unity_SpecCube0_BoxMin         c5       1
//   unity_SpecCube0_ProbePosition  c6       1
//   unity_SpecCube0_HDR            c7       1
//   unity_SpecCube1_BoxMax         c8       1
//   unity_SpecCube1_BoxMin         c9       1
//   unity_SpecCube1_ProbePosition  c10      1
//   unity_SpecCube1_HDR            c11      1
//   unity_ColorSpaceDielectricSpec c12      1
//   unity_ColorSpaceLuminance      c13      1
//   _LightColor0                   c14      1
//   _Color                         c15      1
//   _Metallic                      c16      1
//   _Glossiness                    c17      1
//   _OcclusionStrength             c18      1
//   _EmissionColor                 c19      1
//   unity_SpecCube0                s0       1
//   unity_SpecCube1                s1       1
//   _MainTex                       s2       1
//   _OcclusionMap                  s3       1
//   _EmissionMap                   s4       1
//

    ps_3_0
    def c20, 1.05499995, -0.0549999997, 0.699999988, 1.70000005
    def c21, 1, 0, 0.416666657, 6
    def c22, 0.999989986, 0.00100000005, 31.622776, 9.99999975e-06
    def c23, -1, 1, 3.14159274, 1.00000001e-07
    def c24, -0.5, 0.785398185, 9.99999975e-05, 0.00999999978
    def c25, 0.280000001, 1, 0, 0
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord4_pp v2.xyz
    dcl_texcoord5_pp v3.xyz
    dcl_texcoord8 v4.xyz
    dcl_cube s0
    dcl_cube s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    texld r0, v0, s2
    mul_pp oC0.w, r0.w, c15.w
    mul_pp r1.xyz, r0, c15
    mov r2, c12
    mad_pp r0.xyz, c15, r0, -r2
    mad_pp r0.xyz, c16.x, r0, r2
    mad_pp r0.w, c16.x, -r2.w, r2.w
    mul_pp r1.xyz, r0.w, r1
    nrm_pp r2.xyz, v2
    dp3_pp r1.w, v1, v1
    rsq_pp r1.w, r1.w
    mul_pp r3.xyz, r1.w, v1
    texld_pp r4, v0, s3
    mov r5.xy, c21
    add_pp r3.w, r5.x, -c18.x
    mad_pp r3.w, r4.y, c18.x, r3.w
    add_pp r4.x, r5.x, -c17.x
    dp3_pp r4.y, r3, r2
    add_pp r4.y, r4.y, r4.y
    mad_pp r4.yzw, r2.xxyz, -r4.y, r3.xxyz
    mov r2.w, c21.x
    dp4_pp r6.x, c1, r2
    dp4_pp r6.y, c2, r2
    dp4_pp r6.z, c3, r2
    add_pp r5.xzw, r6.xyyz, v3.xyyz
    max_pp r6.xyz, r5.xzww, c21.y
    abs r2.w, c13.w
    log_pp r7.x, r6.x
    log_pp r7.y, r6.y
    log_pp r7.z, r6.z
    mul_pp r5.xzw, r7.xyyz, c21.z
    exp_pp r7.x, r5.x
    exp_pp r7.y, r5.z
    exp_pp r7.z, r5.w
    mad_pp r5.xzw, r7.xyyz, c20.x, c20.y
    max_pp r7.xyz, r5.xzww, c21.y
    cmp_pp r5.xzw, -r2.w, r7.xyyz, r6.xyyz
    if_lt -c6.w, r5.y
      nrm_pp r6.xyz, r4.yzww
      add r7.xyz, c4, -v4
      rcp r8.x, r6.x
      rcp r8.y, r6.y
      rcp r8.z, r6.z
      mul_pp r7.xyz, r7, r8
      add r9.xyz, c5, -v4
      mul_pp r8.xyz, r8, r9
      cmp_pp r7.xyz, -r6, r8, r7
      min_pp r6.w, r7.y, r7.x
      min_pp r8.x, r7.z, r6.w
      add r7.xyz, -c6, v4
      mad_pp r6.xyz, r6, r8.x, r7
    else
      mov_pp r6.xyz, r4.yzww
    endif
    mad_pp r7.x, r4.x, -c20.z, c20.w
    mul_pp r7.x, r4.x, r7.x
    mul_pp r6.w, r7.x, c21.w
    texldl_pp r7, r6, s0
    pow_pp r8.x, r7.w, c7.y
    mul_pp r7.w, r8.x, c7.x
    mul_pp r8.xyz, r7, r7.w
    mov r8.w, c5.w
    if_lt r8.w, c22.x
      if_lt -c10.w, r5.y
        nrm_pp r9.xyz, r4.yzww
        add r10.xyz, c8, -v4
        rcp r11.x, r9.x
        rcp r11.y, r9.y
        rcp r11.z, r9.z
        mul_pp r10.xyz, r10, r11
        add r12.xyz, c9, -v4
        mul_pp r11.xyz, r11, r12
        cmp_pp r10.xyz, -r9, r11, r10
        min_pp r5.y, r10.y, r10.x
        min_pp r8.w, r10.z, r5.y
        add r10.xyz, -c10, v4
        mad_pp r6.xyz, r9, r8.w, r10
      else
        mov_pp r6.xyz, r4.yzww
      endif
      texldl_pp r6, r6, s1
      pow_pp r4.y, r6.w, c11.y
      mul_pp r4.y, r4.y, c11.x
      mul_pp r4.yzw, r6.xxyz, r4.y
      mad r6.xyz, r7.w, r7, -r4.yzww
      mad_pp r8.xyz, c5.w, r6, r4.yzww
    endif
    mul_pp r4.yzw, r3.w, r8.xxyz
    mad_pp r6.xyz, v1, -r1.w, c0
    dp3_pp r1.w, r6, r6
    add r5.y, -r1.w, c22.y
    rsq_pp r1.w, r1.w
    cmp_pp r1.w, r5.y, c22.z, r1.w
    mul_pp r6.xyz, r1.w, r6
    dp3_pp r1.w, r2, -r3
    add r5.y, -r1.w, c22.w
    mad_pp r7.xyz, -r3, r5.y, r2
    cmp_pp r2.xyz, r1.w, r2, r7
    dp3_pp r1.w, r2, c0
    max_pp r5.y, r1.w, c21.y
    dp3_pp r1.w, r2, r6
    max_pp r6.w, r1.w, c21.y
    dp3_pp r1.w, r2, -r3
    max_pp r2.x, r1.w, c21.y
    dp3_pp r1.w, c0, r6
    max_pp r2.y, r1.w, c21.y
    mul_pp r1.w, r4.x, r4.x
    mad_pp r2.z, r4.x, -r4.x, c21.x
    mad_pp r3.x, r2.x, r2.z, r1.w
    mad_pp r2.z, r5.y, r2.z, r1.w
    mul_pp r2.z, r2.z, r2.x
    mad r2.z, r5.y, r3.x, r2.z
    add r2.z, r2.z, c22.w
    rcp r2.z, r2.z
    add_pp r2.z, r2.z, r2.z
    mul_pp r3.x, r1.w, r1.w
    mul r3.y, r6.w, r6.w
    mad r6.xy, r1.w, r1.w, c23
    mad_pp r3.y, r3.y, r6.x, c21.x
    mul r3.y, r3.y, r3.y
    mad r3.y, r3.y, c23.z, c23.w
    rcp r3.y, r3.y
    mul_pp r3.x, r3.y, r3.x
    add_pp r3.y, -r5.y, c21.x
    mul_pp r3.z, r3.y, r3.y
    mul_pp r3.z, r3.z, r3.z
    mul_pp r3.y, r3.y, r3.z
    add_pp r2.x, -r2.x, c21.x
    mul_pp r3.z, r2.x, r2.x
    mul_pp r3.z, r3.z, r3.z
    mul_pp r2.x, r2.x, r3.z
    mul_pp r3.z, r2.y, r2.y
    dp2add_pp r3.z, r3.z, r4.x, c24.x
    mad_pp r3.y, r3.z, r3.y, c21.x
    mad_pp r3.z, r3.z, r2.x, c21.x
    mul_pp r3.y, r3.z, r3.y
    mul r2.z, r2.z, r3.x
    mul_pp r3.x, r2.z, c24.y
    mad r2.z, r2.z, -c24.y, c24.z
    rsq r3.z, r3.x
    rcp_pp r3.z, r3.z
    cmp_pp r2.z, r2.z, c24.w, r3.z
    cmp_pp r2.z, -r2.w, r2.z, r3.x
    mul_pp r2.z, r5.y, r2.z
    mul_pp r3.x, r5.y, r3.y
    mul_pp r1.w, r1.w, r4.x
    mad_pp r1.w, r1.w, -c25.x, c25.y
    rcp_pp r3.y, r6.y
    cmp_pp r1.w, -r2.w, r1.w, r3.y
    add_pp r0.w, -r0.w, c21.x
    add_sat_pp r0.w, r0.w, c17.x
    mul_pp r3.xyz, r3.x, c14
    mad_pp r3.xyz, r5.xzww, r3.w, r3
    mul_pp r5.xyz, r2.z, c14
    cmp_pp r5.xyz, r2.z, r5, c21.y
    add_pp r2.y, -r2.y, c21.x
    mul_pp r2.z, r2.y, r2.y
    mul_pp r2.z, r2.z, r2.z
    mul_pp r2.y, r2.y, r2.z
    lrp_pp r6.xyz, r2.y, c21.x, r0
    mul_pp r2.yzw, r5.xxyz, r6.xxyz
    mad_pp r1.xyz, r1, r3, r2.yzww
    mul_pp r2.yzw, r4, r1.w
    lrp_pp r3.xyz, r2.x, r0.w, r0
    mad_pp r0.xyz, r2.yzww, r3, r1
    texld r1, v0, s4
    mad_pp oC0.xyz, r1, c19, r0

// approximately 186 instruction slots used (7 texture, 179 arithmetic)
"
}
SubProgram "d3d11 " {
// Stats: 145 math, 3 textures, 4 branches
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "_ALPHABLEND_ON" }
SetTexture 0 [_MainTex] 2D 2
SetTexture 1 [_OcclusionMap] 2D 3
SetTexture 2 [_EmissionMap] 2D 4
SetTexture 3 [unity_SpecCube0] CUBE 0
SetTexture 4 [unity_SpecCube1] CUBE 1
ConstBuffer "$Globals" 240
Vector 32 [unity_ColorSpaceDielectricSpec]
Vector 48 [unity_ColorSpaceLuminance]
Vector 96 [_LightColor0]
Vector 128 [_Color]
Float 200 [_Metallic]
Float 204 [_Glossiness]
Float 208 [_OcclusionStrength]
Vector 224 [_EmissionColor]
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
Vector 608 [unity_SHAr]
Vector 624 [unity_SHAg]
Vector 640 [unity_SHAb]
ConstBuffer "UnityReflectionProbes" 128
Vector 0 [unity_SpecCube0_BoxMax]
Vector 16 [unity_SpecCube0_BoxMin]
Vector 32 [unity_SpecCube0_ProbePosition]
Vector 48 [unity_SpecCube0_HDR]
Vector 64 [unity_SpecCube1_BoxMax]
Vector 80 [unity_SpecCube1_BoxMin]
Vector 96 [unity_SpecCube1_ProbePosition]
Vector 112 [unity_SpecCube1_HDR]
BindCB  "$Globals" 0
BindCB  "UnityLighting" 1
BindCB  "UnityReflectionProbes" 2
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
// TEXCOORD                 8   xyz         7     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer cb0[15], immediateIndexed
      dcl_constantbuffer cb1[41], immediateIndexed
      dcl_constantbuffer cb2[8], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 12
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul o0.w, r0.w, cb0[8].w
   2: mul r1.xyz, r0.xyzx, cb0[8].xyzx
   3: mad r0.xyz, cb0[8].xyzx, r0.xyzx, -cb0[2].xyzx
   4: mad r0.xyz, cb0[12].zzzz, r0.xyzx, cb0[2].xyzx
   5: mad r0.w, -cb0[12].z, cb0[2].w, cb0[2].w
   6: mul r1.xyz, r0.wwww, r1.xyzx
   7: dp3 r1.w, v5.xyzx, v5.xyzx
   8: rsq r1.w, r1.w
   9: mul r2.xyz, r1.wwww, v5.xyzx
  10: dp3 r1.w, v2.xyzx, v2.xyzx
  11: rsq r1.w, r1.w
  12: mul r3.xyz, r1.wwww, v2.xyzx
  13: sample r4.xyzw, v1.xyxx, t1.xyzw, s3
  14: add r3.w, -cb0[13].x, l(1.000000)
  15: mad r3.w, r4.y, cb0[13].x, r3.w
  16: add r4.x, -cb0[12].w, l(1.000000)
  17: dp3 r4.y, r3.xyzx, r2.xyzx
  18: add r4.y, r4.y, r4.y
  19: mad r4.yzw, r2.xxyz, -r4.yyyy, r3.xxyz
  20: mov r2.w, l(1.000000)
  21: dp4 r5.x, cb1[38].xyzw, r2.xyzw
  22: dp4 r5.y, cb1[39].xyzw, r2.xyzw
  23: dp4 r5.z, cb1[40].xyzw, r2.xyzw
  24: add r5.xyz, r5.xyzx, v6.xyzx
  25: max r5.xyz, r5.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  26: eq r2.w, cb0[3].w, l(0.000000)
  27: log r6.xyz, r5.xyzx
  28: mul r6.xyz, r6.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  29: exp r6.xyz, r6.xyzx
  30: mad r6.xyz, r6.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  31: max r6.xyz, r6.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  32: movc r5.xyz, r2.wwww, r6.xyzx, r5.xyzx
  33: lt r5.w, l(0.000000), cb2[2].w
  34: if_nz r5.w
  35:   dp3 r5.w, r4.yzwy, r4.yzwy
  36:   rsq r5.w, r5.w
  37:   mul r6.xyz, r4.yzwy, r5.wwww
  38:   add r7.xyz, -v7.xyzx, cb2[0].xyzx
  39:   div r7.xyz, r7.xyzx, r6.xyzx
  40:   add r8.xyz, -v7.xyzx, cb2[1].xyzx
  41:   div r8.xyz, r8.xyzx, r6.xyzx
  42:   lt r9.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r6.xyzx
  43:   movc r7.xyz, r9.xyzx, r7.xyzx, r8.xyzx
  44:   min r5.w, r7.y, r7.x
  45:   min r5.w, r7.z, r5.w
  46:   add r7.xyz, v7.xyzx, -cb2[2].xyzx
  47:   mad r6.xyz, r6.xyzx, r5.wwww, r7.xyzx
  48: else 
  49:   mov r6.xyz, r4.yzwy
  50: endif 
  51: mad r5.w, -r4.x, l(0.700000), l(1.700000)
  52: mul r5.w, r4.x, r5.w
  53: mul r5.w, r5.w, l(6.000000)
  54: sample_l r6.xyzw, r6.xyzx, t3.xyzw, s0, r5.w
  55: log r6.w, r6.w
  56: mul r6.w, r6.w, cb2[3].y
  57: exp r6.w, r6.w
  58: mul r6.w, r6.w, cb2[3].x
  59: mul r7.xyz, r6.xyzx, r6.wwww
  60: lt r7.w, cb2[1].w, l(0.999990)
  61: if_nz r7.w
  62:   lt r7.w, l(0.000000), cb2[6].w
  63:   if_nz r7.w
  64:     dp3 r7.w, r4.yzwy, r4.yzwy
  65:     rsq r7.w, r7.w
  66:     mul r8.xyz, r4.yzwy, r7.wwww
  67:     add r9.xyz, -v7.xyzx, cb2[4].xyzx
  68:     div r9.xyz, r9.xyzx, r8.xyzx
  69:     add r10.xyz, -v7.xyzx, cb2[5].xyzx
  70:     div r10.xyz, r10.xyzx, r8.xyzx
  71:     lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
  72:     movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
  73:     min r7.w, r9.y, r9.x
  74:     min r7.w, r9.z, r7.w
  75:     add r9.xyz, v7.xyzx, -cb2[6].xyzx
  76:     mad r4.yzw, r8.xxyz, r7.wwww, r9.xxyz
  77:   endif 
  78:   sample_l r8.xyzw, r4.yzwy, t4.xyzw, s1, r5.w
  79:   log r4.y, r8.w
  80:   mul r4.y, r4.y, cb2[7].y
  81:   exp r4.y, r4.y
  82:   mul r4.y, r4.y, cb2[7].x
  83:   mul r4.yzw, r8.xxyz, r4.yyyy
  84:   mad r6.xyz, r6.wwww, r6.xyzx, -r4.yzwy
  85:   mad r7.xyz, cb2[1].wwww, r6.xyzx, r4.yzwy
  86: endif 
  87: mul r4.yzw, r3.wwww, r7.xxyz
  88: mad r6.xyz, -v2.xyzx, r1.wwww, cb1[0].xyzx
  89: dp3 r1.w, r6.xyzx, r6.xyzx
  90: max r1.w, r1.w, l(0.001000)
  91: rsq r1.w, r1.w
  92: mul r6.xyz, r1.wwww, r6.xyzx
  93: dp3 r1.w, r2.xyzx, -r3.xyzx
  94: lt r5.w, r1.w, l(0.000000)
  95: add r1.w, -r1.w, l(0.000010)
  96: mad r7.xyz, -r3.xyzx, r1.wwww, r2.xyzx
  97: movc r2.xyz, r5.wwww, r7.xyzx, r2.xyzx
  98: dp3 r1.w, r2.xyzx, cb1[0].xyzx
  99: max r1.w, r1.w, l(0.000000)
 100: dp3 r5.w, r2.xyzx, r6.xyzx
 101: max r5.w, r5.w, l(0.000000)
 102: dp3 r2.x, r2.xyzx, -r3.xyzx
 103: dp3 r2.y, cb1[0].xyzx, r6.xyzx
 104: max r2.xy, r2.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
 105: mul r2.z, r4.x, r4.x
 106: mad r3.x, -r4.x, r4.x, l(1.000000)
 107: mad r3.y, r2.x, r3.x, r2.z
 108: mad r3.x, r1.w, r3.x, r2.z
 109: mul r3.x, r2.x, r3.x
 110: mad r3.x, r1.w, r3.y, r3.x
 111: add r3.x, r3.x, l(0.000010)
 112: div r3.x, l(2.000000), r3.x
 113: mul r3.y, r2.z, r2.z
 114: mul r3.z, r5.w, r5.w
 115: mad r6.xy, r2.zzzz, r2.zzzz, l(-1.000000, 1.000000, 0.000000, 0.000000)
 116: mad r3.z, r3.z, r6.x, l(1.000000)
 117: mul r5.w, r3.z, l(3.141593)
 118: mad r3.z, r5.w, r3.z, l(0.000000)
 119: div r3.y, r3.y, r3.z
 120: add r3.z, -r1.w, l(1.000000)
 121: mul r5.w, r3.z, r3.z
 122: mul r5.w, r5.w, r5.w
 123: mul r3.z, r3.z, r5.w
 124: add r2.x, -r2.x, l(1.000000)
 125: mul r5.w, r2.x, r2.x
 126: mul r5.w, r5.w, r5.w
 127: mul r2.x, r2.x, r5.w
 128: mul r5.w, r2.y, r2.y
 129: dp2 r5.w, r5.wwww, r4.xxxx
 130: add r5.w, r5.w, l(-0.500000)
 131: mad r3.z, r5.w, r3.z, l(1.000000)
 132: mad r5.w, r5.w, r2.x, l(1.000000)
 133: mul r3.z, r3.z, r5.w
 134: mul r3.x, r3.y, r3.x
 135: mul r3.x, r3.x, l(0.785398)
 136: max r3.y, r3.x, l(0.000100)
 137: sqrt r3.y, r3.y
 138: movc r3.x, r2.w, r3.y, r3.x
 139: mul r3.x, r1.w, r3.x
 140: max r3.x, r3.x, l(0.000000)
 141: mul r1.w, r1.w, r3.z
 142: mul r2.z, r2.z, r4.x
 143: mad r2.z, -r2.z, l(0.280000), l(1.000000)
 144: div r3.y, l(1.000000, 1.000000, 1.000000, 1.000000), r6.y
 145: movc r2.z, r2.w, r2.z, r3.y
 146: add r0.w, -r0.w, cb0[12].w
 147: add_sat r0.w, r0.w, l(1.000000)
 148: mul r6.xyz, r1.wwww, cb0[6].xyzx
 149: mad r3.yzw, r5.xxyz, r3.wwww, r6.xxyz
 150: mul r5.xyz, r3.xxxx, cb0[6].xyzx
 151: add r1.w, -r2.y, l(1.000000)
 152: mul r2.y, r1.w, r1.w
 153: mul r2.y, r2.y, r2.y
 154: mul r1.w, r1.w, r2.y
 155: add r6.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 156: mad r6.xyz, r6.xyzx, r1.wwww, r0.xyzx
 157: mul r5.xyz, r5.xyzx, r6.xyzx
 158: mad r1.xyz, r1.xyzx, r3.yzwy, r5.xyzx
 159: mul r2.yzw, r4.yyzw, r2.zzzz
 160: add r3.xyz, -r0.xyzx, r0.wwww
 161: mad r0.xyz, r2.xxxx, r3.xyzx, r0.xyzx
 162: mad r0.xyz, r2.yzwy, r0.xyzx, r1.xyzx
 163: sample r1.xyzw, v1.xyxx, t2.xyzw, s4
 164: mad o0.xyz, r1.xyzx, cb0[14].xyzx, r0.xyzx
 165: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "_ALPHABLEND_ON" }
"// shader disassembly not supported on opengl"
}
SubProgram "d3d9 " {
// Stats: 168 math, 8 textures, 5 branches
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "_ALPHABLEND_ON" }
Vector 15 [_Color]
Vector 19 [_EmissionColor]
Float 17 [_Glossiness]
Vector 14 [_LightColor0]
Float 16 [_Metallic]
Float 18 [_OcclusionStrength]
Vector 0 [_WorldSpaceLightPos0]
Vector 12 [unity_ColorSpaceDielectricSpec]
Vector 13 [unity_ColorSpaceLuminance]
Vector 3 [unity_SHAb]
Vector 2 [unity_SHAg]
Vector 1 [unity_SHAr]
Vector 4 [unity_SpecCube0_BoxMax]
Vector 5 [unity_SpecCube0_BoxMin]
Vector 7 [unity_SpecCube0_HDR]
Vector 6 [unity_SpecCube0_ProbePosition]
Vector 8 [unity_SpecCube1_BoxMax]
Vector 9 [unity_SpecCube1_BoxMin]
Vector 11 [unity_SpecCube1_HDR]
Vector 10 [unity_SpecCube1_ProbePosition]
SetTexture 0 [unity_SpecCube0] CUBE 0
SetTexture 1 [unity_SpecCube1] CUBE 1
SetTexture 2 [_MainTex] 2D 2
SetTexture 3 [_OcclusionMap] 2D 3
SetTexture 4 [_EmissionMap] 2D 4
SetTexture 5 [_ShadowMapTexture] 2D 5
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _Color;
//   float4 _EmissionColor;
//   sampler2D _EmissionMap;
//   float _Glossiness;
//   float4 _LightColor0;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D _OcclusionMap;
//   float _OcclusionStrength;
//   sampler2D _ShadowMapTexture;
//   float4 _WorldSpaceLightPos0;
//   float4 unity_ColorSpaceDielectricSpec;
//   float4 unity_ColorSpaceLuminance;
//   float4 unity_SHAb;
//   float4 unity_SHAg;
//   float4 unity_SHAr;
//   samplerCUBE unity_SpecCube0;
//   float4 unity_SpecCube0_BoxMax;
//   float4 unity_SpecCube0_BoxMin;
//   float4 unity_SpecCube0_HDR;
//   float4 unity_SpecCube0_ProbePosition;
//   samplerCUBE unity_SpecCube1;
//   float4 unity_SpecCube1_BoxMax;
//   float4 unity_SpecCube1_BoxMin;
//   float4 unity_SpecCube1_HDR;
//   float4 unity_SpecCube1_ProbePosition;
//
//
// Registers:
//
//   Name                           Reg   Size
//   ------------------------------ ----- ----
//   _WorldSpaceLightPos0           c0       1
//   unity_SHAr                     c1       1
//   unity_SHAg                     c2       1
//   unity_SHAb                     c3       1
//   unity_SpecCube0_BoxMax         c4       1
//   unity_SpecCube0_BoxMin         c5       1
//   unity_SpecCube0_ProbePosition  c6       1
//   unity_SpecCube0_HDR            c7       1
//   unity_SpecCube1_BoxMax         c8       1
//   unity_SpecCube1_BoxMin         c9       1
//   unity_SpecCube1_ProbePosition  c10      1
//   unity_SpecCube1_HDR            c11      1
//   unity_ColorSpaceDielectricSpec c12      1
//   unity_ColorSpaceLuminance      c13      1
//   _LightColor0                   c14      1
//   _Color                         c15      1
//   _Metallic                      c16      1
//   _Glossiness                    c17      1
//   _OcclusionStrength             c18      1
//   _EmissionColor                 c19      1
//   unity_SpecCube0                s0       1
//   unity_SpecCube1                s1       1
//   _MainTex                       s2       1
//   _OcclusionMap                  s3       1
//   _EmissionMap                   s4       1
//   _ShadowMapTexture              s5       1
//

    ps_3_0
    def c20, 1.05499995, -0.0549999997, 0.699999988, 1.70000005
    def c21, 1, 0, 0.416666657, 6
    def c22, 0.999989986, 0.00100000005, 31.622776, 9.99999975e-06
    def c23, -1, 1, 3.14159274, 1.00000001e-07
    def c24, -0.5, 0.785398185, 9.99999975e-05, 0.00999999978
    def c25, 0.280000001, 1, 0, 0
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord4_pp v2.xyz
    dcl_texcoord5_pp v3.xyz
    dcl_texcoord6 v4
    dcl_texcoord8 v5.xyz
    dcl_cube s0
    dcl_cube s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    dcl_2d s5
    texld r0, v0, s2
    mul_pp oC0.w, r0.w, c15.w
    mul_pp r1.xyz, r0, c15
    mov r2, c12
    mad_pp r0.xyz, c15, r0, -r2
    mad_pp r0.xyz, c16.x, r0, r2
    mad_pp r0.w, c16.x, -r2.w, r2.w
    mul_pp r1.xyz, r0.w, r1
    nrm_pp r2.xyz, v2
    dp3_pp r1.w, v1, v1
    rsq_pp r1.w, r1.w
    mul_pp r3.xyz, r1.w, v1
    texldp_pp r4, v4, s5
    texld_pp r5, v0, s3
    mov r6.xy, c21
    add_pp r3.w, r6.x, -c18.x
    mad_pp r3.w, r5.y, c18.x, r3.w
    add_pp r4.y, r6.x, -c17.x
    dp3_pp r4.z, r3, r2
    add_pp r4.z, r4.z, r4.z
    mad_pp r5.xyz, r2, -r4.z, r3
    mul_pp r4.xzw, r4.x, c14.xyyz
    mov r2.w, c21.x
    dp4_pp r7.x, c1, r2
    dp4_pp r7.y, c2, r2
    dp4_pp r7.z, c3, r2
    add_pp r6.xzw, r7.xyyz, v3.xyyz
    max_pp r7.xyz, r6.xzww, c21.y
    abs r2.w, c13.w
    log_pp r8.x, r7.x
    log_pp r8.y, r7.y
    log_pp r8.z, r7.z
    mul_pp r6.xzw, r8.xyyz, c21.z
    exp_pp r8.x, r6.x
    exp_pp r8.y, r6.z
    exp_pp r8.z, r6.w
    mad_pp r6.xzw, r8.xyyz, c20.x, c20.y
    max_pp r8.xyz, r6.xzww, c21.y
    cmp_pp r6.xzw, -r2.w, r8.xyyz, r7.xyyz
    if_lt -c6.w, r6.y
      nrm_pp r7.xyz, r5
      add r8.xyz, c4, -v5
      rcp r9.x, r7.x
      rcp r9.y, r7.y
      rcp r9.z, r7.z
      mul_pp r8.xyz, r8, r9
      add r10.xyz, c5, -v5
      mul_pp r9.xyz, r9, r10
      cmp_pp r8.xyz, -r7, r9, r8
      min_pp r5.w, r8.y, r8.x
      min_pp r7.w, r8.z, r5.w
      add r8.xyz, -c6, v5
      mad_pp r7.xyz, r7, r7.w, r8
    else
      mov_pp r7.xyz, r5
    endif
    mad_pp r5.w, r4.y, -c20.z, c20.w
    mul_pp r5.w, r4.y, r5.w
    mul_pp r7.w, r5.w, c21.w
    texldl_pp r8, r7, s0
    pow_pp r5.w, r8.w, c7.y
    mul_pp r5.w, r5.w, c7.x
    mul_pp r9.xyz, r8, r5.w
    mov r8.w, c5.w
    if_lt r8.w, c22.x
      if_lt -c10.w, r6.y
        nrm_pp r10.xyz, r5
        add r11.xyz, c8, -v5
        rcp r12.x, r10.x
        rcp r12.y, r10.y
        rcp r12.z, r10.z
        mul_pp r11.xyz, r11, r12
        add r13.xyz, c9, -v5
        mul_pp r12.xyz, r12, r13
        cmp_pp r11.xyz, -r10, r12, r11
        min_pp r6.y, r11.y, r11.x
        min_pp r8.w, r11.z, r6.y
        add r11.xyz, -c10, v5
        mad_pp r7.xyz, r10, r8.w, r11
      else
        mov_pp r7.xyz, r5
      endif
      texldl_pp r7, r7, s1
      pow_pp r5.x, r7.w, c11.y
      mul_pp r5.x, r5.x, c11.x
      mul_pp r5.xyz, r7, r5.x
      mad r7.xyz, r5.w, r8, -r5
      mad_pp r9.xyz, c5.w, r7, r5
    endif
    mul_pp r5.xyz, r3.w, r9
    mad_pp r7.xyz, v1, -r1.w, c0
    dp3_pp r1.w, r7, r7
    add r5.w, -r1.w, c22.y
    rsq_pp r1.w, r1.w
    cmp_pp r1.w, r5.w, c22.z, r1.w
    mul_pp r7.xyz, r1.w, r7
    dp3_pp r1.w, r2, -r3
    add r5.w, -r1.w, c22.w
    mad_pp r8.xyz, -r3, r5.w, r2
    cmp_pp r2.xyz, r1.w, r2, r8
    dp3_pp r1.w, r2, c0
    max_pp r5.w, r1.w, c21.y
    dp3_pp r1.w, r2, r7
    max_pp r6.y, r1.w, c21.y
    dp3_pp r1.w, r2, -r3
    max_pp r2.x, r1.w, c21.y
    dp3_pp r1.w, c0, r7
    max_pp r2.y, r1.w, c21.y
    mul_pp r1.w, r4.y, r4.y
    mad_pp r2.z, r4.y, -r4.y, c21.x
    mad_pp r3.x, r2.x, r2.z, r1.w
    mad_pp r2.z, r5.w, r2.z, r1.w
    mul_pp r2.z, r2.z, r2.x
    mad r2.z, r5.w, r3.x, r2.z
    add r2.z, r2.z, c22.w
    rcp r2.z, r2.z
    add_pp r2.z, r2.z, r2.z
    mul_pp r3.x, r1.w, r1.w
    mul r3.y, r6.y, r6.y
    mad r7.xy, r1.w, r1.w, c23
    mad_pp r3.y, r3.y, r7.x, c21.x
    mul r3.y, r3.y, r3.y
    mad r3.y, r3.y, c23.z, c23.w
    rcp r3.y, r3.y
    mul_pp r3.x, r3.y, r3.x
    add_pp r3.y, -r5.w, c21.x
    mul_pp r3.z, r3.y, r3.y
    mul_pp r3.z, r3.z, r3.z
    mul_pp r3.y, r3.y, r3.z
    add_pp r2.x, -r2.x, c21.x
    mul_pp r3.z, r2.x, r2.x
    mul_pp r3.z, r3.z, r3.z
    mul_pp r2.x, r2.x, r3.z
    dp2add_pp r3.z, r2.y, r2.y, c21.y
    mad_pp r3.z, r3.z, r4.y, c24.x
    mad_pp r3.y, r3.z, r3.y, c21.x
    mad_pp r3.z, r3.z, r2.x, c21.x
    mul_pp r3.y, r3.z, r3.y
    mul r2.z, r2.z, r3.x
    mul_pp r3.x, r2.z, c24.y
    mad r2.z, r2.z, -c24.y, c24.z
    rsq r3.z, r3.x
    rcp_pp r3.z, r3.z
    cmp_pp r2.z, r2.z, c24.w, r3.z
    cmp_pp r2.z, -r2.w, r2.z, r3.x
    mul_pp r2.z, r5.w, r2.z
    max_pp r3.x, r2.z, c21.y
    mul_pp r2.z, r5.w, r3.y
    mul_pp r1.w, r1.w, r4.y
    mad_pp r1.w, r1.w, -c25.x, c25.y
    rcp_pp r3.y, r7.y
    cmp_pp r1.w, -r2.w, r1.w, r3.y
    add_pp r0.w, -r0.w, c21.x
    add_sat_pp r0.w, r0.w, c17.x
    mul_pp r7.xyz, r2.z, r4.xzww
    mad_pp r3.yzw, r6.xxzw, r3.w, r7.xxyz
    mul_pp r4.xyz, r4.xzww, r3.x
    add_pp r2.y, -r2.y, c21.x
    mul_pp r2.z, r2.y, r2.y
    mul_pp r2.z, r2.z, r2.z
    mul_pp r2.y, r2.y, r2.z
    lrp_pp r6.xyz, r2.y, c21.x, r0
    mul_pp r2.yzw, r4.xxyz, r6.xxyz
    mad_pp r1.xyz, r1, r3.yzww, r2.yzww
    mul_pp r2.yzw, r5.xxyz, r1.w
    lrp_pp r3.xyz, r2.x, r0.w, r0
    mad_pp r0.xyz, r2.yzww, r3, r1
    texld r1, v0, s4
    mad_pp oC0.xyz, r1, c19, r0

// approximately 188 instruction slots used (8 texture, 180 arithmetic)
"
}
SubProgram "d3d11 " {
// Stats: 147 math, 4 textures, 4 branches
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "_ALPHABLEND_ON" }
SetTexture 0 [_MainTex] 2D 2
SetTexture 1 [_ShadowMapTexture] 2D 5
SetTexture 2 [_OcclusionMap] 2D 3
SetTexture 3 [_EmissionMap] 2D 4
SetTexture 4 [unity_SpecCube0] CUBE 0
SetTexture 5 [unity_SpecCube1] CUBE 1
ConstBuffer "$Globals" 240
Vector 32 [unity_ColorSpaceDielectricSpec]
Vector 48 [unity_ColorSpaceLuminance]
Vector 96 [_LightColor0]
Vector 128 [_Color]
Float 200 [_Metallic]
Float 204 [_Glossiness]
Float 208 [_OcclusionStrength]
Vector 224 [_EmissionColor]
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
Vector 608 [unity_SHAr]
Vector 624 [unity_SHAg]
Vector 640 [unity_SHAb]
ConstBuffer "UnityReflectionProbes" 128
Vector 0 [unity_SpecCube0_BoxMax]
Vector 16 [unity_SpecCube0_BoxMin]
Vector 32 [unity_SpecCube0_ProbePosition]
Vector 48 [unity_SpecCube0_HDR]
Vector 64 [unity_SpecCube1_BoxMax]
Vector 80 [unity_SpecCube1_BoxMin]
Vector 96 [unity_SpecCube1_ProbePosition]
Vector 112 [unity_SpecCube1_HDR]
BindCB  "$Globals" 0
BindCB  "UnityLighting" 1
BindCB  "UnityReflectionProbes" 2
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xy w
// TEXCOORD                 8   xyz         8     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer cb0[15], immediateIndexed
      dcl_constantbuffer cb1[41], immediateIndexed
      dcl_constantbuffer cb2[8], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_resource_texturecube (float,float,float,float) t5
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.xyw
      dcl_input_ps linear v8.xyz
      dcl_output o0.xyzw
      dcl_temps 13
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul o0.w, r0.w, cb0[8].w
   2: mul r1.xyz, r0.xyzx, cb0[8].xyzx
   3: mad r0.xyz, cb0[8].xyzx, r0.xyzx, -cb0[2].xyzx
   4: mad r0.xyz, cb0[12].zzzz, r0.xyzx, cb0[2].xyzx
   5: mad r0.w, -cb0[12].z, cb0[2].w, cb0[2].w
   6: mul r1.xyz, r0.wwww, r1.xyzx
   7: dp3 r1.w, v5.xyzx, v5.xyzx
   8: rsq r1.w, r1.w
   9: mul r2.xyz, r1.wwww, v5.xyzx
  10: dp3 r1.w, v2.xyzx, v2.xyzx
  11: rsq r1.w, r1.w
  12: mul r3.xyz, r1.wwww, v2.xyzx
  13: div r4.xy, v7.xyxx, v7.wwww
  14: sample r4.xyzw, r4.xyxx, t1.xyzw, s5
  15: sample r5.xyzw, v1.xyxx, t2.xyzw, s3
  16: add r3.w, -cb0[13].x, l(1.000000)
  17: mad r3.w, r5.y, cb0[13].x, r3.w
  18: add r4.y, -cb0[12].w, l(1.000000)
  19: dp3 r4.z, r3.xyzx, r2.xyzx
  20: add r4.z, r4.z, r4.z
  21: mad r5.xyz, r2.xyzx, -r4.zzzz, r3.xyzx
  22: mul r4.xzw, r4.xxxx, cb0[6].xxyz
  23: mov r2.w, l(1.000000)
  24: dp4 r6.x, cb1[38].xyzw, r2.xyzw
  25: dp4 r6.y, cb1[39].xyzw, r2.xyzw
  26: dp4 r6.z, cb1[40].xyzw, r2.xyzw
  27: add r6.xyz, r6.xyzx, v6.xyzx
  28: max r6.xyz, r6.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  29: eq r2.w, cb0[3].w, l(0.000000)
  30: log r7.xyz, r6.xyzx
  31: mul r7.xyz, r7.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  32: exp r7.xyz, r7.xyzx
  33: mad r7.xyz, r7.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  34: max r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  35: movc r6.xyz, r2.wwww, r7.xyzx, r6.xyzx
  36: lt r5.w, l(0.000000), cb2[2].w
  37: if_nz r5.w
  38:   dp3 r5.w, r5.xyzx, r5.xyzx
  39:   rsq r5.w, r5.w
  40:   mul r7.xyz, r5.wwww, r5.xyzx
  41:   add r8.xyz, -v8.xyzx, cb2[0].xyzx
  42:   div r8.xyz, r8.xyzx, r7.xyzx
  43:   add r9.xyz, -v8.xyzx, cb2[1].xyzx
  44:   div r9.xyz, r9.xyzx, r7.xyzx
  45:   lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
  46:   movc r8.xyz, r10.xyzx, r8.xyzx, r9.xyzx
  47:   min r5.w, r8.y, r8.x
  48:   min r5.w, r8.z, r5.w
  49:   add r8.xyz, v8.xyzx, -cb2[2].xyzx
  50:   mad r7.xyz, r7.xyzx, r5.wwww, r8.xyzx
  51: else 
  52:   mov r7.xyz, r5.xyzx
  53: endif 
  54: mad r5.w, -r4.y, l(0.700000), l(1.700000)
  55: mul r5.w, r4.y, r5.w
  56: mul r5.w, r5.w, l(6.000000)
  57: sample_l r7.xyzw, r7.xyzx, t4.xyzw, s0, r5.w
  58: log r6.w, r7.w
  59: mul r6.w, r6.w, cb2[3].y
  60: exp r6.w, r6.w
  61: mul r6.w, r6.w, cb2[3].x
  62: mul r8.xyz, r7.xyzx, r6.wwww
  63: lt r7.w, cb2[1].w, l(0.999990)
  64: if_nz r7.w
  65:   lt r7.w, l(0.000000), cb2[6].w
  66:   if_nz r7.w
  67:     dp3 r7.w, r5.xyzx, r5.xyzx
  68:     rsq r7.w, r7.w
  69:     mul r9.xyz, r5.xyzx, r7.wwww
  70:     add r10.xyz, -v8.xyzx, cb2[4].xyzx
  71:     div r10.xyz, r10.xyzx, r9.xyzx
  72:     add r11.xyz, -v8.xyzx, cb2[5].xyzx
  73:     div r11.xyz, r11.xyzx, r9.xyzx
  74:     lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
  75:     movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
  76:     min r7.w, r10.y, r10.x
  77:     min r7.w, r10.z, r7.w
  78:     add r10.xyz, v8.xyzx, -cb2[6].xyzx
  79:     mad r5.xyz, r9.xyzx, r7.wwww, r10.xyzx
  80:   endif 
  81:   sample_l r5.xyzw, r5.xyzx, t5.xyzw, s1, r5.w
  82:   log r5.w, r5.w
  83:   mul r5.w, r5.w, cb2[7].y
  84:   exp r5.w, r5.w
  85:   mul r5.w, r5.w, cb2[7].x
  86:   mul r5.xyz, r5.xyzx, r5.wwww
  87:   mad r7.xyz, r6.wwww, r7.xyzx, -r5.xyzx
  88:   mad r8.xyz, cb2[1].wwww, r7.xyzx, r5.xyzx
  89: endif 
  90: mul r5.xyz, r3.wwww, r8.xyzx
  91: mad r7.xyz, -v2.xyzx, r1.wwww, cb1[0].xyzx
  92: dp3 r1.w, r7.xyzx, r7.xyzx
  93: max r1.w, r1.w, l(0.001000)
  94: rsq r1.w, r1.w
  95: mul r7.xyz, r1.wwww, r7.xyzx
  96: dp3 r1.w, r2.xyzx, -r3.xyzx
  97: lt r5.w, r1.w, l(0.000000)
  98: add r1.w, -r1.w, l(0.000010)
  99: mad r8.xyz, -r3.xyzx, r1.wwww, r2.xyzx
 100: movc r2.xyz, r5.wwww, r8.xyzx, r2.xyzx
 101: dp3 r1.w, r2.xyzx, cb1[0].xyzx
 102: max r1.w, r1.w, l(0.000000)
 103: dp3 r5.w, r2.xyzx, r7.xyzx
 104: max r5.w, r5.w, l(0.000000)
 105: dp3 r2.x, r2.xyzx, -r3.xyzx
 106: dp3 r2.y, cb1[0].xyzx, r7.xyzx
 107: max r2.xy, r2.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
 108: mul r2.z, r4.y, r4.y
 109: mad r3.x, -r4.y, r4.y, l(1.000000)
 110: mad r3.y, r2.x, r3.x, r2.z
 111: mad r3.x, r1.w, r3.x, r2.z
 112: mul r3.x, r2.x, r3.x
 113: mad r3.x, r1.w, r3.y, r3.x
 114: add r3.x, r3.x, l(0.000010)
 115: div r3.x, l(2.000000), r3.x
 116: mul r3.y, r2.z, r2.z
 117: mul r3.z, r5.w, r5.w
 118: mad r7.xy, r2.zzzz, r2.zzzz, l(-1.000000, 1.000000, 0.000000, 0.000000)
 119: mad r3.z, r3.z, r7.x, l(1.000000)
 120: mul r3.z, r3.z, r3.z
 121: mad r3.z, r3.z, l(3.141593), l(0.000000)
 122: div r3.y, r3.y, r3.z
 123: add r3.z, -r1.w, l(1.000000)
 124: mul r5.w, r3.z, r3.z
 125: mul r5.w, r5.w, r5.w
 126: mul r3.z, r3.z, r5.w
 127: add r2.x, -r2.x, l(1.000000)
 128: mul r5.w, r2.x, r2.x
 129: mul r5.w, r5.w, r5.w
 130: mul r2.x, r2.x, r5.w
 131: mul r5.w, r2.y, r2.y
 132: dp2 r5.w, r5.wwww, r4.yyyy
 133: add r5.w, r5.w, l(-0.500000)
 134: mad r3.z, r5.w, r3.z, l(1.000000)
 135: mad r5.w, r5.w, r2.x, l(1.000000)
 136: mul r3.z, r3.z, r5.w
 137: mul r3.x, r3.y, r3.x
 138: mul r3.x, r3.x, l(0.785398)
 139: max r3.y, r3.x, l(0.000100)
 140: sqrt r3.y, r3.y
 141: movc r3.x, r2.w, r3.y, r3.x
 142: mul r3.x, r1.w, r3.x
 143: max r3.x, r3.x, l(0.000000)
 144: mul r1.w, r1.w, r3.z
 145: mul r2.z, r2.z, r4.y
 146: mad r2.z, -r2.z, l(0.280000), l(1.000000)
 147: div r3.y, l(1.000000, 1.000000, 1.000000, 1.000000), r7.y
 148: movc r2.z, r2.w, r2.z, r3.y
 149: add r0.w, -r0.w, cb0[12].w
 150: add_sat r0.w, r0.w, l(1.000000)
 151: mul r7.xyz, r1.wwww, r4.xzwx
 152: mad r3.yzw, r6.xxyz, r3.wwww, r7.xxyz
 153: mul r4.xyz, r4.xzwx, r3.xxxx
 154: add r1.w, -r2.y, l(1.000000)
 155: mul r2.y, r1.w, r1.w
 156: mul r2.y, r2.y, r2.y
 157: mul r1.w, r1.w, r2.y
 158: add r6.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 159: mad r6.xyz, r6.xyzx, r1.wwww, r0.xyzx
 160: mul r4.xyz, r4.xyzx, r6.xyzx
 161: mad r1.xyz, r1.xyzx, r3.yzwy, r4.xyzx
 162: mul r2.yzw, r5.xxyz, r2.zzzz
 163: add r3.xyz, -r0.xyzx, r0.wwww
 164: mad r0.xyz, r2.xxxx, r3.xyzx, r0.xyzx
 165: mad r0.xyz, r2.yzwy, r0.xyzx, r1.xyzx
 166: sample r1.xyzw, v1.xyxx, t3.xyzw, s4
 167: mad o0.xyz, r1.xyzx, cb0[14].xyzx, r0.xyzx
 168: ret 
// Approximately 0 instruction slots used
"
}
}
 }


 // Stats for Vertex shader:
 //       d3d11 : 45 avg math (37..49)
 //        d3d9 : 42 avg math (37..46)
 //      opengl : 102 avg math (94..113), 3 avg texture (1..7), 2 avg branch (2..6)
 // Stats for Fragment shader:
 //       d3d11 : 82 avg math (74..95), 3 avg texture (1..7)
 //        d3d9 : 97 avg math (88..109), 3 avg texture (1..7)
 Pass {
  Name "FORWARD_DELTA"
  Tags { "LIGHTMODE"="ForwardAdd" "SHADOWSUPPORT"="true" "RenderType"="Opaque" "PerformanceChecks"="False" }
  ZWrite Off
  Blend [_SrcBlend] One
  GpuProgramID 129312
Program "vp" {
SubProgram "opengl " {
// Stats: 97 math, 2 textures, 2 branches
Keywords { "POINT" "SHADOWS_OFF" }
"#version 120

#ifdef VERTEX
uniform vec3 _WorldSpaceCameraPos;
uniform vec4 _WorldSpaceLightPos0;

uniform mat4 _Object2World;
uniform mat4 _World2Object;
uniform vec4 unity_WorldTransformParams;
uniform vec4 _MainTex_ST;
uniform vec4 _DetailAlbedoMap_ST;
uniform float _UVSec;
uniform mat4 _LightMatrix0;
attribute vec4 TANGENT;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec3 xlv_TEXCOORD5;
void main ()
{
  vec2 tmpvar_1;
  tmpvar_1 = gl_MultiTexCoord0.xy;
  vec2 tmpvar_2;
  tmpvar_2 = gl_MultiTexCoord1.xy;
  vec4 tmpvar_3;
  vec4 tmpvar_4;
  vec4 tmpvar_5;
  vec4 tmpvar_6;
  vec4 tmpvar_7;
  tmpvar_7 = (_Object2World * gl_Vertex);
  tmpvar_3 = (gl_ModelViewProjectionMatrix * gl_Vertex);
  vec4 texcoord_8;
  texcoord_8.xy = ((gl_MultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  vec2 tmpvar_9;
  if ((_UVSec == 0.0)) {
    tmpvar_9 = tmpvar_1;
  } else {
    tmpvar_9 = tmpvar_2;
  };
  texcoord_8.zw = ((tmpvar_9 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  vec4 v_10;
  v_10.x = _World2Object[0].x;
  v_10.y = _World2Object[1].x;
  v_10.z = _World2Object[2].x;
  v_10.w = _World2Object[3].x;
  vec4 v_11;
  v_11.x = _World2Object[0].y;
  v_11.y = _World2Object[1].y;
  v_11.z = _World2Object[2].y;
  v_11.w = _World2Object[3].y;
  vec4 v_12;
  v_12.x = _World2Object[0].z;
  v_12.y = _World2Object[1].z;
  v_12.z = _World2Object[2].z;
  v_12.w = _World2Object[3].z;
  vec3 tmpvar_13;
  tmpvar_13 = normalize(((
    (v_10.xyz * gl_Normal.x)
   + 
    (v_11.xyz * gl_Normal.y)
  ) + (v_12.xyz * gl_Normal.z)));
  mat3 tmpvar_14;
  tmpvar_14[0] = _Object2World[0].xyz;
  tmpvar_14[1] = _Object2World[1].xyz;
  tmpvar_14[2] = _Object2World[2].xyz;
  vec4 tmpvar_15;
  tmpvar_15.xyz = normalize((tmpvar_14 * TANGENT.xyz));
  tmpvar_15.w = TANGENT.w;
  vec3 tmpvar_16;
  vec3 tmpvar_17;
  tmpvar_16 = tmpvar_15.xyz;
  tmpvar_17 = (((tmpvar_13.yzx * tmpvar_15.zxy) - (tmpvar_13.zxy * tmpvar_15.yzx)) * (TANGENT.w * unity_WorldTransformParams.w));
  vec3 tmpvar_18;
  vec3 tmpvar_19;
  vec3 tmpvar_20;
  tmpvar_18.x = tmpvar_16.x;
  tmpvar_18.y = tmpvar_17.x;
  tmpvar_18.z = tmpvar_13.x;
  tmpvar_19.x = tmpvar_16.y;
  tmpvar_19.y = tmpvar_17.y;
  tmpvar_19.z = tmpvar_13.y;
  tmpvar_20.x = tmpvar_16.z;
  tmpvar_20.y = tmpvar_17.z;
  tmpvar_20.z = tmpvar_13.z;
  vec3 v_21;
  v_21.x = tmpvar_18.x;
  v_21.y = tmpvar_19.x;
  v_21.z = tmpvar_20.x;
  tmpvar_4.xyz = v_21;
  vec3 v_22;
  v_22.x = tmpvar_18.y;
  v_22.y = tmpvar_19.y;
  v_22.z = tmpvar_20.y;
  tmpvar_5.xyz = v_22;
  vec3 v_23;
  v_23.x = tmpvar_18.z;
  v_23.y = tmpvar_19.z;
  v_23.z = tmpvar_20.z;
  tmpvar_6.xyz = v_23;
  vec3 tmpvar_24;
  tmpvar_24 = (_WorldSpaceLightPos0.xyz - (tmpvar_7.xyz * _WorldSpaceLightPos0.w));
  tmpvar_4.w = tmpvar_24.x;
  tmpvar_5.w = tmpvar_24.y;
  tmpvar_6.w = tmpvar_24.z;
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = texcoord_8;
  xlv_TEXCOORD1 = (tmpvar_7.xyz - _WorldSpaceCameraPos);
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  xlv_TEXCOORD5 = (_LightMatrix0 * (_Object2World * gl_Vertex)).xyz;
}


#endif
#ifdef FRAGMENT
uniform vec4 unity_ColorSpaceDielectricSpec;
uniform vec4 unity_ColorSpaceLuminance;
uniform vec4 _LightColor0;
uniform vec4 _Color;
uniform sampler2D _MainTex;
uniform float _Metallic;
uniform float _Glossiness;
uniform sampler2D _LightTexture0;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec3 xlv_TEXCOORD5;
void main ()
{
  vec3 tmpvar_1;
  tmpvar_1 = (_Color.xyz * texture2D (_MainTex, xlv_TEXCOORD0.xy).xyz);
  vec3 tmpvar_2;
  vec3 tmpvar_3;
  tmpvar_3 = mix (unity_ColorSpaceDielectricSpec.xyz, tmpvar_1, vec3(_Metallic));
  tmpvar_2 = (tmpvar_1 * (unity_ColorSpaceDielectricSpec.w - (_Metallic * unity_ColorSpaceDielectricSpec.w)));
  vec3 tmpvar_4;
  tmpvar_4 = normalize(xlv_TEXCOORD2_2.xyz);
  vec3 tmpvar_5;
  tmpvar_5.x = xlv_TEXCOORD2.w;
  tmpvar_5.y = xlv_TEXCOORD2_1.w;
  tmpvar_5.z = xlv_TEXCOORD2_2.w;
  vec3 tmpvar_6;
  vec3 tmpvar_7;
  tmpvar_7 = normalize(tmpvar_5);
  tmpvar_6 = (_LightColor0.xyz * texture2D (_LightTexture0, vec2(dot (xlv_TEXCOORD5, xlv_TEXCOORD5))).w);
  vec3 viewDir_8;
  viewDir_8 = -(normalize(xlv_TEXCOORD1));
  float specularTerm_9;
  float tmpvar_10;
  tmpvar_10 = (1.0 - _Glossiness);
  vec3 tmpvar_11;
  vec3 inVec_12;
  inVec_12 = (tmpvar_7 + viewDir_8);
  tmpvar_11 = (inVec_12 * inversesqrt(max (0.001, 
    dot (inVec_12, inVec_12)
  )));
  float tmpvar_13;
  tmpvar_13 = dot (tmpvar_4, viewDir_8);
  vec3 tmpvar_14;
  if ((tmpvar_13 < 0.0)) {
    tmpvar_14 = (tmpvar_4 + (viewDir_8 * (
      -(tmpvar_13)
     + 1e-05)));
  } else {
    tmpvar_14 = tmpvar_4;
  };
  float tmpvar_15;
  tmpvar_15 = max (0.0, dot (tmpvar_14, tmpvar_7));
  float tmpvar_16;
  tmpvar_16 = max (0.0, dot (tmpvar_14, tmpvar_11));
  float tmpvar_17;
  tmpvar_17 = max (0.0, dot (tmpvar_14, viewDir_8));
  float tmpvar_18;
  tmpvar_18 = max (0.0, dot (tmpvar_7, tmpvar_11));
  float tmpvar_19;
  tmpvar_19 = (tmpvar_10 * tmpvar_10);
  float tmpvar_20;
  tmpvar_20 = (tmpvar_10 * tmpvar_10);
  float tmpvar_21;
  tmpvar_21 = (tmpvar_20 * tmpvar_20);
  float tmpvar_22;
  tmpvar_22 = (((tmpvar_16 * tmpvar_16) * (tmpvar_21 - 1.0)) + 1.0);
  float x_23;
  x_23 = (1.0 - tmpvar_15);
  float x_24;
  x_24 = (1.0 - tmpvar_17);
  float tmpvar_25;
  tmpvar_25 = (0.5 + ((2.0 * tmpvar_18) * (tmpvar_18 * tmpvar_10)));
  float tmpvar_26;
  tmpvar_26 = ((1.0 + (
    (tmpvar_25 - 1.0)
   * 
    ((x_23 * x_23) * ((x_23 * x_23) * x_23))
  )) * (1.0 + (
    (tmpvar_25 - 1.0)
   * 
    ((x_24 * x_24) * ((x_24 * x_24) * x_24))
  )));
  float tmpvar_27;
  tmpvar_27 = (((2.0 / 
    (((tmpvar_15 * (
      (tmpvar_17 * (1.0 - tmpvar_19))
     + tmpvar_19)) + (tmpvar_17 * (
      (tmpvar_15 * (1.0 - tmpvar_19))
     + tmpvar_19))) + 1e-05)
  ) * (tmpvar_21 / 
    (((3.141593 * tmpvar_22) * tmpvar_22) + 1e-07)
  )) * 0.7853982);
  specularTerm_9 = tmpvar_27;
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    specularTerm_9 = sqrt(max (0.0001, tmpvar_27));
  };
  float tmpvar_28;
  tmpvar_28 = max (0.0, (specularTerm_9 * tmpvar_15));
  specularTerm_9 = tmpvar_28;
  float x_29;
  x_29 = (1.0 - tmpvar_18);
  vec4 tmpvar_30;
  tmpvar_30.w = 1.0;
  tmpvar_30.xyz = ((tmpvar_2 * (tmpvar_6 * 
    (tmpvar_26 * tmpvar_15)
  )) + ((tmpvar_28 * tmpvar_6) * (tmpvar_3 + 
    ((1.0 - tmpvar_3) * ((x_29 * x_29) * ((x_29 * x_29) * x_29)))
  )));
  vec4 xlat_varoutput_31;
  xlat_varoutput_31.xyz = tmpvar_30.xyz;
  xlat_varoutput_31.w = 1.0;
  gl_FragData[0] = xlat_varoutput_31;
}


#endif
"
}
SubProgram "d3d9 " {
// Stats: 41 math
Keywords { "POINT" "SHADOWS_OFF" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
Matrix 11 [_LightMatrix0] 3
Matrix 4 [_Object2World]
Matrix 8 [_World2Object] 3
Matrix 0 [glstate_matrix_mvp]
Vector 18 [_DetailAlbedoMap_ST]
Vector 17 [_MainTex_ST]
Float 19 [_UVSec]
Vector 14 [_WorldSpaceCameraPos]
Vector 15 [_WorldSpaceLightPos0]
Vector 16 [unity_WorldTransformParams]
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   row_major float4x4 _LightMatrix0;
//   float4 _MainTex_ST;
//   row_major float4x4 _Object2World;
//   float _UVSec;
//   row_major float4x4 _World2Object;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 glstate_matrix_mvp;
//   float4 unity_WorldTransformParams;
//
//
// Registers:
//
//   Name                       Reg   Size
//   -------------------------- ----- ----
//   glstate_matrix_mvp         c0       4
//   _Object2World              c4       4
//   _World2Object              c8       3
//   _LightMatrix0              c11      3
//   _WorldSpaceCameraPos       c14      1
//   _WorldSpaceLightPos0       c15      1
//   unity_WorldTransformParams c16      1
//   _MainTex_ST                c17      1
//   _DetailAlbedoMap_ST        c18      1
//   _UVSec                     c19      1
//

    vs_3_0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_tangent v4
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6.xyz
    dp4 o0.x, c0, v0
    dp4 o0.y, c1, v0
    dp4 o0.z, c2, v0
    dp4 o0.w, c3, v0
    mad o1.xy, v2, c17, c17.zwzw
    abs r0.x, c19.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c18.xyxy, c18
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add o2.xyz, r0, -c14
    mul r1.xyz, c9, v1.y
    mad r1.xyz, c8, v1.x, r1
    mad r1.xyz, c10, v1.z, r1
    nrm r2.xyz, r1
    dp3 r1.x, c4, v4
    dp3 r1.y, c5, v4
    dp3 r1.z, c6, v4
    nrm r3.xyz, r1
    mul r1.xyz, r2.zxyw, r3.yzxw
    mad r1.xyz, r2.yzxw, r3.zxyw, -r1
    mov o5.xyz, r2
    mov o3.xyz, r3
    mul r1.w, c16.w, v4.w
    mul o4.xyz, r1.w, r1
    dp4 r0.w, c7, v0
    dp4 o6.x, c11, r0
    dp4 o6.y, c12, r0
    dp4 o6.z, c13, r0
    mad r0.xyz, r0, -c15.w, c15
    mov o3.w, r0.x
    mov o4.w, r0.y
    mov o5.w, r0.z

// approximately 40 instruction slots used
"
}
SubProgram "d3d11 " {
// Stats: 45 math
Keywords { "POINT" "SHADOWS_OFF" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
ConstBuffer "$Globals" 304
Matrix 240 [_LightMatrix0]
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
Vector 336 [unity_WorldTransformParams]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer cb0[19], immediateIndexed
      dcl_constantbuffer cb1[5], immediateIndexed
      dcl_constantbuffer cb2[1], immediateIndexed
      dcl_constantbuffer cb3[22], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: mad o0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   4: eq r0.x, cb0[13].z, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[11].xxxy, cb0[11].zzzw
   7: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  13: mad r0.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  14: mov o3.w, r0.x
  15: mul r1.xyz, v4.yyyy, cb3[13].xyzx
  16: mad r1.xyz, cb3[12].xyzx, v4.xxxx, r1.xyzx
  17: mad r1.xyz, cb3[14].xyzx, v4.zzzz, r1.xyzx
  18: dp3 r0.x, r1.xyzx, r1.xyzx
  19: rsq r0.x, r0.x
  20: mul r1.xyz, r0.xxxx, r1.xyzx
  21: mov o3.xyz, r1.xyzx
  22: mul r2.x, v1.x, cb3[16].x
  23: mul r2.y, v1.x, cb3[17].x
  24: mul r2.z, v1.x, cb3[18].x
  25: mul r3.x, v1.y, cb3[16].y
  26: mul r3.y, v1.y, cb3[17].y
  27: mul r3.z, v1.y, cb3[18].y
  28: add r2.xyz, r2.xyzx, r3.xyzx
  29: mul r3.x, v1.z, cb3[16].z
  30: mul r3.y, v1.z, cb3[17].z
  31: mul r3.z, v1.z, cb3[18].z
  32: add r2.xyz, r2.xyzx, r3.xyzx
  33: dp3 r0.x, r2.xyzx, r2.xyzx
  34: rsq r0.x, r0.x
  35: mul r2.xyz, r0.xxxx, r2.xyzx
  36: mul r3.xyz, r1.yzxy, r2.zxyz
  37: mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
  38: mov o5.xyz, r2.xyzx
  39: mul r0.x, v4.w, cb3[21].w
  40: mul o4.xyz, r0.xxxx, r1.xyzx
  41: mov o4.w, r0.y
  42: mov o5.w, r0.z
  43: mul r0.xyzw, v0.yyyy, cb3[13].xyzw
  44: mad r0.xyzw, cb3[12].xyzw, v0.xxxx, r0.xyzw
  45: mad r0.xyzw, cb3[14].xyzw, v0.zzzz, r0.xyzw
  46: mad r0.xyzw, cb3[15].xyzw, v0.wwww, r0.xyzw
  47: mul r1.xyz, r0.yyyy, cb0[16].xyzx
  48: mad r1.xyz, cb0[15].xyzx, r0.xxxx, r1.xyzx
  49: mad r0.xyz, cb0[17].xyzx, r0.zzzz, r1.xyzx
  50: mad o6.xyz, cb0[18].xyzx, r0.wwww, r0.xyzx
  51: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
// Stats: 94 math, 1 textures, 2 branches
Keywords { "DIRECTIONAL" "SHADOWS_OFF" }
"#version 120

#ifdef VERTEX
uniform vec3 _WorldSpaceCameraPos;
uniform vec4 _WorldSpaceLightPos0;

uniform mat4 _Object2World;
uniform mat4 _World2Object;
uniform vec4 unity_WorldTransformParams;
uniform vec4 _MainTex_ST;
uniform vec4 _DetailAlbedoMap_ST;
uniform float _UVSec;
attribute vec4 TANGENT;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
void main ()
{
  vec2 tmpvar_1;
  tmpvar_1 = gl_MultiTexCoord0.xy;
  vec2 tmpvar_2;
  tmpvar_2 = gl_MultiTexCoord1.xy;
  vec4 tmpvar_3;
  vec4 tmpvar_4;
  vec4 tmpvar_5;
  vec4 tmpvar_6;
  vec4 tmpvar_7;
  tmpvar_7 = (_Object2World * gl_Vertex);
  tmpvar_3 = (gl_ModelViewProjectionMatrix * gl_Vertex);
  vec4 texcoord_8;
  texcoord_8.xy = ((gl_MultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  vec2 tmpvar_9;
  if ((_UVSec == 0.0)) {
    tmpvar_9 = tmpvar_1;
  } else {
    tmpvar_9 = tmpvar_2;
  };
  texcoord_8.zw = ((tmpvar_9 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  vec4 v_10;
  v_10.x = _World2Object[0].x;
  v_10.y = _World2Object[1].x;
  v_10.z = _World2Object[2].x;
  v_10.w = _World2Object[3].x;
  vec4 v_11;
  v_11.x = _World2Object[0].y;
  v_11.y = _World2Object[1].y;
  v_11.z = _World2Object[2].y;
  v_11.w = _World2Object[3].y;
  vec4 v_12;
  v_12.x = _World2Object[0].z;
  v_12.y = _World2Object[1].z;
  v_12.z = _World2Object[2].z;
  v_12.w = _World2Object[3].z;
  vec3 tmpvar_13;
  tmpvar_13 = normalize(((
    (v_10.xyz * gl_Normal.x)
   + 
    (v_11.xyz * gl_Normal.y)
  ) + (v_12.xyz * gl_Normal.z)));
  mat3 tmpvar_14;
  tmpvar_14[0] = _Object2World[0].xyz;
  tmpvar_14[1] = _Object2World[1].xyz;
  tmpvar_14[2] = _Object2World[2].xyz;
  vec4 tmpvar_15;
  tmpvar_15.xyz = normalize((tmpvar_14 * TANGENT.xyz));
  tmpvar_15.w = TANGENT.w;
  vec3 tmpvar_16;
  vec3 tmpvar_17;
  tmpvar_16 = tmpvar_15.xyz;
  tmpvar_17 = (((tmpvar_13.yzx * tmpvar_15.zxy) - (tmpvar_13.zxy * tmpvar_15.yzx)) * (TANGENT.w * unity_WorldTransformParams.w));
  vec3 tmpvar_18;
  vec3 tmpvar_19;
  vec3 tmpvar_20;
  tmpvar_18.x = tmpvar_16.x;
  tmpvar_18.y = tmpvar_17.x;
  tmpvar_18.z = tmpvar_13.x;
  tmpvar_19.x = tmpvar_16.y;
  tmpvar_19.y = tmpvar_17.y;
  tmpvar_19.z = tmpvar_13.y;
  tmpvar_20.x = tmpvar_16.z;
  tmpvar_20.y = tmpvar_17.z;
  tmpvar_20.z = tmpvar_13.z;
  vec3 v_21;
  v_21.x = tmpvar_18.x;
  v_21.y = tmpvar_19.x;
  v_21.z = tmpvar_20.x;
  tmpvar_4.xyz = v_21;
  vec3 v_22;
  v_22.x = tmpvar_18.y;
  v_22.y = tmpvar_19.y;
  v_22.z = tmpvar_20.y;
  tmpvar_5.xyz = v_22;
  vec3 v_23;
  v_23.x = tmpvar_18.z;
  v_23.y = tmpvar_19.z;
  v_23.z = tmpvar_20.z;
  tmpvar_6.xyz = v_23;
  vec3 tmpvar_24;
  tmpvar_24 = (_WorldSpaceLightPos0.xyz - (tmpvar_7.xyz * _WorldSpaceLightPos0.w));
  tmpvar_4.w = tmpvar_24.x;
  tmpvar_5.w = tmpvar_24.y;
  tmpvar_6.w = tmpvar_24.z;
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = texcoord_8;
  xlv_TEXCOORD1 = (tmpvar_7.xyz - _WorldSpaceCameraPos);
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
}


#endif
#ifdef FRAGMENT
uniform vec4 unity_ColorSpaceDielectricSpec;
uniform vec4 unity_ColorSpaceLuminance;
uniform vec4 _LightColor0;
uniform vec4 _Color;
uniform sampler2D _MainTex;
uniform float _Metallic;
uniform float _Glossiness;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
void main ()
{
  vec3 tmpvar_1;
  tmpvar_1 = (_Color.xyz * texture2D (_MainTex, xlv_TEXCOORD0.xy).xyz);
  vec3 tmpvar_2;
  vec3 tmpvar_3;
  tmpvar_3 = mix (unity_ColorSpaceDielectricSpec.xyz, tmpvar_1, vec3(_Metallic));
  tmpvar_2 = (tmpvar_1 * (unity_ColorSpaceDielectricSpec.w - (_Metallic * unity_ColorSpaceDielectricSpec.w)));
  vec3 tmpvar_4;
  tmpvar_4 = normalize(xlv_TEXCOORD2_2.xyz);
  vec3 tmpvar_5;
  tmpvar_5.x = xlv_TEXCOORD2.w;
  tmpvar_5.y = xlv_TEXCOORD2_1.w;
  tmpvar_5.z = xlv_TEXCOORD2_2.w;
  vec3 viewDir_6;
  viewDir_6 = -(normalize(xlv_TEXCOORD1));
  float specularTerm_7;
  float tmpvar_8;
  tmpvar_8 = (1.0 - _Glossiness);
  vec3 tmpvar_9;
  vec3 inVec_10;
  inVec_10 = (tmpvar_5 + viewDir_6);
  tmpvar_9 = (inVec_10 * inversesqrt(max (0.001, 
    dot (inVec_10, inVec_10)
  )));
  float tmpvar_11;
  tmpvar_11 = dot (tmpvar_4, viewDir_6);
  vec3 tmpvar_12;
  if ((tmpvar_11 < 0.0)) {
    tmpvar_12 = (tmpvar_4 + (viewDir_6 * (
      -(tmpvar_11)
     + 1e-05)));
  } else {
    tmpvar_12 = tmpvar_4;
  };
  float tmpvar_13;
  tmpvar_13 = max (0.0, dot (tmpvar_12, tmpvar_5));
  float tmpvar_14;
  tmpvar_14 = max (0.0, dot (tmpvar_12, tmpvar_9));
  float tmpvar_15;
  tmpvar_15 = max (0.0, dot (tmpvar_12, viewDir_6));
  float tmpvar_16;
  tmpvar_16 = max (0.0, dot (tmpvar_5, tmpvar_9));
  float tmpvar_17;
  tmpvar_17 = (tmpvar_8 * tmpvar_8);
  float tmpvar_18;
  tmpvar_18 = (tmpvar_8 * tmpvar_8);
  float tmpvar_19;
  tmpvar_19 = (tmpvar_18 * tmpvar_18);
  float tmpvar_20;
  tmpvar_20 = (((tmpvar_14 * tmpvar_14) * (tmpvar_19 - 1.0)) + 1.0);
  float x_21;
  x_21 = (1.0 - tmpvar_13);
  float x_22;
  x_22 = (1.0 - tmpvar_15);
  float tmpvar_23;
  tmpvar_23 = (0.5 + ((2.0 * tmpvar_16) * (tmpvar_16 * tmpvar_8)));
  float tmpvar_24;
  tmpvar_24 = ((1.0 + (
    (tmpvar_23 - 1.0)
   * 
    ((x_21 * x_21) * ((x_21 * x_21) * x_21))
  )) * (1.0 + (
    (tmpvar_23 - 1.0)
   * 
    ((x_22 * x_22) * ((x_22 * x_22) * x_22))
  )));
  float tmpvar_25;
  tmpvar_25 = (((2.0 / 
    (((tmpvar_13 * (
      (tmpvar_15 * (1.0 - tmpvar_17))
     + tmpvar_17)) + (tmpvar_15 * (
      (tmpvar_13 * (1.0 - tmpvar_17))
     + tmpvar_17))) + 1e-05)
  ) * (tmpvar_19 / 
    (((3.141593 * tmpvar_20) * tmpvar_20) + 1e-07)
  )) * 0.7853982);
  specularTerm_7 = tmpvar_25;
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    specularTerm_7 = sqrt(max (0.0001, tmpvar_25));
  };
  float tmpvar_26;
  tmpvar_26 = max (0.0, (specularTerm_7 * tmpvar_13));
  specularTerm_7 = tmpvar_26;
  float x_27;
  x_27 = (1.0 - tmpvar_16);
  vec4 tmpvar_28;
  tmpvar_28.w = 1.0;
  tmpvar_28.xyz = ((tmpvar_2 * (_LightColor0.xyz * 
    (tmpvar_24 * tmpvar_13)
  )) + ((tmpvar_26 * _LightColor0.xyz) * (tmpvar_3 + 
    ((1.0 - tmpvar_3) * ((x_27 * x_27) * ((x_27 * x_27) * x_27)))
  )));
  vec4 xlat_varoutput_29;
  xlat_varoutput_29.xyz = tmpvar_28.xyz;
  xlat_varoutput_29.w = 1.0;
  gl_FragData[0] = xlat_varoutput_29;
}


#endif
"
}
SubProgram "d3d9 " {
// Stats: 37 math
Keywords { "DIRECTIONAL" "SHADOWS_OFF" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
Matrix 4 [_Object2World] 3
Matrix 7 [_World2Object] 3
Matrix 0 [glstate_matrix_mvp]
Vector 14 [_DetailAlbedoMap_ST]
Vector 13 [_MainTex_ST]
Float 15 [_UVSec]
Vector 10 [_WorldSpaceCameraPos]
Vector 11 [_WorldSpaceLightPos0]
Vector 12 [unity_WorldTransformParams]
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   row_major float4x4 _Object2World;
//   float _UVSec;
//   row_major float4x4 _World2Object;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 glstate_matrix_mvp;
//   float4 unity_WorldTransformParams;
//
//
// Registers:
//
//   Name                       Reg   Size
//   -------------------------- ----- ----
//   glstate_matrix_mvp         c0       4
//   _Object2World              c4       3
//   _World2Object              c7       3
//   _WorldSpaceCameraPos       c10      1
//   _WorldSpaceLightPos0       c11      1
//   unity_WorldTransformParams c12      1
//   _MainTex_ST                c13      1
//   _DetailAlbedoMap_ST        c14      1
//   _UVSec                     c15      1
//

    vs_3_0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_tangent v4
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dp4 o0.x, c0, v0
    dp4 o0.y, c1, v0
    dp4 o0.z, c2, v0
    dp4 o0.w, c3, v0
    mad o1.xy, v2, c13, c13.zwzw
    abs r0.x, c15.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c14.xyxy, c14
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add o2.xyz, r0, -c10
    mad r0.xyz, r0, -c11.w, c11
    mul r1.xyz, c8, v1.y
    mad r1.xyz, c7, v1.x, r1
    mad r1.xyz, c9, v1.z, r1
    nrm r2.xyz, r1
    dp3 r1.x, c4, v4
    dp3 r1.y, c5, v4
    dp3 r1.z, c6, v4
    nrm r3.xyz, r1
    mul r1.xyz, r2.zxyw, r3.yzxw
    mad r1.xyz, r2.yzxw, r3.zxyw, -r1
    mov o5.xyz, r2
    mov o3.xyz, r3
    mul r0.w, c12.w, v4.w
    mul o4.xyz, r0.w, r1
    mov o3.w, r0.x
    mov o4.w, r0.y
    mov o5.w, r0.z

// approximately 36 instruction slots used
"
}
SubProgram "d3d11 " {
// Stats: 37 math
Keywords { "DIRECTIONAL" "SHADOWS_OFF" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
ConstBuffer "$Globals" 240
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
Vector 336 [unity_WorldTransformParams]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer cb0[14], immediateIndexed
      dcl_constantbuffer cb1[5], immediateIndexed
      dcl_constantbuffer cb2[1], immediateIndexed
      dcl_constantbuffer cb3[22], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: mad o0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   4: eq r0.x, cb0[13].z, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[11].xxxy, cb0[11].zzzw
   7: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  13: mad r0.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  14: mov o3.w, r0.x
  15: mul r1.xyz, v4.yyyy, cb3[13].xyzx
  16: mad r1.xyz, cb3[12].xyzx, v4.xxxx, r1.xyzx
  17: mad r1.xyz, cb3[14].xyzx, v4.zzzz, r1.xyzx
  18: dp3 r0.x, r1.xyzx, r1.xyzx
  19: rsq r0.x, r0.x
  20: mul r1.xyz, r0.xxxx, r1.xyzx
  21: mov o3.xyz, r1.xyzx
  22: mul r2.x, v1.x, cb3[16].x
  23: mul r2.y, v1.x, cb3[17].x
  24: mul r2.z, v1.x, cb3[18].x
  25: mul r3.x, v1.y, cb3[16].y
  26: mul r3.y, v1.y, cb3[17].y
  27: mul r3.z, v1.y, cb3[18].y
  28: add r2.xyz, r2.xyzx, r3.xyzx
  29: mul r3.x, v1.z, cb3[16].z
  30: mul r3.y, v1.z, cb3[17].z
  31: mul r3.z, v1.z, cb3[18].z
  32: add r2.xyz, r2.xyzx, r3.xyzx
  33: dp3 r0.x, r2.xyzx, r2.xyzx
  34: rsq r0.x, r0.x
  35: mul r2.xyz, r0.xxxx, r2.xyzx
  36: mul r3.xyz, r1.yzxy, r2.zxyz
  37: mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
  38: mov o5.xyz, r2.xyzx
  39: mul r0.x, v4.w, cb3[21].w
  40: mul o4.xyz, r0.xxxx, r1.xyzx
  41: mov o4.w, r0.y
  42: mov o5.w, r0.z
  43: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
// Stats: 103 math, 3 textures, 2 branches
Keywords { "SPOT" "SHADOWS_OFF" }
"#version 120

#ifdef VERTEX
uniform vec3 _WorldSpaceCameraPos;
uniform vec4 _WorldSpaceLightPos0;

uniform mat4 _Object2World;
uniform mat4 _World2Object;
uniform vec4 unity_WorldTransformParams;
uniform vec4 _MainTex_ST;
uniform vec4 _DetailAlbedoMap_ST;
uniform float _UVSec;
uniform mat4 _LightMatrix0;
attribute vec4 TANGENT;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
void main ()
{
  vec2 tmpvar_1;
  tmpvar_1 = gl_MultiTexCoord0.xy;
  vec2 tmpvar_2;
  tmpvar_2 = gl_MultiTexCoord1.xy;
  vec4 tmpvar_3;
  vec4 tmpvar_4;
  vec4 tmpvar_5;
  vec4 tmpvar_6;
  vec4 tmpvar_7;
  tmpvar_7 = (_Object2World * gl_Vertex);
  tmpvar_3 = (gl_ModelViewProjectionMatrix * gl_Vertex);
  vec4 texcoord_8;
  texcoord_8.xy = ((gl_MultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  vec2 tmpvar_9;
  if ((_UVSec == 0.0)) {
    tmpvar_9 = tmpvar_1;
  } else {
    tmpvar_9 = tmpvar_2;
  };
  texcoord_8.zw = ((tmpvar_9 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  vec4 v_10;
  v_10.x = _World2Object[0].x;
  v_10.y = _World2Object[1].x;
  v_10.z = _World2Object[2].x;
  v_10.w = _World2Object[3].x;
  vec4 v_11;
  v_11.x = _World2Object[0].y;
  v_11.y = _World2Object[1].y;
  v_11.z = _World2Object[2].y;
  v_11.w = _World2Object[3].y;
  vec4 v_12;
  v_12.x = _World2Object[0].z;
  v_12.y = _World2Object[1].z;
  v_12.z = _World2Object[2].z;
  v_12.w = _World2Object[3].z;
  vec3 tmpvar_13;
  tmpvar_13 = normalize(((
    (v_10.xyz * gl_Normal.x)
   + 
    (v_11.xyz * gl_Normal.y)
  ) + (v_12.xyz * gl_Normal.z)));
  mat3 tmpvar_14;
  tmpvar_14[0] = _Object2World[0].xyz;
  tmpvar_14[1] = _Object2World[1].xyz;
  tmpvar_14[2] = _Object2World[2].xyz;
  vec4 tmpvar_15;
  tmpvar_15.xyz = normalize((tmpvar_14 * TANGENT.xyz));
  tmpvar_15.w = TANGENT.w;
  vec3 tmpvar_16;
  vec3 tmpvar_17;
  tmpvar_16 = tmpvar_15.xyz;
  tmpvar_17 = (((tmpvar_13.yzx * tmpvar_15.zxy) - (tmpvar_13.zxy * tmpvar_15.yzx)) * (TANGENT.w * unity_WorldTransformParams.w));
  vec3 tmpvar_18;
  vec3 tmpvar_19;
  vec3 tmpvar_20;
  tmpvar_18.x = tmpvar_16.x;
  tmpvar_18.y = tmpvar_17.x;
  tmpvar_18.z = tmpvar_13.x;
  tmpvar_19.x = tmpvar_16.y;
  tmpvar_19.y = tmpvar_17.y;
  tmpvar_19.z = tmpvar_13.y;
  tmpvar_20.x = tmpvar_16.z;
  tmpvar_20.y = tmpvar_17.z;
  tmpvar_20.z = tmpvar_13.z;
  vec3 v_21;
  v_21.x = tmpvar_18.x;
  v_21.y = tmpvar_19.x;
  v_21.z = tmpvar_20.x;
  tmpvar_4.xyz = v_21;
  vec3 v_22;
  v_22.x = tmpvar_18.y;
  v_22.y = tmpvar_19.y;
  v_22.z = tmpvar_20.y;
  tmpvar_5.xyz = v_22;
  vec3 v_23;
  v_23.x = tmpvar_18.z;
  v_23.y = tmpvar_19.z;
  v_23.z = tmpvar_20.z;
  tmpvar_6.xyz = v_23;
  vec3 tmpvar_24;
  tmpvar_24 = (_WorldSpaceLightPos0.xyz - (tmpvar_7.xyz * _WorldSpaceLightPos0.w));
  tmpvar_4.w = tmpvar_24.x;
  tmpvar_5.w = tmpvar_24.y;
  tmpvar_6.w = tmpvar_24.z;
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = texcoord_8;
  xlv_TEXCOORD1 = (tmpvar_7.xyz - _WorldSpaceCameraPos);
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  xlv_TEXCOORD5 = (_LightMatrix0 * (_Object2World * gl_Vertex));
}


#endif
#ifdef FRAGMENT
uniform vec4 unity_ColorSpaceDielectricSpec;
uniform vec4 unity_ColorSpaceLuminance;
uniform vec4 _LightColor0;
uniform vec4 _Color;
uniform sampler2D _MainTex;
uniform float _Metallic;
uniform float _Glossiness;
uniform sampler2D _LightTexture0;
uniform sampler2D _LightTextureB0;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
void main ()
{
  vec3 tmpvar_1;
  tmpvar_1 = (_Color.xyz * texture2D (_MainTex, xlv_TEXCOORD0.xy).xyz);
  vec3 tmpvar_2;
  vec3 tmpvar_3;
  tmpvar_3 = mix (unity_ColorSpaceDielectricSpec.xyz, tmpvar_1, vec3(_Metallic));
  tmpvar_2 = (tmpvar_1 * (unity_ColorSpaceDielectricSpec.w - (_Metallic * unity_ColorSpaceDielectricSpec.w)));
  vec3 tmpvar_4;
  tmpvar_4 = normalize(xlv_TEXCOORD2_2.xyz);
  vec3 tmpvar_5;
  tmpvar_5.x = xlv_TEXCOORD2.w;
  tmpvar_5.y = xlv_TEXCOORD2_1.w;
  tmpvar_5.z = xlv_TEXCOORD2_2.w;
  vec3 tmpvar_6;
  vec3 tmpvar_7;
  tmpvar_7 = normalize(tmpvar_5);
  tmpvar_6 = (_LightColor0.xyz * ((
    float((xlv_TEXCOORD5.z > 0.0))
   * texture2D (_LightTexture0, 
    ((xlv_TEXCOORD5.xy / xlv_TEXCOORD5.w) + 0.5)
  ).w) * texture2D (_LightTextureB0, vec2(dot (xlv_TEXCOORD5.xyz, xlv_TEXCOORD5.xyz))).w));
  vec3 viewDir_8;
  viewDir_8 = -(normalize(xlv_TEXCOORD1));
  float specularTerm_9;
  float tmpvar_10;
  tmpvar_10 = (1.0 - _Glossiness);
  vec3 tmpvar_11;
  vec3 inVec_12;
  inVec_12 = (tmpvar_7 + viewDir_8);
  tmpvar_11 = (inVec_12 * inversesqrt(max (0.001, 
    dot (inVec_12, inVec_12)
  )));
  float tmpvar_13;
  tmpvar_13 = dot (tmpvar_4, viewDir_8);
  vec3 tmpvar_14;
  if ((tmpvar_13 < 0.0)) {
    tmpvar_14 = (tmpvar_4 + (viewDir_8 * (
      -(tmpvar_13)
     + 1e-05)));
  } else {
    tmpvar_14 = tmpvar_4;
  };
  float tmpvar_15;
  tmpvar_15 = max (0.0, dot (tmpvar_14, tmpvar_7));
  float tmpvar_16;
  tmpvar_16 = max (0.0, dot (tmpvar_14, tmpvar_11));
  float tmpvar_17;
  tmpvar_17 = max (0.0, dot (tmpvar_14, viewDir_8));
  float tmpvar_18;
  tmpvar_18 = max (0.0, dot (tmpvar_7, tmpvar_11));
  float tmpvar_19;
  tmpvar_19 = (tmpvar_10 * tmpvar_10);
  float tmpvar_20;
  tmpvar_20 = (tmpvar_10 * tmpvar_10);
  float tmpvar_21;
  tmpvar_21 = (tmpvar_20 * tmpvar_20);
  float tmpvar_22;
  tmpvar_22 = (((tmpvar_16 * tmpvar_16) * (tmpvar_21 - 1.0)) + 1.0);
  float x_23;
  x_23 = (1.0 - tmpvar_15);
  float x_24;
  x_24 = (1.0 - tmpvar_17);
  float tmpvar_25;
  tmpvar_25 = (0.5 + ((2.0 * tmpvar_18) * (tmpvar_18 * tmpvar_10)));
  float tmpvar_26;
  tmpvar_26 = ((1.0 + (
    (tmpvar_25 - 1.0)
   * 
    ((x_23 * x_23) * ((x_23 * x_23) * x_23))
  )) * (1.0 + (
    (tmpvar_25 - 1.0)
   * 
    ((x_24 * x_24) * ((x_24 * x_24) * x_24))
  )));
  float tmpvar_27;
  tmpvar_27 = (((2.0 / 
    (((tmpvar_15 * (
      (tmpvar_17 * (1.0 - tmpvar_19))
     + tmpvar_19)) + (tmpvar_17 * (
      (tmpvar_15 * (1.0 - tmpvar_19))
     + tmpvar_19))) + 1e-05)
  ) * (tmpvar_21 / 
    (((3.141593 * tmpvar_22) * tmpvar_22) + 1e-07)
  )) * 0.7853982);
  specularTerm_9 = tmpvar_27;
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    specularTerm_9 = sqrt(max (0.0001, tmpvar_27));
  };
  float tmpvar_28;
  tmpvar_28 = max (0.0, (specularTerm_9 * tmpvar_15));
  specularTerm_9 = tmpvar_28;
  float x_29;
  x_29 = (1.0 - tmpvar_18);
  vec4 tmpvar_30;
  tmpvar_30.w = 1.0;
  tmpvar_30.xyz = ((tmpvar_2 * (tmpvar_6 * 
    (tmpvar_26 * tmpvar_15)
  )) + ((tmpvar_28 * tmpvar_6) * (tmpvar_3 + 
    ((1.0 - tmpvar_3) * ((x_29 * x_29) * ((x_29 * x_29) * x_29)))
  )));
  vec4 xlat_varoutput_31;
  xlat_varoutput_31.xyz = tmpvar_30.xyz;
  xlat_varoutput_31.w = 1.0;
  gl_FragData[0] = xlat_varoutput_31;
}


#endif
"
}
SubProgram "d3d9 " {
// Stats: 42 math
Keywords { "SPOT" "SHADOWS_OFF" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
Matrix 8 [_LightMatrix0]
Matrix 4 [_Object2World]
Matrix 12 [_World2Object] 3
Matrix 0 [glstate_matrix_mvp]
Vector 19 [_DetailAlbedoMap_ST]
Vector 18 [_MainTex_ST]
Float 20 [_UVSec]
Vector 15 [_WorldSpaceCameraPos]
Vector 16 [_WorldSpaceLightPos0]
Vector 17 [unity_WorldTransformParams]
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   row_major float4x4 _LightMatrix0;
//   float4 _MainTex_ST;
//   row_major float4x4 _Object2World;
//   float _UVSec;
//   row_major float4x4 _World2Object;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 glstate_matrix_mvp;
//   float4 unity_WorldTransformParams;
//
//
// Registers:
//
//   Name                       Reg   Size
//   -------------------------- ----- ----
//   glstate_matrix_mvp         c0       4
//   _Object2World              c4       4
//   _LightMatrix0              c8       4
//   _World2Object              c12      3
//   _WorldSpaceCameraPos       c15      1
//   _WorldSpaceLightPos0       c16      1
//   unity_WorldTransformParams c17      1
//   _MainTex_ST                c18      1
//   _DetailAlbedoMap_ST        c19      1
//   _UVSec                     c20      1
//

    vs_3_0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_tangent v4
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6
    dp4 o0.x, c0, v0
    dp4 o0.y, c1, v0
    dp4 o0.z, c2, v0
    dp4 o0.w, c3, v0
    mad o1.xy, v2, c18, c18.zwzw
    abs r0.x, c20.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c19.xyxy, c19
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add o2.xyz, r0, -c15
    mul r1.xyz, c13, v1.y
    mad r1.xyz, c12, v1.x, r1
    mad r1.xyz, c14, v1.z, r1
    nrm r2.xyz, r1
    dp3 r1.x, c4, v4
    dp3 r1.y, c5, v4
    dp3 r1.z, c6, v4
    nrm r3.xyz, r1
    mul r1.xyz, r2.zxyw, r3.yzxw
    mad r1.xyz, r2.yzxw, r3.zxyw, -r1
    mov o5.xyz, r2
    mov o3.xyz, r3
    mul r1.w, c17.w, v4.w
    mul o4.xyz, r1.w, r1
    dp4 r0.w, c7, v0
    dp4 o6.x, c8, r0
    dp4 o6.y, c9, r0
    dp4 o6.z, c10, r0
    dp4 o6.w, c11, r0
    mad r0.xyz, r0, -c16.w, c16
    mov o3.w, r0.x
    mov o4.w, r0.y
    mov o5.w, r0.z

// approximately 41 instruction slots used
"
}
SubProgram "d3d11 " {
// Stats: 45 math
Keywords { "SPOT" "SHADOWS_OFF" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
ConstBuffer "$Globals" 304
Matrix 240 [_LightMatrix0]
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
Vector 336 [unity_WorldTransformParams]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer cb0[19], immediateIndexed
      dcl_constantbuffer cb1[5], immediateIndexed
      dcl_constantbuffer cb2[1], immediateIndexed
      dcl_constantbuffer cb3[22], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: mad o0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   4: eq r0.x, cb0[13].z, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[11].xxxy, cb0[11].zzzw
   7: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  13: mad r0.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  14: mov o3.w, r0.x
  15: mul r1.xyz, v4.yyyy, cb3[13].xyzx
  16: mad r1.xyz, cb3[12].xyzx, v4.xxxx, r1.xyzx
  17: mad r1.xyz, cb3[14].xyzx, v4.zzzz, r1.xyzx
  18: dp3 r0.x, r1.xyzx, r1.xyzx
  19: rsq r0.x, r0.x
  20: mul r1.xyz, r0.xxxx, r1.xyzx
  21: mov o3.xyz, r1.xyzx
  22: mul r2.x, v1.x, cb3[16].x
  23: mul r2.y, v1.x, cb3[17].x
  24: mul r2.z, v1.x, cb3[18].x
  25: mul r3.x, v1.y, cb3[16].y
  26: mul r3.y, v1.y, cb3[17].y
  27: mul r3.z, v1.y, cb3[18].y
  28: add r2.xyz, r2.xyzx, r3.xyzx
  29: mul r3.x, v1.z, cb3[16].z
  30: mul r3.y, v1.z, cb3[17].z
  31: mul r3.z, v1.z, cb3[18].z
  32: add r2.xyz, r2.xyzx, r3.xyzx
  33: dp3 r0.x, r2.xyzx, r2.xyzx
  34: rsq r0.x, r0.x
  35: mul r2.xyz, r0.xxxx, r2.xyzx
  36: mul r3.xyz, r1.yzxy, r2.zxyz
  37: mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
  38: mov o5.xyz, r2.xyzx
  39: mul r0.x, v4.w, cb3[21].w
  40: mul o4.xyz, r0.xxxx, r1.xyzx
  41: mov o4.w, r0.y
  42: mov o5.w, r0.z
  43: mul r0.xyzw, v0.yyyy, cb3[13].xyzw
  44: mad r0.xyzw, cb3[12].xyzw, v0.xxxx, r0.xyzw
  45: mad r0.xyzw, cb3[14].xyzw, v0.zzzz, r0.xyzw
  46: mad r0.xyzw, cb3[15].xyzw, v0.wwww, r0.xyzw
  47: mul r1.xyzw, r0.yyyy, cb0[16].xyzw
  48: mad r1.xyzw, cb0[15].xyzw, r0.xxxx, r1.xyzw
  49: mad r1.xyzw, cb0[17].xyzw, r0.zzzz, r1.xyzw
  50: mad o6.xyzw, cb0[18].xyzw, r0.wwww, r1.xyzw
  51: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
// Stats: 98 math, 3 textures, 2 branches
Keywords { "POINT_COOKIE" "SHADOWS_OFF" }
"#version 120

#ifdef VERTEX
uniform vec3 _WorldSpaceCameraPos;
uniform vec4 _WorldSpaceLightPos0;

uniform mat4 _Object2World;
uniform mat4 _World2Object;
uniform vec4 unity_WorldTransformParams;
uniform vec4 _MainTex_ST;
uniform vec4 _DetailAlbedoMap_ST;
uniform float _UVSec;
uniform mat4 _LightMatrix0;
attribute vec4 TANGENT;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec3 xlv_TEXCOORD5;
void main ()
{
  vec2 tmpvar_1;
  tmpvar_1 = gl_MultiTexCoord0.xy;
  vec2 tmpvar_2;
  tmpvar_2 = gl_MultiTexCoord1.xy;
  vec4 tmpvar_3;
  vec4 tmpvar_4;
  vec4 tmpvar_5;
  vec4 tmpvar_6;
  vec4 tmpvar_7;
  tmpvar_7 = (_Object2World * gl_Vertex);
  tmpvar_3 = (gl_ModelViewProjectionMatrix * gl_Vertex);
  vec4 texcoord_8;
  texcoord_8.xy = ((gl_MultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  vec2 tmpvar_9;
  if ((_UVSec == 0.0)) {
    tmpvar_9 = tmpvar_1;
  } else {
    tmpvar_9 = tmpvar_2;
  };
  texcoord_8.zw = ((tmpvar_9 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  vec4 v_10;
  v_10.x = _World2Object[0].x;
  v_10.y = _World2Object[1].x;
  v_10.z = _World2Object[2].x;
  v_10.w = _World2Object[3].x;
  vec4 v_11;
  v_11.x = _World2Object[0].y;
  v_11.y = _World2Object[1].y;
  v_11.z = _World2Object[2].y;
  v_11.w = _World2Object[3].y;
  vec4 v_12;
  v_12.x = _World2Object[0].z;
  v_12.y = _World2Object[1].z;
  v_12.z = _World2Object[2].z;
  v_12.w = _World2Object[3].z;
  vec3 tmpvar_13;
  tmpvar_13 = normalize(((
    (v_10.xyz * gl_Normal.x)
   + 
    (v_11.xyz * gl_Normal.y)
  ) + (v_12.xyz * gl_Normal.z)));
  mat3 tmpvar_14;
  tmpvar_14[0] = _Object2World[0].xyz;
  tmpvar_14[1] = _Object2World[1].xyz;
  tmpvar_14[2] = _Object2World[2].xyz;
  vec4 tmpvar_15;
  tmpvar_15.xyz = normalize((tmpvar_14 * TANGENT.xyz));
  tmpvar_15.w = TANGENT.w;
  vec3 tmpvar_16;
  vec3 tmpvar_17;
  tmpvar_16 = tmpvar_15.xyz;
  tmpvar_17 = (((tmpvar_13.yzx * tmpvar_15.zxy) - (tmpvar_13.zxy * tmpvar_15.yzx)) * (TANGENT.w * unity_WorldTransformParams.w));
  vec3 tmpvar_18;
  vec3 tmpvar_19;
  vec3 tmpvar_20;
  tmpvar_18.x = tmpvar_16.x;
  tmpvar_18.y = tmpvar_17.x;
  tmpvar_18.z = tmpvar_13.x;
  tmpvar_19.x = tmpvar_16.y;
  tmpvar_19.y = tmpvar_17.y;
  tmpvar_19.z = tmpvar_13.y;
  tmpvar_20.x = tmpvar_16.z;
  tmpvar_20.y = tmpvar_17.z;
  tmpvar_20.z = tmpvar_13.z;
  vec3 v_21;
  v_21.x = tmpvar_18.x;
  v_21.y = tmpvar_19.x;
  v_21.z = tmpvar_20.x;
  tmpvar_4.xyz = v_21;
  vec3 v_22;
  v_22.x = tmpvar_18.y;
  v_22.y = tmpvar_19.y;
  v_22.z = tmpvar_20.y;
  tmpvar_5.xyz = v_22;
  vec3 v_23;
  v_23.x = tmpvar_18.z;
  v_23.y = tmpvar_19.z;
  v_23.z = tmpvar_20.z;
  tmpvar_6.xyz = v_23;
  vec3 tmpvar_24;
  tmpvar_24 = (_WorldSpaceLightPos0.xyz - (tmpvar_7.xyz * _WorldSpaceLightPos0.w));
  tmpvar_4.w = tmpvar_24.x;
  tmpvar_5.w = tmpvar_24.y;
  tmpvar_6.w = tmpvar_24.z;
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = texcoord_8;
  xlv_TEXCOORD1 = (tmpvar_7.xyz - _WorldSpaceCameraPos);
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  xlv_TEXCOORD5 = (_LightMatrix0 * (_Object2World * gl_Vertex)).xyz;
}


#endif
#ifdef FRAGMENT
uniform vec4 unity_ColorSpaceDielectricSpec;
uniform vec4 unity_ColorSpaceLuminance;
uniform vec4 _LightColor0;
uniform vec4 _Color;
uniform sampler2D _MainTex;
uniform float _Metallic;
uniform float _Glossiness;
uniform samplerCube _LightTexture0;
uniform sampler2D _LightTextureB0;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec3 xlv_TEXCOORD5;
void main ()
{
  vec3 tmpvar_1;
  tmpvar_1 = (_Color.xyz * texture2D (_MainTex, xlv_TEXCOORD0.xy).xyz);
  vec3 tmpvar_2;
  vec3 tmpvar_3;
  tmpvar_3 = mix (unity_ColorSpaceDielectricSpec.xyz, tmpvar_1, vec3(_Metallic));
  tmpvar_2 = (tmpvar_1 * (unity_ColorSpaceDielectricSpec.w - (_Metallic * unity_ColorSpaceDielectricSpec.w)));
  vec3 tmpvar_4;
  tmpvar_4 = normalize(xlv_TEXCOORD2_2.xyz);
  vec3 tmpvar_5;
  tmpvar_5.x = xlv_TEXCOORD2.w;
  tmpvar_5.y = xlv_TEXCOORD2_1.w;
  tmpvar_5.z = xlv_TEXCOORD2_2.w;
  vec3 tmpvar_6;
  vec3 tmpvar_7;
  tmpvar_7 = normalize(tmpvar_5);
  tmpvar_6 = (_LightColor0.xyz * (texture2D (_LightTextureB0, vec2(dot (xlv_TEXCOORD5, xlv_TEXCOORD5))).w * textureCube (_LightTexture0, xlv_TEXCOORD5).w));
  vec3 viewDir_8;
  viewDir_8 = -(normalize(xlv_TEXCOORD1));
  float specularTerm_9;
  float tmpvar_10;
  tmpvar_10 = (1.0 - _Glossiness);
  vec3 tmpvar_11;
  vec3 inVec_12;
  inVec_12 = (tmpvar_7 + viewDir_8);
  tmpvar_11 = (inVec_12 * inversesqrt(max (0.001, 
    dot (inVec_12, inVec_12)
  )));
  float tmpvar_13;
  tmpvar_13 = dot (tmpvar_4, viewDir_8);
  vec3 tmpvar_14;
  if ((tmpvar_13 < 0.0)) {
    tmpvar_14 = (tmpvar_4 + (viewDir_8 * (
      -(tmpvar_13)
     + 1e-05)));
  } else {
    tmpvar_14 = tmpvar_4;
  };
  float tmpvar_15;
  tmpvar_15 = max (0.0, dot (tmpvar_14, tmpvar_7));
  float tmpvar_16;
  tmpvar_16 = max (0.0, dot (tmpvar_14, tmpvar_11));
  float tmpvar_17;
  tmpvar_17 = max (0.0, dot (tmpvar_14, viewDir_8));
  float tmpvar_18;
  tmpvar_18 = max (0.0, dot (tmpvar_7, tmpvar_11));
  float tmpvar_19;
  tmpvar_19 = (tmpvar_10 * tmpvar_10);
  float tmpvar_20;
  tmpvar_20 = (tmpvar_10 * tmpvar_10);
  float tmpvar_21;
  tmpvar_21 = (tmpvar_20 * tmpvar_20);
  float tmpvar_22;
  tmpvar_22 = (((tmpvar_16 * tmpvar_16) * (tmpvar_21 - 1.0)) + 1.0);
  float x_23;
  x_23 = (1.0 - tmpvar_15);
  float x_24;
  x_24 = (1.0 - tmpvar_17);
  float tmpvar_25;
  tmpvar_25 = (0.5 + ((2.0 * tmpvar_18) * (tmpvar_18 * tmpvar_10)));
  float tmpvar_26;
  tmpvar_26 = ((1.0 + (
    (tmpvar_25 - 1.0)
   * 
    ((x_23 * x_23) * ((x_23 * x_23) * x_23))
  )) * (1.0 + (
    (tmpvar_25 - 1.0)
   * 
    ((x_24 * x_24) * ((x_24 * x_24) * x_24))
  )));
  float tmpvar_27;
  tmpvar_27 = (((2.0 / 
    (((tmpvar_15 * (
      (tmpvar_17 * (1.0 - tmpvar_19))
     + tmpvar_19)) + (tmpvar_17 * (
      (tmpvar_15 * (1.0 - tmpvar_19))
     + tmpvar_19))) + 1e-05)
  ) * (tmpvar_21 / 
    (((3.141593 * tmpvar_22) * tmpvar_22) + 1e-07)
  )) * 0.7853982);
  specularTerm_9 = tmpvar_27;
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    specularTerm_9 = sqrt(max (0.0001, tmpvar_27));
  };
  float tmpvar_28;
  tmpvar_28 = max (0.0, (specularTerm_9 * tmpvar_15));
  specularTerm_9 = tmpvar_28;
  float x_29;
  x_29 = (1.0 - tmpvar_18);
  vec4 tmpvar_30;
  tmpvar_30.w = 1.0;
  tmpvar_30.xyz = ((tmpvar_2 * (tmpvar_6 * 
    (tmpvar_26 * tmpvar_15)
  )) + ((tmpvar_28 * tmpvar_6) * (tmpvar_3 + 
    ((1.0 - tmpvar_3) * ((x_29 * x_29) * ((x_29 * x_29) * x_29)))
  )));
  vec4 xlat_varoutput_31;
  xlat_varoutput_31.xyz = tmpvar_30.xyz;
  xlat_varoutput_31.w = 1.0;
  gl_FragData[0] = xlat_varoutput_31;
}


#endif
"
}
SubProgram "d3d9 " {
// Stats: 41 math
Keywords { "POINT_COOKIE" "SHADOWS_OFF" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
Matrix 11 [_LightMatrix0] 3
Matrix 4 [_Object2World]
Matrix 8 [_World2Object] 3
Matrix 0 [glstate_matrix_mvp]
Vector 18 [_DetailAlbedoMap_ST]
Vector 17 [_MainTex_ST]
Float 19 [_UVSec]
Vector 14 [_WorldSpaceCameraPos]
Vector 15 [_WorldSpaceLightPos0]
Vector 16 [unity_WorldTransformParams]
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   row_major float4x4 _LightMatrix0;
//   float4 _MainTex_ST;
//   row_major float4x4 _Object2World;
//   float _UVSec;
//   row_major float4x4 _World2Object;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 glstate_matrix_mvp;
//   float4 unity_WorldTransformParams;
//
//
// Registers:
//
//   Name                       Reg   Size
//   -------------------------- ----- ----
//   glstate_matrix_mvp         c0       4
//   _Object2World              c4       4
//   _World2Object              c8       3
//   _LightMatrix0              c11      3
//   _WorldSpaceCameraPos       c14      1
//   _WorldSpaceLightPos0       c15      1
//   unity_WorldTransformParams c16      1
//   _MainTex_ST                c17      1
//   _DetailAlbedoMap_ST        c18      1
//   _UVSec                     c19      1
//

    vs_3_0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_tangent v4
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6.xyz
    dp4 o0.x, c0, v0
    dp4 o0.y, c1, v0
    dp4 o0.z, c2, v0
    dp4 o0.w, c3, v0
    mad o1.xy, v2, c17, c17.zwzw
    abs r0.x, c19.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c18.xyxy, c18
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add o2.xyz, r0, -c14
    mul r1.xyz, c9, v1.y
    mad r1.xyz, c8, v1.x, r1
    mad r1.xyz, c10, v1.z, r1
    nrm r2.xyz, r1
    dp3 r1.x, c4, v4
    dp3 r1.y, c5, v4
    dp3 r1.z, c6, v4
    nrm r3.xyz, r1
    mul r1.xyz, r2.zxyw, r3.yzxw
    mad r1.xyz, r2.yzxw, r3.zxyw, -r1
    mov o5.xyz, r2
    mov o3.xyz, r3
    mul r1.w, c16.w, v4.w
    mul o4.xyz, r1.w, r1
    dp4 r0.w, c7, v0
    dp4 o6.x, c11, r0
    dp4 o6.y, c12, r0
    dp4 o6.z, c13, r0
    mad r0.xyz, r0, -c15.w, c15
    mov o3.w, r0.x
    mov o4.w, r0.y
    mov o5.w, r0.z

// approximately 40 instruction slots used
"
}
SubProgram "d3d11 " {
// Stats: 45 math
Keywords { "POINT_COOKIE" "SHADOWS_OFF" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
ConstBuffer "$Globals" 304
Matrix 240 [_LightMatrix0]
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
Vector 336 [unity_WorldTransformParams]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer cb0[19], immediateIndexed
      dcl_constantbuffer cb1[5], immediateIndexed
      dcl_constantbuffer cb2[1], immediateIndexed
      dcl_constantbuffer cb3[22], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: mad o0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   4: eq r0.x, cb0[13].z, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[11].xxxy, cb0[11].zzzw
   7: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  13: mad r0.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  14: mov o3.w, r0.x
  15: mul r1.xyz, v4.yyyy, cb3[13].xyzx
  16: mad r1.xyz, cb3[12].xyzx, v4.xxxx, r1.xyzx
  17: mad r1.xyz, cb3[14].xyzx, v4.zzzz, r1.xyzx
  18: dp3 r0.x, r1.xyzx, r1.xyzx
  19: rsq r0.x, r0.x
  20: mul r1.xyz, r0.xxxx, r1.xyzx
  21: mov o3.xyz, r1.xyzx
  22: mul r2.x, v1.x, cb3[16].x
  23: mul r2.y, v1.x, cb3[17].x
  24: mul r2.z, v1.x, cb3[18].x
  25: mul r3.x, v1.y, cb3[16].y
  26: mul r3.y, v1.y, cb3[17].y
  27: mul r3.z, v1.y, cb3[18].y
  28: add r2.xyz, r2.xyzx, r3.xyzx
  29: mul r3.x, v1.z, cb3[16].z
  30: mul r3.y, v1.z, cb3[17].z
  31: mul r3.z, v1.z, cb3[18].z
  32: add r2.xyz, r2.xyzx, r3.xyzx
  33: dp3 r0.x, r2.xyzx, r2.xyzx
  34: rsq r0.x, r0.x
  35: mul r2.xyz, r0.xxxx, r2.xyzx
  36: mul r3.xyz, r1.yzxy, r2.zxyz
  37: mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
  38: mov o5.xyz, r2.xyzx
  39: mul r0.x, v4.w, cb3[21].w
  40: mul o4.xyz, r0.xxxx, r1.xyzx
  41: mov o4.w, r0.y
  42: mov o5.w, r0.z
  43: mul r0.xyzw, v0.yyyy, cb3[13].xyzw
  44: mad r0.xyzw, cb3[12].xyzw, v0.xxxx, r0.xyzw
  45: mad r0.xyzw, cb3[14].xyzw, v0.zzzz, r0.xyzw
  46: mad r0.xyzw, cb3[15].xyzw, v0.wwww, r0.xyzw
  47: mul r1.xyz, r0.yyyy, cb0[16].xyzx
  48: mad r1.xyz, cb0[15].xyzx, r0.xxxx, r1.xyzx
  49: mad r0.xyz, cb0[17].xyzx, r0.zzzz, r1.xyzx
  50: mad o6.xyz, cb0[18].xyzx, r0.wwww, r0.xyzx
  51: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
// Stats: 95 math, 2 textures, 2 branches
Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_OFF" }
"#version 120

#ifdef VERTEX
uniform vec3 _WorldSpaceCameraPos;
uniform vec4 _WorldSpaceLightPos0;

uniform mat4 _Object2World;
uniform mat4 _World2Object;
uniform vec4 unity_WorldTransformParams;
uniform vec4 _MainTex_ST;
uniform vec4 _DetailAlbedoMap_ST;
uniform float _UVSec;
uniform mat4 _LightMatrix0;
attribute vec4 TANGENT;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec2 xlv_TEXCOORD5;
void main ()
{
  vec2 tmpvar_1;
  tmpvar_1 = gl_MultiTexCoord0.xy;
  vec2 tmpvar_2;
  tmpvar_2 = gl_MultiTexCoord1.xy;
  vec4 tmpvar_3;
  vec4 tmpvar_4;
  vec4 tmpvar_5;
  vec4 tmpvar_6;
  vec4 tmpvar_7;
  tmpvar_7 = (_Object2World * gl_Vertex);
  tmpvar_3 = (gl_ModelViewProjectionMatrix * gl_Vertex);
  vec4 texcoord_8;
  texcoord_8.xy = ((gl_MultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  vec2 tmpvar_9;
  if ((_UVSec == 0.0)) {
    tmpvar_9 = tmpvar_1;
  } else {
    tmpvar_9 = tmpvar_2;
  };
  texcoord_8.zw = ((tmpvar_9 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  vec4 v_10;
  v_10.x = _World2Object[0].x;
  v_10.y = _World2Object[1].x;
  v_10.z = _World2Object[2].x;
  v_10.w = _World2Object[3].x;
  vec4 v_11;
  v_11.x = _World2Object[0].y;
  v_11.y = _World2Object[1].y;
  v_11.z = _World2Object[2].y;
  v_11.w = _World2Object[3].y;
  vec4 v_12;
  v_12.x = _World2Object[0].z;
  v_12.y = _World2Object[1].z;
  v_12.z = _World2Object[2].z;
  v_12.w = _World2Object[3].z;
  vec3 tmpvar_13;
  tmpvar_13 = normalize(((
    (v_10.xyz * gl_Normal.x)
   + 
    (v_11.xyz * gl_Normal.y)
  ) + (v_12.xyz * gl_Normal.z)));
  mat3 tmpvar_14;
  tmpvar_14[0] = _Object2World[0].xyz;
  tmpvar_14[1] = _Object2World[1].xyz;
  tmpvar_14[2] = _Object2World[2].xyz;
  vec4 tmpvar_15;
  tmpvar_15.xyz = normalize((tmpvar_14 * TANGENT.xyz));
  tmpvar_15.w = TANGENT.w;
  vec3 tmpvar_16;
  vec3 tmpvar_17;
  tmpvar_16 = tmpvar_15.xyz;
  tmpvar_17 = (((tmpvar_13.yzx * tmpvar_15.zxy) - (tmpvar_13.zxy * tmpvar_15.yzx)) * (TANGENT.w * unity_WorldTransformParams.w));
  vec3 tmpvar_18;
  vec3 tmpvar_19;
  vec3 tmpvar_20;
  tmpvar_18.x = tmpvar_16.x;
  tmpvar_18.y = tmpvar_17.x;
  tmpvar_18.z = tmpvar_13.x;
  tmpvar_19.x = tmpvar_16.y;
  tmpvar_19.y = tmpvar_17.y;
  tmpvar_19.z = tmpvar_13.y;
  tmpvar_20.x = tmpvar_16.z;
  tmpvar_20.y = tmpvar_17.z;
  tmpvar_20.z = tmpvar_13.z;
  vec3 v_21;
  v_21.x = tmpvar_18.x;
  v_21.y = tmpvar_19.x;
  v_21.z = tmpvar_20.x;
  tmpvar_4.xyz = v_21;
  vec3 v_22;
  v_22.x = tmpvar_18.y;
  v_22.y = tmpvar_19.y;
  v_22.z = tmpvar_20.y;
  tmpvar_5.xyz = v_22;
  vec3 v_23;
  v_23.x = tmpvar_18.z;
  v_23.y = tmpvar_19.z;
  v_23.z = tmpvar_20.z;
  tmpvar_6.xyz = v_23;
  vec3 tmpvar_24;
  tmpvar_24 = (_WorldSpaceLightPos0.xyz - (tmpvar_7.xyz * _WorldSpaceLightPos0.w));
  tmpvar_4.w = tmpvar_24.x;
  tmpvar_5.w = tmpvar_24.y;
  tmpvar_6.w = tmpvar_24.z;
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = texcoord_8;
  xlv_TEXCOORD1 = (tmpvar_7.xyz - _WorldSpaceCameraPos);
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  xlv_TEXCOORD5 = (_LightMatrix0 * (_Object2World * gl_Vertex)).xy;
}


#endif
#ifdef FRAGMENT
uniform vec4 unity_ColorSpaceDielectricSpec;
uniform vec4 unity_ColorSpaceLuminance;
uniform vec4 _LightColor0;
uniform vec4 _Color;
uniform sampler2D _MainTex;
uniform float _Metallic;
uniform float _Glossiness;
uniform sampler2D _LightTexture0;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec2 xlv_TEXCOORD5;
void main ()
{
  vec3 tmpvar_1;
  tmpvar_1 = (_Color.xyz * texture2D (_MainTex, xlv_TEXCOORD0.xy).xyz);
  vec3 tmpvar_2;
  vec3 tmpvar_3;
  tmpvar_3 = mix (unity_ColorSpaceDielectricSpec.xyz, tmpvar_1, vec3(_Metallic));
  tmpvar_2 = (tmpvar_1 * (unity_ColorSpaceDielectricSpec.w - (_Metallic * unity_ColorSpaceDielectricSpec.w)));
  vec3 tmpvar_4;
  tmpvar_4 = normalize(xlv_TEXCOORD2_2.xyz);
  vec3 tmpvar_5;
  tmpvar_5.x = xlv_TEXCOORD2.w;
  tmpvar_5.y = xlv_TEXCOORD2_1.w;
  tmpvar_5.z = xlv_TEXCOORD2_2.w;
  vec3 tmpvar_6;
  tmpvar_6 = (_LightColor0.xyz * texture2D (_LightTexture0, xlv_TEXCOORD5).w);
  vec3 viewDir_7;
  viewDir_7 = -(normalize(xlv_TEXCOORD1));
  float specularTerm_8;
  float tmpvar_9;
  tmpvar_9 = (1.0 - _Glossiness);
  vec3 tmpvar_10;
  vec3 inVec_11;
  inVec_11 = (tmpvar_5 + viewDir_7);
  tmpvar_10 = (inVec_11 * inversesqrt(max (0.001, 
    dot (inVec_11, inVec_11)
  )));
  float tmpvar_12;
  tmpvar_12 = dot (tmpvar_4, viewDir_7);
  vec3 tmpvar_13;
  if ((tmpvar_12 < 0.0)) {
    tmpvar_13 = (tmpvar_4 + (viewDir_7 * (
      -(tmpvar_12)
     + 1e-05)));
  } else {
    tmpvar_13 = tmpvar_4;
  };
  float tmpvar_14;
  tmpvar_14 = max (0.0, dot (tmpvar_13, tmpvar_5));
  float tmpvar_15;
  tmpvar_15 = max (0.0, dot (tmpvar_13, tmpvar_10));
  float tmpvar_16;
  tmpvar_16 = max (0.0, dot (tmpvar_13, viewDir_7));
  float tmpvar_17;
  tmpvar_17 = max (0.0, dot (tmpvar_5, tmpvar_10));
  float tmpvar_18;
  tmpvar_18 = (tmpvar_9 * tmpvar_9);
  float tmpvar_19;
  tmpvar_19 = (tmpvar_9 * tmpvar_9);
  float tmpvar_20;
  tmpvar_20 = (tmpvar_19 * tmpvar_19);
  float tmpvar_21;
  tmpvar_21 = (((tmpvar_15 * tmpvar_15) * (tmpvar_20 - 1.0)) + 1.0);
  float x_22;
  x_22 = (1.0 - tmpvar_14);
  float x_23;
  x_23 = (1.0 - tmpvar_16);
  float tmpvar_24;
  tmpvar_24 = (0.5 + ((2.0 * tmpvar_17) * (tmpvar_17 * tmpvar_9)));
  float tmpvar_25;
  tmpvar_25 = ((1.0 + (
    (tmpvar_24 - 1.0)
   * 
    ((x_22 * x_22) * ((x_22 * x_22) * x_22))
  )) * (1.0 + (
    (tmpvar_24 - 1.0)
   * 
    ((x_23 * x_23) * ((x_23 * x_23) * x_23))
  )));
  float tmpvar_26;
  tmpvar_26 = (((2.0 / 
    (((tmpvar_14 * (
      (tmpvar_16 * (1.0 - tmpvar_18))
     + tmpvar_18)) + (tmpvar_16 * (
      (tmpvar_14 * (1.0 - tmpvar_18))
     + tmpvar_18))) + 1e-05)
  ) * (tmpvar_20 / 
    (((3.141593 * tmpvar_21) * tmpvar_21) + 1e-07)
  )) * 0.7853982);
  specularTerm_8 = tmpvar_26;
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    specularTerm_8 = sqrt(max (0.0001, tmpvar_26));
  };
  float tmpvar_27;
  tmpvar_27 = max (0.0, (specularTerm_8 * tmpvar_14));
  specularTerm_8 = tmpvar_27;
  float x_28;
  x_28 = (1.0 - tmpvar_17);
  vec4 tmpvar_29;
  tmpvar_29.w = 1.0;
  tmpvar_29.xyz = ((tmpvar_2 * (tmpvar_6 * 
    (tmpvar_25 * tmpvar_14)
  )) + ((tmpvar_27 * tmpvar_6) * (tmpvar_3 + 
    ((1.0 - tmpvar_3) * ((x_28 * x_28) * ((x_28 * x_28) * x_28)))
  )));
  vec4 xlat_varoutput_30;
  xlat_varoutput_30.xyz = tmpvar_29.xyz;
  xlat_varoutput_30.w = 1.0;
  gl_FragData[0] = xlat_varoutput_30;
}


#endif
"
}
SubProgram "d3d9 " {
// Stats: 40 math
Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_OFF" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
Matrix 11 [_LightMatrix0] 2
Matrix 4 [_Object2World]
Matrix 8 [_World2Object] 3
Matrix 0 [glstate_matrix_mvp]
Vector 17 [_DetailAlbedoMap_ST]
Vector 16 [_MainTex_ST]
Float 18 [_UVSec]
Vector 13 [_WorldSpaceCameraPos]
Vector 14 [_WorldSpaceLightPos0]
Vector 15 [unity_WorldTransformParams]
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   row_major float4x4 _LightMatrix0;
//   float4 _MainTex_ST;
//   row_major float4x4 _Object2World;
//   float _UVSec;
//   row_major float4x4 _World2Object;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 glstate_matrix_mvp;
//   float4 unity_WorldTransformParams;
//
//
// Registers:
//
//   Name                       Reg   Size
//   -------------------------- ----- ----
//   glstate_matrix_mvp         c0       4
//   _Object2World              c4       4
//   _World2Object              c8       3
//   _LightMatrix0              c11      2
//   _WorldSpaceCameraPos       c13      1
//   _WorldSpaceLightPos0       c14      1
//   unity_WorldTransformParams c15      1
//   _MainTex_ST                c16      1
//   _DetailAlbedoMap_ST        c17      1
//   _UVSec                     c18      1
//

    vs_3_0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_tangent v4
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6.xy
    dp4 o0.x, c0, v0
    dp4 o0.y, c1, v0
    dp4 o0.z, c2, v0
    dp4 o0.w, c3, v0
    mad o1.xy, v2, c16, c16.zwzw
    abs r0.x, c18.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c17.xyxy, c17
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add o2.xyz, r0, -c13
    mul r1.xyz, c9, v1.y
    mad r1.xyz, c8, v1.x, r1
    mad r1.xyz, c10, v1.z, r1
    nrm r2.xyz, r1
    dp3 r1.x, c4, v4
    dp3 r1.y, c5, v4
    dp3 r1.z, c6, v4
    nrm r3.xyz, r1
    mul r1.xyz, r2.zxyw, r3.yzxw
    mad r1.xyz, r2.yzxw, r3.zxyw, -r1
    mov o5.xyz, r2
    mov o3.xyz, r3
    mul r1.w, c15.w, v4.w
    mul o4.xyz, r1.w, r1
    dp4 r0.w, c7, v0
    dp4 o6.x, c11, r0
    dp4 o6.y, c12, r0
    mad r0.xyz, r0, -c14.w, c14
    mov o3.w, r0.x
    mov o4.w, r0.y
    mov o5.w, r0.z

// approximately 39 instruction slots used
"
}
SubProgram "d3d11 " {
// Stats: 45 math
Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_OFF" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
ConstBuffer "$Globals" 304
Matrix 240 [_LightMatrix0]
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
Vector 336 [unity_WorldTransformParams]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xy          6     NONE   float   xy  
//
      vs_4_0
      dcl_constantbuffer cb0[19], immediateIndexed
      dcl_constantbuffer cb1[5], immediateIndexed
      dcl_constantbuffer cb2[1], immediateIndexed
      dcl_constantbuffer cb3[22], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xy
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: mad o0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   4: eq r0.x, cb0[13].z, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[11].xxxy, cb0[11].zzzw
   7: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  13: mad r0.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  14: mov o3.w, r0.x
  15: mul r1.xyz, v4.yyyy, cb3[13].xyzx
  16: mad r1.xyz, cb3[12].xyzx, v4.xxxx, r1.xyzx
  17: mad r1.xyz, cb3[14].xyzx, v4.zzzz, r1.xyzx
  18: dp3 r0.x, r1.xyzx, r1.xyzx
  19: rsq r0.x, r0.x
  20: mul r1.xyz, r0.xxxx, r1.xyzx
  21: mov o3.xyz, r1.xyzx
  22: mul r2.x, v1.x, cb3[16].x
  23: mul r2.y, v1.x, cb3[17].x
  24: mul r2.z, v1.x, cb3[18].x
  25: mul r3.x, v1.y, cb3[16].y
  26: mul r3.y, v1.y, cb3[17].y
  27: mul r3.z, v1.y, cb3[18].y
  28: add r2.xyz, r2.xyzx, r3.xyzx
  29: mul r3.x, v1.z, cb3[16].z
  30: mul r3.y, v1.z, cb3[17].z
  31: mul r3.z, v1.z, cb3[18].z
  32: add r2.xyz, r2.xyzx, r3.xyzx
  33: dp3 r0.x, r2.xyzx, r2.xyzx
  34: rsq r0.x, r0.x
  35: mul r2.xyz, r0.xxxx, r2.xyzx
  36: mul r3.xyz, r1.yzxy, r2.zxyz
  37: mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
  38: mov o5.xyz, r2.xyzx
  39: mul r0.x, v4.w, cb3[21].w
  40: mul o4.xyz, r0.xxxx, r1.xyzx
  41: mov o4.w, r0.y
  42: mov o5.w, r0.z
  43: mul r0.xyzw, v0.yyyy, cb3[13].xyzw
  44: mad r0.xyzw, cb3[12].xyzw, v0.xxxx, r0.xyzw
  45: mad r0.xyzw, cb3[14].xyzw, v0.zzzz, r0.xyzw
  46: mad r0.xyzw, cb3[15].xyzw, v0.wwww, r0.xyzw
  47: mul r1.xy, r0.yyyy, cb0[16].xyxx
  48: mad r0.xy, cb0[15].xyxx, r0.xxxx, r1.xyxx
  49: mad r0.xy, cb0[17].xyxx, r0.zzzz, r0.xyxx
  50: mad o6.xy, cb0[18].xyxx, r0.wwww, r0.xyxx
  51: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
// Stats: 107 math, 4 textures, 2 branches
Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_NATIVE" }
"#version 120

#ifdef VERTEX
uniform vec3 _WorldSpaceCameraPos;
uniform vec4 _WorldSpaceLightPos0;
uniform mat4 unity_World2Shadow[4];

uniform mat4 _Object2World;
uniform mat4 _World2Object;
uniform vec4 unity_WorldTransformParams;
uniform vec4 _MainTex_ST;
uniform vec4 _DetailAlbedoMap_ST;
uniform float _UVSec;
uniform mat4 _LightMatrix0;
attribute vec4 TANGENT;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
varying vec4 xlv_TEXCOORD6;
void main ()
{
  vec2 tmpvar_1;
  tmpvar_1 = gl_MultiTexCoord0.xy;
  vec2 tmpvar_2;
  tmpvar_2 = gl_MultiTexCoord1.xy;
  vec4 tmpvar_3;
  vec4 tmpvar_4;
  vec4 tmpvar_5;
  vec4 tmpvar_6;
  vec4 tmpvar_7;
  tmpvar_7 = (_Object2World * gl_Vertex);
  tmpvar_3 = (gl_ModelViewProjectionMatrix * gl_Vertex);
  vec4 texcoord_8;
  texcoord_8.xy = ((gl_MultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  vec2 tmpvar_9;
  if ((_UVSec == 0.0)) {
    tmpvar_9 = tmpvar_1;
  } else {
    tmpvar_9 = tmpvar_2;
  };
  texcoord_8.zw = ((tmpvar_9 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  vec4 v_10;
  v_10.x = _World2Object[0].x;
  v_10.y = _World2Object[1].x;
  v_10.z = _World2Object[2].x;
  v_10.w = _World2Object[3].x;
  vec4 v_11;
  v_11.x = _World2Object[0].y;
  v_11.y = _World2Object[1].y;
  v_11.z = _World2Object[2].y;
  v_11.w = _World2Object[3].y;
  vec4 v_12;
  v_12.x = _World2Object[0].z;
  v_12.y = _World2Object[1].z;
  v_12.z = _World2Object[2].z;
  v_12.w = _World2Object[3].z;
  vec3 tmpvar_13;
  tmpvar_13 = normalize(((
    (v_10.xyz * gl_Normal.x)
   + 
    (v_11.xyz * gl_Normal.y)
  ) + (v_12.xyz * gl_Normal.z)));
  mat3 tmpvar_14;
  tmpvar_14[0] = _Object2World[0].xyz;
  tmpvar_14[1] = _Object2World[1].xyz;
  tmpvar_14[2] = _Object2World[2].xyz;
  vec4 tmpvar_15;
  tmpvar_15.xyz = normalize((tmpvar_14 * TANGENT.xyz));
  tmpvar_15.w = TANGENT.w;
  vec3 tmpvar_16;
  vec3 tmpvar_17;
  tmpvar_16 = tmpvar_15.xyz;
  tmpvar_17 = (((tmpvar_13.yzx * tmpvar_15.zxy) - (tmpvar_13.zxy * tmpvar_15.yzx)) * (TANGENT.w * unity_WorldTransformParams.w));
  vec3 tmpvar_18;
  vec3 tmpvar_19;
  vec3 tmpvar_20;
  tmpvar_18.x = tmpvar_16.x;
  tmpvar_18.y = tmpvar_17.x;
  tmpvar_18.z = tmpvar_13.x;
  tmpvar_19.x = tmpvar_16.y;
  tmpvar_19.y = tmpvar_17.y;
  tmpvar_19.z = tmpvar_13.y;
  tmpvar_20.x = tmpvar_16.z;
  tmpvar_20.y = tmpvar_17.z;
  tmpvar_20.z = tmpvar_13.z;
  vec3 v_21;
  v_21.x = tmpvar_18.x;
  v_21.y = tmpvar_19.x;
  v_21.z = tmpvar_20.x;
  tmpvar_4.xyz = v_21;
  vec3 v_22;
  v_22.x = tmpvar_18.y;
  v_22.y = tmpvar_19.y;
  v_22.z = tmpvar_20.y;
  tmpvar_5.xyz = v_22;
  vec3 v_23;
  v_23.x = tmpvar_18.z;
  v_23.y = tmpvar_19.z;
  v_23.z = tmpvar_20.z;
  tmpvar_6.xyz = v_23;
  vec3 tmpvar_24;
  tmpvar_24 = (_WorldSpaceLightPos0.xyz - (tmpvar_7.xyz * _WorldSpaceLightPos0.w));
  tmpvar_4.w = tmpvar_24.x;
  tmpvar_5.w = tmpvar_24.y;
  tmpvar_6.w = tmpvar_24.z;
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = texcoord_8;
  xlv_TEXCOORD1 = (tmpvar_7.xyz - _WorldSpaceCameraPos);
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  vec4 tmpvar_25;
  tmpvar_25 = (_Object2World * gl_Vertex);
  xlv_TEXCOORD5 = (_LightMatrix0 * tmpvar_25);
  xlv_TEXCOORD6 = (unity_World2Shadow[0] * tmpvar_25);
}


#endif
#ifdef FRAGMENT
uniform vec4 _LightShadowData;
uniform vec4 unity_ColorSpaceDielectricSpec;
uniform vec4 unity_ColorSpaceLuminance;
uniform vec4 _LightColor0;
uniform vec4 _Color;
uniform sampler2D _MainTex;
uniform float _Metallic;
uniform float _Glossiness;
uniform sampler2DShadow _ShadowMapTexture;
uniform sampler2D _LightTexture0;
uniform sampler2D _LightTextureB0;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
varying vec4 xlv_TEXCOORD6;
void main ()
{
  vec3 tmpvar_1;
  tmpvar_1 = (_Color.xyz * texture2D (_MainTex, xlv_TEXCOORD0.xy).xyz);
  vec3 tmpvar_2;
  vec3 tmpvar_3;
  tmpvar_3 = mix (unity_ColorSpaceDielectricSpec.xyz, tmpvar_1, vec3(_Metallic));
  tmpvar_2 = (tmpvar_1 * (unity_ColorSpaceDielectricSpec.w - (_Metallic * unity_ColorSpaceDielectricSpec.w)));
  vec3 tmpvar_4;
  tmpvar_4 = normalize(xlv_TEXCOORD2_2.xyz);
  vec3 tmpvar_5;
  tmpvar_5.x = xlv_TEXCOORD2.w;
  tmpvar_5.y = xlv_TEXCOORD2_1.w;
  tmpvar_5.z = xlv_TEXCOORD2_2.w;
  vec3 tmpvar_6;
  vec3 tmpvar_7;
  tmpvar_7 = normalize(tmpvar_5);
  tmpvar_6 = (_LightColor0.xyz * ((
    (float((xlv_TEXCOORD5.z > 0.0)) * texture2D (_LightTexture0, ((xlv_TEXCOORD5.xy / xlv_TEXCOORD5.w) + 0.5)).w)
   * texture2D (_LightTextureB0, vec2(
    dot (xlv_TEXCOORD5.xyz, xlv_TEXCOORD5.xyz)
  )).w) * (_LightShadowData.x + 
    (shadow2DProj (_ShadowMapTexture, xlv_TEXCOORD6).x * (1.0 - _LightShadowData.x))
  )));
  vec3 viewDir_8;
  viewDir_8 = -(normalize(xlv_TEXCOORD1));
  float specularTerm_9;
  float tmpvar_10;
  tmpvar_10 = (1.0 - _Glossiness);
  vec3 tmpvar_11;
  vec3 inVec_12;
  inVec_12 = (tmpvar_7 + viewDir_8);
  tmpvar_11 = (inVec_12 * inversesqrt(max (0.001, 
    dot (inVec_12, inVec_12)
  )));
  float tmpvar_13;
  tmpvar_13 = dot (tmpvar_4, viewDir_8);
  vec3 tmpvar_14;
  if ((tmpvar_13 < 0.0)) {
    tmpvar_14 = (tmpvar_4 + (viewDir_8 * (
      -(tmpvar_13)
     + 1e-05)));
  } else {
    tmpvar_14 = tmpvar_4;
  };
  float tmpvar_15;
  tmpvar_15 = max (0.0, dot (tmpvar_14, tmpvar_7));
  float tmpvar_16;
  tmpvar_16 = max (0.0, dot (tmpvar_14, tmpvar_11));
  float tmpvar_17;
  tmpvar_17 = max (0.0, dot (tmpvar_14, viewDir_8));
  float tmpvar_18;
  tmpvar_18 = max (0.0, dot (tmpvar_7, tmpvar_11));
  float tmpvar_19;
  tmpvar_19 = (tmpvar_10 * tmpvar_10);
  float tmpvar_20;
  tmpvar_20 = (tmpvar_10 * tmpvar_10);
  float tmpvar_21;
  tmpvar_21 = (tmpvar_20 * tmpvar_20);
  float tmpvar_22;
  tmpvar_22 = (((tmpvar_16 * tmpvar_16) * (tmpvar_21 - 1.0)) + 1.0);
  float x_23;
  x_23 = (1.0 - tmpvar_15);
  float x_24;
  x_24 = (1.0 - tmpvar_17);
  float tmpvar_25;
  tmpvar_25 = (0.5 + ((2.0 * tmpvar_18) * (tmpvar_18 * tmpvar_10)));
  float tmpvar_26;
  tmpvar_26 = ((1.0 + (
    (tmpvar_25 - 1.0)
   * 
    ((x_23 * x_23) * ((x_23 * x_23) * x_23))
  )) * (1.0 + (
    (tmpvar_25 - 1.0)
   * 
    ((x_24 * x_24) * ((x_24 * x_24) * x_24))
  )));
  float tmpvar_27;
  tmpvar_27 = (((2.0 / 
    (((tmpvar_15 * (
      (tmpvar_17 * (1.0 - tmpvar_19))
     + tmpvar_19)) + (tmpvar_17 * (
      (tmpvar_15 * (1.0 - tmpvar_19))
     + tmpvar_19))) + 1e-05)
  ) * (tmpvar_21 / 
    (((3.141593 * tmpvar_22) * tmpvar_22) + 1e-07)
  )) * 0.7853982);
  specularTerm_9 = tmpvar_27;
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    specularTerm_9 = sqrt(max (0.0001, tmpvar_27));
  };
  float tmpvar_28;
  tmpvar_28 = max (0.0, (specularTerm_9 * tmpvar_15));
  specularTerm_9 = tmpvar_28;
  float x_29;
  x_29 = (1.0 - tmpvar_18);
  vec4 tmpvar_30;
  tmpvar_30.w = 1.0;
  tmpvar_30.xyz = ((tmpvar_2 * (tmpvar_6 * 
    (tmpvar_26 * tmpvar_15)
  )) + ((tmpvar_28 * tmpvar_6) * (tmpvar_3 + 
    ((1.0 - tmpvar_3) * ((x_29 * x_29) * ((x_29 * x_29) * x_29)))
  )));
  vec4 xlat_varoutput_31;
  xlat_varoutput_31.xyz = tmpvar_30.xyz;
  xlat_varoutput_31.w = 1.0;
  gl_FragData[0] = xlat_varoutput_31;
}


#endif
"
}
SubProgram "d3d9 " {
// Stats: 46 math
Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_NATIVE" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
Matrix 12 [_LightMatrix0]
Matrix 8 [_Object2World]
Matrix 16 [_World2Object] 3
Matrix 4 [glstate_matrix_mvp]
Matrix 0 [unity_World2Shadow0]
Vector 23 [_DetailAlbedoMap_ST]
Vector 22 [_MainTex_ST]
Float 24 [_UVSec]
Vector 19 [_WorldSpaceCameraPos]
Vector 20 [_WorldSpaceLightPos0]
Vector 21 [unity_WorldTransformParams]
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   row_major float4x4 _LightMatrix0;
//   float4 _MainTex_ST;
//   row_major float4x4 _Object2World;
//   float _UVSec;
//   row_major float4x4 _World2Object;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 glstate_matrix_mvp;
//   row_major float4x4 unity_World2Shadow[4];
//   float4 unity_WorldTransformParams;
//
//
// Registers:
//
//   Name                       Reg   Size
//   -------------------------- ----- ----
//   unity_World2Shadow         c0       4
//   glstate_matrix_mvp         c4       4
//   _Object2World              c8       4
//   _LightMatrix0              c12      4
//   _World2Object              c16      3
//   _WorldSpaceCameraPos       c19      1
//   _WorldSpaceLightPos0       c20      1
//   unity_WorldTransformParams c21      1
//   _MainTex_ST                c22      1
//   _DetailAlbedoMap_ST        c23      1
//   _UVSec                     c24      1
//

    vs_3_0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_tangent v4
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6
    dcl_texcoord6 o7
    dp4 o0.x, c4, v0
    dp4 o0.y, c5, v0
    dp4 o0.z, c6, v0
    dp4 o0.w, c7, v0
    mad o1.xy, v2, c22, c22.zwzw
    abs r0.x, c24.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c23.xyxy, c23
    dp4 r0.x, c8, v0
    dp4 r0.y, c9, v0
    dp4 r0.z, c10, v0
    add o2.xyz, r0, -c19
    mul r1.xyz, c17, v1.y
    mad r1.xyz, c16, v1.x, r1
    mad r1.xyz, c18, v1.z, r1
    nrm r2.xyz, r1
    dp3 r1.x, c8, v4
    dp3 r1.y, c9, v4
    dp3 r1.z, c10, v4
    nrm r3.xyz, r1
    mul r1.xyz, r2.zxyw, r3.yzxw
    mad r1.xyz, r2.yzxw, r3.zxyw, -r1
    mov o5.xyz, r2
    mov o3.xyz, r3
    mul r1.w, c21.w, v4.w
    mul o4.xyz, r1.w, r1
    dp4 r0.w, c11, v0
    dp4 o6.x, c12, r0
    dp4 o6.y, c13, r0
    dp4 o6.z, c14, r0
    dp4 o6.w, c15, r0
    dp4 o7.x, c0, r0
    dp4 o7.y, c1, r0
    dp4 o7.z, c2, r0
    dp4 o7.w, c3, r0
    mad r0.xyz, r0, -c20.w, c20
    mov o3.w, r0.x
    mov o4.w, r0.y
    mov o5.w, r0.z

// approximately 45 instruction slots used
"
}
SubProgram "d3d11 " {
// Stats: 49 math
Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_NATIVE" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
ConstBuffer "$Globals" 304
Matrix 240 [_LightMatrix0]
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
ConstBuffer "UnityShadows" 416
Matrix 128 [unity_World2Shadow0]
Matrix 192 [unity_World2Shadow1]
Matrix 256 [unity_World2Shadow2]
Matrix 320 [unity_World2Shadow3]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
Vector 336 [unity_WorldTransformParams]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityShadows" 3
BindCB  "UnityPerDraw" 4
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer cb0[19], immediateIndexed
      dcl_constantbuffer cb1[5], immediateIndexed
      dcl_constantbuffer cb2[1], immediateIndexed
      dcl_constantbuffer cb3[12], immediateIndexed
      dcl_constantbuffer cb4[22], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb4[1].xyzw
   1: mad r0.xyzw, cb4[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb4[2].xyzw, v0.zzzz, r0.xyzw
   3: mad o0.xyzw, cb4[3].xyzw, v0.wwww, r0.xyzw
   4: eq r0.x, cb0[13].z, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[11].xxxy, cb0[11].zzzw
   7: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   8: mul r0.xyz, v0.yyyy, cb4[13].xyzx
   9: mad r0.xyz, cb4[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb4[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb4[15].xyzx, v0.wwww, r0.xyzx
  12: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  13: mad r0.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  14: mov o3.w, r0.x
  15: mul r1.xyz, v4.yyyy, cb4[13].xyzx
  16: mad r1.xyz, cb4[12].xyzx, v4.xxxx, r1.xyzx
  17: mad r1.xyz, cb4[14].xyzx, v4.zzzz, r1.xyzx
  18: dp3 r0.x, r1.xyzx, r1.xyzx
  19: rsq r0.x, r0.x
  20: mul r1.xyz, r0.xxxx, r1.xyzx
  21: mov o3.xyz, r1.xyzx
  22: mul r2.x, v1.x, cb4[16].x
  23: mul r2.y, v1.x, cb4[17].x
  24: mul r2.z, v1.x, cb4[18].x
  25: mul r3.x, v1.y, cb4[16].y
  26: mul r3.y, v1.y, cb4[17].y
  27: mul r3.z, v1.y, cb4[18].y
  28: add r2.xyz, r2.xyzx, r3.xyzx
  29: mul r3.x, v1.z, cb4[16].z
  30: mul r3.y, v1.z, cb4[17].z
  31: mul r3.z, v1.z, cb4[18].z
  32: add r2.xyz, r2.xyzx, r3.xyzx
  33: dp3 r0.x, r2.xyzx, r2.xyzx
  34: rsq r0.x, r0.x
  35: mul r2.xyz, r0.xxxx, r2.xyzx
  36: mul r3.xyz, r1.yzxy, r2.zxyz
  37: mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
  38: mov o5.xyz, r2.xyzx
  39: mul r0.x, v4.w, cb4[21].w
  40: mul o4.xyz, r0.xxxx, r1.xyzx
  41: mov o4.w, r0.y
  42: mov o5.w, r0.z
  43: mul r0.xyzw, v0.yyyy, cb4[13].xyzw
  44: mad r0.xyzw, cb4[12].xyzw, v0.xxxx, r0.xyzw
  45: mad r0.xyzw, cb4[14].xyzw, v0.zzzz, r0.xyzw
  46: mad r0.xyzw, cb4[15].xyzw, v0.wwww, r0.xyzw
  47: mul r1.xyzw, r0.yyyy, cb0[16].xyzw
  48: mad r1.xyzw, cb0[15].xyzw, r0.xxxx, r1.xyzw
  49: mad r1.xyzw, cb0[17].xyzw, r0.zzzz, r1.xyzw
  50: mad o6.xyzw, cb0[18].xyzw, r0.wwww, r1.xyzw
  51: mul r1.xyzw, r0.yyyy, cb3[9].xyzw
  52: mad r1.xyzw, cb3[8].xyzw, r0.xxxx, r1.xyzw
  53: mad r1.xyzw, cb3[10].xyzw, r0.zzzz, r1.xyzw
  54: mad o7.xyzw, cb3[11].xyzw, r0.wwww, r1.xyzw
  55: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
// Stats: 95 math, 2 textures, 2 branches
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
"#version 120

#ifdef VERTEX
uniform vec3 _WorldSpaceCameraPos;
uniform vec4 _ProjectionParams;
uniform vec4 _WorldSpaceLightPos0;

uniform mat4 _Object2World;
uniform mat4 _World2Object;
uniform vec4 unity_WorldTransformParams;
uniform vec4 _MainTex_ST;
uniform vec4 _DetailAlbedoMap_ST;
uniform float _UVSec;
attribute vec4 TANGENT;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
void main ()
{
  vec2 tmpvar_1;
  tmpvar_1 = gl_MultiTexCoord0.xy;
  vec2 tmpvar_2;
  tmpvar_2 = gl_MultiTexCoord1.xy;
  vec4 tmpvar_3;
  vec4 tmpvar_4;
  vec4 tmpvar_5;
  vec4 tmpvar_6;
  vec4 tmpvar_7;
  tmpvar_7 = (_Object2World * gl_Vertex);
  tmpvar_3 = (gl_ModelViewProjectionMatrix * gl_Vertex);
  vec4 texcoord_8;
  texcoord_8.xy = ((gl_MultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  vec2 tmpvar_9;
  if ((_UVSec == 0.0)) {
    tmpvar_9 = tmpvar_1;
  } else {
    tmpvar_9 = tmpvar_2;
  };
  texcoord_8.zw = ((tmpvar_9 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  vec4 v_10;
  v_10.x = _World2Object[0].x;
  v_10.y = _World2Object[1].x;
  v_10.z = _World2Object[2].x;
  v_10.w = _World2Object[3].x;
  vec4 v_11;
  v_11.x = _World2Object[0].y;
  v_11.y = _World2Object[1].y;
  v_11.z = _World2Object[2].y;
  v_11.w = _World2Object[3].y;
  vec4 v_12;
  v_12.x = _World2Object[0].z;
  v_12.y = _World2Object[1].z;
  v_12.z = _World2Object[2].z;
  v_12.w = _World2Object[3].z;
  vec3 tmpvar_13;
  tmpvar_13 = normalize(((
    (v_10.xyz * gl_Normal.x)
   + 
    (v_11.xyz * gl_Normal.y)
  ) + (v_12.xyz * gl_Normal.z)));
  mat3 tmpvar_14;
  tmpvar_14[0] = _Object2World[0].xyz;
  tmpvar_14[1] = _Object2World[1].xyz;
  tmpvar_14[2] = _Object2World[2].xyz;
  vec4 tmpvar_15;
  tmpvar_15.xyz = normalize((tmpvar_14 * TANGENT.xyz));
  tmpvar_15.w = TANGENT.w;
  vec3 tmpvar_16;
  vec3 tmpvar_17;
  tmpvar_16 = tmpvar_15.xyz;
  tmpvar_17 = (((tmpvar_13.yzx * tmpvar_15.zxy) - (tmpvar_13.zxy * tmpvar_15.yzx)) * (TANGENT.w * unity_WorldTransformParams.w));
  vec3 tmpvar_18;
  vec3 tmpvar_19;
  vec3 tmpvar_20;
  tmpvar_18.x = tmpvar_16.x;
  tmpvar_18.y = tmpvar_17.x;
  tmpvar_18.z = tmpvar_13.x;
  tmpvar_19.x = tmpvar_16.y;
  tmpvar_19.y = tmpvar_17.y;
  tmpvar_19.z = tmpvar_13.y;
  tmpvar_20.x = tmpvar_16.z;
  tmpvar_20.y = tmpvar_17.z;
  tmpvar_20.z = tmpvar_13.z;
  vec3 v_21;
  v_21.x = tmpvar_18.x;
  v_21.y = tmpvar_19.x;
  v_21.z = tmpvar_20.x;
  tmpvar_4.xyz = v_21;
  vec3 v_22;
  v_22.x = tmpvar_18.y;
  v_22.y = tmpvar_19.y;
  v_22.z = tmpvar_20.y;
  tmpvar_5.xyz = v_22;
  vec3 v_23;
  v_23.x = tmpvar_18.z;
  v_23.y = tmpvar_19.z;
  v_23.z = tmpvar_20.z;
  tmpvar_6.xyz = v_23;
  vec4 o_24;
  vec4 tmpvar_25;
  tmpvar_25 = (tmpvar_3 * 0.5);
  vec2 tmpvar_26;
  tmpvar_26.x = tmpvar_25.x;
  tmpvar_26.y = (tmpvar_25.y * _ProjectionParams.x);
  o_24.xy = (tmpvar_26 + tmpvar_25.w);
  o_24.zw = tmpvar_3.zw;
  vec3 tmpvar_27;
  tmpvar_27 = (_WorldSpaceLightPos0.xyz - (tmpvar_7.xyz * _WorldSpaceLightPos0.w));
  tmpvar_4.w = tmpvar_27.x;
  tmpvar_5.w = tmpvar_27.y;
  tmpvar_6.w = tmpvar_27.z;
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = texcoord_8;
  xlv_TEXCOORD1 = (tmpvar_7.xyz - _WorldSpaceCameraPos);
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  xlv_TEXCOORD5 = o_24;
}


#endif
#ifdef FRAGMENT
uniform vec4 unity_ColorSpaceDielectricSpec;
uniform vec4 unity_ColorSpaceLuminance;
uniform vec4 _LightColor0;
uniform vec4 _Color;
uniform sampler2D _MainTex;
uniform float _Metallic;
uniform float _Glossiness;
uniform sampler2D _ShadowMapTexture;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
void main ()
{
  vec3 tmpvar_1;
  tmpvar_1 = (_Color.xyz * texture2D (_MainTex, xlv_TEXCOORD0.xy).xyz);
  vec3 tmpvar_2;
  vec3 tmpvar_3;
  tmpvar_3 = mix (unity_ColorSpaceDielectricSpec.xyz, tmpvar_1, vec3(_Metallic));
  tmpvar_2 = (tmpvar_1 * (unity_ColorSpaceDielectricSpec.w - (_Metallic * unity_ColorSpaceDielectricSpec.w)));
  vec3 tmpvar_4;
  tmpvar_4 = normalize(xlv_TEXCOORD2_2.xyz);
  vec3 tmpvar_5;
  tmpvar_5.x = xlv_TEXCOORD2.w;
  tmpvar_5.y = xlv_TEXCOORD2_1.w;
  tmpvar_5.z = xlv_TEXCOORD2_2.w;
  vec3 tmpvar_6;
  tmpvar_6 = (_LightColor0.xyz * texture2DProj (_ShadowMapTexture, xlv_TEXCOORD5).x);
  vec3 viewDir_7;
  viewDir_7 = -(normalize(xlv_TEXCOORD1));
  float specularTerm_8;
  float tmpvar_9;
  tmpvar_9 = (1.0 - _Glossiness);
  vec3 tmpvar_10;
  vec3 inVec_11;
  inVec_11 = (tmpvar_5 + viewDir_7);
  tmpvar_10 = (inVec_11 * inversesqrt(max (0.001, 
    dot (inVec_11, inVec_11)
  )));
  float tmpvar_12;
  tmpvar_12 = dot (tmpvar_4, viewDir_7);
  vec3 tmpvar_13;
  if ((tmpvar_12 < 0.0)) {
    tmpvar_13 = (tmpvar_4 + (viewDir_7 * (
      -(tmpvar_12)
     + 1e-05)));
  } else {
    tmpvar_13 = tmpvar_4;
  };
  float tmpvar_14;
  tmpvar_14 = max (0.0, dot (tmpvar_13, tmpvar_5));
  float tmpvar_15;
  tmpvar_15 = max (0.0, dot (tmpvar_13, tmpvar_10));
  float tmpvar_16;
  tmpvar_16 = max (0.0, dot (tmpvar_13, viewDir_7));
  float tmpvar_17;
  tmpvar_17 = max (0.0, dot (tmpvar_5, tmpvar_10));
  float tmpvar_18;
  tmpvar_18 = (tmpvar_9 * tmpvar_9);
  float tmpvar_19;
  tmpvar_19 = (tmpvar_9 * tmpvar_9);
  float tmpvar_20;
  tmpvar_20 = (tmpvar_19 * tmpvar_19);
  float tmpvar_21;
  tmpvar_21 = (((tmpvar_15 * tmpvar_15) * (tmpvar_20 - 1.0)) + 1.0);
  float x_22;
  x_22 = (1.0 - tmpvar_14);
  float x_23;
  x_23 = (1.0 - tmpvar_16);
  float tmpvar_24;
  tmpvar_24 = (0.5 + ((2.0 * tmpvar_17) * (tmpvar_17 * tmpvar_9)));
  float tmpvar_25;
  tmpvar_25 = ((1.0 + (
    (tmpvar_24 - 1.0)
   * 
    ((x_22 * x_22) * ((x_22 * x_22) * x_22))
  )) * (1.0 + (
    (tmpvar_24 - 1.0)
   * 
    ((x_23 * x_23) * ((x_23 * x_23) * x_23))
  )));
  float tmpvar_26;
  tmpvar_26 = (((2.0 / 
    (((tmpvar_14 * (
      (tmpvar_16 * (1.0 - tmpvar_18))
     + tmpvar_18)) + (tmpvar_16 * (
      (tmpvar_14 * (1.0 - tmpvar_18))
     + tmpvar_18))) + 1e-05)
  ) * (tmpvar_20 / 
    (((3.141593 * tmpvar_21) * tmpvar_21) + 1e-07)
  )) * 0.7853982);
  specularTerm_8 = tmpvar_26;
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    specularTerm_8 = sqrt(max (0.0001, tmpvar_26));
  };
  float tmpvar_27;
  tmpvar_27 = max (0.0, (specularTerm_8 * tmpvar_14));
  specularTerm_8 = tmpvar_27;
  float x_28;
  x_28 = (1.0 - tmpvar_17);
  vec4 tmpvar_29;
  tmpvar_29.w = 1.0;
  tmpvar_29.xyz = ((tmpvar_2 * (tmpvar_6 * 
    (tmpvar_25 * tmpvar_14)
  )) + ((tmpvar_27 * tmpvar_6) * (tmpvar_3 + 
    ((1.0 - tmpvar_3) * ((x_28 * x_28) * ((x_28 * x_28) * x_28)))
  )));
  vec4 xlat_varoutput_30;
  xlat_varoutput_30.xyz = tmpvar_29.xyz;
  xlat_varoutput_30.w = 1.0;
  gl_FragData[0] = xlat_varoutput_30;
}


#endif
"
}
SubProgram "d3d9 " {
// Stats: 43 math
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
Matrix 4 [_Object2World] 3
Matrix 7 [_World2Object] 3
Matrix 0 [glstate_matrix_mvp]
Vector 16 [_DetailAlbedoMap_ST]
Vector 15 [_MainTex_ST]
Vector 11 [_ProjectionParams]
Vector 12 [_ScreenParams]
Float 17 [_UVSec]
Vector 10 [_WorldSpaceCameraPos]
Vector 13 [_WorldSpaceLightPos0]
Vector 14 [unity_WorldTransformParams]
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   row_major float4x4 _Object2World;
//   float4 _ProjectionParams;
//   float4 _ScreenParams;
//   float _UVSec;
//   row_major float4x4 _World2Object;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 glstate_matrix_mvp;
//   float4 unity_WorldTransformParams;
//
//
// Registers:
//
//   Name                       Reg   Size
//   -------------------------- ----- ----
//   glstate_matrix_mvp         c0       4
//   _Object2World              c4       3
//   _World2Object              c7       3
//   _WorldSpaceCameraPos       c10      1
//   _ProjectionParams          c11      1
//   _ScreenParams              c12      1
//   _WorldSpaceLightPos0       c13      1
//   unity_WorldTransformParams c14      1
//   _MainTex_ST                c15      1
//   _DetailAlbedoMap_ST        c16      1
//   _UVSec                     c17      1
//

    vs_3_0
    def c18, 0.5, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_tangent v4
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6
    mad o1.xy, v2, c15, c15.zwzw
    abs r0.x, c17.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c16.xyxy, c16
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add o2.xyz, r0, -c10
    mad r0.xyz, r0, -c13.w, c13
    mul r1.xyz, c8, v1.y
    mad r1.xyz, c7, v1.x, r1
    mad r1.xyz, c9, v1.z, r1
    nrm r2.xyz, r1
    dp3 r1.x, c4, v4
    dp3 r1.y, c5, v4
    dp3 r1.z, c6, v4
    nrm r3.xyz, r1
    mul r1.xyz, r2.zxyw, r3.yzxw
    mad r1.xyz, r2.yzxw, r3.zxyw, -r1
    mov o5.xyz, r2
    mov o3.xyz, r3
    mul r0.w, c14.w, v4.w
    mul o4.xyz, r0.w, r1
    dp4 r1.y, c1, v0
    mul r0.w, r1.y, c11.x
    mul r2.w, r0.w, c18.x
    dp4 r1.x, c0, v0
    dp4 r1.w, c3, v0
    mul r2.xz, r1.xyww, c18.x
    mad o6.xy, r2.z, c12.zwzw, r2.xwzw
    dp4 r1.z, c2, v0
    mov o0, r1
    mov o6.zw, r1
    mov o3.w, r0.x
    mov o4.w, r0.y
    mov o5.w, r0.z

// approximately 42 instruction slots used
"
}
SubProgram "d3d11 " {
// Stats: 40 math
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
ConstBuffer "$Globals" 240
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
Vector 80 [_ProjectionParams]
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
Vector 336 [unity_WorldTransformParams]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer cb0[14], immediateIndexed
      dcl_constantbuffer cb1[6], immediateIndexed
      dcl_constantbuffer cb2[1], immediateIndexed
      dcl_constantbuffer cb3[22], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 5
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   4: mov o0.xyzw, r0.xyzw
   5: eq r1.x, cb0[13].z, l(0.000000)
   6: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
   7: mad o1.zw, r1.xxxy, cb0[11].xxxy, cb0[11].zzzw
   8: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   9: mul r1.xyz, v0.yyyy, cb3[13].xyzx
  10: mad r1.xyz, cb3[12].xyzx, v0.xxxx, r1.xyzx
  11: mad r1.xyz, cb3[14].xyzx, v0.zzzz, r1.xyzx
  12: mad r1.xyz, cb3[15].xyzx, v0.wwww, r1.xyzx
  13: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  14: mad r1.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  15: mov o3.w, r1.x
  16: mul r2.xyz, v4.yyyy, cb3[13].xyzx
  17: mad r2.xyz, cb3[12].xyzx, v4.xxxx, r2.xyzx
  18: mad r2.xyz, cb3[14].xyzx, v4.zzzz, r2.xyzx
  19: dp3 r1.x, r2.xyzx, r2.xyzx
  20: rsq r1.x, r1.x
  21: mul r2.xyz, r1.xxxx, r2.xyzx
  22: mov o3.xyz, r2.xyzx
  23: mul r3.x, v1.x, cb3[16].x
  24: mul r3.y, v1.x, cb3[17].x
  25: mul r3.z, v1.x, cb3[18].x
  26: mul r4.x, v1.y, cb3[16].y
  27: mul r4.y, v1.y, cb3[17].y
  28: mul r4.z, v1.y, cb3[18].y
  29: add r3.xyz, r3.xyzx, r4.xyzx
  30: mul r4.x, v1.z, cb3[16].z
  31: mul r4.y, v1.z, cb3[17].z
  32: mul r4.z, v1.z, cb3[18].z
  33: add r3.xyz, r3.xyzx, r4.xyzx
  34: dp3 r1.x, r3.xyzx, r3.xyzx
  35: rsq r1.x, r1.x
  36: mul r3.xyz, r1.xxxx, r3.xyzx
  37: mul r4.xyz, r2.yzxy, r3.zxyz
  38: mad r2.xyz, r3.yzxy, r2.zxyz, -r4.xyzx
  39: mov o5.xyz, r3.xyzx
  40: mul r1.x, v4.w, cb3[21].w
  41: mul o4.xyz, r1.xxxx, r2.xyzx
  42: mov o4.w, r1.y
  43: mov o5.w, r1.z
  44: mul r0.y, r0.y, cb1[5].x
  45: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  46: mov o6.zw, r0.zzzw
  47: add o6.xy, r1.zzzz, r1.xwxx
  48: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
// Stats: 96 math, 3 textures, 2 branches
Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" }
"#version 120

#ifdef VERTEX
uniform vec3 _WorldSpaceCameraPos;
uniform vec4 _ProjectionParams;
uniform vec4 _WorldSpaceLightPos0;

uniform mat4 _Object2World;
uniform mat4 _World2Object;
uniform vec4 unity_WorldTransformParams;
uniform vec4 _MainTex_ST;
uniform vec4 _DetailAlbedoMap_ST;
uniform float _UVSec;
uniform mat4 _LightMatrix0;
attribute vec4 TANGENT;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec2 xlv_TEXCOORD5;
varying vec4 xlv_TEXCOORD6;
void main ()
{
  vec2 tmpvar_1;
  tmpvar_1 = gl_MultiTexCoord0.xy;
  vec2 tmpvar_2;
  tmpvar_2 = gl_MultiTexCoord1.xy;
  vec4 tmpvar_3;
  vec4 tmpvar_4;
  vec4 tmpvar_5;
  vec4 tmpvar_6;
  vec4 tmpvar_7;
  tmpvar_7 = (_Object2World * gl_Vertex);
  tmpvar_3 = (gl_ModelViewProjectionMatrix * gl_Vertex);
  vec4 texcoord_8;
  texcoord_8.xy = ((gl_MultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  vec2 tmpvar_9;
  if ((_UVSec == 0.0)) {
    tmpvar_9 = tmpvar_1;
  } else {
    tmpvar_9 = tmpvar_2;
  };
  texcoord_8.zw = ((tmpvar_9 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  vec4 v_10;
  v_10.x = _World2Object[0].x;
  v_10.y = _World2Object[1].x;
  v_10.z = _World2Object[2].x;
  v_10.w = _World2Object[3].x;
  vec4 v_11;
  v_11.x = _World2Object[0].y;
  v_11.y = _World2Object[1].y;
  v_11.z = _World2Object[2].y;
  v_11.w = _World2Object[3].y;
  vec4 v_12;
  v_12.x = _World2Object[0].z;
  v_12.y = _World2Object[1].z;
  v_12.z = _World2Object[2].z;
  v_12.w = _World2Object[3].z;
  vec3 tmpvar_13;
  tmpvar_13 = normalize(((
    (v_10.xyz * gl_Normal.x)
   + 
    (v_11.xyz * gl_Normal.y)
  ) + (v_12.xyz * gl_Normal.z)));
  mat3 tmpvar_14;
  tmpvar_14[0] = _Object2World[0].xyz;
  tmpvar_14[1] = _Object2World[1].xyz;
  tmpvar_14[2] = _Object2World[2].xyz;
  vec4 tmpvar_15;
  tmpvar_15.xyz = normalize((tmpvar_14 * TANGENT.xyz));
  tmpvar_15.w = TANGENT.w;
  vec3 tmpvar_16;
  vec3 tmpvar_17;
  tmpvar_16 = tmpvar_15.xyz;
  tmpvar_17 = (((tmpvar_13.yzx * tmpvar_15.zxy) - (tmpvar_13.zxy * tmpvar_15.yzx)) * (TANGENT.w * unity_WorldTransformParams.w));
  vec3 tmpvar_18;
  vec3 tmpvar_19;
  vec3 tmpvar_20;
  tmpvar_18.x = tmpvar_16.x;
  tmpvar_18.y = tmpvar_17.x;
  tmpvar_18.z = tmpvar_13.x;
  tmpvar_19.x = tmpvar_16.y;
  tmpvar_19.y = tmpvar_17.y;
  tmpvar_19.z = tmpvar_13.y;
  tmpvar_20.x = tmpvar_16.z;
  tmpvar_20.y = tmpvar_17.z;
  tmpvar_20.z = tmpvar_13.z;
  vec3 v_21;
  v_21.x = tmpvar_18.x;
  v_21.y = tmpvar_19.x;
  v_21.z = tmpvar_20.x;
  tmpvar_4.xyz = v_21;
  vec3 v_22;
  v_22.x = tmpvar_18.y;
  v_22.y = tmpvar_19.y;
  v_22.z = tmpvar_20.y;
  tmpvar_5.xyz = v_22;
  vec3 v_23;
  v_23.x = tmpvar_18.z;
  v_23.y = tmpvar_19.z;
  v_23.z = tmpvar_20.z;
  tmpvar_6.xyz = v_23;
  vec4 o_24;
  vec4 tmpvar_25;
  tmpvar_25 = (tmpvar_3 * 0.5);
  vec2 tmpvar_26;
  tmpvar_26.x = tmpvar_25.x;
  tmpvar_26.y = (tmpvar_25.y * _ProjectionParams.x);
  o_24.xy = (tmpvar_26 + tmpvar_25.w);
  o_24.zw = tmpvar_3.zw;
  vec3 tmpvar_27;
  tmpvar_27 = (_WorldSpaceLightPos0.xyz - (tmpvar_7.xyz * _WorldSpaceLightPos0.w));
  tmpvar_4.w = tmpvar_27.x;
  tmpvar_5.w = tmpvar_27.y;
  tmpvar_6.w = tmpvar_27.z;
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = texcoord_8;
  xlv_TEXCOORD1 = (tmpvar_7.xyz - _WorldSpaceCameraPos);
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  xlv_TEXCOORD5 = (_LightMatrix0 * (_Object2World * gl_Vertex)).xy;
  xlv_TEXCOORD6 = o_24;
}


#endif
#ifdef FRAGMENT
uniform vec4 unity_ColorSpaceDielectricSpec;
uniform vec4 unity_ColorSpaceLuminance;
uniform vec4 _LightColor0;
uniform vec4 _Color;
uniform sampler2D _MainTex;
uniform float _Metallic;
uniform float _Glossiness;
uniform sampler2D _ShadowMapTexture;
uniform sampler2D _LightTexture0;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec2 xlv_TEXCOORD5;
varying vec4 xlv_TEXCOORD6;
void main ()
{
  vec3 tmpvar_1;
  tmpvar_1 = (_Color.xyz * texture2D (_MainTex, xlv_TEXCOORD0.xy).xyz);
  vec3 tmpvar_2;
  vec3 tmpvar_3;
  tmpvar_3 = mix (unity_ColorSpaceDielectricSpec.xyz, tmpvar_1, vec3(_Metallic));
  tmpvar_2 = (tmpvar_1 * (unity_ColorSpaceDielectricSpec.w - (_Metallic * unity_ColorSpaceDielectricSpec.w)));
  vec3 tmpvar_4;
  tmpvar_4 = normalize(xlv_TEXCOORD2_2.xyz);
  vec3 tmpvar_5;
  tmpvar_5.x = xlv_TEXCOORD2.w;
  tmpvar_5.y = xlv_TEXCOORD2_1.w;
  tmpvar_5.z = xlv_TEXCOORD2_2.w;
  vec3 tmpvar_6;
  tmpvar_6 = (_LightColor0.xyz * (texture2D (_LightTexture0, xlv_TEXCOORD5).w * texture2DProj (_ShadowMapTexture, xlv_TEXCOORD6).x));
  vec3 viewDir_7;
  viewDir_7 = -(normalize(xlv_TEXCOORD1));
  float specularTerm_8;
  float tmpvar_9;
  tmpvar_9 = (1.0 - _Glossiness);
  vec3 tmpvar_10;
  vec3 inVec_11;
  inVec_11 = (tmpvar_5 + viewDir_7);
  tmpvar_10 = (inVec_11 * inversesqrt(max (0.001, 
    dot (inVec_11, inVec_11)
  )));
  float tmpvar_12;
  tmpvar_12 = dot (tmpvar_4, viewDir_7);
  vec3 tmpvar_13;
  if ((tmpvar_12 < 0.0)) {
    tmpvar_13 = (tmpvar_4 + (viewDir_7 * (
      -(tmpvar_12)
     + 1e-05)));
  } else {
    tmpvar_13 = tmpvar_4;
  };
  float tmpvar_14;
  tmpvar_14 = max (0.0, dot (tmpvar_13, tmpvar_5));
  float tmpvar_15;
  tmpvar_15 = max (0.0, dot (tmpvar_13, tmpvar_10));
  float tmpvar_16;
  tmpvar_16 = max (0.0, dot (tmpvar_13, viewDir_7));
  float tmpvar_17;
  tmpvar_17 = max (0.0, dot (tmpvar_5, tmpvar_10));
  float tmpvar_18;
  tmpvar_18 = (tmpvar_9 * tmpvar_9);
  float tmpvar_19;
  tmpvar_19 = (tmpvar_9 * tmpvar_9);
  float tmpvar_20;
  tmpvar_20 = (tmpvar_19 * tmpvar_19);
  float tmpvar_21;
  tmpvar_21 = (((tmpvar_15 * tmpvar_15) * (tmpvar_20 - 1.0)) + 1.0);
  float x_22;
  x_22 = (1.0 - tmpvar_14);
  float x_23;
  x_23 = (1.0 - tmpvar_16);
  float tmpvar_24;
  tmpvar_24 = (0.5 + ((2.0 * tmpvar_17) * (tmpvar_17 * tmpvar_9)));
  float tmpvar_25;
  tmpvar_25 = ((1.0 + (
    (tmpvar_24 - 1.0)
   * 
    ((x_22 * x_22) * ((x_22 * x_22) * x_22))
  )) * (1.0 + (
    (tmpvar_24 - 1.0)
   * 
    ((x_23 * x_23) * ((x_23 * x_23) * x_23))
  )));
  float tmpvar_26;
  tmpvar_26 = (((2.0 / 
    (((tmpvar_14 * (
      (tmpvar_16 * (1.0 - tmpvar_18))
     + tmpvar_18)) + (tmpvar_16 * (
      (tmpvar_14 * (1.0 - tmpvar_18))
     + tmpvar_18))) + 1e-05)
  ) * (tmpvar_20 / 
    (((3.141593 * tmpvar_21) * tmpvar_21) + 1e-07)
  )) * 0.7853982);
  specularTerm_8 = tmpvar_26;
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    specularTerm_8 = sqrt(max (0.0001, tmpvar_26));
  };
  float tmpvar_27;
  tmpvar_27 = max (0.0, (specularTerm_8 * tmpvar_14));
  specularTerm_8 = tmpvar_27;
  float x_28;
  x_28 = (1.0 - tmpvar_17);
  vec4 tmpvar_29;
  tmpvar_29.w = 1.0;
  tmpvar_29.xyz = ((tmpvar_2 * (tmpvar_6 * 
    (tmpvar_25 * tmpvar_14)
  )) + ((tmpvar_27 * tmpvar_6) * (tmpvar_3 + 
    ((1.0 - tmpvar_3) * ((x_28 * x_28) * ((x_28 * x_28) * x_28)))
  )));
  vec4 xlat_varoutput_30;
  xlat_varoutput_30.xyz = tmpvar_29.xyz;
  xlat_varoutput_30.w = 1.0;
  gl_FragData[0] = xlat_varoutput_30;
}


#endif
"
}
SubProgram "d3d9 " {
// Stats: 46 math
Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
Matrix 11 [_LightMatrix0] 2
Matrix 4 [_Object2World]
Matrix 8 [_World2Object] 3
Matrix 0 [glstate_matrix_mvp]
Vector 19 [_DetailAlbedoMap_ST]
Vector 18 [_MainTex_ST]
Vector 14 [_ProjectionParams]
Vector 15 [_ScreenParams]
Float 20 [_UVSec]
Vector 13 [_WorldSpaceCameraPos]
Vector 16 [_WorldSpaceLightPos0]
Vector 17 [unity_WorldTransformParams]
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   row_major float4x4 _LightMatrix0;
//   float4 _MainTex_ST;
//   row_major float4x4 _Object2World;
//   float4 _ProjectionParams;
//   float4 _ScreenParams;
//   float _UVSec;
//   row_major float4x4 _World2Object;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 glstate_matrix_mvp;
//   float4 unity_WorldTransformParams;
//
//
// Registers:
//
//   Name                       Reg   Size
//   -------------------------- ----- ----
//   glstate_matrix_mvp         c0       4
//   _Object2World              c4       4
//   _World2Object              c8       3
//   _LightMatrix0              c11      2
//   _WorldSpaceCameraPos       c13      1
//   _ProjectionParams          c14      1
//   _ScreenParams              c15      1
//   _WorldSpaceLightPos0       c16      1
//   unity_WorldTransformParams c17      1
//   _MainTex_ST                c18      1
//   _DetailAlbedoMap_ST        c19      1
//   _UVSec                     c20      1
//

    vs_3_0
    def c21, 0.5, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_tangent v4
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6.xy
    dcl_texcoord6 o7
    mad o1.xy, v2, c18, c18.zwzw
    abs r0.x, c20.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c19.xyxy, c19
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add o2.xyz, r0, -c13
    mul r1.xyz, c9, v1.y
    mad r1.xyz, c8, v1.x, r1
    mad r1.xyz, c10, v1.z, r1
    nrm r2.xyz, r1
    dp3 r1.x, c4, v4
    dp3 r1.y, c5, v4
    dp3 r1.z, c6, v4
    nrm r3.xyz, r1
    mul r1.xyz, r2.zxyw, r3.yzxw
    mad r1.xyz, r2.yzxw, r3.zxyw, -r1
    mov o5.xyz, r2
    mov o3.xyz, r3
    mul r1.w, c17.w, v4.w
    mul o4.xyz, r1.w, r1
    dp4 r0.w, c7, v0
    dp4 o6.x, c11, r0
    dp4 o6.y, c12, r0
    mad r0.xyz, r0, -c16.w, c16
    dp4 r1.y, c1, v0
    mul r0.w, r1.y, c14.x
    mul r2.w, r0.w, c21.x
    dp4 r1.x, c0, v0
    dp4 r1.w, c3, v0
    mul r2.xz, r1.xyww, c21.x
    mad o7.xy, r2.z, c15.zwzw, r2.xwzw
    dp4 r1.z, c2, v0
    mov o0, r1
    mov o7.zw, r1
    mov o3.w, r0.x
    mov o4.w, r0.y
    mov o5.w, r0.z

// approximately 45 instruction slots used
"
}
SubProgram "d3d11 " {
// Stats: 48 math
Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
ConstBuffer "$Globals" 304
Matrix 240 [_LightMatrix0]
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
Vector 80 [_ProjectionParams]
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
Vector 336 [unity_WorldTransformParams]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer cb0[19], immediateIndexed
      dcl_constantbuffer cb1[6], immediateIndexed
      dcl_constantbuffer cb2[1], immediateIndexed
      dcl_constantbuffer cb3[22], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xy
      dcl_output o7.xyzw
      dcl_temps 5
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   4: mov o0.xyzw, r0.xyzw
   5: eq r1.x, cb0[13].z, l(0.000000)
   6: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
   7: mad o1.zw, r1.xxxy, cb0[11].xxxy, cb0[11].zzzw
   8: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   9: mul r1.xyz, v0.yyyy, cb3[13].xyzx
  10: mad r1.xyz, cb3[12].xyzx, v0.xxxx, r1.xyzx
  11: mad r1.xyz, cb3[14].xyzx, v0.zzzz, r1.xyzx
  12: mad r1.xyz, cb3[15].xyzx, v0.wwww, r1.xyzx
  13: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  14: mad r1.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  15: mov o3.w, r1.x
  16: mul r2.xyz, v4.yyyy, cb3[13].xyzx
  17: mad r2.xyz, cb3[12].xyzx, v4.xxxx, r2.xyzx
  18: mad r2.xyz, cb3[14].xyzx, v4.zzzz, r2.xyzx
  19: dp3 r1.x, r2.xyzx, r2.xyzx
  20: rsq r1.x, r1.x
  21: mul r2.xyz, r1.xxxx, r2.xyzx
  22: mov o3.xyz, r2.xyzx
  23: mul r3.x, v1.x, cb3[16].x
  24: mul r3.y, v1.x, cb3[17].x
  25: mul r3.z, v1.x, cb3[18].x
  26: mul r4.x, v1.y, cb3[16].y
  27: mul r4.y, v1.y, cb3[17].y
  28: mul r4.z, v1.y, cb3[18].y
  29: add r3.xyz, r3.xyzx, r4.xyzx
  30: mul r4.x, v1.z, cb3[16].z
  31: mul r4.y, v1.z, cb3[17].z
  32: mul r4.z, v1.z, cb3[18].z
  33: add r3.xyz, r3.xyzx, r4.xyzx
  34: dp3 r1.x, r3.xyzx, r3.xyzx
  35: rsq r1.x, r1.x
  36: mul r3.xyz, r1.xxxx, r3.xyzx
  37: mul r4.xyz, r2.yzxy, r3.zxyz
  38: mad r2.xyz, r3.yzxy, r2.zxyz, -r4.xyzx
  39: mov o5.xyz, r3.xyzx
  40: mul r1.x, v4.w, cb3[21].w
  41: mul o4.xyz, r1.xxxx, r2.xyzx
  42: mov o4.w, r1.y
  43: mov o5.w, r1.z
  44: mul r1.xyzw, v0.yyyy, cb3[13].xyzw
  45: mad r1.xyzw, cb3[12].xyzw, v0.xxxx, r1.xyzw
  46: mad r1.xyzw, cb3[14].xyzw, v0.zzzz, r1.xyzw
  47: mad r1.xyzw, cb3[15].xyzw, v0.wwww, r1.xyzw
  48: mul r2.xy, r1.yyyy, cb0[16].xyxx
  49: mad r1.xy, cb0[15].xyxx, r1.xxxx, r2.xyxx
  50: mad r1.xy, cb0[17].xyxx, r1.zzzz, r1.xyxx
  51: mad o6.xy, cb0[18].xyxx, r1.wwww, r1.xyxx
  52: mul r0.y, r0.y, cb1[5].x
  53: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  54: mov o7.zw, r0.zzzw
  55: add o7.xy, r1.zzzz, r1.xwxx
  56: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
// Stats: 104 math, 3 textures, 3 branches
Keywords { "POINT" "SHADOWS_CUBE" }
"#version 120

#ifdef VERTEX
uniform vec3 _WorldSpaceCameraPos;
uniform vec4 _WorldSpaceLightPos0;
uniform vec4 _LightPositionRange;

uniform mat4 _Object2World;
uniform mat4 _World2Object;
uniform vec4 unity_WorldTransformParams;
uniform vec4 _MainTex_ST;
uniform vec4 _DetailAlbedoMap_ST;
uniform float _UVSec;
uniform mat4 _LightMatrix0;
attribute vec4 TANGENT;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec3 xlv_TEXCOORD5;
varying vec3 xlv_TEXCOORD6;
void main ()
{
  vec2 tmpvar_1;
  tmpvar_1 = gl_MultiTexCoord0.xy;
  vec2 tmpvar_2;
  tmpvar_2 = gl_MultiTexCoord1.xy;
  vec4 tmpvar_3;
  vec4 tmpvar_4;
  vec4 tmpvar_5;
  vec4 tmpvar_6;
  vec4 tmpvar_7;
  tmpvar_7 = (_Object2World * gl_Vertex);
  tmpvar_3 = (gl_ModelViewProjectionMatrix * gl_Vertex);
  vec4 texcoord_8;
  texcoord_8.xy = ((gl_MultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  vec2 tmpvar_9;
  if ((_UVSec == 0.0)) {
    tmpvar_9 = tmpvar_1;
  } else {
    tmpvar_9 = tmpvar_2;
  };
  texcoord_8.zw = ((tmpvar_9 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  vec4 v_10;
  v_10.x = _World2Object[0].x;
  v_10.y = _World2Object[1].x;
  v_10.z = _World2Object[2].x;
  v_10.w = _World2Object[3].x;
  vec4 v_11;
  v_11.x = _World2Object[0].y;
  v_11.y = _World2Object[1].y;
  v_11.z = _World2Object[2].y;
  v_11.w = _World2Object[3].y;
  vec4 v_12;
  v_12.x = _World2Object[0].z;
  v_12.y = _World2Object[1].z;
  v_12.z = _World2Object[2].z;
  v_12.w = _World2Object[3].z;
  vec3 tmpvar_13;
  tmpvar_13 = normalize(((
    (v_10.xyz * gl_Normal.x)
   + 
    (v_11.xyz * gl_Normal.y)
  ) + (v_12.xyz * gl_Normal.z)));
  mat3 tmpvar_14;
  tmpvar_14[0] = _Object2World[0].xyz;
  tmpvar_14[1] = _Object2World[1].xyz;
  tmpvar_14[2] = _Object2World[2].xyz;
  vec4 tmpvar_15;
  tmpvar_15.xyz = normalize((tmpvar_14 * TANGENT.xyz));
  tmpvar_15.w = TANGENT.w;
  vec3 tmpvar_16;
  vec3 tmpvar_17;
  tmpvar_16 = tmpvar_15.xyz;
  tmpvar_17 = (((tmpvar_13.yzx * tmpvar_15.zxy) - (tmpvar_13.zxy * tmpvar_15.yzx)) * (TANGENT.w * unity_WorldTransformParams.w));
  vec3 tmpvar_18;
  vec3 tmpvar_19;
  vec3 tmpvar_20;
  tmpvar_18.x = tmpvar_16.x;
  tmpvar_18.y = tmpvar_17.x;
  tmpvar_18.z = tmpvar_13.x;
  tmpvar_19.x = tmpvar_16.y;
  tmpvar_19.y = tmpvar_17.y;
  tmpvar_19.z = tmpvar_13.y;
  tmpvar_20.x = tmpvar_16.z;
  tmpvar_20.y = tmpvar_17.z;
  tmpvar_20.z = tmpvar_13.z;
  vec3 v_21;
  v_21.x = tmpvar_18.x;
  v_21.y = tmpvar_19.x;
  v_21.z = tmpvar_20.x;
  tmpvar_4.xyz = v_21;
  vec3 v_22;
  v_22.x = tmpvar_18.y;
  v_22.y = tmpvar_19.y;
  v_22.z = tmpvar_20.y;
  tmpvar_5.xyz = v_22;
  vec3 v_23;
  v_23.x = tmpvar_18.z;
  v_23.y = tmpvar_19.z;
  v_23.z = tmpvar_20.z;
  tmpvar_6.xyz = v_23;
  vec3 tmpvar_24;
  tmpvar_24 = (_WorldSpaceLightPos0.xyz - (tmpvar_7.xyz * _WorldSpaceLightPos0.w));
  tmpvar_4.w = tmpvar_24.x;
  tmpvar_5.w = tmpvar_24.y;
  tmpvar_6.w = tmpvar_24.z;
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = texcoord_8;
  xlv_TEXCOORD1 = (tmpvar_7.xyz - _WorldSpaceCameraPos);
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  vec4 tmpvar_25;
  tmpvar_25 = (_Object2World * gl_Vertex);
  xlv_TEXCOORD5 = (_LightMatrix0 * tmpvar_25).xyz;
  xlv_TEXCOORD6 = (tmpvar_25.xyz - _LightPositionRange.xyz);
}


#endif
#ifdef FRAGMENT
uniform vec4 _LightPositionRange;
uniform vec4 _LightShadowData;
uniform vec4 unity_ColorSpaceDielectricSpec;
uniform vec4 unity_ColorSpaceLuminance;
uniform vec4 _LightColor0;
uniform vec4 _Color;
uniform sampler2D _MainTex;
uniform float _Metallic;
uniform float _Glossiness;
uniform samplerCube _ShadowMapTexture;
uniform sampler2D _LightTexture0;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec3 xlv_TEXCOORD5;
varying vec3 xlv_TEXCOORD6;
void main ()
{
  vec3 tmpvar_1;
  tmpvar_1 = (_Color.xyz * texture2D (_MainTex, xlv_TEXCOORD0.xy).xyz);
  vec3 tmpvar_2;
  vec3 tmpvar_3;
  tmpvar_3 = mix (unity_ColorSpaceDielectricSpec.xyz, tmpvar_1, vec3(_Metallic));
  tmpvar_2 = (tmpvar_1 * (unity_ColorSpaceDielectricSpec.w - (_Metallic * unity_ColorSpaceDielectricSpec.w)));
  vec3 tmpvar_4;
  tmpvar_4 = normalize(xlv_TEXCOORD2_2.xyz);
  vec3 tmpvar_5;
  tmpvar_5 = normalize(xlv_TEXCOORD1);
  vec3 tmpvar_6;
  tmpvar_6.x = xlv_TEXCOORD2.w;
  tmpvar_6.y = xlv_TEXCOORD2_1.w;
  tmpvar_6.z = xlv_TEXCOORD2_2.w;
  vec4 tmpvar_7;
  tmpvar_7 = texture2D (_LightTexture0, vec2(dot (xlv_TEXCOORD5, xlv_TEXCOORD5)));
  float mydist_8;
  mydist_8 = ((sqrt(
    dot (xlv_TEXCOORD6, xlv_TEXCOORD6)
  ) * _LightPositionRange.w) * 0.97);
  vec4 tmpvar_9;
  tmpvar_9 = textureCube (_ShadowMapTexture, xlv_TEXCOORD6);
  float tmpvar_10;
  if ((tmpvar_9.x < mydist_8)) {
    tmpvar_10 = _LightShadowData.x;
  } else {
    tmpvar_10 = 1.0;
  };
  vec3 tmpvar_11;
  vec3 tmpvar_12;
  tmpvar_12 = normalize(tmpvar_6);
  tmpvar_11 = (_LightColor0.xyz * (tmpvar_7.w * tmpvar_10));
  vec3 viewDir_13;
  viewDir_13 = -(tmpvar_5);
  float specularTerm_14;
  float tmpvar_15;
  tmpvar_15 = (1.0 - _Glossiness);
  vec3 tmpvar_16;
  vec3 inVec_17;
  inVec_17 = (tmpvar_12 + viewDir_13);
  tmpvar_16 = (inVec_17 * inversesqrt(max (0.001, 
    dot (inVec_17, inVec_17)
  )));
  float tmpvar_18;
  tmpvar_18 = dot (tmpvar_4, viewDir_13);
  vec3 tmpvar_19;
  if ((tmpvar_18 < 0.0)) {
    tmpvar_19 = (tmpvar_4 + (viewDir_13 * (
      -(tmpvar_18)
     + 1e-05)));
  } else {
    tmpvar_19 = tmpvar_4;
  };
  float tmpvar_20;
  tmpvar_20 = max (0.0, dot (tmpvar_19, tmpvar_12));
  float tmpvar_21;
  tmpvar_21 = max (0.0, dot (tmpvar_19, tmpvar_16));
  float tmpvar_22;
  tmpvar_22 = max (0.0, dot (tmpvar_19, viewDir_13));
  float tmpvar_23;
  tmpvar_23 = max (0.0, dot (tmpvar_12, tmpvar_16));
  float tmpvar_24;
  tmpvar_24 = (tmpvar_15 * tmpvar_15);
  float tmpvar_25;
  tmpvar_25 = (tmpvar_15 * tmpvar_15);
  float tmpvar_26;
  tmpvar_26 = (tmpvar_25 * tmpvar_25);
  float tmpvar_27;
  tmpvar_27 = (((tmpvar_21 * tmpvar_21) * (tmpvar_26 - 1.0)) + 1.0);
  float x_28;
  x_28 = (1.0 - tmpvar_20);
  float x_29;
  x_29 = (1.0 - tmpvar_22);
  float tmpvar_30;
  tmpvar_30 = (0.5 + ((2.0 * tmpvar_23) * (tmpvar_23 * tmpvar_15)));
  float tmpvar_31;
  tmpvar_31 = ((1.0 + (
    (tmpvar_30 - 1.0)
   * 
    ((x_28 * x_28) * ((x_28 * x_28) * x_28))
  )) * (1.0 + (
    (tmpvar_30 - 1.0)
   * 
    ((x_29 * x_29) * ((x_29 * x_29) * x_29))
  )));
  float tmpvar_32;
  tmpvar_32 = (((2.0 / 
    (((tmpvar_20 * (
      (tmpvar_22 * (1.0 - tmpvar_24))
     + tmpvar_24)) + (tmpvar_22 * (
      (tmpvar_20 * (1.0 - tmpvar_24))
     + tmpvar_24))) + 1e-05)
  ) * (tmpvar_26 / 
    (((3.141593 * tmpvar_27) * tmpvar_27) + 1e-07)
  )) * 0.7853982);
  specularTerm_14 = tmpvar_32;
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    specularTerm_14 = sqrt(max (0.0001, tmpvar_32));
  };
  float tmpvar_33;
  tmpvar_33 = max (0.0, (specularTerm_14 * tmpvar_20));
  specularTerm_14 = tmpvar_33;
  float x_34;
  x_34 = (1.0 - tmpvar_23);
  vec4 tmpvar_35;
  tmpvar_35.w = 1.0;
  tmpvar_35.xyz = ((tmpvar_2 * (tmpvar_11 * 
    (tmpvar_31 * tmpvar_20)
  )) + ((tmpvar_33 * tmpvar_11) * (tmpvar_3 + 
    ((1.0 - tmpvar_3) * ((x_34 * x_34) * ((x_34 * x_34) * x_34)))
  )));
  vec4 xlat_varoutput_36;
  xlat_varoutput_36.xyz = tmpvar_35.xyz;
  xlat_varoutput_36.w = 1.0;
  gl_FragData[0] = xlat_varoutput_36;
}


#endif
"
}
SubProgram "d3d9 " {
// Stats: 42 math
Keywords { "POINT" "SHADOWS_CUBE" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
Matrix 11 [_LightMatrix0] 3
Matrix 4 [_Object2World]
Matrix 8 [_World2Object] 3
Matrix 0 [glstate_matrix_mvp]
Vector 19 [_DetailAlbedoMap_ST]
Vector 16 [_LightPositionRange]
Vector 18 [_MainTex_ST]
Float 20 [_UVSec]
Vector 14 [_WorldSpaceCameraPos]
Vector 15 [_WorldSpaceLightPos0]
Vector 17 [unity_WorldTransformParams]
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   row_major float4x4 _LightMatrix0;
//   float4 _LightPositionRange;
//   float4 _MainTex_ST;
//   row_major float4x4 _Object2World;
//   float _UVSec;
//   row_major float4x4 _World2Object;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 glstate_matrix_mvp;
//   float4 unity_WorldTransformParams;
//
//
// Registers:
//
//   Name                       Reg   Size
//   -------------------------- ----- ----
//   glstate_matrix_mvp         c0       4
//   _Object2World              c4       4
//   _World2Object              c8       3
//   _LightMatrix0              c11      3
//   _WorldSpaceCameraPos       c14      1
//   _WorldSpaceLightPos0       c15      1
//   _LightPositionRange        c16      1
//   unity_WorldTransformParams c17      1
//   _MainTex_ST                c18      1
//   _DetailAlbedoMap_ST        c19      1
//   _UVSec                     c20      1
//

    vs_3_0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_tangent v4
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6.xyz
    dcl_texcoord6 o7.xyz
    dp4 o0.x, c0, v0
    dp4 o0.y, c1, v0
    dp4 o0.z, c2, v0
    dp4 o0.w, c3, v0
    mad o1.xy, v2, c18, c18.zwzw
    abs r0.x, c20.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c19.xyxy, c19
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add o2.xyz, r0, -c14
    mul r1.xyz, c9, v1.y
    mad r1.xyz, c8, v1.x, r1
    mad r1.xyz, c10, v1.z, r1
    nrm r2.xyz, r1
    dp3 r1.x, c4, v4
    dp3 r1.y, c5, v4
    dp3 r1.z, c6, v4
    nrm r3.xyz, r1
    mul r1.xyz, r2.zxyw, r3.yzxw
    mad r1.xyz, r2.yzxw, r3.zxyw, -r1
    mov o5.xyz, r2
    mov o3.xyz, r3
    mul r1.w, c17.w, v4.w
    mul o4.xyz, r1.w, r1
    dp4 r0.w, c7, v0
    dp4 o6.x, c11, r0
    dp4 o6.y, c12, r0
    dp4 o6.z, c13, r0
    add o7.xyz, r0, -c16
    mad r0.xyz, r0, -c15.w, c15
    mov o3.w, r0.x
    mov o4.w, r0.y
    mov o5.w, r0.z

// approximately 41 instruction slots used
"
}
SubProgram "d3d11 " {
// Stats: 46 math
Keywords { "POINT" "SHADOWS_CUBE" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
ConstBuffer "$Globals" 304
Matrix 240 [_LightMatrix0]
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
Vector 16 [_LightPositionRange]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
Vector 336 [unity_WorldTransformParams]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer cb0[19], immediateIndexed
      dcl_constantbuffer cb1[5], immediateIndexed
      dcl_constantbuffer cb2[2], immediateIndexed
      dcl_constantbuffer cb3[22], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyz
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: mad o0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   4: eq r0.x, cb0[13].z, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[11].xxxy, cb0[11].zzzw
   7: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  13: mul r1.xyz, v4.yyyy, cb3[13].xyzx
  14: mad r1.xyz, cb3[12].xyzx, v4.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[14].xyzx, v4.zzzz, r1.xyzx
  16: dp3 r0.w, r1.xyzx, r1.xyzx
  17: rsq r0.w, r0.w
  18: mul r1.xyz, r0.wwww, r1.xyzx
  19: mov o3.xyz, r1.xyzx
  20: mad r2.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  21: add o7.xyz, r0.xyzx, -cb2[1].xyzx
  22: mov o3.w, r2.x
  23: mul r0.x, v1.x, cb3[16].x
  24: mul r0.y, v1.x, cb3[17].x
  25: mul r0.z, v1.x, cb3[18].x
  26: mul r3.x, v1.y, cb3[16].y
  27: mul r3.y, v1.y, cb3[17].y
  28: mul r3.z, v1.y, cb3[18].y
  29: add r0.xyz, r0.xyzx, r3.xyzx
  30: mul r3.x, v1.z, cb3[16].z
  31: mul r3.y, v1.z, cb3[17].z
  32: mul r3.z, v1.z, cb3[18].z
  33: add r0.xyz, r0.xyzx, r3.xyzx
  34: dp3 r0.w, r0.xyzx, r0.xyzx
  35: rsq r0.w, r0.w
  36: mul r0.xyz, r0.wwww, r0.xyzx
  37: mul r3.xyz, r1.yzxy, r0.zxyz
  38: mad r1.xyz, r0.yzxy, r1.zxyz, -r3.xyzx
  39: mov o5.xyz, r0.xyzx
  40: mul r0.x, v4.w, cb3[21].w
  41: mul o4.xyz, r0.xxxx, r1.xyzx
  42: mov o4.w, r2.y
  43: mov o5.w, r2.z
  44: mul r0.xyzw, v0.yyyy, cb3[13].xyzw
  45: mad r0.xyzw, cb3[12].xyzw, v0.xxxx, r0.xyzw
  46: mad r0.xyzw, cb3[14].xyzw, v0.zzzz, r0.xyzw
  47: mad r0.xyzw, cb3[15].xyzw, v0.wwww, r0.xyzw
  48: mul r1.xyz, r0.yyyy, cb0[16].xyzx
  49: mad r1.xyz, cb0[15].xyzx, r0.xxxx, r1.xyzx
  50: mad r0.xyz, cb0[17].xyzx, r0.zzzz, r1.xyzx
  51: mad o6.xyz, cb0[18].xyzx, r0.wwww, r0.xyzx
  52: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
// Stats: 105 math, 4 textures, 3 branches
Keywords { "POINT_COOKIE" "SHADOWS_CUBE" }
"#version 120

#ifdef VERTEX
uniform vec3 _WorldSpaceCameraPos;
uniform vec4 _WorldSpaceLightPos0;
uniform vec4 _LightPositionRange;

uniform mat4 _Object2World;
uniform mat4 _World2Object;
uniform vec4 unity_WorldTransformParams;
uniform vec4 _MainTex_ST;
uniform vec4 _DetailAlbedoMap_ST;
uniform float _UVSec;
uniform mat4 _LightMatrix0;
attribute vec4 TANGENT;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec3 xlv_TEXCOORD5;
varying vec3 xlv_TEXCOORD6;
void main ()
{
  vec2 tmpvar_1;
  tmpvar_1 = gl_MultiTexCoord0.xy;
  vec2 tmpvar_2;
  tmpvar_2 = gl_MultiTexCoord1.xy;
  vec4 tmpvar_3;
  vec4 tmpvar_4;
  vec4 tmpvar_5;
  vec4 tmpvar_6;
  vec4 tmpvar_7;
  tmpvar_7 = (_Object2World * gl_Vertex);
  tmpvar_3 = (gl_ModelViewProjectionMatrix * gl_Vertex);
  vec4 texcoord_8;
  texcoord_8.xy = ((gl_MultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  vec2 tmpvar_9;
  if ((_UVSec == 0.0)) {
    tmpvar_9 = tmpvar_1;
  } else {
    tmpvar_9 = tmpvar_2;
  };
  texcoord_8.zw = ((tmpvar_9 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  vec4 v_10;
  v_10.x = _World2Object[0].x;
  v_10.y = _World2Object[1].x;
  v_10.z = _World2Object[2].x;
  v_10.w = _World2Object[3].x;
  vec4 v_11;
  v_11.x = _World2Object[0].y;
  v_11.y = _World2Object[1].y;
  v_11.z = _World2Object[2].y;
  v_11.w = _World2Object[3].y;
  vec4 v_12;
  v_12.x = _World2Object[0].z;
  v_12.y = _World2Object[1].z;
  v_12.z = _World2Object[2].z;
  v_12.w = _World2Object[3].z;
  vec3 tmpvar_13;
  tmpvar_13 = normalize(((
    (v_10.xyz * gl_Normal.x)
   + 
    (v_11.xyz * gl_Normal.y)
  ) + (v_12.xyz * gl_Normal.z)));
  mat3 tmpvar_14;
  tmpvar_14[0] = _Object2World[0].xyz;
  tmpvar_14[1] = _Object2World[1].xyz;
  tmpvar_14[2] = _Object2World[2].xyz;
  vec4 tmpvar_15;
  tmpvar_15.xyz = normalize((tmpvar_14 * TANGENT.xyz));
  tmpvar_15.w = TANGENT.w;
  vec3 tmpvar_16;
  vec3 tmpvar_17;
  tmpvar_16 = tmpvar_15.xyz;
  tmpvar_17 = (((tmpvar_13.yzx * tmpvar_15.zxy) - (tmpvar_13.zxy * tmpvar_15.yzx)) * (TANGENT.w * unity_WorldTransformParams.w));
  vec3 tmpvar_18;
  vec3 tmpvar_19;
  vec3 tmpvar_20;
  tmpvar_18.x = tmpvar_16.x;
  tmpvar_18.y = tmpvar_17.x;
  tmpvar_18.z = tmpvar_13.x;
  tmpvar_19.x = tmpvar_16.y;
  tmpvar_19.y = tmpvar_17.y;
  tmpvar_19.z = tmpvar_13.y;
  tmpvar_20.x = tmpvar_16.z;
  tmpvar_20.y = tmpvar_17.z;
  tmpvar_20.z = tmpvar_13.z;
  vec3 v_21;
  v_21.x = tmpvar_18.x;
  v_21.y = tmpvar_19.x;
  v_21.z = tmpvar_20.x;
  tmpvar_4.xyz = v_21;
  vec3 v_22;
  v_22.x = tmpvar_18.y;
  v_22.y = tmpvar_19.y;
  v_22.z = tmpvar_20.y;
  tmpvar_5.xyz = v_22;
  vec3 v_23;
  v_23.x = tmpvar_18.z;
  v_23.y = tmpvar_19.z;
  v_23.z = tmpvar_20.z;
  tmpvar_6.xyz = v_23;
  vec3 tmpvar_24;
  tmpvar_24 = (_WorldSpaceLightPos0.xyz - (tmpvar_7.xyz * _WorldSpaceLightPos0.w));
  tmpvar_4.w = tmpvar_24.x;
  tmpvar_5.w = tmpvar_24.y;
  tmpvar_6.w = tmpvar_24.z;
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = texcoord_8;
  xlv_TEXCOORD1 = (tmpvar_7.xyz - _WorldSpaceCameraPos);
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  vec4 tmpvar_25;
  tmpvar_25 = (_Object2World * gl_Vertex);
  xlv_TEXCOORD5 = (_LightMatrix0 * tmpvar_25).xyz;
  xlv_TEXCOORD6 = (tmpvar_25.xyz - _LightPositionRange.xyz);
}


#endif
#ifdef FRAGMENT
uniform vec4 _LightPositionRange;
uniform vec4 _LightShadowData;
uniform vec4 unity_ColorSpaceDielectricSpec;
uniform vec4 unity_ColorSpaceLuminance;
uniform vec4 _LightColor0;
uniform vec4 _Color;
uniform sampler2D _MainTex;
uniform float _Metallic;
uniform float _Glossiness;
uniform samplerCube _ShadowMapTexture;
uniform samplerCube _LightTexture0;
uniform sampler2D _LightTextureB0;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec3 xlv_TEXCOORD5;
varying vec3 xlv_TEXCOORD6;
void main ()
{
  vec3 tmpvar_1;
  tmpvar_1 = (_Color.xyz * texture2D (_MainTex, xlv_TEXCOORD0.xy).xyz);
  vec3 tmpvar_2;
  vec3 tmpvar_3;
  tmpvar_3 = mix (unity_ColorSpaceDielectricSpec.xyz, tmpvar_1, vec3(_Metallic));
  tmpvar_2 = (tmpvar_1 * (unity_ColorSpaceDielectricSpec.w - (_Metallic * unity_ColorSpaceDielectricSpec.w)));
  vec3 tmpvar_4;
  tmpvar_4 = normalize(xlv_TEXCOORD2_2.xyz);
  vec3 tmpvar_5;
  tmpvar_5 = normalize(xlv_TEXCOORD1);
  vec3 tmpvar_6;
  tmpvar_6.x = xlv_TEXCOORD2.w;
  tmpvar_6.y = xlv_TEXCOORD2_1.w;
  tmpvar_6.z = xlv_TEXCOORD2_2.w;
  vec4 tmpvar_7;
  tmpvar_7 = texture2D (_LightTextureB0, vec2(dot (xlv_TEXCOORD5, xlv_TEXCOORD5)));
  vec4 tmpvar_8;
  tmpvar_8 = textureCube (_LightTexture0, xlv_TEXCOORD5);
  float mydist_9;
  mydist_9 = ((sqrt(
    dot (xlv_TEXCOORD6, xlv_TEXCOORD6)
  ) * _LightPositionRange.w) * 0.97);
  vec4 tmpvar_10;
  tmpvar_10 = textureCube (_ShadowMapTexture, xlv_TEXCOORD6);
  float tmpvar_11;
  if ((tmpvar_10.x < mydist_9)) {
    tmpvar_11 = _LightShadowData.x;
  } else {
    tmpvar_11 = 1.0;
  };
  vec3 tmpvar_12;
  vec3 tmpvar_13;
  tmpvar_13 = normalize(tmpvar_6);
  tmpvar_12 = (_LightColor0.xyz * ((tmpvar_7.w * tmpvar_8.w) * tmpvar_11));
  vec3 viewDir_14;
  viewDir_14 = -(tmpvar_5);
  float specularTerm_15;
  float tmpvar_16;
  tmpvar_16 = (1.0 - _Glossiness);
  vec3 tmpvar_17;
  vec3 inVec_18;
  inVec_18 = (tmpvar_13 + viewDir_14);
  tmpvar_17 = (inVec_18 * inversesqrt(max (0.001, 
    dot (inVec_18, inVec_18)
  )));
  float tmpvar_19;
  tmpvar_19 = dot (tmpvar_4, viewDir_14);
  vec3 tmpvar_20;
  if ((tmpvar_19 < 0.0)) {
    tmpvar_20 = (tmpvar_4 + (viewDir_14 * (
      -(tmpvar_19)
     + 1e-05)));
  } else {
    tmpvar_20 = tmpvar_4;
  };
  float tmpvar_21;
  tmpvar_21 = max (0.0, dot (tmpvar_20, tmpvar_13));
  float tmpvar_22;
  tmpvar_22 = max (0.0, dot (tmpvar_20, tmpvar_17));
  float tmpvar_23;
  tmpvar_23 = max (0.0, dot (tmpvar_20, viewDir_14));
  float tmpvar_24;
  tmpvar_24 = max (0.0, dot (tmpvar_13, tmpvar_17));
  float tmpvar_25;
  tmpvar_25 = (tmpvar_16 * tmpvar_16);
  float tmpvar_26;
  tmpvar_26 = (tmpvar_16 * tmpvar_16);
  float tmpvar_27;
  tmpvar_27 = (tmpvar_26 * tmpvar_26);
  float tmpvar_28;
  tmpvar_28 = (((tmpvar_22 * tmpvar_22) * (tmpvar_27 - 1.0)) + 1.0);
  float x_29;
  x_29 = (1.0 - tmpvar_21);
  float x_30;
  x_30 = (1.0 - tmpvar_23);
  float tmpvar_31;
  tmpvar_31 = (0.5 + ((2.0 * tmpvar_24) * (tmpvar_24 * tmpvar_16)));
  float tmpvar_32;
  tmpvar_32 = ((1.0 + (
    (tmpvar_31 - 1.0)
   * 
    ((x_29 * x_29) * ((x_29 * x_29) * x_29))
  )) * (1.0 + (
    (tmpvar_31 - 1.0)
   * 
    ((x_30 * x_30) * ((x_30 * x_30) * x_30))
  )));
  float tmpvar_33;
  tmpvar_33 = (((2.0 / 
    (((tmpvar_21 * (
      (tmpvar_23 * (1.0 - tmpvar_25))
     + tmpvar_25)) + (tmpvar_23 * (
      (tmpvar_21 * (1.0 - tmpvar_25))
     + tmpvar_25))) + 1e-05)
  ) * (tmpvar_27 / 
    (((3.141593 * tmpvar_28) * tmpvar_28) + 1e-07)
  )) * 0.7853982);
  specularTerm_15 = tmpvar_33;
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    specularTerm_15 = sqrt(max (0.0001, tmpvar_33));
  };
  float tmpvar_34;
  tmpvar_34 = max (0.0, (specularTerm_15 * tmpvar_21));
  specularTerm_15 = tmpvar_34;
  float x_35;
  x_35 = (1.0 - tmpvar_24);
  vec4 tmpvar_36;
  tmpvar_36.w = 1.0;
  tmpvar_36.xyz = ((tmpvar_2 * (tmpvar_12 * 
    (tmpvar_32 * tmpvar_21)
  )) + ((tmpvar_34 * tmpvar_12) * (tmpvar_3 + 
    ((1.0 - tmpvar_3) * ((x_35 * x_35) * ((x_35 * x_35) * x_35)))
  )));
  vec4 xlat_varoutput_37;
  xlat_varoutput_37.xyz = tmpvar_36.xyz;
  xlat_varoutput_37.w = 1.0;
  gl_FragData[0] = xlat_varoutput_37;
}


#endif
"
}
SubProgram "d3d9 " {
// Stats: 42 math
Keywords { "POINT_COOKIE" "SHADOWS_CUBE" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
Matrix 11 [_LightMatrix0] 3
Matrix 4 [_Object2World]
Matrix 8 [_World2Object] 3
Matrix 0 [glstate_matrix_mvp]
Vector 19 [_DetailAlbedoMap_ST]
Vector 16 [_LightPositionRange]
Vector 18 [_MainTex_ST]
Float 20 [_UVSec]
Vector 14 [_WorldSpaceCameraPos]
Vector 15 [_WorldSpaceLightPos0]
Vector 17 [unity_WorldTransformParams]
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   row_major float4x4 _LightMatrix0;
//   float4 _LightPositionRange;
//   float4 _MainTex_ST;
//   row_major float4x4 _Object2World;
//   float _UVSec;
//   row_major float4x4 _World2Object;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 glstate_matrix_mvp;
//   float4 unity_WorldTransformParams;
//
//
// Registers:
//
//   Name                       Reg   Size
//   -------------------------- ----- ----
//   glstate_matrix_mvp         c0       4
//   _Object2World              c4       4
//   _World2Object              c8       3
//   _LightMatrix0              c11      3
//   _WorldSpaceCameraPos       c14      1
//   _WorldSpaceLightPos0       c15      1
//   _LightPositionRange        c16      1
//   unity_WorldTransformParams c17      1
//   _MainTex_ST                c18      1
//   _DetailAlbedoMap_ST        c19      1
//   _UVSec                     c20      1
//

    vs_3_0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_tangent v4
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6.xyz
    dcl_texcoord6 o7.xyz
    dp4 o0.x, c0, v0
    dp4 o0.y, c1, v0
    dp4 o0.z, c2, v0
    dp4 o0.w, c3, v0
    mad o1.xy, v2, c18, c18.zwzw
    abs r0.x, c20.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c19.xyxy, c19
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add o2.xyz, r0, -c14
    mul r1.xyz, c9, v1.y
    mad r1.xyz, c8, v1.x, r1
    mad r1.xyz, c10, v1.z, r1
    nrm r2.xyz, r1
    dp3 r1.x, c4, v4
    dp3 r1.y, c5, v4
    dp3 r1.z, c6, v4
    nrm r3.xyz, r1
    mul r1.xyz, r2.zxyw, r3.yzxw
    mad r1.xyz, r2.yzxw, r3.zxyw, -r1
    mov o5.xyz, r2
    mov o3.xyz, r3
    mul r1.w, c17.w, v4.w
    mul o4.xyz, r1.w, r1
    dp4 r0.w, c7, v0
    dp4 o6.x, c11, r0
    dp4 o6.y, c12, r0
    dp4 o6.z, c13, r0
    add o7.xyz, r0, -c16
    mad r0.xyz, r0, -c15.w, c15
    mov o3.w, r0.x
    mov o4.w, r0.y
    mov o5.w, r0.z

// approximately 41 instruction slots used
"
}
SubProgram "d3d11 " {
// Stats: 46 math
Keywords { "POINT_COOKIE" "SHADOWS_CUBE" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
ConstBuffer "$Globals" 304
Matrix 240 [_LightMatrix0]
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
Vector 16 [_LightPositionRange]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
Vector 336 [unity_WorldTransformParams]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer cb0[19], immediateIndexed
      dcl_constantbuffer cb1[5], immediateIndexed
      dcl_constantbuffer cb2[2], immediateIndexed
      dcl_constantbuffer cb3[22], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyz
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: mad o0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   4: eq r0.x, cb0[13].z, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[11].xxxy, cb0[11].zzzw
   7: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  13: mul r1.xyz, v4.yyyy, cb3[13].xyzx
  14: mad r1.xyz, cb3[12].xyzx, v4.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[14].xyzx, v4.zzzz, r1.xyzx
  16: dp3 r0.w, r1.xyzx, r1.xyzx
  17: rsq r0.w, r0.w
  18: mul r1.xyz, r0.wwww, r1.xyzx
  19: mov o3.xyz, r1.xyzx
  20: mad r2.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  21: add o7.xyz, r0.xyzx, -cb2[1].xyzx
  22: mov o3.w, r2.x
  23: mul r0.x, v1.x, cb3[16].x
  24: mul r0.y, v1.x, cb3[17].x
  25: mul r0.z, v1.x, cb3[18].x
  26: mul r3.x, v1.y, cb3[16].y
  27: mul r3.y, v1.y, cb3[17].y
  28: mul r3.z, v1.y, cb3[18].y
  29: add r0.xyz, r0.xyzx, r3.xyzx
  30: mul r3.x, v1.z, cb3[16].z
  31: mul r3.y, v1.z, cb3[17].z
  32: mul r3.z, v1.z, cb3[18].z
  33: add r0.xyz, r0.xyzx, r3.xyzx
  34: dp3 r0.w, r0.xyzx, r0.xyzx
  35: rsq r0.w, r0.w
  36: mul r0.xyz, r0.wwww, r0.xyzx
  37: mul r3.xyz, r1.yzxy, r0.zxyz
  38: mad r1.xyz, r0.yzxy, r1.zxyz, -r3.xyzx
  39: mov o5.xyz, r0.xyzx
  40: mul r0.x, v4.w, cb3[21].w
  41: mul o4.xyz, r0.xxxx, r1.xyzx
  42: mov o4.w, r2.y
  43: mov o5.w, r2.z
  44: mul r0.xyzw, v0.yyyy, cb3[13].xyzw
  45: mad r0.xyzw, cb3[12].xyzw, v0.xxxx, r0.xyzw
  46: mad r0.xyzw, cb3[14].xyzw, v0.zzzz, r0.xyzw
  47: mad r0.xyzw, cb3[15].xyzw, v0.wwww, r0.xyzw
  48: mul r1.xyz, r0.yyyy, cb0[16].xyzx
  49: mad r1.xyz, cb0[15].xyzx, r0.xxxx, r1.xyzx
  50: mad r0.xyz, cb0[17].xyzx, r0.zzzz, r1.xyzx
  51: mad o6.xyz, cb0[18].xyzx, r0.wwww, r0.xyzx
  52: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
// Stats: 113 math, 7 textures, 2 branches
Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" "SHADOWS_NATIVE" }
"#version 120

#ifdef VERTEX
uniform vec3 _WorldSpaceCameraPos;
uniform vec4 _WorldSpaceLightPos0;
uniform mat4 unity_World2Shadow[4];

uniform mat4 _Object2World;
uniform mat4 _World2Object;
uniform vec4 unity_WorldTransformParams;
uniform vec4 _MainTex_ST;
uniform vec4 _DetailAlbedoMap_ST;
uniform float _UVSec;
uniform mat4 _LightMatrix0;
attribute vec4 TANGENT;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
varying vec4 xlv_TEXCOORD6;
void main ()
{
  vec2 tmpvar_1;
  tmpvar_1 = gl_MultiTexCoord0.xy;
  vec2 tmpvar_2;
  tmpvar_2 = gl_MultiTexCoord1.xy;
  vec4 tmpvar_3;
  vec4 tmpvar_4;
  vec4 tmpvar_5;
  vec4 tmpvar_6;
  vec4 tmpvar_7;
  tmpvar_7 = (_Object2World * gl_Vertex);
  tmpvar_3 = (gl_ModelViewProjectionMatrix * gl_Vertex);
  vec4 texcoord_8;
  texcoord_8.xy = ((gl_MultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  vec2 tmpvar_9;
  if ((_UVSec == 0.0)) {
    tmpvar_9 = tmpvar_1;
  } else {
    tmpvar_9 = tmpvar_2;
  };
  texcoord_8.zw = ((tmpvar_9 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  vec4 v_10;
  v_10.x = _World2Object[0].x;
  v_10.y = _World2Object[1].x;
  v_10.z = _World2Object[2].x;
  v_10.w = _World2Object[3].x;
  vec4 v_11;
  v_11.x = _World2Object[0].y;
  v_11.y = _World2Object[1].y;
  v_11.z = _World2Object[2].y;
  v_11.w = _World2Object[3].y;
  vec4 v_12;
  v_12.x = _World2Object[0].z;
  v_12.y = _World2Object[1].z;
  v_12.z = _World2Object[2].z;
  v_12.w = _World2Object[3].z;
  vec3 tmpvar_13;
  tmpvar_13 = normalize(((
    (v_10.xyz * gl_Normal.x)
   + 
    (v_11.xyz * gl_Normal.y)
  ) + (v_12.xyz * gl_Normal.z)));
  mat3 tmpvar_14;
  tmpvar_14[0] = _Object2World[0].xyz;
  tmpvar_14[1] = _Object2World[1].xyz;
  tmpvar_14[2] = _Object2World[2].xyz;
  vec4 tmpvar_15;
  tmpvar_15.xyz = normalize((tmpvar_14 * TANGENT.xyz));
  tmpvar_15.w = TANGENT.w;
  vec3 tmpvar_16;
  vec3 tmpvar_17;
  tmpvar_16 = tmpvar_15.xyz;
  tmpvar_17 = (((tmpvar_13.yzx * tmpvar_15.zxy) - (tmpvar_13.zxy * tmpvar_15.yzx)) * (TANGENT.w * unity_WorldTransformParams.w));
  vec3 tmpvar_18;
  vec3 tmpvar_19;
  vec3 tmpvar_20;
  tmpvar_18.x = tmpvar_16.x;
  tmpvar_18.y = tmpvar_17.x;
  tmpvar_18.z = tmpvar_13.x;
  tmpvar_19.x = tmpvar_16.y;
  tmpvar_19.y = tmpvar_17.y;
  tmpvar_19.z = tmpvar_13.y;
  tmpvar_20.x = tmpvar_16.z;
  tmpvar_20.y = tmpvar_17.z;
  tmpvar_20.z = tmpvar_13.z;
  vec3 v_21;
  v_21.x = tmpvar_18.x;
  v_21.y = tmpvar_19.x;
  v_21.z = tmpvar_20.x;
  tmpvar_4.xyz = v_21;
  vec3 v_22;
  v_22.x = tmpvar_18.y;
  v_22.y = tmpvar_19.y;
  v_22.z = tmpvar_20.y;
  tmpvar_5.xyz = v_22;
  vec3 v_23;
  v_23.x = tmpvar_18.z;
  v_23.y = tmpvar_19.z;
  v_23.z = tmpvar_20.z;
  tmpvar_6.xyz = v_23;
  vec3 tmpvar_24;
  tmpvar_24 = (_WorldSpaceLightPos0.xyz - (tmpvar_7.xyz * _WorldSpaceLightPos0.w));
  tmpvar_4.w = tmpvar_24.x;
  tmpvar_5.w = tmpvar_24.y;
  tmpvar_6.w = tmpvar_24.z;
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = texcoord_8;
  xlv_TEXCOORD1 = (tmpvar_7.xyz - _WorldSpaceCameraPos);
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  vec4 tmpvar_25;
  tmpvar_25 = (_Object2World * gl_Vertex);
  xlv_TEXCOORD5 = (_LightMatrix0 * tmpvar_25);
  xlv_TEXCOORD6 = (unity_World2Shadow[0] * tmpvar_25);
}


#endif
#ifdef FRAGMENT
uniform vec4 _LightShadowData;
uniform vec4 unity_ColorSpaceDielectricSpec;
uniform vec4 unity_ColorSpaceLuminance;
uniform vec4 _LightColor0;
uniform vec4 _Color;
uniform sampler2D _MainTex;
uniform float _Metallic;
uniform float _Glossiness;
uniform sampler2DShadow _ShadowMapTexture;
uniform vec4 _ShadowOffsets[4];
uniform sampler2D _LightTexture0;
uniform sampler2D _LightTextureB0;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
varying vec4 xlv_TEXCOORD6;
void main ()
{
  vec3 tmpvar_1;
  tmpvar_1 = (_Color.xyz * texture2D (_MainTex, xlv_TEXCOORD0.xy).xyz);
  vec3 tmpvar_2;
  vec3 tmpvar_3;
  tmpvar_3 = mix (unity_ColorSpaceDielectricSpec.xyz, tmpvar_1, vec3(_Metallic));
  tmpvar_2 = (tmpvar_1 * (unity_ColorSpaceDielectricSpec.w - (_Metallic * unity_ColorSpaceDielectricSpec.w)));
  vec3 tmpvar_4;
  tmpvar_4 = normalize(xlv_TEXCOORD2_2.xyz);
  vec3 tmpvar_5;
  tmpvar_5.x = xlv_TEXCOORD2.w;
  tmpvar_5.y = xlv_TEXCOORD2_1.w;
  tmpvar_5.z = xlv_TEXCOORD2_2.w;
  vec4 shadows_6;
  vec3 tmpvar_7;
  tmpvar_7 = (xlv_TEXCOORD6.xyz / xlv_TEXCOORD6.w);
  shadows_6.x = shadow2D (_ShadowMapTexture, (tmpvar_7 + _ShadowOffsets[0].xyz)).x;
  shadows_6.y = shadow2D (_ShadowMapTexture, (tmpvar_7 + _ShadowOffsets[1].xyz)).x;
  shadows_6.z = shadow2D (_ShadowMapTexture, (tmpvar_7 + _ShadowOffsets[2].xyz)).x;
  shadows_6.w = shadow2D (_ShadowMapTexture, (tmpvar_7 + _ShadowOffsets[3].xyz)).x;
  shadows_6 = (_LightShadowData.xxxx + (shadows_6 * (1.0 - _LightShadowData.xxxx)));
  vec3 tmpvar_8;
  vec3 tmpvar_9;
  tmpvar_9 = normalize(tmpvar_5);
  tmpvar_8 = (_LightColor0.xyz * ((
    (float((xlv_TEXCOORD5.z > 0.0)) * texture2D (_LightTexture0, ((xlv_TEXCOORD5.xy / xlv_TEXCOORD5.w) + 0.5)).w)
   * texture2D (_LightTextureB0, vec2(
    dot (xlv_TEXCOORD5.xyz, xlv_TEXCOORD5.xyz)
  )).w) * dot (shadows_6, vec4(0.25, 0.25, 0.25, 0.25))));
  vec3 viewDir_10;
  viewDir_10 = -(normalize(xlv_TEXCOORD1));
  float specularTerm_11;
  float tmpvar_12;
  tmpvar_12 = (1.0 - _Glossiness);
  vec3 tmpvar_13;
  vec3 inVec_14;
  inVec_14 = (tmpvar_9 + viewDir_10);
  tmpvar_13 = (inVec_14 * inversesqrt(max (0.001, 
    dot (inVec_14, inVec_14)
  )));
  float tmpvar_15;
  tmpvar_15 = dot (tmpvar_4, viewDir_10);
  vec3 tmpvar_16;
  if ((tmpvar_15 < 0.0)) {
    tmpvar_16 = (tmpvar_4 + (viewDir_10 * (
      -(tmpvar_15)
     + 1e-05)));
  } else {
    tmpvar_16 = tmpvar_4;
  };
  float tmpvar_17;
  tmpvar_17 = max (0.0, dot (tmpvar_16, tmpvar_9));
  float tmpvar_18;
  tmpvar_18 = max (0.0, dot (tmpvar_16, tmpvar_13));
  float tmpvar_19;
  tmpvar_19 = max (0.0, dot (tmpvar_16, viewDir_10));
  float tmpvar_20;
  tmpvar_20 = max (0.0, dot (tmpvar_9, tmpvar_13));
  float tmpvar_21;
  tmpvar_21 = (tmpvar_12 * tmpvar_12);
  float tmpvar_22;
  tmpvar_22 = (tmpvar_12 * tmpvar_12);
  float tmpvar_23;
  tmpvar_23 = (tmpvar_22 * tmpvar_22);
  float tmpvar_24;
  tmpvar_24 = (((tmpvar_18 * tmpvar_18) * (tmpvar_23 - 1.0)) + 1.0);
  float x_25;
  x_25 = (1.0 - tmpvar_17);
  float x_26;
  x_26 = (1.0 - tmpvar_19);
  float tmpvar_27;
  tmpvar_27 = (0.5 + ((2.0 * tmpvar_20) * (tmpvar_20 * tmpvar_12)));
  float tmpvar_28;
  tmpvar_28 = ((1.0 + (
    (tmpvar_27 - 1.0)
   * 
    ((x_25 * x_25) * ((x_25 * x_25) * x_25))
  )) * (1.0 + (
    (tmpvar_27 - 1.0)
   * 
    ((x_26 * x_26) * ((x_26 * x_26) * x_26))
  )));
  float tmpvar_29;
  tmpvar_29 = (((2.0 / 
    (((tmpvar_17 * (
      (tmpvar_19 * (1.0 - tmpvar_21))
     + tmpvar_21)) + (tmpvar_19 * (
      (tmpvar_17 * (1.0 - tmpvar_21))
     + tmpvar_21))) + 1e-05)
  ) * (tmpvar_23 / 
    (((3.141593 * tmpvar_24) * tmpvar_24) + 1e-07)
  )) * 0.7853982);
  specularTerm_11 = tmpvar_29;
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    specularTerm_11 = sqrt(max (0.0001, tmpvar_29));
  };
  float tmpvar_30;
  tmpvar_30 = max (0.0, (specularTerm_11 * tmpvar_17));
  specularTerm_11 = tmpvar_30;
  float x_31;
  x_31 = (1.0 - tmpvar_20);
  vec4 tmpvar_32;
  tmpvar_32.w = 1.0;
  tmpvar_32.xyz = ((tmpvar_2 * (tmpvar_8 * 
    (tmpvar_28 * tmpvar_17)
  )) + ((tmpvar_30 * tmpvar_8) * (tmpvar_3 + 
    ((1.0 - tmpvar_3) * ((x_31 * x_31) * ((x_31 * x_31) * x_31)))
  )));
  vec4 xlat_varoutput_33;
  xlat_varoutput_33.xyz = tmpvar_32.xyz;
  xlat_varoutput_33.w = 1.0;
  gl_FragData[0] = xlat_varoutput_33;
}


#endif
"
}
SubProgram "d3d9 " {
// Stats: 46 math
Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" "SHADOWS_NATIVE" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
Matrix 12 [_LightMatrix0]
Matrix 8 [_Object2World]
Matrix 16 [_World2Object] 3
Matrix 4 [glstate_matrix_mvp]
Matrix 0 [unity_World2Shadow0]
Vector 23 [_DetailAlbedoMap_ST]
Vector 22 [_MainTex_ST]
Float 24 [_UVSec]
Vector 19 [_WorldSpaceCameraPos]
Vector 20 [_WorldSpaceLightPos0]
Vector 21 [unity_WorldTransformParams]
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   row_major float4x4 _LightMatrix0;
//   float4 _MainTex_ST;
//   row_major float4x4 _Object2World;
//   float _UVSec;
//   row_major float4x4 _World2Object;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 glstate_matrix_mvp;
//   row_major float4x4 unity_World2Shadow[4];
//   float4 unity_WorldTransformParams;
//
//
// Registers:
//
//   Name                       Reg   Size
//   -------------------------- ----- ----
//   unity_World2Shadow         c0       4
//   glstate_matrix_mvp         c4       4
//   _Object2World              c8       4
//   _LightMatrix0              c12      4
//   _World2Object              c16      3
//   _WorldSpaceCameraPos       c19      1
//   _WorldSpaceLightPos0       c20      1
//   unity_WorldTransformParams c21      1
//   _MainTex_ST                c22      1
//   _DetailAlbedoMap_ST        c23      1
//   _UVSec                     c24      1
//

    vs_3_0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_tangent v4
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6
    dcl_texcoord6 o7
    dp4 o0.x, c4, v0
    dp4 o0.y, c5, v0
    dp4 o0.z, c6, v0
    dp4 o0.w, c7, v0
    mad o1.xy, v2, c22, c22.zwzw
    abs r0.x, c24.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c23.xyxy, c23
    dp4 r0.x, c8, v0
    dp4 r0.y, c9, v0
    dp4 r0.z, c10, v0
    add o2.xyz, r0, -c19
    mul r1.xyz, c17, v1.y
    mad r1.xyz, c16, v1.x, r1
    mad r1.xyz, c18, v1.z, r1
    nrm r2.xyz, r1
    dp3 r1.x, c8, v4
    dp3 r1.y, c9, v4
    dp3 r1.z, c10, v4
    nrm r3.xyz, r1
    mul r1.xyz, r2.zxyw, r3.yzxw
    mad r1.xyz, r2.yzxw, r3.zxyw, -r1
    mov o5.xyz, r2
    mov o3.xyz, r3
    mul r1.w, c21.w, v4.w
    mul o4.xyz, r1.w, r1
    dp4 r0.w, c11, v0
    dp4 o6.x, c12, r0
    dp4 o6.y, c13, r0
    dp4 o6.z, c14, r0
    dp4 o6.w, c15, r0
    dp4 o7.x, c0, r0
    dp4 o7.y, c1, r0
    dp4 o7.z, c2, r0
    dp4 o7.w, c3, r0
    mad r0.xyz, r0, -c20.w, c20
    mov o3.w, r0.x
    mov o4.w, r0.y
    mov o5.w, r0.z

// approximately 45 instruction slots used
"
}
SubProgram "d3d11 " {
// Stats: 49 math
Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" "SHADOWS_NATIVE" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
ConstBuffer "$Globals" 368
Matrix 304 [_LightMatrix0]
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
ConstBuffer "UnityShadows" 416
Matrix 128 [unity_World2Shadow0]
Matrix 192 [unity_World2Shadow1]
Matrix 256 [unity_World2Shadow2]
Matrix 320 [unity_World2Shadow3]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
Vector 336 [unity_WorldTransformParams]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityShadows" 3
BindCB  "UnityPerDraw" 4
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer cb0[23], immediateIndexed
      dcl_constantbuffer cb1[5], immediateIndexed
      dcl_constantbuffer cb2[1], immediateIndexed
      dcl_constantbuffer cb3[12], immediateIndexed
      dcl_constantbuffer cb4[22], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb4[1].xyzw
   1: mad r0.xyzw, cb4[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb4[2].xyzw, v0.zzzz, r0.xyzw
   3: mad o0.xyzw, cb4[3].xyzw, v0.wwww, r0.xyzw
   4: eq r0.x, cb0[13].z, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[11].xxxy, cb0[11].zzzw
   7: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   8: mul r0.xyz, v0.yyyy, cb4[13].xyzx
   9: mad r0.xyz, cb4[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb4[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb4[15].xyzx, v0.wwww, r0.xyzx
  12: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  13: mad r0.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  14: mov o3.w, r0.x
  15: mul r1.xyz, v4.yyyy, cb4[13].xyzx
  16: mad r1.xyz, cb4[12].xyzx, v4.xxxx, r1.xyzx
  17: mad r1.xyz, cb4[14].xyzx, v4.zzzz, r1.xyzx
  18: dp3 r0.x, r1.xyzx, r1.xyzx
  19: rsq r0.x, r0.x
  20: mul r1.xyz, r0.xxxx, r1.xyzx
  21: mov o3.xyz, r1.xyzx
  22: mul r2.x, v1.x, cb4[16].x
  23: mul r2.y, v1.x, cb4[17].x
  24: mul r2.z, v1.x, cb4[18].x
  25: mul r3.x, v1.y, cb4[16].y
  26: mul r3.y, v1.y, cb4[17].y
  27: mul r3.z, v1.y, cb4[18].y
  28: add r2.xyz, r2.xyzx, r3.xyzx
  29: mul r3.x, v1.z, cb4[16].z
  30: mul r3.y, v1.z, cb4[17].z
  31: mul r3.z, v1.z, cb4[18].z
  32: add r2.xyz, r2.xyzx, r3.xyzx
  33: dp3 r0.x, r2.xyzx, r2.xyzx
  34: rsq r0.x, r0.x
  35: mul r2.xyz, r0.xxxx, r2.xyzx
  36: mul r3.xyz, r1.yzxy, r2.zxyz
  37: mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
  38: mov o5.xyz, r2.xyzx
  39: mul r0.x, v4.w, cb4[21].w
  40: mul o4.xyz, r0.xxxx, r1.xyzx
  41: mov o4.w, r0.y
  42: mov o5.w, r0.z
  43: mul r0.xyzw, v0.yyyy, cb4[13].xyzw
  44: mad r0.xyzw, cb4[12].xyzw, v0.xxxx, r0.xyzw
  45: mad r0.xyzw, cb4[14].xyzw, v0.zzzz, r0.xyzw
  46: mad r0.xyzw, cb4[15].xyzw, v0.wwww, r0.xyzw
  47: mul r1.xyzw, r0.yyyy, cb0[20].xyzw
  48: mad r1.xyzw, cb0[19].xyzw, r0.xxxx, r1.xyzw
  49: mad r1.xyzw, cb0[21].xyzw, r0.zzzz, r1.xyzw
  50: mad o6.xyzw, cb0[22].xyzw, r0.wwww, r1.xyzw
  51: mul r1.xyzw, r0.yyyy, cb3[9].xyzw
  52: mad r1.xyzw, cb3[8].xyzw, r0.xxxx, r1.xyzw
  53: mad r1.xyzw, cb3[10].xyzw, r0.zzzz, r1.xyzw
  54: mad o7.xyzw, cb3[11].xyzw, r0.wwww, r1.xyzw
  55: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
// Stats: 112 math, 6 textures, 6 branches
Keywords { "POINT" "SHADOWS_CUBE" "SHADOWS_SOFT" }
"#version 120

#ifdef VERTEX
uniform vec3 _WorldSpaceCameraPos;
uniform vec4 _WorldSpaceLightPos0;
uniform vec4 _LightPositionRange;

uniform mat4 _Object2World;
uniform mat4 _World2Object;
uniform vec4 unity_WorldTransformParams;
uniform vec4 _MainTex_ST;
uniform vec4 _DetailAlbedoMap_ST;
uniform float _UVSec;
uniform mat4 _LightMatrix0;
attribute vec4 TANGENT;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec3 xlv_TEXCOORD5;
varying vec3 xlv_TEXCOORD6;
void main ()
{
  vec2 tmpvar_1;
  tmpvar_1 = gl_MultiTexCoord0.xy;
  vec2 tmpvar_2;
  tmpvar_2 = gl_MultiTexCoord1.xy;
  vec4 tmpvar_3;
  vec4 tmpvar_4;
  vec4 tmpvar_5;
  vec4 tmpvar_6;
  vec4 tmpvar_7;
  tmpvar_7 = (_Object2World * gl_Vertex);
  tmpvar_3 = (gl_ModelViewProjectionMatrix * gl_Vertex);
  vec4 texcoord_8;
  texcoord_8.xy = ((gl_MultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  vec2 tmpvar_9;
  if ((_UVSec == 0.0)) {
    tmpvar_9 = tmpvar_1;
  } else {
    tmpvar_9 = tmpvar_2;
  };
  texcoord_8.zw = ((tmpvar_9 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  vec4 v_10;
  v_10.x = _World2Object[0].x;
  v_10.y = _World2Object[1].x;
  v_10.z = _World2Object[2].x;
  v_10.w = _World2Object[3].x;
  vec4 v_11;
  v_11.x = _World2Object[0].y;
  v_11.y = _World2Object[1].y;
  v_11.z = _World2Object[2].y;
  v_11.w = _World2Object[3].y;
  vec4 v_12;
  v_12.x = _World2Object[0].z;
  v_12.y = _World2Object[1].z;
  v_12.z = _World2Object[2].z;
  v_12.w = _World2Object[3].z;
  vec3 tmpvar_13;
  tmpvar_13 = normalize(((
    (v_10.xyz * gl_Normal.x)
   + 
    (v_11.xyz * gl_Normal.y)
  ) + (v_12.xyz * gl_Normal.z)));
  mat3 tmpvar_14;
  tmpvar_14[0] = _Object2World[0].xyz;
  tmpvar_14[1] = _Object2World[1].xyz;
  tmpvar_14[2] = _Object2World[2].xyz;
  vec4 tmpvar_15;
  tmpvar_15.xyz = normalize((tmpvar_14 * TANGENT.xyz));
  tmpvar_15.w = TANGENT.w;
  vec3 tmpvar_16;
  vec3 tmpvar_17;
  tmpvar_16 = tmpvar_15.xyz;
  tmpvar_17 = (((tmpvar_13.yzx * tmpvar_15.zxy) - (tmpvar_13.zxy * tmpvar_15.yzx)) * (TANGENT.w * unity_WorldTransformParams.w));
  vec3 tmpvar_18;
  vec3 tmpvar_19;
  vec3 tmpvar_20;
  tmpvar_18.x = tmpvar_16.x;
  tmpvar_18.y = tmpvar_17.x;
  tmpvar_18.z = tmpvar_13.x;
  tmpvar_19.x = tmpvar_16.y;
  tmpvar_19.y = tmpvar_17.y;
  tmpvar_19.z = tmpvar_13.y;
  tmpvar_20.x = tmpvar_16.z;
  tmpvar_20.y = tmpvar_17.z;
  tmpvar_20.z = tmpvar_13.z;
  vec3 v_21;
  v_21.x = tmpvar_18.x;
  v_21.y = tmpvar_19.x;
  v_21.z = tmpvar_20.x;
  tmpvar_4.xyz = v_21;
  vec3 v_22;
  v_22.x = tmpvar_18.y;
  v_22.y = tmpvar_19.y;
  v_22.z = tmpvar_20.y;
  tmpvar_5.xyz = v_22;
  vec3 v_23;
  v_23.x = tmpvar_18.z;
  v_23.y = tmpvar_19.z;
  v_23.z = tmpvar_20.z;
  tmpvar_6.xyz = v_23;
  vec3 tmpvar_24;
  tmpvar_24 = (_WorldSpaceLightPos0.xyz - (tmpvar_7.xyz * _WorldSpaceLightPos0.w));
  tmpvar_4.w = tmpvar_24.x;
  tmpvar_5.w = tmpvar_24.y;
  tmpvar_6.w = tmpvar_24.z;
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = texcoord_8;
  xlv_TEXCOORD1 = (tmpvar_7.xyz - _WorldSpaceCameraPos);
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  vec4 tmpvar_25;
  tmpvar_25 = (_Object2World * gl_Vertex);
  xlv_TEXCOORD5 = (_LightMatrix0 * tmpvar_25).xyz;
  xlv_TEXCOORD6 = (tmpvar_25.xyz - _LightPositionRange.xyz);
}


#endif
#ifdef FRAGMENT
uniform vec4 _LightPositionRange;
uniform vec4 _LightShadowData;
uniform vec4 unity_ColorSpaceDielectricSpec;
uniform vec4 unity_ColorSpaceLuminance;
uniform vec4 _LightColor0;
uniform vec4 _Color;
uniform sampler2D _MainTex;
uniform float _Metallic;
uniform float _Glossiness;
uniform samplerCube _ShadowMapTexture;
uniform sampler2D _LightTexture0;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec3 xlv_TEXCOORD5;
varying vec3 xlv_TEXCOORD6;
void main ()
{
  vec3 tmpvar_1;
  tmpvar_1 = (_Color.xyz * texture2D (_MainTex, xlv_TEXCOORD0.xy).xyz);
  vec3 tmpvar_2;
  vec3 tmpvar_3;
  tmpvar_3 = mix (unity_ColorSpaceDielectricSpec.xyz, tmpvar_1, vec3(_Metallic));
  tmpvar_2 = (tmpvar_1 * (unity_ColorSpaceDielectricSpec.w - (_Metallic * unity_ColorSpaceDielectricSpec.w)));
  vec3 tmpvar_4;
  tmpvar_4 = normalize(xlv_TEXCOORD2_2.xyz);
  vec3 tmpvar_5;
  tmpvar_5 = normalize(xlv_TEXCOORD1);
  vec3 tmpvar_6;
  tmpvar_6.x = xlv_TEXCOORD2.w;
  tmpvar_6.y = xlv_TEXCOORD2_1.w;
  tmpvar_6.z = xlv_TEXCOORD2_2.w;
  vec4 tmpvar_7;
  tmpvar_7 = texture2D (_LightTexture0, vec2(dot (xlv_TEXCOORD5, xlv_TEXCOORD5)));
  vec4 shadowVals_8;
  shadowVals_8.x = textureCube (_ShadowMapTexture, (xlv_TEXCOORD6 + vec3(0.0078125, 0.0078125, 0.0078125))).x;
  shadowVals_8.y = textureCube (_ShadowMapTexture, (xlv_TEXCOORD6 + vec3(-0.0078125, -0.0078125, 0.0078125))).x;
  shadowVals_8.z = textureCube (_ShadowMapTexture, (xlv_TEXCOORD6 + vec3(-0.0078125, 0.0078125, -0.0078125))).x;
  shadowVals_8.w = textureCube (_ShadowMapTexture, (xlv_TEXCOORD6 + vec3(0.0078125, -0.0078125, -0.0078125))).x;
  bvec4 tmpvar_9;
  tmpvar_9 = lessThan (shadowVals_8, vec4(((
    sqrt(dot (xlv_TEXCOORD6, xlv_TEXCOORD6))
   * _LightPositionRange.w) * 0.97)));
  vec4 tmpvar_10;
  tmpvar_10 = _LightShadowData.xxxx;
  float tmpvar_11;
  if (tmpvar_9.x) {
    tmpvar_11 = tmpvar_10.x;
  } else {
    tmpvar_11 = 1.0;
  };
  float tmpvar_12;
  if (tmpvar_9.y) {
    tmpvar_12 = tmpvar_10.y;
  } else {
    tmpvar_12 = 1.0;
  };
  float tmpvar_13;
  if (tmpvar_9.z) {
    tmpvar_13 = tmpvar_10.z;
  } else {
    tmpvar_13 = 1.0;
  };
  float tmpvar_14;
  if (tmpvar_9.w) {
    tmpvar_14 = tmpvar_10.w;
  } else {
    tmpvar_14 = 1.0;
  };
  vec4 tmpvar_15;
  tmpvar_15.x = tmpvar_11;
  tmpvar_15.y = tmpvar_12;
  tmpvar_15.z = tmpvar_13;
  tmpvar_15.w = tmpvar_14;
  vec3 tmpvar_16;
  vec3 tmpvar_17;
  tmpvar_17 = normalize(tmpvar_6);
  tmpvar_16 = (_LightColor0.xyz * (tmpvar_7.w * dot (tmpvar_15, vec4(0.25, 0.25, 0.25, 0.25))));
  vec3 viewDir_18;
  viewDir_18 = -(tmpvar_5);
  float specularTerm_19;
  float tmpvar_20;
  tmpvar_20 = (1.0 - _Glossiness);
  vec3 tmpvar_21;
  vec3 inVec_22;
  inVec_22 = (tmpvar_17 + viewDir_18);
  tmpvar_21 = (inVec_22 * inversesqrt(max (0.001, 
    dot (inVec_22, inVec_22)
  )));
  float tmpvar_23;
  tmpvar_23 = dot (tmpvar_4, viewDir_18);
  vec3 tmpvar_24;
  if ((tmpvar_23 < 0.0)) {
    tmpvar_24 = (tmpvar_4 + (viewDir_18 * (
      -(tmpvar_23)
     + 1e-05)));
  } else {
    tmpvar_24 = tmpvar_4;
  };
  float tmpvar_25;
  tmpvar_25 = max (0.0, dot (tmpvar_24, tmpvar_17));
  float tmpvar_26;
  tmpvar_26 = max (0.0, dot (tmpvar_24, tmpvar_21));
  float tmpvar_27;
  tmpvar_27 = max (0.0, dot (tmpvar_24, viewDir_18));
  float tmpvar_28;
  tmpvar_28 = max (0.0, dot (tmpvar_17, tmpvar_21));
  float tmpvar_29;
  tmpvar_29 = (tmpvar_20 * tmpvar_20);
  float tmpvar_30;
  tmpvar_30 = (tmpvar_20 * tmpvar_20);
  float tmpvar_31;
  tmpvar_31 = (tmpvar_30 * tmpvar_30);
  float tmpvar_32;
  tmpvar_32 = (((tmpvar_26 * tmpvar_26) * (tmpvar_31 - 1.0)) + 1.0);
  float x_33;
  x_33 = (1.0 - tmpvar_25);
  float x_34;
  x_34 = (1.0 - tmpvar_27);
  float tmpvar_35;
  tmpvar_35 = (0.5 + ((2.0 * tmpvar_28) * (tmpvar_28 * tmpvar_20)));
  float tmpvar_36;
  tmpvar_36 = ((1.0 + (
    (tmpvar_35 - 1.0)
   * 
    ((x_33 * x_33) * ((x_33 * x_33) * x_33))
  )) * (1.0 + (
    (tmpvar_35 - 1.0)
   * 
    ((x_34 * x_34) * ((x_34 * x_34) * x_34))
  )));
  float tmpvar_37;
  tmpvar_37 = (((2.0 / 
    (((tmpvar_25 * (
      (tmpvar_27 * (1.0 - tmpvar_29))
     + tmpvar_29)) + (tmpvar_27 * (
      (tmpvar_25 * (1.0 - tmpvar_29))
     + tmpvar_29))) + 1e-05)
  ) * (tmpvar_31 / 
    (((3.141593 * tmpvar_32) * tmpvar_32) + 1e-07)
  )) * 0.7853982);
  specularTerm_19 = tmpvar_37;
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    specularTerm_19 = sqrt(max (0.0001, tmpvar_37));
  };
  float tmpvar_38;
  tmpvar_38 = max (0.0, (specularTerm_19 * tmpvar_25));
  specularTerm_19 = tmpvar_38;
  float x_39;
  x_39 = (1.0 - tmpvar_28);
  vec4 tmpvar_40;
  tmpvar_40.w = 1.0;
  tmpvar_40.xyz = ((tmpvar_2 * (tmpvar_16 * 
    (tmpvar_36 * tmpvar_25)
  )) + ((tmpvar_38 * tmpvar_16) * (tmpvar_3 + 
    ((1.0 - tmpvar_3) * ((x_39 * x_39) * ((x_39 * x_39) * x_39)))
  )));
  vec4 xlat_varoutput_41;
  xlat_varoutput_41.xyz = tmpvar_40.xyz;
  xlat_varoutput_41.w = 1.0;
  gl_FragData[0] = xlat_varoutput_41;
}


#endif
"
}
SubProgram "d3d9 " {
// Stats: 42 math
Keywords { "POINT" "SHADOWS_CUBE" "SHADOWS_SOFT" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
Matrix 11 [_LightMatrix0] 3
Matrix 4 [_Object2World]
Matrix 8 [_World2Object] 3
Matrix 0 [glstate_matrix_mvp]
Vector 19 [_DetailAlbedoMap_ST]
Vector 16 [_LightPositionRange]
Vector 18 [_MainTex_ST]
Float 20 [_UVSec]
Vector 14 [_WorldSpaceCameraPos]
Vector 15 [_WorldSpaceLightPos0]
Vector 17 [unity_WorldTransformParams]
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   row_major float4x4 _LightMatrix0;
//   float4 _LightPositionRange;
//   float4 _MainTex_ST;
//   row_major float4x4 _Object2World;
//   float _UVSec;
//   row_major float4x4 _World2Object;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 glstate_matrix_mvp;
//   float4 unity_WorldTransformParams;
//
//
// Registers:
//
//   Name                       Reg   Size
//   -------------------------- ----- ----
//   glstate_matrix_mvp         c0       4
//   _Object2World              c4       4
//   _World2Object              c8       3
//   _LightMatrix0              c11      3
//   _WorldSpaceCameraPos       c14      1
//   _WorldSpaceLightPos0       c15      1
//   _LightPositionRange        c16      1
//   unity_WorldTransformParams c17      1
//   _MainTex_ST                c18      1
//   _DetailAlbedoMap_ST        c19      1
//   _UVSec                     c20      1
//

    vs_3_0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_tangent v4
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6.xyz
    dcl_texcoord6 o7.xyz
    dp4 o0.x, c0, v0
    dp4 o0.y, c1, v0
    dp4 o0.z, c2, v0
    dp4 o0.w, c3, v0
    mad o1.xy, v2, c18, c18.zwzw
    abs r0.x, c20.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c19.xyxy, c19
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add o2.xyz, r0, -c14
    mul r1.xyz, c9, v1.y
    mad r1.xyz, c8, v1.x, r1
    mad r1.xyz, c10, v1.z, r1
    nrm r2.xyz, r1
    dp3 r1.x, c4, v4
    dp3 r1.y, c5, v4
    dp3 r1.z, c6, v4
    nrm r3.xyz, r1
    mul r1.xyz, r2.zxyw, r3.yzxw
    mad r1.xyz, r2.yzxw, r3.zxyw, -r1
    mov o5.xyz, r2
    mov o3.xyz, r3
    mul r1.w, c17.w, v4.w
    mul o4.xyz, r1.w, r1
    dp4 r0.w, c7, v0
    dp4 o6.x, c11, r0
    dp4 o6.y, c12, r0
    dp4 o6.z, c13, r0
    add o7.xyz, r0, -c16
    mad r0.xyz, r0, -c15.w, c15
    mov o3.w, r0.x
    mov o4.w, r0.y
    mov o5.w, r0.z

// approximately 41 instruction slots used
"
}
SubProgram "d3d11 " {
// Stats: 46 math
Keywords { "POINT" "SHADOWS_CUBE" "SHADOWS_SOFT" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
ConstBuffer "$Globals" 304
Matrix 240 [_LightMatrix0]
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
Vector 16 [_LightPositionRange]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
Vector 336 [unity_WorldTransformParams]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer cb0[19], immediateIndexed
      dcl_constantbuffer cb1[5], immediateIndexed
      dcl_constantbuffer cb2[2], immediateIndexed
      dcl_constantbuffer cb3[22], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyz
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: mad o0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   4: eq r0.x, cb0[13].z, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[11].xxxy, cb0[11].zzzw
   7: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  13: mul r1.xyz, v4.yyyy, cb3[13].xyzx
  14: mad r1.xyz, cb3[12].xyzx, v4.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[14].xyzx, v4.zzzz, r1.xyzx
  16: dp3 r0.w, r1.xyzx, r1.xyzx
  17: rsq r0.w, r0.w
  18: mul r1.xyz, r0.wwww, r1.xyzx
  19: mov o3.xyz, r1.xyzx
  20: mad r2.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  21: add o7.xyz, r0.xyzx, -cb2[1].xyzx
  22: mov o3.w, r2.x
  23: mul r0.x, v1.x, cb3[16].x
  24: mul r0.y, v1.x, cb3[17].x
  25: mul r0.z, v1.x, cb3[18].x
  26: mul r3.x, v1.y, cb3[16].y
  27: mul r3.y, v1.y, cb3[17].y
  28: mul r3.z, v1.y, cb3[18].y
  29: add r0.xyz, r0.xyzx, r3.xyzx
  30: mul r3.x, v1.z, cb3[16].z
  31: mul r3.y, v1.z, cb3[17].z
  32: mul r3.z, v1.z, cb3[18].z
  33: add r0.xyz, r0.xyzx, r3.xyzx
  34: dp3 r0.w, r0.xyzx, r0.xyzx
  35: rsq r0.w, r0.w
  36: mul r0.xyz, r0.wwww, r0.xyzx
  37: mul r3.xyz, r1.yzxy, r0.zxyz
  38: mad r1.xyz, r0.yzxy, r1.zxyz, -r3.xyzx
  39: mov o5.xyz, r0.xyzx
  40: mul r0.x, v4.w, cb3[21].w
  41: mul o4.xyz, r0.xxxx, r1.xyzx
  42: mov o4.w, r2.y
  43: mov o5.w, r2.z
  44: mul r0.xyzw, v0.yyyy, cb3[13].xyzw
  45: mad r0.xyzw, cb3[12].xyzw, v0.xxxx, r0.xyzw
  46: mad r0.xyzw, cb3[14].xyzw, v0.zzzz, r0.xyzw
  47: mad r0.xyzw, cb3[15].xyzw, v0.wwww, r0.xyzw
  48: mul r1.xyz, r0.yyyy, cb0[16].xyzx
  49: mad r1.xyz, cb0[15].xyzx, r0.xxxx, r1.xyzx
  50: mad r0.xyz, cb0[17].xyzx, r0.zzzz, r1.xyzx
  51: mad o6.xyz, cb0[18].xyzx, r0.wwww, r0.xyzx
  52: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
// Stats: 113 math, 7 textures, 6 branches
Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "SHADOWS_SOFT" }
"#version 120

#ifdef VERTEX
uniform vec3 _WorldSpaceCameraPos;
uniform vec4 _WorldSpaceLightPos0;
uniform vec4 _LightPositionRange;

uniform mat4 _Object2World;
uniform mat4 _World2Object;
uniform vec4 unity_WorldTransformParams;
uniform vec4 _MainTex_ST;
uniform vec4 _DetailAlbedoMap_ST;
uniform float _UVSec;
uniform mat4 _LightMatrix0;
attribute vec4 TANGENT;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec3 xlv_TEXCOORD5;
varying vec3 xlv_TEXCOORD6;
void main ()
{
  vec2 tmpvar_1;
  tmpvar_1 = gl_MultiTexCoord0.xy;
  vec2 tmpvar_2;
  tmpvar_2 = gl_MultiTexCoord1.xy;
  vec4 tmpvar_3;
  vec4 tmpvar_4;
  vec4 tmpvar_5;
  vec4 tmpvar_6;
  vec4 tmpvar_7;
  tmpvar_7 = (_Object2World * gl_Vertex);
  tmpvar_3 = (gl_ModelViewProjectionMatrix * gl_Vertex);
  vec4 texcoord_8;
  texcoord_8.xy = ((gl_MultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  vec2 tmpvar_9;
  if ((_UVSec == 0.0)) {
    tmpvar_9 = tmpvar_1;
  } else {
    tmpvar_9 = tmpvar_2;
  };
  texcoord_8.zw = ((tmpvar_9 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  vec4 v_10;
  v_10.x = _World2Object[0].x;
  v_10.y = _World2Object[1].x;
  v_10.z = _World2Object[2].x;
  v_10.w = _World2Object[3].x;
  vec4 v_11;
  v_11.x = _World2Object[0].y;
  v_11.y = _World2Object[1].y;
  v_11.z = _World2Object[2].y;
  v_11.w = _World2Object[3].y;
  vec4 v_12;
  v_12.x = _World2Object[0].z;
  v_12.y = _World2Object[1].z;
  v_12.z = _World2Object[2].z;
  v_12.w = _World2Object[3].z;
  vec3 tmpvar_13;
  tmpvar_13 = normalize(((
    (v_10.xyz * gl_Normal.x)
   + 
    (v_11.xyz * gl_Normal.y)
  ) + (v_12.xyz * gl_Normal.z)));
  mat3 tmpvar_14;
  tmpvar_14[0] = _Object2World[0].xyz;
  tmpvar_14[1] = _Object2World[1].xyz;
  tmpvar_14[2] = _Object2World[2].xyz;
  vec4 tmpvar_15;
  tmpvar_15.xyz = normalize((tmpvar_14 * TANGENT.xyz));
  tmpvar_15.w = TANGENT.w;
  vec3 tmpvar_16;
  vec3 tmpvar_17;
  tmpvar_16 = tmpvar_15.xyz;
  tmpvar_17 = (((tmpvar_13.yzx * tmpvar_15.zxy) - (tmpvar_13.zxy * tmpvar_15.yzx)) * (TANGENT.w * unity_WorldTransformParams.w));
  vec3 tmpvar_18;
  vec3 tmpvar_19;
  vec3 tmpvar_20;
  tmpvar_18.x = tmpvar_16.x;
  tmpvar_18.y = tmpvar_17.x;
  tmpvar_18.z = tmpvar_13.x;
  tmpvar_19.x = tmpvar_16.y;
  tmpvar_19.y = tmpvar_17.y;
  tmpvar_19.z = tmpvar_13.y;
  tmpvar_20.x = tmpvar_16.z;
  tmpvar_20.y = tmpvar_17.z;
  tmpvar_20.z = tmpvar_13.z;
  vec3 v_21;
  v_21.x = tmpvar_18.x;
  v_21.y = tmpvar_19.x;
  v_21.z = tmpvar_20.x;
  tmpvar_4.xyz = v_21;
  vec3 v_22;
  v_22.x = tmpvar_18.y;
  v_22.y = tmpvar_19.y;
  v_22.z = tmpvar_20.y;
  tmpvar_5.xyz = v_22;
  vec3 v_23;
  v_23.x = tmpvar_18.z;
  v_23.y = tmpvar_19.z;
  v_23.z = tmpvar_20.z;
  tmpvar_6.xyz = v_23;
  vec3 tmpvar_24;
  tmpvar_24 = (_WorldSpaceLightPos0.xyz - (tmpvar_7.xyz * _WorldSpaceLightPos0.w));
  tmpvar_4.w = tmpvar_24.x;
  tmpvar_5.w = tmpvar_24.y;
  tmpvar_6.w = tmpvar_24.z;
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = texcoord_8;
  xlv_TEXCOORD1 = (tmpvar_7.xyz - _WorldSpaceCameraPos);
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  vec4 tmpvar_25;
  tmpvar_25 = (_Object2World * gl_Vertex);
  xlv_TEXCOORD5 = (_LightMatrix0 * tmpvar_25).xyz;
  xlv_TEXCOORD6 = (tmpvar_25.xyz - _LightPositionRange.xyz);
}


#endif
#ifdef FRAGMENT
uniform vec4 _LightPositionRange;
uniform vec4 _LightShadowData;
uniform vec4 unity_ColorSpaceDielectricSpec;
uniform vec4 unity_ColorSpaceLuminance;
uniform vec4 _LightColor0;
uniform vec4 _Color;
uniform sampler2D _MainTex;
uniform float _Metallic;
uniform float _Glossiness;
uniform samplerCube _ShadowMapTexture;
uniform samplerCube _LightTexture0;
uniform sampler2D _LightTextureB0;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec3 xlv_TEXCOORD5;
varying vec3 xlv_TEXCOORD6;
void main ()
{
  vec3 tmpvar_1;
  tmpvar_1 = (_Color.xyz * texture2D (_MainTex, xlv_TEXCOORD0.xy).xyz);
  vec3 tmpvar_2;
  vec3 tmpvar_3;
  tmpvar_3 = mix (unity_ColorSpaceDielectricSpec.xyz, tmpvar_1, vec3(_Metallic));
  tmpvar_2 = (tmpvar_1 * (unity_ColorSpaceDielectricSpec.w - (_Metallic * unity_ColorSpaceDielectricSpec.w)));
  vec3 tmpvar_4;
  tmpvar_4 = normalize(xlv_TEXCOORD2_2.xyz);
  vec3 tmpvar_5;
  tmpvar_5 = normalize(xlv_TEXCOORD1);
  vec3 tmpvar_6;
  tmpvar_6.x = xlv_TEXCOORD2.w;
  tmpvar_6.y = xlv_TEXCOORD2_1.w;
  tmpvar_6.z = xlv_TEXCOORD2_2.w;
  vec4 tmpvar_7;
  tmpvar_7 = texture2D (_LightTextureB0, vec2(dot (xlv_TEXCOORD5, xlv_TEXCOORD5)));
  vec4 tmpvar_8;
  tmpvar_8 = textureCube (_LightTexture0, xlv_TEXCOORD5);
  vec4 shadowVals_9;
  shadowVals_9.x = textureCube (_ShadowMapTexture, (xlv_TEXCOORD6 + vec3(0.0078125, 0.0078125, 0.0078125))).x;
  shadowVals_9.y = textureCube (_ShadowMapTexture, (xlv_TEXCOORD6 + vec3(-0.0078125, -0.0078125, 0.0078125))).x;
  shadowVals_9.z = textureCube (_ShadowMapTexture, (xlv_TEXCOORD6 + vec3(-0.0078125, 0.0078125, -0.0078125))).x;
  shadowVals_9.w = textureCube (_ShadowMapTexture, (xlv_TEXCOORD6 + vec3(0.0078125, -0.0078125, -0.0078125))).x;
  bvec4 tmpvar_10;
  tmpvar_10 = lessThan (shadowVals_9, vec4(((
    sqrt(dot (xlv_TEXCOORD6, xlv_TEXCOORD6))
   * _LightPositionRange.w) * 0.97)));
  vec4 tmpvar_11;
  tmpvar_11 = _LightShadowData.xxxx;
  float tmpvar_12;
  if (tmpvar_10.x) {
    tmpvar_12 = tmpvar_11.x;
  } else {
    tmpvar_12 = 1.0;
  };
  float tmpvar_13;
  if (tmpvar_10.y) {
    tmpvar_13 = tmpvar_11.y;
  } else {
    tmpvar_13 = 1.0;
  };
  float tmpvar_14;
  if (tmpvar_10.z) {
    tmpvar_14 = tmpvar_11.z;
  } else {
    tmpvar_14 = 1.0;
  };
  float tmpvar_15;
  if (tmpvar_10.w) {
    tmpvar_15 = tmpvar_11.w;
  } else {
    tmpvar_15 = 1.0;
  };
  vec4 tmpvar_16;
  tmpvar_16.x = tmpvar_12;
  tmpvar_16.y = tmpvar_13;
  tmpvar_16.z = tmpvar_14;
  tmpvar_16.w = tmpvar_15;
  vec3 tmpvar_17;
  vec3 tmpvar_18;
  tmpvar_18 = normalize(tmpvar_6);
  tmpvar_17 = (_LightColor0.xyz * ((tmpvar_7.w * tmpvar_8.w) * dot (tmpvar_16, vec4(0.25, 0.25, 0.25, 0.25))));
  vec3 viewDir_19;
  viewDir_19 = -(tmpvar_5);
  float specularTerm_20;
  float tmpvar_21;
  tmpvar_21 = (1.0 - _Glossiness);
  vec3 tmpvar_22;
  vec3 inVec_23;
  inVec_23 = (tmpvar_18 + viewDir_19);
  tmpvar_22 = (inVec_23 * inversesqrt(max (0.001, 
    dot (inVec_23, inVec_23)
  )));
  float tmpvar_24;
  tmpvar_24 = dot (tmpvar_4, viewDir_19);
  vec3 tmpvar_25;
  if ((tmpvar_24 < 0.0)) {
    tmpvar_25 = (tmpvar_4 + (viewDir_19 * (
      -(tmpvar_24)
     + 1e-05)));
  } else {
    tmpvar_25 = tmpvar_4;
  };
  float tmpvar_26;
  tmpvar_26 = max (0.0, dot (tmpvar_25, tmpvar_18));
  float tmpvar_27;
  tmpvar_27 = max (0.0, dot (tmpvar_25, tmpvar_22));
  float tmpvar_28;
  tmpvar_28 = max (0.0, dot (tmpvar_25, viewDir_19));
  float tmpvar_29;
  tmpvar_29 = max (0.0, dot (tmpvar_18, tmpvar_22));
  float tmpvar_30;
  tmpvar_30 = (tmpvar_21 * tmpvar_21);
  float tmpvar_31;
  tmpvar_31 = (tmpvar_21 * tmpvar_21);
  float tmpvar_32;
  tmpvar_32 = (tmpvar_31 * tmpvar_31);
  float tmpvar_33;
  tmpvar_33 = (((tmpvar_27 * tmpvar_27) * (tmpvar_32 - 1.0)) + 1.0);
  float x_34;
  x_34 = (1.0 - tmpvar_26);
  float x_35;
  x_35 = (1.0 - tmpvar_28);
  float tmpvar_36;
  tmpvar_36 = (0.5 + ((2.0 * tmpvar_29) * (tmpvar_29 * tmpvar_21)));
  float tmpvar_37;
  tmpvar_37 = ((1.0 + (
    (tmpvar_36 - 1.0)
   * 
    ((x_34 * x_34) * ((x_34 * x_34) * x_34))
  )) * (1.0 + (
    (tmpvar_36 - 1.0)
   * 
    ((x_35 * x_35) * ((x_35 * x_35) * x_35))
  )));
  float tmpvar_38;
  tmpvar_38 = (((2.0 / 
    (((tmpvar_26 * (
      (tmpvar_28 * (1.0 - tmpvar_30))
     + tmpvar_30)) + (tmpvar_28 * (
      (tmpvar_26 * (1.0 - tmpvar_30))
     + tmpvar_30))) + 1e-05)
  ) * (tmpvar_32 / 
    (((3.141593 * tmpvar_33) * tmpvar_33) + 1e-07)
  )) * 0.7853982);
  specularTerm_20 = tmpvar_38;
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    specularTerm_20 = sqrt(max (0.0001, tmpvar_38));
  };
  float tmpvar_39;
  tmpvar_39 = max (0.0, (specularTerm_20 * tmpvar_26));
  specularTerm_20 = tmpvar_39;
  float x_40;
  x_40 = (1.0 - tmpvar_29);
  vec4 tmpvar_41;
  tmpvar_41.w = 1.0;
  tmpvar_41.xyz = ((tmpvar_2 * (tmpvar_17 * 
    (tmpvar_37 * tmpvar_26)
  )) + ((tmpvar_39 * tmpvar_17) * (tmpvar_3 + 
    ((1.0 - tmpvar_3) * ((x_40 * x_40) * ((x_40 * x_40) * x_40)))
  )));
  vec4 xlat_varoutput_42;
  xlat_varoutput_42.xyz = tmpvar_41.xyz;
  xlat_varoutput_42.w = 1.0;
  gl_FragData[0] = xlat_varoutput_42;
}


#endif
"
}
SubProgram "d3d9 " {
// Stats: 42 math
Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "SHADOWS_SOFT" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
Matrix 11 [_LightMatrix0] 3
Matrix 4 [_Object2World]
Matrix 8 [_World2Object] 3
Matrix 0 [glstate_matrix_mvp]
Vector 19 [_DetailAlbedoMap_ST]
Vector 16 [_LightPositionRange]
Vector 18 [_MainTex_ST]
Float 20 [_UVSec]
Vector 14 [_WorldSpaceCameraPos]
Vector 15 [_WorldSpaceLightPos0]
Vector 17 [unity_WorldTransformParams]
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   row_major float4x4 _LightMatrix0;
//   float4 _LightPositionRange;
//   float4 _MainTex_ST;
//   row_major float4x4 _Object2World;
//   float _UVSec;
//   row_major float4x4 _World2Object;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 glstate_matrix_mvp;
//   float4 unity_WorldTransformParams;
//
//
// Registers:
//
//   Name                       Reg   Size
//   -------------------------- ----- ----
//   glstate_matrix_mvp         c0       4
//   _Object2World              c4       4
//   _World2Object              c8       3
//   _LightMatrix0              c11      3
//   _WorldSpaceCameraPos       c14      1
//   _WorldSpaceLightPos0       c15      1
//   _LightPositionRange        c16      1
//   unity_WorldTransformParams c17      1
//   _MainTex_ST                c18      1
//   _DetailAlbedoMap_ST        c19      1
//   _UVSec                     c20      1
//

    vs_3_0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_tangent v4
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6.xyz
    dcl_texcoord6 o7.xyz
    dp4 o0.x, c0, v0
    dp4 o0.y, c1, v0
    dp4 o0.z, c2, v0
    dp4 o0.w, c3, v0
    mad o1.xy, v2, c18, c18.zwzw
    abs r0.x, c20.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c19.xyxy, c19
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add o2.xyz, r0, -c14
    mul r1.xyz, c9, v1.y
    mad r1.xyz, c8, v1.x, r1
    mad r1.xyz, c10, v1.z, r1
    nrm r2.xyz, r1
    dp3 r1.x, c4, v4
    dp3 r1.y, c5, v4
    dp3 r1.z, c6, v4
    nrm r3.xyz, r1
    mul r1.xyz, r2.zxyw, r3.yzxw
    mad r1.xyz, r2.yzxw, r3.zxyw, -r1
    mov o5.xyz, r2
    mov o3.xyz, r3
    mul r1.w, c17.w, v4.w
    mul o4.xyz, r1.w, r1
    dp4 r0.w, c7, v0
    dp4 o6.x, c11, r0
    dp4 o6.y, c12, r0
    dp4 o6.z, c13, r0
    add o7.xyz, r0, -c16
    mad r0.xyz, r0, -c15.w, c15
    mov o3.w, r0.x
    mov o4.w, r0.y
    mov o5.w, r0.z

// approximately 41 instruction slots used
"
}
SubProgram "d3d11 " {
// Stats: 46 math
Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "SHADOWS_SOFT" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
ConstBuffer "$Globals" 304
Matrix 240 [_LightMatrix0]
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
Vector 16 [_LightPositionRange]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
Vector 336 [unity_WorldTransformParams]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer cb0[19], immediateIndexed
      dcl_constantbuffer cb1[5], immediateIndexed
      dcl_constantbuffer cb2[2], immediateIndexed
      dcl_constantbuffer cb3[22], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyz
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: mad o0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   4: eq r0.x, cb0[13].z, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[11].xxxy, cb0[11].zzzw
   7: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  13: mul r1.xyz, v4.yyyy, cb3[13].xyzx
  14: mad r1.xyz, cb3[12].xyzx, v4.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[14].xyzx, v4.zzzz, r1.xyzx
  16: dp3 r0.w, r1.xyzx, r1.xyzx
  17: rsq r0.w, r0.w
  18: mul r1.xyz, r0.wwww, r1.xyzx
  19: mov o3.xyz, r1.xyzx
  20: mad r2.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  21: add o7.xyz, r0.xyzx, -cb2[1].xyzx
  22: mov o3.w, r2.x
  23: mul r0.x, v1.x, cb3[16].x
  24: mul r0.y, v1.x, cb3[17].x
  25: mul r0.z, v1.x, cb3[18].x
  26: mul r3.x, v1.y, cb3[16].y
  27: mul r3.y, v1.y, cb3[17].y
  28: mul r3.z, v1.y, cb3[18].y
  29: add r0.xyz, r0.xyzx, r3.xyzx
  30: mul r3.x, v1.z, cb3[16].z
  31: mul r3.y, v1.z, cb3[17].z
  32: mul r3.z, v1.z, cb3[18].z
  33: add r0.xyz, r0.xyzx, r3.xyzx
  34: dp3 r0.w, r0.xyzx, r0.xyzx
  35: rsq r0.w, r0.w
  36: mul r0.xyz, r0.wwww, r0.xyzx
  37: mul r3.xyz, r1.yzxy, r0.zxyz
  38: mad r1.xyz, r0.yzxy, r1.zxyz, -r3.xyzx
  39: mov o5.xyz, r0.xyzx
  40: mul r0.x, v4.w, cb3[21].w
  41: mul o4.xyz, r0.xxxx, r1.xyzx
  42: mov o4.w, r2.y
  43: mov o5.w, r2.z
  44: mul r0.xyzw, v0.yyyy, cb3[13].xyzw
  45: mad r0.xyzw, cb3[12].xyzw, v0.xxxx, r0.xyzw
  46: mad r0.xyzw, cb3[14].xyzw, v0.zzzz, r0.xyzw
  47: mad r0.xyzw, cb3[15].xyzw, v0.wwww, r0.xyzw
  48: mul r1.xyz, r0.yyyy, cb0[16].xyzx
  49: mad r1.xyz, cb0[15].xyzx, r0.xxxx, r1.xyzx
  50: mad r0.xyz, cb0[17].xyzx, r0.zzzz, r1.xyzx
  51: mad o6.xyz, cb0[18].xyzx, r0.wwww, r0.xyzx
  52: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
// Stats: 97 math, 2 textures, 2 branches
Keywords { "POINT" "SHADOWS_OFF" "_ALPHABLEND_ON" }
"#version 120

#ifdef VERTEX
uniform vec3 _WorldSpaceCameraPos;
uniform vec4 _WorldSpaceLightPos0;

uniform mat4 _Object2World;
uniform mat4 _World2Object;
uniform vec4 unity_WorldTransformParams;
uniform vec4 _MainTex_ST;
uniform vec4 _DetailAlbedoMap_ST;
uniform float _UVSec;
uniform mat4 _LightMatrix0;
attribute vec4 TANGENT;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec3 xlv_TEXCOORD5;
void main ()
{
  vec2 tmpvar_1;
  tmpvar_1 = gl_MultiTexCoord0.xy;
  vec2 tmpvar_2;
  tmpvar_2 = gl_MultiTexCoord1.xy;
  vec4 tmpvar_3;
  vec4 tmpvar_4;
  vec4 tmpvar_5;
  vec4 tmpvar_6;
  vec4 tmpvar_7;
  tmpvar_7 = (_Object2World * gl_Vertex);
  tmpvar_3 = (gl_ModelViewProjectionMatrix * gl_Vertex);
  vec4 texcoord_8;
  texcoord_8.xy = ((gl_MultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  vec2 tmpvar_9;
  if ((_UVSec == 0.0)) {
    tmpvar_9 = tmpvar_1;
  } else {
    tmpvar_9 = tmpvar_2;
  };
  texcoord_8.zw = ((tmpvar_9 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  vec4 v_10;
  v_10.x = _World2Object[0].x;
  v_10.y = _World2Object[1].x;
  v_10.z = _World2Object[2].x;
  v_10.w = _World2Object[3].x;
  vec4 v_11;
  v_11.x = _World2Object[0].y;
  v_11.y = _World2Object[1].y;
  v_11.z = _World2Object[2].y;
  v_11.w = _World2Object[3].y;
  vec4 v_12;
  v_12.x = _World2Object[0].z;
  v_12.y = _World2Object[1].z;
  v_12.z = _World2Object[2].z;
  v_12.w = _World2Object[3].z;
  vec3 tmpvar_13;
  tmpvar_13 = normalize(((
    (v_10.xyz * gl_Normal.x)
   + 
    (v_11.xyz * gl_Normal.y)
  ) + (v_12.xyz * gl_Normal.z)));
  mat3 tmpvar_14;
  tmpvar_14[0] = _Object2World[0].xyz;
  tmpvar_14[1] = _Object2World[1].xyz;
  tmpvar_14[2] = _Object2World[2].xyz;
  vec4 tmpvar_15;
  tmpvar_15.xyz = normalize((tmpvar_14 * TANGENT.xyz));
  tmpvar_15.w = TANGENT.w;
  vec3 tmpvar_16;
  vec3 tmpvar_17;
  tmpvar_16 = tmpvar_15.xyz;
  tmpvar_17 = (((tmpvar_13.yzx * tmpvar_15.zxy) - (tmpvar_13.zxy * tmpvar_15.yzx)) * (TANGENT.w * unity_WorldTransformParams.w));
  vec3 tmpvar_18;
  vec3 tmpvar_19;
  vec3 tmpvar_20;
  tmpvar_18.x = tmpvar_16.x;
  tmpvar_18.y = tmpvar_17.x;
  tmpvar_18.z = tmpvar_13.x;
  tmpvar_19.x = tmpvar_16.y;
  tmpvar_19.y = tmpvar_17.y;
  tmpvar_19.z = tmpvar_13.y;
  tmpvar_20.x = tmpvar_16.z;
  tmpvar_20.y = tmpvar_17.z;
  tmpvar_20.z = tmpvar_13.z;
  vec3 v_21;
  v_21.x = tmpvar_18.x;
  v_21.y = tmpvar_19.x;
  v_21.z = tmpvar_20.x;
  tmpvar_4.xyz = v_21;
  vec3 v_22;
  v_22.x = tmpvar_18.y;
  v_22.y = tmpvar_19.y;
  v_22.z = tmpvar_20.y;
  tmpvar_5.xyz = v_22;
  vec3 v_23;
  v_23.x = tmpvar_18.z;
  v_23.y = tmpvar_19.z;
  v_23.z = tmpvar_20.z;
  tmpvar_6.xyz = v_23;
  vec3 tmpvar_24;
  tmpvar_24 = (_WorldSpaceLightPos0.xyz - (tmpvar_7.xyz * _WorldSpaceLightPos0.w));
  tmpvar_4.w = tmpvar_24.x;
  tmpvar_5.w = tmpvar_24.y;
  tmpvar_6.w = tmpvar_24.z;
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = texcoord_8;
  xlv_TEXCOORD1 = (tmpvar_7.xyz - _WorldSpaceCameraPos);
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  xlv_TEXCOORD5 = (_LightMatrix0 * (_Object2World * gl_Vertex)).xyz;
}


#endif
#ifdef FRAGMENT
uniform vec4 unity_ColorSpaceDielectricSpec;
uniform vec4 unity_ColorSpaceLuminance;
uniform vec4 _LightColor0;
uniform vec4 _Color;
uniform sampler2D _MainTex;
uniform float _Metallic;
uniform float _Glossiness;
uniform sampler2D _LightTexture0;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec3 xlv_TEXCOORD5;
void main ()
{
  float tmpvar_1;
  vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  tmpvar_1 = (tmpvar_2.w * _Color.w);
  vec3 tmpvar_3;
  tmpvar_3 = (_Color.xyz * tmpvar_2.xyz);
  vec3 tmpvar_4;
  vec3 tmpvar_5;
  tmpvar_5 = mix (unity_ColorSpaceDielectricSpec.xyz, tmpvar_3, vec3(_Metallic));
  tmpvar_4 = (tmpvar_3 * (unity_ColorSpaceDielectricSpec.w - (_Metallic * unity_ColorSpaceDielectricSpec.w)));
  vec3 tmpvar_6;
  tmpvar_6 = normalize(xlv_TEXCOORD2_2.xyz);
  vec3 tmpvar_7;
  tmpvar_7.x = xlv_TEXCOORD2.w;
  tmpvar_7.y = xlv_TEXCOORD2_1.w;
  tmpvar_7.z = xlv_TEXCOORD2_2.w;
  vec3 tmpvar_8;
  vec3 tmpvar_9;
  tmpvar_9 = normalize(tmpvar_7);
  tmpvar_8 = (_LightColor0.xyz * texture2D (_LightTexture0, vec2(dot (xlv_TEXCOORD5, xlv_TEXCOORD5))).w);
  vec3 viewDir_10;
  viewDir_10 = -(normalize(xlv_TEXCOORD1));
  float specularTerm_11;
  float tmpvar_12;
  tmpvar_12 = (1.0 - _Glossiness);
  vec3 tmpvar_13;
  vec3 inVec_14;
  inVec_14 = (tmpvar_9 + viewDir_10);
  tmpvar_13 = (inVec_14 * inversesqrt(max (0.001, 
    dot (inVec_14, inVec_14)
  )));
  float tmpvar_15;
  tmpvar_15 = dot (tmpvar_6, viewDir_10);
  vec3 tmpvar_16;
  if ((tmpvar_15 < 0.0)) {
    tmpvar_16 = (tmpvar_6 + (viewDir_10 * (
      -(tmpvar_15)
     + 1e-05)));
  } else {
    tmpvar_16 = tmpvar_6;
  };
  float tmpvar_17;
  tmpvar_17 = max (0.0, dot (tmpvar_16, tmpvar_9));
  float tmpvar_18;
  tmpvar_18 = max (0.0, dot (tmpvar_16, tmpvar_13));
  float tmpvar_19;
  tmpvar_19 = max (0.0, dot (tmpvar_16, viewDir_10));
  float tmpvar_20;
  tmpvar_20 = max (0.0, dot (tmpvar_9, tmpvar_13));
  float tmpvar_21;
  tmpvar_21 = (tmpvar_12 * tmpvar_12);
  float tmpvar_22;
  tmpvar_22 = (tmpvar_12 * tmpvar_12);
  float tmpvar_23;
  tmpvar_23 = (tmpvar_22 * tmpvar_22);
  float tmpvar_24;
  tmpvar_24 = (((tmpvar_18 * tmpvar_18) * (tmpvar_23 - 1.0)) + 1.0);
  float x_25;
  x_25 = (1.0 - tmpvar_17);
  float x_26;
  x_26 = (1.0 - tmpvar_19);
  float tmpvar_27;
  tmpvar_27 = (0.5 + ((2.0 * tmpvar_20) * (tmpvar_20 * tmpvar_12)));
  float tmpvar_28;
  tmpvar_28 = ((1.0 + (
    (tmpvar_27 - 1.0)
   * 
    ((x_25 * x_25) * ((x_25 * x_25) * x_25))
  )) * (1.0 + (
    (tmpvar_27 - 1.0)
   * 
    ((x_26 * x_26) * ((x_26 * x_26) * x_26))
  )));
  float tmpvar_29;
  tmpvar_29 = (((2.0 / 
    (((tmpvar_17 * (
      (tmpvar_19 * (1.0 - tmpvar_21))
     + tmpvar_21)) + (tmpvar_19 * (
      (tmpvar_17 * (1.0 - tmpvar_21))
     + tmpvar_21))) + 1e-05)
  ) * (tmpvar_23 / 
    (((3.141593 * tmpvar_24) * tmpvar_24) + 1e-07)
  )) * 0.7853982);
  specularTerm_11 = tmpvar_29;
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    specularTerm_11 = sqrt(max (0.0001, tmpvar_29));
  };
  float tmpvar_30;
  tmpvar_30 = max (0.0, (specularTerm_11 * tmpvar_17));
  specularTerm_11 = tmpvar_30;
  float x_31;
  x_31 = (1.0 - tmpvar_20);
  vec4 tmpvar_32;
  tmpvar_32.w = 1.0;
  tmpvar_32.xyz = ((tmpvar_4 * (tmpvar_8 * 
    (tmpvar_28 * tmpvar_17)
  )) + ((tmpvar_30 * tmpvar_8) * (tmpvar_5 + 
    ((1.0 - tmpvar_5) * ((x_31 * x_31) * ((x_31 * x_31) * x_31)))
  )));
  vec4 xlat_varoutput_33;
  xlat_varoutput_33.xyz = tmpvar_32.xyz;
  xlat_varoutput_33.w = tmpvar_1;
  gl_FragData[0] = xlat_varoutput_33;
}


#endif
"
}
SubProgram "d3d9 " {
// Stats: 41 math
Keywords { "POINT" "SHADOWS_OFF" "_ALPHABLEND_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
Matrix 11 [_LightMatrix0] 3
Matrix 4 [_Object2World]
Matrix 8 [_World2Object] 3
Matrix 0 [glstate_matrix_mvp]
Vector 18 [_DetailAlbedoMap_ST]
Vector 17 [_MainTex_ST]
Float 19 [_UVSec]
Vector 14 [_WorldSpaceCameraPos]
Vector 15 [_WorldSpaceLightPos0]
Vector 16 [unity_WorldTransformParams]
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   row_major float4x4 _LightMatrix0;
//   float4 _MainTex_ST;
//   row_major float4x4 _Object2World;
//   float _UVSec;
//   row_major float4x4 _World2Object;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 glstate_matrix_mvp;
//   float4 unity_WorldTransformParams;
//
//
// Registers:
//
//   Name                       Reg   Size
//   -------------------------- ----- ----
//   glstate_matrix_mvp         c0       4
//   _Object2World              c4       4
//   _World2Object              c8       3
//   _LightMatrix0              c11      3
//   _WorldSpaceCameraPos       c14      1
//   _WorldSpaceLightPos0       c15      1
//   unity_WorldTransformParams c16      1
//   _MainTex_ST                c17      1
//   _DetailAlbedoMap_ST        c18      1
//   _UVSec                     c19      1
//

    vs_3_0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_tangent v4
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6.xyz
    dp4 o0.x, c0, v0
    dp4 o0.y, c1, v0
    dp4 o0.z, c2, v0
    dp4 o0.w, c3, v0
    mad o1.xy, v2, c17, c17.zwzw
    abs r0.x, c19.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c18.xyxy, c18
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add o2.xyz, r0, -c14
    mul r1.xyz, c9, v1.y
    mad r1.xyz, c8, v1.x, r1
    mad r1.xyz, c10, v1.z, r1
    nrm r2.xyz, r1
    dp3 r1.x, c4, v4
    dp3 r1.y, c5, v4
    dp3 r1.z, c6, v4
    nrm r3.xyz, r1
    mul r1.xyz, r2.zxyw, r3.yzxw
    mad r1.xyz, r2.yzxw, r3.zxyw, -r1
    mov o5.xyz, r2
    mov o3.xyz, r3
    mul r1.w, c16.w, v4.w
    mul o4.xyz, r1.w, r1
    dp4 r0.w, c7, v0
    dp4 o6.x, c11, r0
    dp4 o6.y, c12, r0
    dp4 o6.z, c13, r0
    mad r0.xyz, r0, -c15.w, c15
    mov o3.w, r0.x
    mov o4.w, r0.y
    mov o5.w, r0.z

// approximately 40 instruction slots used
"
}
SubProgram "d3d11 " {
// Stats: 45 math
Keywords { "POINT" "SHADOWS_OFF" "_ALPHABLEND_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
ConstBuffer "$Globals" 304
Matrix 240 [_LightMatrix0]
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
Vector 336 [unity_WorldTransformParams]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer cb0[19], immediateIndexed
      dcl_constantbuffer cb1[5], immediateIndexed
      dcl_constantbuffer cb2[1], immediateIndexed
      dcl_constantbuffer cb3[22], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: mad o0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   4: eq r0.x, cb0[13].z, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[11].xxxy, cb0[11].zzzw
   7: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  13: mad r0.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  14: mov o3.w, r0.x
  15: mul r1.xyz, v4.yyyy, cb3[13].xyzx
  16: mad r1.xyz, cb3[12].xyzx, v4.xxxx, r1.xyzx
  17: mad r1.xyz, cb3[14].xyzx, v4.zzzz, r1.xyzx
  18: dp3 r0.x, r1.xyzx, r1.xyzx
  19: rsq r0.x, r0.x
  20: mul r1.xyz, r0.xxxx, r1.xyzx
  21: mov o3.xyz, r1.xyzx
  22: mul r2.x, v1.x, cb3[16].x
  23: mul r2.y, v1.x, cb3[17].x
  24: mul r2.z, v1.x, cb3[18].x
  25: mul r3.x, v1.y, cb3[16].y
  26: mul r3.y, v1.y, cb3[17].y
  27: mul r3.z, v1.y, cb3[18].y
  28: add r2.xyz, r2.xyzx, r3.xyzx
  29: mul r3.x, v1.z, cb3[16].z
  30: mul r3.y, v1.z, cb3[17].z
  31: mul r3.z, v1.z, cb3[18].z
  32: add r2.xyz, r2.xyzx, r3.xyzx
  33: dp3 r0.x, r2.xyzx, r2.xyzx
  34: rsq r0.x, r0.x
  35: mul r2.xyz, r0.xxxx, r2.xyzx
  36: mul r3.xyz, r1.yzxy, r2.zxyz
  37: mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
  38: mov o5.xyz, r2.xyzx
  39: mul r0.x, v4.w, cb3[21].w
  40: mul o4.xyz, r0.xxxx, r1.xyzx
  41: mov o4.w, r0.y
  42: mov o5.w, r0.z
  43: mul r0.xyzw, v0.yyyy, cb3[13].xyzw
  44: mad r0.xyzw, cb3[12].xyzw, v0.xxxx, r0.xyzw
  45: mad r0.xyzw, cb3[14].xyzw, v0.zzzz, r0.xyzw
  46: mad r0.xyzw, cb3[15].xyzw, v0.wwww, r0.xyzw
  47: mul r1.xyz, r0.yyyy, cb0[16].xyzx
  48: mad r1.xyz, cb0[15].xyzx, r0.xxxx, r1.xyzx
  49: mad r0.xyz, cb0[17].xyzx, r0.zzzz, r1.xyzx
  50: mad o6.xyz, cb0[18].xyzx, r0.wwww, r0.xyzx
  51: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
// Stats: 94 math, 1 textures, 2 branches
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "_ALPHABLEND_ON" }
"#version 120

#ifdef VERTEX
uniform vec3 _WorldSpaceCameraPos;
uniform vec4 _WorldSpaceLightPos0;

uniform mat4 _Object2World;
uniform mat4 _World2Object;
uniform vec4 unity_WorldTransformParams;
uniform vec4 _MainTex_ST;
uniform vec4 _DetailAlbedoMap_ST;
uniform float _UVSec;
attribute vec4 TANGENT;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
void main ()
{
  vec2 tmpvar_1;
  tmpvar_1 = gl_MultiTexCoord0.xy;
  vec2 tmpvar_2;
  tmpvar_2 = gl_MultiTexCoord1.xy;
  vec4 tmpvar_3;
  vec4 tmpvar_4;
  vec4 tmpvar_5;
  vec4 tmpvar_6;
  vec4 tmpvar_7;
  tmpvar_7 = (_Object2World * gl_Vertex);
  tmpvar_3 = (gl_ModelViewProjectionMatrix * gl_Vertex);
  vec4 texcoord_8;
  texcoord_8.xy = ((gl_MultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  vec2 tmpvar_9;
  if ((_UVSec == 0.0)) {
    tmpvar_9 = tmpvar_1;
  } else {
    tmpvar_9 = tmpvar_2;
  };
  texcoord_8.zw = ((tmpvar_9 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  vec4 v_10;
  v_10.x = _World2Object[0].x;
  v_10.y = _World2Object[1].x;
  v_10.z = _World2Object[2].x;
  v_10.w = _World2Object[3].x;
  vec4 v_11;
  v_11.x = _World2Object[0].y;
  v_11.y = _World2Object[1].y;
  v_11.z = _World2Object[2].y;
  v_11.w = _World2Object[3].y;
  vec4 v_12;
  v_12.x = _World2Object[0].z;
  v_12.y = _World2Object[1].z;
  v_12.z = _World2Object[2].z;
  v_12.w = _World2Object[3].z;
  vec3 tmpvar_13;
  tmpvar_13 = normalize(((
    (v_10.xyz * gl_Normal.x)
   + 
    (v_11.xyz * gl_Normal.y)
  ) + (v_12.xyz * gl_Normal.z)));
  mat3 tmpvar_14;
  tmpvar_14[0] = _Object2World[0].xyz;
  tmpvar_14[1] = _Object2World[1].xyz;
  tmpvar_14[2] = _Object2World[2].xyz;
  vec4 tmpvar_15;
  tmpvar_15.xyz = normalize((tmpvar_14 * TANGENT.xyz));
  tmpvar_15.w = TANGENT.w;
  vec3 tmpvar_16;
  vec3 tmpvar_17;
  tmpvar_16 = tmpvar_15.xyz;
  tmpvar_17 = (((tmpvar_13.yzx * tmpvar_15.zxy) - (tmpvar_13.zxy * tmpvar_15.yzx)) * (TANGENT.w * unity_WorldTransformParams.w));
  vec3 tmpvar_18;
  vec3 tmpvar_19;
  vec3 tmpvar_20;
  tmpvar_18.x = tmpvar_16.x;
  tmpvar_18.y = tmpvar_17.x;
  tmpvar_18.z = tmpvar_13.x;
  tmpvar_19.x = tmpvar_16.y;
  tmpvar_19.y = tmpvar_17.y;
  tmpvar_19.z = tmpvar_13.y;
  tmpvar_20.x = tmpvar_16.z;
  tmpvar_20.y = tmpvar_17.z;
  tmpvar_20.z = tmpvar_13.z;
  vec3 v_21;
  v_21.x = tmpvar_18.x;
  v_21.y = tmpvar_19.x;
  v_21.z = tmpvar_20.x;
  tmpvar_4.xyz = v_21;
  vec3 v_22;
  v_22.x = tmpvar_18.y;
  v_22.y = tmpvar_19.y;
  v_22.z = tmpvar_20.y;
  tmpvar_5.xyz = v_22;
  vec3 v_23;
  v_23.x = tmpvar_18.z;
  v_23.y = tmpvar_19.z;
  v_23.z = tmpvar_20.z;
  tmpvar_6.xyz = v_23;
  vec3 tmpvar_24;
  tmpvar_24 = (_WorldSpaceLightPos0.xyz - (tmpvar_7.xyz * _WorldSpaceLightPos0.w));
  tmpvar_4.w = tmpvar_24.x;
  tmpvar_5.w = tmpvar_24.y;
  tmpvar_6.w = tmpvar_24.z;
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = texcoord_8;
  xlv_TEXCOORD1 = (tmpvar_7.xyz - _WorldSpaceCameraPos);
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
}


#endif
#ifdef FRAGMENT
uniform vec4 unity_ColorSpaceDielectricSpec;
uniform vec4 unity_ColorSpaceLuminance;
uniform vec4 _LightColor0;
uniform vec4 _Color;
uniform sampler2D _MainTex;
uniform float _Metallic;
uniform float _Glossiness;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
void main ()
{
  float tmpvar_1;
  vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  tmpvar_1 = (tmpvar_2.w * _Color.w);
  vec3 tmpvar_3;
  tmpvar_3 = (_Color.xyz * tmpvar_2.xyz);
  vec3 tmpvar_4;
  vec3 tmpvar_5;
  tmpvar_5 = mix (unity_ColorSpaceDielectricSpec.xyz, tmpvar_3, vec3(_Metallic));
  tmpvar_4 = (tmpvar_3 * (unity_ColorSpaceDielectricSpec.w - (_Metallic * unity_ColorSpaceDielectricSpec.w)));
  vec3 tmpvar_6;
  tmpvar_6 = normalize(xlv_TEXCOORD2_2.xyz);
  vec3 tmpvar_7;
  tmpvar_7.x = xlv_TEXCOORD2.w;
  tmpvar_7.y = xlv_TEXCOORD2_1.w;
  tmpvar_7.z = xlv_TEXCOORD2_2.w;
  vec3 viewDir_8;
  viewDir_8 = -(normalize(xlv_TEXCOORD1));
  float specularTerm_9;
  float tmpvar_10;
  tmpvar_10 = (1.0 - _Glossiness);
  vec3 tmpvar_11;
  vec3 inVec_12;
  inVec_12 = (tmpvar_7 + viewDir_8);
  tmpvar_11 = (inVec_12 * inversesqrt(max (0.001, 
    dot (inVec_12, inVec_12)
  )));
  float tmpvar_13;
  tmpvar_13 = dot (tmpvar_6, viewDir_8);
  vec3 tmpvar_14;
  if ((tmpvar_13 < 0.0)) {
    tmpvar_14 = (tmpvar_6 + (viewDir_8 * (
      -(tmpvar_13)
     + 1e-05)));
  } else {
    tmpvar_14 = tmpvar_6;
  };
  float tmpvar_15;
  tmpvar_15 = max (0.0, dot (tmpvar_14, tmpvar_7));
  float tmpvar_16;
  tmpvar_16 = max (0.0, dot (tmpvar_14, tmpvar_11));
  float tmpvar_17;
  tmpvar_17 = max (0.0, dot (tmpvar_14, viewDir_8));
  float tmpvar_18;
  tmpvar_18 = max (0.0, dot (tmpvar_7, tmpvar_11));
  float tmpvar_19;
  tmpvar_19 = (tmpvar_10 * tmpvar_10);
  float tmpvar_20;
  tmpvar_20 = (tmpvar_10 * tmpvar_10);
  float tmpvar_21;
  tmpvar_21 = (tmpvar_20 * tmpvar_20);
  float tmpvar_22;
  tmpvar_22 = (((tmpvar_16 * tmpvar_16) * (tmpvar_21 - 1.0)) + 1.0);
  float x_23;
  x_23 = (1.0 - tmpvar_15);
  float x_24;
  x_24 = (1.0 - tmpvar_17);
  float tmpvar_25;
  tmpvar_25 = (0.5 + ((2.0 * tmpvar_18) * (tmpvar_18 * tmpvar_10)));
  float tmpvar_26;
  tmpvar_26 = ((1.0 + (
    (tmpvar_25 - 1.0)
   * 
    ((x_23 * x_23) * ((x_23 * x_23) * x_23))
  )) * (1.0 + (
    (tmpvar_25 - 1.0)
   * 
    ((x_24 * x_24) * ((x_24 * x_24) * x_24))
  )));
  float tmpvar_27;
  tmpvar_27 = (((2.0 / 
    (((tmpvar_15 * (
      (tmpvar_17 * (1.0 - tmpvar_19))
     + tmpvar_19)) + (tmpvar_17 * (
      (tmpvar_15 * (1.0 - tmpvar_19))
     + tmpvar_19))) + 1e-05)
  ) * (tmpvar_21 / 
    (((3.141593 * tmpvar_22) * tmpvar_22) + 1e-07)
  )) * 0.7853982);
  specularTerm_9 = tmpvar_27;
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    specularTerm_9 = sqrt(max (0.0001, tmpvar_27));
  };
  float tmpvar_28;
  tmpvar_28 = max (0.0, (specularTerm_9 * tmpvar_15));
  specularTerm_9 = tmpvar_28;
  float x_29;
  x_29 = (1.0 - tmpvar_18);
  vec4 tmpvar_30;
  tmpvar_30.w = 1.0;
  tmpvar_30.xyz = ((tmpvar_4 * (_LightColor0.xyz * 
    (tmpvar_26 * tmpvar_15)
  )) + ((tmpvar_28 * _LightColor0.xyz) * (tmpvar_5 + 
    ((1.0 - tmpvar_5) * ((x_29 * x_29) * ((x_29 * x_29) * x_29)))
  )));
  vec4 xlat_varoutput_31;
  xlat_varoutput_31.xyz = tmpvar_30.xyz;
  xlat_varoutput_31.w = tmpvar_1;
  gl_FragData[0] = xlat_varoutput_31;
}


#endif
"
}
SubProgram "d3d9 " {
// Stats: 37 math
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "_ALPHABLEND_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
Matrix 4 [_Object2World] 3
Matrix 7 [_World2Object] 3
Matrix 0 [glstate_matrix_mvp]
Vector 14 [_DetailAlbedoMap_ST]
Vector 13 [_MainTex_ST]
Float 15 [_UVSec]
Vector 10 [_WorldSpaceCameraPos]
Vector 11 [_WorldSpaceLightPos0]
Vector 12 [unity_WorldTransformParams]
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   row_major float4x4 _Object2World;
//   float _UVSec;
//   row_major float4x4 _World2Object;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 glstate_matrix_mvp;
//   float4 unity_WorldTransformParams;
//
//
// Registers:
//
//   Name                       Reg   Size
//   -------------------------- ----- ----
//   glstate_matrix_mvp         c0       4
//   _Object2World              c4       3
//   _World2Object              c7       3
//   _WorldSpaceCameraPos       c10      1
//   _WorldSpaceLightPos0       c11      1
//   unity_WorldTransformParams c12      1
//   _MainTex_ST                c13      1
//   _DetailAlbedoMap_ST        c14      1
//   _UVSec                     c15      1
//

    vs_3_0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_tangent v4
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dp4 o0.x, c0, v0
    dp4 o0.y, c1, v0
    dp4 o0.z, c2, v0
    dp4 o0.w, c3, v0
    mad o1.xy, v2, c13, c13.zwzw
    abs r0.x, c15.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c14.xyxy, c14
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add o2.xyz, r0, -c10
    mad r0.xyz, r0, -c11.w, c11
    mul r1.xyz, c8, v1.y
    mad r1.xyz, c7, v1.x, r1
    mad r1.xyz, c9, v1.z, r1
    nrm r2.xyz, r1
    dp3 r1.x, c4, v4
    dp3 r1.y, c5, v4
    dp3 r1.z, c6, v4
    nrm r3.xyz, r1
    mul r1.xyz, r2.zxyw, r3.yzxw
    mad r1.xyz, r2.yzxw, r3.zxyw, -r1
    mov o5.xyz, r2
    mov o3.xyz, r3
    mul r0.w, c12.w, v4.w
    mul o4.xyz, r0.w, r1
    mov o3.w, r0.x
    mov o4.w, r0.y
    mov o5.w, r0.z

// approximately 36 instruction slots used
"
}
SubProgram "d3d11 " {
// Stats: 37 math
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "_ALPHABLEND_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
ConstBuffer "$Globals" 240
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
Vector 336 [unity_WorldTransformParams]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer cb0[14], immediateIndexed
      dcl_constantbuffer cb1[5], immediateIndexed
      dcl_constantbuffer cb2[1], immediateIndexed
      dcl_constantbuffer cb3[22], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: mad o0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   4: eq r0.x, cb0[13].z, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[11].xxxy, cb0[11].zzzw
   7: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  13: mad r0.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  14: mov o3.w, r0.x
  15: mul r1.xyz, v4.yyyy, cb3[13].xyzx
  16: mad r1.xyz, cb3[12].xyzx, v4.xxxx, r1.xyzx
  17: mad r1.xyz, cb3[14].xyzx, v4.zzzz, r1.xyzx
  18: dp3 r0.x, r1.xyzx, r1.xyzx
  19: rsq r0.x, r0.x
  20: mul r1.xyz, r0.xxxx, r1.xyzx
  21: mov o3.xyz, r1.xyzx
  22: mul r2.x, v1.x, cb3[16].x
  23: mul r2.y, v1.x, cb3[17].x
  24: mul r2.z, v1.x, cb3[18].x
  25: mul r3.x, v1.y, cb3[16].y
  26: mul r3.y, v1.y, cb3[17].y
  27: mul r3.z, v1.y, cb3[18].y
  28: add r2.xyz, r2.xyzx, r3.xyzx
  29: mul r3.x, v1.z, cb3[16].z
  30: mul r3.y, v1.z, cb3[17].z
  31: mul r3.z, v1.z, cb3[18].z
  32: add r2.xyz, r2.xyzx, r3.xyzx
  33: dp3 r0.x, r2.xyzx, r2.xyzx
  34: rsq r0.x, r0.x
  35: mul r2.xyz, r0.xxxx, r2.xyzx
  36: mul r3.xyz, r1.yzxy, r2.zxyz
  37: mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
  38: mov o5.xyz, r2.xyzx
  39: mul r0.x, v4.w, cb3[21].w
  40: mul o4.xyz, r0.xxxx, r1.xyzx
  41: mov o4.w, r0.y
  42: mov o5.w, r0.z
  43: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
// Stats: 103 math, 3 textures, 2 branches
Keywords { "SPOT" "SHADOWS_OFF" "_ALPHABLEND_ON" }
"#version 120

#ifdef VERTEX
uniform vec3 _WorldSpaceCameraPos;
uniform vec4 _WorldSpaceLightPos0;

uniform mat4 _Object2World;
uniform mat4 _World2Object;
uniform vec4 unity_WorldTransformParams;
uniform vec4 _MainTex_ST;
uniform vec4 _DetailAlbedoMap_ST;
uniform float _UVSec;
uniform mat4 _LightMatrix0;
attribute vec4 TANGENT;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
void main ()
{
  vec2 tmpvar_1;
  tmpvar_1 = gl_MultiTexCoord0.xy;
  vec2 tmpvar_2;
  tmpvar_2 = gl_MultiTexCoord1.xy;
  vec4 tmpvar_3;
  vec4 tmpvar_4;
  vec4 tmpvar_5;
  vec4 tmpvar_6;
  vec4 tmpvar_7;
  tmpvar_7 = (_Object2World * gl_Vertex);
  tmpvar_3 = (gl_ModelViewProjectionMatrix * gl_Vertex);
  vec4 texcoord_8;
  texcoord_8.xy = ((gl_MultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  vec2 tmpvar_9;
  if ((_UVSec == 0.0)) {
    tmpvar_9 = tmpvar_1;
  } else {
    tmpvar_9 = tmpvar_2;
  };
  texcoord_8.zw = ((tmpvar_9 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  vec4 v_10;
  v_10.x = _World2Object[0].x;
  v_10.y = _World2Object[1].x;
  v_10.z = _World2Object[2].x;
  v_10.w = _World2Object[3].x;
  vec4 v_11;
  v_11.x = _World2Object[0].y;
  v_11.y = _World2Object[1].y;
  v_11.z = _World2Object[2].y;
  v_11.w = _World2Object[3].y;
  vec4 v_12;
  v_12.x = _World2Object[0].z;
  v_12.y = _World2Object[1].z;
  v_12.z = _World2Object[2].z;
  v_12.w = _World2Object[3].z;
  vec3 tmpvar_13;
  tmpvar_13 = normalize(((
    (v_10.xyz * gl_Normal.x)
   + 
    (v_11.xyz * gl_Normal.y)
  ) + (v_12.xyz * gl_Normal.z)));
  mat3 tmpvar_14;
  tmpvar_14[0] = _Object2World[0].xyz;
  tmpvar_14[1] = _Object2World[1].xyz;
  tmpvar_14[2] = _Object2World[2].xyz;
  vec4 tmpvar_15;
  tmpvar_15.xyz = normalize((tmpvar_14 * TANGENT.xyz));
  tmpvar_15.w = TANGENT.w;
  vec3 tmpvar_16;
  vec3 tmpvar_17;
  tmpvar_16 = tmpvar_15.xyz;
  tmpvar_17 = (((tmpvar_13.yzx * tmpvar_15.zxy) - (tmpvar_13.zxy * tmpvar_15.yzx)) * (TANGENT.w * unity_WorldTransformParams.w));
  vec3 tmpvar_18;
  vec3 tmpvar_19;
  vec3 tmpvar_20;
  tmpvar_18.x = tmpvar_16.x;
  tmpvar_18.y = tmpvar_17.x;
  tmpvar_18.z = tmpvar_13.x;
  tmpvar_19.x = tmpvar_16.y;
  tmpvar_19.y = tmpvar_17.y;
  tmpvar_19.z = tmpvar_13.y;
  tmpvar_20.x = tmpvar_16.z;
  tmpvar_20.y = tmpvar_17.z;
  tmpvar_20.z = tmpvar_13.z;
  vec3 v_21;
  v_21.x = tmpvar_18.x;
  v_21.y = tmpvar_19.x;
  v_21.z = tmpvar_20.x;
  tmpvar_4.xyz = v_21;
  vec3 v_22;
  v_22.x = tmpvar_18.y;
  v_22.y = tmpvar_19.y;
  v_22.z = tmpvar_20.y;
  tmpvar_5.xyz = v_22;
  vec3 v_23;
  v_23.x = tmpvar_18.z;
  v_23.y = tmpvar_19.z;
  v_23.z = tmpvar_20.z;
  tmpvar_6.xyz = v_23;
  vec3 tmpvar_24;
  tmpvar_24 = (_WorldSpaceLightPos0.xyz - (tmpvar_7.xyz * _WorldSpaceLightPos0.w));
  tmpvar_4.w = tmpvar_24.x;
  tmpvar_5.w = tmpvar_24.y;
  tmpvar_6.w = tmpvar_24.z;
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = texcoord_8;
  xlv_TEXCOORD1 = (tmpvar_7.xyz - _WorldSpaceCameraPos);
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  xlv_TEXCOORD5 = (_LightMatrix0 * (_Object2World * gl_Vertex));
}


#endif
#ifdef FRAGMENT
uniform vec4 unity_ColorSpaceDielectricSpec;
uniform vec4 unity_ColorSpaceLuminance;
uniform vec4 _LightColor0;
uniform vec4 _Color;
uniform sampler2D _MainTex;
uniform float _Metallic;
uniform float _Glossiness;
uniform sampler2D _LightTexture0;
uniform sampler2D _LightTextureB0;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
void main ()
{
  float tmpvar_1;
  vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  tmpvar_1 = (tmpvar_2.w * _Color.w);
  vec3 tmpvar_3;
  tmpvar_3 = (_Color.xyz * tmpvar_2.xyz);
  vec3 tmpvar_4;
  vec3 tmpvar_5;
  tmpvar_5 = mix (unity_ColorSpaceDielectricSpec.xyz, tmpvar_3, vec3(_Metallic));
  tmpvar_4 = (tmpvar_3 * (unity_ColorSpaceDielectricSpec.w - (_Metallic * unity_ColorSpaceDielectricSpec.w)));
  vec3 tmpvar_6;
  tmpvar_6 = normalize(xlv_TEXCOORD2_2.xyz);
  vec3 tmpvar_7;
  tmpvar_7.x = xlv_TEXCOORD2.w;
  tmpvar_7.y = xlv_TEXCOORD2_1.w;
  tmpvar_7.z = xlv_TEXCOORD2_2.w;
  vec3 tmpvar_8;
  vec3 tmpvar_9;
  tmpvar_9 = normalize(tmpvar_7);
  tmpvar_8 = (_LightColor0.xyz * ((
    float((xlv_TEXCOORD5.z > 0.0))
   * texture2D (_LightTexture0, 
    ((xlv_TEXCOORD5.xy / xlv_TEXCOORD5.w) + 0.5)
  ).w) * texture2D (_LightTextureB0, vec2(dot (xlv_TEXCOORD5.xyz, xlv_TEXCOORD5.xyz))).w));
  vec3 viewDir_10;
  viewDir_10 = -(normalize(xlv_TEXCOORD1));
  float specularTerm_11;
  float tmpvar_12;
  tmpvar_12 = (1.0 - _Glossiness);
  vec3 tmpvar_13;
  vec3 inVec_14;
  inVec_14 = (tmpvar_9 + viewDir_10);
  tmpvar_13 = (inVec_14 * inversesqrt(max (0.001, 
    dot (inVec_14, inVec_14)
  )));
  float tmpvar_15;
  tmpvar_15 = dot (tmpvar_6, viewDir_10);
  vec3 tmpvar_16;
  if ((tmpvar_15 < 0.0)) {
    tmpvar_16 = (tmpvar_6 + (viewDir_10 * (
      -(tmpvar_15)
     + 1e-05)));
  } else {
    tmpvar_16 = tmpvar_6;
  };
  float tmpvar_17;
  tmpvar_17 = max (0.0, dot (tmpvar_16, tmpvar_9));
  float tmpvar_18;
  tmpvar_18 = max (0.0, dot (tmpvar_16, tmpvar_13));
  float tmpvar_19;
  tmpvar_19 = max (0.0, dot (tmpvar_16, viewDir_10));
  float tmpvar_20;
  tmpvar_20 = max (0.0, dot (tmpvar_9, tmpvar_13));
  float tmpvar_21;
  tmpvar_21 = (tmpvar_12 * tmpvar_12);
  float tmpvar_22;
  tmpvar_22 = (tmpvar_12 * tmpvar_12);
  float tmpvar_23;
  tmpvar_23 = (tmpvar_22 * tmpvar_22);
  float tmpvar_24;
  tmpvar_24 = (((tmpvar_18 * tmpvar_18) * (tmpvar_23 - 1.0)) + 1.0);
  float x_25;
  x_25 = (1.0 - tmpvar_17);
  float x_26;
  x_26 = (1.0 - tmpvar_19);
  float tmpvar_27;
  tmpvar_27 = (0.5 + ((2.0 * tmpvar_20) * (tmpvar_20 * tmpvar_12)));
  float tmpvar_28;
  tmpvar_28 = ((1.0 + (
    (tmpvar_27 - 1.0)
   * 
    ((x_25 * x_25) * ((x_25 * x_25) * x_25))
  )) * (1.0 + (
    (tmpvar_27 - 1.0)
   * 
    ((x_26 * x_26) * ((x_26 * x_26) * x_26))
  )));
  float tmpvar_29;
  tmpvar_29 = (((2.0 / 
    (((tmpvar_17 * (
      (tmpvar_19 * (1.0 - tmpvar_21))
     + tmpvar_21)) + (tmpvar_19 * (
      (tmpvar_17 * (1.0 - tmpvar_21))
     + tmpvar_21))) + 1e-05)
  ) * (tmpvar_23 / 
    (((3.141593 * tmpvar_24) * tmpvar_24) + 1e-07)
  )) * 0.7853982);
  specularTerm_11 = tmpvar_29;
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    specularTerm_11 = sqrt(max (0.0001, tmpvar_29));
  };
  float tmpvar_30;
  tmpvar_30 = max (0.0, (specularTerm_11 * tmpvar_17));
  specularTerm_11 = tmpvar_30;
  float x_31;
  x_31 = (1.0 - tmpvar_20);
  vec4 tmpvar_32;
  tmpvar_32.w = 1.0;
  tmpvar_32.xyz = ((tmpvar_4 * (tmpvar_8 * 
    (tmpvar_28 * tmpvar_17)
  )) + ((tmpvar_30 * tmpvar_8) * (tmpvar_5 + 
    ((1.0 - tmpvar_5) * ((x_31 * x_31) * ((x_31 * x_31) * x_31)))
  )));
  vec4 xlat_varoutput_33;
  xlat_varoutput_33.xyz = tmpvar_32.xyz;
  xlat_varoutput_33.w = tmpvar_1;
  gl_FragData[0] = xlat_varoutput_33;
}


#endif
"
}
SubProgram "d3d9 " {
// Stats: 42 math
Keywords { "SPOT" "SHADOWS_OFF" "_ALPHABLEND_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
Matrix 8 [_LightMatrix0]
Matrix 4 [_Object2World]
Matrix 12 [_World2Object] 3
Matrix 0 [glstate_matrix_mvp]
Vector 19 [_DetailAlbedoMap_ST]
Vector 18 [_MainTex_ST]
Float 20 [_UVSec]
Vector 15 [_WorldSpaceCameraPos]
Vector 16 [_WorldSpaceLightPos0]
Vector 17 [unity_WorldTransformParams]
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   row_major float4x4 _LightMatrix0;
//   float4 _MainTex_ST;
//   row_major float4x4 _Object2World;
//   float _UVSec;
//   row_major float4x4 _World2Object;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 glstate_matrix_mvp;
//   float4 unity_WorldTransformParams;
//
//
// Registers:
//
//   Name                       Reg   Size
//   -------------------------- ----- ----
//   glstate_matrix_mvp         c0       4
//   _Object2World              c4       4
//   _LightMatrix0              c8       4
//   _World2Object              c12      3
//   _WorldSpaceCameraPos       c15      1
//   _WorldSpaceLightPos0       c16      1
//   unity_WorldTransformParams c17      1
//   _MainTex_ST                c18      1
//   _DetailAlbedoMap_ST        c19      1
//   _UVSec                     c20      1
//

    vs_3_0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_tangent v4
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6
    dp4 o0.x, c0, v0
    dp4 o0.y, c1, v0
    dp4 o0.z, c2, v0
    dp4 o0.w, c3, v0
    mad o1.xy, v2, c18, c18.zwzw
    abs r0.x, c20.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c19.xyxy, c19
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add o2.xyz, r0, -c15
    mul r1.xyz, c13, v1.y
    mad r1.xyz, c12, v1.x, r1
    mad r1.xyz, c14, v1.z, r1
    nrm r2.xyz, r1
    dp3 r1.x, c4, v4
    dp3 r1.y, c5, v4
    dp3 r1.z, c6, v4
    nrm r3.xyz, r1
    mul r1.xyz, r2.zxyw, r3.yzxw
    mad r1.xyz, r2.yzxw, r3.zxyw, -r1
    mov o5.xyz, r2
    mov o3.xyz, r3
    mul r1.w, c17.w, v4.w
    mul o4.xyz, r1.w, r1
    dp4 r0.w, c7, v0
    dp4 o6.x, c8, r0
    dp4 o6.y, c9, r0
    dp4 o6.z, c10, r0
    dp4 o6.w, c11, r0
    mad r0.xyz, r0, -c16.w, c16
    mov o3.w, r0.x
    mov o4.w, r0.y
    mov o5.w, r0.z

// approximately 41 instruction slots used
"
}
SubProgram "d3d11 " {
// Stats: 45 math
Keywords { "SPOT" "SHADOWS_OFF" "_ALPHABLEND_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
ConstBuffer "$Globals" 304
Matrix 240 [_LightMatrix0]
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
Vector 336 [unity_WorldTransformParams]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer cb0[19], immediateIndexed
      dcl_constantbuffer cb1[5], immediateIndexed
      dcl_constantbuffer cb2[1], immediateIndexed
      dcl_constantbuffer cb3[22], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: mad o0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   4: eq r0.x, cb0[13].z, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[11].xxxy, cb0[11].zzzw
   7: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  13: mad r0.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  14: mov o3.w, r0.x
  15: mul r1.xyz, v4.yyyy, cb3[13].xyzx
  16: mad r1.xyz, cb3[12].xyzx, v4.xxxx, r1.xyzx
  17: mad r1.xyz, cb3[14].xyzx, v4.zzzz, r1.xyzx
  18: dp3 r0.x, r1.xyzx, r1.xyzx
  19: rsq r0.x, r0.x
  20: mul r1.xyz, r0.xxxx, r1.xyzx
  21: mov o3.xyz, r1.xyzx
  22: mul r2.x, v1.x, cb3[16].x
  23: mul r2.y, v1.x, cb3[17].x
  24: mul r2.z, v1.x, cb3[18].x
  25: mul r3.x, v1.y, cb3[16].y
  26: mul r3.y, v1.y, cb3[17].y
  27: mul r3.z, v1.y, cb3[18].y
  28: add r2.xyz, r2.xyzx, r3.xyzx
  29: mul r3.x, v1.z, cb3[16].z
  30: mul r3.y, v1.z, cb3[17].z
  31: mul r3.z, v1.z, cb3[18].z
  32: add r2.xyz, r2.xyzx, r3.xyzx
  33: dp3 r0.x, r2.xyzx, r2.xyzx
  34: rsq r0.x, r0.x
  35: mul r2.xyz, r0.xxxx, r2.xyzx
  36: mul r3.xyz, r1.yzxy, r2.zxyz
  37: mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
  38: mov o5.xyz, r2.xyzx
  39: mul r0.x, v4.w, cb3[21].w
  40: mul o4.xyz, r0.xxxx, r1.xyzx
  41: mov o4.w, r0.y
  42: mov o5.w, r0.z
  43: mul r0.xyzw, v0.yyyy, cb3[13].xyzw
  44: mad r0.xyzw, cb3[12].xyzw, v0.xxxx, r0.xyzw
  45: mad r0.xyzw, cb3[14].xyzw, v0.zzzz, r0.xyzw
  46: mad r0.xyzw, cb3[15].xyzw, v0.wwww, r0.xyzw
  47: mul r1.xyzw, r0.yyyy, cb0[16].xyzw
  48: mad r1.xyzw, cb0[15].xyzw, r0.xxxx, r1.xyzw
  49: mad r1.xyzw, cb0[17].xyzw, r0.zzzz, r1.xyzw
  50: mad o6.xyzw, cb0[18].xyzw, r0.wwww, r1.xyzw
  51: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
// Stats: 98 math, 3 textures, 2 branches
Keywords { "POINT_COOKIE" "SHADOWS_OFF" "_ALPHABLEND_ON" }
"#version 120

#ifdef VERTEX
uniform vec3 _WorldSpaceCameraPos;
uniform vec4 _WorldSpaceLightPos0;

uniform mat4 _Object2World;
uniform mat4 _World2Object;
uniform vec4 unity_WorldTransformParams;
uniform vec4 _MainTex_ST;
uniform vec4 _DetailAlbedoMap_ST;
uniform float _UVSec;
uniform mat4 _LightMatrix0;
attribute vec4 TANGENT;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec3 xlv_TEXCOORD5;
void main ()
{
  vec2 tmpvar_1;
  tmpvar_1 = gl_MultiTexCoord0.xy;
  vec2 tmpvar_2;
  tmpvar_2 = gl_MultiTexCoord1.xy;
  vec4 tmpvar_3;
  vec4 tmpvar_4;
  vec4 tmpvar_5;
  vec4 tmpvar_6;
  vec4 tmpvar_7;
  tmpvar_7 = (_Object2World * gl_Vertex);
  tmpvar_3 = (gl_ModelViewProjectionMatrix * gl_Vertex);
  vec4 texcoord_8;
  texcoord_8.xy = ((gl_MultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  vec2 tmpvar_9;
  if ((_UVSec == 0.0)) {
    tmpvar_9 = tmpvar_1;
  } else {
    tmpvar_9 = tmpvar_2;
  };
  texcoord_8.zw = ((tmpvar_9 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  vec4 v_10;
  v_10.x = _World2Object[0].x;
  v_10.y = _World2Object[1].x;
  v_10.z = _World2Object[2].x;
  v_10.w = _World2Object[3].x;
  vec4 v_11;
  v_11.x = _World2Object[0].y;
  v_11.y = _World2Object[1].y;
  v_11.z = _World2Object[2].y;
  v_11.w = _World2Object[3].y;
  vec4 v_12;
  v_12.x = _World2Object[0].z;
  v_12.y = _World2Object[1].z;
  v_12.z = _World2Object[2].z;
  v_12.w = _World2Object[3].z;
  vec3 tmpvar_13;
  tmpvar_13 = normalize(((
    (v_10.xyz * gl_Normal.x)
   + 
    (v_11.xyz * gl_Normal.y)
  ) + (v_12.xyz * gl_Normal.z)));
  mat3 tmpvar_14;
  tmpvar_14[0] = _Object2World[0].xyz;
  tmpvar_14[1] = _Object2World[1].xyz;
  tmpvar_14[2] = _Object2World[2].xyz;
  vec4 tmpvar_15;
  tmpvar_15.xyz = normalize((tmpvar_14 * TANGENT.xyz));
  tmpvar_15.w = TANGENT.w;
  vec3 tmpvar_16;
  vec3 tmpvar_17;
  tmpvar_16 = tmpvar_15.xyz;
  tmpvar_17 = (((tmpvar_13.yzx * tmpvar_15.zxy) - (tmpvar_13.zxy * tmpvar_15.yzx)) * (TANGENT.w * unity_WorldTransformParams.w));
  vec3 tmpvar_18;
  vec3 tmpvar_19;
  vec3 tmpvar_20;
  tmpvar_18.x = tmpvar_16.x;
  tmpvar_18.y = tmpvar_17.x;
  tmpvar_18.z = tmpvar_13.x;
  tmpvar_19.x = tmpvar_16.y;
  tmpvar_19.y = tmpvar_17.y;
  tmpvar_19.z = tmpvar_13.y;
  tmpvar_20.x = tmpvar_16.z;
  tmpvar_20.y = tmpvar_17.z;
  tmpvar_20.z = tmpvar_13.z;
  vec3 v_21;
  v_21.x = tmpvar_18.x;
  v_21.y = tmpvar_19.x;
  v_21.z = tmpvar_20.x;
  tmpvar_4.xyz = v_21;
  vec3 v_22;
  v_22.x = tmpvar_18.y;
  v_22.y = tmpvar_19.y;
  v_22.z = tmpvar_20.y;
  tmpvar_5.xyz = v_22;
  vec3 v_23;
  v_23.x = tmpvar_18.z;
  v_23.y = tmpvar_19.z;
  v_23.z = tmpvar_20.z;
  tmpvar_6.xyz = v_23;
  vec3 tmpvar_24;
  tmpvar_24 = (_WorldSpaceLightPos0.xyz - (tmpvar_7.xyz * _WorldSpaceLightPos0.w));
  tmpvar_4.w = tmpvar_24.x;
  tmpvar_5.w = tmpvar_24.y;
  tmpvar_6.w = tmpvar_24.z;
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = texcoord_8;
  xlv_TEXCOORD1 = (tmpvar_7.xyz - _WorldSpaceCameraPos);
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  xlv_TEXCOORD5 = (_LightMatrix0 * (_Object2World * gl_Vertex)).xyz;
}


#endif
#ifdef FRAGMENT
uniform vec4 unity_ColorSpaceDielectricSpec;
uniform vec4 unity_ColorSpaceLuminance;
uniform vec4 _LightColor0;
uniform vec4 _Color;
uniform sampler2D _MainTex;
uniform float _Metallic;
uniform float _Glossiness;
uniform samplerCube _LightTexture0;
uniform sampler2D _LightTextureB0;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec3 xlv_TEXCOORD5;
void main ()
{
  float tmpvar_1;
  vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  tmpvar_1 = (tmpvar_2.w * _Color.w);
  vec3 tmpvar_3;
  tmpvar_3 = (_Color.xyz * tmpvar_2.xyz);
  vec3 tmpvar_4;
  vec3 tmpvar_5;
  tmpvar_5 = mix (unity_ColorSpaceDielectricSpec.xyz, tmpvar_3, vec3(_Metallic));
  tmpvar_4 = (tmpvar_3 * (unity_ColorSpaceDielectricSpec.w - (_Metallic * unity_ColorSpaceDielectricSpec.w)));
  vec3 tmpvar_6;
  tmpvar_6 = normalize(xlv_TEXCOORD2_2.xyz);
  vec3 tmpvar_7;
  tmpvar_7.x = xlv_TEXCOORD2.w;
  tmpvar_7.y = xlv_TEXCOORD2_1.w;
  tmpvar_7.z = xlv_TEXCOORD2_2.w;
  vec3 tmpvar_8;
  vec3 tmpvar_9;
  tmpvar_9 = normalize(tmpvar_7);
  tmpvar_8 = (_LightColor0.xyz * (texture2D (_LightTextureB0, vec2(dot (xlv_TEXCOORD5, xlv_TEXCOORD5))).w * textureCube (_LightTexture0, xlv_TEXCOORD5).w));
  vec3 viewDir_10;
  viewDir_10 = -(normalize(xlv_TEXCOORD1));
  float specularTerm_11;
  float tmpvar_12;
  tmpvar_12 = (1.0 - _Glossiness);
  vec3 tmpvar_13;
  vec3 inVec_14;
  inVec_14 = (tmpvar_9 + viewDir_10);
  tmpvar_13 = (inVec_14 * inversesqrt(max (0.001, 
    dot (inVec_14, inVec_14)
  )));
  float tmpvar_15;
  tmpvar_15 = dot (tmpvar_6, viewDir_10);
  vec3 tmpvar_16;
  if ((tmpvar_15 < 0.0)) {
    tmpvar_16 = (tmpvar_6 + (viewDir_10 * (
      -(tmpvar_15)
     + 1e-05)));
  } else {
    tmpvar_16 = tmpvar_6;
  };
  float tmpvar_17;
  tmpvar_17 = max (0.0, dot (tmpvar_16, tmpvar_9));
  float tmpvar_18;
  tmpvar_18 = max (0.0, dot (tmpvar_16, tmpvar_13));
  float tmpvar_19;
  tmpvar_19 = max (0.0, dot (tmpvar_16, viewDir_10));
  float tmpvar_20;
  tmpvar_20 = max (0.0, dot (tmpvar_9, tmpvar_13));
  float tmpvar_21;
  tmpvar_21 = (tmpvar_12 * tmpvar_12);
  float tmpvar_22;
  tmpvar_22 = (tmpvar_12 * tmpvar_12);
  float tmpvar_23;
  tmpvar_23 = (tmpvar_22 * tmpvar_22);
  float tmpvar_24;
  tmpvar_24 = (((tmpvar_18 * tmpvar_18) * (tmpvar_23 - 1.0)) + 1.0);
  float x_25;
  x_25 = (1.0 - tmpvar_17);
  float x_26;
  x_26 = (1.0 - tmpvar_19);
  float tmpvar_27;
  tmpvar_27 = (0.5 + ((2.0 * tmpvar_20) * (tmpvar_20 * tmpvar_12)));
  float tmpvar_28;
  tmpvar_28 = ((1.0 + (
    (tmpvar_27 - 1.0)
   * 
    ((x_25 * x_25) * ((x_25 * x_25) * x_25))
  )) * (1.0 + (
    (tmpvar_27 - 1.0)
   * 
    ((x_26 * x_26) * ((x_26 * x_26) * x_26))
  )));
  float tmpvar_29;
  tmpvar_29 = (((2.0 / 
    (((tmpvar_17 * (
      (tmpvar_19 * (1.0 - tmpvar_21))
     + tmpvar_21)) + (tmpvar_19 * (
      (tmpvar_17 * (1.0 - tmpvar_21))
     + tmpvar_21))) + 1e-05)
  ) * (tmpvar_23 / 
    (((3.141593 * tmpvar_24) * tmpvar_24) + 1e-07)
  )) * 0.7853982);
  specularTerm_11 = tmpvar_29;
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    specularTerm_11 = sqrt(max (0.0001, tmpvar_29));
  };
  float tmpvar_30;
  tmpvar_30 = max (0.0, (specularTerm_11 * tmpvar_17));
  specularTerm_11 = tmpvar_30;
  float x_31;
  x_31 = (1.0 - tmpvar_20);
  vec4 tmpvar_32;
  tmpvar_32.w = 1.0;
  tmpvar_32.xyz = ((tmpvar_4 * (tmpvar_8 * 
    (tmpvar_28 * tmpvar_17)
  )) + ((tmpvar_30 * tmpvar_8) * (tmpvar_5 + 
    ((1.0 - tmpvar_5) * ((x_31 * x_31) * ((x_31 * x_31) * x_31)))
  )));
  vec4 xlat_varoutput_33;
  xlat_varoutput_33.xyz = tmpvar_32.xyz;
  xlat_varoutput_33.w = tmpvar_1;
  gl_FragData[0] = xlat_varoutput_33;
}


#endif
"
}
SubProgram "d3d9 " {
// Stats: 41 math
Keywords { "POINT_COOKIE" "SHADOWS_OFF" "_ALPHABLEND_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
Matrix 11 [_LightMatrix0] 3
Matrix 4 [_Object2World]
Matrix 8 [_World2Object] 3
Matrix 0 [glstate_matrix_mvp]
Vector 18 [_DetailAlbedoMap_ST]
Vector 17 [_MainTex_ST]
Float 19 [_UVSec]
Vector 14 [_WorldSpaceCameraPos]
Vector 15 [_WorldSpaceLightPos0]
Vector 16 [unity_WorldTransformParams]
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   row_major float4x4 _LightMatrix0;
//   float4 _MainTex_ST;
//   row_major float4x4 _Object2World;
//   float _UVSec;
//   row_major float4x4 _World2Object;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 glstate_matrix_mvp;
//   float4 unity_WorldTransformParams;
//
//
// Registers:
//
//   Name                       Reg   Size
//   -------------------------- ----- ----
//   glstate_matrix_mvp         c0       4
//   _Object2World              c4       4
//   _World2Object              c8       3
//   _LightMatrix0              c11      3
//   _WorldSpaceCameraPos       c14      1
//   _WorldSpaceLightPos0       c15      1
//   unity_WorldTransformParams c16      1
//   _MainTex_ST                c17      1
//   _DetailAlbedoMap_ST        c18      1
//   _UVSec                     c19      1
//

    vs_3_0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_tangent v4
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6.xyz
    dp4 o0.x, c0, v0
    dp4 o0.y, c1, v0
    dp4 o0.z, c2, v0
    dp4 o0.w, c3, v0
    mad o1.xy, v2, c17, c17.zwzw
    abs r0.x, c19.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c18.xyxy, c18
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add o2.xyz, r0, -c14
    mul r1.xyz, c9, v1.y
    mad r1.xyz, c8, v1.x, r1
    mad r1.xyz, c10, v1.z, r1
    nrm r2.xyz, r1
    dp3 r1.x, c4, v4
    dp3 r1.y, c5, v4
    dp3 r1.z, c6, v4
    nrm r3.xyz, r1
    mul r1.xyz, r2.zxyw, r3.yzxw
    mad r1.xyz, r2.yzxw, r3.zxyw, -r1
    mov o5.xyz, r2
    mov o3.xyz, r3
    mul r1.w, c16.w, v4.w
    mul o4.xyz, r1.w, r1
    dp4 r0.w, c7, v0
    dp4 o6.x, c11, r0
    dp4 o6.y, c12, r0
    dp4 o6.z, c13, r0
    mad r0.xyz, r0, -c15.w, c15
    mov o3.w, r0.x
    mov o4.w, r0.y
    mov o5.w, r0.z

// approximately 40 instruction slots used
"
}
SubProgram "d3d11 " {
// Stats: 45 math
Keywords { "POINT_COOKIE" "SHADOWS_OFF" "_ALPHABLEND_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
ConstBuffer "$Globals" 304
Matrix 240 [_LightMatrix0]
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
Vector 336 [unity_WorldTransformParams]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer cb0[19], immediateIndexed
      dcl_constantbuffer cb1[5], immediateIndexed
      dcl_constantbuffer cb2[1], immediateIndexed
      dcl_constantbuffer cb3[22], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: mad o0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   4: eq r0.x, cb0[13].z, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[11].xxxy, cb0[11].zzzw
   7: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  13: mad r0.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  14: mov o3.w, r0.x
  15: mul r1.xyz, v4.yyyy, cb3[13].xyzx
  16: mad r1.xyz, cb3[12].xyzx, v4.xxxx, r1.xyzx
  17: mad r1.xyz, cb3[14].xyzx, v4.zzzz, r1.xyzx
  18: dp3 r0.x, r1.xyzx, r1.xyzx
  19: rsq r0.x, r0.x
  20: mul r1.xyz, r0.xxxx, r1.xyzx
  21: mov o3.xyz, r1.xyzx
  22: mul r2.x, v1.x, cb3[16].x
  23: mul r2.y, v1.x, cb3[17].x
  24: mul r2.z, v1.x, cb3[18].x
  25: mul r3.x, v1.y, cb3[16].y
  26: mul r3.y, v1.y, cb3[17].y
  27: mul r3.z, v1.y, cb3[18].y
  28: add r2.xyz, r2.xyzx, r3.xyzx
  29: mul r3.x, v1.z, cb3[16].z
  30: mul r3.y, v1.z, cb3[17].z
  31: mul r3.z, v1.z, cb3[18].z
  32: add r2.xyz, r2.xyzx, r3.xyzx
  33: dp3 r0.x, r2.xyzx, r2.xyzx
  34: rsq r0.x, r0.x
  35: mul r2.xyz, r0.xxxx, r2.xyzx
  36: mul r3.xyz, r1.yzxy, r2.zxyz
  37: mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
  38: mov o5.xyz, r2.xyzx
  39: mul r0.x, v4.w, cb3[21].w
  40: mul o4.xyz, r0.xxxx, r1.xyzx
  41: mov o4.w, r0.y
  42: mov o5.w, r0.z
  43: mul r0.xyzw, v0.yyyy, cb3[13].xyzw
  44: mad r0.xyzw, cb3[12].xyzw, v0.xxxx, r0.xyzw
  45: mad r0.xyzw, cb3[14].xyzw, v0.zzzz, r0.xyzw
  46: mad r0.xyzw, cb3[15].xyzw, v0.wwww, r0.xyzw
  47: mul r1.xyz, r0.yyyy, cb0[16].xyzx
  48: mad r1.xyz, cb0[15].xyzx, r0.xxxx, r1.xyzx
  49: mad r0.xyz, cb0[17].xyzx, r0.zzzz, r1.xyzx
  50: mad o6.xyz, cb0[18].xyzx, r0.wwww, r0.xyzx
  51: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
// Stats: 95 math, 2 textures, 2 branches
Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_OFF" "_ALPHABLEND_ON" }
"#version 120

#ifdef VERTEX
uniform vec3 _WorldSpaceCameraPos;
uniform vec4 _WorldSpaceLightPos0;

uniform mat4 _Object2World;
uniform mat4 _World2Object;
uniform vec4 unity_WorldTransformParams;
uniform vec4 _MainTex_ST;
uniform vec4 _DetailAlbedoMap_ST;
uniform float _UVSec;
uniform mat4 _LightMatrix0;
attribute vec4 TANGENT;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec2 xlv_TEXCOORD5;
void main ()
{
  vec2 tmpvar_1;
  tmpvar_1 = gl_MultiTexCoord0.xy;
  vec2 tmpvar_2;
  tmpvar_2 = gl_MultiTexCoord1.xy;
  vec4 tmpvar_3;
  vec4 tmpvar_4;
  vec4 tmpvar_5;
  vec4 tmpvar_6;
  vec4 tmpvar_7;
  tmpvar_7 = (_Object2World * gl_Vertex);
  tmpvar_3 = (gl_ModelViewProjectionMatrix * gl_Vertex);
  vec4 texcoord_8;
  texcoord_8.xy = ((gl_MultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  vec2 tmpvar_9;
  if ((_UVSec == 0.0)) {
    tmpvar_9 = tmpvar_1;
  } else {
    tmpvar_9 = tmpvar_2;
  };
  texcoord_8.zw = ((tmpvar_9 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  vec4 v_10;
  v_10.x = _World2Object[0].x;
  v_10.y = _World2Object[1].x;
  v_10.z = _World2Object[2].x;
  v_10.w = _World2Object[3].x;
  vec4 v_11;
  v_11.x = _World2Object[0].y;
  v_11.y = _World2Object[1].y;
  v_11.z = _World2Object[2].y;
  v_11.w = _World2Object[3].y;
  vec4 v_12;
  v_12.x = _World2Object[0].z;
  v_12.y = _World2Object[1].z;
  v_12.z = _World2Object[2].z;
  v_12.w = _World2Object[3].z;
  vec3 tmpvar_13;
  tmpvar_13 = normalize(((
    (v_10.xyz * gl_Normal.x)
   + 
    (v_11.xyz * gl_Normal.y)
  ) + (v_12.xyz * gl_Normal.z)));
  mat3 tmpvar_14;
  tmpvar_14[0] = _Object2World[0].xyz;
  tmpvar_14[1] = _Object2World[1].xyz;
  tmpvar_14[2] = _Object2World[2].xyz;
  vec4 tmpvar_15;
  tmpvar_15.xyz = normalize((tmpvar_14 * TANGENT.xyz));
  tmpvar_15.w = TANGENT.w;
  vec3 tmpvar_16;
  vec3 tmpvar_17;
  tmpvar_16 = tmpvar_15.xyz;
  tmpvar_17 = (((tmpvar_13.yzx * tmpvar_15.zxy) - (tmpvar_13.zxy * tmpvar_15.yzx)) * (TANGENT.w * unity_WorldTransformParams.w));
  vec3 tmpvar_18;
  vec3 tmpvar_19;
  vec3 tmpvar_20;
  tmpvar_18.x = tmpvar_16.x;
  tmpvar_18.y = tmpvar_17.x;
  tmpvar_18.z = tmpvar_13.x;
  tmpvar_19.x = tmpvar_16.y;
  tmpvar_19.y = tmpvar_17.y;
  tmpvar_19.z = tmpvar_13.y;
  tmpvar_20.x = tmpvar_16.z;
  tmpvar_20.y = tmpvar_17.z;
  tmpvar_20.z = tmpvar_13.z;
  vec3 v_21;
  v_21.x = tmpvar_18.x;
  v_21.y = tmpvar_19.x;
  v_21.z = tmpvar_20.x;
  tmpvar_4.xyz = v_21;
  vec3 v_22;
  v_22.x = tmpvar_18.y;
  v_22.y = tmpvar_19.y;
  v_22.z = tmpvar_20.y;
  tmpvar_5.xyz = v_22;
  vec3 v_23;
  v_23.x = tmpvar_18.z;
  v_23.y = tmpvar_19.z;
  v_23.z = tmpvar_20.z;
  tmpvar_6.xyz = v_23;
  vec3 tmpvar_24;
  tmpvar_24 = (_WorldSpaceLightPos0.xyz - (tmpvar_7.xyz * _WorldSpaceLightPos0.w));
  tmpvar_4.w = tmpvar_24.x;
  tmpvar_5.w = tmpvar_24.y;
  tmpvar_6.w = tmpvar_24.z;
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = texcoord_8;
  xlv_TEXCOORD1 = (tmpvar_7.xyz - _WorldSpaceCameraPos);
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  xlv_TEXCOORD5 = (_LightMatrix0 * (_Object2World * gl_Vertex)).xy;
}


#endif
#ifdef FRAGMENT
uniform vec4 unity_ColorSpaceDielectricSpec;
uniform vec4 unity_ColorSpaceLuminance;
uniform vec4 _LightColor0;
uniform vec4 _Color;
uniform sampler2D _MainTex;
uniform float _Metallic;
uniform float _Glossiness;
uniform sampler2D _LightTexture0;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec2 xlv_TEXCOORD5;
void main ()
{
  float tmpvar_1;
  vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  tmpvar_1 = (tmpvar_2.w * _Color.w);
  vec3 tmpvar_3;
  tmpvar_3 = (_Color.xyz * tmpvar_2.xyz);
  vec3 tmpvar_4;
  vec3 tmpvar_5;
  tmpvar_5 = mix (unity_ColorSpaceDielectricSpec.xyz, tmpvar_3, vec3(_Metallic));
  tmpvar_4 = (tmpvar_3 * (unity_ColorSpaceDielectricSpec.w - (_Metallic * unity_ColorSpaceDielectricSpec.w)));
  vec3 tmpvar_6;
  tmpvar_6 = normalize(xlv_TEXCOORD2_2.xyz);
  vec3 tmpvar_7;
  tmpvar_7.x = xlv_TEXCOORD2.w;
  tmpvar_7.y = xlv_TEXCOORD2_1.w;
  tmpvar_7.z = xlv_TEXCOORD2_2.w;
  vec3 tmpvar_8;
  tmpvar_8 = (_LightColor0.xyz * texture2D (_LightTexture0, xlv_TEXCOORD5).w);
  vec3 viewDir_9;
  viewDir_9 = -(normalize(xlv_TEXCOORD1));
  float specularTerm_10;
  float tmpvar_11;
  tmpvar_11 = (1.0 - _Glossiness);
  vec3 tmpvar_12;
  vec3 inVec_13;
  inVec_13 = (tmpvar_7 + viewDir_9);
  tmpvar_12 = (inVec_13 * inversesqrt(max (0.001, 
    dot (inVec_13, inVec_13)
  )));
  float tmpvar_14;
  tmpvar_14 = dot (tmpvar_6, viewDir_9);
  vec3 tmpvar_15;
  if ((tmpvar_14 < 0.0)) {
    tmpvar_15 = (tmpvar_6 + (viewDir_9 * (
      -(tmpvar_14)
     + 1e-05)));
  } else {
    tmpvar_15 = tmpvar_6;
  };
  float tmpvar_16;
  tmpvar_16 = max (0.0, dot (tmpvar_15, tmpvar_7));
  float tmpvar_17;
  tmpvar_17 = max (0.0, dot (tmpvar_15, tmpvar_12));
  float tmpvar_18;
  tmpvar_18 = max (0.0, dot (tmpvar_15, viewDir_9));
  float tmpvar_19;
  tmpvar_19 = max (0.0, dot (tmpvar_7, tmpvar_12));
  float tmpvar_20;
  tmpvar_20 = (tmpvar_11 * tmpvar_11);
  float tmpvar_21;
  tmpvar_21 = (tmpvar_11 * tmpvar_11);
  float tmpvar_22;
  tmpvar_22 = (tmpvar_21 * tmpvar_21);
  float tmpvar_23;
  tmpvar_23 = (((tmpvar_17 * tmpvar_17) * (tmpvar_22 - 1.0)) + 1.0);
  float x_24;
  x_24 = (1.0 - tmpvar_16);
  float x_25;
  x_25 = (1.0 - tmpvar_18);
  float tmpvar_26;
  tmpvar_26 = (0.5 + ((2.0 * tmpvar_19) * (tmpvar_19 * tmpvar_11)));
  float tmpvar_27;
  tmpvar_27 = ((1.0 + (
    (tmpvar_26 - 1.0)
   * 
    ((x_24 * x_24) * ((x_24 * x_24) * x_24))
  )) * (1.0 + (
    (tmpvar_26 - 1.0)
   * 
    ((x_25 * x_25) * ((x_25 * x_25) * x_25))
  )));
  float tmpvar_28;
  tmpvar_28 = (((2.0 / 
    (((tmpvar_16 * (
      (tmpvar_18 * (1.0 - tmpvar_20))
     + tmpvar_20)) + (tmpvar_18 * (
      (tmpvar_16 * (1.0 - tmpvar_20))
     + tmpvar_20))) + 1e-05)
  ) * (tmpvar_22 / 
    (((3.141593 * tmpvar_23) * tmpvar_23) + 1e-07)
  )) * 0.7853982);
  specularTerm_10 = tmpvar_28;
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    specularTerm_10 = sqrt(max (0.0001, tmpvar_28));
  };
  float tmpvar_29;
  tmpvar_29 = max (0.0, (specularTerm_10 * tmpvar_16));
  specularTerm_10 = tmpvar_29;
  float x_30;
  x_30 = (1.0 - tmpvar_19);
  vec4 tmpvar_31;
  tmpvar_31.w = 1.0;
  tmpvar_31.xyz = ((tmpvar_4 * (tmpvar_8 * 
    (tmpvar_27 * tmpvar_16)
  )) + ((tmpvar_29 * tmpvar_8) * (tmpvar_5 + 
    ((1.0 - tmpvar_5) * ((x_30 * x_30) * ((x_30 * x_30) * x_30)))
  )));
  vec4 xlat_varoutput_32;
  xlat_varoutput_32.xyz = tmpvar_31.xyz;
  xlat_varoutput_32.w = tmpvar_1;
  gl_FragData[0] = xlat_varoutput_32;
}


#endif
"
}
SubProgram "d3d9 " {
// Stats: 40 math
Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_OFF" "_ALPHABLEND_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
Matrix 11 [_LightMatrix0] 2
Matrix 4 [_Object2World]
Matrix 8 [_World2Object] 3
Matrix 0 [glstate_matrix_mvp]
Vector 17 [_DetailAlbedoMap_ST]
Vector 16 [_MainTex_ST]
Float 18 [_UVSec]
Vector 13 [_WorldSpaceCameraPos]
Vector 14 [_WorldSpaceLightPos0]
Vector 15 [unity_WorldTransformParams]
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   row_major float4x4 _LightMatrix0;
//   float4 _MainTex_ST;
//   row_major float4x4 _Object2World;
//   float _UVSec;
//   row_major float4x4 _World2Object;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 glstate_matrix_mvp;
//   float4 unity_WorldTransformParams;
//
//
// Registers:
//
//   Name                       Reg   Size
//   -------------------------- ----- ----
//   glstate_matrix_mvp         c0       4
//   _Object2World              c4       4
//   _World2Object              c8       3
//   _LightMatrix0              c11      2
//   _WorldSpaceCameraPos       c13      1
//   _WorldSpaceLightPos0       c14      1
//   unity_WorldTransformParams c15      1
//   _MainTex_ST                c16      1
//   _DetailAlbedoMap_ST        c17      1
//   _UVSec                     c18      1
//

    vs_3_0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_tangent v4
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6.xy
    dp4 o0.x, c0, v0
    dp4 o0.y, c1, v0
    dp4 o0.z, c2, v0
    dp4 o0.w, c3, v0
    mad o1.xy, v2, c16, c16.zwzw
    abs r0.x, c18.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c17.xyxy, c17
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add o2.xyz, r0, -c13
    mul r1.xyz, c9, v1.y
    mad r1.xyz, c8, v1.x, r1
    mad r1.xyz, c10, v1.z, r1
    nrm r2.xyz, r1
    dp3 r1.x, c4, v4
    dp3 r1.y, c5, v4
    dp3 r1.z, c6, v4
    nrm r3.xyz, r1
    mul r1.xyz, r2.zxyw, r3.yzxw
    mad r1.xyz, r2.yzxw, r3.zxyw, -r1
    mov o5.xyz, r2
    mov o3.xyz, r3
    mul r1.w, c15.w, v4.w
    mul o4.xyz, r1.w, r1
    dp4 r0.w, c7, v0
    dp4 o6.x, c11, r0
    dp4 o6.y, c12, r0
    mad r0.xyz, r0, -c14.w, c14
    mov o3.w, r0.x
    mov o4.w, r0.y
    mov o5.w, r0.z

// approximately 39 instruction slots used
"
}
SubProgram "d3d11 " {
// Stats: 45 math
Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_OFF" "_ALPHABLEND_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
ConstBuffer "$Globals" 304
Matrix 240 [_LightMatrix0]
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
Vector 336 [unity_WorldTransformParams]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xy          6     NONE   float   xy  
//
      vs_4_0
      dcl_constantbuffer cb0[19], immediateIndexed
      dcl_constantbuffer cb1[5], immediateIndexed
      dcl_constantbuffer cb2[1], immediateIndexed
      dcl_constantbuffer cb3[22], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xy
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: mad o0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   4: eq r0.x, cb0[13].z, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[11].xxxy, cb0[11].zzzw
   7: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  13: mad r0.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  14: mov o3.w, r0.x
  15: mul r1.xyz, v4.yyyy, cb3[13].xyzx
  16: mad r1.xyz, cb3[12].xyzx, v4.xxxx, r1.xyzx
  17: mad r1.xyz, cb3[14].xyzx, v4.zzzz, r1.xyzx
  18: dp3 r0.x, r1.xyzx, r1.xyzx
  19: rsq r0.x, r0.x
  20: mul r1.xyz, r0.xxxx, r1.xyzx
  21: mov o3.xyz, r1.xyzx
  22: mul r2.x, v1.x, cb3[16].x
  23: mul r2.y, v1.x, cb3[17].x
  24: mul r2.z, v1.x, cb3[18].x
  25: mul r3.x, v1.y, cb3[16].y
  26: mul r3.y, v1.y, cb3[17].y
  27: mul r3.z, v1.y, cb3[18].y
  28: add r2.xyz, r2.xyzx, r3.xyzx
  29: mul r3.x, v1.z, cb3[16].z
  30: mul r3.y, v1.z, cb3[17].z
  31: mul r3.z, v1.z, cb3[18].z
  32: add r2.xyz, r2.xyzx, r3.xyzx
  33: dp3 r0.x, r2.xyzx, r2.xyzx
  34: rsq r0.x, r0.x
  35: mul r2.xyz, r0.xxxx, r2.xyzx
  36: mul r3.xyz, r1.yzxy, r2.zxyz
  37: mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
  38: mov o5.xyz, r2.xyzx
  39: mul r0.x, v4.w, cb3[21].w
  40: mul o4.xyz, r0.xxxx, r1.xyzx
  41: mov o4.w, r0.y
  42: mov o5.w, r0.z
  43: mul r0.xyzw, v0.yyyy, cb3[13].xyzw
  44: mad r0.xyzw, cb3[12].xyzw, v0.xxxx, r0.xyzw
  45: mad r0.xyzw, cb3[14].xyzw, v0.zzzz, r0.xyzw
  46: mad r0.xyzw, cb3[15].xyzw, v0.wwww, r0.xyzw
  47: mul r1.xy, r0.yyyy, cb0[16].xyxx
  48: mad r0.xy, cb0[15].xyxx, r0.xxxx, r1.xyxx
  49: mad r0.xy, cb0[17].xyxx, r0.zzzz, r0.xyxx
  50: mad o6.xy, cb0[18].xyxx, r0.wwww, r0.xyxx
  51: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
// Stats: 107 math, 4 textures, 2 branches
Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_NATIVE" "_ALPHABLEND_ON" }
"#version 120

#ifdef VERTEX
uniform vec3 _WorldSpaceCameraPos;
uniform vec4 _WorldSpaceLightPos0;
uniform mat4 unity_World2Shadow[4];

uniform mat4 _Object2World;
uniform mat4 _World2Object;
uniform vec4 unity_WorldTransformParams;
uniform vec4 _MainTex_ST;
uniform vec4 _DetailAlbedoMap_ST;
uniform float _UVSec;
uniform mat4 _LightMatrix0;
attribute vec4 TANGENT;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
varying vec4 xlv_TEXCOORD6;
void main ()
{
  vec2 tmpvar_1;
  tmpvar_1 = gl_MultiTexCoord0.xy;
  vec2 tmpvar_2;
  tmpvar_2 = gl_MultiTexCoord1.xy;
  vec4 tmpvar_3;
  vec4 tmpvar_4;
  vec4 tmpvar_5;
  vec4 tmpvar_6;
  vec4 tmpvar_7;
  tmpvar_7 = (_Object2World * gl_Vertex);
  tmpvar_3 = (gl_ModelViewProjectionMatrix * gl_Vertex);
  vec4 texcoord_8;
  texcoord_8.xy = ((gl_MultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  vec2 tmpvar_9;
  if ((_UVSec == 0.0)) {
    tmpvar_9 = tmpvar_1;
  } else {
    tmpvar_9 = tmpvar_2;
  };
  texcoord_8.zw = ((tmpvar_9 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  vec4 v_10;
  v_10.x = _World2Object[0].x;
  v_10.y = _World2Object[1].x;
  v_10.z = _World2Object[2].x;
  v_10.w = _World2Object[3].x;
  vec4 v_11;
  v_11.x = _World2Object[0].y;
  v_11.y = _World2Object[1].y;
  v_11.z = _World2Object[2].y;
  v_11.w = _World2Object[3].y;
  vec4 v_12;
  v_12.x = _World2Object[0].z;
  v_12.y = _World2Object[1].z;
  v_12.z = _World2Object[2].z;
  v_12.w = _World2Object[3].z;
  vec3 tmpvar_13;
  tmpvar_13 = normalize(((
    (v_10.xyz * gl_Normal.x)
   + 
    (v_11.xyz * gl_Normal.y)
  ) + (v_12.xyz * gl_Normal.z)));
  mat3 tmpvar_14;
  tmpvar_14[0] = _Object2World[0].xyz;
  tmpvar_14[1] = _Object2World[1].xyz;
  tmpvar_14[2] = _Object2World[2].xyz;
  vec4 tmpvar_15;
  tmpvar_15.xyz = normalize((tmpvar_14 * TANGENT.xyz));
  tmpvar_15.w = TANGENT.w;
  vec3 tmpvar_16;
  vec3 tmpvar_17;
  tmpvar_16 = tmpvar_15.xyz;
  tmpvar_17 = (((tmpvar_13.yzx * tmpvar_15.zxy) - (tmpvar_13.zxy * tmpvar_15.yzx)) * (TANGENT.w * unity_WorldTransformParams.w));
  vec3 tmpvar_18;
  vec3 tmpvar_19;
  vec3 tmpvar_20;
  tmpvar_18.x = tmpvar_16.x;
  tmpvar_18.y = tmpvar_17.x;
  tmpvar_18.z = tmpvar_13.x;
  tmpvar_19.x = tmpvar_16.y;
  tmpvar_19.y = tmpvar_17.y;
  tmpvar_19.z = tmpvar_13.y;
  tmpvar_20.x = tmpvar_16.z;
  tmpvar_20.y = tmpvar_17.z;
  tmpvar_20.z = tmpvar_13.z;
  vec3 v_21;
  v_21.x = tmpvar_18.x;
  v_21.y = tmpvar_19.x;
  v_21.z = tmpvar_20.x;
  tmpvar_4.xyz = v_21;
  vec3 v_22;
  v_22.x = tmpvar_18.y;
  v_22.y = tmpvar_19.y;
  v_22.z = tmpvar_20.y;
  tmpvar_5.xyz = v_22;
  vec3 v_23;
  v_23.x = tmpvar_18.z;
  v_23.y = tmpvar_19.z;
  v_23.z = tmpvar_20.z;
  tmpvar_6.xyz = v_23;
  vec3 tmpvar_24;
  tmpvar_24 = (_WorldSpaceLightPos0.xyz - (tmpvar_7.xyz * _WorldSpaceLightPos0.w));
  tmpvar_4.w = tmpvar_24.x;
  tmpvar_5.w = tmpvar_24.y;
  tmpvar_6.w = tmpvar_24.z;
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = texcoord_8;
  xlv_TEXCOORD1 = (tmpvar_7.xyz - _WorldSpaceCameraPos);
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  vec4 tmpvar_25;
  tmpvar_25 = (_Object2World * gl_Vertex);
  xlv_TEXCOORD5 = (_LightMatrix0 * tmpvar_25);
  xlv_TEXCOORD6 = (unity_World2Shadow[0] * tmpvar_25);
}


#endif
#ifdef FRAGMENT
uniform vec4 _LightShadowData;
uniform vec4 unity_ColorSpaceDielectricSpec;
uniform vec4 unity_ColorSpaceLuminance;
uniform vec4 _LightColor0;
uniform vec4 _Color;
uniform sampler2D _MainTex;
uniform float _Metallic;
uniform float _Glossiness;
uniform sampler2DShadow _ShadowMapTexture;
uniform sampler2D _LightTexture0;
uniform sampler2D _LightTextureB0;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
varying vec4 xlv_TEXCOORD6;
void main ()
{
  float tmpvar_1;
  vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  tmpvar_1 = (tmpvar_2.w * _Color.w);
  vec3 tmpvar_3;
  tmpvar_3 = (_Color.xyz * tmpvar_2.xyz);
  vec3 tmpvar_4;
  vec3 tmpvar_5;
  tmpvar_5 = mix (unity_ColorSpaceDielectricSpec.xyz, tmpvar_3, vec3(_Metallic));
  tmpvar_4 = (tmpvar_3 * (unity_ColorSpaceDielectricSpec.w - (_Metallic * unity_ColorSpaceDielectricSpec.w)));
  vec3 tmpvar_6;
  tmpvar_6 = normalize(xlv_TEXCOORD2_2.xyz);
  vec3 tmpvar_7;
  tmpvar_7.x = xlv_TEXCOORD2.w;
  tmpvar_7.y = xlv_TEXCOORD2_1.w;
  tmpvar_7.z = xlv_TEXCOORD2_2.w;
  vec3 tmpvar_8;
  vec3 tmpvar_9;
  tmpvar_9 = normalize(tmpvar_7);
  tmpvar_8 = (_LightColor0.xyz * ((
    (float((xlv_TEXCOORD5.z > 0.0)) * texture2D (_LightTexture0, ((xlv_TEXCOORD5.xy / xlv_TEXCOORD5.w) + 0.5)).w)
   * texture2D (_LightTextureB0, vec2(
    dot (xlv_TEXCOORD5.xyz, xlv_TEXCOORD5.xyz)
  )).w) * (_LightShadowData.x + 
    (shadow2DProj (_ShadowMapTexture, xlv_TEXCOORD6).x * (1.0 - _LightShadowData.x))
  )));
  vec3 viewDir_10;
  viewDir_10 = -(normalize(xlv_TEXCOORD1));
  float specularTerm_11;
  float tmpvar_12;
  tmpvar_12 = (1.0 - _Glossiness);
  vec3 tmpvar_13;
  vec3 inVec_14;
  inVec_14 = (tmpvar_9 + viewDir_10);
  tmpvar_13 = (inVec_14 * inversesqrt(max (0.001, 
    dot (inVec_14, inVec_14)
  )));
  float tmpvar_15;
  tmpvar_15 = dot (tmpvar_6, viewDir_10);
  vec3 tmpvar_16;
  if ((tmpvar_15 < 0.0)) {
    tmpvar_16 = (tmpvar_6 + (viewDir_10 * (
      -(tmpvar_15)
     + 1e-05)));
  } else {
    tmpvar_16 = tmpvar_6;
  };
  float tmpvar_17;
  tmpvar_17 = max (0.0, dot (tmpvar_16, tmpvar_9));
  float tmpvar_18;
  tmpvar_18 = max (0.0, dot (tmpvar_16, tmpvar_13));
  float tmpvar_19;
  tmpvar_19 = max (0.0, dot (tmpvar_16, viewDir_10));
  float tmpvar_20;
  tmpvar_20 = max (0.0, dot (tmpvar_9, tmpvar_13));
  float tmpvar_21;
  tmpvar_21 = (tmpvar_12 * tmpvar_12);
  float tmpvar_22;
  tmpvar_22 = (tmpvar_12 * tmpvar_12);
  float tmpvar_23;
  tmpvar_23 = (tmpvar_22 * tmpvar_22);
  float tmpvar_24;
  tmpvar_24 = (((tmpvar_18 * tmpvar_18) * (tmpvar_23 - 1.0)) + 1.0);
  float x_25;
  x_25 = (1.0 - tmpvar_17);
  float x_26;
  x_26 = (1.0 - tmpvar_19);
  float tmpvar_27;
  tmpvar_27 = (0.5 + ((2.0 * tmpvar_20) * (tmpvar_20 * tmpvar_12)));
  float tmpvar_28;
  tmpvar_28 = ((1.0 + (
    (tmpvar_27 - 1.0)
   * 
    ((x_25 * x_25) * ((x_25 * x_25) * x_25))
  )) * (1.0 + (
    (tmpvar_27 - 1.0)
   * 
    ((x_26 * x_26) * ((x_26 * x_26) * x_26))
  )));
  float tmpvar_29;
  tmpvar_29 = (((2.0 / 
    (((tmpvar_17 * (
      (tmpvar_19 * (1.0 - tmpvar_21))
     + tmpvar_21)) + (tmpvar_19 * (
      (tmpvar_17 * (1.0 - tmpvar_21))
     + tmpvar_21))) + 1e-05)
  ) * (tmpvar_23 / 
    (((3.141593 * tmpvar_24) * tmpvar_24) + 1e-07)
  )) * 0.7853982);
  specularTerm_11 = tmpvar_29;
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    specularTerm_11 = sqrt(max (0.0001, tmpvar_29));
  };
  float tmpvar_30;
  tmpvar_30 = max (0.0, (specularTerm_11 * tmpvar_17));
  specularTerm_11 = tmpvar_30;
  float x_31;
  x_31 = (1.0 - tmpvar_20);
  vec4 tmpvar_32;
  tmpvar_32.w = 1.0;
  tmpvar_32.xyz = ((tmpvar_4 * (tmpvar_8 * 
    (tmpvar_28 * tmpvar_17)
  )) + ((tmpvar_30 * tmpvar_8) * (tmpvar_5 + 
    ((1.0 - tmpvar_5) * ((x_31 * x_31) * ((x_31 * x_31) * x_31)))
  )));
  vec4 xlat_varoutput_33;
  xlat_varoutput_33.xyz = tmpvar_32.xyz;
  xlat_varoutput_33.w = tmpvar_1;
  gl_FragData[0] = xlat_varoutput_33;
}


#endif
"
}
SubProgram "d3d9 " {
// Stats: 46 math
Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_NATIVE" "_ALPHABLEND_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
Matrix 12 [_LightMatrix0]
Matrix 8 [_Object2World]
Matrix 16 [_World2Object] 3
Matrix 4 [glstate_matrix_mvp]
Matrix 0 [unity_World2Shadow0]
Vector 23 [_DetailAlbedoMap_ST]
Vector 22 [_MainTex_ST]
Float 24 [_UVSec]
Vector 19 [_WorldSpaceCameraPos]
Vector 20 [_WorldSpaceLightPos0]
Vector 21 [unity_WorldTransformParams]
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   row_major float4x4 _LightMatrix0;
//   float4 _MainTex_ST;
//   row_major float4x4 _Object2World;
//   float _UVSec;
//   row_major float4x4 _World2Object;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 glstate_matrix_mvp;
//   row_major float4x4 unity_World2Shadow[4];
//   float4 unity_WorldTransformParams;
//
//
// Registers:
//
//   Name                       Reg   Size
//   -------------------------- ----- ----
//   unity_World2Shadow         c0       4
//   glstate_matrix_mvp         c4       4
//   _Object2World              c8       4
//   _LightMatrix0              c12      4
//   _World2Object              c16      3
//   _WorldSpaceCameraPos       c19      1
//   _WorldSpaceLightPos0       c20      1
//   unity_WorldTransformParams c21      1
//   _MainTex_ST                c22      1
//   _DetailAlbedoMap_ST        c23      1
//   _UVSec                     c24      1
//

    vs_3_0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_tangent v4
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6
    dcl_texcoord6 o7
    dp4 o0.x, c4, v0
    dp4 o0.y, c5, v0
    dp4 o0.z, c6, v0
    dp4 o0.w, c7, v0
    mad o1.xy, v2, c22, c22.zwzw
    abs r0.x, c24.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c23.xyxy, c23
    dp4 r0.x, c8, v0
    dp4 r0.y, c9, v0
    dp4 r0.z, c10, v0
    add o2.xyz, r0, -c19
    mul r1.xyz, c17, v1.y
    mad r1.xyz, c16, v1.x, r1
    mad r1.xyz, c18, v1.z, r1
    nrm r2.xyz, r1
    dp3 r1.x, c8, v4
    dp3 r1.y, c9, v4
    dp3 r1.z, c10, v4
    nrm r3.xyz, r1
    mul r1.xyz, r2.zxyw, r3.yzxw
    mad r1.xyz, r2.yzxw, r3.zxyw, -r1
    mov o5.xyz, r2
    mov o3.xyz, r3
    mul r1.w, c21.w, v4.w
    mul o4.xyz, r1.w, r1
    dp4 r0.w, c11, v0
    dp4 o6.x, c12, r0
    dp4 o6.y, c13, r0
    dp4 o6.z, c14, r0
    dp4 o6.w, c15, r0
    dp4 o7.x, c0, r0
    dp4 o7.y, c1, r0
    dp4 o7.z, c2, r0
    dp4 o7.w, c3, r0
    mad r0.xyz, r0, -c20.w, c20
    mov o3.w, r0.x
    mov o4.w, r0.y
    mov o5.w, r0.z

// approximately 45 instruction slots used
"
}
SubProgram "d3d11 " {
// Stats: 49 math
Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_NATIVE" "_ALPHABLEND_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
ConstBuffer "$Globals" 304
Matrix 240 [_LightMatrix0]
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
ConstBuffer "UnityShadows" 416
Matrix 128 [unity_World2Shadow0]
Matrix 192 [unity_World2Shadow1]
Matrix 256 [unity_World2Shadow2]
Matrix 320 [unity_World2Shadow3]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
Vector 336 [unity_WorldTransformParams]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityShadows" 3
BindCB  "UnityPerDraw" 4
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer cb0[19], immediateIndexed
      dcl_constantbuffer cb1[5], immediateIndexed
      dcl_constantbuffer cb2[1], immediateIndexed
      dcl_constantbuffer cb3[12], immediateIndexed
      dcl_constantbuffer cb4[22], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb4[1].xyzw
   1: mad r0.xyzw, cb4[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb4[2].xyzw, v0.zzzz, r0.xyzw
   3: mad o0.xyzw, cb4[3].xyzw, v0.wwww, r0.xyzw
   4: eq r0.x, cb0[13].z, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[11].xxxy, cb0[11].zzzw
   7: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   8: mul r0.xyz, v0.yyyy, cb4[13].xyzx
   9: mad r0.xyz, cb4[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb4[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb4[15].xyzx, v0.wwww, r0.xyzx
  12: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  13: mad r0.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  14: mov o3.w, r0.x
  15: mul r1.xyz, v4.yyyy, cb4[13].xyzx
  16: mad r1.xyz, cb4[12].xyzx, v4.xxxx, r1.xyzx
  17: mad r1.xyz, cb4[14].xyzx, v4.zzzz, r1.xyzx
  18: dp3 r0.x, r1.xyzx, r1.xyzx
  19: rsq r0.x, r0.x
  20: mul r1.xyz, r0.xxxx, r1.xyzx
  21: mov o3.xyz, r1.xyzx
  22: mul r2.x, v1.x, cb4[16].x
  23: mul r2.y, v1.x, cb4[17].x
  24: mul r2.z, v1.x, cb4[18].x
  25: mul r3.x, v1.y, cb4[16].y
  26: mul r3.y, v1.y, cb4[17].y
  27: mul r3.z, v1.y, cb4[18].y
  28: add r2.xyz, r2.xyzx, r3.xyzx
  29: mul r3.x, v1.z, cb4[16].z
  30: mul r3.y, v1.z, cb4[17].z
  31: mul r3.z, v1.z, cb4[18].z
  32: add r2.xyz, r2.xyzx, r3.xyzx
  33: dp3 r0.x, r2.xyzx, r2.xyzx
  34: rsq r0.x, r0.x
  35: mul r2.xyz, r0.xxxx, r2.xyzx
  36: mul r3.xyz, r1.yzxy, r2.zxyz
  37: mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
  38: mov o5.xyz, r2.xyzx
  39: mul r0.x, v4.w, cb4[21].w
  40: mul o4.xyz, r0.xxxx, r1.xyzx
  41: mov o4.w, r0.y
  42: mov o5.w, r0.z
  43: mul r0.xyzw, v0.yyyy, cb4[13].xyzw
  44: mad r0.xyzw, cb4[12].xyzw, v0.xxxx, r0.xyzw
  45: mad r0.xyzw, cb4[14].xyzw, v0.zzzz, r0.xyzw
  46: mad r0.xyzw, cb4[15].xyzw, v0.wwww, r0.xyzw
  47: mul r1.xyzw, r0.yyyy, cb0[16].xyzw
  48: mad r1.xyzw, cb0[15].xyzw, r0.xxxx, r1.xyzw
  49: mad r1.xyzw, cb0[17].xyzw, r0.zzzz, r1.xyzw
  50: mad o6.xyzw, cb0[18].xyzw, r0.wwww, r1.xyzw
  51: mul r1.xyzw, r0.yyyy, cb3[9].xyzw
  52: mad r1.xyzw, cb3[8].xyzw, r0.xxxx, r1.xyzw
  53: mad r1.xyzw, cb3[10].xyzw, r0.zzzz, r1.xyzw
  54: mad o7.xyzw, cb3[11].xyzw, r0.wwww, r1.xyzw
  55: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
// Stats: 95 math, 2 textures, 2 branches
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "_ALPHABLEND_ON" }
"#version 120

#ifdef VERTEX
uniform vec3 _WorldSpaceCameraPos;
uniform vec4 _ProjectionParams;
uniform vec4 _WorldSpaceLightPos0;

uniform mat4 _Object2World;
uniform mat4 _World2Object;
uniform vec4 unity_WorldTransformParams;
uniform vec4 _MainTex_ST;
uniform vec4 _DetailAlbedoMap_ST;
uniform float _UVSec;
attribute vec4 TANGENT;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
void main ()
{
  vec2 tmpvar_1;
  tmpvar_1 = gl_MultiTexCoord0.xy;
  vec2 tmpvar_2;
  tmpvar_2 = gl_MultiTexCoord1.xy;
  vec4 tmpvar_3;
  vec4 tmpvar_4;
  vec4 tmpvar_5;
  vec4 tmpvar_6;
  vec4 tmpvar_7;
  tmpvar_7 = (_Object2World * gl_Vertex);
  tmpvar_3 = (gl_ModelViewProjectionMatrix * gl_Vertex);
  vec4 texcoord_8;
  texcoord_8.xy = ((gl_MultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  vec2 tmpvar_9;
  if ((_UVSec == 0.0)) {
    tmpvar_9 = tmpvar_1;
  } else {
    tmpvar_9 = tmpvar_2;
  };
  texcoord_8.zw = ((tmpvar_9 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  vec4 v_10;
  v_10.x = _World2Object[0].x;
  v_10.y = _World2Object[1].x;
  v_10.z = _World2Object[2].x;
  v_10.w = _World2Object[3].x;
  vec4 v_11;
  v_11.x = _World2Object[0].y;
  v_11.y = _World2Object[1].y;
  v_11.z = _World2Object[2].y;
  v_11.w = _World2Object[3].y;
  vec4 v_12;
  v_12.x = _World2Object[0].z;
  v_12.y = _World2Object[1].z;
  v_12.z = _World2Object[2].z;
  v_12.w = _World2Object[3].z;
  vec3 tmpvar_13;
  tmpvar_13 = normalize(((
    (v_10.xyz * gl_Normal.x)
   + 
    (v_11.xyz * gl_Normal.y)
  ) + (v_12.xyz * gl_Normal.z)));
  mat3 tmpvar_14;
  tmpvar_14[0] = _Object2World[0].xyz;
  tmpvar_14[1] = _Object2World[1].xyz;
  tmpvar_14[2] = _Object2World[2].xyz;
  vec4 tmpvar_15;
  tmpvar_15.xyz = normalize((tmpvar_14 * TANGENT.xyz));
  tmpvar_15.w = TANGENT.w;
  vec3 tmpvar_16;
  vec3 tmpvar_17;
  tmpvar_16 = tmpvar_15.xyz;
  tmpvar_17 = (((tmpvar_13.yzx * tmpvar_15.zxy) - (tmpvar_13.zxy * tmpvar_15.yzx)) * (TANGENT.w * unity_WorldTransformParams.w));
  vec3 tmpvar_18;
  vec3 tmpvar_19;
  vec3 tmpvar_20;
  tmpvar_18.x = tmpvar_16.x;
  tmpvar_18.y = tmpvar_17.x;
  tmpvar_18.z = tmpvar_13.x;
  tmpvar_19.x = tmpvar_16.y;
  tmpvar_19.y = tmpvar_17.y;
  tmpvar_19.z = tmpvar_13.y;
  tmpvar_20.x = tmpvar_16.z;
  tmpvar_20.y = tmpvar_17.z;
  tmpvar_20.z = tmpvar_13.z;
  vec3 v_21;
  v_21.x = tmpvar_18.x;
  v_21.y = tmpvar_19.x;
  v_21.z = tmpvar_20.x;
  tmpvar_4.xyz = v_21;
  vec3 v_22;
  v_22.x = tmpvar_18.y;
  v_22.y = tmpvar_19.y;
  v_22.z = tmpvar_20.y;
  tmpvar_5.xyz = v_22;
  vec3 v_23;
  v_23.x = tmpvar_18.z;
  v_23.y = tmpvar_19.z;
  v_23.z = tmpvar_20.z;
  tmpvar_6.xyz = v_23;
  vec4 o_24;
  vec4 tmpvar_25;
  tmpvar_25 = (tmpvar_3 * 0.5);
  vec2 tmpvar_26;
  tmpvar_26.x = tmpvar_25.x;
  tmpvar_26.y = (tmpvar_25.y * _ProjectionParams.x);
  o_24.xy = (tmpvar_26 + tmpvar_25.w);
  o_24.zw = tmpvar_3.zw;
  vec3 tmpvar_27;
  tmpvar_27 = (_WorldSpaceLightPos0.xyz - (tmpvar_7.xyz * _WorldSpaceLightPos0.w));
  tmpvar_4.w = tmpvar_27.x;
  tmpvar_5.w = tmpvar_27.y;
  tmpvar_6.w = tmpvar_27.z;
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = texcoord_8;
  xlv_TEXCOORD1 = (tmpvar_7.xyz - _WorldSpaceCameraPos);
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  xlv_TEXCOORD5 = o_24;
}


#endif
#ifdef FRAGMENT
uniform vec4 unity_ColorSpaceDielectricSpec;
uniform vec4 unity_ColorSpaceLuminance;
uniform vec4 _LightColor0;
uniform vec4 _Color;
uniform sampler2D _MainTex;
uniform float _Metallic;
uniform float _Glossiness;
uniform sampler2D _ShadowMapTexture;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
void main ()
{
  float tmpvar_1;
  vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  tmpvar_1 = (tmpvar_2.w * _Color.w);
  vec3 tmpvar_3;
  tmpvar_3 = (_Color.xyz * tmpvar_2.xyz);
  vec3 tmpvar_4;
  vec3 tmpvar_5;
  tmpvar_5 = mix (unity_ColorSpaceDielectricSpec.xyz, tmpvar_3, vec3(_Metallic));
  tmpvar_4 = (tmpvar_3 * (unity_ColorSpaceDielectricSpec.w - (_Metallic * unity_ColorSpaceDielectricSpec.w)));
  vec3 tmpvar_6;
  tmpvar_6 = normalize(xlv_TEXCOORD2_2.xyz);
  vec3 tmpvar_7;
  tmpvar_7.x = xlv_TEXCOORD2.w;
  tmpvar_7.y = xlv_TEXCOORD2_1.w;
  tmpvar_7.z = xlv_TEXCOORD2_2.w;
  vec3 tmpvar_8;
  tmpvar_8 = (_LightColor0.xyz * texture2DProj (_ShadowMapTexture, xlv_TEXCOORD5).x);
  vec3 viewDir_9;
  viewDir_9 = -(normalize(xlv_TEXCOORD1));
  float specularTerm_10;
  float tmpvar_11;
  tmpvar_11 = (1.0 - _Glossiness);
  vec3 tmpvar_12;
  vec3 inVec_13;
  inVec_13 = (tmpvar_7 + viewDir_9);
  tmpvar_12 = (inVec_13 * inversesqrt(max (0.001, 
    dot (inVec_13, inVec_13)
  )));
  float tmpvar_14;
  tmpvar_14 = dot (tmpvar_6, viewDir_9);
  vec3 tmpvar_15;
  if ((tmpvar_14 < 0.0)) {
    tmpvar_15 = (tmpvar_6 + (viewDir_9 * (
      -(tmpvar_14)
     + 1e-05)));
  } else {
    tmpvar_15 = tmpvar_6;
  };
  float tmpvar_16;
  tmpvar_16 = max (0.0, dot (tmpvar_15, tmpvar_7));
  float tmpvar_17;
  tmpvar_17 = max (0.0, dot (tmpvar_15, tmpvar_12));
  float tmpvar_18;
  tmpvar_18 = max (0.0, dot (tmpvar_15, viewDir_9));
  float tmpvar_19;
  tmpvar_19 = max (0.0, dot (tmpvar_7, tmpvar_12));
  float tmpvar_20;
  tmpvar_20 = (tmpvar_11 * tmpvar_11);
  float tmpvar_21;
  tmpvar_21 = (tmpvar_11 * tmpvar_11);
  float tmpvar_22;
  tmpvar_22 = (tmpvar_21 * tmpvar_21);
  float tmpvar_23;
  tmpvar_23 = (((tmpvar_17 * tmpvar_17) * (tmpvar_22 - 1.0)) + 1.0);
  float x_24;
  x_24 = (1.0 - tmpvar_16);
  float x_25;
  x_25 = (1.0 - tmpvar_18);
  float tmpvar_26;
  tmpvar_26 = (0.5 + ((2.0 * tmpvar_19) * (tmpvar_19 * tmpvar_11)));
  float tmpvar_27;
  tmpvar_27 = ((1.0 + (
    (tmpvar_26 - 1.0)
   * 
    ((x_24 * x_24) * ((x_24 * x_24) * x_24))
  )) * (1.0 + (
    (tmpvar_26 - 1.0)
   * 
    ((x_25 * x_25) * ((x_25 * x_25) * x_25))
  )));
  float tmpvar_28;
  tmpvar_28 = (((2.0 / 
    (((tmpvar_16 * (
      (tmpvar_18 * (1.0 - tmpvar_20))
     + tmpvar_20)) + (tmpvar_18 * (
      (tmpvar_16 * (1.0 - tmpvar_20))
     + tmpvar_20))) + 1e-05)
  ) * (tmpvar_22 / 
    (((3.141593 * tmpvar_23) * tmpvar_23) + 1e-07)
  )) * 0.7853982);
  specularTerm_10 = tmpvar_28;
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    specularTerm_10 = sqrt(max (0.0001, tmpvar_28));
  };
  float tmpvar_29;
  tmpvar_29 = max (0.0, (specularTerm_10 * tmpvar_16));
  specularTerm_10 = tmpvar_29;
  float x_30;
  x_30 = (1.0 - tmpvar_19);
  vec4 tmpvar_31;
  tmpvar_31.w = 1.0;
  tmpvar_31.xyz = ((tmpvar_4 * (tmpvar_8 * 
    (tmpvar_27 * tmpvar_16)
  )) + ((tmpvar_29 * tmpvar_8) * (tmpvar_5 + 
    ((1.0 - tmpvar_5) * ((x_30 * x_30) * ((x_30 * x_30) * x_30)))
  )));
  vec4 xlat_varoutput_32;
  xlat_varoutput_32.xyz = tmpvar_31.xyz;
  xlat_varoutput_32.w = tmpvar_1;
  gl_FragData[0] = xlat_varoutput_32;
}


#endif
"
}
SubProgram "d3d9 " {
// Stats: 43 math
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "_ALPHABLEND_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
Matrix 4 [_Object2World] 3
Matrix 7 [_World2Object] 3
Matrix 0 [glstate_matrix_mvp]
Vector 16 [_DetailAlbedoMap_ST]
Vector 15 [_MainTex_ST]
Vector 11 [_ProjectionParams]
Vector 12 [_ScreenParams]
Float 17 [_UVSec]
Vector 10 [_WorldSpaceCameraPos]
Vector 13 [_WorldSpaceLightPos0]
Vector 14 [unity_WorldTransformParams]
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   row_major float4x4 _Object2World;
//   float4 _ProjectionParams;
//   float4 _ScreenParams;
//   float _UVSec;
//   row_major float4x4 _World2Object;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 glstate_matrix_mvp;
//   float4 unity_WorldTransformParams;
//
//
// Registers:
//
//   Name                       Reg   Size
//   -------------------------- ----- ----
//   glstate_matrix_mvp         c0       4
//   _Object2World              c4       3
//   _World2Object              c7       3
//   _WorldSpaceCameraPos       c10      1
//   _ProjectionParams          c11      1
//   _ScreenParams              c12      1
//   _WorldSpaceLightPos0       c13      1
//   unity_WorldTransformParams c14      1
//   _MainTex_ST                c15      1
//   _DetailAlbedoMap_ST        c16      1
//   _UVSec                     c17      1
//

    vs_3_0
    def c18, 0.5, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_tangent v4
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6
    mad o1.xy, v2, c15, c15.zwzw
    abs r0.x, c17.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c16.xyxy, c16
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add o2.xyz, r0, -c10
    mad r0.xyz, r0, -c13.w, c13
    mul r1.xyz, c8, v1.y
    mad r1.xyz, c7, v1.x, r1
    mad r1.xyz, c9, v1.z, r1
    nrm r2.xyz, r1
    dp3 r1.x, c4, v4
    dp3 r1.y, c5, v4
    dp3 r1.z, c6, v4
    nrm r3.xyz, r1
    mul r1.xyz, r2.zxyw, r3.yzxw
    mad r1.xyz, r2.yzxw, r3.zxyw, -r1
    mov o5.xyz, r2
    mov o3.xyz, r3
    mul r0.w, c14.w, v4.w
    mul o4.xyz, r0.w, r1
    dp4 r1.y, c1, v0
    mul r0.w, r1.y, c11.x
    mul r2.w, r0.w, c18.x
    dp4 r1.x, c0, v0
    dp4 r1.w, c3, v0
    mul r2.xz, r1.xyww, c18.x
    mad o6.xy, r2.z, c12.zwzw, r2.xwzw
    dp4 r1.z, c2, v0
    mov o0, r1
    mov o6.zw, r1
    mov o3.w, r0.x
    mov o4.w, r0.y
    mov o5.w, r0.z

// approximately 42 instruction slots used
"
}
SubProgram "d3d11 " {
// Stats: 40 math
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "_ALPHABLEND_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
ConstBuffer "$Globals" 240
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
Vector 80 [_ProjectionParams]
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
Vector 336 [unity_WorldTransformParams]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer cb0[14], immediateIndexed
      dcl_constantbuffer cb1[6], immediateIndexed
      dcl_constantbuffer cb2[1], immediateIndexed
      dcl_constantbuffer cb3[22], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 5
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   4: mov o0.xyzw, r0.xyzw
   5: eq r1.x, cb0[13].z, l(0.000000)
   6: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
   7: mad o1.zw, r1.xxxy, cb0[11].xxxy, cb0[11].zzzw
   8: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   9: mul r1.xyz, v0.yyyy, cb3[13].xyzx
  10: mad r1.xyz, cb3[12].xyzx, v0.xxxx, r1.xyzx
  11: mad r1.xyz, cb3[14].xyzx, v0.zzzz, r1.xyzx
  12: mad r1.xyz, cb3[15].xyzx, v0.wwww, r1.xyzx
  13: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  14: mad r1.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  15: mov o3.w, r1.x
  16: mul r2.xyz, v4.yyyy, cb3[13].xyzx
  17: mad r2.xyz, cb3[12].xyzx, v4.xxxx, r2.xyzx
  18: mad r2.xyz, cb3[14].xyzx, v4.zzzz, r2.xyzx
  19: dp3 r1.x, r2.xyzx, r2.xyzx
  20: rsq r1.x, r1.x
  21: mul r2.xyz, r1.xxxx, r2.xyzx
  22: mov o3.xyz, r2.xyzx
  23: mul r3.x, v1.x, cb3[16].x
  24: mul r3.y, v1.x, cb3[17].x
  25: mul r3.z, v1.x, cb3[18].x
  26: mul r4.x, v1.y, cb3[16].y
  27: mul r4.y, v1.y, cb3[17].y
  28: mul r4.z, v1.y, cb3[18].y
  29: add r3.xyz, r3.xyzx, r4.xyzx
  30: mul r4.x, v1.z, cb3[16].z
  31: mul r4.y, v1.z, cb3[17].z
  32: mul r4.z, v1.z, cb3[18].z
  33: add r3.xyz, r3.xyzx, r4.xyzx
  34: dp3 r1.x, r3.xyzx, r3.xyzx
  35: rsq r1.x, r1.x
  36: mul r3.xyz, r1.xxxx, r3.xyzx
  37: mul r4.xyz, r2.yzxy, r3.zxyz
  38: mad r2.xyz, r3.yzxy, r2.zxyz, -r4.xyzx
  39: mov o5.xyz, r3.xyzx
  40: mul r1.x, v4.w, cb3[21].w
  41: mul o4.xyz, r1.xxxx, r2.xyzx
  42: mov o4.w, r1.y
  43: mov o5.w, r1.z
  44: mul r0.y, r0.y, cb1[5].x
  45: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  46: mov o6.zw, r0.zzzw
  47: add o6.xy, r1.zzzz, r1.xwxx
  48: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
// Stats: 96 math, 3 textures, 2 branches
Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" "_ALPHABLEND_ON" }
"#version 120

#ifdef VERTEX
uniform vec3 _WorldSpaceCameraPos;
uniform vec4 _ProjectionParams;
uniform vec4 _WorldSpaceLightPos0;

uniform mat4 _Object2World;
uniform mat4 _World2Object;
uniform vec4 unity_WorldTransformParams;
uniform vec4 _MainTex_ST;
uniform vec4 _DetailAlbedoMap_ST;
uniform float _UVSec;
uniform mat4 _LightMatrix0;
attribute vec4 TANGENT;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec2 xlv_TEXCOORD5;
varying vec4 xlv_TEXCOORD6;
void main ()
{
  vec2 tmpvar_1;
  tmpvar_1 = gl_MultiTexCoord0.xy;
  vec2 tmpvar_2;
  tmpvar_2 = gl_MultiTexCoord1.xy;
  vec4 tmpvar_3;
  vec4 tmpvar_4;
  vec4 tmpvar_5;
  vec4 tmpvar_6;
  vec4 tmpvar_7;
  tmpvar_7 = (_Object2World * gl_Vertex);
  tmpvar_3 = (gl_ModelViewProjectionMatrix * gl_Vertex);
  vec4 texcoord_8;
  texcoord_8.xy = ((gl_MultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  vec2 tmpvar_9;
  if ((_UVSec == 0.0)) {
    tmpvar_9 = tmpvar_1;
  } else {
    tmpvar_9 = tmpvar_2;
  };
  texcoord_8.zw = ((tmpvar_9 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  vec4 v_10;
  v_10.x = _World2Object[0].x;
  v_10.y = _World2Object[1].x;
  v_10.z = _World2Object[2].x;
  v_10.w = _World2Object[3].x;
  vec4 v_11;
  v_11.x = _World2Object[0].y;
  v_11.y = _World2Object[1].y;
  v_11.z = _World2Object[2].y;
  v_11.w = _World2Object[3].y;
  vec4 v_12;
  v_12.x = _World2Object[0].z;
  v_12.y = _World2Object[1].z;
  v_12.z = _World2Object[2].z;
  v_12.w = _World2Object[3].z;
  vec3 tmpvar_13;
  tmpvar_13 = normalize(((
    (v_10.xyz * gl_Normal.x)
   + 
    (v_11.xyz * gl_Normal.y)
  ) + (v_12.xyz * gl_Normal.z)));
  mat3 tmpvar_14;
  tmpvar_14[0] = _Object2World[0].xyz;
  tmpvar_14[1] = _Object2World[1].xyz;
  tmpvar_14[2] = _Object2World[2].xyz;
  vec4 tmpvar_15;
  tmpvar_15.xyz = normalize((tmpvar_14 * TANGENT.xyz));
  tmpvar_15.w = TANGENT.w;
  vec3 tmpvar_16;
  vec3 tmpvar_17;
  tmpvar_16 = tmpvar_15.xyz;
  tmpvar_17 = (((tmpvar_13.yzx * tmpvar_15.zxy) - (tmpvar_13.zxy * tmpvar_15.yzx)) * (TANGENT.w * unity_WorldTransformParams.w));
  vec3 tmpvar_18;
  vec3 tmpvar_19;
  vec3 tmpvar_20;
  tmpvar_18.x = tmpvar_16.x;
  tmpvar_18.y = tmpvar_17.x;
  tmpvar_18.z = tmpvar_13.x;
  tmpvar_19.x = tmpvar_16.y;
  tmpvar_19.y = tmpvar_17.y;
  tmpvar_19.z = tmpvar_13.y;
  tmpvar_20.x = tmpvar_16.z;
  tmpvar_20.y = tmpvar_17.z;
  tmpvar_20.z = tmpvar_13.z;
  vec3 v_21;
  v_21.x = tmpvar_18.x;
  v_21.y = tmpvar_19.x;
  v_21.z = tmpvar_20.x;
  tmpvar_4.xyz = v_21;
  vec3 v_22;
  v_22.x = tmpvar_18.y;
  v_22.y = tmpvar_19.y;
  v_22.z = tmpvar_20.y;
  tmpvar_5.xyz = v_22;
  vec3 v_23;
  v_23.x = tmpvar_18.z;
  v_23.y = tmpvar_19.z;
  v_23.z = tmpvar_20.z;
  tmpvar_6.xyz = v_23;
  vec4 o_24;
  vec4 tmpvar_25;
  tmpvar_25 = (tmpvar_3 * 0.5);
  vec2 tmpvar_26;
  tmpvar_26.x = tmpvar_25.x;
  tmpvar_26.y = (tmpvar_25.y * _ProjectionParams.x);
  o_24.xy = (tmpvar_26 + tmpvar_25.w);
  o_24.zw = tmpvar_3.zw;
  vec3 tmpvar_27;
  tmpvar_27 = (_WorldSpaceLightPos0.xyz - (tmpvar_7.xyz * _WorldSpaceLightPos0.w));
  tmpvar_4.w = tmpvar_27.x;
  tmpvar_5.w = tmpvar_27.y;
  tmpvar_6.w = tmpvar_27.z;
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = texcoord_8;
  xlv_TEXCOORD1 = (tmpvar_7.xyz - _WorldSpaceCameraPos);
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  xlv_TEXCOORD5 = (_LightMatrix0 * (_Object2World * gl_Vertex)).xy;
  xlv_TEXCOORD6 = o_24;
}


#endif
#ifdef FRAGMENT
uniform vec4 unity_ColorSpaceDielectricSpec;
uniform vec4 unity_ColorSpaceLuminance;
uniform vec4 _LightColor0;
uniform vec4 _Color;
uniform sampler2D _MainTex;
uniform float _Metallic;
uniform float _Glossiness;
uniform sampler2D _ShadowMapTexture;
uniform sampler2D _LightTexture0;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec2 xlv_TEXCOORD5;
varying vec4 xlv_TEXCOORD6;
void main ()
{
  float tmpvar_1;
  vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  tmpvar_1 = (tmpvar_2.w * _Color.w);
  vec3 tmpvar_3;
  tmpvar_3 = (_Color.xyz * tmpvar_2.xyz);
  vec3 tmpvar_4;
  vec3 tmpvar_5;
  tmpvar_5 = mix (unity_ColorSpaceDielectricSpec.xyz, tmpvar_3, vec3(_Metallic));
  tmpvar_4 = (tmpvar_3 * (unity_ColorSpaceDielectricSpec.w - (_Metallic * unity_ColorSpaceDielectricSpec.w)));
  vec3 tmpvar_6;
  tmpvar_6 = normalize(xlv_TEXCOORD2_2.xyz);
  vec3 tmpvar_7;
  tmpvar_7.x = xlv_TEXCOORD2.w;
  tmpvar_7.y = xlv_TEXCOORD2_1.w;
  tmpvar_7.z = xlv_TEXCOORD2_2.w;
  vec3 tmpvar_8;
  tmpvar_8 = (_LightColor0.xyz * (texture2D (_LightTexture0, xlv_TEXCOORD5).w * texture2DProj (_ShadowMapTexture, xlv_TEXCOORD6).x));
  vec3 viewDir_9;
  viewDir_9 = -(normalize(xlv_TEXCOORD1));
  float specularTerm_10;
  float tmpvar_11;
  tmpvar_11 = (1.0 - _Glossiness);
  vec3 tmpvar_12;
  vec3 inVec_13;
  inVec_13 = (tmpvar_7 + viewDir_9);
  tmpvar_12 = (inVec_13 * inversesqrt(max (0.001, 
    dot (inVec_13, inVec_13)
  )));
  float tmpvar_14;
  tmpvar_14 = dot (tmpvar_6, viewDir_9);
  vec3 tmpvar_15;
  if ((tmpvar_14 < 0.0)) {
    tmpvar_15 = (tmpvar_6 + (viewDir_9 * (
      -(tmpvar_14)
     + 1e-05)));
  } else {
    tmpvar_15 = tmpvar_6;
  };
  float tmpvar_16;
  tmpvar_16 = max (0.0, dot (tmpvar_15, tmpvar_7));
  float tmpvar_17;
  tmpvar_17 = max (0.0, dot (tmpvar_15, tmpvar_12));
  float tmpvar_18;
  tmpvar_18 = max (0.0, dot (tmpvar_15, viewDir_9));
  float tmpvar_19;
  tmpvar_19 = max (0.0, dot (tmpvar_7, tmpvar_12));
  float tmpvar_20;
  tmpvar_20 = (tmpvar_11 * tmpvar_11);
  float tmpvar_21;
  tmpvar_21 = (tmpvar_11 * tmpvar_11);
  float tmpvar_22;
  tmpvar_22 = (tmpvar_21 * tmpvar_21);
  float tmpvar_23;
  tmpvar_23 = (((tmpvar_17 * tmpvar_17) * (tmpvar_22 - 1.0)) + 1.0);
  float x_24;
  x_24 = (1.0 - tmpvar_16);
  float x_25;
  x_25 = (1.0 - tmpvar_18);
  float tmpvar_26;
  tmpvar_26 = (0.5 + ((2.0 * tmpvar_19) * (tmpvar_19 * tmpvar_11)));
  float tmpvar_27;
  tmpvar_27 = ((1.0 + (
    (tmpvar_26 - 1.0)
   * 
    ((x_24 * x_24) * ((x_24 * x_24) * x_24))
  )) * (1.0 + (
    (tmpvar_26 - 1.0)
   * 
    ((x_25 * x_25) * ((x_25 * x_25) * x_25))
  )));
  float tmpvar_28;
  tmpvar_28 = (((2.0 / 
    (((tmpvar_16 * (
      (tmpvar_18 * (1.0 - tmpvar_20))
     + tmpvar_20)) + (tmpvar_18 * (
      (tmpvar_16 * (1.0 - tmpvar_20))
     + tmpvar_20))) + 1e-05)
  ) * (tmpvar_22 / 
    (((3.141593 * tmpvar_23) * tmpvar_23) + 1e-07)
  )) * 0.7853982);
  specularTerm_10 = tmpvar_28;
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    specularTerm_10 = sqrt(max (0.0001, tmpvar_28));
  };
  float tmpvar_29;
  tmpvar_29 = max (0.0, (specularTerm_10 * tmpvar_16));
  specularTerm_10 = tmpvar_29;
  float x_30;
  x_30 = (1.0 - tmpvar_19);
  vec4 tmpvar_31;
  tmpvar_31.w = 1.0;
  tmpvar_31.xyz = ((tmpvar_4 * (tmpvar_8 * 
    (tmpvar_27 * tmpvar_16)
  )) + ((tmpvar_29 * tmpvar_8) * (tmpvar_5 + 
    ((1.0 - tmpvar_5) * ((x_30 * x_30) * ((x_30 * x_30) * x_30)))
  )));
  vec4 xlat_varoutput_32;
  xlat_varoutput_32.xyz = tmpvar_31.xyz;
  xlat_varoutput_32.w = tmpvar_1;
  gl_FragData[0] = xlat_varoutput_32;
}


#endif
"
}
SubProgram "d3d9 " {
// Stats: 46 math
Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" "_ALPHABLEND_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
Matrix 11 [_LightMatrix0] 2
Matrix 4 [_Object2World]
Matrix 8 [_World2Object] 3
Matrix 0 [glstate_matrix_mvp]
Vector 19 [_DetailAlbedoMap_ST]
Vector 18 [_MainTex_ST]
Vector 14 [_ProjectionParams]
Vector 15 [_ScreenParams]
Float 20 [_UVSec]
Vector 13 [_WorldSpaceCameraPos]
Vector 16 [_WorldSpaceLightPos0]
Vector 17 [unity_WorldTransformParams]
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   row_major float4x4 _LightMatrix0;
//   float4 _MainTex_ST;
//   row_major float4x4 _Object2World;
//   float4 _ProjectionParams;
//   float4 _ScreenParams;
//   float _UVSec;
//   row_major float4x4 _World2Object;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 glstate_matrix_mvp;
//   float4 unity_WorldTransformParams;
//
//
// Registers:
//
//   Name                       Reg   Size
//   -------------------------- ----- ----
//   glstate_matrix_mvp         c0       4
//   _Object2World              c4       4
//   _World2Object              c8       3
//   _LightMatrix0              c11      2
//   _WorldSpaceCameraPos       c13      1
//   _ProjectionParams          c14      1
//   _ScreenParams              c15      1
//   _WorldSpaceLightPos0       c16      1
//   unity_WorldTransformParams c17      1
//   _MainTex_ST                c18      1
//   _DetailAlbedoMap_ST        c19      1
//   _UVSec                     c20      1
//

    vs_3_0
    def c21, 0.5, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_tangent v4
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6.xy
    dcl_texcoord6 o7
    mad o1.xy, v2, c18, c18.zwzw
    abs r0.x, c20.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c19.xyxy, c19
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add o2.xyz, r0, -c13
    mul r1.xyz, c9, v1.y
    mad r1.xyz, c8, v1.x, r1
    mad r1.xyz, c10, v1.z, r1
    nrm r2.xyz, r1
    dp3 r1.x, c4, v4
    dp3 r1.y, c5, v4
    dp3 r1.z, c6, v4
    nrm r3.xyz, r1
    mul r1.xyz, r2.zxyw, r3.yzxw
    mad r1.xyz, r2.yzxw, r3.zxyw, -r1
    mov o5.xyz, r2
    mov o3.xyz, r3
    mul r1.w, c17.w, v4.w
    mul o4.xyz, r1.w, r1
    dp4 r0.w, c7, v0
    dp4 o6.x, c11, r0
    dp4 o6.y, c12, r0
    mad r0.xyz, r0, -c16.w, c16
    dp4 r1.y, c1, v0
    mul r0.w, r1.y, c14.x
    mul r2.w, r0.w, c21.x
    dp4 r1.x, c0, v0
    dp4 r1.w, c3, v0
    mul r2.xz, r1.xyww, c21.x
    mad o7.xy, r2.z, c15.zwzw, r2.xwzw
    dp4 r1.z, c2, v0
    mov o0, r1
    mov o7.zw, r1
    mov o3.w, r0.x
    mov o4.w, r0.y
    mov o5.w, r0.z

// approximately 45 instruction slots used
"
}
SubProgram "d3d11 " {
// Stats: 48 math
Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" "_ALPHABLEND_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
ConstBuffer "$Globals" 304
Matrix 240 [_LightMatrix0]
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
Vector 80 [_ProjectionParams]
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
Vector 336 [unity_WorldTransformParams]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer cb0[19], immediateIndexed
      dcl_constantbuffer cb1[6], immediateIndexed
      dcl_constantbuffer cb2[1], immediateIndexed
      dcl_constantbuffer cb3[22], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xy
      dcl_output o7.xyzw
      dcl_temps 5
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   4: mov o0.xyzw, r0.xyzw
   5: eq r1.x, cb0[13].z, l(0.000000)
   6: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
   7: mad o1.zw, r1.xxxy, cb0[11].xxxy, cb0[11].zzzw
   8: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   9: mul r1.xyz, v0.yyyy, cb3[13].xyzx
  10: mad r1.xyz, cb3[12].xyzx, v0.xxxx, r1.xyzx
  11: mad r1.xyz, cb3[14].xyzx, v0.zzzz, r1.xyzx
  12: mad r1.xyz, cb3[15].xyzx, v0.wwww, r1.xyzx
  13: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  14: mad r1.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  15: mov o3.w, r1.x
  16: mul r2.xyz, v4.yyyy, cb3[13].xyzx
  17: mad r2.xyz, cb3[12].xyzx, v4.xxxx, r2.xyzx
  18: mad r2.xyz, cb3[14].xyzx, v4.zzzz, r2.xyzx
  19: dp3 r1.x, r2.xyzx, r2.xyzx
  20: rsq r1.x, r1.x
  21: mul r2.xyz, r1.xxxx, r2.xyzx
  22: mov o3.xyz, r2.xyzx
  23: mul r3.x, v1.x, cb3[16].x
  24: mul r3.y, v1.x, cb3[17].x
  25: mul r3.z, v1.x, cb3[18].x
  26: mul r4.x, v1.y, cb3[16].y
  27: mul r4.y, v1.y, cb3[17].y
  28: mul r4.z, v1.y, cb3[18].y
  29: add r3.xyz, r3.xyzx, r4.xyzx
  30: mul r4.x, v1.z, cb3[16].z
  31: mul r4.y, v1.z, cb3[17].z
  32: mul r4.z, v1.z, cb3[18].z
  33: add r3.xyz, r3.xyzx, r4.xyzx
  34: dp3 r1.x, r3.xyzx, r3.xyzx
  35: rsq r1.x, r1.x
  36: mul r3.xyz, r1.xxxx, r3.xyzx
  37: mul r4.xyz, r2.yzxy, r3.zxyz
  38: mad r2.xyz, r3.yzxy, r2.zxyz, -r4.xyzx
  39: mov o5.xyz, r3.xyzx
  40: mul r1.x, v4.w, cb3[21].w
  41: mul o4.xyz, r1.xxxx, r2.xyzx
  42: mov o4.w, r1.y
  43: mov o5.w, r1.z
  44: mul r1.xyzw, v0.yyyy, cb3[13].xyzw
  45: mad r1.xyzw, cb3[12].xyzw, v0.xxxx, r1.xyzw
  46: mad r1.xyzw, cb3[14].xyzw, v0.zzzz, r1.xyzw
  47: mad r1.xyzw, cb3[15].xyzw, v0.wwww, r1.xyzw
  48: mul r2.xy, r1.yyyy, cb0[16].xyxx
  49: mad r1.xy, cb0[15].xyxx, r1.xxxx, r2.xyxx
  50: mad r1.xy, cb0[17].xyxx, r1.zzzz, r1.xyxx
  51: mad o6.xy, cb0[18].xyxx, r1.wwww, r1.xyxx
  52: mul r0.y, r0.y, cb1[5].x
  53: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  54: mov o7.zw, r0.zzzw
  55: add o7.xy, r1.zzzz, r1.xwxx
  56: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
// Stats: 104 math, 3 textures, 3 branches
Keywords { "POINT" "SHADOWS_CUBE" "_ALPHABLEND_ON" }
"#version 120

#ifdef VERTEX
uniform vec3 _WorldSpaceCameraPos;
uniform vec4 _WorldSpaceLightPos0;
uniform vec4 _LightPositionRange;

uniform mat4 _Object2World;
uniform mat4 _World2Object;
uniform vec4 unity_WorldTransformParams;
uniform vec4 _MainTex_ST;
uniform vec4 _DetailAlbedoMap_ST;
uniform float _UVSec;
uniform mat4 _LightMatrix0;
attribute vec4 TANGENT;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec3 xlv_TEXCOORD5;
varying vec3 xlv_TEXCOORD6;
void main ()
{
  vec2 tmpvar_1;
  tmpvar_1 = gl_MultiTexCoord0.xy;
  vec2 tmpvar_2;
  tmpvar_2 = gl_MultiTexCoord1.xy;
  vec4 tmpvar_3;
  vec4 tmpvar_4;
  vec4 tmpvar_5;
  vec4 tmpvar_6;
  vec4 tmpvar_7;
  tmpvar_7 = (_Object2World * gl_Vertex);
  tmpvar_3 = (gl_ModelViewProjectionMatrix * gl_Vertex);
  vec4 texcoord_8;
  texcoord_8.xy = ((gl_MultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  vec2 tmpvar_9;
  if ((_UVSec == 0.0)) {
    tmpvar_9 = tmpvar_1;
  } else {
    tmpvar_9 = tmpvar_2;
  };
  texcoord_8.zw = ((tmpvar_9 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  vec4 v_10;
  v_10.x = _World2Object[0].x;
  v_10.y = _World2Object[1].x;
  v_10.z = _World2Object[2].x;
  v_10.w = _World2Object[3].x;
  vec4 v_11;
  v_11.x = _World2Object[0].y;
  v_11.y = _World2Object[1].y;
  v_11.z = _World2Object[2].y;
  v_11.w = _World2Object[3].y;
  vec4 v_12;
  v_12.x = _World2Object[0].z;
  v_12.y = _World2Object[1].z;
  v_12.z = _World2Object[2].z;
  v_12.w = _World2Object[3].z;
  vec3 tmpvar_13;
  tmpvar_13 = normalize(((
    (v_10.xyz * gl_Normal.x)
   + 
    (v_11.xyz * gl_Normal.y)
  ) + (v_12.xyz * gl_Normal.z)));
  mat3 tmpvar_14;
  tmpvar_14[0] = _Object2World[0].xyz;
  tmpvar_14[1] = _Object2World[1].xyz;
  tmpvar_14[2] = _Object2World[2].xyz;
  vec4 tmpvar_15;
  tmpvar_15.xyz = normalize((tmpvar_14 * TANGENT.xyz));
  tmpvar_15.w = TANGENT.w;
  vec3 tmpvar_16;
  vec3 tmpvar_17;
  tmpvar_16 = tmpvar_15.xyz;
  tmpvar_17 = (((tmpvar_13.yzx * tmpvar_15.zxy) - (tmpvar_13.zxy * tmpvar_15.yzx)) * (TANGENT.w * unity_WorldTransformParams.w));
  vec3 tmpvar_18;
  vec3 tmpvar_19;
  vec3 tmpvar_20;
  tmpvar_18.x = tmpvar_16.x;
  tmpvar_18.y = tmpvar_17.x;
  tmpvar_18.z = tmpvar_13.x;
  tmpvar_19.x = tmpvar_16.y;
  tmpvar_19.y = tmpvar_17.y;
  tmpvar_19.z = tmpvar_13.y;
  tmpvar_20.x = tmpvar_16.z;
  tmpvar_20.y = tmpvar_17.z;
  tmpvar_20.z = tmpvar_13.z;
  vec3 v_21;
  v_21.x = tmpvar_18.x;
  v_21.y = tmpvar_19.x;
  v_21.z = tmpvar_20.x;
  tmpvar_4.xyz = v_21;
  vec3 v_22;
  v_22.x = tmpvar_18.y;
  v_22.y = tmpvar_19.y;
  v_22.z = tmpvar_20.y;
  tmpvar_5.xyz = v_22;
  vec3 v_23;
  v_23.x = tmpvar_18.z;
  v_23.y = tmpvar_19.z;
  v_23.z = tmpvar_20.z;
  tmpvar_6.xyz = v_23;
  vec3 tmpvar_24;
  tmpvar_24 = (_WorldSpaceLightPos0.xyz - (tmpvar_7.xyz * _WorldSpaceLightPos0.w));
  tmpvar_4.w = tmpvar_24.x;
  tmpvar_5.w = tmpvar_24.y;
  tmpvar_6.w = tmpvar_24.z;
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = texcoord_8;
  xlv_TEXCOORD1 = (tmpvar_7.xyz - _WorldSpaceCameraPos);
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  vec4 tmpvar_25;
  tmpvar_25 = (_Object2World * gl_Vertex);
  xlv_TEXCOORD5 = (_LightMatrix0 * tmpvar_25).xyz;
  xlv_TEXCOORD6 = (tmpvar_25.xyz - _LightPositionRange.xyz);
}


#endif
#ifdef FRAGMENT
uniform vec4 _LightPositionRange;
uniform vec4 _LightShadowData;
uniform vec4 unity_ColorSpaceDielectricSpec;
uniform vec4 unity_ColorSpaceLuminance;
uniform vec4 _LightColor0;
uniform vec4 _Color;
uniform sampler2D _MainTex;
uniform float _Metallic;
uniform float _Glossiness;
uniform samplerCube _ShadowMapTexture;
uniform sampler2D _LightTexture0;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec3 xlv_TEXCOORD5;
varying vec3 xlv_TEXCOORD6;
void main ()
{
  float tmpvar_1;
  vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  tmpvar_1 = (tmpvar_2.w * _Color.w);
  vec3 tmpvar_3;
  tmpvar_3 = (_Color.xyz * tmpvar_2.xyz);
  vec3 tmpvar_4;
  vec3 tmpvar_5;
  tmpvar_5 = mix (unity_ColorSpaceDielectricSpec.xyz, tmpvar_3, vec3(_Metallic));
  tmpvar_4 = (tmpvar_3 * (unity_ColorSpaceDielectricSpec.w - (_Metallic * unity_ColorSpaceDielectricSpec.w)));
  vec3 tmpvar_6;
  tmpvar_6 = normalize(xlv_TEXCOORD2_2.xyz);
  vec3 tmpvar_7;
  tmpvar_7 = normalize(xlv_TEXCOORD1);
  vec3 tmpvar_8;
  tmpvar_8.x = xlv_TEXCOORD2.w;
  tmpvar_8.y = xlv_TEXCOORD2_1.w;
  tmpvar_8.z = xlv_TEXCOORD2_2.w;
  vec4 tmpvar_9;
  tmpvar_9 = texture2D (_LightTexture0, vec2(dot (xlv_TEXCOORD5, xlv_TEXCOORD5)));
  float mydist_10;
  mydist_10 = ((sqrt(
    dot (xlv_TEXCOORD6, xlv_TEXCOORD6)
  ) * _LightPositionRange.w) * 0.97);
  vec4 tmpvar_11;
  tmpvar_11 = textureCube (_ShadowMapTexture, xlv_TEXCOORD6);
  float tmpvar_12;
  if ((tmpvar_11.x < mydist_10)) {
    tmpvar_12 = _LightShadowData.x;
  } else {
    tmpvar_12 = 1.0;
  };
  vec3 tmpvar_13;
  vec3 tmpvar_14;
  tmpvar_14 = normalize(tmpvar_8);
  tmpvar_13 = (_LightColor0.xyz * (tmpvar_9.w * tmpvar_12));
  vec3 viewDir_15;
  viewDir_15 = -(tmpvar_7);
  float specularTerm_16;
  float tmpvar_17;
  tmpvar_17 = (1.0 - _Glossiness);
  vec3 tmpvar_18;
  vec3 inVec_19;
  inVec_19 = (tmpvar_14 + viewDir_15);
  tmpvar_18 = (inVec_19 * inversesqrt(max (0.001, 
    dot (inVec_19, inVec_19)
  )));
  float tmpvar_20;
  tmpvar_20 = dot (tmpvar_6, viewDir_15);
  vec3 tmpvar_21;
  if ((tmpvar_20 < 0.0)) {
    tmpvar_21 = (tmpvar_6 + (viewDir_15 * (
      -(tmpvar_20)
     + 1e-05)));
  } else {
    tmpvar_21 = tmpvar_6;
  };
  float tmpvar_22;
  tmpvar_22 = max (0.0, dot (tmpvar_21, tmpvar_14));
  float tmpvar_23;
  tmpvar_23 = max (0.0, dot (tmpvar_21, tmpvar_18));
  float tmpvar_24;
  tmpvar_24 = max (0.0, dot (tmpvar_21, viewDir_15));
  float tmpvar_25;
  tmpvar_25 = max (0.0, dot (tmpvar_14, tmpvar_18));
  float tmpvar_26;
  tmpvar_26 = (tmpvar_17 * tmpvar_17);
  float tmpvar_27;
  tmpvar_27 = (tmpvar_17 * tmpvar_17);
  float tmpvar_28;
  tmpvar_28 = (tmpvar_27 * tmpvar_27);
  float tmpvar_29;
  tmpvar_29 = (((tmpvar_23 * tmpvar_23) * (tmpvar_28 - 1.0)) + 1.0);
  float x_30;
  x_30 = (1.0 - tmpvar_22);
  float x_31;
  x_31 = (1.0 - tmpvar_24);
  float tmpvar_32;
  tmpvar_32 = (0.5 + ((2.0 * tmpvar_25) * (tmpvar_25 * tmpvar_17)));
  float tmpvar_33;
  tmpvar_33 = ((1.0 + (
    (tmpvar_32 - 1.0)
   * 
    ((x_30 * x_30) * ((x_30 * x_30) * x_30))
  )) * (1.0 + (
    (tmpvar_32 - 1.0)
   * 
    ((x_31 * x_31) * ((x_31 * x_31) * x_31))
  )));
  float tmpvar_34;
  tmpvar_34 = (((2.0 / 
    (((tmpvar_22 * (
      (tmpvar_24 * (1.0 - tmpvar_26))
     + tmpvar_26)) + (tmpvar_24 * (
      (tmpvar_22 * (1.0 - tmpvar_26))
     + tmpvar_26))) + 1e-05)
  ) * (tmpvar_28 / 
    (((3.141593 * tmpvar_29) * tmpvar_29) + 1e-07)
  )) * 0.7853982);
  specularTerm_16 = tmpvar_34;
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    specularTerm_16 = sqrt(max (0.0001, tmpvar_34));
  };
  float tmpvar_35;
  tmpvar_35 = max (0.0, (specularTerm_16 * tmpvar_22));
  specularTerm_16 = tmpvar_35;
  float x_36;
  x_36 = (1.0 - tmpvar_25);
  vec4 tmpvar_37;
  tmpvar_37.w = 1.0;
  tmpvar_37.xyz = ((tmpvar_4 * (tmpvar_13 * 
    (tmpvar_33 * tmpvar_22)
  )) + ((tmpvar_35 * tmpvar_13) * (tmpvar_5 + 
    ((1.0 - tmpvar_5) * ((x_36 * x_36) * ((x_36 * x_36) * x_36)))
  )));
  vec4 xlat_varoutput_38;
  xlat_varoutput_38.xyz = tmpvar_37.xyz;
  xlat_varoutput_38.w = tmpvar_1;
  gl_FragData[0] = xlat_varoutput_38;
}


#endif
"
}
SubProgram "d3d9 " {
// Stats: 42 math
Keywords { "POINT" "SHADOWS_CUBE" "_ALPHABLEND_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
Matrix 11 [_LightMatrix0] 3
Matrix 4 [_Object2World]
Matrix 8 [_World2Object] 3
Matrix 0 [glstate_matrix_mvp]
Vector 19 [_DetailAlbedoMap_ST]
Vector 16 [_LightPositionRange]
Vector 18 [_MainTex_ST]
Float 20 [_UVSec]
Vector 14 [_WorldSpaceCameraPos]
Vector 15 [_WorldSpaceLightPos0]
Vector 17 [unity_WorldTransformParams]
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   row_major float4x4 _LightMatrix0;
//   float4 _LightPositionRange;
//   float4 _MainTex_ST;
//   row_major float4x4 _Object2World;
//   float _UVSec;
//   row_major float4x4 _World2Object;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 glstate_matrix_mvp;
//   float4 unity_WorldTransformParams;
//
//
// Registers:
//
//   Name                       Reg   Size
//   -------------------------- ----- ----
//   glstate_matrix_mvp         c0       4
//   _Object2World              c4       4
//   _World2Object              c8       3
//   _LightMatrix0              c11      3
//   _WorldSpaceCameraPos       c14      1
//   _WorldSpaceLightPos0       c15      1
//   _LightPositionRange        c16      1
//   unity_WorldTransformParams c17      1
//   _MainTex_ST                c18      1
//   _DetailAlbedoMap_ST        c19      1
//   _UVSec                     c20      1
//

    vs_3_0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_tangent v4
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6.xyz
    dcl_texcoord6 o7.xyz
    dp4 o0.x, c0, v0
    dp4 o0.y, c1, v0
    dp4 o0.z, c2, v0
    dp4 o0.w, c3, v0
    mad o1.xy, v2, c18, c18.zwzw
    abs r0.x, c20.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c19.xyxy, c19
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add o2.xyz, r0, -c14
    mul r1.xyz, c9, v1.y
    mad r1.xyz, c8, v1.x, r1
    mad r1.xyz, c10, v1.z, r1
    nrm r2.xyz, r1
    dp3 r1.x, c4, v4
    dp3 r1.y, c5, v4
    dp3 r1.z, c6, v4
    nrm r3.xyz, r1
    mul r1.xyz, r2.zxyw, r3.yzxw
    mad r1.xyz, r2.yzxw, r3.zxyw, -r1
    mov o5.xyz, r2
    mov o3.xyz, r3
    mul r1.w, c17.w, v4.w
    mul o4.xyz, r1.w, r1
    dp4 r0.w, c7, v0
    dp4 o6.x, c11, r0
    dp4 o6.y, c12, r0
    dp4 o6.z, c13, r0
    add o7.xyz, r0, -c16
    mad r0.xyz, r0, -c15.w, c15
    mov o3.w, r0.x
    mov o4.w, r0.y
    mov o5.w, r0.z

// approximately 41 instruction slots used
"
}
SubProgram "d3d11 " {
// Stats: 46 math
Keywords { "POINT" "SHADOWS_CUBE" "_ALPHABLEND_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
ConstBuffer "$Globals" 304
Matrix 240 [_LightMatrix0]
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
Vector 16 [_LightPositionRange]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
Vector 336 [unity_WorldTransformParams]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer cb0[19], immediateIndexed
      dcl_constantbuffer cb1[5], immediateIndexed
      dcl_constantbuffer cb2[2], immediateIndexed
      dcl_constantbuffer cb3[22], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyz
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: mad o0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   4: eq r0.x, cb0[13].z, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[11].xxxy, cb0[11].zzzw
   7: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  13: mul r1.xyz, v4.yyyy, cb3[13].xyzx
  14: mad r1.xyz, cb3[12].xyzx, v4.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[14].xyzx, v4.zzzz, r1.xyzx
  16: dp3 r0.w, r1.xyzx, r1.xyzx
  17: rsq r0.w, r0.w
  18: mul r1.xyz, r0.wwww, r1.xyzx
  19: mov o3.xyz, r1.xyzx
  20: mad r2.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  21: add o7.xyz, r0.xyzx, -cb2[1].xyzx
  22: mov o3.w, r2.x
  23: mul r0.x, v1.x, cb3[16].x
  24: mul r0.y, v1.x, cb3[17].x
  25: mul r0.z, v1.x, cb3[18].x
  26: mul r3.x, v1.y, cb3[16].y
  27: mul r3.y, v1.y, cb3[17].y
  28: mul r3.z, v1.y, cb3[18].y
  29: add r0.xyz, r0.xyzx, r3.xyzx
  30: mul r3.x, v1.z, cb3[16].z
  31: mul r3.y, v1.z, cb3[17].z
  32: mul r3.z, v1.z, cb3[18].z
  33: add r0.xyz, r0.xyzx, r3.xyzx
  34: dp3 r0.w, r0.xyzx, r0.xyzx
  35: rsq r0.w, r0.w
  36: mul r0.xyz, r0.wwww, r0.xyzx
  37: mul r3.xyz, r1.yzxy, r0.zxyz
  38: mad r1.xyz, r0.yzxy, r1.zxyz, -r3.xyzx
  39: mov o5.xyz, r0.xyzx
  40: mul r0.x, v4.w, cb3[21].w
  41: mul o4.xyz, r0.xxxx, r1.xyzx
  42: mov o4.w, r2.y
  43: mov o5.w, r2.z
  44: mul r0.xyzw, v0.yyyy, cb3[13].xyzw
  45: mad r0.xyzw, cb3[12].xyzw, v0.xxxx, r0.xyzw
  46: mad r0.xyzw, cb3[14].xyzw, v0.zzzz, r0.xyzw
  47: mad r0.xyzw, cb3[15].xyzw, v0.wwww, r0.xyzw
  48: mul r1.xyz, r0.yyyy, cb0[16].xyzx
  49: mad r1.xyz, cb0[15].xyzx, r0.xxxx, r1.xyzx
  50: mad r0.xyz, cb0[17].xyzx, r0.zzzz, r1.xyzx
  51: mad o6.xyz, cb0[18].xyzx, r0.wwww, r0.xyzx
  52: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
// Stats: 105 math, 4 textures, 3 branches
Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "_ALPHABLEND_ON" }
"#version 120

#ifdef VERTEX
uniform vec3 _WorldSpaceCameraPos;
uniform vec4 _WorldSpaceLightPos0;
uniform vec4 _LightPositionRange;

uniform mat4 _Object2World;
uniform mat4 _World2Object;
uniform vec4 unity_WorldTransformParams;
uniform vec4 _MainTex_ST;
uniform vec4 _DetailAlbedoMap_ST;
uniform float _UVSec;
uniform mat4 _LightMatrix0;
attribute vec4 TANGENT;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec3 xlv_TEXCOORD5;
varying vec3 xlv_TEXCOORD6;
void main ()
{
  vec2 tmpvar_1;
  tmpvar_1 = gl_MultiTexCoord0.xy;
  vec2 tmpvar_2;
  tmpvar_2 = gl_MultiTexCoord1.xy;
  vec4 tmpvar_3;
  vec4 tmpvar_4;
  vec4 tmpvar_5;
  vec4 tmpvar_6;
  vec4 tmpvar_7;
  tmpvar_7 = (_Object2World * gl_Vertex);
  tmpvar_3 = (gl_ModelViewProjectionMatrix * gl_Vertex);
  vec4 texcoord_8;
  texcoord_8.xy = ((gl_MultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  vec2 tmpvar_9;
  if ((_UVSec == 0.0)) {
    tmpvar_9 = tmpvar_1;
  } else {
    tmpvar_9 = tmpvar_2;
  };
  texcoord_8.zw = ((tmpvar_9 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  vec4 v_10;
  v_10.x = _World2Object[0].x;
  v_10.y = _World2Object[1].x;
  v_10.z = _World2Object[2].x;
  v_10.w = _World2Object[3].x;
  vec4 v_11;
  v_11.x = _World2Object[0].y;
  v_11.y = _World2Object[1].y;
  v_11.z = _World2Object[2].y;
  v_11.w = _World2Object[3].y;
  vec4 v_12;
  v_12.x = _World2Object[0].z;
  v_12.y = _World2Object[1].z;
  v_12.z = _World2Object[2].z;
  v_12.w = _World2Object[3].z;
  vec3 tmpvar_13;
  tmpvar_13 = normalize(((
    (v_10.xyz * gl_Normal.x)
   + 
    (v_11.xyz * gl_Normal.y)
  ) + (v_12.xyz * gl_Normal.z)));
  mat3 tmpvar_14;
  tmpvar_14[0] = _Object2World[0].xyz;
  tmpvar_14[1] = _Object2World[1].xyz;
  tmpvar_14[2] = _Object2World[2].xyz;
  vec4 tmpvar_15;
  tmpvar_15.xyz = normalize((tmpvar_14 * TANGENT.xyz));
  tmpvar_15.w = TANGENT.w;
  vec3 tmpvar_16;
  vec3 tmpvar_17;
  tmpvar_16 = tmpvar_15.xyz;
  tmpvar_17 = (((tmpvar_13.yzx * tmpvar_15.zxy) - (tmpvar_13.zxy * tmpvar_15.yzx)) * (TANGENT.w * unity_WorldTransformParams.w));
  vec3 tmpvar_18;
  vec3 tmpvar_19;
  vec3 tmpvar_20;
  tmpvar_18.x = tmpvar_16.x;
  tmpvar_18.y = tmpvar_17.x;
  tmpvar_18.z = tmpvar_13.x;
  tmpvar_19.x = tmpvar_16.y;
  tmpvar_19.y = tmpvar_17.y;
  tmpvar_19.z = tmpvar_13.y;
  tmpvar_20.x = tmpvar_16.z;
  tmpvar_20.y = tmpvar_17.z;
  tmpvar_20.z = tmpvar_13.z;
  vec3 v_21;
  v_21.x = tmpvar_18.x;
  v_21.y = tmpvar_19.x;
  v_21.z = tmpvar_20.x;
  tmpvar_4.xyz = v_21;
  vec3 v_22;
  v_22.x = tmpvar_18.y;
  v_22.y = tmpvar_19.y;
  v_22.z = tmpvar_20.y;
  tmpvar_5.xyz = v_22;
  vec3 v_23;
  v_23.x = tmpvar_18.z;
  v_23.y = tmpvar_19.z;
  v_23.z = tmpvar_20.z;
  tmpvar_6.xyz = v_23;
  vec3 tmpvar_24;
  tmpvar_24 = (_WorldSpaceLightPos0.xyz - (tmpvar_7.xyz * _WorldSpaceLightPos0.w));
  tmpvar_4.w = tmpvar_24.x;
  tmpvar_5.w = tmpvar_24.y;
  tmpvar_6.w = tmpvar_24.z;
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = texcoord_8;
  xlv_TEXCOORD1 = (tmpvar_7.xyz - _WorldSpaceCameraPos);
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  vec4 tmpvar_25;
  tmpvar_25 = (_Object2World * gl_Vertex);
  xlv_TEXCOORD5 = (_LightMatrix0 * tmpvar_25).xyz;
  xlv_TEXCOORD6 = (tmpvar_25.xyz - _LightPositionRange.xyz);
}


#endif
#ifdef FRAGMENT
uniform vec4 _LightPositionRange;
uniform vec4 _LightShadowData;
uniform vec4 unity_ColorSpaceDielectricSpec;
uniform vec4 unity_ColorSpaceLuminance;
uniform vec4 _LightColor0;
uniform vec4 _Color;
uniform sampler2D _MainTex;
uniform float _Metallic;
uniform float _Glossiness;
uniform samplerCube _ShadowMapTexture;
uniform samplerCube _LightTexture0;
uniform sampler2D _LightTextureB0;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec3 xlv_TEXCOORD5;
varying vec3 xlv_TEXCOORD6;
void main ()
{
  float tmpvar_1;
  vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  tmpvar_1 = (tmpvar_2.w * _Color.w);
  vec3 tmpvar_3;
  tmpvar_3 = (_Color.xyz * tmpvar_2.xyz);
  vec3 tmpvar_4;
  vec3 tmpvar_5;
  tmpvar_5 = mix (unity_ColorSpaceDielectricSpec.xyz, tmpvar_3, vec3(_Metallic));
  tmpvar_4 = (tmpvar_3 * (unity_ColorSpaceDielectricSpec.w - (_Metallic * unity_ColorSpaceDielectricSpec.w)));
  vec3 tmpvar_6;
  tmpvar_6 = normalize(xlv_TEXCOORD2_2.xyz);
  vec3 tmpvar_7;
  tmpvar_7 = normalize(xlv_TEXCOORD1);
  vec3 tmpvar_8;
  tmpvar_8.x = xlv_TEXCOORD2.w;
  tmpvar_8.y = xlv_TEXCOORD2_1.w;
  tmpvar_8.z = xlv_TEXCOORD2_2.w;
  vec4 tmpvar_9;
  tmpvar_9 = texture2D (_LightTextureB0, vec2(dot (xlv_TEXCOORD5, xlv_TEXCOORD5)));
  vec4 tmpvar_10;
  tmpvar_10 = textureCube (_LightTexture0, xlv_TEXCOORD5);
  float mydist_11;
  mydist_11 = ((sqrt(
    dot (xlv_TEXCOORD6, xlv_TEXCOORD6)
  ) * _LightPositionRange.w) * 0.97);
  vec4 tmpvar_12;
  tmpvar_12 = textureCube (_ShadowMapTexture, xlv_TEXCOORD6);
  float tmpvar_13;
  if ((tmpvar_12.x < mydist_11)) {
    tmpvar_13 = _LightShadowData.x;
  } else {
    tmpvar_13 = 1.0;
  };
  vec3 tmpvar_14;
  vec3 tmpvar_15;
  tmpvar_15 = normalize(tmpvar_8);
  tmpvar_14 = (_LightColor0.xyz * ((tmpvar_9.w * tmpvar_10.w) * tmpvar_13));
  vec3 viewDir_16;
  viewDir_16 = -(tmpvar_7);
  float specularTerm_17;
  float tmpvar_18;
  tmpvar_18 = (1.0 - _Glossiness);
  vec3 tmpvar_19;
  vec3 inVec_20;
  inVec_20 = (tmpvar_15 + viewDir_16);
  tmpvar_19 = (inVec_20 * inversesqrt(max (0.001, 
    dot (inVec_20, inVec_20)
  )));
  float tmpvar_21;
  tmpvar_21 = dot (tmpvar_6, viewDir_16);
  vec3 tmpvar_22;
  if ((tmpvar_21 < 0.0)) {
    tmpvar_22 = (tmpvar_6 + (viewDir_16 * (
      -(tmpvar_21)
     + 1e-05)));
  } else {
    tmpvar_22 = tmpvar_6;
  };
  float tmpvar_23;
  tmpvar_23 = max (0.0, dot (tmpvar_22, tmpvar_15));
  float tmpvar_24;
  tmpvar_24 = max (0.0, dot (tmpvar_22, tmpvar_19));
  float tmpvar_25;
  tmpvar_25 = max (0.0, dot (tmpvar_22, viewDir_16));
  float tmpvar_26;
  tmpvar_26 = max (0.0, dot (tmpvar_15, tmpvar_19));
  float tmpvar_27;
  tmpvar_27 = (tmpvar_18 * tmpvar_18);
  float tmpvar_28;
  tmpvar_28 = (tmpvar_18 * tmpvar_18);
  float tmpvar_29;
  tmpvar_29 = (tmpvar_28 * tmpvar_28);
  float tmpvar_30;
  tmpvar_30 = (((tmpvar_24 * tmpvar_24) * (tmpvar_29 - 1.0)) + 1.0);
  float x_31;
  x_31 = (1.0 - tmpvar_23);
  float x_32;
  x_32 = (1.0 - tmpvar_25);
  float tmpvar_33;
  tmpvar_33 = (0.5 + ((2.0 * tmpvar_26) * (tmpvar_26 * tmpvar_18)));
  float tmpvar_34;
  tmpvar_34 = ((1.0 + (
    (tmpvar_33 - 1.0)
   * 
    ((x_31 * x_31) * ((x_31 * x_31) * x_31))
  )) * (1.0 + (
    (tmpvar_33 - 1.0)
   * 
    ((x_32 * x_32) * ((x_32 * x_32) * x_32))
  )));
  float tmpvar_35;
  tmpvar_35 = (((2.0 / 
    (((tmpvar_23 * (
      (tmpvar_25 * (1.0 - tmpvar_27))
     + tmpvar_27)) + (tmpvar_25 * (
      (tmpvar_23 * (1.0 - tmpvar_27))
     + tmpvar_27))) + 1e-05)
  ) * (tmpvar_29 / 
    (((3.141593 * tmpvar_30) * tmpvar_30) + 1e-07)
  )) * 0.7853982);
  specularTerm_17 = tmpvar_35;
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    specularTerm_17 = sqrt(max (0.0001, tmpvar_35));
  };
  float tmpvar_36;
  tmpvar_36 = max (0.0, (specularTerm_17 * tmpvar_23));
  specularTerm_17 = tmpvar_36;
  float x_37;
  x_37 = (1.0 - tmpvar_26);
  vec4 tmpvar_38;
  tmpvar_38.w = 1.0;
  tmpvar_38.xyz = ((tmpvar_4 * (tmpvar_14 * 
    (tmpvar_34 * tmpvar_23)
  )) + ((tmpvar_36 * tmpvar_14) * (tmpvar_5 + 
    ((1.0 - tmpvar_5) * ((x_37 * x_37) * ((x_37 * x_37) * x_37)))
  )));
  vec4 xlat_varoutput_39;
  xlat_varoutput_39.xyz = tmpvar_38.xyz;
  xlat_varoutput_39.w = tmpvar_1;
  gl_FragData[0] = xlat_varoutput_39;
}


#endif
"
}
SubProgram "d3d9 " {
// Stats: 42 math
Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "_ALPHABLEND_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
Matrix 11 [_LightMatrix0] 3
Matrix 4 [_Object2World]
Matrix 8 [_World2Object] 3
Matrix 0 [glstate_matrix_mvp]
Vector 19 [_DetailAlbedoMap_ST]
Vector 16 [_LightPositionRange]
Vector 18 [_MainTex_ST]
Float 20 [_UVSec]
Vector 14 [_WorldSpaceCameraPos]
Vector 15 [_WorldSpaceLightPos0]
Vector 17 [unity_WorldTransformParams]
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   row_major float4x4 _LightMatrix0;
//   float4 _LightPositionRange;
//   float4 _MainTex_ST;
//   row_major float4x4 _Object2World;
//   float _UVSec;
//   row_major float4x4 _World2Object;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 glstate_matrix_mvp;
//   float4 unity_WorldTransformParams;
//
//
// Registers:
//
//   Name                       Reg   Size
//   -------------------------- ----- ----
//   glstate_matrix_mvp         c0       4
//   _Object2World              c4       4
//   _World2Object              c8       3
//   _LightMatrix0              c11      3
//   _WorldSpaceCameraPos       c14      1
//   _WorldSpaceLightPos0       c15      1
//   _LightPositionRange        c16      1
//   unity_WorldTransformParams c17      1
//   _MainTex_ST                c18      1
//   _DetailAlbedoMap_ST        c19      1
//   _UVSec                     c20      1
//

    vs_3_0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_tangent v4
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6.xyz
    dcl_texcoord6 o7.xyz
    dp4 o0.x, c0, v0
    dp4 o0.y, c1, v0
    dp4 o0.z, c2, v0
    dp4 o0.w, c3, v0
    mad o1.xy, v2, c18, c18.zwzw
    abs r0.x, c20.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c19.xyxy, c19
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add o2.xyz, r0, -c14
    mul r1.xyz, c9, v1.y
    mad r1.xyz, c8, v1.x, r1
    mad r1.xyz, c10, v1.z, r1
    nrm r2.xyz, r1
    dp3 r1.x, c4, v4
    dp3 r1.y, c5, v4
    dp3 r1.z, c6, v4
    nrm r3.xyz, r1
    mul r1.xyz, r2.zxyw, r3.yzxw
    mad r1.xyz, r2.yzxw, r3.zxyw, -r1
    mov o5.xyz, r2
    mov o3.xyz, r3
    mul r1.w, c17.w, v4.w
    mul o4.xyz, r1.w, r1
    dp4 r0.w, c7, v0
    dp4 o6.x, c11, r0
    dp4 o6.y, c12, r0
    dp4 o6.z, c13, r0
    add o7.xyz, r0, -c16
    mad r0.xyz, r0, -c15.w, c15
    mov o3.w, r0.x
    mov o4.w, r0.y
    mov o5.w, r0.z

// approximately 41 instruction slots used
"
}
SubProgram "d3d11 " {
// Stats: 46 math
Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "_ALPHABLEND_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
ConstBuffer "$Globals" 304
Matrix 240 [_LightMatrix0]
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
Vector 16 [_LightPositionRange]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
Vector 336 [unity_WorldTransformParams]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer cb0[19], immediateIndexed
      dcl_constantbuffer cb1[5], immediateIndexed
      dcl_constantbuffer cb2[2], immediateIndexed
      dcl_constantbuffer cb3[22], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyz
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: mad o0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   4: eq r0.x, cb0[13].z, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[11].xxxy, cb0[11].zzzw
   7: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  13: mul r1.xyz, v4.yyyy, cb3[13].xyzx
  14: mad r1.xyz, cb3[12].xyzx, v4.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[14].xyzx, v4.zzzz, r1.xyzx
  16: dp3 r0.w, r1.xyzx, r1.xyzx
  17: rsq r0.w, r0.w
  18: mul r1.xyz, r0.wwww, r1.xyzx
  19: mov o3.xyz, r1.xyzx
  20: mad r2.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  21: add o7.xyz, r0.xyzx, -cb2[1].xyzx
  22: mov o3.w, r2.x
  23: mul r0.x, v1.x, cb3[16].x
  24: mul r0.y, v1.x, cb3[17].x
  25: mul r0.z, v1.x, cb3[18].x
  26: mul r3.x, v1.y, cb3[16].y
  27: mul r3.y, v1.y, cb3[17].y
  28: mul r3.z, v1.y, cb3[18].y
  29: add r0.xyz, r0.xyzx, r3.xyzx
  30: mul r3.x, v1.z, cb3[16].z
  31: mul r3.y, v1.z, cb3[17].z
  32: mul r3.z, v1.z, cb3[18].z
  33: add r0.xyz, r0.xyzx, r3.xyzx
  34: dp3 r0.w, r0.xyzx, r0.xyzx
  35: rsq r0.w, r0.w
  36: mul r0.xyz, r0.wwww, r0.xyzx
  37: mul r3.xyz, r1.yzxy, r0.zxyz
  38: mad r1.xyz, r0.yzxy, r1.zxyz, -r3.xyzx
  39: mov o5.xyz, r0.xyzx
  40: mul r0.x, v4.w, cb3[21].w
  41: mul o4.xyz, r0.xxxx, r1.xyzx
  42: mov o4.w, r2.y
  43: mov o5.w, r2.z
  44: mul r0.xyzw, v0.yyyy, cb3[13].xyzw
  45: mad r0.xyzw, cb3[12].xyzw, v0.xxxx, r0.xyzw
  46: mad r0.xyzw, cb3[14].xyzw, v0.zzzz, r0.xyzw
  47: mad r0.xyzw, cb3[15].xyzw, v0.wwww, r0.xyzw
  48: mul r1.xyz, r0.yyyy, cb0[16].xyzx
  49: mad r1.xyz, cb0[15].xyzx, r0.xxxx, r1.xyzx
  50: mad r0.xyz, cb0[17].xyzx, r0.zzzz, r1.xyzx
  51: mad o6.xyz, cb0[18].xyzx, r0.wwww, r0.xyzx
  52: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
// Stats: 113 math, 7 textures, 2 branches
Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" "SHADOWS_NATIVE" "_ALPHABLEND_ON" }
"#version 120

#ifdef VERTEX
uniform vec3 _WorldSpaceCameraPos;
uniform vec4 _WorldSpaceLightPos0;
uniform mat4 unity_World2Shadow[4];

uniform mat4 _Object2World;
uniform mat4 _World2Object;
uniform vec4 unity_WorldTransformParams;
uniform vec4 _MainTex_ST;
uniform vec4 _DetailAlbedoMap_ST;
uniform float _UVSec;
uniform mat4 _LightMatrix0;
attribute vec4 TANGENT;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
varying vec4 xlv_TEXCOORD6;
void main ()
{
  vec2 tmpvar_1;
  tmpvar_1 = gl_MultiTexCoord0.xy;
  vec2 tmpvar_2;
  tmpvar_2 = gl_MultiTexCoord1.xy;
  vec4 tmpvar_3;
  vec4 tmpvar_4;
  vec4 tmpvar_5;
  vec4 tmpvar_6;
  vec4 tmpvar_7;
  tmpvar_7 = (_Object2World * gl_Vertex);
  tmpvar_3 = (gl_ModelViewProjectionMatrix * gl_Vertex);
  vec4 texcoord_8;
  texcoord_8.xy = ((gl_MultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  vec2 tmpvar_9;
  if ((_UVSec == 0.0)) {
    tmpvar_9 = tmpvar_1;
  } else {
    tmpvar_9 = tmpvar_2;
  };
  texcoord_8.zw = ((tmpvar_9 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  vec4 v_10;
  v_10.x = _World2Object[0].x;
  v_10.y = _World2Object[1].x;
  v_10.z = _World2Object[2].x;
  v_10.w = _World2Object[3].x;
  vec4 v_11;
  v_11.x = _World2Object[0].y;
  v_11.y = _World2Object[1].y;
  v_11.z = _World2Object[2].y;
  v_11.w = _World2Object[3].y;
  vec4 v_12;
  v_12.x = _World2Object[0].z;
  v_12.y = _World2Object[1].z;
  v_12.z = _World2Object[2].z;
  v_12.w = _World2Object[3].z;
  vec3 tmpvar_13;
  tmpvar_13 = normalize(((
    (v_10.xyz * gl_Normal.x)
   + 
    (v_11.xyz * gl_Normal.y)
  ) + (v_12.xyz * gl_Normal.z)));
  mat3 tmpvar_14;
  tmpvar_14[0] = _Object2World[0].xyz;
  tmpvar_14[1] = _Object2World[1].xyz;
  tmpvar_14[2] = _Object2World[2].xyz;
  vec4 tmpvar_15;
  tmpvar_15.xyz = normalize((tmpvar_14 * TANGENT.xyz));
  tmpvar_15.w = TANGENT.w;
  vec3 tmpvar_16;
  vec3 tmpvar_17;
  tmpvar_16 = tmpvar_15.xyz;
  tmpvar_17 = (((tmpvar_13.yzx * tmpvar_15.zxy) - (tmpvar_13.zxy * tmpvar_15.yzx)) * (TANGENT.w * unity_WorldTransformParams.w));
  vec3 tmpvar_18;
  vec3 tmpvar_19;
  vec3 tmpvar_20;
  tmpvar_18.x = tmpvar_16.x;
  tmpvar_18.y = tmpvar_17.x;
  tmpvar_18.z = tmpvar_13.x;
  tmpvar_19.x = tmpvar_16.y;
  tmpvar_19.y = tmpvar_17.y;
  tmpvar_19.z = tmpvar_13.y;
  tmpvar_20.x = tmpvar_16.z;
  tmpvar_20.y = tmpvar_17.z;
  tmpvar_20.z = tmpvar_13.z;
  vec3 v_21;
  v_21.x = tmpvar_18.x;
  v_21.y = tmpvar_19.x;
  v_21.z = tmpvar_20.x;
  tmpvar_4.xyz = v_21;
  vec3 v_22;
  v_22.x = tmpvar_18.y;
  v_22.y = tmpvar_19.y;
  v_22.z = tmpvar_20.y;
  tmpvar_5.xyz = v_22;
  vec3 v_23;
  v_23.x = tmpvar_18.z;
  v_23.y = tmpvar_19.z;
  v_23.z = tmpvar_20.z;
  tmpvar_6.xyz = v_23;
  vec3 tmpvar_24;
  tmpvar_24 = (_WorldSpaceLightPos0.xyz - (tmpvar_7.xyz * _WorldSpaceLightPos0.w));
  tmpvar_4.w = tmpvar_24.x;
  tmpvar_5.w = tmpvar_24.y;
  tmpvar_6.w = tmpvar_24.z;
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = texcoord_8;
  xlv_TEXCOORD1 = (tmpvar_7.xyz - _WorldSpaceCameraPos);
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  vec4 tmpvar_25;
  tmpvar_25 = (_Object2World * gl_Vertex);
  xlv_TEXCOORD5 = (_LightMatrix0 * tmpvar_25);
  xlv_TEXCOORD6 = (unity_World2Shadow[0] * tmpvar_25);
}


#endif
#ifdef FRAGMENT
uniform vec4 _LightShadowData;
uniform vec4 unity_ColorSpaceDielectricSpec;
uniform vec4 unity_ColorSpaceLuminance;
uniform vec4 _LightColor0;
uniform vec4 _Color;
uniform sampler2D _MainTex;
uniform float _Metallic;
uniform float _Glossiness;
uniform sampler2DShadow _ShadowMapTexture;
uniform vec4 _ShadowOffsets[4];
uniform sampler2D _LightTexture0;
uniform sampler2D _LightTextureB0;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
varying vec4 xlv_TEXCOORD6;
void main ()
{
  float tmpvar_1;
  vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  tmpvar_1 = (tmpvar_2.w * _Color.w);
  vec3 tmpvar_3;
  tmpvar_3 = (_Color.xyz * tmpvar_2.xyz);
  vec3 tmpvar_4;
  vec3 tmpvar_5;
  tmpvar_5 = mix (unity_ColorSpaceDielectricSpec.xyz, tmpvar_3, vec3(_Metallic));
  tmpvar_4 = (tmpvar_3 * (unity_ColorSpaceDielectricSpec.w - (_Metallic * unity_ColorSpaceDielectricSpec.w)));
  vec3 tmpvar_6;
  tmpvar_6 = normalize(xlv_TEXCOORD2_2.xyz);
  vec3 tmpvar_7;
  tmpvar_7.x = xlv_TEXCOORD2.w;
  tmpvar_7.y = xlv_TEXCOORD2_1.w;
  tmpvar_7.z = xlv_TEXCOORD2_2.w;
  vec4 shadows_8;
  vec3 tmpvar_9;
  tmpvar_9 = (xlv_TEXCOORD6.xyz / xlv_TEXCOORD6.w);
  shadows_8.x = shadow2D (_ShadowMapTexture, (tmpvar_9 + _ShadowOffsets[0].xyz)).x;
  shadows_8.y = shadow2D (_ShadowMapTexture, (tmpvar_9 + _ShadowOffsets[1].xyz)).x;
  shadows_8.z = shadow2D (_ShadowMapTexture, (tmpvar_9 + _ShadowOffsets[2].xyz)).x;
  shadows_8.w = shadow2D (_ShadowMapTexture, (tmpvar_9 + _ShadowOffsets[3].xyz)).x;
  shadows_8 = (_LightShadowData.xxxx + (shadows_8 * (1.0 - _LightShadowData.xxxx)));
  vec3 tmpvar_10;
  vec3 tmpvar_11;
  tmpvar_11 = normalize(tmpvar_7);
  tmpvar_10 = (_LightColor0.xyz * ((
    (float((xlv_TEXCOORD5.z > 0.0)) * texture2D (_LightTexture0, ((xlv_TEXCOORD5.xy / xlv_TEXCOORD5.w) + 0.5)).w)
   * texture2D (_LightTextureB0, vec2(
    dot (xlv_TEXCOORD5.xyz, xlv_TEXCOORD5.xyz)
  )).w) * dot (shadows_8, vec4(0.25, 0.25, 0.25, 0.25))));
  vec3 viewDir_12;
  viewDir_12 = -(normalize(xlv_TEXCOORD1));
  float specularTerm_13;
  float tmpvar_14;
  tmpvar_14 = (1.0 - _Glossiness);
  vec3 tmpvar_15;
  vec3 inVec_16;
  inVec_16 = (tmpvar_11 + viewDir_12);
  tmpvar_15 = (inVec_16 * inversesqrt(max (0.001, 
    dot (inVec_16, inVec_16)
  )));
  float tmpvar_17;
  tmpvar_17 = dot (tmpvar_6, viewDir_12);
  vec3 tmpvar_18;
  if ((tmpvar_17 < 0.0)) {
    tmpvar_18 = (tmpvar_6 + (viewDir_12 * (
      -(tmpvar_17)
     + 1e-05)));
  } else {
    tmpvar_18 = tmpvar_6;
  };
  float tmpvar_19;
  tmpvar_19 = max (0.0, dot (tmpvar_18, tmpvar_11));
  float tmpvar_20;
  tmpvar_20 = max (0.0, dot (tmpvar_18, tmpvar_15));
  float tmpvar_21;
  tmpvar_21 = max (0.0, dot (tmpvar_18, viewDir_12));
  float tmpvar_22;
  tmpvar_22 = max (0.0, dot (tmpvar_11, tmpvar_15));
  float tmpvar_23;
  tmpvar_23 = (tmpvar_14 * tmpvar_14);
  float tmpvar_24;
  tmpvar_24 = (tmpvar_14 * tmpvar_14);
  float tmpvar_25;
  tmpvar_25 = (tmpvar_24 * tmpvar_24);
  float tmpvar_26;
  tmpvar_26 = (((tmpvar_20 * tmpvar_20) * (tmpvar_25 - 1.0)) + 1.0);
  float x_27;
  x_27 = (1.0 - tmpvar_19);
  float x_28;
  x_28 = (1.0 - tmpvar_21);
  float tmpvar_29;
  tmpvar_29 = (0.5 + ((2.0 * tmpvar_22) * (tmpvar_22 * tmpvar_14)));
  float tmpvar_30;
  tmpvar_30 = ((1.0 + (
    (tmpvar_29 - 1.0)
   * 
    ((x_27 * x_27) * ((x_27 * x_27) * x_27))
  )) * (1.0 + (
    (tmpvar_29 - 1.0)
   * 
    ((x_28 * x_28) * ((x_28 * x_28) * x_28))
  )));
  float tmpvar_31;
  tmpvar_31 = (((2.0 / 
    (((tmpvar_19 * (
      (tmpvar_21 * (1.0 - tmpvar_23))
     + tmpvar_23)) + (tmpvar_21 * (
      (tmpvar_19 * (1.0 - tmpvar_23))
     + tmpvar_23))) + 1e-05)
  ) * (tmpvar_25 / 
    (((3.141593 * tmpvar_26) * tmpvar_26) + 1e-07)
  )) * 0.7853982);
  specularTerm_13 = tmpvar_31;
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    specularTerm_13 = sqrt(max (0.0001, tmpvar_31));
  };
  float tmpvar_32;
  tmpvar_32 = max (0.0, (specularTerm_13 * tmpvar_19));
  specularTerm_13 = tmpvar_32;
  float x_33;
  x_33 = (1.0 - tmpvar_22);
  vec4 tmpvar_34;
  tmpvar_34.w = 1.0;
  tmpvar_34.xyz = ((tmpvar_4 * (tmpvar_10 * 
    (tmpvar_30 * tmpvar_19)
  )) + ((tmpvar_32 * tmpvar_10) * (tmpvar_5 + 
    ((1.0 - tmpvar_5) * ((x_33 * x_33) * ((x_33 * x_33) * x_33)))
  )));
  vec4 xlat_varoutput_35;
  xlat_varoutput_35.xyz = tmpvar_34.xyz;
  xlat_varoutput_35.w = tmpvar_1;
  gl_FragData[0] = xlat_varoutput_35;
}


#endif
"
}
SubProgram "d3d9 " {
// Stats: 46 math
Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" "SHADOWS_NATIVE" "_ALPHABLEND_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
Matrix 12 [_LightMatrix0]
Matrix 8 [_Object2World]
Matrix 16 [_World2Object] 3
Matrix 4 [glstate_matrix_mvp]
Matrix 0 [unity_World2Shadow0]
Vector 23 [_DetailAlbedoMap_ST]
Vector 22 [_MainTex_ST]
Float 24 [_UVSec]
Vector 19 [_WorldSpaceCameraPos]
Vector 20 [_WorldSpaceLightPos0]
Vector 21 [unity_WorldTransformParams]
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   row_major float4x4 _LightMatrix0;
//   float4 _MainTex_ST;
//   row_major float4x4 _Object2World;
//   float _UVSec;
//   row_major float4x4 _World2Object;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 glstate_matrix_mvp;
//   row_major float4x4 unity_World2Shadow[4];
//   float4 unity_WorldTransformParams;
//
//
// Registers:
//
//   Name                       Reg   Size
//   -------------------------- ----- ----
//   unity_World2Shadow         c0       4
//   glstate_matrix_mvp         c4       4
//   _Object2World              c8       4
//   _LightMatrix0              c12      4
//   _World2Object              c16      3
//   _WorldSpaceCameraPos       c19      1
//   _WorldSpaceLightPos0       c20      1
//   unity_WorldTransformParams c21      1
//   _MainTex_ST                c22      1
//   _DetailAlbedoMap_ST        c23      1
//   _UVSec                     c24      1
//

    vs_3_0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_tangent v4
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6
    dcl_texcoord6 o7
    dp4 o0.x, c4, v0
    dp4 o0.y, c5, v0
    dp4 o0.z, c6, v0
    dp4 o0.w, c7, v0
    mad o1.xy, v2, c22, c22.zwzw
    abs r0.x, c24.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c23.xyxy, c23
    dp4 r0.x, c8, v0
    dp4 r0.y, c9, v0
    dp4 r0.z, c10, v0
    add o2.xyz, r0, -c19
    mul r1.xyz, c17, v1.y
    mad r1.xyz, c16, v1.x, r1
    mad r1.xyz, c18, v1.z, r1
    nrm r2.xyz, r1
    dp3 r1.x, c8, v4
    dp3 r1.y, c9, v4
    dp3 r1.z, c10, v4
    nrm r3.xyz, r1
    mul r1.xyz, r2.zxyw, r3.yzxw
    mad r1.xyz, r2.yzxw, r3.zxyw, -r1
    mov o5.xyz, r2
    mov o3.xyz, r3
    mul r1.w, c21.w, v4.w
    mul o4.xyz, r1.w, r1
    dp4 r0.w, c11, v0
    dp4 o6.x, c12, r0
    dp4 o6.y, c13, r0
    dp4 o6.z, c14, r0
    dp4 o6.w, c15, r0
    dp4 o7.x, c0, r0
    dp4 o7.y, c1, r0
    dp4 o7.z, c2, r0
    dp4 o7.w, c3, r0
    mad r0.xyz, r0, -c20.w, c20
    mov o3.w, r0.x
    mov o4.w, r0.y
    mov o5.w, r0.z

// approximately 45 instruction slots used
"
}
SubProgram "d3d11 " {
// Stats: 49 math
Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" "SHADOWS_NATIVE" "_ALPHABLEND_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
ConstBuffer "$Globals" 368
Matrix 304 [_LightMatrix0]
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
ConstBuffer "UnityShadows" 416
Matrix 128 [unity_World2Shadow0]
Matrix 192 [unity_World2Shadow1]
Matrix 256 [unity_World2Shadow2]
Matrix 320 [unity_World2Shadow3]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
Vector 336 [unity_WorldTransformParams]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityShadows" 3
BindCB  "UnityPerDraw" 4
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer cb0[23], immediateIndexed
      dcl_constantbuffer cb1[5], immediateIndexed
      dcl_constantbuffer cb2[1], immediateIndexed
      dcl_constantbuffer cb3[12], immediateIndexed
      dcl_constantbuffer cb4[22], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb4[1].xyzw
   1: mad r0.xyzw, cb4[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb4[2].xyzw, v0.zzzz, r0.xyzw
   3: mad o0.xyzw, cb4[3].xyzw, v0.wwww, r0.xyzw
   4: eq r0.x, cb0[13].z, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[11].xxxy, cb0[11].zzzw
   7: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   8: mul r0.xyz, v0.yyyy, cb4[13].xyzx
   9: mad r0.xyz, cb4[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb4[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb4[15].xyzx, v0.wwww, r0.xyzx
  12: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  13: mad r0.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  14: mov o3.w, r0.x
  15: mul r1.xyz, v4.yyyy, cb4[13].xyzx
  16: mad r1.xyz, cb4[12].xyzx, v4.xxxx, r1.xyzx
  17: mad r1.xyz, cb4[14].xyzx, v4.zzzz, r1.xyzx
  18: dp3 r0.x, r1.xyzx, r1.xyzx
  19: rsq r0.x, r0.x
  20: mul r1.xyz, r0.xxxx, r1.xyzx
  21: mov o3.xyz, r1.xyzx
  22: mul r2.x, v1.x, cb4[16].x
  23: mul r2.y, v1.x, cb4[17].x
  24: mul r2.z, v1.x, cb4[18].x
  25: mul r3.x, v1.y, cb4[16].y
  26: mul r3.y, v1.y, cb4[17].y
  27: mul r3.z, v1.y, cb4[18].y
  28: add r2.xyz, r2.xyzx, r3.xyzx
  29: mul r3.x, v1.z, cb4[16].z
  30: mul r3.y, v1.z, cb4[17].z
  31: mul r3.z, v1.z, cb4[18].z
  32: add r2.xyz, r2.xyzx, r3.xyzx
  33: dp3 r0.x, r2.xyzx, r2.xyzx
  34: rsq r0.x, r0.x
  35: mul r2.xyz, r0.xxxx, r2.xyzx
  36: mul r3.xyz, r1.yzxy, r2.zxyz
  37: mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
  38: mov o5.xyz, r2.xyzx
  39: mul r0.x, v4.w, cb4[21].w
  40: mul o4.xyz, r0.xxxx, r1.xyzx
  41: mov o4.w, r0.y
  42: mov o5.w, r0.z
  43: mul r0.xyzw, v0.yyyy, cb4[13].xyzw
  44: mad r0.xyzw, cb4[12].xyzw, v0.xxxx, r0.xyzw
  45: mad r0.xyzw, cb4[14].xyzw, v0.zzzz, r0.xyzw
  46: mad r0.xyzw, cb4[15].xyzw, v0.wwww, r0.xyzw
  47: mul r1.xyzw, r0.yyyy, cb0[20].xyzw
  48: mad r1.xyzw, cb0[19].xyzw, r0.xxxx, r1.xyzw
  49: mad r1.xyzw, cb0[21].xyzw, r0.zzzz, r1.xyzw
  50: mad o6.xyzw, cb0[22].xyzw, r0.wwww, r1.xyzw
  51: mul r1.xyzw, r0.yyyy, cb3[9].xyzw
  52: mad r1.xyzw, cb3[8].xyzw, r0.xxxx, r1.xyzw
  53: mad r1.xyzw, cb3[10].xyzw, r0.zzzz, r1.xyzw
  54: mad o7.xyzw, cb3[11].xyzw, r0.wwww, r1.xyzw
  55: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
// Stats: 112 math, 6 textures, 6 branches
Keywords { "POINT" "SHADOWS_CUBE" "SHADOWS_SOFT" "_ALPHABLEND_ON" }
"#version 120

#ifdef VERTEX
uniform vec3 _WorldSpaceCameraPos;
uniform vec4 _WorldSpaceLightPos0;
uniform vec4 _LightPositionRange;

uniform mat4 _Object2World;
uniform mat4 _World2Object;
uniform vec4 unity_WorldTransformParams;
uniform vec4 _MainTex_ST;
uniform vec4 _DetailAlbedoMap_ST;
uniform float _UVSec;
uniform mat4 _LightMatrix0;
attribute vec4 TANGENT;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec3 xlv_TEXCOORD5;
varying vec3 xlv_TEXCOORD6;
void main ()
{
  vec2 tmpvar_1;
  tmpvar_1 = gl_MultiTexCoord0.xy;
  vec2 tmpvar_2;
  tmpvar_2 = gl_MultiTexCoord1.xy;
  vec4 tmpvar_3;
  vec4 tmpvar_4;
  vec4 tmpvar_5;
  vec4 tmpvar_6;
  vec4 tmpvar_7;
  tmpvar_7 = (_Object2World * gl_Vertex);
  tmpvar_3 = (gl_ModelViewProjectionMatrix * gl_Vertex);
  vec4 texcoord_8;
  texcoord_8.xy = ((gl_MultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  vec2 tmpvar_9;
  if ((_UVSec == 0.0)) {
    tmpvar_9 = tmpvar_1;
  } else {
    tmpvar_9 = tmpvar_2;
  };
  texcoord_8.zw = ((tmpvar_9 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  vec4 v_10;
  v_10.x = _World2Object[0].x;
  v_10.y = _World2Object[1].x;
  v_10.z = _World2Object[2].x;
  v_10.w = _World2Object[3].x;
  vec4 v_11;
  v_11.x = _World2Object[0].y;
  v_11.y = _World2Object[1].y;
  v_11.z = _World2Object[2].y;
  v_11.w = _World2Object[3].y;
  vec4 v_12;
  v_12.x = _World2Object[0].z;
  v_12.y = _World2Object[1].z;
  v_12.z = _World2Object[2].z;
  v_12.w = _World2Object[3].z;
  vec3 tmpvar_13;
  tmpvar_13 = normalize(((
    (v_10.xyz * gl_Normal.x)
   + 
    (v_11.xyz * gl_Normal.y)
  ) + (v_12.xyz * gl_Normal.z)));
  mat3 tmpvar_14;
  tmpvar_14[0] = _Object2World[0].xyz;
  tmpvar_14[1] = _Object2World[1].xyz;
  tmpvar_14[2] = _Object2World[2].xyz;
  vec4 tmpvar_15;
  tmpvar_15.xyz = normalize((tmpvar_14 * TANGENT.xyz));
  tmpvar_15.w = TANGENT.w;
  vec3 tmpvar_16;
  vec3 tmpvar_17;
  tmpvar_16 = tmpvar_15.xyz;
  tmpvar_17 = (((tmpvar_13.yzx * tmpvar_15.zxy) - (tmpvar_13.zxy * tmpvar_15.yzx)) * (TANGENT.w * unity_WorldTransformParams.w));
  vec3 tmpvar_18;
  vec3 tmpvar_19;
  vec3 tmpvar_20;
  tmpvar_18.x = tmpvar_16.x;
  tmpvar_18.y = tmpvar_17.x;
  tmpvar_18.z = tmpvar_13.x;
  tmpvar_19.x = tmpvar_16.y;
  tmpvar_19.y = tmpvar_17.y;
  tmpvar_19.z = tmpvar_13.y;
  tmpvar_20.x = tmpvar_16.z;
  tmpvar_20.y = tmpvar_17.z;
  tmpvar_20.z = tmpvar_13.z;
  vec3 v_21;
  v_21.x = tmpvar_18.x;
  v_21.y = tmpvar_19.x;
  v_21.z = tmpvar_20.x;
  tmpvar_4.xyz = v_21;
  vec3 v_22;
  v_22.x = tmpvar_18.y;
  v_22.y = tmpvar_19.y;
  v_22.z = tmpvar_20.y;
  tmpvar_5.xyz = v_22;
  vec3 v_23;
  v_23.x = tmpvar_18.z;
  v_23.y = tmpvar_19.z;
  v_23.z = tmpvar_20.z;
  tmpvar_6.xyz = v_23;
  vec3 tmpvar_24;
  tmpvar_24 = (_WorldSpaceLightPos0.xyz - (tmpvar_7.xyz * _WorldSpaceLightPos0.w));
  tmpvar_4.w = tmpvar_24.x;
  tmpvar_5.w = tmpvar_24.y;
  tmpvar_6.w = tmpvar_24.z;
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = texcoord_8;
  xlv_TEXCOORD1 = (tmpvar_7.xyz - _WorldSpaceCameraPos);
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  vec4 tmpvar_25;
  tmpvar_25 = (_Object2World * gl_Vertex);
  xlv_TEXCOORD5 = (_LightMatrix0 * tmpvar_25).xyz;
  xlv_TEXCOORD6 = (tmpvar_25.xyz - _LightPositionRange.xyz);
}


#endif
#ifdef FRAGMENT
uniform vec4 _LightPositionRange;
uniform vec4 _LightShadowData;
uniform vec4 unity_ColorSpaceDielectricSpec;
uniform vec4 unity_ColorSpaceLuminance;
uniform vec4 _LightColor0;
uniform vec4 _Color;
uniform sampler2D _MainTex;
uniform float _Metallic;
uniform float _Glossiness;
uniform samplerCube _ShadowMapTexture;
uniform sampler2D _LightTexture0;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec3 xlv_TEXCOORD5;
varying vec3 xlv_TEXCOORD6;
void main ()
{
  float tmpvar_1;
  vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  tmpvar_1 = (tmpvar_2.w * _Color.w);
  vec3 tmpvar_3;
  tmpvar_3 = (_Color.xyz * tmpvar_2.xyz);
  vec3 tmpvar_4;
  vec3 tmpvar_5;
  tmpvar_5 = mix (unity_ColorSpaceDielectricSpec.xyz, tmpvar_3, vec3(_Metallic));
  tmpvar_4 = (tmpvar_3 * (unity_ColorSpaceDielectricSpec.w - (_Metallic * unity_ColorSpaceDielectricSpec.w)));
  vec3 tmpvar_6;
  tmpvar_6 = normalize(xlv_TEXCOORD2_2.xyz);
  vec3 tmpvar_7;
  tmpvar_7 = normalize(xlv_TEXCOORD1);
  vec3 tmpvar_8;
  tmpvar_8.x = xlv_TEXCOORD2.w;
  tmpvar_8.y = xlv_TEXCOORD2_1.w;
  tmpvar_8.z = xlv_TEXCOORD2_2.w;
  vec4 tmpvar_9;
  tmpvar_9 = texture2D (_LightTexture0, vec2(dot (xlv_TEXCOORD5, xlv_TEXCOORD5)));
  vec4 shadowVals_10;
  shadowVals_10.x = textureCube (_ShadowMapTexture, (xlv_TEXCOORD6 + vec3(0.0078125, 0.0078125, 0.0078125))).x;
  shadowVals_10.y = textureCube (_ShadowMapTexture, (xlv_TEXCOORD6 + vec3(-0.0078125, -0.0078125, 0.0078125))).x;
  shadowVals_10.z = textureCube (_ShadowMapTexture, (xlv_TEXCOORD6 + vec3(-0.0078125, 0.0078125, -0.0078125))).x;
  shadowVals_10.w = textureCube (_ShadowMapTexture, (xlv_TEXCOORD6 + vec3(0.0078125, -0.0078125, -0.0078125))).x;
  bvec4 tmpvar_11;
  tmpvar_11 = lessThan (shadowVals_10, vec4(((
    sqrt(dot (xlv_TEXCOORD6, xlv_TEXCOORD6))
   * _LightPositionRange.w) * 0.97)));
  vec4 tmpvar_12;
  tmpvar_12 = _LightShadowData.xxxx;
  float tmpvar_13;
  if (tmpvar_11.x) {
    tmpvar_13 = tmpvar_12.x;
  } else {
    tmpvar_13 = 1.0;
  };
  float tmpvar_14;
  if (tmpvar_11.y) {
    tmpvar_14 = tmpvar_12.y;
  } else {
    tmpvar_14 = 1.0;
  };
  float tmpvar_15;
  if (tmpvar_11.z) {
    tmpvar_15 = tmpvar_12.z;
  } else {
    tmpvar_15 = 1.0;
  };
  float tmpvar_16;
  if (tmpvar_11.w) {
    tmpvar_16 = tmpvar_12.w;
  } else {
    tmpvar_16 = 1.0;
  };
  vec4 tmpvar_17;
  tmpvar_17.x = tmpvar_13;
  tmpvar_17.y = tmpvar_14;
  tmpvar_17.z = tmpvar_15;
  tmpvar_17.w = tmpvar_16;
  vec3 tmpvar_18;
  vec3 tmpvar_19;
  tmpvar_19 = normalize(tmpvar_8);
  tmpvar_18 = (_LightColor0.xyz * (tmpvar_9.w * dot (tmpvar_17, vec4(0.25, 0.25, 0.25, 0.25))));
  vec3 viewDir_20;
  viewDir_20 = -(tmpvar_7);
  float specularTerm_21;
  float tmpvar_22;
  tmpvar_22 = (1.0 - _Glossiness);
  vec3 tmpvar_23;
  vec3 inVec_24;
  inVec_24 = (tmpvar_19 + viewDir_20);
  tmpvar_23 = (inVec_24 * inversesqrt(max (0.001, 
    dot (inVec_24, inVec_24)
  )));
  float tmpvar_25;
  tmpvar_25 = dot (tmpvar_6, viewDir_20);
  vec3 tmpvar_26;
  if ((tmpvar_25 < 0.0)) {
    tmpvar_26 = (tmpvar_6 + (viewDir_20 * (
      -(tmpvar_25)
     + 1e-05)));
  } else {
    tmpvar_26 = tmpvar_6;
  };
  float tmpvar_27;
  tmpvar_27 = max (0.0, dot (tmpvar_26, tmpvar_19));
  float tmpvar_28;
  tmpvar_28 = max (0.0, dot (tmpvar_26, tmpvar_23));
  float tmpvar_29;
  tmpvar_29 = max (0.0, dot (tmpvar_26, viewDir_20));
  float tmpvar_30;
  tmpvar_30 = max (0.0, dot (tmpvar_19, tmpvar_23));
  float tmpvar_31;
  tmpvar_31 = (tmpvar_22 * tmpvar_22);
  float tmpvar_32;
  tmpvar_32 = (tmpvar_22 * tmpvar_22);
  float tmpvar_33;
  tmpvar_33 = (tmpvar_32 * tmpvar_32);
  float tmpvar_34;
  tmpvar_34 = (((tmpvar_28 * tmpvar_28) * (tmpvar_33 - 1.0)) + 1.0);
  float x_35;
  x_35 = (1.0 - tmpvar_27);
  float x_36;
  x_36 = (1.0 - tmpvar_29);
  float tmpvar_37;
  tmpvar_37 = (0.5 + ((2.0 * tmpvar_30) * (tmpvar_30 * tmpvar_22)));
  float tmpvar_38;
  tmpvar_38 = ((1.0 + (
    (tmpvar_37 - 1.0)
   * 
    ((x_35 * x_35) * ((x_35 * x_35) * x_35))
  )) * (1.0 + (
    (tmpvar_37 - 1.0)
   * 
    ((x_36 * x_36) * ((x_36 * x_36) * x_36))
  )));
  float tmpvar_39;
  tmpvar_39 = (((2.0 / 
    (((tmpvar_27 * (
      (tmpvar_29 * (1.0 - tmpvar_31))
     + tmpvar_31)) + (tmpvar_29 * (
      (tmpvar_27 * (1.0 - tmpvar_31))
     + tmpvar_31))) + 1e-05)
  ) * (tmpvar_33 / 
    (((3.141593 * tmpvar_34) * tmpvar_34) + 1e-07)
  )) * 0.7853982);
  specularTerm_21 = tmpvar_39;
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    specularTerm_21 = sqrt(max (0.0001, tmpvar_39));
  };
  float tmpvar_40;
  tmpvar_40 = max (0.0, (specularTerm_21 * tmpvar_27));
  specularTerm_21 = tmpvar_40;
  float x_41;
  x_41 = (1.0 - tmpvar_30);
  vec4 tmpvar_42;
  tmpvar_42.w = 1.0;
  tmpvar_42.xyz = ((tmpvar_4 * (tmpvar_18 * 
    (tmpvar_38 * tmpvar_27)
  )) + ((tmpvar_40 * tmpvar_18) * (tmpvar_5 + 
    ((1.0 - tmpvar_5) * ((x_41 * x_41) * ((x_41 * x_41) * x_41)))
  )));
  vec4 xlat_varoutput_43;
  xlat_varoutput_43.xyz = tmpvar_42.xyz;
  xlat_varoutput_43.w = tmpvar_1;
  gl_FragData[0] = xlat_varoutput_43;
}


#endif
"
}
SubProgram "d3d9 " {
// Stats: 42 math
Keywords { "POINT" "SHADOWS_CUBE" "SHADOWS_SOFT" "_ALPHABLEND_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
Matrix 11 [_LightMatrix0] 3
Matrix 4 [_Object2World]
Matrix 8 [_World2Object] 3
Matrix 0 [glstate_matrix_mvp]
Vector 19 [_DetailAlbedoMap_ST]
Vector 16 [_LightPositionRange]
Vector 18 [_MainTex_ST]
Float 20 [_UVSec]
Vector 14 [_WorldSpaceCameraPos]
Vector 15 [_WorldSpaceLightPos0]
Vector 17 [unity_WorldTransformParams]
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   row_major float4x4 _LightMatrix0;
//   float4 _LightPositionRange;
//   float4 _MainTex_ST;
//   row_major float4x4 _Object2World;
//   float _UVSec;
//   row_major float4x4 _World2Object;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 glstate_matrix_mvp;
//   float4 unity_WorldTransformParams;
//
//
// Registers:
//
//   Name                       Reg   Size
//   -------------------------- ----- ----
//   glstate_matrix_mvp         c0       4
//   _Object2World              c4       4
//   _World2Object              c8       3
//   _LightMatrix0              c11      3
//   _WorldSpaceCameraPos       c14      1
//   _WorldSpaceLightPos0       c15      1
//   _LightPositionRange        c16      1
//   unity_WorldTransformParams c17      1
//   _MainTex_ST                c18      1
//   _DetailAlbedoMap_ST        c19      1
//   _UVSec                     c20      1
//

    vs_3_0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_tangent v4
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6.xyz
    dcl_texcoord6 o7.xyz
    dp4 o0.x, c0, v0
    dp4 o0.y, c1, v0
    dp4 o0.z, c2, v0
    dp4 o0.w, c3, v0
    mad o1.xy, v2, c18, c18.zwzw
    abs r0.x, c20.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c19.xyxy, c19
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add o2.xyz, r0, -c14
    mul r1.xyz, c9, v1.y
    mad r1.xyz, c8, v1.x, r1
    mad r1.xyz, c10, v1.z, r1
    nrm r2.xyz, r1
    dp3 r1.x, c4, v4
    dp3 r1.y, c5, v4
    dp3 r1.z, c6, v4
    nrm r3.xyz, r1
    mul r1.xyz, r2.zxyw, r3.yzxw
    mad r1.xyz, r2.yzxw, r3.zxyw, -r1
    mov o5.xyz, r2
    mov o3.xyz, r3
    mul r1.w, c17.w, v4.w
    mul o4.xyz, r1.w, r1
    dp4 r0.w, c7, v0
    dp4 o6.x, c11, r0
    dp4 o6.y, c12, r0
    dp4 o6.z, c13, r0
    add o7.xyz, r0, -c16
    mad r0.xyz, r0, -c15.w, c15
    mov o3.w, r0.x
    mov o4.w, r0.y
    mov o5.w, r0.z

// approximately 41 instruction slots used
"
}
SubProgram "d3d11 " {
// Stats: 46 math
Keywords { "POINT" "SHADOWS_CUBE" "SHADOWS_SOFT" "_ALPHABLEND_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
ConstBuffer "$Globals" 304
Matrix 240 [_LightMatrix0]
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
Vector 16 [_LightPositionRange]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
Vector 336 [unity_WorldTransformParams]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer cb0[19], immediateIndexed
      dcl_constantbuffer cb1[5], immediateIndexed
      dcl_constantbuffer cb2[2], immediateIndexed
      dcl_constantbuffer cb3[22], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyz
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: mad o0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   4: eq r0.x, cb0[13].z, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[11].xxxy, cb0[11].zzzw
   7: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  13: mul r1.xyz, v4.yyyy, cb3[13].xyzx
  14: mad r1.xyz, cb3[12].xyzx, v4.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[14].xyzx, v4.zzzz, r1.xyzx
  16: dp3 r0.w, r1.xyzx, r1.xyzx
  17: rsq r0.w, r0.w
  18: mul r1.xyz, r0.wwww, r1.xyzx
  19: mov o3.xyz, r1.xyzx
  20: mad r2.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  21: add o7.xyz, r0.xyzx, -cb2[1].xyzx
  22: mov o3.w, r2.x
  23: mul r0.x, v1.x, cb3[16].x
  24: mul r0.y, v1.x, cb3[17].x
  25: mul r0.z, v1.x, cb3[18].x
  26: mul r3.x, v1.y, cb3[16].y
  27: mul r3.y, v1.y, cb3[17].y
  28: mul r3.z, v1.y, cb3[18].y
  29: add r0.xyz, r0.xyzx, r3.xyzx
  30: mul r3.x, v1.z, cb3[16].z
  31: mul r3.y, v1.z, cb3[17].z
  32: mul r3.z, v1.z, cb3[18].z
  33: add r0.xyz, r0.xyzx, r3.xyzx
  34: dp3 r0.w, r0.xyzx, r0.xyzx
  35: rsq r0.w, r0.w
  36: mul r0.xyz, r0.wwww, r0.xyzx
  37: mul r3.xyz, r1.yzxy, r0.zxyz
  38: mad r1.xyz, r0.yzxy, r1.zxyz, -r3.xyzx
  39: mov o5.xyz, r0.xyzx
  40: mul r0.x, v4.w, cb3[21].w
  41: mul o4.xyz, r0.xxxx, r1.xyzx
  42: mov o4.w, r2.y
  43: mov o5.w, r2.z
  44: mul r0.xyzw, v0.yyyy, cb3[13].xyzw
  45: mad r0.xyzw, cb3[12].xyzw, v0.xxxx, r0.xyzw
  46: mad r0.xyzw, cb3[14].xyzw, v0.zzzz, r0.xyzw
  47: mad r0.xyzw, cb3[15].xyzw, v0.wwww, r0.xyzw
  48: mul r1.xyz, r0.yyyy, cb0[16].xyzx
  49: mad r1.xyz, cb0[15].xyzx, r0.xxxx, r1.xyzx
  50: mad r0.xyz, cb0[17].xyzx, r0.zzzz, r1.xyzx
  51: mad o6.xyz, cb0[18].xyzx, r0.wwww, r0.xyzx
  52: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
// Stats: 113 math, 7 textures, 6 branches
Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "SHADOWS_SOFT" "_ALPHABLEND_ON" }
"#version 120

#ifdef VERTEX
uniform vec3 _WorldSpaceCameraPos;
uniform vec4 _WorldSpaceLightPos0;
uniform vec4 _LightPositionRange;

uniform mat4 _Object2World;
uniform mat4 _World2Object;
uniform vec4 unity_WorldTransformParams;
uniform vec4 _MainTex_ST;
uniform vec4 _DetailAlbedoMap_ST;
uniform float _UVSec;
uniform mat4 _LightMatrix0;
attribute vec4 TANGENT;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec3 xlv_TEXCOORD5;
varying vec3 xlv_TEXCOORD6;
void main ()
{
  vec2 tmpvar_1;
  tmpvar_1 = gl_MultiTexCoord0.xy;
  vec2 tmpvar_2;
  tmpvar_2 = gl_MultiTexCoord1.xy;
  vec4 tmpvar_3;
  vec4 tmpvar_4;
  vec4 tmpvar_5;
  vec4 tmpvar_6;
  vec4 tmpvar_7;
  tmpvar_7 = (_Object2World * gl_Vertex);
  tmpvar_3 = (gl_ModelViewProjectionMatrix * gl_Vertex);
  vec4 texcoord_8;
  texcoord_8.xy = ((gl_MultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  vec2 tmpvar_9;
  if ((_UVSec == 0.0)) {
    tmpvar_9 = tmpvar_1;
  } else {
    tmpvar_9 = tmpvar_2;
  };
  texcoord_8.zw = ((tmpvar_9 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  vec4 v_10;
  v_10.x = _World2Object[0].x;
  v_10.y = _World2Object[1].x;
  v_10.z = _World2Object[2].x;
  v_10.w = _World2Object[3].x;
  vec4 v_11;
  v_11.x = _World2Object[0].y;
  v_11.y = _World2Object[1].y;
  v_11.z = _World2Object[2].y;
  v_11.w = _World2Object[3].y;
  vec4 v_12;
  v_12.x = _World2Object[0].z;
  v_12.y = _World2Object[1].z;
  v_12.z = _World2Object[2].z;
  v_12.w = _World2Object[3].z;
  vec3 tmpvar_13;
  tmpvar_13 = normalize(((
    (v_10.xyz * gl_Normal.x)
   + 
    (v_11.xyz * gl_Normal.y)
  ) + (v_12.xyz * gl_Normal.z)));
  mat3 tmpvar_14;
  tmpvar_14[0] = _Object2World[0].xyz;
  tmpvar_14[1] = _Object2World[1].xyz;
  tmpvar_14[2] = _Object2World[2].xyz;
  vec4 tmpvar_15;
  tmpvar_15.xyz = normalize((tmpvar_14 * TANGENT.xyz));
  tmpvar_15.w = TANGENT.w;
  vec3 tmpvar_16;
  vec3 tmpvar_17;
  tmpvar_16 = tmpvar_15.xyz;
  tmpvar_17 = (((tmpvar_13.yzx * tmpvar_15.zxy) - (tmpvar_13.zxy * tmpvar_15.yzx)) * (TANGENT.w * unity_WorldTransformParams.w));
  vec3 tmpvar_18;
  vec3 tmpvar_19;
  vec3 tmpvar_20;
  tmpvar_18.x = tmpvar_16.x;
  tmpvar_18.y = tmpvar_17.x;
  tmpvar_18.z = tmpvar_13.x;
  tmpvar_19.x = tmpvar_16.y;
  tmpvar_19.y = tmpvar_17.y;
  tmpvar_19.z = tmpvar_13.y;
  tmpvar_20.x = tmpvar_16.z;
  tmpvar_20.y = tmpvar_17.z;
  tmpvar_20.z = tmpvar_13.z;
  vec3 v_21;
  v_21.x = tmpvar_18.x;
  v_21.y = tmpvar_19.x;
  v_21.z = tmpvar_20.x;
  tmpvar_4.xyz = v_21;
  vec3 v_22;
  v_22.x = tmpvar_18.y;
  v_22.y = tmpvar_19.y;
  v_22.z = tmpvar_20.y;
  tmpvar_5.xyz = v_22;
  vec3 v_23;
  v_23.x = tmpvar_18.z;
  v_23.y = tmpvar_19.z;
  v_23.z = tmpvar_20.z;
  tmpvar_6.xyz = v_23;
  vec3 tmpvar_24;
  tmpvar_24 = (_WorldSpaceLightPos0.xyz - (tmpvar_7.xyz * _WorldSpaceLightPos0.w));
  tmpvar_4.w = tmpvar_24.x;
  tmpvar_5.w = tmpvar_24.y;
  tmpvar_6.w = tmpvar_24.z;
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = texcoord_8;
  xlv_TEXCOORD1 = (tmpvar_7.xyz - _WorldSpaceCameraPos);
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  vec4 tmpvar_25;
  tmpvar_25 = (_Object2World * gl_Vertex);
  xlv_TEXCOORD5 = (_LightMatrix0 * tmpvar_25).xyz;
  xlv_TEXCOORD6 = (tmpvar_25.xyz - _LightPositionRange.xyz);
}


#endif
#ifdef FRAGMENT
uniform vec4 _LightPositionRange;
uniform vec4 _LightShadowData;
uniform vec4 unity_ColorSpaceDielectricSpec;
uniform vec4 unity_ColorSpaceLuminance;
uniform vec4 _LightColor0;
uniform vec4 _Color;
uniform sampler2D _MainTex;
uniform float _Metallic;
uniform float _Glossiness;
uniform samplerCube _ShadowMapTexture;
uniform samplerCube _LightTexture0;
uniform sampler2D _LightTextureB0;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec3 xlv_TEXCOORD5;
varying vec3 xlv_TEXCOORD6;
void main ()
{
  float tmpvar_1;
  vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  tmpvar_1 = (tmpvar_2.w * _Color.w);
  vec3 tmpvar_3;
  tmpvar_3 = (_Color.xyz * tmpvar_2.xyz);
  vec3 tmpvar_4;
  vec3 tmpvar_5;
  tmpvar_5 = mix (unity_ColorSpaceDielectricSpec.xyz, tmpvar_3, vec3(_Metallic));
  tmpvar_4 = (tmpvar_3 * (unity_ColorSpaceDielectricSpec.w - (_Metallic * unity_ColorSpaceDielectricSpec.w)));
  vec3 tmpvar_6;
  tmpvar_6 = normalize(xlv_TEXCOORD2_2.xyz);
  vec3 tmpvar_7;
  tmpvar_7 = normalize(xlv_TEXCOORD1);
  vec3 tmpvar_8;
  tmpvar_8.x = xlv_TEXCOORD2.w;
  tmpvar_8.y = xlv_TEXCOORD2_1.w;
  tmpvar_8.z = xlv_TEXCOORD2_2.w;
  vec4 tmpvar_9;
  tmpvar_9 = texture2D (_LightTextureB0, vec2(dot (xlv_TEXCOORD5, xlv_TEXCOORD5)));
  vec4 tmpvar_10;
  tmpvar_10 = textureCube (_LightTexture0, xlv_TEXCOORD5);
  vec4 shadowVals_11;
  shadowVals_11.x = textureCube (_ShadowMapTexture, (xlv_TEXCOORD6 + vec3(0.0078125, 0.0078125, 0.0078125))).x;
  shadowVals_11.y = textureCube (_ShadowMapTexture, (xlv_TEXCOORD6 + vec3(-0.0078125, -0.0078125, 0.0078125))).x;
  shadowVals_11.z = textureCube (_ShadowMapTexture, (xlv_TEXCOORD6 + vec3(-0.0078125, 0.0078125, -0.0078125))).x;
  shadowVals_11.w = textureCube (_ShadowMapTexture, (xlv_TEXCOORD6 + vec3(0.0078125, -0.0078125, -0.0078125))).x;
  bvec4 tmpvar_12;
  tmpvar_12 = lessThan (shadowVals_11, vec4(((
    sqrt(dot (xlv_TEXCOORD6, xlv_TEXCOORD6))
   * _LightPositionRange.w) * 0.97)));
  vec4 tmpvar_13;
  tmpvar_13 = _LightShadowData.xxxx;
  float tmpvar_14;
  if (tmpvar_12.x) {
    tmpvar_14 = tmpvar_13.x;
  } else {
    tmpvar_14 = 1.0;
  };
  float tmpvar_15;
  if (tmpvar_12.y) {
    tmpvar_15 = tmpvar_13.y;
  } else {
    tmpvar_15 = 1.0;
  };
  float tmpvar_16;
  if (tmpvar_12.z) {
    tmpvar_16 = tmpvar_13.z;
  } else {
    tmpvar_16 = 1.0;
  };
  float tmpvar_17;
  if (tmpvar_12.w) {
    tmpvar_17 = tmpvar_13.w;
  } else {
    tmpvar_17 = 1.0;
  };
  vec4 tmpvar_18;
  tmpvar_18.x = tmpvar_14;
  tmpvar_18.y = tmpvar_15;
  tmpvar_18.z = tmpvar_16;
  tmpvar_18.w = tmpvar_17;
  vec3 tmpvar_19;
  vec3 tmpvar_20;
  tmpvar_20 = normalize(tmpvar_8);
  tmpvar_19 = (_LightColor0.xyz * ((tmpvar_9.w * tmpvar_10.w) * dot (tmpvar_18, vec4(0.25, 0.25, 0.25, 0.25))));
  vec3 viewDir_21;
  viewDir_21 = -(tmpvar_7);
  float specularTerm_22;
  float tmpvar_23;
  tmpvar_23 = (1.0 - _Glossiness);
  vec3 tmpvar_24;
  vec3 inVec_25;
  inVec_25 = (tmpvar_20 + viewDir_21);
  tmpvar_24 = (inVec_25 * inversesqrt(max (0.001, 
    dot (inVec_25, inVec_25)
  )));
  float tmpvar_26;
  tmpvar_26 = dot (tmpvar_6, viewDir_21);
  vec3 tmpvar_27;
  if ((tmpvar_26 < 0.0)) {
    tmpvar_27 = (tmpvar_6 + (viewDir_21 * (
      -(tmpvar_26)
     + 1e-05)));
  } else {
    tmpvar_27 = tmpvar_6;
  };
  float tmpvar_28;
  tmpvar_28 = max (0.0, dot (tmpvar_27, tmpvar_20));
  float tmpvar_29;
  tmpvar_29 = max (0.0, dot (tmpvar_27, tmpvar_24));
  float tmpvar_30;
  tmpvar_30 = max (0.0, dot (tmpvar_27, viewDir_21));
  float tmpvar_31;
  tmpvar_31 = max (0.0, dot (tmpvar_20, tmpvar_24));
  float tmpvar_32;
  tmpvar_32 = (tmpvar_23 * tmpvar_23);
  float tmpvar_33;
  tmpvar_33 = (tmpvar_23 * tmpvar_23);
  float tmpvar_34;
  tmpvar_34 = (tmpvar_33 * tmpvar_33);
  float tmpvar_35;
  tmpvar_35 = (((tmpvar_29 * tmpvar_29) * (tmpvar_34 - 1.0)) + 1.0);
  float x_36;
  x_36 = (1.0 - tmpvar_28);
  float x_37;
  x_37 = (1.0 - tmpvar_30);
  float tmpvar_38;
  tmpvar_38 = (0.5 + ((2.0 * tmpvar_31) * (tmpvar_31 * tmpvar_23)));
  float tmpvar_39;
  tmpvar_39 = ((1.0 + (
    (tmpvar_38 - 1.0)
   * 
    ((x_36 * x_36) * ((x_36 * x_36) * x_36))
  )) * (1.0 + (
    (tmpvar_38 - 1.0)
   * 
    ((x_37 * x_37) * ((x_37 * x_37) * x_37))
  )));
  float tmpvar_40;
  tmpvar_40 = (((2.0 / 
    (((tmpvar_28 * (
      (tmpvar_30 * (1.0 - tmpvar_32))
     + tmpvar_32)) + (tmpvar_30 * (
      (tmpvar_28 * (1.0 - tmpvar_32))
     + tmpvar_32))) + 1e-05)
  ) * (tmpvar_34 / 
    (((3.141593 * tmpvar_35) * tmpvar_35) + 1e-07)
  )) * 0.7853982);
  specularTerm_22 = tmpvar_40;
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    specularTerm_22 = sqrt(max (0.0001, tmpvar_40));
  };
  float tmpvar_41;
  tmpvar_41 = max (0.0, (specularTerm_22 * tmpvar_28));
  specularTerm_22 = tmpvar_41;
  float x_42;
  x_42 = (1.0 - tmpvar_31);
  vec4 tmpvar_43;
  tmpvar_43.w = 1.0;
  tmpvar_43.xyz = ((tmpvar_4 * (tmpvar_19 * 
    (tmpvar_39 * tmpvar_28)
  )) + ((tmpvar_41 * tmpvar_19) * (tmpvar_5 + 
    ((1.0 - tmpvar_5) * ((x_42 * x_42) * ((x_42 * x_42) * x_42)))
  )));
  vec4 xlat_varoutput_44;
  xlat_varoutput_44.xyz = tmpvar_43.xyz;
  xlat_varoutput_44.w = tmpvar_1;
  gl_FragData[0] = xlat_varoutput_44;
}


#endif
"
}
SubProgram "d3d9 " {
// Stats: 42 math
Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "SHADOWS_SOFT" "_ALPHABLEND_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
Matrix 11 [_LightMatrix0] 3
Matrix 4 [_Object2World]
Matrix 8 [_World2Object] 3
Matrix 0 [glstate_matrix_mvp]
Vector 19 [_DetailAlbedoMap_ST]
Vector 16 [_LightPositionRange]
Vector 18 [_MainTex_ST]
Float 20 [_UVSec]
Vector 14 [_WorldSpaceCameraPos]
Vector 15 [_WorldSpaceLightPos0]
Vector 17 [unity_WorldTransformParams]
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   row_major float4x4 _LightMatrix0;
//   float4 _LightPositionRange;
//   float4 _MainTex_ST;
//   row_major float4x4 _Object2World;
//   float _UVSec;
//   row_major float4x4 _World2Object;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 glstate_matrix_mvp;
//   float4 unity_WorldTransformParams;
//
//
// Registers:
//
//   Name                       Reg   Size
//   -------------------------- ----- ----
//   glstate_matrix_mvp         c0       4
//   _Object2World              c4       4
//   _World2Object              c8       3
//   _LightMatrix0              c11      3
//   _WorldSpaceCameraPos       c14      1
//   _WorldSpaceLightPos0       c15      1
//   _LightPositionRange        c16      1
//   unity_WorldTransformParams c17      1
//   _MainTex_ST                c18      1
//   _DetailAlbedoMap_ST        c19      1
//   _UVSec                     c20      1
//

    vs_3_0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_tangent v4
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6.xyz
    dcl_texcoord6 o7.xyz
    dp4 o0.x, c0, v0
    dp4 o0.y, c1, v0
    dp4 o0.z, c2, v0
    dp4 o0.w, c3, v0
    mad o1.xy, v2, c18, c18.zwzw
    abs r0.x, c20.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c19.xyxy, c19
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add o2.xyz, r0, -c14
    mul r1.xyz, c9, v1.y
    mad r1.xyz, c8, v1.x, r1
    mad r1.xyz, c10, v1.z, r1
    nrm r2.xyz, r1
    dp3 r1.x, c4, v4
    dp3 r1.y, c5, v4
    dp3 r1.z, c6, v4
    nrm r3.xyz, r1
    mul r1.xyz, r2.zxyw, r3.yzxw
    mad r1.xyz, r2.yzxw, r3.zxyw, -r1
    mov o5.xyz, r2
    mov o3.xyz, r3
    mul r1.w, c17.w, v4.w
    mul o4.xyz, r1.w, r1
    dp4 r0.w, c7, v0
    dp4 o6.x, c11, r0
    dp4 o6.y, c12, r0
    dp4 o6.z, c13, r0
    add o7.xyz, r0, -c16
    mad r0.xyz, r0, -c15.w, c15
    mov o3.w, r0.x
    mov o4.w, r0.y
    mov o5.w, r0.z

// approximately 41 instruction slots used
"
}
SubProgram "d3d11 " {
// Stats: 46 math
Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "SHADOWS_SOFT" "_ALPHABLEND_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
ConstBuffer "$Globals" 304
Matrix 240 [_LightMatrix0]
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
Vector 16 [_LightPositionRange]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
Vector 336 [unity_WorldTransformParams]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer cb0[19], immediateIndexed
      dcl_constantbuffer cb1[5], immediateIndexed
      dcl_constantbuffer cb2[2], immediateIndexed
      dcl_constantbuffer cb3[22], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyz
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: mad o0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   4: eq r0.x, cb0[13].z, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[11].xxxy, cb0[11].zzzw
   7: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  13: mul r1.xyz, v4.yyyy, cb3[13].xyzx
  14: mad r1.xyz, cb3[12].xyzx, v4.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[14].xyzx, v4.zzzz, r1.xyzx
  16: dp3 r0.w, r1.xyzx, r1.xyzx
  17: rsq r0.w, r0.w
  18: mul r1.xyz, r0.wwww, r1.xyzx
  19: mov o3.xyz, r1.xyzx
  20: mad r2.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  21: add o7.xyz, r0.xyzx, -cb2[1].xyzx
  22: mov o3.w, r2.x
  23: mul r0.x, v1.x, cb3[16].x
  24: mul r0.y, v1.x, cb3[17].x
  25: mul r0.z, v1.x, cb3[18].x
  26: mul r3.x, v1.y, cb3[16].y
  27: mul r3.y, v1.y, cb3[17].y
  28: mul r3.z, v1.y, cb3[18].y
  29: add r0.xyz, r0.xyzx, r3.xyzx
  30: mul r3.x, v1.z, cb3[16].z
  31: mul r3.y, v1.z, cb3[17].z
  32: mul r3.z, v1.z, cb3[18].z
  33: add r0.xyz, r0.xyzx, r3.xyzx
  34: dp3 r0.w, r0.xyzx, r0.xyzx
  35: rsq r0.w, r0.w
  36: mul r0.xyz, r0.wwww, r0.xyzx
  37: mul r3.xyz, r1.yzxy, r0.zxyz
  38: mad r1.xyz, r0.yzxy, r1.zxyz, -r3.xyzx
  39: mov o5.xyz, r0.xyzx
  40: mul r0.x, v4.w, cb3[21].w
  41: mul o4.xyz, r0.xxxx, r1.xyzx
  42: mov o4.w, r2.y
  43: mov o5.w, r2.z
  44: mul r0.xyzw, v0.yyyy, cb3[13].xyzw
  45: mad r0.xyzw, cb3[12].xyzw, v0.xxxx, r0.xyzw
  46: mad r0.xyzw, cb3[14].xyzw, v0.zzzz, r0.xyzw
  47: mad r0.xyzw, cb3[15].xyzw, v0.wwww, r0.xyzw
  48: mul r1.xyz, r0.yyyy, cb0[16].xyzx
  49: mad r1.xyz, cb0[15].xyzx, r0.xxxx, r1.xyzx
  50: mad r0.xyz, cb0[17].xyzx, r0.zzzz, r1.xyzx
  51: mad o6.xyz, cb0[18].xyzx, r0.wwww, r0.xyzx
  52: ret 
// Approximately 0 instruction slots used
"
}
}
Program "fp" {
SubProgram "opengl " {
Keywords { "POINT" "SHADOWS_OFF" }
"// shader disassembly not supported on opengl"
}
SubProgram "d3d9 " {
// Stats: 93 math, 2 textures
Keywords { "POINT" "SHADOWS_OFF" }
Vector 3 [_Color]
Float 5 [_Glossiness]
Vector 2 [_LightColor0]
Float 4 [_Metallic]
Vector 0 [unity_ColorSpaceDielectricSpec]
Vector 1 [unity_ColorSpaceLuminance]
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_LightTexture0] 2D 1
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   sampler2D _LightTexture0;
//   sampler2D _MainTex;
//   float _Metallic;
//   float4 unity_ColorSpaceDielectricSpec;
//   float4 unity_ColorSpaceLuminance;
//
//
// Registers:
//
//   Name                           Reg   Size
//   ------------------------------ ----- ----
//   unity_ColorSpaceDielectricSpec c0       1
//   unity_ColorSpaceLuminance      c1       1
//   _LightColor0                   c2       1
//   _Color                         c3       1
//   _Metallic                      c4       1
//   _Glossiness                    c5       1
//   _MainTex                       s0       1
//   _LightTexture0                 s1       1
//

    ps_3_0
    def c6, 1, 0.00100000005, 31.622776, 9.99999975e-06
    def c7, 0, 3.14159274, 1.00000001e-07, -0.5
    def c8, 0.785398185, 9.99999975e-05, 0.00999999978, 0
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2_pp v2.w
    dcl_texcoord3_pp v3.w
    dcl_texcoord4_pp v4
    dcl_texcoord5 v5.xyz
    dcl_2d s0
    dcl_2d s1
    mov_pp r0.x, v2.w
    mov_pp r0.y, v3.w
    mov_pp r0.z, v4.w
    dp3_pp r0.w, r0, r0
    rsq_pp r0.w, r0.w
    nrm_pp r1.xyz, v1
    mad_pp r2.xyz, r0, r0.w, -r1
    mul_pp r0.xyz, r0.w, r0
    dp3_pp r0.w, r2, r2
    add r1.w, -r0.w, c6.y
    rsq_pp r0.w, r0.w
    cmp_pp r0.w, r1.w, c6.z, r0.w
    mul_pp r2.xyz, r0.w, r2
    nrm_pp r3.xyz, v4
    dp3_pp r0.w, r3, -r1
    add r1.w, -r0.w, c6.w
    mad_pp r4.xyz, -r1, r1.w, r3
    cmp_pp r3.xyz, r0.w, r3, r4
    dp3_pp r0.w, r3, -r1
    max_pp r1.x, r0.w, c7.x
    dp3_pp r0.w, r3, r2
    dp3_pp r1.y, r0, r2
    dp3_pp r0.x, r3, r0
    max_pp r1.z, r0.x, c7.x
    max_pp r0.x, r1.y, c7.x
    max_pp r1.y, r0.w, c7.x
    mul r0.y, r1.y, r1.y
    mov r2.x, c6.x
    add_pp r0.z, r2.x, -c5.x
    mul_pp r0.w, r0.z, r0.z
    mad r1.y, r0.w, r0.w, -c6.x
    mad_pp r0.y, r0.y, r1.y, c6.x
    mul r0.y, r0.y, r0.y
    mad r0.y, r0.y, c7.y, c7.z
    rcp r0.y, r0.y
    mul_pp r1.y, r0.w, r0.w
    mul_pp r0.y, r0.y, r1.y
    mad_pp r1.y, r0.z, -r0.z, c6.x
    mad_pp r1.w, r1.x, r1.y, r0.w
    mad_pp r0.w, r1.z, r1.y, r0.w
    mul_pp r0.w, r0.w, r1.x
    add_pp r1.x, -r1.x, c6.x
    mad r0.w, r1.z, r1.w, r0.w
    add r0.w, r0.w, c6.w
    rcp r0.w, r0.w
    add_pp r0.w, r0.w, r0.w
    mul r0.y, r0.y, r0.w
    mad r0.w, r0.y, -c8.x, c8.y
    mul_pp r0.y, r0.y, c8.x
    rsq r1.y, r0.y
    rcp_pp r1.y, r1.y
    cmp_pp r0.w, r0.w, c8.z, r1.y
    abs r1.y, c1.w
    cmp_pp r0.y, -r1.y, r0.w, r0.y
    mul_pp r0.y, r1.z, r0.y
    max_pp r1.y, r0.y, c7.x
    dp3 r0.y, v5, v5
    texld_pp r2, r0.y, s1
    mul_pp r2.xyz, r2.x, c2
    mul_pp r3.xyz, r1.y, r2
    add_pp r0.y, -r0.x, c6.x
    mul_pp r0.x, r0.x, r0.x
    dp2add_pp r0.x, r0.x, r0.z, c7.w
    mul_pp r0.z, r0.y, r0.y
    mul_pp r0.z, r0.z, r0.z
    mul_pp r0.y, r0.y, r0.z
    texld r4, v0, s0
    mov r5, c0
    mad_pp r6.xyz, c3, r4, -r5
    mul_pp r4.xyz, r4, c3
    mad_pp r5.xyz, c4.x, r6, r5
    lrp_pp r6.xyz, r0.y, c6.x, r5
    mul_pp r0.yzw, r3.xxyz, r6.xxyz
    mul_pp r1.y, r1.x, r1.x
    mul_pp r1.y, r1.y, r1.y
    mul_pp r1.x, r1.x, r1.y
    mad_pp r1.x, r0.x, r1.x, c6.x
    add_pp r1.y, -r1.z, c6.x
    mul_pp r1.w, r1.y, r1.y
    mul_pp r1.w, r1.w, r1.w
    mul_pp r1.y, r1.y, r1.w
    mad_pp r0.x, r0.x, r1.y, c6.x
    mul_pp r0.x, r1.x, r0.x
    mul_pp r0.x, r1.z, r0.x
    mul_pp r1.xyz, r0.x, r2
    mad_pp r0.x, c4.x, -r5.w, r5.w
    mul_pp r2.xyz, r0.x, r4
    mad_pp oC0.xyz, r2, r1, r0.yzww
    mov_pp oC0.w, c6.x

// approximately 94 instruction slots used (2 texture, 92 arithmetic)
"
}
SubProgram "d3d11 " {
// Stats: 78 math, 2 textures
Keywords { "POINT" "SHADOWS_OFF" }
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_LightTexture0] 2D 1
ConstBuffer "$Globals" 304
Vector 32 [unity_ColorSpaceDielectricSpec]
Vector 48 [unity_ColorSpaceLuminance]
Vector 96 [_LightColor0]
Vector 128 [_Color]
Float 200 [_Metallic]
Float 204 [_Glossiness]
BindCB  "$Globals" 0
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer cb0[13], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: dp3 r0.x, v5.xyzx, v5.xyzx
   1: rsq r0.x, r0.x
   2: mul r0.xyz, r0.xxxx, v5.xyzx
   3: dp3 r0.w, v2.xyzx, v2.xyzx
   4: rsq r0.w, r0.w
   5: mul r1.xyz, r0.wwww, v2.xyzx
   6: dp3 r0.w, r0.xyzx, -r1.xyzx
   7: add r1.w, -r0.w, l(0.000010)
   8: lt r0.w, r0.w, l(0.000000)
   9: mad r2.xyz, -r1.xyzx, r1.wwww, r0.xyzx
  10: movc r0.xyz, r0.wwww, r2.xyzx, r0.xyzx
  11: mov r2.x, v3.w
  12: mov r2.y, v4.w
  13: mov r2.z, v5.w
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: rsq r0.w, r0.w
  16: mad r3.xyz, r2.xyzx, r0.wwww, -r1.xyzx
  17: dp3 r1.x, r0.xyzx, -r1.xyzx
  18: max r1.x, r1.x, l(0.000000)
  19: mul r1.yzw, r0.wwww, r2.xxyz
  20: dp3 r0.w, r3.xyzx, r3.xyzx
  21: max r0.w, r0.w, l(0.001000)
  22: rsq r0.w, r0.w
  23: mul r2.xyz, r0.wwww, r3.xyzx
  24: dp3 r0.w, r0.xyzx, r2.xyzx
  25: dp3 r0.x, r0.xyzx, r1.yzwy
  26: dp3 r0.y, r1.yzwy, r2.xyzx
  27: max r0.xyz, r0.xywx, l(0.000000, 0.000000, 0.000000, 0.000000)
  28: mul r0.z, r0.z, r0.z
  29: add r0.w, -cb0[12].w, l(1.000000)
  30: mul r1.y, r0.w, r0.w
  31: mad r1.z, r1.y, r1.y, l(-1.000000)
  32: mad r0.z, r0.z, r1.z, l(1.000000)
  33: mul r0.z, r0.z, r0.z
  34: mad r0.z, r0.z, l(3.141593), l(0.000000)
  35: mul r1.z, r1.y, r1.y
  36: div r0.z, r1.z, r0.z
  37: mad r1.z, -r0.w, r0.w, l(1.000000)
  38: mad r1.w, r1.x, r1.z, r1.y
  39: mad r1.y, r0.x, r1.z, r1.y
  40: mul r1.y, r1.y, r1.x
  41: add r1.x, -r1.x, l(1.000000)
  42: mad r1.y, r0.x, r1.w, r1.y
  43: add r1.y, r1.y, l(0.000010)
  44: div r1.y, l(2.000000), r1.y
  45: mul r0.z, r0.z, r1.y
  46: mul r0.z, r0.z, l(0.785398)
  47: max r1.y, r0.z, l(0.000100)
  48: sqrt r1.y, r1.y
  49: eq r1.z, cb0[3].w, l(0.000000)
  50: movc r0.z, r1.z, r1.y, r0.z
  51: mul r0.z, r0.x, r0.z
  52: max r0.z, r0.z, l(0.000000)
  53: dp3 r1.y, v6.xyzx, v6.xyzx
  54: sample r2.xyzw, r1.yyyy, t1.xyzw, s1
  55: mul r1.yzw, r2.xxxx, cb0[6].xxyz
  56: mul r2.xyz, r0.zzzz, r1.yzwy
  57: add r0.z, -r0.y, l(1.000000)
  58: dp2 r0.y, r0.yyyy, r0.yyyy
  59: mad r0.y, r0.y, r0.w, l(-0.500000)
  60: mul r0.w, r0.z, r0.z
  61: mul r0.w, r0.w, r0.w
  62: mul r0.z, r0.z, r0.w
  63: sample r3.xyzw, v1.xyxx, t0.xyzw, s0
  64: mad r4.xyz, cb0[8].xyzx, r3.xyzx, -cb0[2].xyzx
  65: mul r3.xyz, r3.xyzx, cb0[8].xyzx
  66: mad r4.xyz, cb0[12].zzzz, r4.xyzx, cb0[2].xyzx
  67: add r5.xyz, -r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  68: mad r4.xyz, r5.xyzx, r0.zzzz, r4.xyzx
  69: mul r2.xyz, r2.xyzx, r4.xyzx
  70: mul r0.z, r1.x, r1.x
  71: mul r0.z, r0.z, r0.z
  72: mul r0.z, r1.x, r0.z
  73: mad r0.z, r0.y, r0.z, l(1.000000)
  74: add r0.w, -r0.x, l(1.000000)
  75: mul r1.x, r0.w, r0.w
  76: mul r1.x, r1.x, r1.x
  77: mul r0.w, r0.w, r1.x
  78: mad r0.y, r0.y, r0.w, l(1.000000)
  79: mul r0.y, r0.z, r0.y
  80: mul r0.x, r0.x, r0.y
  81: mul r0.xyz, r0.xxxx, r1.yzwy
  82: mad r0.w, -cb0[12].z, cb0[2].w, cb0[2].w
  83: mul r1.xyz, r0.wwww, r3.xyzx
  84: mad o0.xyz, r1.xyzx, r0.xyzx, r2.xyzx
  85: mov o0.w, l(1.000000)
  86: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" }
"// shader disassembly not supported on opengl"
}
SubProgram "d3d9 " {
// Stats: 88 math, 1 textures
Keywords { "DIRECTIONAL" "SHADOWS_OFF" }
Vector 3 [_Color]
Float 5 [_Glossiness]
Vector 2 [_LightColor0]
Float 4 [_Metallic]
Vector 0 [unity_ColorSpaceDielectricSpec]
Vector 1 [unity_ColorSpaceLuminance]
SetTexture 0 [_MainTex] 2D 0
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   sampler2D _MainTex;
//   float _Metallic;
//   float4 unity_ColorSpaceDielectricSpec;
//   float4 unity_ColorSpaceLuminance;
//
//
// Registers:
//
//   Name                           Reg   Size
//   ------------------------------ ----- ----
//   unity_ColorSpaceDielectricSpec c0       1
//   unity_ColorSpaceLuminance      c1       1
//   _LightColor0                   c2       1
//   _Color                         c3       1
//   _Metallic                      c4       1
//   _Glossiness                    c5       1
//   _MainTex                       s0       1
//

    ps_3_0
    def c6, 1, 0.00100000005, 31.622776, 9.99999975e-06
    def c7, 0, 3.14159274, 1.00000001e-07, -0.5
    def c8, 0.785398185, 9.99999975e-05, 0.00999999978, 0
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2_pp v2.w
    dcl_texcoord3_pp v3.w
    dcl_texcoord4_pp v4
    dcl_2d s0
    dp3_pp r0.x, v1, v1
    rsq_pp r0.x, r0.x
    mul_pp r0.yzw, r0.x, v1.xxyz
    nrm_pp r1.xyz, v4
    dp3_pp r1.w, r1, -r0.yzww
    add r2.x, -r1.w, c6.w
    mad_pp r2.xyz, -r0.yzww, r2.x, r1
    cmp_pp r1.xyz, r1.w, r1, r2
    mov_pp r2.x, v2.w
    mov_pp r2.y, v3.w
    mov_pp r2.z, v4.w
    mad_pp r3.xyz, v1, -r0.x, r2
    dp3_pp r0.x, r3, r3
    add r1.w, -r0.x, c6.y
    rsq_pp r0.x, r0.x
    cmp_pp r0.x, r1.w, c6.z, r0.x
    mul_pp r3.xyz, r0.x, r3
    dp3_pp r0.x, r1, r3
    dp3_pp r1.w, r2, r3
    dp3_pp r2.x, r1, r2
    dp3_pp r0.y, r1, -r0.yzww
    max_pp r1.x, r0.y, c7.x
    max_pp r0.y, r2.x, c7.x
    max_pp r0.z, r1.w, c7.x
    max_pp r1.y, r0.x, c7.x
    mul r0.x, r1.y, r1.y
    mov r2.x, c6.x
    add_pp r0.w, r2.x, -c5.x
    mul_pp r1.y, r0.w, r0.w
    mad r1.z, r1.y, r1.y, -c6.x
    mad_pp r0.x, r0.x, r1.z, c6.x
    mul r0.x, r0.x, r0.x
    mad r0.x, r0.x, c7.y, c7.z
    rcp r0.x, r0.x
    mul_pp r1.z, r1.y, r1.y
    mul_pp r0.x, r0.x, r1.z
    mad_pp r1.z, r0.w, -r0.w, c6.x
    mad_pp r1.w, r1.x, r1.z, r1.y
    mad_pp r1.y, r0.y, r1.z, r1.y
    mul_pp r1.y, r1.y, r1.x
    add_pp r1.x, -r1.x, c6.x
    mad r1.y, r0.y, r1.w, r1.y
    add r1.y, r1.y, c6.w
    rcp r1.y, r1.y
    add_pp r1.y, r1.y, r1.y
    mul r0.x, r0.x, r1.y
    mad r1.y, r0.x, -c8.x, c8.y
    mul_pp r0.x, r0.x, c8.x
    rsq r1.z, r0.x
    rcp_pp r1.z, r1.z
    cmp_pp r1.y, r1.y, c8.z, r1.z
    abs r1.z, c1.w
    cmp_pp r0.x, -r1.z, r1.y, r0.x
    mul_pp r0.x, r0.y, r0.x
    mul_pp r1.yzw, r0.x, c2.xxyz
    cmp_pp r1.yzw, r0.x, r1, c7.x
    add_pp r0.x, -r0.z, c6.x
    dp2add_pp r0.z, r0.z, r0.z, c7.x
    mad_pp r0.z, r0.z, r0.w, c7.w
    mul_pp r0.w, r0.x, r0.x
    mul_pp r0.w, r0.w, r0.w
    mul_pp r0.x, r0.x, r0.w
    texld r2, v0, s0
    mov r3, c0
    mad_pp r4.xyz, c3, r2, -r3
    mul_pp r2.xyz, r2, c3
    mad_pp r3.xyz, c4.x, r4, r3
    lrp_pp r4.xyz, r0.x, c6.x, r3
    mul_pp r1.yzw, r1, r4.xxyz
    mul_pp r0.x, r1.x, r1.x
    mul_pp r0.x, r0.x, r0.x
    mul_pp r0.x, r1.x, r0.x
    mad_pp r0.x, r0.z, r0.x, c6.x
    add_pp r0.w, -r0.y, c6.x
    mul_pp r1.x, r0.w, r0.w
    mul_pp r1.x, r1.x, r1.x
    mul_pp r0.w, r0.w, r1.x
    mad_pp r0.z, r0.z, r0.w, c6.x
    mul_pp r0.x, r0.x, r0.z
    mul_pp r0.x, r0.y, r0.x
    mul_pp r0.xyz, r0.x, c2
    mad_pp r0.w, c4.x, -r3.w, r3.w
    mul_pp r2.xyz, r0.w, r2
    mad_pp oC0.xyz, r2, r0, r1.yzww
    mov_pp oC0.w, c6.x

// approximately 88 instruction slots used (1 texture, 87 arithmetic)
"
}
SubProgram "d3d11 " {
// Stats: 74 math, 1 textures
Keywords { "DIRECTIONAL" "SHADOWS_OFF" }
SetTexture 0 [_MainTex] 2D 0
ConstBuffer "$Globals" 240
Vector 32 [unity_ColorSpaceDielectricSpec]
Vector 48 [unity_ColorSpaceLuminance]
Vector 96 [_LightColor0]
Vector 128 [_Color]
Float 200 [_Metallic]
Float 204 [_Glossiness]
BindCB  "$Globals" 0
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer cb0[13], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_output o0.xyzw
      dcl_temps 5
   0: dp3 r0.x, v5.xyzx, v5.xyzx
   1: rsq r0.x, r0.x
   2: mul r0.xyz, r0.xxxx, v5.xyzx
   3: dp3 r0.w, v2.xyzx, v2.xyzx
   4: rsq r0.w, r0.w
   5: mul r1.xyz, r0.wwww, v2.xyzx
   6: dp3 r1.w, r0.xyzx, -r1.xyzx
   7: add r2.x, -r1.w, l(0.000010)
   8: lt r1.w, r1.w, l(0.000000)
   9: mad r2.xyz, -r1.xyzx, r2.xxxx, r0.xyzx
  10: movc r0.xyz, r1.wwww, r2.xyzx, r0.xyzx
  11: dp3 r1.x, r0.xyzx, -r1.xyzx
  12: max r1.x, r1.x, l(0.000000)
  13: mov r2.x, v3.w
  14: mov r2.y, v4.w
  15: mov r2.z, v5.w
  16: mad r1.yzw, -v2.xxyz, r0.wwww, r2.xxyz
  17: dp3 r0.w, r1.yzwy, r1.yzwy
  18: max r0.w, r0.w, l(0.001000)
  19: rsq r0.w, r0.w
  20: mul r1.yzw, r0.wwww, r1.yyzw
  21: dp3 r0.w, r0.xyzx, r1.yzwy
  22: dp3 r0.x, r0.xyzx, r2.xyzx
  23: dp3 r0.y, r2.xyzx, r1.yzwy
  24: max r0.xyz, r0.xywx, l(0.000000, 0.000000, 0.000000, 0.000000)
  25: mul r0.z, r0.z, r0.z
  26: add r0.w, -cb0[12].w, l(1.000000)
  27: mul r1.y, r0.w, r0.w
  28: mad r1.z, r1.y, r1.y, l(-1.000000)
  29: mad r0.z, r0.z, r1.z, l(1.000000)
  30: mul r1.z, r0.z, l(3.141593)
  31: mad r0.z, r1.z, r0.z, l(0.000000)
  32: mul r1.z, r1.y, r1.y
  33: div r0.z, r1.z, r0.z
  34: mad r1.z, -r0.w, r0.w, l(1.000000)
  35: mad r1.w, r1.x, r1.z, r1.y
  36: mad r1.y, r0.x, r1.z, r1.y
  37: mul r1.y, r1.y, r1.x
  38: add r1.x, -r1.x, l(1.000000)
  39: mad r1.y, r0.x, r1.w, r1.y
  40: add r1.y, r1.y, l(0.000010)
  41: div r1.y, l(2.000000), r1.y
  42: mul r0.z, r0.z, r1.y
  43: mul r0.z, r0.z, l(0.785398)
  44: max r1.y, r0.z, l(0.000100)
  45: sqrt r1.y, r1.y
  46: eq r1.z, cb0[3].w, l(0.000000)
  47: movc r0.z, r1.z, r1.y, r0.z
  48: mul r0.z, r0.x, r0.z
  49: max r0.z, r0.z, l(0.000000)
  50: mul r1.yzw, r0.zzzz, cb0[6].xxyz
  51: add r0.z, -r0.y, l(1.000000)
  52: mul r2.x, r0.z, r0.z
  53: mul r2.x, r2.x, r2.x
  54: mul r0.z, r0.z, r2.x
  55: sample r2.xyzw, v1.xyxx, t0.xyzw, s0
  56: mad r3.xyz, cb0[8].xyzx, r2.xyzx, -cb0[2].xyzx
  57: mul r2.xyz, r2.xyzx, cb0[8].xyzx
  58: mad r3.xyz, cb0[12].zzzz, r3.xyzx, cb0[2].xyzx
  59: add r4.xyz, -r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  60: mad r3.xyz, r4.xyzx, r0.zzzz, r3.xyzx
  61: mul r1.yzw, r1.yyzw, r3.xxyz
  62: add r0.z, r0.y, r0.y
  63: mul r0.y, r0.y, r0.z
  64: mad r0.y, r0.y, r0.w, l(-0.500000)
  65: mul r0.z, r1.x, r1.x
  66: mul r0.z, r0.z, r0.z
  67: mul r0.z, r1.x, r0.z
  68: mad r0.z, r0.y, r0.z, l(1.000000)
  69: add r0.w, -r0.x, l(1.000000)
  70: mul r1.x, r0.w, r0.w
  71: mul r1.x, r1.x, r1.x
  72: mul r0.w, r0.w, r1.x
  73: mad r0.y, r0.y, r0.w, l(1.000000)
  74: mul r0.y, r0.z, r0.y
  75: mul r0.x, r0.x, r0.y
  76: mul r0.xyz, r0.xxxx, cb0[6].xyzx
  77: mad r0.w, -cb0[12].z, cb0[2].w, cb0[2].w
  78: mul r2.xyz, r0.wwww, r2.xyzx
  79: mad o0.xyz, r2.xyzx, r0.xyzx, r1.yzwy
  80: mov o0.w, l(1.000000)
  81: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
Keywords { "SPOT" "SHADOWS_OFF" }
"// shader disassembly not supported on opengl"
}
SubProgram "d3d9 " {
// Stats: 97 math, 3 textures
Keywords { "SPOT" "SHADOWS_OFF" }
Vector 3 [_Color]
Float 5 [_Glossiness]
Vector 2 [_LightColor0]
Float 4 [_Metallic]
Vector 0 [unity_ColorSpaceDielectricSpec]
Vector 1 [unity_ColorSpaceLuminance]
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_LightTexture0] 2D 1
SetTexture 2 [_LightTextureB0] 2D 2
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   sampler2D _LightTexture0;
//   sampler2D _LightTextureB0;
//   sampler2D _MainTex;
//   float _Metallic;
//   float4 unity_ColorSpaceDielectricSpec;
//   float4 unity_ColorSpaceLuminance;
//
//
// Registers:
//
//   Name                           Reg   Size
//   ------------------------------ ----- ----
//   unity_ColorSpaceDielectricSpec c0       1
//   unity_ColorSpaceLuminance      c1       1
//   _LightColor0                   c2       1
//   _Color                         c3       1
//   _Metallic                      c4       1
//   _Glossiness                    c5       1
//   _MainTex                       s0       1
//   _LightTexture0                 s1       1
//   _LightTextureB0                s2       1
//

    ps_3_0
    def c6, 0.5, 0, 1, 0.00100000005
    def c7, 31.622776, 9.99999975e-06, 3.14159274, 1.00000001e-07
    def c8, 0.785398185, 9.99999975e-05, 0.00999999978, 0
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2_pp v2.w
    dcl_texcoord3_pp v3.w
    dcl_texcoord4_pp v4
    dcl_texcoord5 v5
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    mov_pp r0.x, v2.w
    mov_pp r0.y, v3.w
    mov_pp r0.z, v4.w
    dp3_pp r0.w, r0, r0
    rsq_pp r0.w, r0.w
    nrm_pp r1.xyz, v1
    mad_pp r2.xyz, r0, r0.w, -r1
    mul_pp r0.xyz, r0.w, r0
    dp3_pp r0.w, r2, r2
    add r1.w, -r0.w, c6.w
    rsq_pp r0.w, r0.w
    cmp_pp r0.w, r1.w, c7.x, r0.w
    mul_pp r2.xyz, r0.w, r2
    nrm_pp r3.xyz, v4
    dp3_pp r0.w, r3, -r1
    add r1.w, -r0.w, c7.y
    mad_pp r4.xyz, -r1, r1.w, r3
    cmp_pp r3.xyz, r0.w, r3, r4
    dp3_pp r0.w, r3, -r1
    max_pp r1.x, r0.w, c6.y
    dp3_pp r0.w, r3, r2
    dp3_pp r1.y, r0, r2
    dp3_pp r0.x, r3, r0
    max_pp r1.z, r0.x, c6.y
    max_pp r0.x, r1.y, c6.y
    max_pp r1.y, r0.w, c6.y
    mul r0.y, r1.y, r1.y
    mov r0.z, c6.z
    add_pp r0.z, r0.z, -c5.x
    mul_pp r0.w, r0.z, r0.z
    mad r1.y, r0.w, r0.w, -c6.z
    mad_pp r0.y, r0.y, r1.y, c6.z
    mul r0.y, r0.y, r0.y
    mad r0.y, r0.y, c7.z, c7.w
    rcp r0.y, r0.y
    mul_pp r1.y, r0.w, r0.w
    mul_pp r0.y, r0.y, r1.y
    mad_pp r1.y, r0.z, -r0.z, c6.z
    mad_pp r1.w, r1.x, r1.y, r0.w
    mad_pp r0.w, r1.z, r1.y, r0.w
    mul_pp r0.w, r0.w, r1.x
    add_pp r1.x, -r1.x, c6.z
    mad r0.w, r1.z, r1.w, r0.w
    add r0.w, r0.w, c7.y
    rcp r0.w, r0.w
    add_pp r0.w, r0.w, r0.w
    mul r0.y, r0.y, r0.w
    mad r0.w, r0.y, -c8.x, c8.y
    mul_pp r0.y, r0.y, c8.x
    rsq r1.y, r0.y
    rcp_pp r1.y, r1.y
    cmp_pp r0.w, r0.w, c8.z, r1.y
    abs r1.y, c1.w
    cmp_pp r0.y, -r1.y, r0.w, r0.y
    mul_pp r0.y, r1.z, r0.y
    max_pp r1.y, r0.y, c6.y
    rcp r0.y, v5.w
    mad r0.yw, v5.xxzy, r0.y, c6.x
    texld_pp r2, r0.ywzw, s1
    dp3 r0.y, v5, v5
    texld_pp r3, r0.y, s2
    mul r0.y, r2.w, r3.x
    mul_pp r2.xyz, r0.y, c2
    cmp_pp r2.xyz, -v5.z, c6.y, r2
    mul_pp r3.xyz, r1.y, r2
    add_pp r0.y, -r0.x, c6.z
    dp2add_pp r0.x, r0.x, r0.x, c6.y
    mad_pp r0.x, r0.x, r0.z, -c6.x
    mul_pp r0.z, r0.y, r0.y
    mul_pp r0.z, r0.z, r0.z
    mul_pp r0.y, r0.y, r0.z
    texld r4, v0, s0
    mov r5, c0
    mad_pp r6.xyz, c3, r4, -r5
    mul_pp r4.xyz, r4, c3
    mad_pp r5.xyz, c4.x, r6, r5
    lrp_pp r6.xyz, r0.y, c6.z, r5
    mul_pp r0.yzw, r3.xxyz, r6.xxyz
    mul_pp r1.y, r1.x, r1.x
    mul_pp r1.y, r1.y, r1.y
    mul_pp r1.x, r1.x, r1.y
    mad_pp r1.x, r0.x, r1.x, c6.z
    add_pp r1.y, -r1.z, c6.z
    mul_pp r1.w, r1.y, r1.y
    mul_pp r1.w, r1.w, r1.w
    mul_pp r1.y, r1.y, r1.w
    mad_pp r0.x, r0.x, r1.y, c6.z
    mul_pp r0.x, r1.x, r0.x
    mul_pp r0.x, r1.z, r0.x
    mul_pp r1.xyz, r0.x, r2
    mad_pp r0.x, c4.x, -r5.w, r5.w
    mul_pp r2.xyz, r0.x, r4
    mad_pp oC0.xyz, r2, r1, r0.yzww
    mov_pp oC0.w, c6.z

// approximately 99 instruction slots used (3 texture, 96 arithmetic)
"
}
SubProgram "d3d11 " {
// Stats: 84 math, 3 textures
Keywords { "SPOT" "SHADOWS_OFF" }
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_LightTexture0] 2D 1
SetTexture 2 [_LightTextureB0] 2D 2
ConstBuffer "$Globals" 304
Vector 32 [unity_ColorSpaceDielectricSpec]
Vector 48 [unity_ColorSpaceLuminance]
Vector 96 [_LightColor0]
Vector 128 [_Color]
Float 200 [_Metallic]
Float 204 [_Glossiness]
BindCB  "$Globals" 0
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer cb0[13], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyzw
      dcl_output o0.xyzw
      dcl_temps 6
   0: dp3 r0.x, v5.xyzx, v5.xyzx
   1: rsq r0.x, r0.x
   2: mul r0.xyz, r0.xxxx, v5.xyzx
   3: dp3 r0.w, v2.xyzx, v2.xyzx
   4: rsq r0.w, r0.w
   5: mul r1.xyz, r0.wwww, v2.xyzx
   6: dp3 r0.w, r0.xyzx, -r1.xyzx
   7: add r1.w, -r0.w, l(0.000010)
   8: lt r0.w, r0.w, l(0.000000)
   9: mad r2.xyz, -r1.xyzx, r1.wwww, r0.xyzx
  10: movc r0.xyz, r0.wwww, r2.xyzx, r0.xyzx
  11: mov r2.x, v3.w
  12: mov r2.y, v4.w
  13: mov r2.z, v5.w
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: rsq r0.w, r0.w
  16: mad r3.xyz, r2.xyzx, r0.wwww, -r1.xyzx
  17: dp3 r1.x, r0.xyzx, -r1.xyzx
  18: max r1.x, r1.x, l(0.000000)
  19: mul r1.yzw, r0.wwww, r2.xxyz
  20: dp3 r0.w, r3.xyzx, r3.xyzx
  21: max r0.w, r0.w, l(0.001000)
  22: rsq r0.w, r0.w
  23: mul r2.xyz, r0.wwww, r3.xyzx
  24: dp3 r0.w, r0.xyzx, r2.xyzx
  25: dp3 r0.x, r0.xyzx, r1.yzwy
  26: dp3 r0.y, r1.yzwy, r2.xyzx
  27: max r0.xyz, r0.xywx, l(0.000000, 0.000000, 0.000000, 0.000000)
  28: mul r0.z, r0.z, r0.z
  29: add r0.w, -cb0[12].w, l(1.000000)
  30: mul r1.y, r0.w, r0.w
  31: mad r1.z, r1.y, r1.y, l(-1.000000)
  32: mad r0.z, r0.z, r1.z, l(1.000000)
  33: mul r0.z, r0.z, r0.z
  34: mad r0.z, r0.z, l(3.141593), l(0.000000)
  35: mul r1.z, r1.y, r1.y
  36: div r0.z, r1.z, r0.z
  37: mad r1.z, -r0.w, r0.w, l(1.000000)
  38: mad r1.w, r1.x, r1.z, r1.y
  39: mad r1.y, r0.x, r1.z, r1.y
  40: mul r1.y, r1.y, r1.x
  41: add r1.x, -r1.x, l(1.000000)
  42: mad r1.y, r0.x, r1.w, r1.y
  43: add r1.y, r1.y, l(0.000010)
  44: div r1.y, l(2.000000), r1.y
  45: mul r0.z, r0.z, r1.y
  46: mul r0.z, r0.z, l(0.785398)
  47: max r1.y, r0.z, l(0.000100)
  48: sqrt r1.y, r1.y
  49: eq r1.z, cb0[3].w, l(0.000000)
  50: movc r0.z, r1.z, r1.y, r0.z
  51: mul r0.z, r0.x, r0.z
  52: max r0.z, r0.z, l(0.000000)
  53: div r1.yz, v6.xxyx, v6.wwww
  54: add r1.yz, r1.yyzy, l(0.000000, 0.500000, 0.500000, 0.000000)
  55: sample r2.xyzw, r1.yzyy, t1.xyzw, s1
  56: lt r1.y, l(0.000000), v6.z
  57: and r1.y, r1.y, l(0x3f800000)
  58: mul r1.y, r2.w, r1.y
  59: dp3 r1.z, v6.xyzx, v6.xyzx
  60: sample r2.xyzw, r1.zzzz, t2.xyzw, s2
  61: mul r1.y, r1.y, r2.x
  62: mul r1.yzw, r1.yyyy, cb0[6].xxyz
  63: mul r2.xyz, r0.zzzz, r1.yzwy
  64: add r0.z, -r0.y, l(1.000000)
  65: dp2 r0.y, r0.yyyy, r0.yyyy
  66: mad r0.y, r0.y, r0.w, l(-0.500000)
  67: mul r0.w, r0.z, r0.z
  68: mul r0.w, r0.w, r0.w
  69: mul r0.z, r0.z, r0.w
  70: sample r3.xyzw, v1.xyxx, t0.xyzw, s0
  71: mad r4.xyz, cb0[8].xyzx, r3.xyzx, -cb0[2].xyzx
  72: mul r3.xyz, r3.xyzx, cb0[8].xyzx
  73: mad r4.xyz, cb0[12].zzzz, r4.xyzx, cb0[2].xyzx
  74: add r5.xyz, -r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  75: mad r4.xyz, r5.xyzx, r0.zzzz, r4.xyzx
  76: mul r2.xyz, r2.xyzx, r4.xyzx
  77: mul r0.z, r1.x, r1.x
  78: mul r0.z, r0.z, r0.z
  79: mul r0.z, r1.x, r0.z
  80: mad r0.z, r0.y, r0.z, l(1.000000)
  81: add r0.w, -r0.x, l(1.000000)
  82: mul r1.x, r0.w, r0.w
  83: mul r1.x, r1.x, r1.x
  84: mul r0.w, r0.w, r1.x
  85: mad r0.y, r0.y, r0.w, l(1.000000)
  86: mul r0.y, r0.z, r0.y
  87: mul r0.x, r0.x, r0.y
  88: mul r0.xyz, r0.xxxx, r1.yzwy
  89: mad r0.w, -cb0[12].z, cb0[2].w, cb0[2].w
  90: mul r1.xyz, r0.wwww, r3.xyzx
  91: mad o0.xyz, r1.xyzx, r0.xyzx, r2.xyzx
  92: mov o0.w, l(1.000000)
  93: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
Keywords { "POINT_COOKIE" "SHADOWS_OFF" }
"// shader disassembly not supported on opengl"
}
SubProgram "d3d9 " {
// Stats: 94 math, 3 textures
Keywords { "POINT_COOKIE" "SHADOWS_OFF" }
Vector 3 [_Color]
Float 5 [_Glossiness]
Vector 2 [_LightColor0]
Float 4 [_Metallic]
Vector 0 [unity_ColorSpaceDielectricSpec]
Vector 1 [unity_ColorSpaceLuminance]
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_LightTexture0] CUBE 1
SetTexture 2 [_LightTextureB0] 2D 2
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   samplerCUBE _LightTexture0;
//   sampler2D _LightTextureB0;
//   sampler2D _MainTex;
//   float _Metallic;
//   float4 unity_ColorSpaceDielectricSpec;
//   float4 unity_ColorSpaceLuminance;
//
//
// Registers:
//
//   Name                           Reg   Size
//   ------------------------------ ----- ----
//   unity_ColorSpaceDielectricSpec c0       1
//   unity_ColorSpaceLuminance      c1       1
//   _LightColor0                   c2       1
//   _Color                         c3       1
//   _Metallic                      c4       1
//   _Glossiness                    c5       1
//   _MainTex                       s0       1
//   _LightTexture0                 s1       1
//   _LightTextureB0                s2       1
//

    ps_3_0
    def c6, 1, 0.00100000005, 31.622776, 9.99999975e-06
    def c7, 0, 3.14159274, 1.00000001e-07, -0.5
    def c8, 0.785398185, 9.99999975e-05, 0.00999999978, 0
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2_pp v2.w
    dcl_texcoord3_pp v3.w
    dcl_texcoord4_pp v4
    dcl_texcoord5 v5.xyz
    dcl_2d s0
    dcl_cube s1
    dcl_2d s2
    mov_pp r0.x, v2.w
    mov_pp r0.y, v3.w
    mov_pp r0.z, v4.w
    dp3_pp r0.w, r0, r0
    rsq_pp r0.w, r0.w
    nrm_pp r1.xyz, v1
    mad_pp r2.xyz, r0, r0.w, -r1
    mul_pp r0.xyz, r0.w, r0
    dp3_pp r0.w, r2, r2
    add r1.w, -r0.w, c6.y
    rsq_pp r0.w, r0.w
    cmp_pp r0.w, r1.w, c6.z, r0.w
    mul_pp r2.xyz, r0.w, r2
    nrm_pp r3.xyz, v4
    dp3_pp r0.w, r3, -r1
    add r1.w, -r0.w, c6.w
    mad_pp r4.xyz, -r1, r1.w, r3
    cmp_pp r3.xyz, r0.w, r3, r4
    dp3_pp r0.w, r3, -r1
    max_pp r1.x, r0.w, c7.x
    dp3_pp r0.w, r3, r2
    dp3_pp r1.y, r0, r2
    dp3_pp r0.x, r3, r0
    max_pp r1.z, r0.x, c7.x
    max_pp r0.x, r1.y, c7.x
    max_pp r1.y, r0.w, c7.x
    mul r0.y, r1.y, r1.y
    mov r2.x, c6.x
    add_pp r0.z, r2.x, -c5.x
    mul_pp r0.w, r0.z, r0.z
    mad r1.y, r0.w, r0.w, -c6.x
    mad_pp r0.y, r0.y, r1.y, c6.x
    mul r0.y, r0.y, r0.y
    mad r0.y, r0.y, c7.y, c7.z
    rcp r0.y, r0.y
    mul_pp r1.y, r0.w, r0.w
    mul_pp r0.y, r0.y, r1.y
    mad_pp r1.y, r0.z, -r0.z, c6.x
    mad_pp r1.w, r1.x, r1.y, r0.w
    mad_pp r0.w, r1.z, r1.y, r0.w
    mul_pp r0.w, r0.w, r1.x
    add_pp r1.x, -r1.x, c6.x
    mad r0.w, r1.z, r1.w, r0.w
    add r0.w, r0.w, c6.w
    rcp r0.w, r0.w
    add_pp r0.w, r0.w, r0.w
    mul r0.y, r0.y, r0.w
    mad r0.w, r0.y, -c8.x, c8.y
    mul_pp r0.y, r0.y, c8.x
    rsq r1.y, r0.y
    rcp_pp r1.y, r1.y
    cmp_pp r0.w, r0.w, c8.z, r1.y
    abs r1.y, c1.w
    cmp_pp r0.y, -r1.y, r0.w, r0.y
    mul_pp r0.y, r1.z, r0.y
    max_pp r1.y, r0.y, c7.x
    dp3 r0.y, v5, v5
    texld r2, r0.y, s2
    texld r3, v5, s1
    mul_pp r0.y, r2.x, r3.w
    mul_pp r2.xyz, r0.y, c2
    mul_pp r3.xyz, r1.y, r2
    add_pp r0.y, -r0.x, c6.x
    mul_pp r0.x, r0.x, r0.x
    dp2add_pp r0.x, r0.x, r0.z, c7.w
    mul_pp r0.z, r0.y, r0.y
    mul_pp r0.z, r0.z, r0.z
    mul_pp r0.y, r0.y, r0.z
    texld r4, v0, s0
    mov r5, c0
    mad_pp r6.xyz, c3, r4, -r5
    mul_pp r4.xyz, r4, c3
    mad_pp r5.xyz, c4.x, r6, r5
    lrp_pp r6.xyz, r0.y, c6.x, r5
    mul_pp r0.yzw, r3.xxyz, r6.xxyz
    mul_pp r1.y, r1.x, r1.x
    mul_pp r1.y, r1.y, r1.y
    mul_pp r1.x, r1.x, r1.y
    mad_pp r1.x, r0.x, r1.x, c6.x
    add_pp r1.y, -r1.z, c6.x
    mul_pp r1.w, r1.y, r1.y
    mul_pp r1.w, r1.w, r1.w
    mul_pp r1.y, r1.y, r1.w
    mad_pp r0.x, r0.x, r1.y, c6.x
    mul_pp r0.x, r1.x, r0.x
    mul_pp r0.x, r1.z, r0.x
    mul_pp r1.xyz, r0.x, r2
    mad_pp r0.x, c4.x, -r5.w, r5.w
    mul_pp r2.xyz, r0.x, r4
    mad_pp oC0.xyz, r2, r1, r0.yzww
    mov_pp oC0.w, c6.x

// approximately 96 instruction slots used (3 texture, 93 arithmetic)
"
}
SubProgram "d3d11 " {
// Stats: 79 math, 3 textures
Keywords { "POINT_COOKIE" "SHADOWS_OFF" }
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_LightTextureB0] 2D 2
SetTexture 2 [_LightTexture0] CUBE 1
ConstBuffer "$Globals" 304
Vector 32 [unity_ColorSpaceDielectricSpec]
Vector 48 [unity_ColorSpaceLuminance]
Vector 96 [_LightColor0]
Vector 128 [_Color]
Float 200 [_Metallic]
Float 204 [_Glossiness]
BindCB  "$Globals" 0
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer cb0[13], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texturecube (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: dp3 r0.x, v5.xyzx, v5.xyzx
   1: rsq r0.x, r0.x
   2: mul r0.xyz, r0.xxxx, v5.xyzx
   3: dp3 r0.w, v2.xyzx, v2.xyzx
   4: rsq r0.w, r0.w
   5: mul r1.xyz, r0.wwww, v2.xyzx
   6: dp3 r0.w, r0.xyzx, -r1.xyzx
   7: add r1.w, -r0.w, l(0.000010)
   8: lt r0.w, r0.w, l(0.000000)
   9: mad r2.xyz, -r1.xyzx, r1.wwww, r0.xyzx
  10: movc r0.xyz, r0.wwww, r2.xyzx, r0.xyzx
  11: mov r2.x, v3.w
  12: mov r2.y, v4.w
  13: mov r2.z, v5.w
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: rsq r0.w, r0.w
  16: mad r3.xyz, r2.xyzx, r0.wwww, -r1.xyzx
  17: dp3 r1.x, r0.xyzx, -r1.xyzx
  18: max r1.x, r1.x, l(0.000000)
  19: mul r1.yzw, r0.wwww, r2.xxyz
  20: dp3 r0.w, r3.xyzx, r3.xyzx
  21: max r0.w, r0.w, l(0.001000)
  22: rsq r0.w, r0.w
  23: mul r2.xyz, r0.wwww, r3.xyzx
  24: dp3 r0.w, r0.xyzx, r2.xyzx
  25: dp3 r0.x, r0.xyzx, r1.yzwy
  26: dp3 r0.y, r1.yzwy, r2.xyzx
  27: max r0.xyz, r0.xywx, l(0.000000, 0.000000, 0.000000, 0.000000)
  28: mul r0.z, r0.z, r0.z
  29: add r0.w, -cb0[12].w, l(1.000000)
  30: mul r1.y, r0.w, r0.w
  31: mad r1.z, r1.y, r1.y, l(-1.000000)
  32: mad r0.z, r0.z, r1.z, l(1.000000)
  33: mul r0.z, r0.z, r0.z
  34: mad r0.z, r0.z, l(3.141593), l(0.000000)
  35: mul r1.z, r1.y, r1.y
  36: div r0.z, r1.z, r0.z
  37: mad r1.z, -r0.w, r0.w, l(1.000000)
  38: mad r1.w, r1.x, r1.z, r1.y
  39: mad r1.y, r0.x, r1.z, r1.y
  40: mul r1.y, r1.y, r1.x
  41: add r1.x, -r1.x, l(1.000000)
  42: mad r1.y, r0.x, r1.w, r1.y
  43: add r1.y, r1.y, l(0.000010)
  44: div r1.y, l(2.000000), r1.y
  45: mul r0.z, r0.z, r1.y
  46: mul r0.z, r0.z, l(0.785398)
  47: max r1.y, r0.z, l(0.000100)
  48: sqrt r1.y, r1.y
  49: eq r1.z, cb0[3].w, l(0.000000)
  50: movc r0.z, r1.z, r1.y, r0.z
  51: mul r0.z, r0.x, r0.z
  52: max r0.z, r0.z, l(0.000000)
  53: dp3 r1.y, v6.xyzx, v6.xyzx
  54: sample r2.xyzw, r1.yyyy, t1.xyzw, s2
  55: sample r3.xyzw, v6.xyzx, t2.xyzw, s1
  56: mul r1.y, r2.x, r3.w
  57: mul r1.yzw, r1.yyyy, cb0[6].xxyz
  58: mul r2.xyz, r0.zzzz, r1.yzwy
  59: add r0.z, -r0.y, l(1.000000)
  60: dp2 r0.y, r0.yyyy, r0.yyyy
  61: mad r0.y, r0.y, r0.w, l(-0.500000)
  62: mul r0.w, r0.z, r0.z
  63: mul r0.w, r0.w, r0.w
  64: mul r0.z, r0.z, r0.w
  65: sample r3.xyzw, v1.xyxx, t0.xyzw, s0
  66: mad r4.xyz, cb0[8].xyzx, r3.xyzx, -cb0[2].xyzx
  67: mul r3.xyz, r3.xyzx, cb0[8].xyzx
  68: mad r4.xyz, cb0[12].zzzz, r4.xyzx, cb0[2].xyzx
  69: add r5.xyz, -r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  70: mad r4.xyz, r5.xyzx, r0.zzzz, r4.xyzx
  71: mul r2.xyz, r2.xyzx, r4.xyzx
  72: mul r0.z, r1.x, r1.x
  73: mul r0.z, r0.z, r0.z
  74: mul r0.z, r1.x, r0.z
  75: mad r0.z, r0.y, r0.z, l(1.000000)
  76: add r0.w, -r0.x, l(1.000000)
  77: mul r1.x, r0.w, r0.w
  78: mul r1.x, r1.x, r1.x
  79: mul r0.w, r0.w, r1.x
  80: mad r0.y, r0.y, r0.w, l(1.000000)
  81: mul r0.y, r0.z, r0.y
  82: mul r0.x, r0.x, r0.y
  83: mul r0.xyz, r0.xxxx, r1.yzwy
  84: mad r0.w, -cb0[12].z, cb0[2].w, cb0[2].w
  85: mul r1.xyz, r0.wwww, r3.xyzx
  86: mad o0.xyz, r1.xyzx, r0.xyzx, r2.xyzx
  87: mov o0.w, l(1.000000)
  88: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_OFF" }
"// shader disassembly not supported on opengl"
}
SubProgram "d3d9 " {
// Stats: 89 math, 2 textures
Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_OFF" }
Vector 3 [_Color]
Float 5 [_Glossiness]
Vector 2 [_LightColor0]
Float 4 [_Metallic]
Vector 0 [unity_ColorSpaceDielectricSpec]
Vector 1 [unity_ColorSpaceLuminance]
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_LightTexture0] 2D 1
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   sampler2D _LightTexture0;
//   sampler2D _MainTex;
//   float _Metallic;
//   float4 unity_ColorSpaceDielectricSpec;
//   float4 unity_ColorSpaceLuminance;
//
//
// Registers:
//
//   Name                           Reg   Size
//   ------------------------------ ----- ----
//   unity_ColorSpaceDielectricSpec c0       1
//   unity_ColorSpaceLuminance      c1       1
//   _LightColor0                   c2       1
//   _Color                         c3       1
//   _Metallic                      c4       1
//   _Glossiness                    c5       1
//   _MainTex                       s0       1
//   _LightTexture0                 s1       1
//

    ps_3_0
    def c6, 1, 0.00100000005, 31.622776, 9.99999975e-06
    def c7, 0, 3.14159274, 1.00000001e-07, -0.5
    def c8, 0.785398185, 9.99999975e-05, 0.00999999978, 0
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2_pp v2.w
    dcl_texcoord3_pp v3.w
    dcl_texcoord4_pp v4
    dcl_texcoord5 v5.xy
    dcl_2d s0
    dcl_2d s1
    dp3_pp r0.x, v1, v1
    rsq_pp r0.x, r0.x
    mul_pp r0.yzw, r0.x, v1.xxyz
    nrm_pp r1.xyz, v4
    dp3_pp r1.w, r1, -r0.yzww
    add r2.x, -r1.w, c6.w
    mad_pp r2.xyz, -r0.yzww, r2.x, r1
    cmp_pp r1.xyz, r1.w, r1, r2
    mov_pp r2.x, v2.w
    mov_pp r2.y, v3.w
    mov_pp r2.z, v4.w
    mad_pp r3.xyz, v1, -r0.x, r2
    dp3_pp r0.x, r3, r3
    add r1.w, -r0.x, c6.y
    rsq_pp r0.x, r0.x
    cmp_pp r0.x, r1.w, c6.z, r0.x
    mul_pp r3.xyz, r0.x, r3
    dp3_pp r0.x, r1, r3
    dp3_pp r1.w, r2, r3
    dp3_pp r2.x, r1, r2
    dp3_pp r0.y, r1, -r0.yzww
    max_pp r1.x, r0.y, c7.x
    max_pp r0.y, r2.x, c7.x
    max_pp r0.z, r1.w, c7.x
    max_pp r1.y, r0.x, c7.x
    mul r0.x, r1.y, r1.y
    mov r2.x, c6.x
    add_pp r0.w, r2.x, -c5.x
    mul_pp r1.y, r0.w, r0.w
    mad r1.z, r1.y, r1.y, -c6.x
    mad_pp r0.x, r0.x, r1.z, c6.x
    mul r0.x, r0.x, r0.x
    mad r0.x, r0.x, c7.y, c7.z
    rcp r0.x, r0.x
    mul_pp r1.z, r1.y, r1.y
    mul_pp r0.x, r0.x, r1.z
    mad_pp r1.z, r0.w, -r0.w, c6.x
    mad_pp r1.w, r1.x, r1.z, r1.y
    mad_pp r1.y, r0.y, r1.z, r1.y
    mul_pp r1.y, r1.y, r1.x
    add_pp r1.x, -r1.x, c6.x
    mad r1.y, r0.y, r1.w, r1.y
    add r1.y, r1.y, c6.w
    rcp r1.y, r1.y
    add_pp r1.y, r1.y, r1.y
    mul r0.x, r0.x, r1.y
    mad r1.y, r0.x, -c8.x, c8.y
    mul_pp r0.x, r0.x, c8.x
    rsq r1.z, r0.x
    rcp_pp r1.z, r1.z
    cmp_pp r1.y, r1.y, c8.z, r1.z
    abs r1.z, c1.w
    cmp_pp r0.x, -r1.z, r1.y, r0.x
    mul_pp r0.x, r0.y, r0.x
    max_pp r1.y, r0.x, c7.x
    texld_pp r2, v5, s1
    mul_pp r2.xyz, r2.w, c2
    mul_pp r1.yzw, r1.y, r2.xxyz
    add_pp r0.x, -r0.z, c6.x
    mul_pp r0.z, r0.z, r0.z
    dp2add_pp r0.z, r0.z, r0.w, c7.w
    mul_pp r0.w, r0.x, r0.x
    mul_pp r0.w, r0.w, r0.w
    mul_pp r0.x, r0.x, r0.w
    texld r3, v0, s0
    mov r4, c0
    mad_pp r5.xyz, c3, r3, -r4
    mul_pp r3.xyz, r3, c3
    mad_pp r4.xyz, c4.x, r5, r4
    lrp_pp r5.xyz, r0.x, c6.x, r4
    mul_pp r1.yzw, r1, r5.xxyz
    mul_pp r0.x, r1.x, r1.x
    mul_pp r0.x, r0.x, r0.x
    mul_pp r0.x, r1.x, r0.x
    mad_pp r0.x, r0.z, r0.x, c6.x
    add_pp r0.w, -r0.y, c6.x
    mul_pp r1.x, r0.w, r0.w
    mul_pp r1.x, r1.x, r1.x
    mul_pp r0.w, r0.w, r1.x
    mad_pp r0.z, r0.z, r0.w, c6.x
    mul_pp r0.x, r0.x, r0.z
    mul_pp r0.x, r0.y, r0.x
    mul_pp r0.xyz, r0.x, r2
    mad_pp r0.w, c4.x, -r4.w, r4.w
    mul_pp r2.xyz, r0.w, r3
    mad_pp oC0.xyz, r2, r0, r1.yzww
    mov_pp oC0.w, c6.x

// approximately 90 instruction slots used (2 texture, 88 arithmetic)
"
}
SubProgram "d3d11 " {
// Stats: 74 math, 2 textures
Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_OFF" }
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_LightTexture0] 2D 1
ConstBuffer "$Globals" 304
Vector 32 [unity_ColorSpaceDielectricSpec]
Vector 48 [unity_ColorSpaceLuminance]
Vector 96 [_LightColor0]
Vector 128 [_Color]
Float 200 [_Metallic]
Float 204 [_Glossiness]
BindCB  "$Globals" 0
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xy          6     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer cb0[13], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xy
      dcl_output o0.xyzw
      dcl_temps 6
   0: dp3 r0.x, v5.xyzx, v5.xyzx
   1: rsq r0.x, r0.x
   2: mul r0.xyz, r0.xxxx, v5.xyzx
   3: dp3 r0.w, v2.xyzx, v2.xyzx
   4: rsq r0.w, r0.w
   5: mul r1.xyz, r0.wwww, v2.xyzx
   6: dp3 r1.w, r0.xyzx, -r1.xyzx
   7: add r2.x, -r1.w, l(0.000010)
   8: lt r1.w, r1.w, l(0.000000)
   9: mad r2.xyz, -r1.xyzx, r2.xxxx, r0.xyzx
  10: movc r0.xyz, r1.wwww, r2.xyzx, r0.xyzx
  11: dp3 r1.x, r0.xyzx, -r1.xyzx
  12: max r1.x, r1.x, l(0.000000)
  13: mov r2.x, v3.w
  14: mov r2.y, v4.w
  15: mov r2.z, v5.w
  16: mad r1.yzw, -v2.xxyz, r0.wwww, r2.xxyz
  17: dp3 r0.w, r1.yzwy, r1.yzwy
  18: max r0.w, r0.w, l(0.001000)
  19: rsq r0.w, r0.w
  20: mul r1.yzw, r0.wwww, r1.yyzw
  21: dp3 r0.w, r0.xyzx, r1.yzwy
  22: dp3 r0.x, r0.xyzx, r2.xyzx
  23: dp3 r0.y, r2.xyzx, r1.yzwy
  24: max r0.xyz, r0.xywx, l(0.000000, 0.000000, 0.000000, 0.000000)
  25: mul r0.z, r0.z, r0.z
  26: add r0.w, -cb0[12].w, l(1.000000)
  27: mul r1.y, r0.w, r0.w
  28: mad r1.z, r1.y, r1.y, l(-1.000000)
  29: mad r0.z, r0.z, r1.z, l(1.000000)
  30: mul r0.z, r0.z, r0.z
  31: mad r0.z, r0.z, l(3.141593), l(0.000000)
  32: mul r1.z, r1.y, r1.y
  33: div r0.z, r1.z, r0.z
  34: mad r1.z, -r0.w, r0.w, l(1.000000)
  35: mad r1.w, r1.x, r1.z, r1.y
  36: mad r1.y, r0.x, r1.z, r1.y
  37: mul r1.y, r1.y, r1.x
  38: add r1.x, -r1.x, l(1.000000)
  39: mad r1.y, r0.x, r1.w, r1.y
  40: add r1.y, r1.y, l(0.000010)
  41: div r1.y, l(2.000000), r1.y
  42: mul r0.z, r0.z, r1.y
  43: mul r0.z, r0.z, l(0.785398)
  44: max r1.y, r0.z, l(0.000100)
  45: sqrt r1.y, r1.y
  46: eq r1.z, cb0[3].w, l(0.000000)
  47: movc r0.z, r1.z, r1.y, r0.z
  48: mul r0.z, r0.x, r0.z
  49: max r0.z, r0.z, l(0.000000)
  50: sample r2.xyzw, v6.xyxx, t1.xyzw, s1
  51: mul r1.yzw, r2.wwww, cb0[6].xxyz
  52: mul r2.xyz, r0.zzzz, r1.yzwy
  53: add r0.z, -r0.y, l(1.000000)
  54: dp2 r0.y, r0.yyyy, r0.yyyy
  55: mad r0.y, r0.y, r0.w, l(-0.500000)
  56: mul r0.w, r0.z, r0.z
  57: mul r0.w, r0.w, r0.w
  58: mul r0.z, r0.z, r0.w
  59: sample r3.xyzw, v1.xyxx, t0.xyzw, s0
  60: mad r4.xyz, cb0[8].xyzx, r3.xyzx, -cb0[2].xyzx
  61: mul r3.xyz, r3.xyzx, cb0[8].xyzx
  62: mad r4.xyz, cb0[12].zzzz, r4.xyzx, cb0[2].xyzx
  63: add r5.xyz, -r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  64: mad r4.xyz, r5.xyzx, r0.zzzz, r4.xyzx
  65: mul r2.xyz, r2.xyzx, r4.xyzx
  66: mul r0.z, r1.x, r1.x
  67: mul r0.z, r0.z, r0.z
  68: mul r0.z, r1.x, r0.z
  69: mad r0.z, r0.y, r0.z, l(1.000000)
  70: add r0.w, -r0.x, l(1.000000)
  71: mul r1.x, r0.w, r0.w
  72: mul r1.x, r1.x, r1.x
  73: mul r0.w, r0.w, r1.x
  74: mad r0.y, r0.y, r0.w, l(1.000000)
  75: mul r0.y, r0.z, r0.y
  76: mul r0.x, r0.x, r0.y
  77: mul r0.xyz, r0.xxxx, r1.yzwy
  78: mad r0.w, -cb0[12].z, cb0[2].w, cb0[2].w
  79: mul r1.xyz, r0.wwww, r3.xyzx
  80: mad o0.xyz, r1.xyzx, r0.xyzx, r2.xyzx
  81: mov o0.w, l(1.000000)
  82: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_NATIVE" }
"// shader disassembly not supported on opengl"
}
SubProgram "d3d9 " {
// Stats: 100 math, 4 textures
Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_NATIVE" }
Vector 4 [_Color]
Float 6 [_Glossiness]
Vector 3 [_LightColor0]
Vector 0 [_LightShadowData]
Float 5 [_Metallic]
Vector 1 [unity_ColorSpaceDielectricSpec]
Vector 2 [unity_ColorSpaceLuminance]
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_ShadowMapTexture] 2D 1
SetTexture 2 [_LightTexture0] 2D 2
SetTexture 3 [_LightTextureB0] 2D 3
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   float4 _LightShadowData;
//   sampler2D _LightTexture0;
//   sampler2D _LightTextureB0;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D _ShadowMapTexture;
//   float4 unity_ColorSpaceDielectricSpec;
//   float4 unity_ColorSpaceLuminance;
//
//
// Registers:
//
//   Name                           Reg   Size
//   ------------------------------ ----- ----
//   _LightShadowData               c0       1
//   unity_ColorSpaceDielectricSpec c1       1
//   unity_ColorSpaceLuminance      c2       1
//   _LightColor0                   c3       1
//   _Color                         c4       1
//   _Metallic                      c5       1
//   _Glossiness                    c6       1
//   _MainTex                       s0       1
//   _ShadowMapTexture              s1       1
//   _LightTexture0                 s2       1
//   _LightTextureB0                s3       1
//

    ps_3_0
    def c7, 0.5, 0, 1, 0.00100000005
    def c8, 31.622776, 9.99999975e-06, 3.14159274, 1.00000001e-07
    def c9, 0.785398185, 9.99999975e-05, 0.00999999978, 0
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2_pp v2.w
    dcl_texcoord3_pp v3.w
    dcl_texcoord4_pp v4
    dcl_texcoord5 v5
    dcl_texcoord6 v6
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    mov_pp r0.x, v2.w
    mov_pp r0.y, v3.w
    mov_pp r0.z, v4.w
    dp3_pp r0.w, r0, r0
    rsq_pp r0.w, r0.w
    nrm_pp r1.xyz, v1
    mad_pp r2.xyz, r0, r0.w, -r1
    mul_pp r0.xyz, r0.w, r0
    dp3_pp r0.w, r2, r2
    add r1.w, -r0.w, c7.w
    rsq_pp r0.w, r0.w
    cmp_pp r0.w, r1.w, c8.x, r0.w
    mul_pp r2.xyz, r0.w, r2
    nrm_pp r3.xyz, v4
    dp3_pp r0.w, r3, -r1
    add r1.w, -r0.w, c8.y
    mad_pp r4.xyz, -r1, r1.w, r3
    cmp_pp r3.xyz, r0.w, r3, r4
    dp3_pp r0.w, r3, -r1
    max_pp r1.x, r0.w, c7.y
    dp3_pp r0.w, r3, r2
    dp3_pp r1.y, r0, r2
    dp3_pp r0.x, r3, r0
    max_pp r1.z, r0.x, c7.y
    max_pp r0.x, r1.y, c7.y
    max_pp r1.y, r0.w, c7.y
    mul r0.y, r1.y, r1.y
    mov r0.z, c7.z
    add_pp r0.w, r0.z, -c6.x
    mul_pp r1.y, r0.w, r0.w
    mad r1.w, r1.y, r1.y, -c7.z
    mad_pp r0.y, r0.y, r1.w, c7.z
    mul r0.y, r0.y, r0.y
    mad r0.y, r0.y, c8.z, c8.w
    rcp r0.y, r0.y
    mul_pp r1.w, r1.y, r1.y
    mul_pp r0.y, r0.y, r1.w
    mad_pp r1.w, r0.w, -r0.w, c7.z
    mad_pp r2.x, r1.x, r1.w, r1.y
    mad_pp r1.y, r1.z, r1.w, r1.y
    mul_pp r1.y, r1.y, r1.x
    add_pp r1.x, -r1.x, c7.z
    mad r1.y, r1.z, r2.x, r1.y
    add r1.y, r1.y, c8.y
    rcp r1.y, r1.y
    add_pp r1.y, r1.y, r1.y
    mul r0.y, r0.y, r1.y
    mad r1.y, r0.y, -c9.x, c9.y
    mul_pp r0.y, r0.y, c9.x
    rsq r1.w, r0.y
    rcp_pp r1.w, r1.w
    cmp_pp r1.y, r1.y, c9.z, r1.w
    abs r1.w, c2.w
    cmp_pp r0.y, -r1.w, r1.y, r0.y
    mul_pp r0.y, r1.z, r0.y
    max_pp r1.y, r0.y, c7.y
    rcp r0.y, v5.w
    mad r2.xy, v5, r0.y, c7.x
    texld_pp r2, r2, s2
    dp3 r0.y, v5, v5
    texld_pp r3, r0.y, s3
    mul r0.y, r2.w, r3.x
    cmp r0.y, -v5.z, c7.y, r0.y
    texldp_pp r2, v6, s1
    lrp_pp r1.w, r2.x, r0.z, c0.x
    mul_pp r0.y, r0.y, r1.w
    mul_pp r2.xyz, r0.y, c3
    mul_pp r3.xyz, r1.y, r2
    add_pp r0.y, -r0.x, c7.z
    dp2add_pp r0.x, r0.x, r0.x, c7.y
    mad_pp r0.x, r0.x, r0.w, -c7.x
    mul_pp r0.z, r0.y, r0.y
    mul_pp r0.z, r0.z, r0.z
    mul_pp r0.y, r0.y, r0.z
    texld r4, v0, s0
    mov r5, c1
    mad_pp r6.xyz, c4, r4, -r5
    mul_pp r4.xyz, r4, c4
    mad_pp r5.xyz, c5.x, r6, r5
    lrp_pp r6.xyz, r0.y, c7.z, r5
    mul_pp r0.yzw, r3.xxyz, r6.xxyz
    mul_pp r1.y, r1.x, r1.x
    mul_pp r1.y, r1.y, r1.y
    mul_pp r1.x, r1.x, r1.y
    mad_pp r1.x, r0.x, r1.x, c7.z
    add_pp r1.y, -r1.z, c7.z
    mul_pp r1.w, r1.y, r1.y
    mul_pp r1.w, r1.w, r1.w
    mul_pp r1.y, r1.y, r1.w
    mad_pp r0.x, r0.x, r1.y, c7.z
    mul_pp r0.x, r1.x, r0.x
    mul_pp r0.x, r1.z, r0.x
    mul_pp r1.xyz, r0.x, r2
    mad_pp r0.x, c5.x, -r5.w, r5.w
    mul_pp r2.xyz, r0.x, r4
    mad_pp oC0.xyz, r2, r1, r0.yzww
    mov_pp oC0.w, c7.z

// approximately 102 instruction slots used (4 texture, 98 arithmetic)
"
}
SubProgram "d3d11 " {
// Stats: 88 math, 3 textures
Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_NATIVE" }
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_LightTexture0] 2D 2
SetTexture 2 [_LightTextureB0] 2D 3
SetTexture 3 [_ShadowMapTexture] 2D 1
ConstBuffer "$Globals" 304
Vector 32 [unity_ColorSpaceDielectricSpec]
Vector 48 [unity_ColorSpaceLuminance]
Vector 96 [_LightColor0]
Vector 128 [_Color]
Float 200 [_Metallic]
Float 204 [_Glossiness]
ConstBuffer "UnityShadows" 416
Vector 384 [_LightShadowData]
BindCB  "$Globals" 0
BindCB  "UnityShadows" 1
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer cb0[13], immediateIndexed
      dcl_constantbuffer cb1[25], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyzw
      dcl_input_ps linear v7.xyzw
      dcl_output o0.xyzw
      dcl_temps 6
   0: div r0.xy, v6.xyxx, v6.wwww
   1: add r0.xy, r0.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
   2: sample r0.xyzw, r0.xyxx, t1.xyzw, s2
   3: lt r0.x, l(0.000000), v6.z
   4: and r0.x, r0.x, l(0x3f800000)
   5: mul r0.x, r0.w, r0.x
   6: dp3 r0.y, v6.xyzx, v6.xyzx
   7: sample r1.xyzw, r0.yyyy, t2.xyzw, s3
   8: mul r0.x, r0.x, r1.x
   9: div r0.yzw, v7.xxyz, v7.wwww
  10: sample_c_lz r0.y, r0.yzyy, t3.xxxx, s1, r0.w
  11: add r0.z, -cb1[24].x, l(1.000000)
  12: mad r0.y, r0.y, r0.z, cb1[24].x
  13: mul r0.x, r0.y, r0.x
  14: mul r0.xyz, r0.xxxx, cb0[6].xyzx
  15: dp3 r0.w, v5.xyzx, v5.xyzx
  16: rsq r0.w, r0.w
  17: mul r1.xyz, r0.wwww, v5.xyzx
  18: dp3 r0.w, v2.xyzx, v2.xyzx
  19: rsq r0.w, r0.w
  20: mul r2.xyz, r0.wwww, v2.xyzx
  21: dp3 r0.w, r1.xyzx, -r2.xyzx
  22: add r1.w, -r0.w, l(0.000010)
  23: lt r0.w, r0.w, l(0.000000)
  24: mad r3.xyz, -r2.xyzx, r1.wwww, r1.xyzx
  25: movc r1.xyz, r0.wwww, r3.xyzx, r1.xyzx
  26: mov r3.x, v3.w
  27: mov r3.y, v4.w
  28: mov r3.z, v5.w
  29: dp3 r0.w, r3.xyzx, r3.xyzx
  30: rsq r0.w, r0.w
  31: mad r4.xyz, r3.xyzx, r0.wwww, -r2.xyzx
  32: dp3 r1.w, r1.xyzx, -r2.xyzx
  33: mul r2.xyz, r0.wwww, r3.xyzx
  34: dp3 r0.w, r4.xyzx, r4.xyzx
  35: max r0.w, r0.w, l(0.001000)
  36: rsq r0.w, r0.w
  37: mul r3.xyz, r0.wwww, r4.xyzx
  38: dp3 r0.w, r1.xyzx, r3.xyzx
  39: dp3 r1.x, r1.xyzx, r2.xyzx
  40: dp3 r1.y, r2.xyzx, r3.xyzx
  41: max r1.xyw, r1.xyxw, l(0.000000, 0.000000, 0.000000, 0.000000)
  42: max r0.w, r0.w, l(0.000000)
  43: mul r0.w, r0.w, r0.w
  44: add r1.z, -cb0[12].w, l(1.000000)
  45: mul r2.x, r1.z, r1.z
  46: mad r2.y, r2.x, r2.x, l(-1.000000)
  47: mad r0.w, r0.w, r2.y, l(1.000000)
  48: mul r0.w, r0.w, r0.w
  49: mad r0.w, r0.w, l(3.141593), l(0.000000)
  50: mul r2.y, r2.x, r2.x
  51: div r0.w, r2.y, r0.w
  52: mad r2.y, -r1.z, r1.z, l(1.000000)
  53: mad r2.z, r1.w, r2.y, r2.x
  54: mad r2.x, r1.x, r2.y, r2.x
  55: mul r2.x, r1.w, r2.x
  56: add r1.w, -r1.w, l(1.000000)
  57: mad r2.x, r1.x, r2.z, r2.x
  58: add r2.x, r2.x, l(0.000010)
  59: div r2.x, l(2.000000), r2.x
  60: mul r0.w, r0.w, r2.x
  61: mul r0.w, r0.w, l(0.785398)
  62: max r2.x, r0.w, l(0.000100)
  63: sqrt r2.x, r2.x
  64: eq r2.y, cb0[3].w, l(0.000000)
  65: movc r0.w, r2.y, r2.x, r0.w
  66: mul r0.w, r1.x, r0.w
  67: max r0.w, r0.w, l(0.000000)
  68: mul r2.xyz, r0.xyzx, r0.wwww
  69: add r0.w, -r1.y, l(1.000000)
  70: dp2 r1.y, r1.yyyy, r1.yyyy
  71: mad r1.y, r1.y, r1.z, l(-0.500000)
  72: mul r1.z, r0.w, r0.w
  73: mul r1.z, r1.z, r1.z
  74: mul r0.w, r0.w, r1.z
  75: sample r3.xyzw, v1.xyxx, t0.xyzw, s0
  76: mad r4.xyz, cb0[8].xyzx, r3.xyzx, -cb0[2].xyzx
  77: mul r3.xyz, r3.xyzx, cb0[8].xyzx
  78: mad r4.xyz, cb0[12].zzzz, r4.xyzx, cb0[2].xyzx
  79: add r5.xyz, -r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  80: mad r4.xyz, r5.xyzx, r0.wwww, r4.xyzx
  81: mul r2.xyz, r2.xyzx, r4.xyzx
  82: mul r0.w, r1.w, r1.w
  83: mul r0.w, r0.w, r0.w
  84: mul r0.w, r1.w, r0.w
  85: mad r0.w, r1.y, r0.w, l(1.000000)
  86: add r1.z, -r1.x, l(1.000000)
  87: mul r1.w, r1.z, r1.z
  88: mul r1.w, r1.w, r1.w
  89: mul r1.z, r1.z, r1.w
  90: mad r1.y, r1.y, r1.z, l(1.000000)
  91: mul r0.w, r0.w, r1.y
  92: mul r0.w, r1.x, r0.w
  93: mul r0.xyz, r0.wwww, r0.xyzx
  94: mad r0.w, -cb0[12].z, cb0[2].w, cb0[2].w
  95: mul r1.xyz, r0.wwww, r3.xyzx
  96: mad o0.xyz, r1.xyzx, r0.xyzx, r2.xyzx
  97: mov o0.w, l(1.000000)
  98: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
"// shader disassembly not supported on opengl"
}
SubProgram "d3d9 " {
// Stats: 89 math, 2 textures
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
Vector 3 [_Color]
Float 5 [_Glossiness]
Vector 2 [_LightColor0]
Float 4 [_Metallic]
Vector 0 [unity_ColorSpaceDielectricSpec]
Vector 1 [unity_ColorSpaceLuminance]
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_ShadowMapTexture] 2D 1
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D _ShadowMapTexture;
//   float4 unity_ColorSpaceDielectricSpec;
//   float4 unity_ColorSpaceLuminance;
//
//
// Registers:
//
//   Name                           Reg   Size
//   ------------------------------ ----- ----
//   unity_ColorSpaceDielectricSpec c0       1
//   unity_ColorSpaceLuminance      c1       1
//   _LightColor0                   c2       1
//   _Color                         c3       1
//   _Metallic                      c4       1
//   _Glossiness                    c5       1
//   _MainTex                       s0       1
//   _ShadowMapTexture              s1       1
//

    ps_3_0
    def c6, 1, 0.00100000005, 31.622776, 9.99999975e-06
    def c7, 0, 3.14159274, 1.00000001e-07, -0.5
    def c8, 0.785398185, 9.99999975e-05, 0.00999999978, 0
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2_pp v2.w
    dcl_texcoord3_pp v3.w
    dcl_texcoord4_pp v4
    dcl_texcoord5 v5
    dcl_2d s0
    dcl_2d s1
    dp3_pp r0.x, v1, v1
    rsq_pp r0.x, r0.x
    mul_pp r0.yzw, r0.x, v1.xxyz
    nrm_pp r1.xyz, v4
    dp3_pp r1.w, r1, -r0.yzww
    add r2.x, -r1.w, c6.w
    mad_pp r2.xyz, -r0.yzww, r2.x, r1
    cmp_pp r1.xyz, r1.w, r1, r2
    mov_pp r2.x, v2.w
    mov_pp r2.y, v3.w
    mov_pp r2.z, v4.w
    mad_pp r3.xyz, v1, -r0.x, r2
    dp3_pp r0.x, r3, r3
    add r1.w, -r0.x, c6.y
    rsq_pp r0.x, r0.x
    cmp_pp r0.x, r1.w, c6.z, r0.x
    mul_pp r3.xyz, r0.x, r3
    dp3_pp r0.x, r1, r3
    dp3_pp r1.w, r2, r3
    dp3_pp r2.x, r1, r2
    dp3_pp r0.y, r1, -r0.yzww
    max_pp r1.x, r0.y, c7.x
    max_pp r0.y, r2.x, c7.x
    max_pp r0.z, r1.w, c7.x
    max_pp r1.y, r0.x, c7.x
    mul r0.x, r1.y, r1.y
    mov r2.x, c6.x
    add_pp r0.w, r2.x, -c5.x
    mul_pp r1.y, r0.w, r0.w
    mad r1.z, r1.y, r1.y, -c6.x
    mad_pp r0.x, r0.x, r1.z, c6.x
    mul r0.x, r0.x, r0.x
    mad r0.x, r0.x, c7.y, c7.z
    rcp r0.x, r0.x
    mul_pp r1.z, r1.y, r1.y
    mul_pp r0.x, r0.x, r1.z
    mad_pp r1.z, r0.w, -r0.w, c6.x
    mad_pp r1.w, r1.x, r1.z, r1.y
    mad_pp r1.y, r0.y, r1.z, r1.y
    mul_pp r1.y, r1.y, r1.x
    add_pp r1.x, -r1.x, c6.x
    mad r1.y, r0.y, r1.w, r1.y
    add r1.y, r1.y, c6.w
    rcp r1.y, r1.y
    add_pp r1.y, r1.y, r1.y
    mul r0.x, r0.x, r1.y
    mad r1.y, r0.x, -c8.x, c8.y
    mul_pp r0.x, r0.x, c8.x
    rsq r1.z, r0.x
    rcp_pp r1.z, r1.z
    cmp_pp r1.y, r1.y, c8.z, r1.z
    abs r1.z, c1.w
    cmp_pp r0.x, -r1.z, r1.y, r0.x
    mul_pp r0.x, r0.y, r0.x
    max_pp r1.y, r0.x, c7.x
    texldp_pp r2, v5, s1
    mul_pp r2.xyz, r2.x, c2
    mul_pp r1.yzw, r1.y, r2.xxyz
    add_pp r0.x, -r0.z, c6.x
    mul_pp r0.z, r0.z, r0.z
    dp2add_pp r0.z, r0.z, r0.w, c7.w
    mul_pp r0.w, r0.x, r0.x
    mul_pp r0.w, r0.w, r0.w
    mul_pp r0.x, r0.x, r0.w
    texld r3, v0, s0
    mov r4, c0
    mad_pp r5.xyz, c3, r3, -r4
    mul_pp r3.xyz, r3, c3
    mad_pp r4.xyz, c4.x, r5, r4
    lrp_pp r5.xyz, r0.x, c6.x, r4
    mul_pp r1.yzw, r1, r5.xxyz
    mul_pp r0.x, r1.x, r1.x
    mul_pp r0.x, r0.x, r0.x
    mul_pp r0.x, r1.x, r0.x
    mad_pp r0.x, r0.z, r0.x, c6.x
    add_pp r0.w, -r0.y, c6.x
    mul_pp r1.x, r0.w, r0.w
    mul_pp r1.x, r1.x, r1.x
    mul_pp r0.w, r0.w, r1.x
    mad_pp r0.z, r0.z, r0.w, c6.x
    mul_pp r0.x, r0.x, r0.z
    mul_pp r0.x, r0.y, r0.x
    mul_pp r0.xyz, r0.x, r2
    mad_pp r0.w, c4.x, -r4.w, r4.w
    mul_pp r2.xyz, r0.w, r3
    mad_pp oC0.xyz, r2, r0, r1.yzww
    mov_pp oC0.w, c6.x

// approximately 90 instruction slots used (2 texture, 88 arithmetic)
"
}
SubProgram "d3d11 " {
// Stats: 75 math, 2 textures
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_ShadowMapTexture] 2D 1
ConstBuffer "$Globals" 240
Vector 32 [unity_ColorSpaceDielectricSpec]
Vector 48 [unity_ColorSpaceLuminance]
Vector 96 [_LightColor0]
Vector 128 [_Color]
Float 200 [_Metallic]
Float 204 [_Glossiness]
BindCB  "$Globals" 0
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer cb0[13], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyw
      dcl_output o0.xyzw
      dcl_temps 6
   0: dp3 r0.x, v5.xyzx, v5.xyzx
   1: rsq r0.x, r0.x
   2: mul r0.xyz, r0.xxxx, v5.xyzx
   3: dp3 r0.w, v2.xyzx, v2.xyzx
   4: rsq r0.w, r0.w
   5: mul r1.xyz, r0.wwww, v2.xyzx
   6: dp3 r1.w, r0.xyzx, -r1.xyzx
   7: add r2.x, -r1.w, l(0.000010)
   8: lt r1.w, r1.w, l(0.000000)
   9: mad r2.xyz, -r1.xyzx, r2.xxxx, r0.xyzx
  10: movc r0.xyz, r1.wwww, r2.xyzx, r0.xyzx
  11: dp3 r1.x, r0.xyzx, -r1.xyzx
  12: max r1.x, r1.x, l(0.000000)
  13: mov r2.x, v3.w
  14: mov r2.y, v4.w
  15: mov r2.z, v5.w
  16: mad r1.yzw, -v2.xxyz, r0.wwww, r2.xxyz
  17: dp3 r0.w, r1.yzwy, r1.yzwy
  18: max r0.w, r0.w, l(0.001000)
  19: rsq r0.w, r0.w
  20: mul r1.yzw, r0.wwww, r1.yyzw
  21: dp3 r0.w, r0.xyzx, r1.yzwy
  22: dp3 r0.x, r0.xyzx, r2.xyzx
  23: dp3 r0.y, r2.xyzx, r1.yzwy
  24: max r0.xyz, r0.xywx, l(0.000000, 0.000000, 0.000000, 0.000000)
  25: mul r0.z, r0.z, r0.z
  26: add r0.w, -cb0[12].w, l(1.000000)
  27: mul r1.y, r0.w, r0.w
  28: mad r1.z, r1.y, r1.y, l(-1.000000)
  29: mad r0.z, r0.z, r1.z, l(1.000000)
  30: mul r0.z, r0.z, r0.z
  31: mad r0.z, r0.z, l(3.141593), l(0.000000)
  32: mul r1.z, r1.y, r1.y
  33: div r0.z, r1.z, r0.z
  34: mad r1.z, -r0.w, r0.w, l(1.000000)
  35: mad r1.w, r1.x, r1.z, r1.y
  36: mad r1.y, r0.x, r1.z, r1.y
  37: mul r1.y, r1.y, r1.x
  38: add r1.x, -r1.x, l(1.000000)
  39: mad r1.y, r0.x, r1.w, r1.y
  40: add r1.y, r1.y, l(0.000010)
  41: div r1.y, l(2.000000), r1.y
  42: mul r0.z, r0.z, r1.y
  43: mul r0.z, r0.z, l(0.785398)
  44: max r1.y, r0.z, l(0.000100)
  45: sqrt r1.y, r1.y
  46: eq r1.z, cb0[3].w, l(0.000000)
  47: movc r0.z, r1.z, r1.y, r0.z
  48: mul r0.z, r0.x, r0.z
  49: max r0.z, r0.z, l(0.000000)
  50: div r1.yz, v6.xxyx, v6.wwww
  51: sample r2.xyzw, r1.yzyy, t1.xyzw, s1
  52: mul r1.yzw, r2.xxxx, cb0[6].xxyz
  53: mul r2.xyz, r0.zzzz, r1.yzwy
  54: add r0.z, -r0.y, l(1.000000)
  55: dp2 r0.y, r0.yyyy, r0.yyyy
  56: mad r0.y, r0.y, r0.w, l(-0.500000)
  57: mul r0.w, r0.z, r0.z
  58: mul r0.w, r0.w, r0.w
  59: mul r0.z, r0.z, r0.w
  60: sample r3.xyzw, v1.xyxx, t0.xyzw, s0
  61: mad r4.xyz, cb0[8].xyzx, r3.xyzx, -cb0[2].xyzx
  62: mul r3.xyz, r3.xyzx, cb0[8].xyzx
  63: mad r4.xyz, cb0[12].zzzz, r4.xyzx, cb0[2].xyzx
  64: add r5.xyz, -r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  65: mad r4.xyz, r5.xyzx, r0.zzzz, r4.xyzx
  66: mul r2.xyz, r2.xyzx, r4.xyzx
  67: mul r0.z, r1.x, r1.x
  68: mul r0.z, r0.z, r0.z
  69: mul r0.z, r1.x, r0.z
  70: mad r0.z, r0.y, r0.z, l(1.000000)
  71: add r0.w, -r0.x, l(1.000000)
  72: mul r1.x, r0.w, r0.w
  73: mul r1.x, r1.x, r1.x
  74: mul r0.w, r0.w, r1.x
  75: mad r0.y, r0.y, r0.w, l(1.000000)
  76: mul r0.y, r0.z, r0.y
  77: mul r0.x, r0.x, r0.y
  78: mul r0.xyz, r0.xxxx, r1.yzwy
  79: mad r0.w, -cb0[12].z, cb0[2].w, cb0[2].w
  80: mul r1.xyz, r0.wwww, r3.xyzx
  81: mad o0.xyz, r1.xyzx, r0.xyzx, r2.xyzx
  82: mov o0.w, l(1.000000)
  83: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" }
"// shader disassembly not supported on opengl"
}
SubProgram "d3d9 " {
// Stats: 90 math, 3 textures
Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" }
Vector 3 [_Color]
Float 5 [_Glossiness]
Vector 2 [_LightColor0]
Float 4 [_Metallic]
Vector 0 [unity_ColorSpaceDielectricSpec]
Vector 1 [unity_ColorSpaceLuminance]
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_ShadowMapTexture] 2D 1
SetTexture 2 [_LightTexture0] 2D 2
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   sampler2D _LightTexture0;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D _ShadowMapTexture;
//   float4 unity_ColorSpaceDielectricSpec;
//   float4 unity_ColorSpaceLuminance;
//
//
// Registers:
//
//   Name                           Reg   Size
//   ------------------------------ ----- ----
//   unity_ColorSpaceDielectricSpec c0       1
//   unity_ColorSpaceLuminance      c1       1
//   _LightColor0                   c2       1
//   _Color                         c3       1
//   _Metallic                      c4       1
//   _Glossiness                    c5       1
//   _MainTex                       s0       1
//   _ShadowMapTexture              s1       1
//   _LightTexture0                 s2       1
//

    ps_3_0
    def c6, 1, 0.00100000005, 31.622776, 9.99999975e-06
    def c7, 0, 3.14159274, 1.00000001e-07, -0.5
    def c8, 0.785398185, 9.99999975e-05, 0.00999999978, 0
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2_pp v2.w
    dcl_texcoord3_pp v3.w
    dcl_texcoord4_pp v4
    dcl_texcoord5 v5.xy
    dcl_texcoord6 v6
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dp3_pp r0.x, v1, v1
    rsq_pp r0.x, r0.x
    mul_pp r0.yzw, r0.x, v1.xxyz
    nrm_pp r1.xyz, v4
    dp3_pp r1.w, r1, -r0.yzww
    add r2.x, -r1.w, c6.w
    mad_pp r2.xyz, -r0.yzww, r2.x, r1
    cmp_pp r1.xyz, r1.w, r1, r2
    mov_pp r2.x, v2.w
    mov_pp r2.y, v3.w
    mov_pp r2.z, v4.w
    mad_pp r3.xyz, v1, -r0.x, r2
    dp3_pp r0.x, r3, r3
    add r1.w, -r0.x, c6.y
    rsq_pp r0.x, r0.x
    cmp_pp r0.x, r1.w, c6.z, r0.x
    mul_pp r3.xyz, r0.x, r3
    dp3_pp r0.x, r1, r3
    dp3_pp r1.w, r2, r3
    dp3_pp r2.x, r1, r2
    dp3_pp r0.y, r1, -r0.yzww
    max_pp r1.x, r0.y, c7.x
    max_pp r0.y, r2.x, c7.x
    max_pp r0.z, r1.w, c7.x
    max_pp r1.y, r0.x, c7.x
    mul r0.x, r1.y, r1.y
    mov r2.x, c6.x
    add_pp r0.w, r2.x, -c5.x
    mul_pp r1.y, r0.w, r0.w
    mad r1.z, r1.y, r1.y, -c6.x
    mad_pp r0.x, r0.x, r1.z, c6.x
    mul r0.x, r0.x, r0.x
    mad r0.x, r0.x, c7.y, c7.z
    rcp r0.x, r0.x
    mul_pp r1.z, r1.y, r1.y
    mul_pp r0.x, r0.x, r1.z
    mad_pp r1.z, r0.w, -r0.w, c6.x
    mad_pp r1.w, r1.x, r1.z, r1.y
    mad_pp r1.y, r0.y, r1.z, r1.y
    mul_pp r1.y, r1.y, r1.x
    add_pp r1.x, -r1.x, c6.x
    mad r1.y, r0.y, r1.w, r1.y
    add r1.y, r1.y, c6.w
    rcp r1.y, r1.y
    add_pp r1.y, r1.y, r1.y
    mul r0.x, r0.x, r1.y
    mad r1.y, r0.x, -c8.x, c8.y
    mul_pp r0.x, r0.x, c8.x
    rsq r1.z, r0.x
    rcp_pp r1.z, r1.z
    cmp_pp r1.y, r1.y, c8.z, r1.z
    abs r1.z, c1.w
    cmp_pp r0.x, -r1.z, r1.y, r0.x
    mul_pp r0.x, r0.y, r0.x
    max_pp r1.y, r0.x, c7.x
    texld r2, v5, s2
    texldp_pp r3, v6, s1
    mul_pp r0.x, r2.w, r3.x
    mul_pp r2.xyz, r0.x, c2
    mul_pp r1.yzw, r1.y, r2.xxyz
    add_pp r0.x, -r0.z, c6.x
    mul_pp r0.z, r0.z, r0.z
    dp2add_pp r0.z, r0.z, r0.w, c7.w
    mul_pp r0.w, r0.x, r0.x
    mul_pp r0.w, r0.w, r0.w
    mul_pp r0.x, r0.x, r0.w
    texld r3, v0, s0
    mov r4, c0
    mad_pp r5.xyz, c3, r3, -r4
    mul_pp r3.xyz, r3, c3
    mad_pp r4.xyz, c4.x, r5, r4
    lrp_pp r5.xyz, r0.x, c6.x, r4
    mul_pp r1.yzw, r1, r5.xxyz
    mul_pp r0.x, r1.x, r1.x
    mul_pp r0.x, r0.x, r0.x
    mul_pp r0.x, r1.x, r0.x
    mad_pp r0.x, r0.z, r0.x, c6.x
    add_pp r0.w, -r0.y, c6.x
    mul_pp r1.x, r0.w, r0.w
    mul_pp r1.x, r1.x, r1.x
    mul_pp r0.w, r0.w, r1.x
    mad_pp r0.z, r0.z, r0.w, c6.x
    mul_pp r0.x, r0.x, r0.z
    mul_pp r0.x, r0.y, r0.x
    mul_pp r0.xyz, r0.x, r2
    mad_pp r0.w, c4.x, -r4.w, r4.w
    mul_pp r2.xyz, r0.w, r3
    mad_pp oC0.xyz, r2, r0, r1.yzww
    mov_pp oC0.w, c6.x

// approximately 92 instruction slots used (3 texture, 89 arithmetic)
"
}
SubProgram "d3d11 " {
// Stats: 76 math, 3 textures
Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" }
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_LightTexture0] 2D 2
SetTexture 2 [_ShadowMapTexture] 2D 1
ConstBuffer "$Globals" 304
Vector 32 [unity_ColorSpaceDielectricSpec]
Vector 48 [unity_ColorSpaceLuminance]
Vector 96 [_LightColor0]
Vector 128 [_Color]
Float 200 [_Metallic]
Float 204 [_Glossiness]
BindCB  "$Globals" 0
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer cb0[13], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xy
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 6
   0: dp3 r0.x, v5.xyzx, v5.xyzx
   1: rsq r0.x, r0.x
   2: mul r0.xyz, r0.xxxx, v5.xyzx
   3: dp3 r0.w, v2.xyzx, v2.xyzx
   4: rsq r0.w, r0.w
   5: mul r1.xyz, r0.wwww, v2.xyzx
   6: dp3 r1.w, r0.xyzx, -r1.xyzx
   7: add r2.x, -r1.w, l(0.000010)
   8: lt r1.w, r1.w, l(0.000000)
   9: mad r2.xyz, -r1.xyzx, r2.xxxx, r0.xyzx
  10: movc r0.xyz, r1.wwww, r2.xyzx, r0.xyzx
  11: dp3 r1.x, r0.xyzx, -r1.xyzx
  12: max r1.x, r1.x, l(0.000000)
  13: mov r2.x, v3.w
  14: mov r2.y, v4.w
  15: mov r2.z, v5.w
  16: mad r1.yzw, -v2.xxyz, r0.wwww, r2.xxyz
  17: dp3 r0.w, r1.yzwy, r1.yzwy
  18: max r0.w, r0.w, l(0.001000)
  19: rsq r0.w, r0.w
  20: mul r1.yzw, r0.wwww, r1.yyzw
  21: dp3 r0.w, r0.xyzx, r1.yzwy
  22: dp3 r0.x, r0.xyzx, r2.xyzx
  23: dp3 r0.y, r2.xyzx, r1.yzwy
  24: max r0.xyz, r0.xywx, l(0.000000, 0.000000, 0.000000, 0.000000)
  25: mul r0.z, r0.z, r0.z
  26: add r0.w, -cb0[12].w, l(1.000000)
  27: mul r1.y, r0.w, r0.w
  28: mad r1.z, r1.y, r1.y, l(-1.000000)
  29: mad r0.z, r0.z, r1.z, l(1.000000)
  30: mul r0.z, r0.z, r0.z
  31: mad r0.z, r0.z, l(3.141593), l(0.000000)
  32: mul r1.z, r1.y, r1.y
  33: div r0.z, r1.z, r0.z
  34: mad r1.z, -r0.w, r0.w, l(1.000000)
  35: mad r1.w, r1.x, r1.z, r1.y
  36: mad r1.y, r0.x, r1.z, r1.y
  37: mul r1.y, r1.y, r1.x
  38: add r1.x, -r1.x, l(1.000000)
  39: mad r1.y, r0.x, r1.w, r1.y
  40: add r1.y, r1.y, l(0.000010)
  41: div r1.y, l(2.000000), r1.y
  42: mul r0.z, r0.z, r1.y
  43: mul r0.z, r0.z, l(0.785398)
  44: max r1.y, r0.z, l(0.000100)
  45: sqrt r1.y, r1.y
  46: eq r1.z, cb0[3].w, l(0.000000)
  47: movc r0.z, r1.z, r1.y, r0.z
  48: mul r0.z, r0.x, r0.z
  49: max r0.z, r0.z, l(0.000000)
  50: div r1.yz, v7.xxyx, v7.wwww
  51: sample r2.xyzw, r1.yzyy, t2.xyzw, s1
  52: sample r3.xyzw, v6.xyxx, t1.xyzw, s2
  53: mul r1.y, r2.x, r3.w
  54: mul r1.yzw, r1.yyyy, cb0[6].xxyz
  55: mul r2.xyz, r0.zzzz, r1.yzwy
  56: add r0.z, -r0.y, l(1.000000)
  57: dp2 r0.y, r0.yyyy, r0.yyyy
  58: mad r0.y, r0.y, r0.w, l(-0.500000)
  59: mul r0.w, r0.z, r0.z
  60: mul r0.w, r0.w, r0.w
  61: mul r0.z, r0.z, r0.w
  62: sample r3.xyzw, v1.xyxx, t0.xyzw, s0
  63: mad r4.xyz, cb0[8].xyzx, r3.xyzx, -cb0[2].xyzx
  64: mul r3.xyz, r3.xyzx, cb0[8].xyzx
  65: mad r4.xyz, cb0[12].zzzz, r4.xyzx, cb0[2].xyzx
  66: add r5.xyz, -r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  67: mad r4.xyz, r5.xyzx, r0.zzzz, r4.xyzx
  68: mul r2.xyz, r2.xyzx, r4.xyzx
  69: mul r0.z, r1.x, r1.x
  70: mul r0.z, r0.z, r0.z
  71: mul r0.z, r1.x, r0.z
  72: mad r0.z, r0.y, r0.z, l(1.000000)
  73: add r0.w, -r0.x, l(1.000000)
  74: mul r1.x, r0.w, r0.w
  75: mul r1.x, r1.x, r1.x
  76: mul r0.w, r0.w, r1.x
  77: mad r0.y, r0.y, r0.w, l(1.000000)
  78: mul r0.y, r0.z, r0.y
  79: mul r0.x, r0.x, r0.y
  80: mul r0.xyz, r0.xxxx, r1.yzwy
  81: mad r0.w, -cb0[12].z, cb0[2].w, cb0[2].w
  82: mul r1.xyz, r0.wwww, r3.xyzx
  83: mad o0.xyz, r1.xyzx, r0.xyzx, r2.xyzx
  84: mov o0.w, l(1.000000)
  85: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
Keywords { "POINT" "SHADOWS_CUBE" }
"// shader disassembly not supported on opengl"
}
SubProgram "d3d9 " {
// Stats: 100 math, 3 textures
Keywords { "POINT" "SHADOWS_CUBE" }
Vector 5 [_Color]
Float 7 [_Glossiness]
Vector 4 [_LightColor0]
Vector 0 [_LightPositionRange]
Vector 1 [_LightShadowData]
Float 6 [_Metallic]
Vector 2 [unity_ColorSpaceDielectricSpec]
Vector 3 [unity_ColorSpaceLuminance]
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_ShadowMapTexture] CUBE 1
SetTexture 2 [_LightTexture0] 2D 2
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   float4 _LightPositionRange;
//   float4 _LightShadowData;
//   sampler2D _LightTexture0;
//   sampler2D _MainTex;
//   float _Metallic;
//   samplerCUBE _ShadowMapTexture;
//   float4 unity_ColorSpaceDielectricSpec;
//   float4 unity_ColorSpaceLuminance;
//
//
// Registers:
//
//   Name                           Reg   Size
//   ------------------------------ ----- ----
//   _LightPositionRange            c0       1
//   _LightShadowData               c1       1
//   unity_ColorSpaceDielectricSpec c2       1
//   unity_ColorSpaceLuminance      c3       1
//   _LightColor0                   c4       1
//   _Color                         c5       1
//   _Metallic                      c6       1
//   _Glossiness                    c7       1
//   _MainTex                       s0       1
//   _ShadowMapTexture              s1       1
//   _LightTexture0                 s2       1
//

    ps_3_0
    def c8, 0.970000029, 1, 0.00100000005, 31.622776
    def c9, 9.99999975e-06, 0, 3.14159274, 1.00000001e-07
    def c10, -0.5, 0.785398185, 9.99999975e-05, 0.00999999978
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2_pp v2.w
    dcl_texcoord3_pp v3.w
    dcl_texcoord4_pp v4
    dcl_texcoord5 v5.xyz
    dcl_texcoord6 v6.xyz
    dcl_2d s0
    dcl_cube s1
    dcl_2d s2
    mov_pp r0.x, v2.w
    mov_pp r0.y, v3.w
    mov_pp r0.z, v4.w
    dp3_pp r0.w, r0, r0
    rsq_pp r0.w, r0.w
    nrm_pp r1.xyz, v1
    mad_pp r2.xyz, r0, r0.w, -r1
    mul_pp r0.xyz, r0.w, r0
    dp3_pp r0.w, r2, r2
    add r1.w, -r0.w, c8.z
    rsq_pp r0.w, r0.w
    cmp_pp r0.w, r1.w, c8.w, r0.w
    mul_pp r2.xyz, r0.w, r2
    nrm_pp r3.xyz, v4
    dp3_pp r0.w, r3, -r1
    add r1.w, -r0.w, c9.x
    mad_pp r4.xyz, -r1, r1.w, r3
    cmp_pp r3.xyz, r0.w, r3, r4
    dp3_pp r0.w, r3, -r1
    max_pp r1.x, r0.w, c9.y
    dp3_pp r0.w, r3, r2
    dp3_pp r1.y, r0, r2
    dp3_pp r0.x, r3, r0
    max_pp r1.z, r0.x, c9.y
    max_pp r0.x, r1.y, c9.y
    max_pp r1.y, r0.w, c9.y
    mul r0.y, r1.y, r1.y
    mov r1.y, c8.y
    add_pp r0.z, r1.y, -c7.x
    mul_pp r0.w, r0.z, r0.z
    mad r1.w, r0.w, r0.w, -c8.y
    mad_pp r0.y, r0.y, r1.w, c8.y
    mul r0.y, r0.y, r0.y
    mad r0.y, r0.y, c9.z, c9.w
    rcp r0.y, r0.y
    mul_pp r1.w, r0.w, r0.w
    mul_pp r0.y, r0.y, r1.w
    mad_pp r1.w, r0.z, -r0.z, c8.y
    mad_pp r2.x, r1.x, r1.w, r0.w
    mad_pp r0.w, r1.z, r1.w, r0.w
    mul_pp r0.w, r0.w, r1.x
    add_pp r1.x, -r1.x, c8.y
    mad r0.w, r1.z, r2.x, r0.w
    add r0.w, r0.w, c9.x
    rcp r0.w, r0.w
    add_pp r0.w, r0.w, r0.w
    mul r0.y, r0.y, r0.w
    mad r0.w, r0.y, -c10.y, c10.z
    mul_pp r0.y, r0.y, c10.y
    rsq r1.w, r0.y
    rcp_pp r1.w, r1.w
    cmp_pp r0.w, r0.w, c10.w, r1.w
    abs r1.w, c3.w
    cmp_pp r0.y, -r1.w, r0.w, r0.y
    mul_pp r0.y, r1.z, r0.y
    max_pp r1.w, r0.y, c9.y
    dp3 r0.y, v6, v6
    rsq r0.y, r0.y
    rcp r0.y, r0.y
    mul r0.y, r0.y, c0.w
    texld r2, v6, s1
    mad r0.y, r0.y, -c8.x, r2.x
    cmp_pp r0.y, r0.y, r1.y, c1.x
    dp3 r0.w, v5, v5
    texld r2, r0.w, s2
    mul_pp r0.y, r0.y, r2.x
    mul_pp r2.xyz, r0.y, c4
    mul_pp r3.xyz, r1.w, r2
    add_pp r0.y, -r0.x, c8.y
    dp2add_pp r0.x, r0.x, r0.x, c9.y
    mad_pp r0.x, r0.x, r0.z, c10.x
    mul_pp r0.z, r0.y, r0.y
    mul_pp r0.z, r0.z, r0.z
    mul_pp r0.y, r0.y, r0.z
    texld r4, v0, s0
    mov r5, c2
    mad_pp r6.xyz, c5, r4, -r5
    mul_pp r4.xyz, r4, c5
    mad_pp r5.xyz, c6.x, r6, r5
    lrp_pp r6.xyz, r0.y, c8.y, r5
    mul_pp r0.yzw, r3.xxyz, r6.xxyz
    mul_pp r1.y, r1.x, r1.x
    mul_pp r1.y, r1.y, r1.y
    mul_pp r1.x, r1.x, r1.y
    mad_pp r1.x, r0.x, r1.x, c8.y
    add_pp r1.y, -r1.z, c8.y
    mul_pp r1.w, r1.y, r1.y
    mul_pp r1.w, r1.w, r1.w
    mul_pp r1.y, r1.y, r1.w
    mad_pp r0.x, r0.x, r1.y, c8.y
    mul_pp r0.x, r1.x, r0.x
    mul_pp r0.x, r1.z, r0.x
    mul_pp r1.xyz, r0.x, r2
    mad_pp r0.x, c6.x, -r5.w, r5.w
    mul_pp r2.xyz, r0.x, r4
    mad_pp oC0.xyz, r2, r1, r0.yzww
    mov_pp oC0.w, c8.y

// approximately 102 instruction slots used (3 texture, 99 arithmetic)
"
}
SubProgram "d3d11 " {
// Stats: 84 math, 3 textures
Keywords { "POINT" "SHADOWS_CUBE" }
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_LightTexture0] 2D 2
SetTexture 2 [_ShadowMapTexture] CUBE 1
ConstBuffer "$Globals" 304
Vector 32 [unity_ColorSpaceDielectricSpec]
Vector 48 [unity_ColorSpaceLuminance]
Vector 96 [_LightColor0]
Vector 128 [_Color]
Float 200 [_Metallic]
Float 204 [_Glossiness]
ConstBuffer "UnityLighting" 720
Vector 16 [_LightPositionRange]
ConstBuffer "UnityShadows" 416
Vector 384 [_LightShadowData]
BindCB  "$Globals" 0
BindCB  "UnityLighting" 1
BindCB  "UnityShadows" 2
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer cb0[13], immediateIndexed
      dcl_constantbuffer cb1[2], immediateIndexed
      dcl_constantbuffer cb2[25], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texturecube (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: dp3 r0.x, v5.xyzx, v5.xyzx
   1: rsq r0.x, r0.x
   2: mul r0.xyz, r0.xxxx, v5.xyzx
   3: dp3 r0.w, v2.xyzx, v2.xyzx
   4: rsq r0.w, r0.w
   5: mul r1.xyz, r0.wwww, v2.xyzx
   6: dp3 r0.w, r0.xyzx, -r1.xyzx
   7: add r1.w, -r0.w, l(0.000010)
   8: lt r0.w, r0.w, l(0.000000)
   9: mad r2.xyz, -r1.xyzx, r1.wwww, r0.xyzx
  10: movc r0.xyz, r0.wwww, r2.xyzx, r0.xyzx
  11: mov r2.x, v3.w
  12: mov r2.y, v4.w
  13: mov r2.z, v5.w
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: rsq r0.w, r0.w
  16: mad r3.xyz, r2.xyzx, r0.wwww, -r1.xyzx
  17: dp3 r1.x, r0.xyzx, -r1.xyzx
  18: max r1.x, r1.x, l(0.000000)
  19: mul r1.yzw, r0.wwww, r2.xxyz
  20: dp3 r0.w, r3.xyzx, r3.xyzx
  21: max r0.w, r0.w, l(0.001000)
  22: rsq r0.w, r0.w
  23: mul r2.xyz, r0.wwww, r3.xyzx
  24: dp3 r0.w, r0.xyzx, r2.xyzx
  25: dp3 r0.x, r0.xyzx, r1.yzwy
  26: dp3 r0.y, r1.yzwy, r2.xyzx
  27: max r0.xyz, r0.xywx, l(0.000000, 0.000000, 0.000000, 0.000000)
  28: mul r0.z, r0.z, r0.z
  29: add r0.w, -cb0[12].w, l(1.000000)
  30: mul r1.y, r0.w, r0.w
  31: mad r1.z, r1.y, r1.y, l(-1.000000)
  32: mad r0.z, r0.z, r1.z, l(1.000000)
  33: mul r0.z, r0.z, r0.z
  34: mad r0.z, r0.z, l(3.141593), l(0.000000)
  35: mul r1.z, r1.y, r1.y
  36: div r0.z, r1.z, r0.z
  37: mad r1.z, -r0.w, r0.w, l(1.000000)
  38: mad r1.w, r1.x, r1.z, r1.y
  39: mad r1.y, r0.x, r1.z, r1.y
  40: mul r1.y, r1.y, r1.x
  41: add r1.x, -r1.x, l(1.000000)
  42: mad r1.y, r0.x, r1.w, r1.y
  43: add r1.y, r1.y, l(0.000010)
  44: div r1.y, l(2.000000), r1.y
  45: mul r0.z, r0.z, r1.y
  46: mul r0.z, r0.z, l(0.785398)
  47: max r1.y, r0.z, l(0.000100)
  48: sqrt r1.y, r1.y
  49: eq r1.z, cb0[3].w, l(0.000000)
  50: movc r0.z, r1.z, r1.y, r0.z
  51: mul r0.z, r0.x, r0.z
  52: max r0.z, r0.z, l(0.000000)
  53: dp3 r1.y, v7.xyzx, v7.xyzx
  54: sqrt r1.y, r1.y
  55: mul r1.y, r1.y, cb1[1].w
  56: mul r1.y, r1.y, l(0.970000)
  57: sample r2.xyzw, v7.xyzx, t2.xyzw, s1
  58: lt r1.y, r2.x, r1.y
  59: movc r1.y, r1.y, cb2[24].x, l(1.000000)
  60: dp3 r1.z, v6.xyzx, v6.xyzx
  61: sample r2.xyzw, r1.zzzz, t1.xyzw, s2
  62: mul r1.y, r1.y, r2.x
  63: mul r1.yzw, r1.yyyy, cb0[6].xxyz
  64: mul r2.xyz, r0.zzzz, r1.yzwy
  65: add r0.z, -r0.y, l(1.000000)
  66: dp2 r0.y, r0.yyyy, r0.yyyy
  67: mad r0.y, r0.y, r0.w, l(-0.500000)
  68: mul r0.w, r0.z, r0.z
  69: mul r0.w, r0.w, r0.w
  70: mul r0.z, r0.z, r0.w
  71: sample r3.xyzw, v1.xyxx, t0.xyzw, s0
  72: mad r4.xyz, cb0[8].xyzx, r3.xyzx, -cb0[2].xyzx
  73: mul r3.xyz, r3.xyzx, cb0[8].xyzx
  74: mad r4.xyz, cb0[12].zzzz, r4.xyzx, cb0[2].xyzx
  75: add r5.xyz, -r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  76: mad r4.xyz, r5.xyzx, r0.zzzz, r4.xyzx
  77: mul r2.xyz, r2.xyzx, r4.xyzx
  78: mul r0.z, r1.x, r1.x
  79: mul r0.z, r0.z, r0.z
  80: mul r0.z, r1.x, r0.z
  81: mad r0.z, r0.y, r0.z, l(1.000000)
  82: add r0.w, -r0.x, l(1.000000)
  83: mul r1.x, r0.w, r0.w
  84: mul r1.x, r1.x, r1.x
  85: mul r0.w, r0.w, r1.x
  86: mad r0.y, r0.y, r0.w, l(1.000000)
  87: mul r0.y, r0.z, r0.y
  88: mul r0.x, r0.x, r0.y
  89: mul r0.xyz, r0.xxxx, r1.yzwy
  90: mad r0.w, -cb0[12].z, cb0[2].w, cb0[2].w
  91: mul r1.xyz, r0.wwww, r3.xyzx
  92: mad o0.xyz, r1.xyzx, r0.xyzx, r2.xyzx
  93: mov o0.w, l(1.000000)
  94: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
Keywords { "POINT_COOKIE" "SHADOWS_CUBE" }
"// shader disassembly not supported on opengl"
}
SubProgram "d3d9 " {
// Stats: 101 math, 4 textures
Keywords { "POINT_COOKIE" "SHADOWS_CUBE" }
Vector 5 [_Color]
Float 7 [_Glossiness]
Vector 4 [_LightColor0]
Vector 0 [_LightPositionRange]
Vector 1 [_LightShadowData]
Float 6 [_Metallic]
Vector 2 [unity_ColorSpaceDielectricSpec]
Vector 3 [unity_ColorSpaceLuminance]
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_ShadowMapTexture] CUBE 1
SetTexture 2 [_LightTexture0] CUBE 2
SetTexture 3 [_LightTextureB0] 2D 3
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   float4 _LightPositionRange;
//   float4 _LightShadowData;
//   samplerCUBE _LightTexture0;
//   sampler2D _LightTextureB0;
//   sampler2D _MainTex;
//   float _Metallic;
//   samplerCUBE _ShadowMapTexture;
//   float4 unity_ColorSpaceDielectricSpec;
//   float4 unity_ColorSpaceLuminance;
//
//
// Registers:
//
//   Name                           Reg   Size
//   ------------------------------ ----- ----
//   _LightPositionRange            c0       1
//   _LightShadowData               c1       1
//   unity_ColorSpaceDielectricSpec c2       1
//   unity_ColorSpaceLuminance      c3       1
//   _LightColor0                   c4       1
//   _Color                         c5       1
//   _Metallic                      c6       1
//   _Glossiness                    c7       1
//   _MainTex                       s0       1
//   _ShadowMapTexture              s1       1
//   _LightTexture0                 s2       1
//   _LightTextureB0                s3       1
//

    ps_3_0
    def c8, 0.970000029, 1, 0.00100000005, 31.622776
    def c9, 9.99999975e-06, 0, 3.14159274, 1.00000001e-07
    def c10, -0.5, 0.785398185, 9.99999975e-05, 0.00999999978
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2_pp v2.w
    dcl_texcoord3_pp v3.w
    dcl_texcoord4_pp v4
    dcl_texcoord5 v5.xyz
    dcl_texcoord6 v6.xyz
    dcl_2d s0
    dcl_cube s1
    dcl_cube s2
    dcl_2d s3
    mov_pp r0.x, v2.w
    mov_pp r0.y, v3.w
    mov_pp r0.z, v4.w
    dp3_pp r0.w, r0, r0
    rsq_pp r0.w, r0.w
    nrm_pp r1.xyz, v1
    mad_pp r2.xyz, r0, r0.w, -r1
    mul_pp r0.xyz, r0.w, r0
    dp3_pp r0.w, r2, r2
    add r1.w, -r0.w, c8.z
    rsq_pp r0.w, r0.w
    cmp_pp r0.w, r1.w, c8.w, r0.w
    mul_pp r2.xyz, r0.w, r2
    nrm_pp r3.xyz, v4
    dp3_pp r0.w, r3, -r1
    add r1.w, -r0.w, c9.x
    mad_pp r4.xyz, -r1, r1.w, r3
    cmp_pp r3.xyz, r0.w, r3, r4
    dp3_pp r0.w, r3, -r1
    max_pp r1.x, r0.w, c9.y
    dp3_pp r0.w, r3, r2
    dp3_pp r1.y, r0, r2
    dp3_pp r0.x, r3, r0
    max_pp r1.z, r0.x, c9.y
    max_pp r0.x, r1.y, c9.y
    max_pp r1.y, r0.w, c9.y
    mul r0.y, r1.y, r1.y
    mov r1.y, c8.y
    add_pp r0.z, r1.y, -c7.x
    mul_pp r0.w, r0.z, r0.z
    mad r1.w, r0.w, r0.w, -c8.y
    mad_pp r0.y, r0.y, r1.w, c8.y
    mul r0.y, r0.y, r0.y
    mad r0.y, r0.y, c9.z, c9.w
    rcp r0.y, r0.y
    mul_pp r1.w, r0.w, r0.w
    mul_pp r0.y, r0.y, r1.w
    mad_pp r1.w, r0.z, -r0.z, c8.y
    mad_pp r2.x, r1.x, r1.w, r0.w
    mad_pp r0.w, r1.z, r1.w, r0.w
    mul_pp r0.w, r0.w, r1.x
    add_pp r1.x, -r1.x, c8.y
    mad r0.w, r1.z, r2.x, r0.w
    add r0.w, r0.w, c9.x
    rcp r0.w, r0.w
    add_pp r0.w, r0.w, r0.w
    mul r0.y, r0.y, r0.w
    mad r0.w, r0.y, -c10.y, c10.z
    mul_pp r0.y, r0.y, c10.y
    rsq r1.w, r0.y
    rcp_pp r1.w, r1.w
    cmp_pp r0.w, r0.w, c10.w, r1.w
    abs r1.w, c3.w
    cmp_pp r0.y, -r1.w, r0.w, r0.y
    mul_pp r0.y, r1.z, r0.y
    max_pp r1.w, r0.y, c9.y
    dp3 r0.y, v6, v6
    rsq r0.y, r0.y
    rcp r0.y, r0.y
    mul r0.y, r0.y, c0.w
    texld r2, v6, s1
    mad r0.y, r0.y, -c8.x, r2.x
    cmp_pp r0.y, r0.y, r1.y, c1.x
    dp3 r0.w, v5, v5
    texld r2, r0.w, s3
    texld r3, v5, s2
    mul r0.w, r2.x, r3.w
    mul_pp r0.y, r0.y, r0.w
    mul_pp r2.xyz, r0.y, c4
    mul_pp r3.xyz, r1.w, r2
    add_pp r0.y, -r0.x, c8.y
    dp2add_pp r0.x, r0.x, r0.x, c9.y
    mad_pp r0.x, r0.x, r0.z, c10.x
    mul_pp r0.z, r0.y, r0.y
    mul_pp r0.z, r0.z, r0.z
    mul_pp r0.y, r0.y, r0.z
    texld r4, v0, s0
    mov r5, c2
    mad_pp r6.xyz, c5, r4, -r5
    mul_pp r4.xyz, r4, c5
    mad_pp r5.xyz, c6.x, r6, r5
    lrp_pp r6.xyz, r0.y, c8.y, r5
    mul_pp r0.yzw, r3.xxyz, r6.xxyz
    mul_pp r1.y, r1.x, r1.x
    mul_pp r1.y, r1.y, r1.y
    mul_pp r1.x, r1.x, r1.y
    mad_pp r1.x, r0.x, r1.x, c8.y
    add_pp r1.y, -r1.z, c8.y
    mul_pp r1.w, r1.y, r1.y
    mul_pp r1.w, r1.w, r1.w
    mul_pp r1.y, r1.y, r1.w
    mad_pp r0.x, r0.x, r1.y, c8.y
    mul_pp r0.x, r1.x, r0.x
    mul_pp r0.x, r1.z, r0.x
    mul_pp r1.xyz, r0.x, r2
    mad_pp r0.x, c6.x, -r5.w, r5.w
    mul_pp r2.xyz, r0.x, r4
    mad_pp oC0.xyz, r2, r1, r0.yzww
    mov_pp oC0.w, c8.y

// approximately 104 instruction slots used (4 texture, 100 arithmetic)
"
}
SubProgram "d3d11 " {
// Stats: 85 math, 4 textures
Keywords { "POINT_COOKIE" "SHADOWS_CUBE" }
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_LightTextureB0] 2D 3
SetTexture 2 [_LightTexture0] CUBE 2
SetTexture 3 [_ShadowMapTexture] CUBE 1
ConstBuffer "$Globals" 304
Vector 32 [unity_ColorSpaceDielectricSpec]
Vector 48 [unity_ColorSpaceLuminance]
Vector 96 [_LightColor0]
Vector 128 [_Color]
Float 200 [_Metallic]
Float 204 [_Glossiness]
ConstBuffer "UnityLighting" 720
Vector 16 [_LightPositionRange]
ConstBuffer "UnityShadows" 416
Vector 384 [_LightShadowData]
BindCB  "$Globals" 0
BindCB  "UnityLighting" 1
BindCB  "UnityShadows" 2
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer cb0[13], immediateIndexed
      dcl_constantbuffer cb1[2], immediateIndexed
      dcl_constantbuffer cb2[25], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texturecube (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: dp3 r0.x, v5.xyzx, v5.xyzx
   1: rsq r0.x, r0.x
   2: mul r0.xyz, r0.xxxx, v5.xyzx
   3: dp3 r0.w, v2.xyzx, v2.xyzx
   4: rsq r0.w, r0.w
   5: mul r1.xyz, r0.wwww, v2.xyzx
   6: dp3 r0.w, r0.xyzx, -r1.xyzx
   7: add r1.w, -r0.w, l(0.000010)
   8: lt r0.w, r0.w, l(0.000000)
   9: mad r2.xyz, -r1.xyzx, r1.wwww, r0.xyzx
  10: movc r0.xyz, r0.wwww, r2.xyzx, r0.xyzx
  11: mov r2.x, v3.w
  12: mov r2.y, v4.w
  13: mov r2.z, v5.w
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: rsq r0.w, r0.w
  16: mad r3.xyz, r2.xyzx, r0.wwww, -r1.xyzx
  17: dp3 r1.x, r0.xyzx, -r1.xyzx
  18: max r1.x, r1.x, l(0.000000)
  19: mul r1.yzw, r0.wwww, r2.xxyz
  20: dp3 r0.w, r3.xyzx, r3.xyzx
  21: max r0.w, r0.w, l(0.001000)
  22: rsq r0.w, r0.w
  23: mul r2.xyz, r0.wwww, r3.xyzx
  24: dp3 r0.w, r0.xyzx, r2.xyzx
  25: dp3 r0.x, r0.xyzx, r1.yzwy
  26: dp3 r0.y, r1.yzwy, r2.xyzx
  27: max r0.xyz, r0.xywx, l(0.000000, 0.000000, 0.000000, 0.000000)
  28: mul r0.z, r0.z, r0.z
  29: add r0.w, -cb0[12].w, l(1.000000)
  30: mul r1.y, r0.w, r0.w
  31: mad r1.z, r1.y, r1.y, l(-1.000000)
  32: mad r0.z, r0.z, r1.z, l(1.000000)
  33: mul r0.z, r0.z, r0.z
  34: mad r0.z, r0.z, l(3.141593), l(0.000000)
  35: mul r1.z, r1.y, r1.y
  36: div r0.z, r1.z, r0.z
  37: mad r1.z, -r0.w, r0.w, l(1.000000)
  38: mad r1.w, r1.x, r1.z, r1.y
  39: mad r1.y, r0.x, r1.z, r1.y
  40: mul r1.y, r1.y, r1.x
  41: add r1.x, -r1.x, l(1.000000)
  42: mad r1.y, r0.x, r1.w, r1.y
  43: add r1.y, r1.y, l(0.000010)
  44: div r1.y, l(2.000000), r1.y
  45: mul r0.z, r0.z, r1.y
  46: mul r0.z, r0.z, l(0.785398)
  47: max r1.y, r0.z, l(0.000100)
  48: sqrt r1.y, r1.y
  49: eq r1.z, cb0[3].w, l(0.000000)
  50: movc r0.z, r1.z, r1.y, r0.z
  51: mul r0.z, r0.x, r0.z
  52: max r0.z, r0.z, l(0.000000)
  53: dp3 r1.y, v7.xyzx, v7.xyzx
  54: sqrt r1.y, r1.y
  55: mul r1.y, r1.y, cb1[1].w
  56: mul r1.y, r1.y, l(0.970000)
  57: sample r2.xyzw, v7.xyzx, t3.xyzw, s1
  58: lt r1.y, r2.x, r1.y
  59: movc r1.y, r1.y, cb2[24].x, l(1.000000)
  60: dp3 r1.z, v6.xyzx, v6.xyzx
  61: sample r2.xyzw, r1.zzzz, t1.xyzw, s3
  62: sample r3.xyzw, v6.xyzx, t2.xyzw, s2
  63: mul r1.z, r2.x, r3.w
  64: mul r1.y, r1.y, r1.z
  65: mul r1.yzw, r1.yyyy, cb0[6].xxyz
  66: mul r2.xyz, r0.zzzz, r1.yzwy
  67: add r0.z, -r0.y, l(1.000000)
  68: dp2 r0.y, r0.yyyy, r0.yyyy
  69: mad r0.y, r0.y, r0.w, l(-0.500000)
  70: mul r0.w, r0.z, r0.z
  71: mul r0.w, r0.w, r0.w
  72: mul r0.z, r0.z, r0.w
  73: sample r3.xyzw, v1.xyxx, t0.xyzw, s0
  74: mad r4.xyz, cb0[8].xyzx, r3.xyzx, -cb0[2].xyzx
  75: mul r3.xyz, r3.xyzx, cb0[8].xyzx
  76: mad r4.xyz, cb0[12].zzzz, r4.xyzx, cb0[2].xyzx
  77: add r5.xyz, -r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  78: mad r4.xyz, r5.xyzx, r0.zzzz, r4.xyzx
  79: mul r2.xyz, r2.xyzx, r4.xyzx
  80: mul r0.z, r1.x, r1.x
  81: mul r0.z, r0.z, r0.z
  82: mul r0.z, r1.x, r0.z
  83: mad r0.z, r0.y, r0.z, l(1.000000)
  84: add r0.w, -r0.x, l(1.000000)
  85: mul r1.x, r0.w, r0.w
  86: mul r1.x, r1.x, r1.x
  87: mul r0.w, r0.w, r1.x
  88: mad r0.y, r0.y, r0.w, l(1.000000)
  89: mul r0.y, r0.z, r0.y
  90: mul r0.x, r0.x, r0.y
  91: mul r0.xyz, r0.xxxx, r1.yzwy
  92: mad r0.w, -cb0[12].z, cb0[2].w, cb0[2].w
  93: mul r1.xyz, r0.wwww, r3.xyzx
  94: mad o0.xyz, r1.xyzx, r0.xyzx, r2.xyzx
  95: mov o0.w, l(1.000000)
  96: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" "SHADOWS_NATIVE" }
"// shader disassembly not supported on opengl"
}
SubProgram "d3d9 " {
// Stats: 108 math, 7 textures
Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" "SHADOWS_NATIVE" }
Vector 8 [_Color]
Float 10 [_Glossiness]
Vector 7 [_LightColor0]
Vector 4 [_LightShadowData]
Float 9 [_Metallic]
Vector 0 [_ShadowOffsets0]
Vector 1 [_ShadowOffsets1]
Vector 2 [_ShadowOffsets2]
Vector 3 [_ShadowOffsets3]
Vector 5 [unity_ColorSpaceDielectricSpec]
Vector 6 [unity_ColorSpaceLuminance]
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_ShadowMapTexture] 2D 1
SetTexture 2 [_LightTexture0] 2D 2
SetTexture 3 [_LightTextureB0] 2D 3
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   float4 _LightShadowData;
//   sampler2D _LightTexture0;
//   sampler2D _LightTextureB0;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D _ShadowMapTexture;
//   float4 _ShadowOffsets[4];
//   float4 unity_ColorSpaceDielectricSpec;
//   float4 unity_ColorSpaceLuminance;
//
//
// Registers:
//
//   Name                           Reg   Size
//   ------------------------------ ----- ----
//   _ShadowOffsets                 c0       4
//   _LightShadowData               c4       1
//   unity_ColorSpaceDielectricSpec c5       1
//   unity_ColorSpaceLuminance      c6       1
//   _LightColor0                   c7       1
//   _Color                         c8       1
//   _Metallic                      c9       1
//   _Glossiness                    c10      1
//   _MainTex                       s0       1
//   _ShadowMapTexture              s1       1
//   _LightTexture0                 s2       1
//   _LightTextureB0                s3       1
//

    ps_3_0
    def c11, 0.5, 0, 1, 0.25
    def c12, 0.00100000005, 31.622776, 9.99999975e-06, 0.785398185
    def c13, 3.14159274, 1.00000001e-07, 0.785398185, 9.99999975e-05
    def c14, 0.00999999978, 0, 0, 0
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2_pp v2.w
    dcl_texcoord3_pp v3.w
    dcl_texcoord4_pp v4
    dcl_texcoord5 v5
    dcl_texcoord6 v6
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    mov r0.z, c11.z
    rcp r0.x, v6.w
    mad r1, v6, r0.x, c0
    texldp_pp r1, r1, s1
    mad r2, v6, r0.x, c1
    texldp_pp r2, r2, s1
    mov_pp r1.y, r2.x
    mad r2, v6, r0.x, c2
    mad r3, v6, r0.x, c3
    texldp_pp r3, r3, s1
    mov_pp r1.w, r3.x
    texldp_pp r2, r2, s1
    mov_pp r1.z, r2.x
    lrp_pp r2, r1, r0.z, c4.x
    dp4_pp r0.x, r2, c11.w
    rcp r0.y, v5.w
    mad r0.yw, v5.xxzy, r0.y, c11.x
    texld_pp r1, r0.ywzw, s2
    dp3 r0.y, v5, v5
    texld_pp r2, r0.y, s3
    mul r0.y, r1.w, r2.x
    cmp r0.y, -v5.z, c11.y, r0.y
    mul_pp r0.x, r0.x, r0.y
    mul_pp r0.xyw, r0.x, c7.xyzz
    mov_pp r1.x, v2.w
    mov_pp r1.y, v3.w
    mov_pp r1.z, v4.w
    dp3_pp r1.w, r1, r1
    rsq_pp r1.w, r1.w
    nrm_pp r2.xyz, v1
    mad_pp r3.xyz, r1, r1.w, -r2
    mul_pp r1.xyz, r1.w, r1
    dp3_pp r1.w, r3, r3
    add r2.w, -r1.w, c12.x
    rsq_pp r1.w, r1.w
    cmp_pp r1.w, r2.w, c12.y, r1.w
    mul_pp r3.xyz, r1.w, r3
    nrm_pp r4.xyz, v4
    dp3_pp r1.w, r4, -r2
    add r2.w, -r1.w, c12.z
    mad_pp r5.xyz, -r2, r2.w, r4
    cmp_pp r4.xyz, r1.w, r4, r5
    dp3_pp r1.w, r4, -r2
    max_pp r2.x, r1.w, c11.y
    dp3_pp r1.w, r4, r3
    dp3_pp r2.y, r1, r3
    dp3_pp r1.x, r4, r1
    max_pp r2.z, r1.x, c11.y
    max_pp r1.x, r2.y, c11.y
    max_pp r2.y, r1.w, c11.y
    mul r1.y, r2.y, r2.y
    add_pp r0.z, r0.z, -c10.x
    mul_pp r1.z, r0.z, r0.z
    mad r1.w, r1.z, r1.z, -c11.z
    mad_pp r1.y, r1.y, r1.w, c11.z
    mul r1.yw, r1.xyzz, r1.xyzz
    mad r1.y, r1.y, c13.x, c13.y
    rcp r1.y, r1.y
    mul_pp r1.y, r1.y, r1.w
    mad_pp r1.w, r0.z, -r0.z, c11.z
    mad_pp r2.y, r2.x, r1.w, r1.z
    mad_pp r1.z, r2.z, r1.w, r1.z
    mul_pp r1.z, r1.z, r2.x
    add_pp r1.w, -r2.x, c11.z
    mad r1.z, r2.z, r2.y, r1.z
    add r1.z, r1.z, c12.z
    rcp r1.z, r1.z
    add_pp r1.z, r1.z, r1.z
    mul r1.y, r1.y, r1.z
    mad r1.z, r1.y, -c13.z, c13.w
    mul_pp r1.y, r1.y, c12.w
    rsq r2.x, r1.y
    rcp_pp r2.x, r2.x
    cmp_pp r1.z, r1.z, c14.x, r2.x
    abs r2.x, c6.w
    cmp_pp r1.y, -r2.x, r1.z, r1.y
    mul_pp r1.y, r2.z, r1.y
    max_pp r2.x, r1.y, c11.y
    mul_pp r2.xyw, r0, r2.x
    add_pp r1.y, -r1.x, c11.z
    dp2add_pp r1.x, r1.x, r1.x, c11.y
    mad_pp r0.z, r1.x, r0.z, -c11.x
    mul_pp r1.x, r1.y, r1.y
    mul_pp r1.x, r1.x, r1.x
    mul_pp r1.x, r1.y, r1.x
    texld r3, v0, s0
    mov r4, c5
    mad_pp r5.xyz, c8, r3, -r4
    mul_pp r3.xyz, r3, c8
    mad_pp r4.xyz, c9.x, r5, r4
    lrp_pp r5.xyz, r1.x, c11.z, r4
    mul_pp r1.xyz, r2.xyww, r5
    mul_pp r2.x, r1.w, r1.w
    mul_pp r2.x, r2.x, r2.x
    mul_pp r1.w, r1.w, r2.x
    mad_pp r1.w, r0.z, r1.w, c11.z
    add_pp r2.x, -r2.z, c11.z
    mul_pp r2.y, r2.x, r2.x
    mul_pp r2.y, r2.y, r2.y
    mul_pp r2.x, r2.x, r2.y
    mad_pp r0.z, r0.z, r2.x, c11.z
    mul_pp r0.z, r1.w, r0.z
    mul_pp r0.z, r2.z, r0.z
    mul_pp r0.xyz, r0.z, r0.xyww
    mad_pp r0.w, c9.x, -r4.w, r4.w
    mul_pp r2.xyz, r0.w, r3
    mad_pp oC0.xyz, r2, r0, r1
    mov_pp oC0.w, c11.z

// approximately 113 instruction slots used (7 texture, 106 arithmetic)
"
}
SubProgram "d3d11 " {
// Stats: 94 math, 3 textures
Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" "SHADOWS_NATIVE" }
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_LightTexture0] 2D 2
SetTexture 2 [_LightTextureB0] 2D 3
SetTexture 3 [_ShadowMapTexture] 2D 1
ConstBuffer "$Globals" 368
Vector 32 [unity_ColorSpaceDielectricSpec]
Vector 48 [unity_ColorSpaceLuminance]
Vector 96 [_LightColor0]
Vector 128 [_Color]
Float 200 [_Metallic]
Float 204 [_Glossiness]
Vector 240 [_ShadowOffsets0]
Vector 256 [_ShadowOffsets1]
Vector 272 [_ShadowOffsets2]
Vector 288 [_ShadowOffsets3]
ConstBuffer "UnityShadows" 416
Vector 384 [_LightShadowData]
BindCB  "$Globals" 0
BindCB  "UnityShadows" 1
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer cb0[19], immediateIndexed
      dcl_constantbuffer cb1[25], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyzw
      dcl_input_ps linear v7.xyzw
      dcl_output o0.xyzw
      dcl_temps 6
   0: add r0.x, -cb1[24].x, l(1.000000)
   1: div r0.yzw, v7.xxyz, v7.wwww
   2: add r1.xyz, r0.yzwy, cb0[15].xyzx
   3: sample_c_lz r1.x, r1.xyxx, t3.xxxx, s1, r1.z
   4: add r2.xyz, r0.yzwy, cb0[16].xyzx
   5: sample_c_lz r1.y, r2.xyxx, t3.xxxx, s1, r2.z
   6: add r2.xyz, r0.yzwy, cb0[17].xyzx
   7: add r0.yzw, r0.yyzw, cb0[18].xxyz
   8: sample_c_lz r1.w, r0.yzyy, t3.xxxx, s1, r0.w
   9: sample_c_lz r1.z, r2.xyxx, t3.xxxx, s1, r2.z
  10: mad r0.xyzw, r1.xyzw, r0.xxxx, cb1[24].xxxx
  11: dp4 r0.x, r0.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
  12: div r0.yz, v6.xxyx, v6.wwww
  13: add r0.yz, r0.yyzy, l(0.000000, 0.500000, 0.500000, 0.000000)
  14: sample r1.xyzw, r0.yzyy, t1.xyzw, s2
  15: lt r0.y, l(0.000000), v6.z
  16: and r0.y, r0.y, l(0x3f800000)
  17: mul r0.y, r1.w, r0.y
  18: dp3 r0.z, v6.xyzx, v6.xyzx
  19: sample r1.xyzw, r0.zzzz, t2.xyzw, s3
  20: mul r0.y, r0.y, r1.x
  21: mul r0.x, r0.x, r0.y
  22: mul r0.xyz, r0.xxxx, cb0[6].xyzx
  23: dp3 r0.w, v5.xyzx, v5.xyzx
  24: rsq r0.w, r0.w
  25: mul r1.xyz, r0.wwww, v5.xyzx
  26: dp3 r0.w, v2.xyzx, v2.xyzx
  27: rsq r0.w, r0.w
  28: mul r2.xyz, r0.wwww, v2.xyzx
  29: dp3 r0.w, r1.xyzx, -r2.xyzx
  30: add r1.w, -r0.w, l(0.000010)
  31: lt r0.w, r0.w, l(0.000000)
  32: mad r3.xyz, -r2.xyzx, r1.wwww, r1.xyzx
  33: movc r1.xyz, r0.wwww, r3.xyzx, r1.xyzx
  34: mov r3.x, v3.w
  35: mov r3.y, v4.w
  36: mov r3.z, v5.w
  37: dp3 r0.w, r3.xyzx, r3.xyzx
  38: rsq r0.w, r0.w
  39: mad r4.xyz, r3.xyzx, r0.wwww, -r2.xyzx
  40: dp3 r1.w, r1.xyzx, -r2.xyzx
  41: mul r2.xyz, r0.wwww, r3.xyzx
  42: dp3 r0.w, r4.xyzx, r4.xyzx
  43: max r0.w, r0.w, l(0.001000)
  44: rsq r0.w, r0.w
  45: mul r3.xyz, r0.wwww, r4.xyzx
  46: dp3 r0.w, r1.xyzx, r3.xyzx
  47: dp3 r1.x, r1.xyzx, r2.xyzx
  48: dp3 r1.y, r2.xyzx, r3.xyzx
  49: max r1.xyw, r1.xyxw, l(0.000000, 0.000000, 0.000000, 0.000000)
  50: max r0.w, r0.w, l(0.000000)
  51: mul r0.w, r0.w, r0.w
  52: add r1.z, -cb0[12].w, l(1.000000)
  53: mul r2.x, r1.z, r1.z
  54: mad r2.y, r2.x, r2.x, l(-1.000000)
  55: mad r0.w, r0.w, r2.y, l(1.000000)
  56: mul r0.w, r0.w, r0.w
  57: mad r0.w, r0.w, l(3.141593), l(0.000000)
  58: mul r2.y, r2.x, r2.x
  59: div r0.w, r2.y, r0.w
  60: mad r2.y, -r1.z, r1.z, l(1.000000)
  61: mad r2.z, r1.w, r2.y, r2.x
  62: mad r2.x, r1.x, r2.y, r2.x
  63: mul r2.x, r1.w, r2.x
  64: add r1.w, -r1.w, l(1.000000)
  65: mad r2.x, r1.x, r2.z, r2.x
  66: add r2.x, r2.x, l(0.000010)
  67: div r2.x, l(2.000000), r2.x
  68: mul r0.w, r0.w, r2.x
  69: mul r0.w, r0.w, l(0.785398)
  70: max r2.x, r0.w, l(0.000100)
  71: sqrt r2.x, r2.x
  72: eq r2.y, cb0[3].w, l(0.000000)
  73: movc r0.w, r2.y, r2.x, r0.w
  74: mul r0.w, r1.x, r0.w
  75: max r0.w, r0.w, l(0.000000)
  76: mul r2.xyz, r0.xyzx, r0.wwww
  77: add r0.w, -r1.y, l(1.000000)
  78: mul r1.y, r1.y, r1.y
  79: dp2 r1.y, r1.yyyy, r1.zzzz
  80: add r1.y, r1.y, l(-0.500000)
  81: mul r1.z, r0.w, r0.w
  82: mul r1.z, r1.z, r1.z
  83: mul r0.w, r0.w, r1.z
  84: sample r3.xyzw, v1.xyxx, t0.xyzw, s0
  85: mad r4.xyz, cb0[8].xyzx, r3.xyzx, -cb0[2].xyzx
  86: mul r3.xyz, r3.xyzx, cb0[8].xyzx
  87: mad r4.xyz, cb0[12].zzzz, r4.xyzx, cb0[2].xyzx
  88: add r5.xyz, -r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  89: mad r4.xyz, r5.xyzx, r0.wwww, r4.xyzx
  90: mul r2.xyz, r2.xyzx, r4.xyzx
  91: mul r0.w, r1.w, r1.w
  92: mul r0.w, r0.w, r0.w
  93: mul r0.w, r1.w, r0.w
  94: mad r0.w, r1.y, r0.w, l(1.000000)
  95: add r1.z, -r1.x, l(1.000000)
  96: mul r1.w, r1.z, r1.z
  97: mul r1.w, r1.w, r1.w
  98: mul r1.z, r1.z, r1.w
  99: mad r1.y, r1.y, r1.z, l(1.000000)
 100: mul r0.w, r0.w, r1.y
 101: mul r0.w, r1.x, r0.w
 102: mul r0.xyz, r0.wwww, r0.xyzx
 103: mad r0.w, -cb0[12].z, cb0[2].w, cb0[2].w
 104: mul r1.xyz, r0.wwww, r3.xyzx
 105: mad o0.xyz, r1.xyzx, r0.xyzx, r2.xyzx
 106: mov o0.w, l(1.000000)
 107: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
Keywords { "POINT" "SHADOWS_CUBE" "SHADOWS_SOFT" }
"// shader disassembly not supported on opengl"
}
SubProgram "d3d9 " {
// Stats: 108 math, 6 textures
Keywords { "POINT" "SHADOWS_CUBE" "SHADOWS_SOFT" }
Vector 5 [_Color]
Float 7 [_Glossiness]
Vector 4 [_LightColor0]
Vector 0 [_LightPositionRange]
Vector 1 [_LightShadowData]
Float 6 [_Metallic]
Vector 2 [unity_ColorSpaceDielectricSpec]
Vector 3 [unity_ColorSpaceLuminance]
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_ShadowMapTexture] CUBE 1
SetTexture 2 [_LightTexture0] 2D 2
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   float4 _LightPositionRange;
//   float4 _LightShadowData;
//   sampler2D _LightTexture0;
//   sampler2D _MainTex;
//   float _Metallic;
//   samplerCUBE _ShadowMapTexture;
//   float4 unity_ColorSpaceDielectricSpec;
//   float4 unity_ColorSpaceLuminance;
//
//
// Registers:
//
//   Name                           Reg   Size
//   ------------------------------ ----- ----
//   _LightPositionRange            c0       1
//   _LightShadowData               c1       1
//   unity_ColorSpaceDielectricSpec c2       1
//   unity_ColorSpaceLuminance      c3       1
//   _LightColor0                   c4       1
//   _Color                         c5       1
//   _Metallic                      c6       1
//   _Glossiness                    c7       1
//   _MainTex                       s0       1
//   _ShadowMapTexture              s1       1
//   _LightTexture0                 s2       1
//

    ps_3_0
    def c8, 0.0078125, -0.0078125, 0.970000029, 1
    def c9, 0.25, 0.00100000005, 31.622776, 9.99999975e-06
    def c10, 0, 3.14159274, 1.00000001e-07, -0.5
    def c11, 0.785398185, 9.99999975e-05, 0.00999999978, 0
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2_pp v2.w
    dcl_texcoord3_pp v3.w
    dcl_texcoord4_pp v4
    dcl_texcoord5 v5.xyz
    dcl_texcoord6 v6.xyz
    dcl_2d s0
    dcl_cube s1
    dcl_2d s2
    dp3 r0.x, v6, v6
    rsq r0.x, r0.x
    rcp r0.x, r0.x
    mul r0.x, r0.x, c0.w
    add r0.yzw, c8.x, v6.xxyz
    texld r1, r0.yzww, s1
    add r0.yzw, c8.xyyx, v6.xxyz
    texld r2, r0.yzww, s1
    mov r1.y, r2.x
    add r0.yzw, c8.xyxy, v6.xxyz
    texld r2, r0.yzww, s1
    mov r1.z, r2.x
    add r0.yzw, c8.xxyy, v6.xxyz
    texld r2, r0.yzww, s1
    mov r1.w, r2.x
    mad r0, r0.x, -c8.z, r1
    mov r1.w, c8.w
    cmp_pp r0, r0, r1.w, c1.x
    dp4_pp r0.x, r0, c9.x
    dp3 r0.y, v5, v5
    texld r2, r0.y, s2
    mul_pp r0.x, r0.x, r2.x
    mul_pp r0.xyz, r0.x, c4
    mov_pp r1.x, v2.w
    mov_pp r1.y, v3.w
    mov_pp r1.z, v4.w
    dp3_pp r0.w, r1, r1
    rsq_pp r0.w, r0.w
    nrm_pp r2.xyz, v1
    mad_pp r3.xyz, r1, r0.w, -r2
    mul_pp r1.xyz, r0.w, r1
    dp3_pp r0.w, r3, r3
    add r2.w, -r0.w, c9.y
    rsq_pp r0.w, r0.w
    cmp_pp r0.w, r2.w, c9.z, r0.w
    mul_pp r3.xyz, r0.w, r3
    nrm_pp r4.xyz, v4
    dp3_pp r0.w, r4, -r2
    add r2.w, -r0.w, c9.w
    mad_pp r5.xyz, -r2, r2.w, r4
    cmp_pp r4.xyz, r0.w, r4, r5
    dp3_pp r0.w, r4, -r2
    max_pp r2.x, r0.w, c10.x
    dp3_pp r0.w, r4, r3
    dp3_pp r2.y, r1, r3
    dp3_pp r1.x, r4, r1
    max_pp r2.z, r1.x, c10.x
    max_pp r1.x, r2.y, c10.x
    max_pp r1.y, r0.w, c10.x
    mul r0.w, r1.y, r1.y
    add_pp r1.y, r1.w, -c7.x
    mul_pp r1.z, r1.y, r1.y
    mad r1.w, r1.z, r1.z, -c8.w
    mad_pp r0.w, r0.w, r1.w, c8.w
    mul r0.w, r0.w, r0.w
    mad r0.w, r0.w, c10.y, c10.z
    rcp r0.w, r0.w
    mul_pp r1.w, r1.z, r1.z
    mul_pp r0.w, r0.w, r1.w
    mad_pp r1.w, r1.y, -r1.y, c8.w
    mad_pp r2.y, r2.x, r1.w, r1.z
    mad_pp r1.z, r2.z, r1.w, r1.z
    mul_pp r1.z, r1.z, r2.x
    add_pp r1.w, -r2.x, c8.w
    mad r1.z, r2.z, r2.y, r1.z
    add r1.z, r1.z, c9.w
    rcp r1.z, r1.z
    add_pp r1.z, r1.z, r1.z
    mul r0.w, r0.w, r1.z
    mad r1.z, r0.w, -c11.x, c11.y
    mul_pp r0.w, r0.w, c11.x
    rsq r2.x, r0.w
    rcp_pp r2.x, r2.x
    cmp_pp r1.z, r1.z, c11.z, r2.x
    abs r2.x, c3.w
    cmp_pp r0.w, -r2.x, r1.z, r0.w
    mul_pp r0.w, r2.z, r0.w
    max_pp r1.z, r0.w, c10.x
    mul_pp r2.xyw, r0.xyzz, r1.z
    add_pp r0.w, -r1.x, c8.w
    dp2add_pp r1.x, r1.x, r1.x, c10.x
    mad_pp r1.x, r1.x, r1.y, c10.w
    mul_pp r1.y, r0.w, r0.w
    mul_pp r1.y, r1.y, r1.y
    mul_pp r0.w, r0.w, r1.y
    texld r3, v0, s0
    mov r4, c2
    mad_pp r5.xyz, c5, r3, -r4
    mul_pp r3.xyz, r3, c5
    mad_pp r4.xyz, c6.x, r5, r4
    lrp_pp r5.xyz, r0.w, c8.w, r4
    mul_pp r2.xyw, r2, r5.xyzz
    mul_pp r0.w, r1.w, r1.w
    mul_pp r0.w, r0.w, r0.w
    mul_pp r0.w, r1.w, r0.w
    mad_pp r0.w, r1.x, r0.w, c8.w
    add_pp r1.y, -r2.z, c8.w
    mul_pp r1.z, r1.y, r1.y
    mul_pp r1.z, r1.z, r1.z
    mul_pp r1.y, r1.y, r1.z
    mad_pp r1.x, r1.x, r1.y, c8.w
    mul_pp r0.w, r0.w, r1.x
    mul_pp r0.w, r2.z, r0.w
    mul_pp r0.xyz, r0.w, r0
    mad_pp r0.w, c6.x, -r4.w, r4.w
    mul_pp r1.xyz, r0.w, r3
    mad_pp oC0.xyz, r1, r0, r2.xyww
    mov_pp oC0.w, c8.w

// approximately 113 instruction slots used (6 texture, 107 arithmetic)
"
}
SubProgram "d3d11 " {
// Stats: 90 math, 6 textures
Keywords { "POINT" "SHADOWS_CUBE" "SHADOWS_SOFT" }
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_LightTexture0] 2D 2
SetTexture 2 [_ShadowMapTexture] CUBE 1
ConstBuffer "$Globals" 304
Vector 32 [unity_ColorSpaceDielectricSpec]
Vector 48 [unity_ColorSpaceLuminance]
Vector 96 [_LightColor0]
Vector 128 [_Color]
Float 200 [_Metallic]
Float 204 [_Glossiness]
ConstBuffer "UnityLighting" 720
Vector 16 [_LightPositionRange]
ConstBuffer "UnityShadows" 416
Vector 384 [_LightShadowData]
BindCB  "$Globals" 0
BindCB  "UnityLighting" 1
BindCB  "UnityShadows" 2
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer cb0[13], immediateIndexed
      dcl_constantbuffer cb1[2], immediateIndexed
      dcl_constantbuffer cb2[25], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texturecube (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: dp3 r0.x, v7.xyzx, v7.xyzx
   1: sqrt r0.x, r0.x
   2: mul r0.x, r0.x, cb1[1].w
   3: mul r0.x, r0.x, l(0.970000)
   4: add r0.yzw, v7.xxyz, l(0.000000, 0.007812, 0.007812, 0.007812)
   5: sample r1.xyzw, r0.yzwy, t2.xyzw, s1
   6: add r0.yzw, v7.xxyz, l(0.000000, -0.007812, -0.007812, 0.007812)
   7: sample r2.xyzw, r0.yzwy, t2.xyzw, s1
   8: mov r1.y, r2.x
   9: add r0.yzw, v7.xxyz, l(0.000000, -0.007812, 0.007812, -0.007812)
  10: sample r2.xyzw, r0.yzwy, t2.xyzw, s1
  11: mov r1.z, r2.x
  12: add r0.yzw, v7.xxyz, l(0.000000, 0.007812, -0.007812, -0.007812)
  13: sample r2.xyzw, r0.yzwy, t2.xyzw, s1
  14: mov r1.w, r2.x
  15: lt r0.xyzw, r1.xyzw, r0.xxxx
  16: movc r0.xyzw, r0.xyzw, cb2[24].xxxx, l(1.000000,1.000000,1.000000,1.000000)
  17: dp4 r0.x, r0.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
  18: dp3 r0.y, v6.xyzx, v6.xyzx
  19: sample r1.xyzw, r0.yyyy, t1.xyzw, s2
  20: mul r0.x, r0.x, r1.x
  21: mul r0.xyz, r0.xxxx, cb0[6].xyzx
  22: dp3 r0.w, v5.xyzx, v5.xyzx
  23: rsq r0.w, r0.w
  24: mul r1.xyz, r0.wwww, v5.xyzx
  25: dp3 r0.w, v2.xyzx, v2.xyzx
  26: rsq r0.w, r0.w
  27: mul r2.xyz, r0.wwww, v2.xyzx
  28: dp3 r0.w, r1.xyzx, -r2.xyzx
  29: add r1.w, -r0.w, l(0.000010)
  30: lt r0.w, r0.w, l(0.000000)
  31: mad r3.xyz, -r2.xyzx, r1.wwww, r1.xyzx
  32: movc r1.xyz, r0.wwww, r3.xyzx, r1.xyzx
  33: mov r3.x, v3.w
  34: mov r3.y, v4.w
  35: mov r3.z, v5.w
  36: dp3 r0.w, r3.xyzx, r3.xyzx
  37: rsq r0.w, r0.w
  38: mad r4.xyz, r3.xyzx, r0.wwww, -r2.xyzx
  39: dp3 r1.w, r1.xyzx, -r2.xyzx
  40: mul r2.xyz, r0.wwww, r3.xyzx
  41: dp3 r0.w, r4.xyzx, r4.xyzx
  42: max r0.w, r0.w, l(0.001000)
  43: rsq r0.w, r0.w
  44: mul r3.xyz, r0.wwww, r4.xyzx
  45: dp3 r0.w, r1.xyzx, r3.xyzx
  46: dp3 r1.x, r1.xyzx, r2.xyzx
  47: dp3 r1.y, r2.xyzx, r3.xyzx
  48: max r1.xyw, r1.xyxw, l(0.000000, 0.000000, 0.000000, 0.000000)
  49: max r0.w, r0.w, l(0.000000)
  50: mul r0.w, r0.w, r0.w
  51: add r1.z, -cb0[12].w, l(1.000000)
  52: mul r2.x, r1.z, r1.z
  53: mad r2.y, r2.x, r2.x, l(-1.000000)
  54: mad r0.w, r0.w, r2.y, l(1.000000)
  55: mul r0.w, r0.w, r0.w
  56: mad r0.w, r0.w, l(3.141593), l(0.000000)
  57: mul r2.y, r2.x, r2.x
  58: div r0.w, r2.y, r0.w
  59: mad r2.y, -r1.z, r1.z, l(1.000000)
  60: mad r2.z, r1.w, r2.y, r2.x
  61: mad r2.x, r1.x, r2.y, r2.x
  62: mul r2.x, r1.w, r2.x
  63: add r1.w, -r1.w, l(1.000000)
  64: mad r2.x, r1.x, r2.z, r2.x
  65: add r2.x, r2.x, l(0.000010)
  66: div r2.x, l(2.000000), r2.x
  67: mul r0.w, r0.w, r2.x
  68: mul r0.w, r0.w, l(0.785398)
  69: max r2.x, r0.w, l(0.000100)
  70: sqrt r2.x, r2.x
  71: eq r2.y, cb0[3].w, l(0.000000)
  72: movc r0.w, r2.y, r2.x, r0.w
  73: mul r0.w, r1.x, r0.w
  74: max r0.w, r0.w, l(0.000000)
  75: mul r2.xyz, r0.xyzx, r0.wwww
  76: add r0.w, -r1.y, l(1.000000)
  77: mul r1.y, r1.y, r1.y
  78: dp2 r1.y, r1.yyyy, r1.zzzz
  79: add r1.y, r1.y, l(-0.500000)
  80: mul r1.z, r0.w, r0.w
  81: mul r1.z, r1.z, r1.z
  82: mul r0.w, r0.w, r1.z
  83: sample r3.xyzw, v1.xyxx, t0.xyzw, s0
  84: mad r4.xyz, cb0[8].xyzx, r3.xyzx, -cb0[2].xyzx
  85: mul r3.xyz, r3.xyzx, cb0[8].xyzx
  86: mad r4.xyz, cb0[12].zzzz, r4.xyzx, cb0[2].xyzx
  87: add r5.xyz, -r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  88: mad r4.xyz, r5.xyzx, r0.wwww, r4.xyzx
  89: mul r2.xyz, r2.xyzx, r4.xyzx
  90: mul r0.w, r1.w, r1.w
  91: mul r0.w, r0.w, r0.w
  92: mul r0.w, r1.w, r0.w
  93: mad r0.w, r1.y, r0.w, l(1.000000)
  94: add r1.z, -r1.x, l(1.000000)
  95: mul r1.w, r1.z, r1.z
  96: mul r1.w, r1.w, r1.w
  97: mul r1.z, r1.z, r1.w
  98: mad r1.y, r1.y, r1.z, l(1.000000)
  99: mul r0.w, r0.w, r1.y
 100: mul r0.w, r1.x, r0.w
 101: mul r0.xyz, r0.wwww, r0.xyzx
 102: mad r0.w, -cb0[12].z, cb0[2].w, cb0[2].w
 103: mul r1.xyz, r0.wwww, r3.xyzx
 104: mad o0.xyz, r1.xyzx, r0.xyzx, r2.xyzx
 105: mov o0.w, l(1.000000)
 106: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "SHADOWS_SOFT" }
"// shader disassembly not supported on opengl"
}
SubProgram "d3d9 " {
// Stats: 109 math, 7 textures
Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "SHADOWS_SOFT" }
Vector 5 [_Color]
Float 7 [_Glossiness]
Vector 4 [_LightColor0]
Vector 0 [_LightPositionRange]
Vector 1 [_LightShadowData]
Float 6 [_Metallic]
Vector 2 [unity_ColorSpaceDielectricSpec]
Vector 3 [unity_ColorSpaceLuminance]
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_ShadowMapTexture] CUBE 1
SetTexture 2 [_LightTexture0] CUBE 2
SetTexture 3 [_LightTextureB0] 2D 3
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   float4 _LightPositionRange;
//   float4 _LightShadowData;
//   samplerCUBE _LightTexture0;
//   sampler2D _LightTextureB0;
//   sampler2D _MainTex;
//   float _Metallic;
//   samplerCUBE _ShadowMapTexture;
//   float4 unity_ColorSpaceDielectricSpec;
//   float4 unity_ColorSpaceLuminance;
//
//
// Registers:
//
//   Name                           Reg   Size
//   ------------------------------ ----- ----
//   _LightPositionRange            c0       1
//   _LightShadowData               c1       1
//   unity_ColorSpaceDielectricSpec c2       1
//   unity_ColorSpaceLuminance      c3       1
//   _LightColor0                   c4       1
//   _Color                         c5       1
//   _Metallic                      c6       1
//   _Glossiness                    c7       1
//   _MainTex                       s0       1
//   _ShadowMapTexture              s1       1
//   _LightTexture0                 s2       1
//   _LightTextureB0                s3       1
//

    ps_3_0
    def c8, 0.0078125, -0.0078125, 0.970000029, 1
    def c9, 0.25, 0.00100000005, 31.622776, 9.99999975e-06
    def c10, 0, 3.14159274, 1.00000001e-07, -0.5
    def c11, 0.785398185, 9.99999975e-05, 0.00999999978, 0
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2_pp v2.w
    dcl_texcoord3_pp v3.w
    dcl_texcoord4_pp v4
    dcl_texcoord5 v5.xyz
    dcl_texcoord6 v6.xyz
    dcl_2d s0
    dcl_cube s1
    dcl_cube s2
    dcl_2d s3
    dp3 r0.x, v6, v6
    rsq r0.x, r0.x
    rcp r0.x, r0.x
    mul r0.x, r0.x, c0.w
    add r0.yzw, c8.x, v6.xxyz
    texld r1, r0.yzww, s1
    add r0.yzw, c8.xyyx, v6.xxyz
    texld r2, r0.yzww, s1
    mov r1.y, r2.x
    add r0.yzw, c8.xyxy, v6.xxyz
    texld r2, r0.yzww, s1
    mov r1.z, r2.x
    add r0.yzw, c8.xxyy, v6.xxyz
    texld r2, r0.yzww, s1
    mov r1.w, r2.x
    mad r0, r0.x, -c8.z, r1
    mov r1.w, c8.w
    cmp_pp r0, r0, r1.w, c1.x
    dp4_pp r0.x, r0, c9.x
    dp3 r0.y, v5, v5
    texld r2, r0.y, s3
    texld r3, v5, s2
    mul r0.y, r2.x, r3.w
    mul_pp r0.x, r0.x, r0.y
    mul_pp r0.xyz, r0.x, c4
    mov_pp r1.x, v2.w
    mov_pp r1.y, v3.w
    mov_pp r1.z, v4.w
    dp3_pp r0.w, r1, r1
    rsq_pp r0.w, r0.w
    nrm_pp r2.xyz, v1
    mad_pp r3.xyz, r1, r0.w, -r2
    mul_pp r1.xyz, r0.w, r1
    dp3_pp r0.w, r3, r3
    add r2.w, -r0.w, c9.y
    rsq_pp r0.w, r0.w
    cmp_pp r0.w, r2.w, c9.z, r0.w
    mul_pp r3.xyz, r0.w, r3
    nrm_pp r4.xyz, v4
    dp3_pp r0.w, r4, -r2
    add r2.w, -r0.w, c9.w
    mad_pp r5.xyz, -r2, r2.w, r4
    cmp_pp r4.xyz, r0.w, r4, r5
    dp3_pp r0.w, r4, -r2
    max_pp r2.x, r0.w, c10.x
    dp3_pp r0.w, r4, r3
    dp3_pp r2.y, r1, r3
    dp3_pp r1.x, r4, r1
    max_pp r2.z, r1.x, c10.x
    max_pp r1.x, r2.y, c10.x
    max_pp r1.y, r0.w, c10.x
    mul r0.w, r1.y, r1.y
    add_pp r1.y, r1.w, -c7.x
    mul_pp r1.z, r1.y, r1.y
    mad r1.w, r1.z, r1.z, -c8.w
    mad_pp r0.w, r0.w, r1.w, c8.w
    mul r0.w, r0.w, r0.w
    mad r0.w, r0.w, c10.y, c10.z
    rcp r0.w, r0.w
    mul_pp r1.w, r1.z, r1.z
    mul_pp r0.w, r0.w, r1.w
    mad_pp r1.w, r1.y, -r1.y, c8.w
    mad_pp r2.y, r2.x, r1.w, r1.z
    mad_pp r1.z, r2.z, r1.w, r1.z
    mul_pp r1.z, r1.z, r2.x
    add_pp r1.w, -r2.x, c8.w
    mad r1.z, r2.z, r2.y, r1.z
    add r1.z, r1.z, c9.w
    rcp r1.z, r1.z
    add_pp r1.z, r1.z, r1.z
    mul r0.w, r0.w, r1.z
    mad r1.z, r0.w, -c11.x, c11.y
    mul_pp r0.w, r0.w, c11.x
    rsq r2.x, r0.w
    rcp_pp r2.x, r2.x
    cmp_pp r1.z, r1.z, c11.z, r2.x
    abs r2.x, c3.w
    cmp_pp r0.w, -r2.x, r1.z, r0.w
    mul_pp r0.w, r2.z, r0.w
    max_pp r1.z, r0.w, c10.x
    mul_pp r2.xyw, r0.xyzz, r1.z
    add_pp r0.w, -r1.x, c8.w
    dp2add_pp r1.x, r1.x, r1.x, c10.x
    mad_pp r1.x, r1.x, r1.y, c10.w
    mul_pp r1.y, r0.w, r0.w
    mul_pp r1.y, r1.y, r1.y
    mul_pp r0.w, r0.w, r1.y
    texld r3, v0, s0
    mov r4, c2
    mad_pp r5.xyz, c5, r3, -r4
    mul_pp r3.xyz, r3, c5
    mad_pp r4.xyz, c6.x, r5, r4
    lrp_pp r5.xyz, r0.w, c8.w, r4
    mul_pp r2.xyw, r2, r5.xyzz
    mul_pp r0.w, r1.w, r1.w
    mul_pp r0.w, r0.w, r0.w
    mul_pp r0.w, r1.w, r0.w
    mad_pp r0.w, r1.x, r0.w, c8.w
    add_pp r1.y, -r2.z, c8.w
    mul_pp r1.z, r1.y, r1.y
    mul_pp r1.z, r1.z, r1.z
    mul_pp r1.y, r1.y, r1.z
    mad_pp r1.x, r1.x, r1.y, c8.w
    mul_pp r0.w, r0.w, r1.x
    mul_pp r0.w, r2.z, r0.w
    mul_pp r0.xyz, r0.w, r0
    mad_pp r0.w, c6.x, -r4.w, r4.w
    mul_pp r1.xyz, r0.w, r3
    mad_pp oC0.xyz, r1, r0, r2.xyww
    mov_pp oC0.w, c8.w

// approximately 115 instruction slots used (7 texture, 108 arithmetic)
"
}
SubProgram "d3d11 " {
// Stats: 91 math, 7 textures
Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "SHADOWS_SOFT" }
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_LightTextureB0] 2D 3
SetTexture 2 [_LightTexture0] CUBE 2
SetTexture 3 [_ShadowMapTexture] CUBE 1
ConstBuffer "$Globals" 304
Vector 32 [unity_ColorSpaceDielectricSpec]
Vector 48 [unity_ColorSpaceLuminance]
Vector 96 [_LightColor0]
Vector 128 [_Color]
Float 200 [_Metallic]
Float 204 [_Glossiness]
ConstBuffer "UnityLighting" 720
Vector 16 [_LightPositionRange]
ConstBuffer "UnityShadows" 416
Vector 384 [_LightShadowData]
BindCB  "$Globals" 0
BindCB  "UnityLighting" 1
BindCB  "UnityShadows" 2
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer cb0[13], immediateIndexed
      dcl_constantbuffer cb1[2], immediateIndexed
      dcl_constantbuffer cb2[25], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texturecube (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: dp3 r0.x, v7.xyzx, v7.xyzx
   1: sqrt r0.x, r0.x
   2: mul r0.x, r0.x, cb1[1].w
   3: mul r0.x, r0.x, l(0.970000)
   4: add r0.yzw, v7.xxyz, l(0.000000, 0.007812, 0.007812, 0.007812)
   5: sample r1.xyzw, r0.yzwy, t3.xyzw, s1
   6: add r0.yzw, v7.xxyz, l(0.000000, -0.007812, -0.007812, 0.007812)
   7: sample r2.xyzw, r0.yzwy, t3.xyzw, s1
   8: mov r1.y, r2.x
   9: add r0.yzw, v7.xxyz, l(0.000000, -0.007812, 0.007812, -0.007812)
  10: sample r2.xyzw, r0.yzwy, t3.xyzw, s1
  11: mov r1.z, r2.x
  12: add r0.yzw, v7.xxyz, l(0.000000, 0.007812, -0.007812, -0.007812)
  13: sample r2.xyzw, r0.yzwy, t3.xyzw, s1
  14: mov r1.w, r2.x
  15: lt r0.xyzw, r1.xyzw, r0.xxxx
  16: movc r0.xyzw, r0.xyzw, cb2[24].xxxx, l(1.000000,1.000000,1.000000,1.000000)
  17: dp4 r0.x, r0.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
  18: dp3 r0.y, v6.xyzx, v6.xyzx
  19: sample r1.xyzw, r0.yyyy, t1.xyzw, s3
  20: sample r2.xyzw, v6.xyzx, t2.xyzw, s2
  21: mul r0.y, r1.x, r2.w
  22: mul r0.x, r0.x, r0.y
  23: mul r0.xyz, r0.xxxx, cb0[6].xyzx
  24: dp3 r0.w, v5.xyzx, v5.xyzx
  25: rsq r0.w, r0.w
  26: mul r1.xyz, r0.wwww, v5.xyzx
  27: dp3 r0.w, v2.xyzx, v2.xyzx
  28: rsq r0.w, r0.w
  29: mul r2.xyz, r0.wwww, v2.xyzx
  30: dp3 r0.w, r1.xyzx, -r2.xyzx
  31: add r1.w, -r0.w, l(0.000010)
  32: lt r0.w, r0.w, l(0.000000)
  33: mad r3.xyz, -r2.xyzx, r1.wwww, r1.xyzx
  34: movc r1.xyz, r0.wwww, r3.xyzx, r1.xyzx
  35: mov r3.x, v3.w
  36: mov r3.y, v4.w
  37: mov r3.z, v5.w
  38: dp3 r0.w, r3.xyzx, r3.xyzx
  39: rsq r0.w, r0.w
  40: mad r4.xyz, r3.xyzx, r0.wwww, -r2.xyzx
  41: dp3 r1.w, r1.xyzx, -r2.xyzx
  42: mul r2.xyz, r0.wwww, r3.xyzx
  43: dp3 r0.w, r4.xyzx, r4.xyzx
  44: max r0.w, r0.w, l(0.001000)
  45: rsq r0.w, r0.w
  46: mul r3.xyz, r0.wwww, r4.xyzx
  47: dp3 r0.w, r1.xyzx, r3.xyzx
  48: dp3 r1.x, r1.xyzx, r2.xyzx
  49: dp3 r1.y, r2.xyzx, r3.xyzx
  50: max r1.xyw, r1.xyxw, l(0.000000, 0.000000, 0.000000, 0.000000)
  51: max r0.w, r0.w, l(0.000000)
  52: mul r0.w, r0.w, r0.w
  53: add r1.z, -cb0[12].w, l(1.000000)
  54: mul r2.x, r1.z, r1.z
  55: mad r2.y, r2.x, r2.x, l(-1.000000)
  56: mad r0.w, r0.w, r2.y, l(1.000000)
  57: mul r0.w, r0.w, r0.w
  58: mad r0.w, r0.w, l(3.141593), l(0.000000)
  59: mul r2.y, r2.x, r2.x
  60: div r0.w, r2.y, r0.w
  61: mad r2.y, -r1.z, r1.z, l(1.000000)
  62: mad r2.z, r1.w, r2.y, r2.x
  63: mad r2.x, r1.x, r2.y, r2.x
  64: mul r2.x, r1.w, r2.x
  65: add r1.w, -r1.w, l(1.000000)
  66: mad r2.x, r1.x, r2.z, r2.x
  67: add r2.x, r2.x, l(0.000010)
  68: div r2.x, l(2.000000), r2.x
  69: mul r0.w, r0.w, r2.x
  70: mul r0.w, r0.w, l(0.785398)
  71: max r2.x, r0.w, l(0.000100)
  72: sqrt r2.x, r2.x
  73: eq r2.y, cb0[3].w, l(0.000000)
  74: movc r0.w, r2.y, r2.x, r0.w
  75: mul r0.w, r1.x, r0.w
  76: max r0.w, r0.w, l(0.000000)
  77: mul r2.xyz, r0.xyzx, r0.wwww
  78: add r0.w, -r1.y, l(1.000000)
  79: mul r1.y, r1.y, r1.y
  80: dp2 r1.y, r1.yyyy, r1.zzzz
  81: add r1.y, r1.y, l(-0.500000)
  82: mul r1.z, r0.w, r0.w
  83: mul r1.z, r1.z, r1.z
  84: mul r0.w, r0.w, r1.z
  85: sample r3.xyzw, v1.xyxx, t0.xyzw, s0
  86: mad r4.xyz, cb0[8].xyzx, r3.xyzx, -cb0[2].xyzx
  87: mul r3.xyz, r3.xyzx, cb0[8].xyzx
  88: mad r4.xyz, cb0[12].zzzz, r4.xyzx, cb0[2].xyzx
  89: add r5.xyz, -r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  90: mad r4.xyz, r5.xyzx, r0.wwww, r4.xyzx
  91: mul r2.xyz, r2.xyzx, r4.xyzx
  92: mul r0.w, r1.w, r1.w
  93: mul r0.w, r0.w, r0.w
  94: mul r0.w, r1.w, r0.w
  95: mad r0.w, r1.y, r0.w, l(1.000000)
  96: add r1.z, -r1.x, l(1.000000)
  97: mul r1.w, r1.z, r1.z
  98: mul r1.w, r1.w, r1.w
  99: mul r1.z, r1.z, r1.w
 100: mad r1.y, r1.y, r1.z, l(1.000000)
 101: mul r0.w, r0.w, r1.y
 102: mul r0.w, r1.x, r0.w
 103: mul r0.xyz, r0.wwww, r0.xyzx
 104: mad r0.w, -cb0[12].z, cb0[2].w, cb0[2].w
 105: mul r1.xyz, r0.wwww, r3.xyzx
 106: mad o0.xyz, r1.xyzx, r0.xyzx, r2.xyzx
 107: mov o0.w, l(1.000000)
 108: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
Keywords { "POINT" "SHADOWS_OFF" "_ALPHABLEND_ON" }
"// shader disassembly not supported on opengl"
}
SubProgram "d3d9 " {
// Stats: 93 math, 2 textures
Keywords { "POINT" "SHADOWS_OFF" "_ALPHABLEND_ON" }
Vector 3 [_Color]
Float 5 [_Glossiness]
Vector 2 [_LightColor0]
Float 4 [_Metallic]
Vector 0 [unity_ColorSpaceDielectricSpec]
Vector 1 [unity_ColorSpaceLuminance]
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_LightTexture0] 2D 1
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   sampler2D _LightTexture0;
//   sampler2D _MainTex;
//   float _Metallic;
//   float4 unity_ColorSpaceDielectricSpec;
//   float4 unity_ColorSpaceLuminance;
//
//
// Registers:
//
//   Name                           Reg   Size
//   ------------------------------ ----- ----
//   unity_ColorSpaceDielectricSpec c0       1
//   unity_ColorSpaceLuminance      c1       1
//   _LightColor0                   c2       1
//   _Color                         c3       1
//   _Metallic                      c4       1
//   _Glossiness                    c5       1
//   _MainTex                       s0       1
//   _LightTexture0                 s1       1
//

    ps_3_0
    def c6, 1, 0.00100000005, 31.622776, 9.99999975e-06
    def c7, 0, 3.14159274, 1.00000001e-07, -0.5
    def c8, 0.785398185, 9.99999975e-05, 0.00999999978, 0
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2_pp v2.w
    dcl_texcoord3_pp v3.w
    dcl_texcoord4_pp v4
    dcl_texcoord5 v5.xyz
    dcl_2d s0
    dcl_2d s1
    texld r0, v0, s0
    mul_pp oC0.w, r0.w, c3.w
    mov_pp r1.x, v2.w
    mov_pp r1.y, v3.w
    mov_pp r1.z, v4.w
    dp3_pp r0.w, r1, r1
    rsq_pp r0.w, r0.w
    nrm_pp r2.xyz, v1
    mad_pp r3.xyz, r1, r0.w, -r2
    mul_pp r1.xyz, r0.w, r1
    dp3_pp r0.w, r3, r3
    add r1.w, -r0.w, c6.y
    rsq_pp r0.w, r0.w
    cmp_pp r0.w, r1.w, c6.z, r0.w
    mul_pp r3.xyz, r0.w, r3
    nrm_pp r4.xyz, v4
    dp3_pp r0.w, r4, -r2
    add r1.w, -r0.w, c6.w
    mad_pp r5.xyz, -r2, r1.w, r4
    cmp_pp r4.xyz, r0.w, r4, r5
    dp3_pp r0.w, r4, -r2
    max_pp r1.w, r0.w, c7.x
    dp3_pp r0.w, r4, r3
    dp3_pp r2.x, r1, r3
    dp3_pp r1.x, r4, r1
    max_pp r2.y, r1.x, c7.x
    max_pp r1.x, r2.x, c7.x
    max_pp r1.y, r0.w, c7.x
    mul r0.w, r1.y, r1.y
    mov r2.x, c6.x
    add_pp r1.y, r2.x, -c5.x
    mul_pp r1.z, r1.y, r1.y
    mad r2.x, r1.z, r1.z, -c6.x
    mad_pp r0.w, r0.w, r2.x, c6.x
    mul r0.w, r0.w, r0.w
    mad r0.w, r0.w, c7.y, c7.z
    rcp r0.w, r0.w
    mul_pp r2.x, r1.z, r1.z
    mul_pp r0.w, r0.w, r2.x
    mad_pp r2.x, r1.y, -r1.y, c6.x
    mad_pp r2.z, r1.w, r2.x, r1.z
    mad_pp r1.z, r2.y, r2.x, r1.z
    mul_pp r1.z, r1.z, r1.w
    add_pp r1.w, -r1.w, c6.x
    mad r1.z, r2.y, r2.z, r1.z
    add r1.z, r1.z, c6.w
    rcp r1.z, r1.z
    add_pp r1.z, r1.z, r1.z
    mul r0.w, r0.w, r1.z
    mad r1.z, r0.w, -c8.x, c8.y
    mul_pp r0.w, r0.w, c8.x
    rsq r2.x, r0.w
    rcp_pp r2.x, r2.x
    cmp_pp r1.z, r1.z, c8.z, r2.x
    abs r2.x, c1.w
    cmp_pp r0.w, -r2.x, r1.z, r0.w
    mul_pp r0.w, r2.y, r0.w
    max_pp r1.z, r0.w, c7.x
    dp3 r0.w, v5, v5
    texld_pp r3, r0.w, s1
    mul_pp r2.xzw, r3.x, c2.xyyz
    mul_pp r3.xyz, r1.z, r2.xzww
    add_pp r0.w, -r1.x, c6.x
    mul_pp r1.x, r1.x, r1.x
    dp2add_pp r1.x, r1.x, r1.y, c7.w
    mul_pp r1.y, r0.w, r0.w
    mul_pp r1.y, r1.y, r1.y
    mul_pp r0.w, r0.w, r1.y
    mov r4, c0
    mad_pp r5.xyz, c3, r0, -r4
    mul_pp r0.xyz, r0, c3
    mad_pp r4.xyz, c4.x, r5, r4
    lrp_pp r5.xyz, r0.w, c6.x, r4
    mul_pp r3.xyz, r3, r5
    mad_pp r0.w, c4.x, -r4.w, r4.w
    mul_pp r0.xyz, r0.w, r0
    mul_pp r0.w, r1.w, r1.w
    mul_pp r0.w, r0.w, r0.w
    mul_pp r0.w, r1.w, r0.w
    mad_pp r0.w, r1.x, r0.w, c6.x
    add_pp r1.y, -r2.y, c6.x
    mul_pp r1.z, r1.y, r1.y
    mul_pp r1.z, r1.z, r1.z
    mul_pp r1.y, r1.y, r1.z
    mad_pp r1.x, r1.x, r1.y, c6.x
    mul_pp r0.w, r0.w, r1.x
    mul_pp r0.w, r2.y, r0.w
    mul_pp r1.xyz, r0.w, r2.xzww
    mad_pp oC0.xyz, r0, r1, r3

// approximately 94 instruction slots used (2 texture, 92 arithmetic)
"
}
SubProgram "d3d11 " {
// Stats: 79 math, 2 textures
Keywords { "POINT" "SHADOWS_OFF" "_ALPHABLEND_ON" }
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_LightTexture0] 2D 1
ConstBuffer "$Globals" 304
Vector 32 [unity_ColorSpaceDielectricSpec]
Vector 48 [unity_ColorSpaceLuminance]
Vector 96 [_LightColor0]
Vector 128 [_Color]
Float 200 [_Metallic]
Float 204 [_Glossiness]
BindCB  "$Globals" 0
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer cb0[13], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: dp3 r0.x, v5.xyzx, v5.xyzx
   1: rsq r0.x, r0.x
   2: mul r0.xyz, r0.xxxx, v5.xyzx
   3: dp3 r0.w, v2.xyzx, v2.xyzx
   4: rsq r0.w, r0.w
   5: mul r1.xyz, r0.wwww, v2.xyzx
   6: dp3 r0.w, r0.xyzx, -r1.xyzx
   7: add r1.w, -r0.w, l(0.000010)
   8: lt r0.w, r0.w, l(0.000000)
   9: mad r2.xyz, -r1.xyzx, r1.wwww, r0.xyzx
  10: movc r0.xyz, r0.wwww, r2.xyzx, r0.xyzx
  11: mov r2.x, v3.w
  12: mov r2.y, v4.w
  13: mov r2.z, v5.w
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: rsq r0.w, r0.w
  16: mad r3.xyz, r2.xyzx, r0.wwww, -r1.xyzx
  17: dp3 r1.x, r0.xyzx, -r1.xyzx
  18: max r1.x, r1.x, l(0.000000)
  19: mul r1.yzw, r0.wwww, r2.xxyz
  20: dp3 r0.w, r3.xyzx, r3.xyzx
  21: max r0.w, r0.w, l(0.001000)
  22: rsq r0.w, r0.w
  23: mul r2.xyz, r0.wwww, r3.xyzx
  24: dp3 r0.w, r0.xyzx, r2.xyzx
  25: dp3 r0.x, r0.xyzx, r1.yzwy
  26: dp3 r0.y, r1.yzwy, r2.xyzx
  27: max r0.xyz, r0.xywx, l(0.000000, 0.000000, 0.000000, 0.000000)
  28: mul r0.z, r0.z, r0.z
  29: add r0.w, -cb0[12].w, l(1.000000)
  30: mul r1.y, r0.w, r0.w
  31: mad r1.z, r1.y, r1.y, l(-1.000000)
  32: mad r0.z, r0.z, r1.z, l(1.000000)
  33: mul r0.z, r0.z, r0.z
  34: mad r0.z, r0.z, l(3.141593), l(0.000000)
  35: mul r1.z, r1.y, r1.y
  36: div r0.z, r1.z, r0.z
  37: mad r1.z, -r0.w, r0.w, l(1.000000)
  38: mad r1.w, r1.x, r1.z, r1.y
  39: mad r1.y, r0.x, r1.z, r1.y
  40: mul r1.y, r1.y, r1.x
  41: add r1.x, -r1.x, l(1.000000)
  42: mad r1.y, r0.x, r1.w, r1.y
  43: add r1.y, r1.y, l(0.000010)
  44: div r1.y, l(2.000000), r1.y
  45: mul r0.z, r0.z, r1.y
  46: mul r0.z, r0.z, l(0.785398)
  47: max r1.y, r0.z, l(0.000100)
  48: sqrt r1.y, r1.y
  49: eq r1.z, cb0[3].w, l(0.000000)
  50: movc r0.z, r1.z, r1.y, r0.z
  51: mul r0.z, r0.x, r0.z
  52: max r0.z, r0.z, l(0.000000)
  53: dp3 r1.y, v6.xyzx, v6.xyzx
  54: sample r2.xyzw, r1.yyyy, t1.xyzw, s1
  55: mul r1.yzw, r2.xxxx, cb0[6].xxyz
  56: mul r2.xyz, r0.zzzz, r1.yzwy
  57: add r0.z, -r0.y, l(1.000000)
  58: dp2 r0.y, r0.yyyy, r0.yyyy
  59: mad r0.y, r0.y, r0.w, l(-0.500000)
  60: mul r0.w, r0.z, r0.z
  61: mul r0.w, r0.w, r0.w
  62: mul r0.z, r0.z, r0.w
  63: sample r3.xyzw, v1.xyxx, t0.xyzw, s0
  64: mad r4.xyz, cb0[8].xyzx, r3.xyzx, -cb0[2].xyzx
  65: mad r4.xyz, cb0[12].zzzz, r4.xyzx, cb0[2].xyzx
  66: add r5.xyz, -r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  67: mad r4.xyz, r5.xyzx, r0.zzzz, r4.xyzx
  68: mul r2.xyz, r2.xyzx, r4.xyzx
  69: mul r0.z, r1.x, r1.x
  70: mul r0.z, r0.z, r0.z
  71: mul r0.z, r1.x, r0.z
  72: mad r0.z, r0.y, r0.z, l(1.000000)
  73: add r0.w, -r0.x, l(1.000000)
  74: mul r1.x, r0.w, r0.w
  75: mul r1.x, r1.x, r1.x
  76: mul r0.w, r0.w, r1.x
  77: mad r0.y, r0.y, r0.w, l(1.000000)
  78: mul r0.y, r0.z, r0.y
  79: mul r0.x, r0.x, r0.y
  80: mul r0.xyz, r0.xxxx, r1.yzwy
  81: mul r1.xyz, r3.xyzx, cb0[8].xyzx
  82: mul o0.w, r3.w, cb0[8].w
  83: mad r0.w, -cb0[12].z, cb0[2].w, cb0[2].w
  84: mul r1.xyz, r0.wwww, r1.xyzx
  85: mad o0.xyz, r1.xyzx, r0.xyzx, r2.xyzx
  86: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "_ALPHABLEND_ON" }
"// shader disassembly not supported on opengl"
}
SubProgram "d3d9 " {
// Stats: 88 math, 1 textures
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "_ALPHABLEND_ON" }
Vector 3 [_Color]
Float 5 [_Glossiness]
Vector 2 [_LightColor0]
Float 4 [_Metallic]
Vector 0 [unity_ColorSpaceDielectricSpec]
Vector 1 [unity_ColorSpaceLuminance]
SetTexture 0 [_MainTex] 2D 0
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   sampler2D _MainTex;
//   float _Metallic;
//   float4 unity_ColorSpaceDielectricSpec;
//   float4 unity_ColorSpaceLuminance;
//
//
// Registers:
//
//   Name                           Reg   Size
//   ------------------------------ ----- ----
//   unity_ColorSpaceDielectricSpec c0       1
//   unity_ColorSpaceLuminance      c1       1
//   _LightColor0                   c2       1
//   _Color                         c3       1
//   _Metallic                      c4       1
//   _Glossiness                    c5       1
//   _MainTex                       s0       1
//

    ps_3_0
    def c6, 1, 0.00100000005, 31.622776, 9.99999975e-06
    def c7, 0, 3.14159274, 1.00000001e-07, -0.5
    def c8, 0.785398185, 9.99999975e-05, 0.00999999978, 0
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2_pp v2.w
    dcl_texcoord3_pp v3.w
    dcl_texcoord4_pp v4
    dcl_2d s0
    texld r0, v0, s0
    mul_pp oC0.w, r0.w, c3.w
    dp3_pp r0.w, v1, v1
    rsq_pp r0.w, r0.w
    mul_pp r1.xyz, r0.w, v1
    nrm_pp r2.xyz, v4
    dp3_pp r1.w, r2, -r1
    add r2.w, -r1.w, c6.w
    mad_pp r3.xyz, -r1, r2.w, r2
    cmp_pp r2.xyz, r1.w, r2, r3
    mov_pp r3.x, v2.w
    mov_pp r3.y, v3.w
    mov_pp r3.z, v4.w
    mad_pp r4.xyz, v1, -r0.w, r3
    dp3_pp r0.w, r4, r4
    add r1.w, -r0.w, c6.y
    rsq_pp r0.w, r0.w
    cmp_pp r0.w, r1.w, c6.z, r0.w
    mul_pp r4.xyz, r0.w, r4
    dp3_pp r0.w, r2, r4
    dp3_pp r1.w, r3, r4
    dp3_pp r2.w, r2, r3
    dp3_pp r1.x, r2, -r1
    max_pp r2.x, r1.x, c7.x
    max_pp r1.x, r2.w, c7.x
    max_pp r2.y, r1.w, c7.x
    max_pp r1.y, r0.w, c7.x
    mul r0.w, r1.y, r1.y
    mov r3.x, c6.x
    add_pp r1.y, r3.x, -c5.x
    mul_pp r1.z, r1.y, r1.y
    mad r1.w, r1.z, r1.z, -c6.x
    mad_pp r0.w, r0.w, r1.w, c6.x
    mul r0.w, r0.w, r0.w
    mad r0.w, r0.w, c7.y, c7.z
    rcp r0.w, r0.w
    mul_pp r1.w, r1.z, r1.z
    mul_pp r0.w, r0.w, r1.w
    mad_pp r1.w, r1.y, -r1.y, c6.x
    mad_pp r2.z, r2.x, r1.w, r1.z
    mad_pp r1.z, r1.x, r1.w, r1.z
    mul_pp r1.z, r1.z, r2.x
    add_pp r1.w, -r2.x, c6.x
    mad r1.z, r1.x, r2.z, r1.z
    add r1.z, r1.z, c6.w
    rcp r1.z, r1.z
    add_pp r1.z, r1.z, r1.z
    mul r0.w, r0.w, r1.z
    mad r1.z, r0.w, -c8.x, c8.y
    mul_pp r0.w, r0.w, c8.x
    rsq r2.x, r0.w
    rcp_pp r2.x, r2.x
    cmp_pp r1.z, r1.z, c8.z, r2.x
    abs r2.x, c1.w
    cmp_pp r0.w, -r2.x, r1.z, r0.w
    mul_pp r0.w, r1.x, r0.w
    mul_pp r2.xzw, r0.w, c2.xyyz
    cmp_pp r2.xzw, r0.w, r2, c7.x
    add_pp r0.w, -r2.y, c6.x
    dp2add_pp r1.z, r2.y, r2.y, c7.x
    mad_pp r1.y, r1.z, r1.y, c7.w
    mul_pp r1.z, r0.w, r0.w
    mul_pp r1.z, r1.z, r1.z
    mul_pp r0.w, r0.w, r1.z
    mov r3, c0
    mad_pp r4.xyz, c3, r0, -r3
    mul_pp r0.xyz, r0, c3
    mad_pp r3.xyz, c4.x, r4, r3
    lrp_pp r4.xyz, r0.w, c6.x, r3
    mul_pp r2.xyz, r2.xzww, r4
    mad_pp r0.w, c4.x, -r3.w, r3.w
    mul_pp r0.xyz, r0.w, r0
    mul_pp r0.w, r1.w, r1.w
    mul_pp r0.w, r0.w, r0.w
    mul_pp r0.w, r1.w, r0.w
    mad_pp r0.w, r1.y, r0.w, c6.x
    add_pp r1.z, -r1.x, c6.x
    mul_pp r1.w, r1.z, r1.z
    mul_pp r1.w, r1.w, r1.w
    mul_pp r1.z, r1.z, r1.w
    mad_pp r1.y, r1.y, r1.z, c6.x
    mul_pp r0.w, r0.w, r1.y
    mul_pp r0.w, r1.x, r0.w
    mul_pp r1.xyz, r0.w, c2
    mad_pp oC0.xyz, r0, r1, r2

// approximately 88 instruction slots used (1 texture, 87 arithmetic)
"
}
SubProgram "d3d11 " {
// Stats: 75 math, 1 textures
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "_ALPHABLEND_ON" }
SetTexture 0 [_MainTex] 2D 0
ConstBuffer "$Globals" 240
Vector 32 [unity_ColorSpaceDielectricSpec]
Vector 48 [unity_ColorSpaceLuminance]
Vector 96 [_LightColor0]
Vector 128 [_Color]
Float 200 [_Metallic]
Float 204 [_Glossiness]
BindCB  "$Globals" 0
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer cb0[13], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_output o0.xyzw
      dcl_temps 5
   0: dp3 r0.x, v5.xyzx, v5.xyzx
   1: rsq r0.x, r0.x
   2: mul r0.xyz, r0.xxxx, v5.xyzx
   3: dp3 r0.w, v2.xyzx, v2.xyzx
   4: rsq r0.w, r0.w
   5: mul r1.xyz, r0.wwww, v2.xyzx
   6: dp3 r1.w, r0.xyzx, -r1.xyzx
   7: add r2.x, -r1.w, l(0.000010)
   8: lt r1.w, r1.w, l(0.000000)
   9: mad r2.xyz, -r1.xyzx, r2.xxxx, r0.xyzx
  10: movc r0.xyz, r1.wwww, r2.xyzx, r0.xyzx
  11: dp3 r1.x, r0.xyzx, -r1.xyzx
  12: max r1.x, r1.x, l(0.000000)
  13: mov r2.x, v3.w
  14: mov r2.y, v4.w
  15: mov r2.z, v5.w
  16: mad r1.yzw, -v2.xxyz, r0.wwww, r2.xxyz
  17: dp3 r0.w, r1.yzwy, r1.yzwy
  18: max r0.w, r0.w, l(0.001000)
  19: rsq r0.w, r0.w
  20: mul r1.yzw, r0.wwww, r1.yyzw
  21: dp3 r0.w, r0.xyzx, r1.yzwy
  22: dp3 r0.x, r0.xyzx, r2.xyzx
  23: dp3 r0.y, r2.xyzx, r1.yzwy
  24: max r0.xyz, r0.xywx, l(0.000000, 0.000000, 0.000000, 0.000000)
  25: mul r0.z, r0.z, r0.z
  26: add r0.w, -cb0[12].w, l(1.000000)
  27: mul r1.y, r0.w, r0.w
  28: mad r1.z, r1.y, r1.y, l(-1.000000)
  29: mad r0.z, r0.z, r1.z, l(1.000000)
  30: mul r1.z, r0.z, l(3.141593)
  31: mad r0.z, r1.z, r0.z, l(0.000000)
  32: mul r1.z, r1.y, r1.y
  33: div r0.z, r1.z, r0.z
  34: mad r1.z, -r0.w, r0.w, l(1.000000)
  35: mad r1.w, r1.x, r1.z, r1.y
  36: mad r1.y, r0.x, r1.z, r1.y
  37: mul r1.y, r1.y, r1.x
  38: add r1.x, -r1.x, l(1.000000)
  39: mad r1.y, r0.x, r1.w, r1.y
  40: add r1.y, r1.y, l(0.000010)
  41: div r1.y, l(2.000000), r1.y
  42: mul r0.z, r0.z, r1.y
  43: mul r0.z, r0.z, l(0.785398)
  44: max r1.y, r0.z, l(0.000100)
  45: sqrt r1.y, r1.y
  46: eq r1.z, cb0[3].w, l(0.000000)
  47: movc r0.z, r1.z, r1.y, r0.z
  48: mul r0.z, r0.x, r0.z
  49: max r0.z, r0.z, l(0.000000)
  50: mul r1.yzw, r0.zzzz, cb0[6].xxyz
  51: add r0.z, -r0.y, l(1.000000)
  52: mul r2.x, r0.z, r0.z
  53: mul r2.x, r2.x, r2.x
  54: mul r0.z, r0.z, r2.x
  55: sample r2.xyzw, v1.xyxx, t0.xyzw, s0
  56: mad r3.xyz, cb0[8].xyzx, r2.xyzx, -cb0[2].xyzx
  57: mad r3.xyz, cb0[12].zzzz, r3.xyzx, cb0[2].xyzx
  58: add r4.xyz, -r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  59: mad r3.xyz, r4.xyzx, r0.zzzz, r3.xyzx
  60: mul r1.yzw, r1.yyzw, r3.xxyz
  61: add r0.z, r0.y, r0.y
  62: mul r0.y, r0.y, r0.z
  63: mad r0.y, r0.y, r0.w, l(-0.500000)
  64: mul r0.z, r1.x, r1.x
  65: mul r0.z, r0.z, r0.z
  66: mul r0.z, r1.x, r0.z
  67: mad r0.z, r0.y, r0.z, l(1.000000)
  68: add r0.w, -r0.x, l(1.000000)
  69: mul r1.x, r0.w, r0.w
  70: mul r1.x, r1.x, r1.x
  71: mul r0.w, r0.w, r1.x
  72: mad r0.y, r0.y, r0.w, l(1.000000)
  73: mul r0.y, r0.z, r0.y
  74: mul r0.x, r0.x, r0.y
  75: mul r0.xyz, r0.xxxx, cb0[6].xyzx
  76: mul r2.xyz, r2.xyzx, cb0[8].xyzx
  77: mul o0.w, r2.w, cb0[8].w
  78: mad r0.w, -cb0[12].z, cb0[2].w, cb0[2].w
  79: mul r2.xyz, r0.wwww, r2.xyzx
  80: mad o0.xyz, r2.xyzx, r0.xyzx, r1.yzwy
  81: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
Keywords { "SPOT" "SHADOWS_OFF" "_ALPHABLEND_ON" }
"// shader disassembly not supported on opengl"
}
SubProgram "d3d9 " {
// Stats: 97 math, 3 textures
Keywords { "SPOT" "SHADOWS_OFF" "_ALPHABLEND_ON" }
Vector 3 [_Color]
Float 5 [_Glossiness]
Vector 2 [_LightColor0]
Float 4 [_Metallic]
Vector 0 [unity_ColorSpaceDielectricSpec]
Vector 1 [unity_ColorSpaceLuminance]
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_LightTexture0] 2D 1
SetTexture 2 [_LightTextureB0] 2D 2
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   sampler2D _LightTexture0;
//   sampler2D _LightTextureB0;
//   sampler2D _MainTex;
//   float _Metallic;
//   float4 unity_ColorSpaceDielectricSpec;
//   float4 unity_ColorSpaceLuminance;
//
//
// Registers:
//
//   Name                           Reg   Size
//   ------------------------------ ----- ----
//   unity_ColorSpaceDielectricSpec c0       1
//   unity_ColorSpaceLuminance      c1       1
//   _LightColor0                   c2       1
//   _Color                         c3       1
//   _Metallic                      c4       1
//   _Glossiness                    c5       1
//   _MainTex                       s0       1
//   _LightTexture0                 s1       1
//   _LightTextureB0                s2       1
//

    ps_3_0
    def c6, 0.5, 0, 1, 0.00100000005
    def c7, 31.622776, 9.99999975e-06, 3.14159274, 1.00000001e-07
    def c8, 0.785398185, 9.99999975e-05, 0.00999999978, 0
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2_pp v2.w
    dcl_texcoord3_pp v3.w
    dcl_texcoord4_pp v4
    dcl_texcoord5 v5
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    texld r0, v0, s0
    mul_pp oC0.w, r0.w, c3.w
    mov_pp r1.x, v2.w
    mov_pp r1.y, v3.w
    mov_pp r1.z, v4.w
    dp3_pp r0.w, r1, r1
    rsq_pp r0.w, r0.w
    nrm_pp r2.xyz, v1
    mad_pp r3.xyz, r1, r0.w, -r2
    mul_pp r1.xyz, r0.w, r1
    dp3_pp r0.w, r3, r3
    add r1.w, -r0.w, c6.w
    rsq_pp r0.w, r0.w
    cmp_pp r0.w, r1.w, c7.x, r0.w
    mul_pp r3.xyz, r0.w, r3
    nrm_pp r4.xyz, v4
    dp3_pp r0.w, r4, -r2
    add r1.w, -r0.w, c7.y
    mad_pp r5.xyz, -r2, r1.w, r4
    cmp_pp r4.xyz, r0.w, r4, r5
    dp3_pp r0.w, r4, -r2
    max_pp r1.w, r0.w, c6.y
    dp3_pp r0.w, r4, r3
    dp3_pp r2.x, r1, r3
    dp3_pp r1.x, r4, r1
    max_pp r2.y, r1.x, c6.y
    max_pp r1.x, r2.x, c6.y
    max_pp r1.y, r0.w, c6.y
    mul r0.w, r1.y, r1.y
    mov r1.z, c6.z
    add_pp r1.y, r1.z, -c5.x
    mul_pp r1.z, r1.y, r1.y
    mad r2.x, r1.z, r1.z, -c6.z
    mad_pp r0.w, r0.w, r2.x, c6.z
    mul r0.w, r0.w, r0.w
    mad r0.w, r0.w, c7.z, c7.w
    rcp r0.w, r0.w
    mul_pp r2.x, r1.z, r1.z
    mul_pp r0.w, r0.w, r2.x
    mad_pp r2.x, r1.y, -r1.y, c6.z
    mad_pp r2.z, r1.w, r2.x, r1.z
    mad_pp r1.z, r2.y, r2.x, r1.z
    mul_pp r1.z, r1.z, r1.w
    add_pp r1.w, -r1.w, c6.z
    mad r1.z, r2.y, r2.z, r1.z
    add r1.z, r1.z, c7.y
    rcp r1.z, r1.z
    add_pp r1.z, r1.z, r1.z
    mul r0.w, r0.w, r1.z
    mad r1.z, r0.w, -c8.x, c8.y
    mul_pp r0.w, r0.w, c8.x
    rsq r2.x, r0.w
    rcp_pp r2.x, r2.x
    cmp_pp r1.z, r1.z, c8.z, r2.x
    abs r2.x, c1.w
    cmp_pp r0.w, -r2.x, r1.z, r0.w
    mul_pp r0.w, r2.y, r0.w
    max_pp r1.z, r0.w, c6.y
    rcp r0.w, v5.w
    mad r2.xz, v5.xyyw, r0.w, c6.x
    texld_pp r3, r2.xzzw, s1
    dp3 r0.w, v5, v5
    texld_pp r4, r0.w, s2
    mul r0.w, r3.w, r4.x
    mul_pp r2.xzw, r0.w, c2.xyyz
    cmp_pp r2.xzw, -v5.z, c6.y, r2
    mul_pp r3.xyz, r1.z, r2.xzww
    add_pp r0.w, -r1.x, c6.z
    dp2add_pp r1.x, r1.x, r1.x, c6.y
    mad_pp r1.x, r1.x, r1.y, -c6.x
    mul_pp r1.y, r0.w, r0.w
    mul_pp r1.y, r1.y, r1.y
    mul_pp r0.w, r0.w, r1.y
    mov r4, c0
    mad_pp r5.xyz, c3, r0, -r4
    mul_pp r0.xyz, r0, c3
    mad_pp r4.xyz, c4.x, r5, r4
    lrp_pp r5.xyz, r0.w, c6.z, r4
    mul_pp r3.xyz, r3, r5
    mad_pp r0.w, c4.x, -r4.w, r4.w
    mul_pp r0.xyz, r0.w, r0
    mul_pp r0.w, r1.w, r1.w
    mul_pp r0.w, r0.w, r0.w
    mul_pp r0.w, r1.w, r0.w
    mad_pp r0.w, r1.x, r0.w, c6.z
    add_pp r1.y, -r2.y, c6.z
    mul_pp r1.z, r1.y, r1.y
    mul_pp r1.z, r1.z, r1.z
    mul_pp r1.y, r1.y, r1.z
    mad_pp r1.x, r1.x, r1.y, c6.z
    mul_pp r0.w, r0.w, r1.x
    mul_pp r0.w, r2.y, r0.w
    mul_pp r1.xyz, r0.w, r2.xzww
    mad_pp oC0.xyz, r0, r1, r3

// approximately 99 instruction slots used (3 texture, 96 arithmetic)
"
}
SubProgram "d3d11 " {
// Stats: 85 math, 3 textures
Keywords { "SPOT" "SHADOWS_OFF" "_ALPHABLEND_ON" }
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_LightTexture0] 2D 1
SetTexture 2 [_LightTextureB0] 2D 2
ConstBuffer "$Globals" 304
Vector 32 [unity_ColorSpaceDielectricSpec]
Vector 48 [unity_ColorSpaceLuminance]
Vector 96 [_LightColor0]
Vector 128 [_Color]
Float 200 [_Metallic]
Float 204 [_Glossiness]
BindCB  "$Globals" 0
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer cb0[13], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyzw
      dcl_output o0.xyzw
      dcl_temps 6
   0: dp3 r0.x, v5.xyzx, v5.xyzx
   1: rsq r0.x, r0.x
   2: mul r0.xyz, r0.xxxx, v5.xyzx
   3: dp3 r0.w, v2.xyzx, v2.xyzx
   4: rsq r0.w, r0.w
   5: mul r1.xyz, r0.wwww, v2.xyzx
   6: dp3 r0.w, r0.xyzx, -r1.xyzx
   7: add r1.w, -r0.w, l(0.000010)
   8: lt r0.w, r0.w, l(0.000000)
   9: mad r2.xyz, -r1.xyzx, r1.wwww, r0.xyzx
  10: movc r0.xyz, r0.wwww, r2.xyzx, r0.xyzx
  11: mov r2.x, v3.w
  12: mov r2.y, v4.w
  13: mov r2.z, v5.w
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: rsq r0.w, r0.w
  16: mad r3.xyz, r2.xyzx, r0.wwww, -r1.xyzx
  17: dp3 r1.x, r0.xyzx, -r1.xyzx
  18: max r1.x, r1.x, l(0.000000)
  19: mul r1.yzw, r0.wwww, r2.xxyz
  20: dp3 r0.w, r3.xyzx, r3.xyzx
  21: max r0.w, r0.w, l(0.001000)
  22: rsq r0.w, r0.w
  23: mul r2.xyz, r0.wwww, r3.xyzx
  24: dp3 r0.w, r0.xyzx, r2.xyzx
  25: dp3 r0.x, r0.xyzx, r1.yzwy
  26: dp3 r0.y, r1.yzwy, r2.xyzx
  27: max r0.xyz, r0.xywx, l(0.000000, 0.000000, 0.000000, 0.000000)
  28: mul r0.z, r0.z, r0.z
  29: add r0.w, -cb0[12].w, l(1.000000)
  30: mul r1.y, r0.w, r0.w
  31: mad r1.z, r1.y, r1.y, l(-1.000000)
  32: mad r0.z, r0.z, r1.z, l(1.000000)
  33: mul r0.z, r0.z, r0.z
  34: mad r0.z, r0.z, l(3.141593), l(0.000000)
  35: mul r1.z, r1.y, r1.y
  36: div r0.z, r1.z, r0.z
  37: mad r1.z, -r0.w, r0.w, l(1.000000)
  38: mad r1.w, r1.x, r1.z, r1.y
  39: mad r1.y, r0.x, r1.z, r1.y
  40: mul r1.y, r1.y, r1.x
  41: add r1.x, -r1.x, l(1.000000)
  42: mad r1.y, r0.x, r1.w, r1.y
  43: add r1.y, r1.y, l(0.000010)
  44: div r1.y, l(2.000000), r1.y
  45: mul r0.z, r0.z, r1.y
  46: mul r0.z, r0.z, l(0.785398)
  47: max r1.y, r0.z, l(0.000100)
  48: sqrt r1.y, r1.y
  49: eq r1.z, cb0[3].w, l(0.000000)
  50: movc r0.z, r1.z, r1.y, r0.z
  51: mul r0.z, r0.x, r0.z
  52: max r0.z, r0.z, l(0.000000)
  53: div r1.yz, v6.xxyx, v6.wwww
  54: add r1.yz, r1.yyzy, l(0.000000, 0.500000, 0.500000, 0.000000)
  55: sample r2.xyzw, r1.yzyy, t1.xyzw, s1
  56: lt r1.y, l(0.000000), v6.z
  57: and r1.y, r1.y, l(0x3f800000)
  58: mul r1.y, r2.w, r1.y
  59: dp3 r1.z, v6.xyzx, v6.xyzx
  60: sample r2.xyzw, r1.zzzz, t2.xyzw, s2
  61: mul r1.y, r1.y, r2.x
  62: mul r1.yzw, r1.yyyy, cb0[6].xxyz
  63: mul r2.xyz, r0.zzzz, r1.yzwy
  64: add r0.z, -r0.y, l(1.000000)
  65: dp2 r0.y, r0.yyyy, r0.yyyy
  66: mad r0.y, r0.y, r0.w, l(-0.500000)
  67: mul r0.w, r0.z, r0.z
  68: mul r0.w, r0.w, r0.w
  69: mul r0.z, r0.z, r0.w
  70: sample r3.xyzw, v1.xyxx, t0.xyzw, s0
  71: mad r4.xyz, cb0[8].xyzx, r3.xyzx, -cb0[2].xyzx
  72: mad r4.xyz, cb0[12].zzzz, r4.xyzx, cb0[2].xyzx
  73: add r5.xyz, -r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  74: mad r4.xyz, r5.xyzx, r0.zzzz, r4.xyzx
  75: mul r2.xyz, r2.xyzx, r4.xyzx
  76: mul r0.z, r1.x, r1.x
  77: mul r0.z, r0.z, r0.z
  78: mul r0.z, r1.x, r0.z
  79: mad r0.z, r0.y, r0.z, l(1.000000)
  80: add r0.w, -r0.x, l(1.000000)
  81: mul r1.x, r0.w, r0.w
  82: mul r1.x, r1.x, r1.x
  83: mul r0.w, r0.w, r1.x
  84: mad r0.y, r0.y, r0.w, l(1.000000)
  85: mul r0.y, r0.z, r0.y
  86: mul r0.x, r0.x, r0.y
  87: mul r0.xyz, r0.xxxx, r1.yzwy
  88: mul r1.xyz, r3.xyzx, cb0[8].xyzx
  89: mul o0.w, r3.w, cb0[8].w
  90: mad r0.w, -cb0[12].z, cb0[2].w, cb0[2].w
  91: mul r1.xyz, r0.wwww, r1.xyzx
  92: mad o0.xyz, r1.xyzx, r0.xyzx, r2.xyzx
  93: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
Keywords { "POINT_COOKIE" "SHADOWS_OFF" "_ALPHABLEND_ON" }
"// shader disassembly not supported on opengl"
}
SubProgram "d3d9 " {
// Stats: 94 math, 3 textures
Keywords { "POINT_COOKIE" "SHADOWS_OFF" "_ALPHABLEND_ON" }
Vector 3 [_Color]
Float 5 [_Glossiness]
Vector 2 [_LightColor0]
Float 4 [_Metallic]
Vector 0 [unity_ColorSpaceDielectricSpec]
Vector 1 [unity_ColorSpaceLuminance]
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_LightTexture0] CUBE 1
SetTexture 2 [_LightTextureB0] 2D 2
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   samplerCUBE _LightTexture0;
//   sampler2D _LightTextureB0;
//   sampler2D _MainTex;
//   float _Metallic;
//   float4 unity_ColorSpaceDielectricSpec;
//   float4 unity_ColorSpaceLuminance;
//
//
// Registers:
//
//   Name                           Reg   Size
//   ------------------------------ ----- ----
//   unity_ColorSpaceDielectricSpec c0       1
//   unity_ColorSpaceLuminance      c1       1
//   _LightColor0                   c2       1
//   _Color                         c3       1
//   _Metallic                      c4       1
//   _Glossiness                    c5       1
//   _MainTex                       s0       1
//   _LightTexture0                 s1       1
//   _LightTextureB0                s2       1
//

    ps_3_0
    def c6, 1, 0.00100000005, 31.622776, 9.99999975e-06
    def c7, 0, 3.14159274, 1.00000001e-07, -0.5
    def c8, 0.785398185, 9.99999975e-05, 0.00999999978, 0
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2_pp v2.w
    dcl_texcoord3_pp v3.w
    dcl_texcoord4_pp v4
    dcl_texcoord5 v5.xyz
    dcl_2d s0
    dcl_cube s1
    dcl_2d s2
    texld r0, v0, s0
    mul_pp oC0.w, r0.w, c3.w
    mov_pp r1.x, v2.w
    mov_pp r1.y, v3.w
    mov_pp r1.z, v4.w
    dp3_pp r0.w, r1, r1
    rsq_pp r0.w, r0.w
    nrm_pp r2.xyz, v1
    mad_pp r3.xyz, r1, r0.w, -r2
    mul_pp r1.xyz, r0.w, r1
    dp3_pp r0.w, r3, r3
    add r1.w, -r0.w, c6.y
    rsq_pp r0.w, r0.w
    cmp_pp r0.w, r1.w, c6.z, r0.w
    mul_pp r3.xyz, r0.w, r3
    nrm_pp r4.xyz, v4
    dp3_pp r0.w, r4, -r2
    add r1.w, -r0.w, c6.w
    mad_pp r5.xyz, -r2, r1.w, r4
    cmp_pp r4.xyz, r0.w, r4, r5
    dp3_pp r0.w, r4, -r2
    max_pp r1.w, r0.w, c7.x
    dp3_pp r0.w, r4, r3
    dp3_pp r2.x, r1, r3
    dp3_pp r1.x, r4, r1
    max_pp r2.y, r1.x, c7.x
    max_pp r1.x, r2.x, c7.x
    max_pp r1.y, r0.w, c7.x
    mul r0.w, r1.y, r1.y
    mov r2.x, c6.x
    add_pp r1.y, r2.x, -c5.x
    mul_pp r1.z, r1.y, r1.y
    mad r2.x, r1.z, r1.z, -c6.x
    mad_pp r0.w, r0.w, r2.x, c6.x
    mul r0.w, r0.w, r0.w
    mad r0.w, r0.w, c7.y, c7.z
    rcp r0.w, r0.w
    mul_pp r2.x, r1.z, r1.z
    mul_pp r0.w, r0.w, r2.x
    mad_pp r2.x, r1.y, -r1.y, c6.x
    mad_pp r2.z, r1.w, r2.x, r1.z
    mad_pp r1.z, r2.y, r2.x, r1.z
    mul_pp r1.z, r1.z, r1.w
    add_pp r1.w, -r1.w, c6.x
    mad r1.z, r2.y, r2.z, r1.z
    add r1.z, r1.z, c6.w
    rcp r1.z, r1.z
    add_pp r1.z, r1.z, r1.z
    mul r0.w, r0.w, r1.z
    mad r1.z, r0.w, -c8.x, c8.y
    mul_pp r0.w, r0.w, c8.x
    rsq r2.x, r0.w
    rcp_pp r2.x, r2.x
    cmp_pp r1.z, r1.z, c8.z, r2.x
    abs r2.x, c1.w
    cmp_pp r0.w, -r2.x, r1.z, r0.w
    mul_pp r0.w, r2.y, r0.w
    max_pp r1.z, r0.w, c7.x
    dp3 r0.w, v5, v5
    texld r3, r0.w, s2
    texld r4, v5, s1
    mul_pp r0.w, r3.x, r4.w
    mul_pp r2.xzw, r0.w, c2.xyyz
    mul_pp r3.xyz, r1.z, r2.xzww
    add_pp r0.w, -r1.x, c6.x
    mul_pp r1.x, r1.x, r1.x
    dp2add_pp r1.x, r1.x, r1.y, c7.w
    mul_pp r1.y, r0.w, r0.w
    mul_pp r1.y, r1.y, r1.y
    mul_pp r0.w, r0.w, r1.y
    mov r4, c0
    mad_pp r5.xyz, c3, r0, -r4
    mul_pp r0.xyz, r0, c3
    mad_pp r4.xyz, c4.x, r5, r4
    lrp_pp r5.xyz, r0.w, c6.x, r4
    mul_pp r3.xyz, r3, r5
    mad_pp r0.w, c4.x, -r4.w, r4.w
    mul_pp r0.xyz, r0.w, r0
    mul_pp r0.w, r1.w, r1.w
    mul_pp r0.w, r0.w, r0.w
    mul_pp r0.w, r1.w, r0.w
    mad_pp r0.w, r1.x, r0.w, c6.x
    add_pp r1.y, -r2.y, c6.x
    mul_pp r1.z, r1.y, r1.y
    mul_pp r1.z, r1.z, r1.z
    mul_pp r1.y, r1.y, r1.z
    mad_pp r1.x, r1.x, r1.y, c6.x
    mul_pp r0.w, r0.w, r1.x
    mul_pp r0.w, r2.y, r0.w
    mul_pp r1.xyz, r0.w, r2.xzww
    mad_pp oC0.xyz, r0, r1, r3

// approximately 96 instruction slots used (3 texture, 93 arithmetic)
"
}
SubProgram "d3d11 " {
// Stats: 80 math, 3 textures
Keywords { "POINT_COOKIE" "SHADOWS_OFF" "_ALPHABLEND_ON" }
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_LightTextureB0] 2D 2
SetTexture 2 [_LightTexture0] CUBE 1
ConstBuffer "$Globals" 304
Vector 32 [unity_ColorSpaceDielectricSpec]
Vector 48 [unity_ColorSpaceLuminance]
Vector 96 [_LightColor0]
Vector 128 [_Color]
Float 200 [_Metallic]
Float 204 [_Glossiness]
BindCB  "$Globals" 0
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer cb0[13], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texturecube (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: dp3 r0.x, v5.xyzx, v5.xyzx
   1: rsq r0.x, r0.x
   2: mul r0.xyz, r0.xxxx, v5.xyzx
   3: dp3 r0.w, v2.xyzx, v2.xyzx
   4: rsq r0.w, r0.w
   5: mul r1.xyz, r0.wwww, v2.xyzx
   6: dp3 r0.w, r0.xyzx, -r1.xyzx
   7: add r1.w, -r0.w, l(0.000010)
   8: lt r0.w, r0.w, l(0.000000)
   9: mad r2.xyz, -r1.xyzx, r1.wwww, r0.xyzx
  10: movc r0.xyz, r0.wwww, r2.xyzx, r0.xyzx
  11: mov r2.x, v3.w
  12: mov r2.y, v4.w
  13: mov r2.z, v5.w
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: rsq r0.w, r0.w
  16: mad r3.xyz, r2.xyzx, r0.wwww, -r1.xyzx
  17: dp3 r1.x, r0.xyzx, -r1.xyzx
  18: max r1.x, r1.x, l(0.000000)
  19: mul r1.yzw, r0.wwww, r2.xxyz
  20: dp3 r0.w, r3.xyzx, r3.xyzx
  21: max r0.w, r0.w, l(0.001000)
  22: rsq r0.w, r0.w
  23: mul r2.xyz, r0.wwww, r3.xyzx
  24: dp3 r0.w, r0.xyzx, r2.xyzx
  25: dp3 r0.x, r0.xyzx, r1.yzwy
  26: dp3 r0.y, r1.yzwy, r2.xyzx
  27: max r0.xyz, r0.xywx, l(0.000000, 0.000000, 0.000000, 0.000000)
  28: mul r0.z, r0.z, r0.z
  29: add r0.w, -cb0[12].w, l(1.000000)
  30: mul r1.y, r0.w, r0.w
  31: mad r1.z, r1.y, r1.y, l(-1.000000)
  32: mad r0.z, r0.z, r1.z, l(1.000000)
  33: mul r0.z, r0.z, r0.z
  34: mad r0.z, r0.z, l(3.141593), l(0.000000)
  35: mul r1.z, r1.y, r1.y
  36: div r0.z, r1.z, r0.z
  37: mad r1.z, -r0.w, r0.w, l(1.000000)
  38: mad r1.w, r1.x, r1.z, r1.y
  39: mad r1.y, r0.x, r1.z, r1.y
  40: mul r1.y, r1.y, r1.x
  41: add r1.x, -r1.x, l(1.000000)
  42: mad r1.y, r0.x, r1.w, r1.y
  43: add r1.y, r1.y, l(0.000010)
  44: div r1.y, l(2.000000), r1.y
  45: mul r0.z, r0.z, r1.y
  46: mul r0.z, r0.z, l(0.785398)
  47: max r1.y, r0.z, l(0.000100)
  48: sqrt r1.y, r1.y
  49: eq r1.z, cb0[3].w, l(0.000000)
  50: movc r0.z, r1.z, r1.y, r0.z
  51: mul r0.z, r0.x, r0.z
  52: max r0.z, r0.z, l(0.000000)
  53: dp3 r1.y, v6.xyzx, v6.xyzx
  54: sample r2.xyzw, r1.yyyy, t1.xyzw, s2
  55: sample r3.xyzw, v6.xyzx, t2.xyzw, s1
  56: mul r1.y, r2.x, r3.w
  57: mul r1.yzw, r1.yyyy, cb0[6].xxyz
  58: mul r2.xyz, r0.zzzz, r1.yzwy
  59: add r0.z, -r0.y, l(1.000000)
  60: dp2 r0.y, r0.yyyy, r0.yyyy
  61: mad r0.y, r0.y, r0.w, l(-0.500000)
  62: mul r0.w, r0.z, r0.z
  63: mul r0.w, r0.w, r0.w
  64: mul r0.z, r0.z, r0.w
  65: sample r3.xyzw, v1.xyxx, t0.xyzw, s0
  66: mad r4.xyz, cb0[8].xyzx, r3.xyzx, -cb0[2].xyzx
  67: mad r4.xyz, cb0[12].zzzz, r4.xyzx, cb0[2].xyzx
  68: add r5.xyz, -r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  69: mad r4.xyz, r5.xyzx, r0.zzzz, r4.xyzx
  70: mul r2.xyz, r2.xyzx, r4.xyzx
  71: mul r0.z, r1.x, r1.x
  72: mul r0.z, r0.z, r0.z
  73: mul r0.z, r1.x, r0.z
  74: mad r0.z, r0.y, r0.z, l(1.000000)
  75: add r0.w, -r0.x, l(1.000000)
  76: mul r1.x, r0.w, r0.w
  77: mul r1.x, r1.x, r1.x
  78: mul r0.w, r0.w, r1.x
  79: mad r0.y, r0.y, r0.w, l(1.000000)
  80: mul r0.y, r0.z, r0.y
  81: mul r0.x, r0.x, r0.y
  82: mul r0.xyz, r0.xxxx, r1.yzwy
  83: mul r1.xyz, r3.xyzx, cb0[8].xyzx
  84: mul o0.w, r3.w, cb0[8].w
  85: mad r0.w, -cb0[12].z, cb0[2].w, cb0[2].w
  86: mul r1.xyz, r0.wwww, r1.xyzx
  87: mad o0.xyz, r1.xyzx, r0.xyzx, r2.xyzx
  88: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_OFF" "_ALPHABLEND_ON" }
"// shader disassembly not supported on opengl"
}
SubProgram "d3d9 " {
// Stats: 89 math, 2 textures
Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_OFF" "_ALPHABLEND_ON" }
Vector 3 [_Color]
Float 5 [_Glossiness]
Vector 2 [_LightColor0]
Float 4 [_Metallic]
Vector 0 [unity_ColorSpaceDielectricSpec]
Vector 1 [unity_ColorSpaceLuminance]
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_LightTexture0] 2D 1
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   sampler2D _LightTexture0;
//   sampler2D _MainTex;
//   float _Metallic;
//   float4 unity_ColorSpaceDielectricSpec;
//   float4 unity_ColorSpaceLuminance;
//
//
// Registers:
//
//   Name                           Reg   Size
//   ------------------------------ ----- ----
//   unity_ColorSpaceDielectricSpec c0       1
//   unity_ColorSpaceLuminance      c1       1
//   _LightColor0                   c2       1
//   _Color                         c3       1
//   _Metallic                      c4       1
//   _Glossiness                    c5       1
//   _MainTex                       s0       1
//   _LightTexture0                 s1       1
//

    ps_3_0
    def c6, 1, 0.00100000005, 31.622776, 9.99999975e-06
    def c7, 0, 3.14159274, 1.00000001e-07, -0.5
    def c8, 0.785398185, 9.99999975e-05, 0.00999999978, 0
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2_pp v2.w
    dcl_texcoord3_pp v3.w
    dcl_texcoord4_pp v4
    dcl_texcoord5 v5.xy
    dcl_2d s0
    dcl_2d s1
    texld r0, v0, s0
    mul_pp oC0.w, r0.w, c3.w
    dp3_pp r0.w, v1, v1
    rsq_pp r0.w, r0.w
    mul_pp r1.xyz, r0.w, v1
    nrm_pp r2.xyz, v4
    dp3_pp r1.w, r2, -r1
    add r2.w, -r1.w, c6.w
    mad_pp r3.xyz, -r1, r2.w, r2
    cmp_pp r2.xyz, r1.w, r2, r3
    mov_pp r3.x, v2.w
    mov_pp r3.y, v3.w
    mov_pp r3.z, v4.w
    mad_pp r4.xyz, v1, -r0.w, r3
    dp3_pp r0.w, r4, r4
    add r1.w, -r0.w, c6.y
    rsq_pp r0.w, r0.w
    cmp_pp r0.w, r1.w, c6.z, r0.w
    mul_pp r4.xyz, r0.w, r4
    dp3_pp r0.w, r2, r4
    dp3_pp r1.w, r3, r4
    dp3_pp r2.w, r2, r3
    dp3_pp r1.x, r2, -r1
    max_pp r2.x, r1.x, c7.x
    max_pp r1.x, r2.w, c7.x
    max_pp r2.y, r1.w, c7.x
    max_pp r1.y, r0.w, c7.x
    mul r0.w, r1.y, r1.y
    mov r3.x, c6.x
    add_pp r1.y, r3.x, -c5.x
    mul_pp r1.z, r1.y, r1.y
    mad r1.w, r1.z, r1.z, -c6.x
    mad_pp r0.w, r0.w, r1.w, c6.x
    mul r0.w, r0.w, r0.w
    mad r0.w, r0.w, c7.y, c7.z
    rcp r0.w, r0.w
    mul_pp r1.w, r1.z, r1.z
    mul_pp r0.w, r0.w, r1.w
    mad_pp r1.w, r1.y, -r1.y, c6.x
    mad_pp r2.z, r2.x, r1.w, r1.z
    mad_pp r1.z, r1.x, r1.w, r1.z
    mul_pp r1.z, r1.z, r2.x
    add_pp r1.w, -r2.x, c6.x
    mad r1.z, r1.x, r2.z, r1.z
    add r1.z, r1.z, c6.w
    rcp r1.z, r1.z
    add_pp r1.z, r1.z, r1.z
    mul r0.w, r0.w, r1.z
    mad r1.z, r0.w, -c8.x, c8.y
    mul_pp r0.w, r0.w, c8.x
    rsq r2.x, r0.w
    rcp_pp r2.x, r2.x
    cmp_pp r1.z, r1.z, c8.z, r2.x
    abs r2.x, c1.w
    cmp_pp r0.w, -r2.x, r1.z, r0.w
    mul_pp r0.w, r1.x, r0.w
    max_pp r1.z, r0.w, c7.x
    texld_pp r3, v5, s1
    mul_pp r2.xzw, r3.w, c2.xyyz
    mul_pp r3.xyz, r1.z, r2.xzww
    add_pp r0.w, -r2.y, c6.x
    mul_pp r1.z, r2.y, r2.y
    dp2add_pp r1.y, r1.z, r1.y, c7.w
    mul_pp r1.z, r0.w, r0.w
    mul_pp r1.z, r1.z, r1.z
    mul_pp r0.w, r0.w, r1.z
    mov r4, c0
    mad_pp r5.xyz, c3, r0, -r4
    mul_pp r0.xyz, r0, c3
    mad_pp r4.xyz, c4.x, r5, r4
    lrp_pp r5.xyz, r0.w, c6.x, r4
    mul_pp r3.xyz, r3, r5
    mad_pp r0.w, c4.x, -r4.w, r4.w
    mul_pp r0.xyz, r0.w, r0
    mul_pp r0.w, r1.w, r1.w
    mul_pp r0.w, r0.w, r0.w
    mul_pp r0.w, r1.w, r0.w
    mad_pp r0.w, r1.y, r0.w, c6.x
    add_pp r1.z, -r1.x, c6.x
    mul_pp r1.w, r1.z, r1.z
    mul_pp r1.w, r1.w, r1.w
    mul_pp r1.z, r1.z, r1.w
    mad_pp r1.y, r1.y, r1.z, c6.x
    mul_pp r0.w, r0.w, r1.y
    mul_pp r0.w, r1.x, r0.w
    mul_pp r1.xyz, r0.w, r2.xzww
    mad_pp oC0.xyz, r0, r1, r3

// approximately 90 instruction slots used (2 texture, 88 arithmetic)
"
}
SubProgram "d3d11 " {
// Stats: 75 math, 2 textures
Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_OFF" "_ALPHABLEND_ON" }
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_LightTexture0] 2D 1
ConstBuffer "$Globals" 304
Vector 32 [unity_ColorSpaceDielectricSpec]
Vector 48 [unity_ColorSpaceLuminance]
Vector 96 [_LightColor0]
Vector 128 [_Color]
Float 200 [_Metallic]
Float 204 [_Glossiness]
BindCB  "$Globals" 0
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xy          6     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer cb0[13], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xy
      dcl_output o0.xyzw
      dcl_temps 6
   0: dp3 r0.x, v5.xyzx, v5.xyzx
   1: rsq r0.x, r0.x
   2: mul r0.xyz, r0.xxxx, v5.xyzx
   3: dp3 r0.w, v2.xyzx, v2.xyzx
   4: rsq r0.w, r0.w
   5: mul r1.xyz, r0.wwww, v2.xyzx
   6: dp3 r1.w, r0.xyzx, -r1.xyzx
   7: add r2.x, -r1.w, l(0.000010)
   8: lt r1.w, r1.w, l(0.000000)
   9: mad r2.xyz, -r1.xyzx, r2.xxxx, r0.xyzx
  10: movc r0.xyz, r1.wwww, r2.xyzx, r0.xyzx
  11: dp3 r1.x, r0.xyzx, -r1.xyzx
  12: max r1.x, r1.x, l(0.000000)
  13: mov r2.x, v3.w
  14: mov r2.y, v4.w
  15: mov r2.z, v5.w
  16: mad r1.yzw, -v2.xxyz, r0.wwww, r2.xxyz
  17: dp3 r0.w, r1.yzwy, r1.yzwy
  18: max r0.w, r0.w, l(0.001000)
  19: rsq r0.w, r0.w
  20: mul r1.yzw, r0.wwww, r1.yyzw
  21: dp3 r0.w, r0.xyzx, r1.yzwy
  22: dp3 r0.x, r0.xyzx, r2.xyzx
  23: dp3 r0.y, r2.xyzx, r1.yzwy
  24: max r0.xyz, r0.xywx, l(0.000000, 0.000000, 0.000000, 0.000000)
  25: mul r0.z, r0.z, r0.z
  26: add r0.w, -cb0[12].w, l(1.000000)
  27: mul r1.y, r0.w, r0.w
  28: mad r1.z, r1.y, r1.y, l(-1.000000)
  29: mad r0.z, r0.z, r1.z, l(1.000000)
  30: mul r0.z, r0.z, r0.z
  31: mad r0.z, r0.z, l(3.141593), l(0.000000)
  32: mul r1.z, r1.y, r1.y
  33: div r0.z, r1.z, r0.z
  34: mad r1.z, -r0.w, r0.w, l(1.000000)
  35: mad r1.w, r1.x, r1.z, r1.y
  36: mad r1.y, r0.x, r1.z, r1.y
  37: mul r1.y, r1.y, r1.x
  38: add r1.x, -r1.x, l(1.000000)
  39: mad r1.y, r0.x, r1.w, r1.y
  40: add r1.y, r1.y, l(0.000010)
  41: div r1.y, l(2.000000), r1.y
  42: mul r0.z, r0.z, r1.y
  43: mul r0.z, r0.z, l(0.785398)
  44: max r1.y, r0.z, l(0.000100)
  45: sqrt r1.y, r1.y
  46: eq r1.z, cb0[3].w, l(0.000000)
  47: movc r0.z, r1.z, r1.y, r0.z
  48: mul r0.z, r0.x, r0.z
  49: max r0.z, r0.z, l(0.000000)
  50: sample r2.xyzw, v6.xyxx, t1.xyzw, s1
  51: mul r1.yzw, r2.wwww, cb0[6].xxyz
  52: mul r2.xyz, r0.zzzz, r1.yzwy
  53: add r0.z, -r0.y, l(1.000000)
  54: dp2 r0.y, r0.yyyy, r0.yyyy
  55: mad r0.y, r0.y, r0.w, l(-0.500000)
  56: mul r0.w, r0.z, r0.z
  57: mul r0.w, r0.w, r0.w
  58: mul r0.z, r0.z, r0.w
  59: sample r3.xyzw, v1.xyxx, t0.xyzw, s0
  60: mad r4.xyz, cb0[8].xyzx, r3.xyzx, -cb0[2].xyzx
  61: mad r4.xyz, cb0[12].zzzz, r4.xyzx, cb0[2].xyzx
  62: add r5.xyz, -r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  63: mad r4.xyz, r5.xyzx, r0.zzzz, r4.xyzx
  64: mul r2.xyz, r2.xyzx, r4.xyzx
  65: mul r0.z, r1.x, r1.x
  66: mul r0.z, r0.z, r0.z
  67: mul r0.z, r1.x, r0.z
  68: mad r0.z, r0.y, r0.z, l(1.000000)
  69: add r0.w, -r0.x, l(1.000000)
  70: mul r1.x, r0.w, r0.w
  71: mul r1.x, r1.x, r1.x
  72: mul r0.w, r0.w, r1.x
  73: mad r0.y, r0.y, r0.w, l(1.000000)
  74: mul r0.y, r0.z, r0.y
  75: mul r0.x, r0.x, r0.y
  76: mul r0.xyz, r0.xxxx, r1.yzwy
  77: mul r1.xyz, r3.xyzx, cb0[8].xyzx
  78: mul o0.w, r3.w, cb0[8].w
  79: mad r0.w, -cb0[12].z, cb0[2].w, cb0[2].w
  80: mul r1.xyz, r0.wwww, r1.xyzx
  81: mad o0.xyz, r1.xyzx, r0.xyzx, r2.xyzx
  82: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_NATIVE" "_ALPHABLEND_ON" }
"// shader disassembly not supported on opengl"
}
SubProgram "d3d9 " {
// Stats: 100 math, 4 textures
Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_NATIVE" "_ALPHABLEND_ON" }
Vector 4 [_Color]
Float 6 [_Glossiness]
Vector 3 [_LightColor0]
Vector 0 [_LightShadowData]
Float 5 [_Metallic]
Vector 1 [unity_ColorSpaceDielectricSpec]
Vector 2 [unity_ColorSpaceLuminance]
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_ShadowMapTexture] 2D 1
SetTexture 2 [_LightTexture0] 2D 2
SetTexture 3 [_LightTextureB0] 2D 3
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   float4 _LightShadowData;
//   sampler2D _LightTexture0;
//   sampler2D _LightTextureB0;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D _ShadowMapTexture;
//   float4 unity_ColorSpaceDielectricSpec;
//   float4 unity_ColorSpaceLuminance;
//
//
// Registers:
//
//   Name                           Reg   Size
//   ------------------------------ ----- ----
//   _LightShadowData               c0       1
//   unity_ColorSpaceDielectricSpec c1       1
//   unity_ColorSpaceLuminance      c2       1
//   _LightColor0                   c3       1
//   _Color                         c4       1
//   _Metallic                      c5       1
//   _Glossiness                    c6       1
//   _MainTex                       s0       1
//   _ShadowMapTexture              s1       1
//   _LightTexture0                 s2       1
//   _LightTextureB0                s3       1
//

    ps_3_0
    def c7, 0.5, 0, 1, 0.00100000005
    def c8, 31.622776, 9.99999975e-06, 3.14159274, 1.00000001e-07
    def c9, 0.785398185, 9.99999975e-05, 0.00999999978, 0
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2_pp v2.w
    dcl_texcoord3_pp v3.w
    dcl_texcoord4_pp v4
    dcl_texcoord5 v5
    dcl_texcoord6 v6
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    texld r0, v0, s0
    mul_pp oC0.w, r0.w, c4.w
    mov_pp r1.x, v2.w
    mov_pp r1.y, v3.w
    mov_pp r1.z, v4.w
    dp3_pp r0.w, r1, r1
    rsq_pp r0.w, r0.w
    nrm_pp r2.xyz, v1
    mad_pp r3.xyz, r1, r0.w, -r2
    mul_pp r1.xyz, r0.w, r1
    dp3_pp r0.w, r3, r3
    add r1.w, -r0.w, c7.w
    rsq_pp r0.w, r0.w
    cmp_pp r0.w, r1.w, c8.x, r0.w
    mul_pp r3.xyz, r0.w, r3
    nrm_pp r4.xyz, v4
    dp3_pp r0.w, r4, -r2
    add r1.w, -r0.w, c8.y
    mad_pp r5.xyz, -r2, r1.w, r4
    cmp_pp r4.xyz, r0.w, r4, r5
    dp3_pp r0.w, r4, -r2
    max_pp r1.w, r0.w, c7.y
    dp3_pp r0.w, r4, r3
    dp3_pp r2.x, r1, r3
    dp3_pp r1.x, r4, r1
    max_pp r2.y, r1.x, c7.y
    max_pp r1.x, r2.x, c7.y
    max_pp r1.y, r0.w, c7.y
    mul r0.w, r1.y, r1.y
    mov r1.z, c7.z
    add_pp r1.y, r1.z, -c6.x
    mul_pp r2.x, r1.y, r1.y
    mad r2.z, r2.x, r2.x, -c7.z
    mad_pp r0.w, r0.w, r2.z, c7.z
    mul r0.w, r0.w, r0.w
    mad r0.w, r0.w, c8.z, c8.w
    rcp r0.w, r0.w
    mul_pp r2.z, r2.x, r2.x
    mul_pp r0.w, r0.w, r2.z
    mad_pp r2.z, r1.y, -r1.y, c7.z
    mad_pp r2.w, r1.w, r2.z, r2.x
    mad_pp r2.x, r2.y, r2.z, r2.x
    mul_pp r2.x, r1.w, r2.x
    add_pp r1.w, -r1.w, c7.z
    mad r2.x, r2.y, r2.w, r2.x
    add r2.x, r2.x, c8.y
    rcp r2.x, r2.x
    add_pp r2.x, r2.x, r2.x
    mul r0.w, r0.w, r2.x
    mad r2.x, r0.w, -c9.x, c9.y
    mul_pp r0.w, r0.w, c9.x
    rsq r2.z, r0.w
    rcp_pp r2.z, r2.z
    cmp_pp r2.x, r2.x, c9.z, r2.z
    abs r2.z, c2.w
    cmp_pp r0.w, -r2.z, r2.x, r0.w
    mul_pp r0.w, r2.y, r0.w
    max_pp r2.x, r0.w, c7.y
    rcp r0.w, v5.w
    mad r2.zw, v5.xyxy, r0.w, c7.x
    texld_pp r3, r2.zwzw, s2
    dp3 r0.w, v5, v5
    texld_pp r4, r0.w, s3
    mul r0.w, r3.w, r4.x
    cmp r0.w, -v5.z, c7.y, r0.w
    texldp_pp r3, v6, s1
    lrp_pp r2.z, r3.x, r1.z, c0.x
    mul_pp r0.w, r0.w, r2.z
    mul_pp r3.xyz, r0.w, c3
    mul_pp r2.xzw, r2.x, r3.xyyz
    add_pp r0.w, -r1.x, c7.z
    dp2add_pp r1.x, r1.x, r1.x, c7.y
    mad_pp r1.x, r1.x, r1.y, -c7.x
    mul_pp r1.y, r0.w, r0.w
    mul_pp r1.y, r1.y, r1.y
    mul_pp r0.w, r0.w, r1.y
    mov r4, c1
    mad_pp r5.xyz, c4, r0, -r4
    mul_pp r0.xyz, r0, c4
    mad_pp r4.xyz, c5.x, r5, r4
    lrp_pp r5.xyz, r0.w, c7.z, r4
    mul_pp r2.xzw, r2, r5.xyyz
    mad_pp r0.w, c5.x, -r4.w, r4.w
    mul_pp r0.xyz, r0.w, r0
    mul_pp r0.w, r1.w, r1.w
    mul_pp r0.w, r0.w, r0.w
    mul_pp r0.w, r1.w, r0.w
    mad_pp r0.w, r1.x, r0.w, c7.z
    add_pp r1.y, -r2.y, c7.z
    mul_pp r1.z, r1.y, r1.y
    mul_pp r1.z, r1.z, r1.z
    mul_pp r1.y, r1.y, r1.z
    mad_pp r1.x, r1.x, r1.y, c7.z
    mul_pp r0.w, r0.w, r1.x
    mul_pp r0.w, r2.y, r0.w
    mul_pp r1.xyz, r0.w, r3
    mad_pp oC0.xyz, r0, r1, r2.xzww

// approximately 102 instruction slots used (4 texture, 98 arithmetic)
"
}
SubProgram "d3d11 " {
// Stats: 89 math, 3 textures
Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_NATIVE" "_ALPHABLEND_ON" }
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_LightTexture0] 2D 2
SetTexture 2 [_LightTextureB0] 2D 3
SetTexture 3 [_ShadowMapTexture] 2D 1
ConstBuffer "$Globals" 304
Vector 32 [unity_ColorSpaceDielectricSpec]
Vector 48 [unity_ColorSpaceLuminance]
Vector 96 [_LightColor0]
Vector 128 [_Color]
Float 200 [_Metallic]
Float 204 [_Glossiness]
ConstBuffer "UnityShadows" 416
Vector 384 [_LightShadowData]
BindCB  "$Globals" 0
BindCB  "UnityShadows" 1
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer cb0[13], immediateIndexed
      dcl_constantbuffer cb1[25], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyzw
      dcl_input_ps linear v7.xyzw
      dcl_output o0.xyzw
      dcl_temps 6
   0: div r0.xy, v6.xyxx, v6.wwww
   1: add r0.xy, r0.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
   2: sample r0.xyzw, r0.xyxx, t1.xyzw, s2
   3: lt r0.x, l(0.000000), v6.z
   4: and r0.x, r0.x, l(0x3f800000)
   5: mul r0.x, r0.w, r0.x
   6: dp3 r0.y, v6.xyzx, v6.xyzx
   7: sample r1.xyzw, r0.yyyy, t2.xyzw, s3
   8: mul r0.x, r0.x, r1.x
   9: div r0.yzw, v7.xxyz, v7.wwww
  10: sample_c_lz r0.y, r0.yzyy, t3.xxxx, s1, r0.w
  11: add r0.z, -cb1[24].x, l(1.000000)
  12: mad r0.y, r0.y, r0.z, cb1[24].x
  13: mul r0.x, r0.y, r0.x
  14: mul r0.xyz, r0.xxxx, cb0[6].xyzx
  15: dp3 r0.w, v5.xyzx, v5.xyzx
  16: rsq r0.w, r0.w
  17: mul r1.xyz, r0.wwww, v5.xyzx
  18: dp3 r0.w, v2.xyzx, v2.xyzx
  19: rsq r0.w, r0.w
  20: mul r2.xyz, r0.wwww, v2.xyzx
  21: dp3 r0.w, r1.xyzx, -r2.xyzx
  22: add r1.w, -r0.w, l(0.000010)
  23: lt r0.w, r0.w, l(0.000000)
  24: mad r3.xyz, -r2.xyzx, r1.wwww, r1.xyzx
  25: movc r1.xyz, r0.wwww, r3.xyzx, r1.xyzx
  26: mov r3.x, v3.w
  27: mov r3.y, v4.w
  28: mov r3.z, v5.w
  29: dp3 r0.w, r3.xyzx, r3.xyzx
  30: rsq r0.w, r0.w
  31: mad r4.xyz, r3.xyzx, r0.wwww, -r2.xyzx
  32: dp3 r1.w, r1.xyzx, -r2.xyzx
  33: mul r2.xyz, r0.wwww, r3.xyzx
  34: dp3 r0.w, r4.xyzx, r4.xyzx
  35: max r0.w, r0.w, l(0.001000)
  36: rsq r0.w, r0.w
  37: mul r3.xyz, r0.wwww, r4.xyzx
  38: dp3 r0.w, r1.xyzx, r3.xyzx
  39: dp3 r1.x, r1.xyzx, r2.xyzx
  40: dp3 r1.y, r2.xyzx, r3.xyzx
  41: max r1.xyw, r1.xyxw, l(0.000000, 0.000000, 0.000000, 0.000000)
  42: max r0.w, r0.w, l(0.000000)
  43: mul r0.w, r0.w, r0.w
  44: add r1.z, -cb0[12].w, l(1.000000)
  45: mul r2.x, r1.z, r1.z
  46: mad r2.y, r2.x, r2.x, l(-1.000000)
  47: mad r0.w, r0.w, r2.y, l(1.000000)
  48: mul r0.w, r0.w, r0.w
  49: mad r0.w, r0.w, l(3.141593), l(0.000000)
  50: mul r2.y, r2.x, r2.x
  51: div r0.w, r2.y, r0.w
  52: mad r2.y, -r1.z, r1.z, l(1.000000)
  53: mad r2.z, r1.w, r2.y, r2.x
  54: mad r2.x, r1.x, r2.y, r2.x
  55: mul r2.x, r1.w, r2.x
  56: add r1.w, -r1.w, l(1.000000)
  57: mad r2.x, r1.x, r2.z, r2.x
  58: add r2.x, r2.x, l(0.000010)
  59: div r2.x, l(2.000000), r2.x
  60: mul r0.w, r0.w, r2.x
  61: mul r0.w, r0.w, l(0.785398)
  62: max r2.x, r0.w, l(0.000100)
  63: sqrt r2.x, r2.x
  64: eq r2.y, cb0[3].w, l(0.000000)
  65: movc r0.w, r2.y, r2.x, r0.w
  66: mul r0.w, r1.x, r0.w
  67: max r0.w, r0.w, l(0.000000)
  68: mul r2.xyz, r0.xyzx, r0.wwww
  69: add r0.w, -r1.y, l(1.000000)
  70: dp2 r1.y, r1.yyyy, r1.yyyy
  71: mad r1.y, r1.y, r1.z, l(-0.500000)
  72: mul r1.z, r0.w, r0.w
  73: mul r1.z, r1.z, r1.z
  74: mul r0.w, r0.w, r1.z
  75: sample r3.xyzw, v1.xyxx, t0.xyzw, s0
  76: mad r4.xyz, cb0[8].xyzx, r3.xyzx, -cb0[2].xyzx
  77: mad r4.xyz, cb0[12].zzzz, r4.xyzx, cb0[2].xyzx
  78: add r5.xyz, -r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  79: mad r4.xyz, r5.xyzx, r0.wwww, r4.xyzx
  80: mul r2.xyz, r2.xyzx, r4.xyzx
  81: mul r0.w, r1.w, r1.w
  82: mul r0.w, r0.w, r0.w
  83: mul r0.w, r1.w, r0.w
  84: mad r0.w, r1.y, r0.w, l(1.000000)
  85: add r1.z, -r1.x, l(1.000000)
  86: mul r1.w, r1.z, r1.z
  87: mul r1.w, r1.w, r1.w
  88: mul r1.z, r1.z, r1.w
  89: mad r1.y, r1.y, r1.z, l(1.000000)
  90: mul r0.w, r0.w, r1.y
  91: mul r0.w, r1.x, r0.w
  92: mul r0.xyz, r0.wwww, r0.xyzx
  93: mul r1.xyz, r3.xyzx, cb0[8].xyzx
  94: mul o0.w, r3.w, cb0[8].w
  95: mad r0.w, -cb0[12].z, cb0[2].w, cb0[2].w
  96: mul r1.xyz, r0.wwww, r1.xyzx
  97: mad o0.xyz, r1.xyzx, r0.xyzx, r2.xyzx
  98: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "_ALPHABLEND_ON" }
"// shader disassembly not supported on opengl"
}
SubProgram "d3d9 " {
// Stats: 89 math, 2 textures
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "_ALPHABLEND_ON" }
Vector 3 [_Color]
Float 5 [_Glossiness]
Vector 2 [_LightColor0]
Float 4 [_Metallic]
Vector 0 [unity_ColorSpaceDielectricSpec]
Vector 1 [unity_ColorSpaceLuminance]
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_ShadowMapTexture] 2D 1
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D _ShadowMapTexture;
//   float4 unity_ColorSpaceDielectricSpec;
//   float4 unity_ColorSpaceLuminance;
//
//
// Registers:
//
//   Name                           Reg   Size
//   ------------------------------ ----- ----
//   unity_ColorSpaceDielectricSpec c0       1
//   unity_ColorSpaceLuminance      c1       1
//   _LightColor0                   c2       1
//   _Color                         c3       1
//   _Metallic                      c4       1
//   _Glossiness                    c5       1
//   _MainTex                       s0       1
//   _ShadowMapTexture              s1       1
//

    ps_3_0
    def c6, 1, 0.00100000005, 31.622776, 9.99999975e-06
    def c7, 0, 3.14159274, 1.00000001e-07, -0.5
    def c8, 0.785398185, 9.99999975e-05, 0.00999999978, 0
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2_pp v2.w
    dcl_texcoord3_pp v3.w
    dcl_texcoord4_pp v4
    dcl_texcoord5 v5
    dcl_2d s0
    dcl_2d s1
    texld r0, v0, s0
    mul_pp oC0.w, r0.w, c3.w
    dp3_pp r0.w, v1, v1
    rsq_pp r0.w, r0.w
    mul_pp r1.xyz, r0.w, v1
    nrm_pp r2.xyz, v4
    dp3_pp r1.w, r2, -r1
    add r2.w, -r1.w, c6.w
    mad_pp r3.xyz, -r1, r2.w, r2
    cmp_pp r2.xyz, r1.w, r2, r3
    mov_pp r3.x, v2.w
    mov_pp r3.y, v3.w
    mov_pp r3.z, v4.w
    mad_pp r4.xyz, v1, -r0.w, r3
    dp3_pp r0.w, r4, r4
    add r1.w, -r0.w, c6.y
    rsq_pp r0.w, r0.w
    cmp_pp r0.w, r1.w, c6.z, r0.w
    mul_pp r4.xyz, r0.w, r4
    dp3_pp r0.w, r2, r4
    dp3_pp r1.w, r3, r4
    dp3_pp r2.w, r2, r3
    dp3_pp r1.x, r2, -r1
    max_pp r2.x, r1.x, c7.x
    max_pp r1.x, r2.w, c7.x
    max_pp r2.y, r1.w, c7.x
    max_pp r1.y, r0.w, c7.x
    mul r0.w, r1.y, r1.y
    mov r3.x, c6.x
    add_pp r1.y, r3.x, -c5.x
    mul_pp r1.z, r1.y, r1.y
    mad r1.w, r1.z, r1.z, -c6.x
    mad_pp r0.w, r0.w, r1.w, c6.x
    mul r0.w, r0.w, r0.w
    mad r0.w, r0.w, c7.y, c7.z
    rcp r0.w, r0.w
    mul_pp r1.w, r1.z, r1.z
    mul_pp r0.w, r0.w, r1.w
    mad_pp r1.w, r1.y, -r1.y, c6.x
    mad_pp r2.z, r2.x, r1.w, r1.z
    mad_pp r1.z, r1.x, r1.w, r1.z
    mul_pp r1.z, r1.z, r2.x
    add_pp r1.w, -r2.x, c6.x
    mad r1.z, r1.x, r2.z, r1.z
    add r1.z, r1.z, c6.w
    rcp r1.z, r1.z
    add_pp r1.z, r1.z, r1.z
    mul r0.w, r0.w, r1.z
    mad r1.z, r0.w, -c8.x, c8.y
    mul_pp r0.w, r0.w, c8.x
    rsq r2.x, r0.w
    rcp_pp r2.x, r2.x
    cmp_pp r1.z, r1.z, c8.z, r2.x
    abs r2.x, c1.w
    cmp_pp r0.w, -r2.x, r1.z, r0.w
    mul_pp r0.w, r1.x, r0.w
    max_pp r1.z, r0.w, c7.x
    texldp_pp r3, v5, s1
    mul_pp r2.xzw, r3.x, c2.xyyz
    mul_pp r3.xyz, r1.z, r2.xzww
    add_pp r0.w, -r2.y, c6.x
    mul_pp r1.z, r2.y, r2.y
    dp2add_pp r1.y, r1.z, r1.y, c7.w
    mul_pp r1.z, r0.w, r0.w
    mul_pp r1.z, r1.z, r1.z
    mul_pp r0.w, r0.w, r1.z
    mov r4, c0
    mad_pp r5.xyz, c3, r0, -r4
    mul_pp r0.xyz, r0, c3
    mad_pp r4.xyz, c4.x, r5, r4
    lrp_pp r5.xyz, r0.w, c6.x, r4
    mul_pp r3.xyz, r3, r5
    mad_pp r0.w, c4.x, -r4.w, r4.w
    mul_pp r0.xyz, r0.w, r0
    mul_pp r0.w, r1.w, r1.w
    mul_pp r0.w, r0.w, r0.w
    mul_pp r0.w, r1.w, r0.w
    mad_pp r0.w, r1.y, r0.w, c6.x
    add_pp r1.z, -r1.x, c6.x
    mul_pp r1.w, r1.z, r1.z
    mul_pp r1.w, r1.w, r1.w
    mul_pp r1.z, r1.z, r1.w
    mad_pp r1.y, r1.y, r1.z, c6.x
    mul_pp r0.w, r0.w, r1.y
    mul_pp r0.w, r1.x, r0.w
    mul_pp r1.xyz, r0.w, r2.xzww
    mad_pp oC0.xyz, r0, r1, r3

// approximately 90 instruction slots used (2 texture, 88 arithmetic)
"
}
SubProgram "d3d11 " {
// Stats: 76 math, 2 textures
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "_ALPHABLEND_ON" }
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_ShadowMapTexture] 2D 1
ConstBuffer "$Globals" 240
Vector 32 [unity_ColorSpaceDielectricSpec]
Vector 48 [unity_ColorSpaceLuminance]
Vector 96 [_LightColor0]
Vector 128 [_Color]
Float 200 [_Metallic]
Float 204 [_Glossiness]
BindCB  "$Globals" 0
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer cb0[13], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyw
      dcl_output o0.xyzw
      dcl_temps 6
   0: dp3 r0.x, v5.xyzx, v5.xyzx
   1: rsq r0.x, r0.x
   2: mul r0.xyz, r0.xxxx, v5.xyzx
   3: dp3 r0.w, v2.xyzx, v2.xyzx
   4: rsq r0.w, r0.w
   5: mul r1.xyz, r0.wwww, v2.xyzx
   6: dp3 r1.w, r0.xyzx, -r1.xyzx
   7: add r2.x, -r1.w, l(0.000010)
   8: lt r1.w, r1.w, l(0.000000)
   9: mad r2.xyz, -r1.xyzx, r2.xxxx, r0.xyzx
  10: movc r0.xyz, r1.wwww, r2.xyzx, r0.xyzx
  11: dp3 r1.x, r0.xyzx, -r1.xyzx
  12: max r1.x, r1.x, l(0.000000)
  13: mov r2.x, v3.w
  14: mov r2.y, v4.w
  15: mov r2.z, v5.w
  16: mad r1.yzw, -v2.xxyz, r0.wwww, r2.xxyz
  17: dp3 r0.w, r1.yzwy, r1.yzwy
  18: max r0.w, r0.w, l(0.001000)
  19: rsq r0.w, r0.w
  20: mul r1.yzw, r0.wwww, r1.yyzw
  21: dp3 r0.w, r0.xyzx, r1.yzwy
  22: dp3 r0.x, r0.xyzx, r2.xyzx
  23: dp3 r0.y, r2.xyzx, r1.yzwy
  24: max r0.xyz, r0.xywx, l(0.000000, 0.000000, 0.000000, 0.000000)
  25: mul r0.z, r0.z, r0.z
  26: add r0.w, -cb0[12].w, l(1.000000)
  27: mul r1.y, r0.w, r0.w
  28: mad r1.z, r1.y, r1.y, l(-1.000000)
  29: mad r0.z, r0.z, r1.z, l(1.000000)
  30: mul r0.z, r0.z, r0.z
  31: mad r0.z, r0.z, l(3.141593), l(0.000000)
  32: mul r1.z, r1.y, r1.y
  33: div r0.z, r1.z, r0.z
  34: mad r1.z, -r0.w, r0.w, l(1.000000)
  35: mad r1.w, r1.x, r1.z, r1.y
  36: mad r1.y, r0.x, r1.z, r1.y
  37: mul r1.y, r1.y, r1.x
  38: add r1.x, -r1.x, l(1.000000)
  39: mad r1.y, r0.x, r1.w, r1.y
  40: add r1.y, r1.y, l(0.000010)
  41: div r1.y, l(2.000000), r1.y
  42: mul r0.z, r0.z, r1.y
  43: mul r0.z, r0.z, l(0.785398)
  44: max r1.y, r0.z, l(0.000100)
  45: sqrt r1.y, r1.y
  46: eq r1.z, cb0[3].w, l(0.000000)
  47: movc r0.z, r1.z, r1.y, r0.z
  48: mul r0.z, r0.x, r0.z
  49: max r0.z, r0.z, l(0.000000)
  50: div r1.yz, v6.xxyx, v6.wwww
  51: sample r2.xyzw, r1.yzyy, t1.xyzw, s1
  52: mul r1.yzw, r2.xxxx, cb0[6].xxyz
  53: mul r2.xyz, r0.zzzz, r1.yzwy
  54: add r0.z, -r0.y, l(1.000000)
  55: dp2 r0.y, r0.yyyy, r0.yyyy
  56: mad r0.y, r0.y, r0.w, l(-0.500000)
  57: mul r0.w, r0.z, r0.z
  58: mul r0.w, r0.w, r0.w
  59: mul r0.z, r0.z, r0.w
  60: sample r3.xyzw, v1.xyxx, t0.xyzw, s0
  61: mad r4.xyz, cb0[8].xyzx, r3.xyzx, -cb0[2].xyzx
  62: mad r4.xyz, cb0[12].zzzz, r4.xyzx, cb0[2].xyzx
  63: add r5.xyz, -r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  64: mad r4.xyz, r5.xyzx, r0.zzzz, r4.xyzx
  65: mul r2.xyz, r2.xyzx, r4.xyzx
  66: mul r0.z, r1.x, r1.x
  67: mul r0.z, r0.z, r0.z
  68: mul r0.z, r1.x, r0.z
  69: mad r0.z, r0.y, r0.z, l(1.000000)
  70: add r0.w, -r0.x, l(1.000000)
  71: mul r1.x, r0.w, r0.w
  72: mul r1.x, r1.x, r1.x
  73: mul r0.w, r0.w, r1.x
  74: mad r0.y, r0.y, r0.w, l(1.000000)
  75: mul r0.y, r0.z, r0.y
  76: mul r0.x, r0.x, r0.y
  77: mul r0.xyz, r0.xxxx, r1.yzwy
  78: mul r1.xyz, r3.xyzx, cb0[8].xyzx
  79: mul o0.w, r3.w, cb0[8].w
  80: mad r0.w, -cb0[12].z, cb0[2].w, cb0[2].w
  81: mul r1.xyz, r0.wwww, r1.xyzx
  82: mad o0.xyz, r1.xyzx, r0.xyzx, r2.xyzx
  83: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" "_ALPHABLEND_ON" }
"// shader disassembly not supported on opengl"
}
SubProgram "d3d9 " {
// Stats: 90 math, 3 textures
Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" "_ALPHABLEND_ON" }
Vector 3 [_Color]
Float 5 [_Glossiness]
Vector 2 [_LightColor0]
Float 4 [_Metallic]
Vector 0 [unity_ColorSpaceDielectricSpec]
Vector 1 [unity_ColorSpaceLuminance]
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_ShadowMapTexture] 2D 1
SetTexture 2 [_LightTexture0] 2D 2
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   sampler2D _LightTexture0;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D _ShadowMapTexture;
//   float4 unity_ColorSpaceDielectricSpec;
//   float4 unity_ColorSpaceLuminance;
//
//
// Registers:
//
//   Name                           Reg   Size
//   ------------------------------ ----- ----
//   unity_ColorSpaceDielectricSpec c0       1
//   unity_ColorSpaceLuminance      c1       1
//   _LightColor0                   c2       1
//   _Color                         c3       1
//   _Metallic                      c4       1
//   _Glossiness                    c5       1
//   _MainTex                       s0       1
//   _ShadowMapTexture              s1       1
//   _LightTexture0                 s2       1
//

    ps_3_0
    def c6, 1, 0.00100000005, 31.622776, 9.99999975e-06
    def c7, 0, 3.14159274, 1.00000001e-07, -0.5
    def c8, 0.785398185, 9.99999975e-05, 0.00999999978, 0
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2_pp v2.w
    dcl_texcoord3_pp v3.w
    dcl_texcoord4_pp v4
    dcl_texcoord5 v5.xy
    dcl_texcoord6 v6
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    texld r0, v0, s0
    mul_pp oC0.w, r0.w, c3.w
    dp3_pp r0.w, v1, v1
    rsq_pp r0.w, r0.w
    mul_pp r1.xyz, r0.w, v1
    nrm_pp r2.xyz, v4
    dp3_pp r1.w, r2, -r1
    add r2.w, -r1.w, c6.w
    mad_pp r3.xyz, -r1, r2.w, r2
    cmp_pp r2.xyz, r1.w, r2, r3
    mov_pp r3.x, v2.w
    mov_pp r3.y, v3.w
    mov_pp r3.z, v4.w
    mad_pp r4.xyz, v1, -r0.w, r3
    dp3_pp r0.w, r4, r4
    add r1.w, -r0.w, c6.y
    rsq_pp r0.w, r0.w
    cmp_pp r0.w, r1.w, c6.z, r0.w
    mul_pp r4.xyz, r0.w, r4
    dp3_pp r0.w, r2, r4
    dp3_pp r1.w, r3, r4
    dp3_pp r2.w, r2, r3
    dp3_pp r1.x, r2, -r1
    max_pp r2.x, r1.x, c7.x
    max_pp r1.x, r2.w, c7.x
    max_pp r2.y, r1.w, c7.x
    max_pp r1.y, r0.w, c7.x
    mul r0.w, r1.y, r1.y
    mov r3.x, c6.x
    add_pp r1.y, r3.x, -c5.x
    mul_pp r1.z, r1.y, r1.y
    mad r1.w, r1.z, r1.z, -c6.x
    mad_pp r0.w, r0.w, r1.w, c6.x
    mul r0.w, r0.w, r0.w
    mad r0.w, r0.w, c7.y, c7.z
    rcp r0.w, r0.w
    mul_pp r1.w, r1.z, r1.z
    mul_pp r0.w, r0.w, r1.w
    mad_pp r1.w, r1.y, -r1.y, c6.x
    mad_pp r2.z, r2.x, r1.w, r1.z
    mad_pp r1.z, r1.x, r1.w, r1.z
    mul_pp r1.z, r1.z, r2.x
    add_pp r1.w, -r2.x, c6.x
    mad r1.z, r1.x, r2.z, r1.z
    add r1.z, r1.z, c6.w
    rcp r1.z, r1.z
    add_pp r1.z, r1.z, r1.z
    mul r0.w, r0.w, r1.z
    mad r1.z, r0.w, -c8.x, c8.y
    mul_pp r0.w, r0.w, c8.x
    rsq r2.x, r0.w
    rcp_pp r2.x, r2.x
    cmp_pp r1.z, r1.z, c8.z, r2.x
    abs r2.x, c1.w
    cmp_pp r0.w, -r2.x, r1.z, r0.w
    mul_pp r0.w, r1.x, r0.w
    max_pp r1.z, r0.w, c7.x
    texld r3, v5, s2
    texldp_pp r4, v6, s1
    mul_pp r0.w, r3.w, r4.x
    mul_pp r2.xzw, r0.w, c2.xyyz
    mul_pp r3.xyz, r1.z, r2.xzww
    add_pp r0.w, -r2.y, c6.x
    mul_pp r1.z, r2.y, r2.y
    dp2add_pp r1.y, r1.z, r1.y, c7.w
    mul_pp r1.z, r0.w, r0.w
    mul_pp r1.z, r1.z, r1.z
    mul_pp r0.w, r0.w, r1.z
    mov r4, c0
    mad_pp r5.xyz, c3, r0, -r4
    mul_pp r0.xyz, r0, c3
    mad_pp r4.xyz, c4.x, r5, r4
    lrp_pp r5.xyz, r0.w, c6.x, r4
    mul_pp r3.xyz, r3, r5
    mad_pp r0.w, c4.x, -r4.w, r4.w
    mul_pp r0.xyz, r0.w, r0
    mul_pp r0.w, r1.w, r1.w
    mul_pp r0.w, r0.w, r0.w
    mul_pp r0.w, r1.w, r0.w
    mad_pp r0.w, r1.y, r0.w, c6.x
    add_pp r1.z, -r1.x, c6.x
    mul_pp r1.w, r1.z, r1.z
    mul_pp r1.w, r1.w, r1.w
    mul_pp r1.z, r1.z, r1.w
    mad_pp r1.y, r1.y, r1.z, c6.x
    mul_pp r0.w, r0.w, r1.y
    mul_pp r0.w, r1.x, r0.w
    mul_pp r1.xyz, r0.w, r2.xzww
    mad_pp oC0.xyz, r0, r1, r3

// approximately 92 instruction slots used (3 texture, 89 arithmetic)
"
}
SubProgram "d3d11 " {
// Stats: 77 math, 3 textures
Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" "_ALPHABLEND_ON" }
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_LightTexture0] 2D 2
SetTexture 2 [_ShadowMapTexture] 2D 1
ConstBuffer "$Globals" 304
Vector 32 [unity_ColorSpaceDielectricSpec]
Vector 48 [unity_ColorSpaceLuminance]
Vector 96 [_LightColor0]
Vector 128 [_Color]
Float 200 [_Metallic]
Float 204 [_Glossiness]
BindCB  "$Globals" 0
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer cb0[13], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xy
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 6
   0: dp3 r0.x, v5.xyzx, v5.xyzx
   1: rsq r0.x, r0.x
   2: mul r0.xyz, r0.xxxx, v5.xyzx
   3: dp3 r0.w, v2.xyzx, v2.xyzx
   4: rsq r0.w, r0.w
   5: mul r1.xyz, r0.wwww, v2.xyzx
   6: dp3 r1.w, r0.xyzx, -r1.xyzx
   7: add r2.x, -r1.w, l(0.000010)
   8: lt r1.w, r1.w, l(0.000000)
   9: mad r2.xyz, -r1.xyzx, r2.xxxx, r0.xyzx
  10: movc r0.xyz, r1.wwww, r2.xyzx, r0.xyzx
  11: dp3 r1.x, r0.xyzx, -r1.xyzx
  12: max r1.x, r1.x, l(0.000000)
  13: mov r2.x, v3.w
  14: mov r2.y, v4.w
  15: mov r2.z, v5.w
  16: mad r1.yzw, -v2.xxyz, r0.wwww, r2.xxyz
  17: dp3 r0.w, r1.yzwy, r1.yzwy
  18: max r0.w, r0.w, l(0.001000)
  19: rsq r0.w, r0.w
  20: mul r1.yzw, r0.wwww, r1.yyzw
  21: dp3 r0.w, r0.xyzx, r1.yzwy
  22: dp3 r0.x, r0.xyzx, r2.xyzx
  23: dp3 r0.y, r2.xyzx, r1.yzwy
  24: max r0.xyz, r0.xywx, l(0.000000, 0.000000, 0.000000, 0.000000)
  25: mul r0.z, r0.z, r0.z
  26: add r0.w, -cb0[12].w, l(1.000000)
  27: mul r1.y, r0.w, r0.w
  28: mad r1.z, r1.y, r1.y, l(-1.000000)
  29: mad r0.z, r0.z, r1.z, l(1.000000)
  30: mul r0.z, r0.z, r0.z
  31: mad r0.z, r0.z, l(3.141593), l(0.000000)
  32: mul r1.z, r1.y, r1.y
  33: div r0.z, r1.z, r0.z
  34: mad r1.z, -r0.w, r0.w, l(1.000000)
  35: mad r1.w, r1.x, r1.z, r1.y
  36: mad r1.y, r0.x, r1.z, r1.y
  37: mul r1.y, r1.y, r1.x
  38: add r1.x, -r1.x, l(1.000000)
  39: mad r1.y, r0.x, r1.w, r1.y
  40: add r1.y, r1.y, l(0.000010)
  41: div r1.y, l(2.000000), r1.y
  42: mul r0.z, r0.z, r1.y
  43: mul r0.z, r0.z, l(0.785398)
  44: max r1.y, r0.z, l(0.000100)
  45: sqrt r1.y, r1.y
  46: eq r1.z, cb0[3].w, l(0.000000)
  47: movc r0.z, r1.z, r1.y, r0.z
  48: mul r0.z, r0.x, r0.z
  49: max r0.z, r0.z, l(0.000000)
  50: div r1.yz, v7.xxyx, v7.wwww
  51: sample r2.xyzw, r1.yzyy, t2.xyzw, s1
  52: sample r3.xyzw, v6.xyxx, t1.xyzw, s2
  53: mul r1.y, r2.x, r3.w
  54: mul r1.yzw, r1.yyyy, cb0[6].xxyz
  55: mul r2.xyz, r0.zzzz, r1.yzwy
  56: add r0.z, -r0.y, l(1.000000)
  57: dp2 r0.y, r0.yyyy, r0.yyyy
  58: mad r0.y, r0.y, r0.w, l(-0.500000)
  59: mul r0.w, r0.z, r0.z
  60: mul r0.w, r0.w, r0.w
  61: mul r0.z, r0.z, r0.w
  62: sample r3.xyzw, v1.xyxx, t0.xyzw, s0
  63: mad r4.xyz, cb0[8].xyzx, r3.xyzx, -cb0[2].xyzx
  64: mad r4.xyz, cb0[12].zzzz, r4.xyzx, cb0[2].xyzx
  65: add r5.xyz, -r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  66: mad r4.xyz, r5.xyzx, r0.zzzz, r4.xyzx
  67: mul r2.xyz, r2.xyzx, r4.xyzx
  68: mul r0.z, r1.x, r1.x
  69: mul r0.z, r0.z, r0.z
  70: mul r0.z, r1.x, r0.z
  71: mad r0.z, r0.y, r0.z, l(1.000000)
  72: add r0.w, -r0.x, l(1.000000)
  73: mul r1.x, r0.w, r0.w
  74: mul r1.x, r1.x, r1.x
  75: mul r0.w, r0.w, r1.x
  76: mad r0.y, r0.y, r0.w, l(1.000000)
  77: mul r0.y, r0.z, r0.y
  78: mul r0.x, r0.x, r0.y
  79: mul r0.xyz, r0.xxxx, r1.yzwy
  80: mul r1.xyz, r3.xyzx, cb0[8].xyzx
  81: mul o0.w, r3.w, cb0[8].w
  82: mad r0.w, -cb0[12].z, cb0[2].w, cb0[2].w
  83: mul r1.xyz, r0.wwww, r1.xyzx
  84: mad o0.xyz, r1.xyzx, r0.xyzx, r2.xyzx
  85: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
Keywords { "POINT" "SHADOWS_CUBE" "_ALPHABLEND_ON" }
"// shader disassembly not supported on opengl"
}
SubProgram "d3d9 " {
// Stats: 100 math, 3 textures
Keywords { "POINT" "SHADOWS_CUBE" "_ALPHABLEND_ON" }
Vector 5 [_Color]
Float 7 [_Glossiness]
Vector 4 [_LightColor0]
Vector 0 [_LightPositionRange]
Vector 1 [_LightShadowData]
Float 6 [_Metallic]
Vector 2 [unity_ColorSpaceDielectricSpec]
Vector 3 [unity_ColorSpaceLuminance]
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_ShadowMapTexture] CUBE 1
SetTexture 2 [_LightTexture0] 2D 2
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   float4 _LightPositionRange;
//   float4 _LightShadowData;
//   sampler2D _LightTexture0;
//   sampler2D _MainTex;
//   float _Metallic;
//   samplerCUBE _ShadowMapTexture;
//   float4 unity_ColorSpaceDielectricSpec;
//   float4 unity_ColorSpaceLuminance;
//
//
// Registers:
//
//   Name                           Reg   Size
//   ------------------------------ ----- ----
//   _LightPositionRange            c0       1
//   _LightShadowData               c1       1
//   unity_ColorSpaceDielectricSpec c2       1
//   unity_ColorSpaceLuminance      c3       1
//   _LightColor0                   c4       1
//   _Color                         c5       1
//   _Metallic                      c6       1
//   _Glossiness                    c7       1
//   _MainTex                       s0       1
//   _ShadowMapTexture              s1       1
//   _LightTexture0                 s2       1
//

    ps_3_0
    def c8, 0.970000029, 1, 0.00100000005, 31.622776
    def c9, 9.99999975e-06, 0, 3.14159274, 1.00000001e-07
    def c10, -0.5, 0.785398185, 9.99999975e-05, 0.00999999978
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2_pp v2.w
    dcl_texcoord3_pp v3.w
    dcl_texcoord4_pp v4
    dcl_texcoord5 v5.xyz
    dcl_texcoord6 v6.xyz
    dcl_2d s0
    dcl_cube s1
    dcl_2d s2
    texld r0, v0, s0
    mul_pp oC0.w, r0.w, c5.w
    mov_pp r1.x, v2.w
    mov_pp r1.y, v3.w
    mov_pp r1.z, v4.w
    dp3_pp r0.w, r1, r1
    rsq_pp r0.w, r0.w
    nrm_pp r2.xyz, v1
    mad_pp r3.xyz, r1, r0.w, -r2
    mul_pp r1.xyz, r0.w, r1
    dp3_pp r0.w, r3, r3
    add r1.w, -r0.w, c8.z
    rsq_pp r0.w, r0.w
    cmp_pp r0.w, r1.w, c8.w, r0.w
    mul_pp r3.xyz, r0.w, r3
    nrm_pp r4.xyz, v4
    dp3_pp r0.w, r4, -r2
    add r1.w, -r0.w, c9.x
    mad_pp r5.xyz, -r2, r1.w, r4
    cmp_pp r4.xyz, r0.w, r4, r5
    dp3_pp r0.w, r4, -r2
    max_pp r1.w, r0.w, c9.y
    dp3_pp r0.w, r4, r3
    dp3_pp r2.x, r1, r3
    dp3_pp r1.x, r4, r1
    max_pp r2.y, r1.x, c9.y
    max_pp r1.x, r2.x, c9.y
    max_pp r1.y, r0.w, c9.y
    mul r0.w, r1.y, r1.y
    mov r1.y, c8.y
    add_pp r1.z, r1.y, -c7.x
    mul_pp r2.x, r1.z, r1.z
    mad r2.z, r2.x, r2.x, -c8.y
    mad_pp r0.w, r0.w, r2.z, c8.y
    mul r0.w, r0.w, r0.w
    mad r0.w, r0.w, c9.z, c9.w
    rcp r0.w, r0.w
    mul_pp r2.z, r2.x, r2.x
    mul_pp r0.w, r0.w, r2.z
    mad_pp r2.z, r1.z, -r1.z, c8.y
    mad_pp r2.w, r1.w, r2.z, r2.x
    mad_pp r2.x, r2.y, r2.z, r2.x
    mul_pp r2.x, r1.w, r2.x
    add_pp r1.w, -r1.w, c8.y
    mad r2.x, r2.y, r2.w, r2.x
    add r2.x, r2.x, c9.x
    rcp r2.x, r2.x
    add_pp r2.x, r2.x, r2.x
    mul r0.w, r0.w, r2.x
    mad r2.x, r0.w, -c10.y, c10.z
    mul_pp r0.w, r0.w, c10.y
    rsq r2.z, r0.w
    rcp_pp r2.z, r2.z
    cmp_pp r2.x, r2.x, c10.w, r2.z
    abs r2.z, c3.w
    cmp_pp r0.w, -r2.z, r2.x, r0.w
    mul_pp r0.w, r2.y, r0.w
    max_pp r2.x, r0.w, c9.y
    dp3 r0.w, v6, v6
    rsq r0.w, r0.w
    rcp r0.w, r0.w
    mul r0.w, r0.w, c0.w
    texld r3, v6, s1
    mad r0.w, r0.w, -c8.x, r3.x
    cmp_pp r0.w, r0.w, r1.y, c1.x
    dp3 r1.y, v5, v5
    texld r3, r1.y, s2
    mul_pp r0.w, r0.w, r3.x
    mul_pp r3.xyz, r0.w, c4
    mul_pp r2.xzw, r2.x, r3.xyyz
    add_pp r0.w, -r1.x, c8.y
    dp2add_pp r1.x, r1.x, r1.x, c9.y
    mad_pp r1.x, r1.x, r1.z, c10.x
    mul_pp r1.y, r0.w, r0.w
    mul_pp r1.y, r1.y, r1.y
    mul_pp r0.w, r0.w, r1.y
    mov r4, c2
    mad_pp r5.xyz, c5, r0, -r4
    mul_pp r0.xyz, r0, c5
    mad_pp r4.xyz, c6.x, r5, r4
    lrp_pp r5.xyz, r0.w, c8.y, r4
    mul_pp r2.xzw, r2, r5.xyyz
    mad_pp r0.w, c6.x, -r4.w, r4.w
    mul_pp r0.xyz, r0.w, r0
    mul_pp r0.w, r1.w, r1.w
    mul_pp r0.w, r0.w, r0.w
    mul_pp r0.w, r1.w, r0.w
    mad_pp r0.w, r1.x, r0.w, c8.y
    add_pp r1.y, -r2.y, c8.y
    mul_pp r1.z, r1.y, r1.y
    mul_pp r1.z, r1.z, r1.z
    mul_pp r1.y, r1.y, r1.z
    mad_pp r1.x, r1.x, r1.y, c8.y
    mul_pp r0.w, r0.w, r1.x
    mul_pp r0.w, r2.y, r0.w
    mul_pp r1.xyz, r0.w, r3
    mad_pp oC0.xyz, r0, r1, r2.xzww

// approximately 102 instruction slots used (3 texture, 99 arithmetic)
"
}
SubProgram "d3d11 " {
// Stats: 85 math, 3 textures
Keywords { "POINT" "SHADOWS_CUBE" "_ALPHABLEND_ON" }
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_LightTexture0] 2D 2
SetTexture 2 [_ShadowMapTexture] CUBE 1
ConstBuffer "$Globals" 304
Vector 32 [unity_ColorSpaceDielectricSpec]
Vector 48 [unity_ColorSpaceLuminance]
Vector 96 [_LightColor0]
Vector 128 [_Color]
Float 200 [_Metallic]
Float 204 [_Glossiness]
ConstBuffer "UnityLighting" 720
Vector 16 [_LightPositionRange]
ConstBuffer "UnityShadows" 416
Vector 384 [_LightShadowData]
BindCB  "$Globals" 0
BindCB  "UnityLighting" 1
BindCB  "UnityShadows" 2
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer cb0[13], immediateIndexed
      dcl_constantbuffer cb1[2], immediateIndexed
      dcl_constantbuffer cb2[25], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texturecube (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: dp3 r0.x, v5.xyzx, v5.xyzx
   1: rsq r0.x, r0.x
   2: mul r0.xyz, r0.xxxx, v5.xyzx
   3: dp3 r0.w, v2.xyzx, v2.xyzx
   4: rsq r0.w, r0.w
   5: mul r1.xyz, r0.wwww, v2.xyzx
   6: dp3 r0.w, r0.xyzx, -r1.xyzx
   7: add r1.w, -r0.w, l(0.000010)
   8: lt r0.w, r0.w, l(0.000000)
   9: mad r2.xyz, -r1.xyzx, r1.wwww, r0.xyzx
  10: movc r0.xyz, r0.wwww, r2.xyzx, r0.xyzx
  11: mov r2.x, v3.w
  12: mov r2.y, v4.w
  13: mov r2.z, v5.w
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: rsq r0.w, r0.w
  16: mad r3.xyz, r2.xyzx, r0.wwww, -r1.xyzx
  17: dp3 r1.x, r0.xyzx, -r1.xyzx
  18: max r1.x, r1.x, l(0.000000)
  19: mul r1.yzw, r0.wwww, r2.xxyz
  20: dp3 r0.w, r3.xyzx, r3.xyzx
  21: max r0.w, r0.w, l(0.001000)
  22: rsq r0.w, r0.w
  23: mul r2.xyz, r0.wwww, r3.xyzx
  24: dp3 r0.w, r0.xyzx, r2.xyzx
  25: dp3 r0.x, r0.xyzx, r1.yzwy
  26: dp3 r0.y, r1.yzwy, r2.xyzx
  27: max r0.xyz, r0.xywx, l(0.000000, 0.000000, 0.000000, 0.000000)
  28: mul r0.z, r0.z, r0.z
  29: add r0.w, -cb0[12].w, l(1.000000)
  30: mul r1.y, r0.w, r0.w
  31: mad r1.z, r1.y, r1.y, l(-1.000000)
  32: mad r0.z, r0.z, r1.z, l(1.000000)
  33: mul r0.z, r0.z, r0.z
  34: mad r0.z, r0.z, l(3.141593), l(0.000000)
  35: mul r1.z, r1.y, r1.y
  36: div r0.z, r1.z, r0.z
  37: mad r1.z, -r0.w, r0.w, l(1.000000)
  38: mad r1.w, r1.x, r1.z, r1.y
  39: mad r1.y, r0.x, r1.z, r1.y
  40: mul r1.y, r1.y, r1.x
  41: add r1.x, -r1.x, l(1.000000)
  42: mad r1.y, r0.x, r1.w, r1.y
  43: add r1.y, r1.y, l(0.000010)
  44: div r1.y, l(2.000000), r1.y
  45: mul r0.z, r0.z, r1.y
  46: mul r0.z, r0.z, l(0.785398)
  47: max r1.y, r0.z, l(0.000100)
  48: sqrt r1.y, r1.y
  49: eq r1.z, cb0[3].w, l(0.000000)
  50: movc r0.z, r1.z, r1.y, r0.z
  51: mul r0.z, r0.x, r0.z
  52: max r0.z, r0.z, l(0.000000)
  53: dp3 r1.y, v7.xyzx, v7.xyzx
  54: sqrt r1.y, r1.y
  55: mul r1.y, r1.y, cb1[1].w
  56: mul r1.y, r1.y, l(0.970000)
  57: sample r2.xyzw, v7.xyzx, t2.xyzw, s1
  58: lt r1.y, r2.x, r1.y
  59: movc r1.y, r1.y, cb2[24].x, l(1.000000)
  60: dp3 r1.z, v6.xyzx, v6.xyzx
  61: sample r2.xyzw, r1.zzzz, t1.xyzw, s2
  62: mul r1.y, r1.y, r2.x
  63: mul r1.yzw, r1.yyyy, cb0[6].xxyz
  64: mul r2.xyz, r0.zzzz, r1.yzwy
  65: add r0.z, -r0.y, l(1.000000)
  66: dp2 r0.y, r0.yyyy, r0.yyyy
  67: mad r0.y, r0.y, r0.w, l(-0.500000)
  68: mul r0.w, r0.z, r0.z
  69: mul r0.w, r0.w, r0.w
  70: mul r0.z, r0.z, r0.w
  71: sample r3.xyzw, v1.xyxx, t0.xyzw, s0
  72: mad r4.xyz, cb0[8].xyzx, r3.xyzx, -cb0[2].xyzx
  73: mad r4.xyz, cb0[12].zzzz, r4.xyzx, cb0[2].xyzx
  74: add r5.xyz, -r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  75: mad r4.xyz, r5.xyzx, r0.zzzz, r4.xyzx
  76: mul r2.xyz, r2.xyzx, r4.xyzx
  77: mul r0.z, r1.x, r1.x
  78: mul r0.z, r0.z, r0.z
  79: mul r0.z, r1.x, r0.z
  80: mad r0.z, r0.y, r0.z, l(1.000000)
  81: add r0.w, -r0.x, l(1.000000)
  82: mul r1.x, r0.w, r0.w
  83: mul r1.x, r1.x, r1.x
  84: mul r0.w, r0.w, r1.x
  85: mad r0.y, r0.y, r0.w, l(1.000000)
  86: mul r0.y, r0.z, r0.y
  87: mul r0.x, r0.x, r0.y
  88: mul r0.xyz, r0.xxxx, r1.yzwy
  89: mul r1.xyz, r3.xyzx, cb0[8].xyzx
  90: mul o0.w, r3.w, cb0[8].w
  91: mad r0.w, -cb0[12].z, cb0[2].w, cb0[2].w
  92: mul r1.xyz, r0.wwww, r1.xyzx
  93: mad o0.xyz, r1.xyzx, r0.xyzx, r2.xyzx
  94: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "_ALPHABLEND_ON" }
"// shader disassembly not supported on opengl"
}
SubProgram "d3d9 " {
// Stats: 101 math, 4 textures
Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "_ALPHABLEND_ON" }
Vector 5 [_Color]
Float 7 [_Glossiness]
Vector 4 [_LightColor0]
Vector 0 [_LightPositionRange]
Vector 1 [_LightShadowData]
Float 6 [_Metallic]
Vector 2 [unity_ColorSpaceDielectricSpec]
Vector 3 [unity_ColorSpaceLuminance]
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_ShadowMapTexture] CUBE 1
SetTexture 2 [_LightTexture0] CUBE 2
SetTexture 3 [_LightTextureB0] 2D 3
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   float4 _LightPositionRange;
//   float4 _LightShadowData;
//   samplerCUBE _LightTexture0;
//   sampler2D _LightTextureB0;
//   sampler2D _MainTex;
//   float _Metallic;
//   samplerCUBE _ShadowMapTexture;
//   float4 unity_ColorSpaceDielectricSpec;
//   float4 unity_ColorSpaceLuminance;
//
//
// Registers:
//
//   Name                           Reg   Size
//   ------------------------------ ----- ----
//   _LightPositionRange            c0       1
//   _LightShadowData               c1       1
//   unity_ColorSpaceDielectricSpec c2       1
//   unity_ColorSpaceLuminance      c3       1
//   _LightColor0                   c4       1
//   _Color                         c5       1
//   _Metallic                      c6       1
//   _Glossiness                    c7       1
//   _MainTex                       s0       1
//   _ShadowMapTexture              s1       1
//   _LightTexture0                 s2       1
//   _LightTextureB0                s3       1
//

    ps_3_0
    def c8, 0.970000029, 1, 0.00100000005, 31.622776
    def c9, 9.99999975e-06, 0, 3.14159274, 1.00000001e-07
    def c10, -0.5, 0.785398185, 9.99999975e-05, 0.00999999978
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2_pp v2.w
    dcl_texcoord3_pp v3.w
    dcl_texcoord4_pp v4
    dcl_texcoord5 v5.xyz
    dcl_texcoord6 v6.xyz
    dcl_2d s0
    dcl_cube s1
    dcl_cube s2
    dcl_2d s3
    texld r0, v0, s0
    mul_pp oC0.w, r0.w, c5.w
    mov_pp r1.x, v2.w
    mov_pp r1.y, v3.w
    mov_pp r1.z, v4.w
    dp3_pp r0.w, r1, r1
    rsq_pp r0.w, r0.w
    nrm_pp r2.xyz, v1
    mad_pp r3.xyz, r1, r0.w, -r2
    mul_pp r1.xyz, r0.w, r1
    dp3_pp r0.w, r3, r3
    add r1.w, -r0.w, c8.z
    rsq_pp r0.w, r0.w
    cmp_pp r0.w, r1.w, c8.w, r0.w
    mul_pp r3.xyz, r0.w, r3
    nrm_pp r4.xyz, v4
    dp3_pp r0.w, r4, -r2
    add r1.w, -r0.w, c9.x
    mad_pp r5.xyz, -r2, r1.w, r4
    cmp_pp r4.xyz, r0.w, r4, r5
    dp3_pp r0.w, r4, -r2
    max_pp r1.w, r0.w, c9.y
    dp3_pp r0.w, r4, r3
    dp3_pp r2.x, r1, r3
    dp3_pp r1.x, r4, r1
    max_pp r2.y, r1.x, c9.y
    max_pp r1.x, r2.x, c9.y
    max_pp r1.y, r0.w, c9.y
    mul r0.w, r1.y, r1.y
    mov r1.y, c8.y
    add_pp r1.z, r1.y, -c7.x
    mul_pp r2.x, r1.z, r1.z
    mad r2.z, r2.x, r2.x, -c8.y
    mad_pp r0.w, r0.w, r2.z, c8.y
    mul r0.w, r0.w, r0.w
    mad r0.w, r0.w, c9.z, c9.w
    rcp r0.w, r0.w
    mul_pp r2.z, r2.x, r2.x
    mul_pp r0.w, r0.w, r2.z
    mad_pp r2.z, r1.z, -r1.z, c8.y
    mad_pp r2.w, r1.w, r2.z, r2.x
    mad_pp r2.x, r2.y, r2.z, r2.x
    mul_pp r2.x, r1.w, r2.x
    add_pp r1.w, -r1.w, c8.y
    mad r2.x, r2.y, r2.w, r2.x
    add r2.x, r2.x, c9.x
    rcp r2.x, r2.x
    add_pp r2.x, r2.x, r2.x
    mul r0.w, r0.w, r2.x
    mad r2.x, r0.w, -c10.y, c10.z
    mul_pp r0.w, r0.w, c10.y
    rsq r2.z, r0.w
    rcp_pp r2.z, r2.z
    cmp_pp r2.x, r2.x, c10.w, r2.z
    abs r2.z, c3.w
    cmp_pp r0.w, -r2.z, r2.x, r0.w
    mul_pp r0.w, r2.y, r0.w
    max_pp r2.x, r0.w, c9.y
    dp3 r0.w, v6, v6
    rsq r0.w, r0.w
    rcp r0.w, r0.w
    mul r0.w, r0.w, c0.w
    texld r3, v6, s1
    mad r0.w, r0.w, -c8.x, r3.x
    cmp_pp r0.w, r0.w, r1.y, c1.x
    dp3 r1.y, v5, v5
    texld r3, r1.y, s3
    texld r4, v5, s2
    mul r1.y, r3.x, r4.w
    mul_pp r0.w, r0.w, r1.y
    mul_pp r3.xyz, r0.w, c4
    mul_pp r2.xzw, r2.x, r3.xyyz
    add_pp r0.w, -r1.x, c8.y
    dp2add_pp r1.x, r1.x, r1.x, c9.y
    mad_pp r1.x, r1.x, r1.z, c10.x
    mul_pp r1.y, r0.w, r0.w
    mul_pp r1.y, r1.y, r1.y
    mul_pp r0.w, r0.w, r1.y
    mov r4, c2
    mad_pp r5.xyz, c5, r0, -r4
    mul_pp r0.xyz, r0, c5
    mad_pp r4.xyz, c6.x, r5, r4
    lrp_pp r5.xyz, r0.w, c8.y, r4
    mul_pp r2.xzw, r2, r5.xyyz
    mad_pp r0.w, c6.x, -r4.w, r4.w
    mul_pp r0.xyz, r0.w, r0
    mul_pp r0.w, r1.w, r1.w
    mul_pp r0.w, r0.w, r0.w
    mul_pp r0.w, r1.w, r0.w
    mad_pp r0.w, r1.x, r0.w, c8.y
    add_pp r1.y, -r2.y, c8.y
    mul_pp r1.z, r1.y, r1.y
    mul_pp r1.z, r1.z, r1.z
    mul_pp r1.y, r1.y, r1.z
    mad_pp r1.x, r1.x, r1.y, c8.y
    mul_pp r0.w, r0.w, r1.x
    mul_pp r0.w, r2.y, r0.w
    mul_pp r1.xyz, r0.w, r3
    mad_pp oC0.xyz, r0, r1, r2.xzww

// approximately 104 instruction slots used (4 texture, 100 arithmetic)
"
}
SubProgram "d3d11 " {
// Stats: 86 math, 4 textures
Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "_ALPHABLEND_ON" }
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_LightTextureB0] 2D 3
SetTexture 2 [_LightTexture0] CUBE 2
SetTexture 3 [_ShadowMapTexture] CUBE 1
ConstBuffer "$Globals" 304
Vector 32 [unity_ColorSpaceDielectricSpec]
Vector 48 [unity_ColorSpaceLuminance]
Vector 96 [_LightColor0]
Vector 128 [_Color]
Float 200 [_Metallic]
Float 204 [_Glossiness]
ConstBuffer "UnityLighting" 720
Vector 16 [_LightPositionRange]
ConstBuffer "UnityShadows" 416
Vector 384 [_LightShadowData]
BindCB  "$Globals" 0
BindCB  "UnityLighting" 1
BindCB  "UnityShadows" 2
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer cb0[13], immediateIndexed
      dcl_constantbuffer cb1[2], immediateIndexed
      dcl_constantbuffer cb2[25], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texturecube (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: dp3 r0.x, v5.xyzx, v5.xyzx
   1: rsq r0.x, r0.x
   2: mul r0.xyz, r0.xxxx, v5.xyzx
   3: dp3 r0.w, v2.xyzx, v2.xyzx
   4: rsq r0.w, r0.w
   5: mul r1.xyz, r0.wwww, v2.xyzx
   6: dp3 r0.w, r0.xyzx, -r1.xyzx
   7: add r1.w, -r0.w, l(0.000010)
   8: lt r0.w, r0.w, l(0.000000)
   9: mad r2.xyz, -r1.xyzx, r1.wwww, r0.xyzx
  10: movc r0.xyz, r0.wwww, r2.xyzx, r0.xyzx
  11: mov r2.x, v3.w
  12: mov r2.y, v4.w
  13: mov r2.z, v5.w
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: rsq r0.w, r0.w
  16: mad r3.xyz, r2.xyzx, r0.wwww, -r1.xyzx
  17: dp3 r1.x, r0.xyzx, -r1.xyzx
  18: max r1.x, r1.x, l(0.000000)
  19: mul r1.yzw, r0.wwww, r2.xxyz
  20: dp3 r0.w, r3.xyzx, r3.xyzx
  21: max r0.w, r0.w, l(0.001000)
  22: rsq r0.w, r0.w
  23: mul r2.xyz, r0.wwww, r3.xyzx
  24: dp3 r0.w, r0.xyzx, r2.xyzx
  25: dp3 r0.x, r0.xyzx, r1.yzwy
  26: dp3 r0.y, r1.yzwy, r2.xyzx
  27: max r0.xyz, r0.xywx, l(0.000000, 0.000000, 0.000000, 0.000000)
  28: mul r0.z, r0.z, r0.z
  29: add r0.w, -cb0[12].w, l(1.000000)
  30: mul r1.y, r0.w, r0.w
  31: mad r1.z, r1.y, r1.y, l(-1.000000)
  32: mad r0.z, r0.z, r1.z, l(1.000000)
  33: mul r0.z, r0.z, r0.z
  34: mad r0.z, r0.z, l(3.141593), l(0.000000)
  35: mul r1.z, r1.y, r1.y
  36: div r0.z, r1.z, r0.z
  37: mad r1.z, -r0.w, r0.w, l(1.000000)
  38: mad r1.w, r1.x, r1.z, r1.y
  39: mad r1.y, r0.x, r1.z, r1.y
  40: mul r1.y, r1.y, r1.x
  41: add r1.x, -r1.x, l(1.000000)
  42: mad r1.y, r0.x, r1.w, r1.y
  43: add r1.y, r1.y, l(0.000010)
  44: div r1.y, l(2.000000), r1.y
  45: mul r0.z, r0.z, r1.y
  46: mul r0.z, r0.z, l(0.785398)
  47: max r1.y, r0.z, l(0.000100)
  48: sqrt r1.y, r1.y
  49: eq r1.z, cb0[3].w, l(0.000000)
  50: movc r0.z, r1.z, r1.y, r0.z
  51: mul r0.z, r0.x, r0.z
  52: max r0.z, r0.z, l(0.000000)
  53: dp3 r1.y, v7.xyzx, v7.xyzx
  54: sqrt r1.y, r1.y
  55: mul r1.y, r1.y, cb1[1].w
  56: mul r1.y, r1.y, l(0.970000)
  57: sample r2.xyzw, v7.xyzx, t3.xyzw, s1
  58: lt r1.y, r2.x, r1.y
  59: movc r1.y, r1.y, cb2[24].x, l(1.000000)
  60: dp3 r1.z, v6.xyzx, v6.xyzx
  61: sample r2.xyzw, r1.zzzz, t1.xyzw, s3
  62: sample r3.xyzw, v6.xyzx, t2.xyzw, s2
  63: mul r1.z, r2.x, r3.w
  64: mul r1.y, r1.y, r1.z
  65: mul r1.yzw, r1.yyyy, cb0[6].xxyz
  66: mul r2.xyz, r0.zzzz, r1.yzwy
  67: add r0.z, -r0.y, l(1.000000)
  68: dp2 r0.y, r0.yyyy, r0.yyyy
  69: mad r0.y, r0.y, r0.w, l(-0.500000)
  70: mul r0.w, r0.z, r0.z
  71: mul r0.w, r0.w, r0.w
  72: mul r0.z, r0.z, r0.w
  73: sample r3.xyzw, v1.xyxx, t0.xyzw, s0
  74: mad r4.xyz, cb0[8].xyzx, r3.xyzx, -cb0[2].xyzx
  75: mad r4.xyz, cb0[12].zzzz, r4.xyzx, cb0[2].xyzx
  76: add r5.xyz, -r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  77: mad r4.xyz, r5.xyzx, r0.zzzz, r4.xyzx
  78: mul r2.xyz, r2.xyzx, r4.xyzx
  79: mul r0.z, r1.x, r1.x
  80: mul r0.z, r0.z, r0.z
  81: mul r0.z, r1.x, r0.z
  82: mad r0.z, r0.y, r0.z, l(1.000000)
  83: add r0.w, -r0.x, l(1.000000)
  84: mul r1.x, r0.w, r0.w
  85: mul r1.x, r1.x, r1.x
  86: mul r0.w, r0.w, r1.x
  87: mad r0.y, r0.y, r0.w, l(1.000000)
  88: mul r0.y, r0.z, r0.y
  89: mul r0.x, r0.x, r0.y
  90: mul r0.xyz, r0.xxxx, r1.yzwy
  91: mul r1.xyz, r3.xyzx, cb0[8].xyzx
  92: mul o0.w, r3.w, cb0[8].w
  93: mad r0.w, -cb0[12].z, cb0[2].w, cb0[2].w
  94: mul r1.xyz, r0.wwww, r1.xyzx
  95: mad o0.xyz, r1.xyzx, r0.xyzx, r2.xyzx
  96: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" "SHADOWS_NATIVE" "_ALPHABLEND_ON" }
"// shader disassembly not supported on opengl"
}
SubProgram "d3d9 " {
// Stats: 109 math, 7 textures
Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" "SHADOWS_NATIVE" "_ALPHABLEND_ON" }
Vector 8 [_Color]
Float 10 [_Glossiness]
Vector 7 [_LightColor0]
Vector 4 [_LightShadowData]
Float 9 [_Metallic]
Vector 0 [_ShadowOffsets0]
Vector 1 [_ShadowOffsets1]
Vector 2 [_ShadowOffsets2]
Vector 3 [_ShadowOffsets3]
Vector 5 [unity_ColorSpaceDielectricSpec]
Vector 6 [unity_ColorSpaceLuminance]
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_ShadowMapTexture] 2D 1
SetTexture 2 [_LightTexture0] 2D 2
SetTexture 3 [_LightTextureB0] 2D 3
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   float4 _LightShadowData;
//   sampler2D _LightTexture0;
//   sampler2D _LightTextureB0;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D _ShadowMapTexture;
//   float4 _ShadowOffsets[4];
//   float4 unity_ColorSpaceDielectricSpec;
//   float4 unity_ColorSpaceLuminance;
//
//
// Registers:
//
//   Name                           Reg   Size
//   ------------------------------ ----- ----
//   _ShadowOffsets                 c0       4
//   _LightShadowData               c4       1
//   unity_ColorSpaceDielectricSpec c5       1
//   unity_ColorSpaceLuminance      c6       1
//   _LightColor0                   c7       1
//   _Color                         c8       1
//   _Metallic                      c9       1
//   _Glossiness                    c10      1
//   _MainTex                       s0       1
//   _ShadowMapTexture              s1       1
//   _LightTexture0                 s2       1
//   _LightTextureB0                s3       1
//

    ps_3_0
    def c11, 0.5, 0, 1, 0.25
    def c12, 0.00100000005, 31.622776, 9.99999975e-06, 0.785398185
    def c13, 3.14159274, 1.00000001e-07, 0.785398185, 9.99999975e-05
    def c14, 0.00999999978, 0, 0, 0
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2_pp v2.w
    dcl_texcoord3_pp v3.w
    dcl_texcoord4_pp v4
    dcl_texcoord5 v5
    dcl_texcoord6 v6
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    texld r0, v0, s0
    mul_pp oC0.w, r0.w, c8.w
    mov r1.z, c11.z
    rcp r0.w, v6.w
    mad r2, v6, r0.w, c0
    texldp_pp r2, r2, s1
    mad r3, v6, r0.w, c1
    texldp_pp r3, r3, s1
    mov_pp r2.y, r3.x
    mad r3, v6, r0.w, c2
    mad r4, v6, r0.w, c3
    texldp_pp r4, r4, s1
    mov_pp r2.w, r4.x
    texldp_pp r3, r3, s1
    mov_pp r2.z, r3.x
    lrp_pp r3, r2, r1.z, c4.x
    dp4_pp r0.w, r3, c11.w
    rcp r1.x, v5.w
    mad r1.xy, v5, r1.x, c11.x
    texld_pp r2, r1, s2
    dp3 r1.x, v5, v5
    texld_pp r3, r1.x, s3
    mul r1.x, r2.w, r3.x
    cmp r1.x, -v5.z, c11.y, r1.x
    mul_pp r0.w, r0.w, r1.x
    mul_pp r1.xyw, r0.w, c7.xyzz
    mov_pp r2.x, v2.w
    mov_pp r2.y, v3.w
    mov_pp r2.z, v4.w
    dp3_pp r0.w, r2, r2
    rsq_pp r0.w, r0.w
    nrm_pp r3.xyz, v1
    mad_pp r4.xyz, r2, r0.w, -r3
    mul_pp r2.xyz, r0.w, r2
    dp3_pp r0.w, r4, r4
    add r2.w, -r0.w, c12.x
    rsq_pp r0.w, r0.w
    cmp_pp r0.w, r2.w, c12.y, r0.w
    mul_pp r4.xyz, r0.w, r4
    nrm_pp r5.xyz, v4
    dp3_pp r0.w, r5, -r3
    add r2.w, -r0.w, c12.z
    mad_pp r6.xyz, -r3, r2.w, r5
    cmp_pp r5.xyz, r0.w, r5, r6
    dp3_pp r0.w, r5, -r3
    max_pp r2.w, r0.w, c11.y
    dp3_pp r0.w, r5, r4
    dp3_pp r3.x, r2, r4
    dp3_pp r2.x, r5, r2
    max_pp r3.y, r2.x, c11.y
    max_pp r2.x, r3.x, c11.y
    max_pp r2.y, r0.w, c11.y
    mul r0.w, r2.y, r2.y
    add_pp r1.z, r1.z, -c10.x
    mul_pp r2.y, r1.z, r1.z
    mad r2.z, r2.y, r2.y, -c11.z
    mad_pp r0.w, r0.w, r2.z, c11.z
    mul r0.w, r0.w, r0.w
    mad r0.w, r0.w, c13.x, c13.y
    rcp r0.w, r0.w
    mul_pp r2.z, r2.y, r2.y
    mul_pp r0.w, r0.w, r2.z
    mad_pp r2.z, r1.z, -r1.z, c11.z
    mad_pp r3.x, r2.w, r2.z, r2.y
    mad_pp r2.y, r3.y, r2.z, r2.y
    mul_pp r2.y, r2.y, r2.w
    add_pp r2.z, -r2.w, c11.z
    mad r2.y, r3.y, r3.x, r2.y
    add r2.y, r2.y, c12.z
    rcp r2.y, r2.y
    add_pp r2.y, r2.y, r2.y
    mul r0.w, r0.w, r2.y
    mad r2.y, r0.w, -c13.z, c13.w
    mul_pp r0.w, r0.w, c12.w
    rsq r2.w, r0.w
    rcp_pp r2.w, r2.w
    cmp_pp r2.y, r2.y, c14.x, r2.w
    abs r2.w, c6.w
    cmp_pp r0.w, -r2.w, r2.y, r0.w
    mul_pp r0.w, r3.y, r0.w
    max_pp r2.y, r0.w, c11.y
    mul_pp r3.xzw, r1.xyyw, r2.y
    add_pp r0.w, -r2.x, c11.z
    dp2add_pp r2.x, r2.x, r2.x, c11.y
    mad_pp r1.z, r2.x, r1.z, -c11.x
    mul_pp r2.x, r0.w, r0.w
    mul_pp r2.x, r2.x, r2.x
    mul_pp r0.w, r0.w, r2.x
    mov r4, c5
    mad_pp r2.xyw, c8.xyzz, r0.xyzz, -r4.xyzz
    mul_pp r0.xyz, r0, c8
    mad_pp r2.xyw, c9.x, r2, r4.xyzz
    lrp_pp r4.xyz, r0.w, c11.z, r2.xyww
    mul_pp r2.xyw, r3.xzzw, r4.xyzz
    mul_pp r0.w, r2.z, r2.z
    mul_pp r0.w, r0.w, r0.w
    mul_pp r0.w, r2.z, r0.w
    mad_pp r0.w, r1.z, r0.w, c11.z
    add_pp r2.z, -r3.y, c11.z
    mul_pp r3.x, r2.z, r2.z
    mul_pp r3.x, r3.x, r3.x
    mul_pp r2.z, r2.z, r3.x
    mad_pp r1.z, r1.z, r2.z, c11.z
    mul_pp r0.w, r0.w, r1.z
    mul_pp r0.w, r3.y, r0.w
    mul_pp r1.xyz, r0.w, r1.xyww
    mad_pp r0.w, c9.x, -r4.w, r4.w
    mul_pp r0.xyz, r0.w, r0
    mad_pp oC0.xyz, r0, r1, r2.xyww

// approximately 114 instruction slots used (7 texture, 107 arithmetic)
"
}
SubProgram "d3d11 " {
// Stats: 95 math, 3 textures
Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" "SHADOWS_NATIVE" "_ALPHABLEND_ON" }
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_LightTexture0] 2D 2
SetTexture 2 [_LightTextureB0] 2D 3
SetTexture 3 [_ShadowMapTexture] 2D 1
ConstBuffer "$Globals" 368
Vector 32 [unity_ColorSpaceDielectricSpec]
Vector 48 [unity_ColorSpaceLuminance]
Vector 96 [_LightColor0]
Vector 128 [_Color]
Float 200 [_Metallic]
Float 204 [_Glossiness]
Vector 240 [_ShadowOffsets0]
Vector 256 [_ShadowOffsets1]
Vector 272 [_ShadowOffsets2]
Vector 288 [_ShadowOffsets3]
ConstBuffer "UnityShadows" 416
Vector 384 [_LightShadowData]
BindCB  "$Globals" 0
BindCB  "UnityShadows" 1
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer cb0[19], immediateIndexed
      dcl_constantbuffer cb1[25], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyzw
      dcl_input_ps linear v7.xyzw
      dcl_output o0.xyzw
      dcl_temps 6
   0: add r0.x, -cb1[24].x, l(1.000000)
   1: div r0.yzw, v7.xxyz, v7.wwww
   2: add r1.xyz, r0.yzwy, cb0[15].xyzx
   3: sample_c_lz r1.x, r1.xyxx, t3.xxxx, s1, r1.z
   4: add r2.xyz, r0.yzwy, cb0[16].xyzx
   5: sample_c_lz r1.y, r2.xyxx, t3.xxxx, s1, r2.z
   6: add r2.xyz, r0.yzwy, cb0[17].xyzx
   7: add r0.yzw, r0.yyzw, cb0[18].xxyz
   8: sample_c_lz r1.w, r0.yzyy, t3.xxxx, s1, r0.w
   9: sample_c_lz r1.z, r2.xyxx, t3.xxxx, s1, r2.z
  10: mad r0.xyzw, r1.xyzw, r0.xxxx, cb1[24].xxxx
  11: dp4 r0.x, r0.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
  12: div r0.yz, v6.xxyx, v6.wwww
  13: add r0.yz, r0.yyzy, l(0.000000, 0.500000, 0.500000, 0.000000)
  14: sample r1.xyzw, r0.yzyy, t1.xyzw, s2
  15: lt r0.y, l(0.000000), v6.z
  16: and r0.y, r0.y, l(0x3f800000)
  17: mul r0.y, r1.w, r0.y
  18: dp3 r0.z, v6.xyzx, v6.xyzx
  19: sample r1.xyzw, r0.zzzz, t2.xyzw, s3
  20: mul r0.y, r0.y, r1.x
  21: mul r0.x, r0.x, r0.y
  22: mul r0.xyz, r0.xxxx, cb0[6].xyzx
  23: dp3 r0.w, v5.xyzx, v5.xyzx
  24: rsq r0.w, r0.w
  25: mul r1.xyz, r0.wwww, v5.xyzx
  26: dp3 r0.w, v2.xyzx, v2.xyzx
  27: rsq r0.w, r0.w
  28: mul r2.xyz, r0.wwww, v2.xyzx
  29: dp3 r0.w, r1.xyzx, -r2.xyzx
  30: add r1.w, -r0.w, l(0.000010)
  31: lt r0.w, r0.w, l(0.000000)
  32: mad r3.xyz, -r2.xyzx, r1.wwww, r1.xyzx
  33: movc r1.xyz, r0.wwww, r3.xyzx, r1.xyzx
  34: mov r3.x, v3.w
  35: mov r3.y, v4.w
  36: mov r3.z, v5.w
  37: dp3 r0.w, r3.xyzx, r3.xyzx
  38: rsq r0.w, r0.w
  39: mad r4.xyz, r3.xyzx, r0.wwww, -r2.xyzx
  40: dp3 r1.w, r1.xyzx, -r2.xyzx
  41: mul r2.xyz, r0.wwww, r3.xyzx
  42: dp3 r0.w, r4.xyzx, r4.xyzx
  43: max r0.w, r0.w, l(0.001000)
  44: rsq r0.w, r0.w
  45: mul r3.xyz, r0.wwww, r4.xyzx
  46: dp3 r0.w, r1.xyzx, r3.xyzx
  47: dp3 r1.x, r1.xyzx, r2.xyzx
  48: dp3 r1.y, r2.xyzx, r3.xyzx
  49: max r1.xyw, r1.xyxw, l(0.000000, 0.000000, 0.000000, 0.000000)
  50: max r0.w, r0.w, l(0.000000)
  51: mul r0.w, r0.w, r0.w
  52: add r1.z, -cb0[12].w, l(1.000000)
  53: mul r2.x, r1.z, r1.z
  54: mad r2.y, r2.x, r2.x, l(-1.000000)
  55: mad r0.w, r0.w, r2.y, l(1.000000)
  56: mul r0.w, r0.w, r0.w
  57: mad r0.w, r0.w, l(3.141593), l(0.000000)
  58: mul r2.y, r2.x, r2.x
  59: div r0.w, r2.y, r0.w
  60: mad r2.y, -r1.z, r1.z, l(1.000000)
  61: mad r2.z, r1.w, r2.y, r2.x
  62: mad r2.x, r1.x, r2.y, r2.x
  63: mul r2.x, r1.w, r2.x
  64: add r1.w, -r1.w, l(1.000000)
  65: mad r2.x, r1.x, r2.z, r2.x
  66: add r2.x, r2.x, l(0.000010)
  67: div r2.x, l(2.000000), r2.x
  68: mul r0.w, r0.w, r2.x
  69: mul r0.w, r0.w, l(0.785398)
  70: max r2.x, r0.w, l(0.000100)
  71: sqrt r2.x, r2.x
  72: eq r2.y, cb0[3].w, l(0.000000)
  73: movc r0.w, r2.y, r2.x, r0.w
  74: mul r0.w, r1.x, r0.w
  75: max r0.w, r0.w, l(0.000000)
  76: mul r2.xyz, r0.xyzx, r0.wwww
  77: add r0.w, -r1.y, l(1.000000)
  78: mul r1.y, r1.y, r1.y
  79: dp2 r1.y, r1.yyyy, r1.zzzz
  80: add r1.y, r1.y, l(-0.500000)
  81: mul r1.z, r0.w, r0.w
  82: mul r1.z, r1.z, r1.z
  83: mul r0.w, r0.w, r1.z
  84: sample r3.xyzw, v1.xyxx, t0.xyzw, s0
  85: mad r4.xyz, cb0[8].xyzx, r3.xyzx, -cb0[2].xyzx
  86: mad r4.xyz, cb0[12].zzzz, r4.xyzx, cb0[2].xyzx
  87: add r5.xyz, -r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  88: mad r4.xyz, r5.xyzx, r0.wwww, r4.xyzx
  89: mul r2.xyz, r2.xyzx, r4.xyzx
  90: mul r0.w, r1.w, r1.w
  91: mul r0.w, r0.w, r0.w
  92: mul r0.w, r1.w, r0.w
  93: mad r0.w, r1.y, r0.w, l(1.000000)
  94: add r1.z, -r1.x, l(1.000000)
  95: mul r1.w, r1.z, r1.z
  96: mul r1.w, r1.w, r1.w
  97: mul r1.z, r1.z, r1.w
  98: mad r1.y, r1.y, r1.z, l(1.000000)
  99: mul r0.w, r0.w, r1.y
 100: mul r0.w, r1.x, r0.w
 101: mul r0.xyz, r0.wwww, r0.xyzx
 102: mul r1.xyz, r3.xyzx, cb0[8].xyzx
 103: mul o0.w, r3.w, cb0[8].w
 104: mad r0.w, -cb0[12].z, cb0[2].w, cb0[2].w
 105: mul r1.xyz, r0.wwww, r1.xyzx
 106: mad o0.xyz, r1.xyzx, r0.xyzx, r2.xyzx
 107: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
Keywords { "POINT" "SHADOWS_CUBE" "SHADOWS_SOFT" "_ALPHABLEND_ON" }
"// shader disassembly not supported on opengl"
}
SubProgram "d3d9 " {
// Stats: 108 math, 6 textures
Keywords { "POINT" "SHADOWS_CUBE" "SHADOWS_SOFT" "_ALPHABLEND_ON" }
Vector 5 [_Color]
Float 7 [_Glossiness]
Vector 4 [_LightColor0]
Vector 0 [_LightPositionRange]
Vector 1 [_LightShadowData]
Float 6 [_Metallic]
Vector 2 [unity_ColorSpaceDielectricSpec]
Vector 3 [unity_ColorSpaceLuminance]
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_ShadowMapTexture] CUBE 1
SetTexture 2 [_LightTexture0] 2D 2
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   float4 _LightPositionRange;
//   float4 _LightShadowData;
//   sampler2D _LightTexture0;
//   sampler2D _MainTex;
//   float _Metallic;
//   samplerCUBE _ShadowMapTexture;
//   float4 unity_ColorSpaceDielectricSpec;
//   float4 unity_ColorSpaceLuminance;
//
//
// Registers:
//
//   Name                           Reg   Size
//   ------------------------------ ----- ----
//   _LightPositionRange            c0       1
//   _LightShadowData               c1       1
//   unity_ColorSpaceDielectricSpec c2       1
//   unity_ColorSpaceLuminance      c3       1
//   _LightColor0                   c4       1
//   _Color                         c5       1
//   _Metallic                      c6       1
//   _Glossiness                    c7       1
//   _MainTex                       s0       1
//   _ShadowMapTexture              s1       1
//   _LightTexture0                 s2       1
//

    ps_3_0
    def c8, 0.0078125, -0.0078125, 0.970000029, 1
    def c9, 0.25, 0.00100000005, 31.622776, 9.99999975e-06
    def c10, 0, 3.14159274, 1.00000001e-07, -0.5
    def c11, 0.785398185, 9.99999975e-05, 0.00999999978, 0
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2_pp v2.w
    dcl_texcoord3_pp v3.w
    dcl_texcoord4_pp v4
    dcl_texcoord5 v5.xyz
    dcl_texcoord6 v6.xyz
    dcl_2d s0
    dcl_cube s1
    dcl_2d s2
    texld r0, v0, s0
    mul_pp oC0.w, r0.w, c5.w
    dp3 r0.w, v6, v6
    rsq r0.w, r0.w
    rcp r0.w, r0.w
    mul r0.w, r0.w, c0.w
    add r1.xyz, c8.x, v6
    texld r1, r1, s1
    add r2.xyz, c8.yyxw, v6
    texld r2, r2, s1
    mov r1.y, r2.x
    add r2.xyz, c8.yxyw, v6
    texld r2, r2, s1
    mov r1.z, r2.x
    add r2.xyz, c8.xyyw, v6
    texld r2, r2, s1
    mov r1.w, r2.x
    mad r1, r0.w, -c8.z, r1
    mov r0.w, c8.w
    cmp_pp r1, r1, r0.w, c1.x
    dp4_pp r1.x, r1, c9.x
    dp3 r1.y, v5, v5
    texld r2, r1.y, s2
    mul_pp r1.x, r1.x, r2.x
    mul_pp r1.xyz, r1.x, c4
    mov_pp r2.x, v2.w
    mov_pp r2.y, v3.w
    mov_pp r2.z, v4.w
    dp3_pp r1.w, r2, r2
    rsq_pp r1.w, r1.w
    nrm_pp r3.xyz, v1
    mad_pp r4.xyz, r2, r1.w, -r3
    mul_pp r2.xyz, r1.w, r2
    dp3_pp r1.w, r4, r4
    add r2.w, -r1.w, c9.y
    rsq_pp r1.w, r1.w
    cmp_pp r1.w, r2.w, c9.z, r1.w
    mul_pp r4.xyz, r1.w, r4
    nrm_pp r5.xyz, v4
    dp3_pp r1.w, r5, -r3
    add r2.w, -r1.w, c9.w
    mad_pp r6.xyz, -r3, r2.w, r5
    cmp_pp r5.xyz, r1.w, r5, r6
    dp3_pp r1.w, r5, -r3
    max_pp r2.w, r1.w, c10.x
    dp3_pp r1.w, r5, r4
    dp3_pp r3.x, r2, r4
    dp3_pp r2.x, r5, r2
    max_pp r3.y, r2.x, c10.x
    max_pp r2.x, r3.x, c10.x
    max_pp r2.y, r1.w, c10.x
    mul r1.w, r2.y, r2.y
    add_pp r0.w, r0.w, -c7.x
    mul_pp r2.y, r0.w, r0.w
    mad r2.z, r2.y, r2.y, -c8.w
    mad_pp r1.w, r1.w, r2.z, c8.w
    mul r1.w, r1.w, r1.w
    mad r1.w, r1.w, c10.y, c10.z
    rcp r1.w, r1.w
    mul_pp r2.z, r2.y, r2.y
    mul_pp r1.w, r1.w, r2.z
    mad_pp r2.z, r0.w, -r0.w, c8.w
    mad_pp r3.x, r2.w, r2.z, r2.y
    mad_pp r2.y, r3.y, r2.z, r2.y
    mul_pp r2.y, r2.y, r2.w
    add_pp r2.z, -r2.w, c8.w
    mad r2.y, r3.y, r3.x, r2.y
    add r2.y, r2.y, c9.w
    rcp r2.y, r2.y
    add_pp r2.y, r2.y, r2.y
    mul r1.w, r1.w, r2.y
    mad r2.y, r1.w, -c11.x, c11.y
    mul_pp r1.w, r1.w, c11.x
    rsq r2.w, r1.w
    rcp_pp r2.w, r2.w
    cmp_pp r2.y, r2.y, c11.z, r2.w
    abs r2.w, c3.w
    cmp_pp r1.w, -r2.w, r2.y, r1.w
    mul_pp r1.w, r3.y, r1.w
    max_pp r2.y, r1.w, c10.x
    mul_pp r3.xzw, r1.xyyz, r2.y
    add_pp r1.w, -r2.x, c8.w
    dp2add_pp r2.x, r2.x, r2.x, c10.x
    mad_pp r0.w, r2.x, r0.w, c10.w
    mul_pp r2.x, r1.w, r1.w
    mul_pp r2.x, r2.x, r2.x
    mul_pp r1.w, r1.w, r2.x
    mov r4, c2
    mad_pp r2.xyw, c5.xyzz, r0.xyzz, -r4.xyzz
    mul_pp r0.xyz, r0, c5
    mad_pp r2.xyw, c6.x, r2, r4.xyzz
    lrp_pp r4.xyz, r1.w, c8.w, r2.xyww
    mul_pp r2.xyw, r3.xzzw, r4.xyzz
    mul_pp r1.w, r2.z, r2.z
    mul_pp r1.w, r1.w, r1.w
    mul_pp r1.w, r2.z, r1.w
    mad_pp r1.w, r0.w, r1.w, c8.w
    add_pp r2.z, -r3.y, c8.w
    mul_pp r3.x, r2.z, r2.z
    mul_pp r3.x, r3.x, r3.x
    mul_pp r2.z, r2.z, r3.x
    mad_pp r0.w, r0.w, r2.z, c8.w
    mul_pp r0.w, r1.w, r0.w
    mul_pp r0.w, r3.y, r0.w
    mul_pp r1.xyz, r0.w, r1
    mad_pp r0.w, c6.x, -r4.w, r4.w
    mul_pp r0.xyz, r0.w, r0
    mad_pp oC0.xyz, r0, r1, r2.xyww

// approximately 113 instruction slots used (6 texture, 107 arithmetic)
"
}
SubProgram "d3d11 " {
// Stats: 91 math, 6 textures
Keywords { "POINT" "SHADOWS_CUBE" "SHADOWS_SOFT" "_ALPHABLEND_ON" }
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_LightTexture0] 2D 2
SetTexture 2 [_ShadowMapTexture] CUBE 1
ConstBuffer "$Globals" 304
Vector 32 [unity_ColorSpaceDielectricSpec]
Vector 48 [unity_ColorSpaceLuminance]
Vector 96 [_LightColor0]
Vector 128 [_Color]
Float 200 [_Metallic]
Float 204 [_Glossiness]
ConstBuffer "UnityLighting" 720
Vector 16 [_LightPositionRange]
ConstBuffer "UnityShadows" 416
Vector 384 [_LightShadowData]
BindCB  "$Globals" 0
BindCB  "UnityLighting" 1
BindCB  "UnityShadows" 2
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer cb0[13], immediateIndexed
      dcl_constantbuffer cb1[2], immediateIndexed
      dcl_constantbuffer cb2[25], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texturecube (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: dp3 r0.x, v7.xyzx, v7.xyzx
   1: sqrt r0.x, r0.x
   2: mul r0.x, r0.x, cb1[1].w
   3: mul r0.x, r0.x, l(0.970000)
   4: add r0.yzw, v7.xxyz, l(0.000000, 0.007812, 0.007812, 0.007812)
   5: sample r1.xyzw, r0.yzwy, t2.xyzw, s1
   6: add r0.yzw, v7.xxyz, l(0.000000, -0.007812, -0.007812, 0.007812)
   7: sample r2.xyzw, r0.yzwy, t2.xyzw, s1
   8: mov r1.y, r2.x
   9: add r0.yzw, v7.xxyz, l(0.000000, -0.007812, 0.007812, -0.007812)
  10: sample r2.xyzw, r0.yzwy, t2.xyzw, s1
  11: mov r1.z, r2.x
  12: add r0.yzw, v7.xxyz, l(0.000000, 0.007812, -0.007812, -0.007812)
  13: sample r2.xyzw, r0.yzwy, t2.xyzw, s1
  14: mov r1.w, r2.x
  15: lt r0.xyzw, r1.xyzw, r0.xxxx
  16: movc r0.xyzw, r0.xyzw, cb2[24].xxxx, l(1.000000,1.000000,1.000000,1.000000)
  17: dp4 r0.x, r0.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
  18: dp3 r0.y, v6.xyzx, v6.xyzx
  19: sample r1.xyzw, r0.yyyy, t1.xyzw, s2
  20: mul r0.x, r0.x, r1.x
  21: mul r0.xyz, r0.xxxx, cb0[6].xyzx
  22: dp3 r0.w, v5.xyzx, v5.xyzx
  23: rsq r0.w, r0.w
  24: mul r1.xyz, r0.wwww, v5.xyzx
  25: dp3 r0.w, v2.xyzx, v2.xyzx
  26: rsq r0.w, r0.w
  27: mul r2.xyz, r0.wwww, v2.xyzx
  28: dp3 r0.w, r1.xyzx, -r2.xyzx
  29: add r1.w, -r0.w, l(0.000010)
  30: lt r0.w, r0.w, l(0.000000)
  31: mad r3.xyz, -r2.xyzx, r1.wwww, r1.xyzx
  32: movc r1.xyz, r0.wwww, r3.xyzx, r1.xyzx
  33: mov r3.x, v3.w
  34: mov r3.y, v4.w
  35: mov r3.z, v5.w
  36: dp3 r0.w, r3.xyzx, r3.xyzx
  37: rsq r0.w, r0.w
  38: mad r4.xyz, r3.xyzx, r0.wwww, -r2.xyzx
  39: dp3 r1.w, r1.xyzx, -r2.xyzx
  40: mul r2.xyz, r0.wwww, r3.xyzx
  41: dp3 r0.w, r4.xyzx, r4.xyzx
  42: max r0.w, r0.w, l(0.001000)
  43: rsq r0.w, r0.w
  44: mul r3.xyz, r0.wwww, r4.xyzx
  45: dp3 r0.w, r1.xyzx, r3.xyzx
  46: dp3 r1.x, r1.xyzx, r2.xyzx
  47: dp3 r1.y, r2.xyzx, r3.xyzx
  48: max r1.xyw, r1.xyxw, l(0.000000, 0.000000, 0.000000, 0.000000)
  49: max r0.w, r0.w, l(0.000000)
  50: mul r0.w, r0.w, r0.w
  51: add r1.z, -cb0[12].w, l(1.000000)
  52: mul r2.x, r1.z, r1.z
  53: mad r2.y, r2.x, r2.x, l(-1.000000)
  54: mad r0.w, r0.w, r2.y, l(1.000000)
  55: mul r0.w, r0.w, r0.w
  56: mad r0.w, r0.w, l(3.141593), l(0.000000)
  57: mul r2.y, r2.x, r2.x
  58: div r0.w, r2.y, r0.w
  59: mad r2.y, -r1.z, r1.z, l(1.000000)
  60: mad r2.z, r1.w, r2.y, r2.x
  61: mad r2.x, r1.x, r2.y, r2.x
  62: mul r2.x, r1.w, r2.x
  63: add r1.w, -r1.w, l(1.000000)
  64: mad r2.x, r1.x, r2.z, r2.x
  65: add r2.x, r2.x, l(0.000010)
  66: div r2.x, l(2.000000), r2.x
  67: mul r0.w, r0.w, r2.x
  68: mul r0.w, r0.w, l(0.785398)
  69: max r2.x, r0.w, l(0.000100)
  70: sqrt r2.x, r2.x
  71: eq r2.y, cb0[3].w, l(0.000000)
  72: movc r0.w, r2.y, r2.x, r0.w
  73: mul r0.w, r1.x, r0.w
  74: max r0.w, r0.w, l(0.000000)
  75: mul r2.xyz, r0.xyzx, r0.wwww
  76: add r0.w, -r1.y, l(1.000000)
  77: mul r1.y, r1.y, r1.y
  78: dp2 r1.y, r1.yyyy, r1.zzzz
  79: add r1.y, r1.y, l(-0.500000)
  80: mul r1.z, r0.w, r0.w
  81: mul r1.z, r1.z, r1.z
  82: mul r0.w, r0.w, r1.z
  83: sample r3.xyzw, v1.xyxx, t0.xyzw, s0
  84: mad r4.xyz, cb0[8].xyzx, r3.xyzx, -cb0[2].xyzx
  85: mad r4.xyz, cb0[12].zzzz, r4.xyzx, cb0[2].xyzx
  86: add r5.xyz, -r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  87: mad r4.xyz, r5.xyzx, r0.wwww, r4.xyzx
  88: mul r2.xyz, r2.xyzx, r4.xyzx
  89: mul r0.w, r1.w, r1.w
  90: mul r0.w, r0.w, r0.w
  91: mul r0.w, r1.w, r0.w
  92: mad r0.w, r1.y, r0.w, l(1.000000)
  93: add r1.z, -r1.x, l(1.000000)
  94: mul r1.w, r1.z, r1.z
  95: mul r1.w, r1.w, r1.w
  96: mul r1.z, r1.z, r1.w
  97: mad r1.y, r1.y, r1.z, l(1.000000)
  98: mul r0.w, r0.w, r1.y
  99: mul r0.w, r1.x, r0.w
 100: mul r0.xyz, r0.wwww, r0.xyzx
 101: mul r1.xyz, r3.xyzx, cb0[8].xyzx
 102: mul o0.w, r3.w, cb0[8].w
 103: mad r0.w, -cb0[12].z, cb0[2].w, cb0[2].w
 104: mul r1.xyz, r0.wwww, r1.xyzx
 105: mad o0.xyz, r1.xyzx, r0.xyzx, r2.xyzx
 106: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "SHADOWS_SOFT" "_ALPHABLEND_ON" }
"// shader disassembly not supported on opengl"
}
SubProgram "d3d9 " {
// Stats: 109 math, 7 textures
Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "SHADOWS_SOFT" "_ALPHABLEND_ON" }
Vector 5 [_Color]
Float 7 [_Glossiness]
Vector 4 [_LightColor0]
Vector 0 [_LightPositionRange]
Vector 1 [_LightShadowData]
Float 6 [_Metallic]
Vector 2 [unity_ColorSpaceDielectricSpec]
Vector 3 [unity_ColorSpaceLuminance]
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_ShadowMapTexture] CUBE 1
SetTexture 2 [_LightTexture0] CUBE 2
SetTexture 3 [_LightTextureB0] 2D 3
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   float4 _LightPositionRange;
//   float4 _LightShadowData;
//   samplerCUBE _LightTexture0;
//   sampler2D _LightTextureB0;
//   sampler2D _MainTex;
//   float _Metallic;
//   samplerCUBE _ShadowMapTexture;
//   float4 unity_ColorSpaceDielectricSpec;
//   float4 unity_ColorSpaceLuminance;
//
//
// Registers:
//
//   Name                           Reg   Size
//   ------------------------------ ----- ----
//   _LightPositionRange            c0       1
//   _LightShadowData               c1       1
//   unity_ColorSpaceDielectricSpec c2       1
//   unity_ColorSpaceLuminance      c3       1
//   _LightColor0                   c4       1
//   _Color                         c5       1
//   _Metallic                      c6       1
//   _Glossiness                    c7       1
//   _MainTex                       s0       1
//   _ShadowMapTexture              s1       1
//   _LightTexture0                 s2       1
//   _LightTextureB0                s3       1
//

    ps_3_0
    def c8, 0.0078125, -0.0078125, 0.970000029, 1
    def c9, 0.25, 0.00100000005, 31.622776, 9.99999975e-06
    def c10, 0, 3.14159274, 1.00000001e-07, -0.5
    def c11, 0.785398185, 9.99999975e-05, 0.00999999978, 0
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2_pp v2.w
    dcl_texcoord3_pp v3.w
    dcl_texcoord4_pp v4
    dcl_texcoord5 v5.xyz
    dcl_texcoord6 v6.xyz
    dcl_2d s0
    dcl_cube s1
    dcl_cube s2
    dcl_2d s3
    texld r0, v0, s0
    mul_pp oC0.w, r0.w, c5.w
    dp3 r0.w, v6, v6
    rsq r0.w, r0.w
    rcp r0.w, r0.w
    mul r0.w, r0.w, c0.w
    add r1.xyz, c8.x, v6
    texld r1, r1, s1
    add r2.xyz, c8.yyxw, v6
    texld r2, r2, s1
    mov r1.y, r2.x
    add r2.xyz, c8.yxyw, v6
    texld r2, r2, s1
    mov r1.z, r2.x
    add r2.xyz, c8.xyyw, v6
    texld r2, r2, s1
    mov r1.w, r2.x
    mad r1, r0.w, -c8.z, r1
    mov r0.w, c8.w
    cmp_pp r1, r1, r0.w, c1.x
    dp4_pp r1.x, r1, c9.x
    dp3 r1.y, v5, v5
    texld r2, r1.y, s3
    texld r3, v5, s2
    mul r1.y, r2.x, r3.w
    mul_pp r1.x, r1.x, r1.y
    mul_pp r1.xyz, r1.x, c4
    mov_pp r2.x, v2.w
    mov_pp r2.y, v3.w
    mov_pp r2.z, v4.w
    dp3_pp r1.w, r2, r2
    rsq_pp r1.w, r1.w
    nrm_pp r3.xyz, v1
    mad_pp r4.xyz, r2, r1.w, -r3
    mul_pp r2.xyz, r1.w, r2
    dp3_pp r1.w, r4, r4
    add r2.w, -r1.w, c9.y
    rsq_pp r1.w, r1.w
    cmp_pp r1.w, r2.w, c9.z, r1.w
    mul_pp r4.xyz, r1.w, r4
    nrm_pp r5.xyz, v4
    dp3_pp r1.w, r5, -r3
    add r2.w, -r1.w, c9.w
    mad_pp r6.xyz, -r3, r2.w, r5
    cmp_pp r5.xyz, r1.w, r5, r6
    dp3_pp r1.w, r5, -r3
    max_pp r2.w, r1.w, c10.x
    dp3_pp r1.w, r5, r4
    dp3_pp r3.x, r2, r4
    dp3_pp r2.x, r5, r2
    max_pp r3.y, r2.x, c10.x
    max_pp r2.x, r3.x, c10.x
    max_pp r2.y, r1.w, c10.x
    mul r1.w, r2.y, r2.y
    add_pp r0.w, r0.w, -c7.x
    mul_pp r2.y, r0.w, r0.w
    mad r2.z, r2.y, r2.y, -c8.w
    mad_pp r1.w, r1.w, r2.z, c8.w
    mul r1.w, r1.w, r1.w
    mad r1.w, r1.w, c10.y, c10.z
    rcp r1.w, r1.w
    mul_pp r2.z, r2.y, r2.y
    mul_pp r1.w, r1.w, r2.z
    mad_pp r2.z, r0.w, -r0.w, c8.w
    mad_pp r3.x, r2.w, r2.z, r2.y
    mad_pp r2.y, r3.y, r2.z, r2.y
    mul_pp r2.y, r2.y, r2.w
    add_pp r2.z, -r2.w, c8.w
    mad r2.y, r3.y, r3.x, r2.y
    add r2.y, r2.y, c9.w
    rcp r2.y, r2.y
    add_pp r2.y, r2.y, r2.y
    mul r1.w, r1.w, r2.y
    mad r2.y, r1.w, -c11.x, c11.y
    mul_pp r1.w, r1.w, c11.x
    rsq r2.w, r1.w
    rcp_pp r2.w, r2.w
    cmp_pp r2.y, r2.y, c11.z, r2.w
    abs r2.w, c3.w
    cmp_pp r1.w, -r2.w, r2.y, r1.w
    mul_pp r1.w, r3.y, r1.w
    max_pp r2.y, r1.w, c10.x
    mul_pp r3.xzw, r1.xyyz, r2.y
    add_pp r1.w, -r2.x, c8.w
    dp2add_pp r2.x, r2.x, r2.x, c10.x
    mad_pp r0.w, r2.x, r0.w, c10.w
    mul_pp r2.x, r1.w, r1.w
    mul_pp r2.x, r2.x, r2.x
    mul_pp r1.w, r1.w, r2.x
    mov r4, c2
    mad_pp r2.xyw, c5.xyzz, r0.xyzz, -r4.xyzz
    mul_pp r0.xyz, r0, c5
    mad_pp r2.xyw, c6.x, r2, r4.xyzz
    lrp_pp r4.xyz, r1.w, c8.w, r2.xyww
    mul_pp r2.xyw, r3.xzzw, r4.xyzz
    mul_pp r1.w, r2.z, r2.z
    mul_pp r1.w, r1.w, r1.w
    mul_pp r1.w, r2.z, r1.w
    mad_pp r1.w, r0.w, r1.w, c8.w
    add_pp r2.z, -r3.y, c8.w
    mul_pp r3.x, r2.z, r2.z
    mul_pp r3.x, r3.x, r3.x
    mul_pp r2.z, r2.z, r3.x
    mad_pp r0.w, r0.w, r2.z, c8.w
    mul_pp r0.w, r1.w, r0.w
    mul_pp r0.w, r3.y, r0.w
    mul_pp r1.xyz, r0.w, r1
    mad_pp r0.w, c6.x, -r4.w, r4.w
    mul_pp r0.xyz, r0.w, r0
    mad_pp oC0.xyz, r0, r1, r2.xyww

// approximately 115 instruction slots used (7 texture, 108 arithmetic)
"
}
SubProgram "d3d11 " {
// Stats: 92 math, 7 textures
Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "SHADOWS_SOFT" "_ALPHABLEND_ON" }
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_LightTextureB0] 2D 3
SetTexture 2 [_LightTexture0] CUBE 2
SetTexture 3 [_ShadowMapTexture] CUBE 1
ConstBuffer "$Globals" 304
Vector 32 [unity_ColorSpaceDielectricSpec]
Vector 48 [unity_ColorSpaceLuminance]
Vector 96 [_LightColor0]
Vector 128 [_Color]
Float 200 [_Metallic]
Float 204 [_Glossiness]
ConstBuffer "UnityLighting" 720
Vector 16 [_LightPositionRange]
ConstBuffer "UnityShadows" 416
Vector 384 [_LightShadowData]
BindCB  "$Globals" 0
BindCB  "UnityLighting" 1
BindCB  "UnityShadows" 2
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer cb0[13], immediateIndexed
      dcl_constantbuffer cb1[2], immediateIndexed
      dcl_constantbuffer cb2[25], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texturecube (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: dp3 r0.x, v7.xyzx, v7.xyzx
   1: sqrt r0.x, r0.x
   2: mul r0.x, r0.x, cb1[1].w
   3: mul r0.x, r0.x, l(0.970000)
   4: add r0.yzw, v7.xxyz, l(0.000000, 0.007812, 0.007812, 0.007812)
   5: sample r1.xyzw, r0.yzwy, t3.xyzw, s1
   6: add r0.yzw, v7.xxyz, l(0.000000, -0.007812, -0.007812, 0.007812)
   7: sample r2.xyzw, r0.yzwy, t3.xyzw, s1
   8: mov r1.y, r2.x
   9: add r0.yzw, v7.xxyz, l(0.000000, -0.007812, 0.007812, -0.007812)
  10: sample r2.xyzw, r0.yzwy, t3.xyzw, s1
  11: mov r1.z, r2.x
  12: add r0.yzw, v7.xxyz, l(0.000000, 0.007812, -0.007812, -0.007812)
  13: sample r2.xyzw, r0.yzwy, t3.xyzw, s1
  14: mov r1.w, r2.x
  15: lt r0.xyzw, r1.xyzw, r0.xxxx
  16: movc r0.xyzw, r0.xyzw, cb2[24].xxxx, l(1.000000,1.000000,1.000000,1.000000)
  17: dp4 r0.x, r0.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
  18: dp3 r0.y, v6.xyzx, v6.xyzx
  19: sample r1.xyzw, r0.yyyy, t1.xyzw, s3
  20: sample r2.xyzw, v6.xyzx, t2.xyzw, s2
  21: mul r0.y, r1.x, r2.w
  22: mul r0.x, r0.x, r0.y
  23: mul r0.xyz, r0.xxxx, cb0[6].xyzx
  24: dp3 r0.w, v5.xyzx, v5.xyzx
  25: rsq r0.w, r0.w
  26: mul r1.xyz, r0.wwww, v5.xyzx
  27: dp3 r0.w, v2.xyzx, v2.xyzx
  28: rsq r0.w, r0.w
  29: mul r2.xyz, r0.wwww, v2.xyzx
  30: dp3 r0.w, r1.xyzx, -r2.xyzx
  31: add r1.w, -r0.w, l(0.000010)
  32: lt r0.w, r0.w, l(0.000000)
  33: mad r3.xyz, -r2.xyzx, r1.wwww, r1.xyzx
  34: movc r1.xyz, r0.wwww, r3.xyzx, r1.xyzx
  35: mov r3.x, v3.w
  36: mov r3.y, v4.w
  37: mov r3.z, v5.w
  38: dp3 r0.w, r3.xyzx, r3.xyzx
  39: rsq r0.w, r0.w
  40: mad r4.xyz, r3.xyzx, r0.wwww, -r2.xyzx
  41: dp3 r1.w, r1.xyzx, -r2.xyzx
  42: mul r2.xyz, r0.wwww, r3.xyzx
  43: dp3 r0.w, r4.xyzx, r4.xyzx
  44: max r0.w, r0.w, l(0.001000)
  45: rsq r0.w, r0.w
  46: mul r3.xyz, r0.wwww, r4.xyzx
  47: dp3 r0.w, r1.xyzx, r3.xyzx
  48: dp3 r1.x, r1.xyzx, r2.xyzx
  49: dp3 r1.y, r2.xyzx, r3.xyzx
  50: max r1.xyw, r1.xyxw, l(0.000000, 0.000000, 0.000000, 0.000000)
  51: max r0.w, r0.w, l(0.000000)
  52: mul r0.w, r0.w, r0.w
  53: add r1.z, -cb0[12].w, l(1.000000)
  54: mul r2.x, r1.z, r1.z
  55: mad r2.y, r2.x, r2.x, l(-1.000000)
  56: mad r0.w, r0.w, r2.y, l(1.000000)
  57: mul r0.w, r0.w, r0.w
  58: mad r0.w, r0.w, l(3.141593), l(0.000000)
  59: mul r2.y, r2.x, r2.x
  60: div r0.w, r2.y, r0.w
  61: mad r2.y, -r1.z, r1.z, l(1.000000)
  62: mad r2.z, r1.w, r2.y, r2.x
  63: mad r2.x, r1.x, r2.y, r2.x
  64: mul r2.x, r1.w, r2.x
  65: add r1.w, -r1.w, l(1.000000)
  66: mad r2.x, r1.x, r2.z, r2.x
  67: add r2.x, r2.x, l(0.000010)
  68: div r2.x, l(2.000000), r2.x
  69: mul r0.w, r0.w, r2.x
  70: mul r0.w, r0.w, l(0.785398)
  71: max r2.x, r0.w, l(0.000100)
  72: sqrt r2.x, r2.x
  73: eq r2.y, cb0[3].w, l(0.000000)
  74: movc r0.w, r2.y, r2.x, r0.w
  75: mul r0.w, r1.x, r0.w
  76: max r0.w, r0.w, l(0.000000)
  77: mul r2.xyz, r0.xyzx, r0.wwww
  78: add r0.w, -r1.y, l(1.000000)
  79: mul r1.y, r1.y, r1.y
  80: dp2 r1.y, r1.yyyy, r1.zzzz
  81: add r1.y, r1.y, l(-0.500000)
  82: mul r1.z, r0.w, r0.w
  83: mul r1.z, r1.z, r1.z
  84: mul r0.w, r0.w, r1.z
  85: sample r3.xyzw, v1.xyxx, t0.xyzw, s0
  86: mad r4.xyz, cb0[8].xyzx, r3.xyzx, -cb0[2].xyzx
  87: mad r4.xyz, cb0[12].zzzz, r4.xyzx, cb0[2].xyzx
  88: add r5.xyz, -r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  89: mad r4.xyz, r5.xyzx, r0.wwww, r4.xyzx
  90: mul r2.xyz, r2.xyzx, r4.xyzx
  91: mul r0.w, r1.w, r1.w
  92: mul r0.w, r0.w, r0.w
  93: mul r0.w, r1.w, r0.w
  94: mad r0.w, r1.y, r0.w, l(1.000000)
  95: add r1.z, -r1.x, l(1.000000)
  96: mul r1.w, r1.z, r1.z
  97: mul r1.w, r1.w, r1.w
  98: mul r1.z, r1.z, r1.w
  99: mad r1.y, r1.y, r1.z, l(1.000000)
 100: mul r0.w, r0.w, r1.y
 101: mul r0.w, r1.x, r0.w
 102: mul r0.xyz, r0.wwww, r0.xyzx
 103: mul r1.xyz, r3.xyzx, cb0[8].xyzx
 104: mul o0.w, r3.w, cb0[8].w
 105: mad r0.w, -cb0[12].z, cb0[2].w, cb0[2].w
 106: mul r1.xyz, r0.wwww, r1.xyzx
 107: mad o0.xyz, r1.xyzx, r0.xyzx, r2.xyzx
 108: ret 
// Approximately 0 instruction slots used
"
}
}
 }


 // Stats for Vertex shader:
 //       d3d11 : 25 avg math (9..42)
 //        d3d9 : 25 avg math (8..42)
 //      opengl : 5 avg math (1..9), 1 avg texture (0..3), 0 avg branch (0..1)
 // Stats for Fragment shader:
 //       d3d11 : 6 avg math (4..9), 1 avg texture (0..2)
 //        d3d9 : 5 avg math (2..9), 1 avg texture (0..3)
 Pass {
  Name "SHADOWCASTER"
  Tags { "LIGHTMODE"="SHADOWCASTER" "SHADOWSUPPORT"="true" "RenderType"="Opaque" "PerformanceChecks"="False" }
  GpuProgramID 147192
Program "vp" {
SubProgram "opengl " {
// Stats: 1 math
Keywords { "SHADOWS_DEPTH" }
"#version 120

#ifdef VERTEX
uniform vec4 _WorldSpaceLightPos0;
uniform vec4 unity_LightShadowBias;

uniform mat4 _Object2World;
uniform mat4 _World2Object;
uniform mat4 unity_MatrixVP;
void main ()
{
  vec3 vertex_1;
  vertex_1 = gl_Vertex.xyz;
  vec4 clipPos_2;
  if ((unity_LightShadowBias.z != 0.0)) {
    vec4 tmpvar_3;
    tmpvar_3.w = 1.0;
    tmpvar_3.xyz = vertex_1;
    vec3 tmpvar_4;
    tmpvar_4 = (_Object2World * tmpvar_3).xyz;
    vec4 v_5;
    v_5.x = _World2Object[0].x;
    v_5.y = _World2Object[1].x;
    v_5.z = _World2Object[2].x;
    v_5.w = _World2Object[3].x;
    vec4 v_6;
    v_6.x = _World2Object[0].y;
    v_6.y = _World2Object[1].y;
    v_6.z = _World2Object[2].y;
    v_6.w = _World2Object[3].y;
    vec4 v_7;
    v_7.x = _World2Object[0].z;
    v_7.y = _World2Object[1].z;
    v_7.z = _World2Object[2].z;
    v_7.w = _World2Object[3].z;
    vec3 tmpvar_8;
    tmpvar_8 = normalize(((
      (v_5.xyz * gl_Normal.x)
     + 
      (v_6.xyz * gl_Normal.y)
    ) + (v_7.xyz * gl_Normal.z)));
    float tmpvar_9;
    tmpvar_9 = dot (tmpvar_8, normalize((_WorldSpaceLightPos0.xyz - 
      (tmpvar_4 * _WorldSpaceLightPos0.w)
    )));
    vec4 tmpvar_10;
    tmpvar_10.w = 1.0;
    tmpvar_10.xyz = (tmpvar_4 - (tmpvar_8 * (unity_LightShadowBias.z * 
      sqrt((1.0 - (tmpvar_9 * tmpvar_9)))
    )));
    clipPos_2 = (unity_MatrixVP * tmpvar_10);
  } else {
    vec4 tmpvar_11;
    tmpvar_11.w = 1.0;
    tmpvar_11.xyz = vertex_1;
    clipPos_2 = (gl_ModelViewProjectionMatrix * tmpvar_11);
  };
  vec4 clipPos_12;
  clipPos_12.xyw = clipPos_2.xyw;
  clipPos_12.z = (clipPos_2.z + clamp ((unity_LightShadowBias.x / clipPos_2.w), 0.0, 1.0));
  clipPos_12.z = mix (clipPos_12.z, max (clipPos_12.z, -(clipPos_2.w)), unity_LightShadowBias.y);
  gl_Position = clipPos_12;
}


#endif
#ifdef FRAGMENT
void main ()
{
  gl_FragData[0] = vec4(0.0, 0.0, 0.0, 0.0);
}


#endif
"
}
SubProgram "d3d9 " {
// Stats: 41 math
Keywords { "SHADOWS_DEPTH" }
Bind "vertex" Vertex
Bind "normal" Normal
Matrix 8 [_Object2World] 3
Matrix 11 [_World2Object] 3
Matrix 0 [glstate_matrix_mvp]
Matrix 4 [unity_MatrixVP]
Vector 14 [_WorldSpaceLightPos0]
Vector 15 [unity_LightShadowBias]
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   row_major float4x4 _Object2World;
//   row_major float4x4 _World2Object;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 glstate_matrix_mvp;
//   float4 unity_LightShadowBias;
//   row_major float4x4 unity_MatrixVP;
//
//
// Registers:
//
//   Name                  Reg   Size
//   --------------------- ----- ----
//   glstate_matrix_mvp    c0       4
//   unity_MatrixVP        c4       4
//   _Object2World         c8       3
//   _World2Object         c11      3
//   _WorldSpaceLightPos0  c14      1
//   unity_LightShadowBias c15      1
//

    vs_3_0
    def c16, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord o0
    dcl_position o1
    abs r0.x, c15.z
    slt r0.x, -r0.x, r0.x
    mul r0.yzw, c12.xxyz, v1.y
    mad r0.yzw, c11.xxyz, v1.x, r0
    mad r0.yzw, c13.xxyz, v1.z, r0
    nrm r1.xyz, r0.yzww
    mad r2, v0.xyzx, c16.xxxy, c16.yyyx
    dp4 r3.x, c8, r2
    dp4 r3.y, c9, r2
    dp4 r3.z, c10, r2
    mad r0.yzw, r3.xxyz, -c14.w, c14.xxyz
    nrm r4.xyz, r0.yzww
    dp3 r0.y, r1, r4
    mad r0.y, r0.y, -r0.y, c16.x
    rsq r0.y, r0.y
    rcp r0.y, r0.y
    mul r0.y, r0.y, c15.z
    mad r1.xyz, r1, -r0.y, r3
    mov r1.w, c16.x
    dp4 r3.x, c4, r1
    dp4 r3.y, c5, r1
    dp4 r3.z, c6, r1
    dp4 r3.w, c7, r1
    dp4 r1.x, c0, r2
    dp4 r1.y, c1, r2
    dp4 r1.z, c2, r2
    dp4 r1.w, c3, r2
    lrp r2, r0.x, r3, r1
    rcp r0.x, r2.w
    mul_sat r0.x, r0.x, c15.x
    add r0.x, r0.x, r2.z
    max r0.y, r0.x, c16.y
    lrp r2.z, c15.y, r0.y, r0.x
    mov o0, r2
    mov o1, r2

// approximately 39 instruction slots used
"
}
SubProgram "d3d11 " {
// Stats: 41 math
Keywords { "SHADOWS_DEPTH" }
Bind "vertex" Vertex
Bind "normal" Normal
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
ConstBuffer "UnityShadows" 416
Vector 80 [unity_LightShadowBias]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
ConstBuffer "UnityPerFrame" 256
Matrix 144 [unity_MatrixVP]
BindCB  "UnityLighting" 0
BindCB  "UnityShadows" 1
BindCB  "UnityPerDraw" 2
BindCB  "UnityPerFrame" 3
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
//
      vs_4_0
      dcl_constantbuffer cb0[1], immediateIndexed
      dcl_constantbuffer cb1[6], immediateIndexed
      dcl_constantbuffer cb2[19], immediateIndexed
      dcl_constantbuffer cb3[13], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_output_siv o0.xyzw, position
      dcl_temps 3
   0: mul r0.x, v1.x, cb2[16].x
   1: mul r0.y, v1.x, cb2[17].x
   2: mul r0.z, v1.x, cb2[18].x
   3: mul r1.x, v1.y, cb2[16].y
   4: mul r1.y, v1.y, cb2[17].y
   5: mul r1.z, v1.y, cb2[18].y
   6: add r0.xyz, r0.xyzx, r1.xyzx
   7: mul r1.x, v1.z, cb2[16].z
   8: mul r1.y, v1.z, cb2[17].z
   9: mul r1.z, v1.z, cb2[18].z
  10: add r0.xyz, r0.xyzx, r1.xyzx
  11: dp3 r0.w, r0.xyzx, r0.xyzx
  12: rsq r0.w, r0.w
  13: mul r0.xyz, r0.wwww, r0.xyzx
  14: mul r1.xyz, v0.yyyy, cb2[13].xyzx
  15: mad r1.xyz, cb2[12].xyzx, v0.xxxx, r1.xyzx
  16: mad r1.xyz, cb2[14].xyzx, v0.zzzz, r1.xyzx
  17: add r1.xyz, r1.xyzx, cb2[15].xyzx
  18: mad r2.xyz, -r1.xyzx, cb0[0].wwww, cb0[0].xyzx
  19: dp3 r0.w, r2.xyzx, r2.xyzx
  20: rsq r0.w, r0.w
  21: mul r2.xyz, r0.wwww, r2.xyzx
  22: dp3 r0.w, r0.xyzx, r2.xyzx
  23: mad r0.w, -r0.w, r0.w, l(1.000000)
  24: sqrt r0.w, r0.w
  25: mul r0.w, r0.w, cb1[5].z
  26: mad r0.xyz, -r0.xyzx, r0.wwww, r1.xyzx
  27: mul r1.xyzw, r0.yyyy, cb3[10].xyzw
  28: mad r1.xyzw, cb3[9].xyzw, r0.xxxx, r1.xyzw
  29: mad r0.xyzw, cb3[11].xyzw, r0.zzzz, r1.xyzw
  30: add r0.xyzw, r0.xyzw, cb3[12].xyzw
  31: mul r1.xyzw, v0.yyyy, cb2[1].xyzw
  32: mad r1.xyzw, cb2[0].xyzw, v0.xxxx, r1.xyzw
  33: mad r1.xyzw, cb2[2].xyzw, v0.zzzz, r1.xyzw
  34: add r1.xyzw, r1.xyzw, cb2[3].xyzw
  35: ne r2.x, cb1[5].z, l(0.000000)
  36: movc r0.xyzw, r2.xxxx, r0.xyzw, r1.xyzw
  37: div_sat r1.x, cb1[5].x, r0.w
  38: add r0.z, r0.z, r1.x
  39: mov o0.xyw, r0.xyxw
  40: max r0.x, r0.z, l(0.000000)
  41: add r0.x, -r0.z, r0.x
  42: mad o0.z, cb1[5].y, r0.x, r0.z
  43: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
// Stats: 4 math
Keywords { "SHADOWS_CUBE" }
"#version 120

#ifdef VERTEX
uniform vec4 _LightPositionRange;

uniform mat4 _Object2World;
varying vec3 xlv_TEXCOORD0;
void main ()
{
  xlv_TEXCOORD0 = ((_Object2World * gl_Vertex).xyz - _LightPositionRange.xyz);
  gl_Position = (gl_ModelViewProjectionMatrix * gl_Vertex);
}


#endif
#ifdef FRAGMENT
uniform vec4 _LightPositionRange;
uniform vec4 unity_LightShadowBias;
varying vec3 xlv_TEXCOORD0;
void main ()
{
  gl_FragData[0] = vec4(((sqrt(
    dot (xlv_TEXCOORD0, xlv_TEXCOORD0)
  ) + unity_LightShadowBias.x) * _LightPositionRange.w));
}


#endif
"
}
SubProgram "d3d9 " {
// Stats: 8 math
Keywords { "SHADOWS_CUBE" }
Bind "vertex" Vertex
Matrix 4 [_Object2World] 3
Matrix 0 [glstate_matrix_mvp]
Vector 7 [_LightPositionRange]
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _LightPositionRange;
//   row_major float4x4 _Object2World;
//   row_major float4x4 glstate_matrix_mvp;
//
//
// Registers:
//
//   Name                Reg   Size
//   ------------------- ----- ----
//   glstate_matrix_mvp  c0       4
//   _Object2World       c4       3
//   _LightPositionRange c7       1
//

    vs_3_0
    dcl_position v0
    dcl_texcoord o0.xyz
    dcl_position o1
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add o0.xyz, r0, -c7
    dp4 o1.x, c0, v0
    dp4 o1.y, c1, v0
    dp4 o1.z, c2, v0
    dp4 o1.w, c3, v0

// approximately 8 instruction slots used
"
}
SubProgram "d3d11 " {
// Stats: 9 math
Keywords { "SHADOWS_CUBE" }
Bind "vertex" Vertex
ConstBuffer "UnityLighting" 720
Vector 16 [_LightPositionRange]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
BindCB  "UnityLighting" 0
BindCB  "UnityPerDraw" 1
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float       
// TEXCOORD                 0   xy          2     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyz         0     NONE   float   xyz 
// SV_POSITION              0   xyzw        1      POS   float   xyzw
//
      vs_4_0
      dcl_constantbuffer cb0[2], immediateIndexed
      dcl_constantbuffer cb1[16], immediateIndexed
      dcl_input v0.xyzw
      dcl_output o0.xyz
      dcl_output_siv o1.xyzw, position
      dcl_temps 1
   0: mul r0.xyz, v0.yyyy, cb1[13].xyzx
   1: mad r0.xyz, cb1[12].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[14].xyzx, v0.zzzz, r0.xyzx
   3: mad r0.xyz, cb1[15].xyzx, v0.wwww, r0.xyzx
   4: add o0.xyz, r0.xyzx, -cb0[1].xyzx
   5: mul r0.xyzw, v0.yyyy, cb1[1].xyzw
   6: mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
   7: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   8: mad o1.xyzw, cb1[3].xyzw, v0.wwww, r0.xyzw
   9: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
// Stats: 6 math, 3 textures, 1 branches
Keywords { "SHADOWS_DEPTH" "_ALPHABLEND_ON" }
"#version 120

#ifdef VERTEX
uniform vec4 _WorldSpaceLightPos0;
uniform vec4 unity_LightShadowBias;

uniform mat4 _Object2World;
uniform mat4 _World2Object;
uniform mat4 unity_MatrixVP;
uniform vec4 _MainTex_ST;
varying vec2 xlv_TEXCOORD1;
void main ()
{
  vec3 vertex_1;
  vertex_1 = gl_Vertex.xyz;
  vec4 clipPos_2;
  if ((unity_LightShadowBias.z != 0.0)) {
    vec4 tmpvar_3;
    tmpvar_3.w = 1.0;
    tmpvar_3.xyz = vertex_1;
    vec3 tmpvar_4;
    tmpvar_4 = (_Object2World * tmpvar_3).xyz;
    vec4 v_5;
    v_5.x = _World2Object[0].x;
    v_5.y = _World2Object[1].x;
    v_5.z = _World2Object[2].x;
    v_5.w = _World2Object[3].x;
    vec4 v_6;
    v_6.x = _World2Object[0].y;
    v_6.y = _World2Object[1].y;
    v_6.z = _World2Object[2].y;
    v_6.w = _World2Object[3].y;
    vec4 v_7;
    v_7.x = _World2Object[0].z;
    v_7.y = _World2Object[1].z;
    v_7.z = _World2Object[2].z;
    v_7.w = _World2Object[3].z;
    vec3 tmpvar_8;
    tmpvar_8 = normalize(((
      (v_5.xyz * gl_Normal.x)
     + 
      (v_6.xyz * gl_Normal.y)
    ) + (v_7.xyz * gl_Normal.z)));
    float tmpvar_9;
    tmpvar_9 = dot (tmpvar_8, normalize((_WorldSpaceLightPos0.xyz - 
      (tmpvar_4 * _WorldSpaceLightPos0.w)
    )));
    vec4 tmpvar_10;
    tmpvar_10.w = 1.0;
    tmpvar_10.xyz = (tmpvar_4 - (tmpvar_8 * (unity_LightShadowBias.z * 
      sqrt((1.0 - (tmpvar_9 * tmpvar_9)))
    )));
    clipPos_2 = (unity_MatrixVP * tmpvar_10);
  } else {
    vec4 tmpvar_11;
    tmpvar_11.w = 1.0;
    tmpvar_11.xyz = vertex_1;
    clipPos_2 = (gl_ModelViewProjectionMatrix * tmpvar_11);
  };
  vec4 clipPos_12;
  clipPos_12.xyw = clipPos_2.xyw;
  clipPos_12.z = (clipPos_2.z + clamp ((unity_LightShadowBias.x / clipPos_2.w), 0.0, 1.0));
  clipPos_12.z = mix (clipPos_12.z, max (clipPos_12.z, -(clipPos_2.w)), unity_LightShadowBias.y);
  xlv_TEXCOORD1 = ((gl_MultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  gl_Position = clipPos_12;
}


#endif
#ifdef FRAGMENT
uniform vec4 _Color;
uniform sampler2D _MainTex;
uniform sampler3D _DitherMaskLOD;
varying vec2 xlv_TEXCOORD1;
void main ()
{
  vec3 tmpvar_1;
  tmpvar_1.xy = (gl_FragCoord.xy * 0.25);
  tmpvar_1.z = ((texture2D (_MainTex, xlv_TEXCOORD1).w * _Color.w) * 0.9375);
  float x_2;
  x_2 = (texture3D (_DitherMaskLOD, tmpvar_1).w - 0.01);
  if ((x_2 < 0.0)) {
    discard;
  };
  gl_FragData[0] = vec4(0.0, 0.0, 0.0, 0.0);
}


#endif
"
}
SubProgram "d3d9 " {
// Stats: 42 math
Keywords { "SHADOWS_DEPTH" "_ALPHABLEND_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Matrix 8 [_Object2World] 3
Matrix 11 [_World2Object] 3
Matrix 0 [glstate_matrix_mvp]
Matrix 4 [unity_MatrixVP]
Vector 16 [_MainTex_ST]
Vector 14 [_WorldSpaceLightPos0]
Vector 15 [unity_LightShadowBias]
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _MainTex_ST;
//   row_major float4x4 _Object2World;
//   row_major float4x4 _World2Object;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 glstate_matrix_mvp;
//   float4 unity_LightShadowBias;
//   row_major float4x4 unity_MatrixVP;
//
//
// Registers:
//
//   Name                  Reg   Size
//   --------------------- ----- ----
//   glstate_matrix_mvp    c0       4
//   unity_MatrixVP        c4       4
//   _Object2World         c8       3
//   _World2Object         c11      3
//   _WorldSpaceLightPos0  c14      1
//   unity_LightShadowBias c15      1
//   _MainTex_ST           c16      1
//

    vs_3_0
    def c17, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord o0
    dcl_texcoord1 o1.xy
    dcl_position o2
    mad o1.xy, v2, c16, c16.zwzw
    abs r0.x, c15.z
    slt r0.x, -r0.x, r0.x
    mul r0.yzw, c12.xxyz, v1.y
    mad r0.yzw, c11.xxyz, v1.x, r0
    mad r0.yzw, c13.xxyz, v1.z, r0
    nrm r1.xyz, r0.yzww
    mad r2, v0.xyzx, c17.xxxy, c17.yyyx
    dp4 r3.x, c8, r2
    dp4 r3.y, c9, r2
    dp4 r3.z, c10, r2
    mad r0.yzw, r3.xxyz, -c14.w, c14.xxyz
    nrm r4.xyz, r0.yzww
    dp3 r0.y, r1, r4
    mad r0.y, r0.y, -r0.y, c17.x
    rsq r0.y, r0.y
    rcp r0.y, r0.y
    mul r0.y, r0.y, c15.z
    mad r1.xyz, r1, -r0.y, r3
    mov r1.w, c17.x
    dp4 r3.x, c4, r1
    dp4 r3.y, c5, r1
    dp4 r3.z, c6, r1
    dp4 r3.w, c7, r1
    dp4 r1.x, c0, r2
    dp4 r1.y, c1, r2
    dp4 r1.z, c2, r2
    dp4 r1.w, c3, r2
    lrp r2, r0.x, r3, r1
    rcp r0.x, r2.w
    mul_sat r0.x, r0.x, c15.x
    add r0.x, r0.x, r2.z
    max r0.y, r0.x, c17.y
    lrp r2.z, c15.y, r0.y, r0.x
    mov o0, r2
    mov o2, r2

// approximately 40 instruction slots used
"
}
SubProgram "d3d11 " {
// Stats: 42 math
Keywords { "SHADOWS_DEPTH" "_ALPHABLEND_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
ConstBuffer "$Globals" 144
Vector 128 [_MainTex_ST]
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
ConstBuffer "UnityShadows" 416
Vector 80 [unity_LightShadowBias]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
ConstBuffer "UnityPerFrame" 256
Matrix 144 [unity_MatrixVP]
BindCB  "$Globals" 0
BindCB  "UnityLighting" 1
BindCB  "UnityShadows" 2
BindCB  "UnityPerDraw" 3
BindCB  "UnityPerFrame" 4
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 1   xy          0     NONE   float   xy  
// SV_POSITION              0   xyzw        1      POS   float   xyzw
//
      vs_4_0
      dcl_constantbuffer cb0[9], immediateIndexed
      dcl_constantbuffer cb1[1], immediateIndexed
      dcl_constantbuffer cb2[6], immediateIndexed
      dcl_constantbuffer cb3[19], immediateIndexed
      dcl_constantbuffer cb4[13], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_output o0.xy
      dcl_output_siv o1.xyzw, position
      dcl_temps 3
   0: mad o0.xy, v2.xyxx, cb0[8].xyxx, cb0[8].zwzz
   1: mul r0.x, v1.x, cb3[16].x
   2: mul r0.y, v1.x, cb3[17].x
   3: mul r0.z, v1.x, cb3[18].x
   4: mul r1.x, v1.y, cb3[16].y
   5: mul r1.y, v1.y, cb3[17].y
   6: mul r1.z, v1.y, cb3[18].y
   7: add r0.xyz, r0.xyzx, r1.xyzx
   8: mul r1.x, v1.z, cb3[16].z
   9: mul r1.y, v1.z, cb3[17].z
  10: mul r1.z, v1.z, cb3[18].z
  11: add r0.xyz, r0.xyzx, r1.xyzx
  12: dp3 r0.w, r0.xyzx, r0.xyzx
  13: rsq r0.w, r0.w
  14: mul r0.xyz, r0.wwww, r0.xyzx
  15: mul r1.xyz, v0.yyyy, cb3[13].xyzx
  16: mad r1.xyz, cb3[12].xyzx, v0.xxxx, r1.xyzx
  17: mad r1.xyz, cb3[14].xyzx, v0.zzzz, r1.xyzx
  18: add r1.xyz, r1.xyzx, cb3[15].xyzx
  19: mad r2.xyz, -r1.xyzx, cb1[0].wwww, cb1[0].xyzx
  20: dp3 r0.w, r2.xyzx, r2.xyzx
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, r2.xyzx
  23: dp3 r0.w, r0.xyzx, r2.xyzx
  24: mad r0.w, -r0.w, r0.w, l(1.000000)
  25: sqrt r0.w, r0.w
  26: mul r0.w, r0.w, cb2[5].z
  27: mad r0.xyz, -r0.xyzx, r0.wwww, r1.xyzx
  28: mul r1.xyzw, r0.yyyy, cb4[10].xyzw
  29: mad r1.xyzw, cb4[9].xyzw, r0.xxxx, r1.xyzw
  30: mad r0.xyzw, cb4[11].xyzw, r0.zzzz, r1.xyzw
  31: add r0.xyzw, r0.xyzw, cb4[12].xyzw
  32: mul r1.xyzw, v0.yyyy, cb3[1].xyzw
  33: mad r1.xyzw, cb3[0].xyzw, v0.xxxx, r1.xyzw
  34: mad r1.xyzw, cb3[2].xyzw, v0.zzzz, r1.xyzw
  35: add r1.xyzw, r1.xyzw, cb3[3].xyzw
  36: ne r2.x, cb2[5].z, l(0.000000)
  37: movc r0.xyzw, r2.xxxx, r0.xyzw, r1.xyzw
  38: div_sat r1.x, cb2[5].x, r0.w
  39: add r0.z, r0.z, r1.x
  40: mov o1.xyw, r0.xyxw
  41: max r0.x, r0.z, l(0.000000)
  42: add r0.x, -r0.z, r0.x
  43: mad o1.z, cb2[5].y, r0.x, r0.z
  44: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
// Stats: 9 math, 3 textures, 1 branches
Keywords { "SHADOWS_CUBE" "_ALPHABLEND_ON" }
"#version 120

#ifdef VERTEX
uniform vec4 _LightPositionRange;

uniform mat4 _Object2World;
uniform vec4 _MainTex_ST;
varying vec3 xlv_TEXCOORD0;
varying vec2 xlv_TEXCOORD1;
void main ()
{
  xlv_TEXCOORD0 = ((_Object2World * gl_Vertex).xyz - _LightPositionRange.xyz);
  xlv_TEXCOORD1 = ((gl_MultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  gl_Position = (gl_ModelViewProjectionMatrix * gl_Vertex);
}


#endif
#ifdef FRAGMENT
uniform vec4 _LightPositionRange;
uniform vec4 unity_LightShadowBias;
uniform vec4 _Color;
uniform sampler2D _MainTex;
uniform sampler3D _DitherMaskLOD;
varying vec3 xlv_TEXCOORD0;
varying vec2 xlv_TEXCOORD1;
void main ()
{
  vec3 tmpvar_1;
  tmpvar_1.xy = (gl_FragCoord.xy * 0.25);
  tmpvar_1.z = ((texture2D (_MainTex, xlv_TEXCOORD1).w * _Color.w) * 0.9375);
  float x_2;
  x_2 = (texture3D (_DitherMaskLOD, tmpvar_1).w - 0.01);
  if ((x_2 < 0.0)) {
    discard;
  };
  gl_FragData[0] = vec4(((sqrt(
    dot (xlv_TEXCOORD0, xlv_TEXCOORD0)
  ) + unity_LightShadowBias.x) * _LightPositionRange.w));
}


#endif
"
}
SubProgram "d3d9 " {
// Stats: 9 math
Keywords { "SHADOWS_CUBE" "_ALPHABLEND_ON" }
Bind "vertex" Vertex
Bind "texcoord" TexCoord0
Matrix 4 [_Object2World] 3
Matrix 0 [glstate_matrix_mvp]
Vector 7 [_LightPositionRange]
Vector 8 [_MainTex_ST]
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _LightPositionRange;
//   float4 _MainTex_ST;
//   row_major float4x4 _Object2World;
//   row_major float4x4 glstate_matrix_mvp;
//
//
// Registers:
//
//   Name                Reg   Size
//   ------------------- ----- ----
//   glstate_matrix_mvp  c0       4
//   _Object2World       c4       3
//   _LightPositionRange c7       1
//   _MainTex_ST         c8       1
//

    vs_3_0
    dcl_position v0
    dcl_texcoord v1
    dcl_texcoord o0.xyz
    dcl_texcoord1 o1.xy
    dcl_position o2
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add o0.xyz, r0, -c7
    dp4 o2.x, c0, v0
    dp4 o2.y, c1, v0
    dp4 o2.z, c2, v0
    dp4 o2.w, c3, v0
    mad o1.xy, v1, c8, c8.zwzw

// approximately 9 instruction slots used
"
}
SubProgram "d3d11 " {
// Stats: 10 math
Keywords { "SHADOWS_CUBE" "_ALPHABLEND_ON" }
Bind "vertex" Vertex
Bind "texcoord" TexCoord0
ConstBuffer "$Globals" 144
Vector 128 [_MainTex_ST]
ConstBuffer "UnityLighting" 720
Vector 16 [_LightPositionRange]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
BindCB  "$Globals" 0
BindCB  "UnityLighting" 1
BindCB  "UnityPerDraw" 2
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float       
// TEXCOORD                 0   xy          2     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyz         0     NONE   float   xyz 
// TEXCOORD                 1   xy          1     NONE   float   xy  
// SV_POSITION              0   xyzw        2      POS   float   xyzw
//
      vs_4_0
      dcl_constantbuffer cb0[9], immediateIndexed
      dcl_constantbuffer cb1[2], immediateIndexed
      dcl_constantbuffer cb2[16], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xy
      dcl_output o0.xyz
      dcl_output o1.xy
      dcl_output_siv o2.xyzw, position
      dcl_temps 1
   0: mul r0.xyz, v0.yyyy, cb2[13].xyzx
   1: mad r0.xyz, cb2[12].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[14].xyzx, v0.zzzz, r0.xyzx
   3: mad r0.xyz, cb2[15].xyzx, v0.wwww, r0.xyzx
   4: add o0.xyz, r0.xyzx, -cb1[1].xyzx
   5: mad o1.xy, v2.xyxx, cb0[8].xyxx, cb0[8].zwzz
   6: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   7: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   8: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   9: mad o2.xyzw, cb2[3].xyzw, v0.wwww, r0.xyzw
  10: ret 
// Approximately 0 instruction slots used
"
}
}
Program "fp" {
SubProgram "opengl " {
Keywords { "SHADOWS_DEPTH" }
"// shader disassembly not supported on opengl"
}
SubProgram "d3d9 " {
// Stats: 2 math
Keywords { "SHADOWS_DEPTH" }
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
    ps_3_0
    dcl_texcoord v0.zw
    rcp r0.x, v0.w
    mul_pp oC0, r0.x, v0.z

// approximately 2 instruction slots used
"
}
SubProgram "d3d11 " {
Keywords { "SHADOWS_DEPTH" }
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_output o0.xyzw
   0: mov o0.xyzw, l(0,0,0,0)
   1: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
Keywords { "SHADOWS_CUBE" }
"// shader disassembly not supported on opengl"
}
SubProgram "d3d9 " {
// Stats: 5 math
Keywords { "SHADOWS_CUBE" }
Vector 0 [_LightPositionRange]
Vector 1 [unity_LightShadowBias]
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _LightPositionRange;
//   float4 unity_LightShadowBias;
//
//
// Registers:
//
//   Name                  Reg   Size
//   --------------------- ----- ----
//   _LightPositionRange   c0       1
//   unity_LightShadowBias c1       1
//

    ps_3_0
    dcl_texcoord v0.xyz
    dp3 r0.x, v0, v0
    rsq r0.x, r0.x
    rcp r0.x, r0.x
    add r0.x, r0.x, c1.x
    mul_pp oC0, r0.x, c0.w

// approximately 5 instruction slots used
"
}
SubProgram "d3d11 " {
// Stats: 4 math
Keywords { "SHADOWS_CUBE" }
ConstBuffer "UnityLighting" 720
Vector 16 [_LightPositionRange]
ConstBuffer "UnityShadows" 416
Vector 80 [unity_LightShadowBias]
BindCB  "UnityLighting" 0
BindCB  "UnityShadows" 1
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyz         0     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer cb0[2], immediateIndexed
      dcl_constantbuffer cb1[6], immediateIndexed
      dcl_input_ps linear v0.xyz
      dcl_output o0.xyzw
      dcl_temps 1
   0: dp3 r0.x, v0.xyzx, v0.xyzx
   1: sqrt r0.x, r0.x
   2: add r0.x, r0.x, cb1[5].x
   3: mul o0.xyzw, r0.xxxx, cb0[1].wwww
   4: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
Keywords { "SHADOWS_DEPTH" "_ALPHABLEND_ON" }
"// shader disassembly not supported on opengl"
}
SubProgram "d3d9 " {
// Stats: 6 math, 3 textures
Keywords { "SHADOWS_DEPTH" "_ALPHABLEND_ON" }
Vector 0 [_Color]
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_DitherMaskLOD] 3D 1
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _Color;
//   sampler3D _DitherMaskLOD;
//   sampler2D _MainTex;
//
//
// Registers:
//
//   Name           Reg   Size
//   -------------- ----- ----
//   _Color         c0       1
//   _MainTex       s0       1
//   _DitherMaskLOD s1       1
//

    ps_3_0
    def c1, 0.9375, 0.25, -0.00999999978, 0
    dcl_texcoord v0.zw
    dcl_texcoord1 v1.xy
    dcl vPos.xy
    dcl_2d s0
    dcl_volume s1
    texld r0, v1, s0
    mul_pp r0.x, r0.w, c0.w
    mul r0.z, r0.x, c1.x
    mul r0.xy, c1.y, vPos
    texld_pp r0, r0, s1
    add_pp r0, r0.w, c1.z
    texkill r0
    rcp r0.x, v0.w
    mul_pp oC0, r0.x, v0.z

// approximately 9 instruction slots used (2 texture, 7 arithmetic)
"
}
SubProgram "d3d11 " {
// Stats: 5 math, 2 textures
Keywords { "SHADOWS_DEPTH" "_ALPHABLEND_ON" }
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_DitherMaskLOD] 3D 1
ConstBuffer "$Globals" 144
Vector 96 [_Color]
BindCB  "$Globals" 0
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 1   xy          0     NONE   float   xy  
// SV_Position              0   xyzw        1      POS   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer cb0[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture3d (float,float,float,float) t1
      dcl_input_ps linear v0.xy
      dcl_input_ps_siv linear noperspective v1.xy, position
      dcl_output o0.xyzw
      dcl_temps 1
   0: sample r0.xyzw, v0.xyxx, t0.xyzw, s0
   1: mul r0.x, r0.w, cb0[6].w
   2: mul r0.z, r0.x, l(0.937500)
   3: mul r0.xy, v1.xyxx, l(0.250000, 0.250000, 0.000000, 0.000000)
   4: sample r0.xyzw, r0.xyzx, t1.xyzw, s1
   5: add r0.x, r0.w, l(-0.010000)
   6: lt r0.x, r0.x, l(0.000000)
   7: discard_nz r0.x
   8: mov o0.xyzw, l(0,0,0,0)
   9: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
Keywords { "SHADOWS_CUBE" "_ALPHABLEND_ON" }
"// shader disassembly not supported on opengl"
}
SubProgram "d3d9 " {
// Stats: 9 math, 3 textures
Keywords { "SHADOWS_CUBE" "_ALPHABLEND_ON" }
Vector 2 [_Color]
Vector 0 [_LightPositionRange]
Vector 1 [unity_LightShadowBias]
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_DitherMaskLOD] 3D 1
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _Color;
//   sampler3D _DitherMaskLOD;
//   float4 _LightPositionRange;
//   sampler2D _MainTex;
//   float4 unity_LightShadowBias;
//
//
// Registers:
//
//   Name                  Reg   Size
//   --------------------- ----- ----
//   _LightPositionRange   c0       1
//   unity_LightShadowBias c1       1
//   _Color                c2       1
//   _MainTex              s0       1
//   _DitherMaskLOD        s1       1
//

    ps_3_0
    def c3, 0.9375, 0.25, -0.00999999978, 0
    dcl_texcoord v0.xyz
    dcl_texcoord1 v1.xy
    dcl vPos.xy
    dcl_2d s0
    dcl_volume s1
    texld r0, v1, s0
    mul_pp r0.x, r0.w, c2.w
    mul r0.z, r0.x, c3.x
    mul r0.xy, c3.y, vPos
    texld_pp r0, r0, s1
    add_pp r0, r0.w, c3.z
    texkill r0
    dp3 r0.x, v0, v0
    rsq r0.x, r0.x
    rcp r0.x, r0.x
    add r0.x, r0.x, c1.x
    mul_pp oC0, r0.x, c0.w

// approximately 12 instruction slots used (2 texture, 10 arithmetic)
"
}
SubProgram "d3d11 " {
// Stats: 9 math, 2 textures
Keywords { "SHADOWS_CUBE" "_ALPHABLEND_ON" }
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_DitherMaskLOD] 3D 1
ConstBuffer "$Globals" 144
Vector 96 [_Color]
ConstBuffer "UnityLighting" 720
Vector 16 [_LightPositionRange]
ConstBuffer "UnityShadows" 416
Vector 80 [unity_LightShadowBias]
BindCB  "$Globals" 0
BindCB  "UnityLighting" 1
BindCB  "UnityShadows" 2
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyz         0     NONE   float   xyz 
// TEXCOORD                 1   xy          1     NONE   float   xy  
// SV_Position              0   xyzw        2      POS   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer cb0[7], immediateIndexed
      dcl_constantbuffer cb1[2], immediateIndexed
      dcl_constantbuffer cb2[6], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture3d (float,float,float,float) t1
      dcl_input_ps linear v0.xyz
      dcl_input_ps linear v1.xy
      dcl_input_ps_siv linear noperspective v2.xy, position
      dcl_output o0.xyzw
      dcl_temps 1
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s0
   1: mul r0.x, r0.w, cb0[6].w
   2: mul r0.z, r0.x, l(0.937500)
   3: mul r0.xy, v2.xyxx, l(0.250000, 0.250000, 0.000000, 0.000000)
   4: sample r0.xyzw, r0.xyzx, t1.xyzw, s1
   5: add r0.x, r0.w, l(-0.010000)
   6: lt r0.x, r0.x, l(0.000000)
   7: discard_nz r0.x
   8: dp3 r0.x, v0.xyzx, v0.xyzx
   9: sqrt r0.x, r0.x
  10: add r0.x, r0.x, cb2[5].x
  11: mul o0.xyzw, r0.xxxx, cb1[1].wwww
  12: ret 
// Approximately 0 instruction slots used
"
}
}
 }


 // Stats for Vertex shader:
 //       d3d11 : 39 avg math (33..43)
 //        d3d9 : 41 avg math (34..45)
 //      opengl : 31 avg math (29..33), 2 avg texture (2..3), 1 branch
 // Stats for Fragment shader:
 //       d3d11 : 25 avg math (24..26), 2 avg texture (2..3)
 //        d3d9 : 37 avg math (35..39), 2 avg texture (2..3)
 Pass {
  Name "DEFERRED"
  Tags { "LIGHTMODE"="Deferred" "RenderType"="Opaque" "PerformanceChecks"="False" }
  GpuProgramID 219902
Program "vp" {
SubProgram "opengl " {
// Stats: 31 math, 2 textures, 1 branches
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
"#version 120

#ifdef VERTEX
uniform vec3 _WorldSpaceCameraPos;
uniform vec4 unity_SHBr;
uniform vec4 unity_SHBg;
uniform vec4 unity_SHBb;
uniform vec4 unity_SHC;

uniform mat4 _Object2World;
uniform mat4 _World2Object;
uniform vec4 unity_ColorSpaceLuminance;
uniform vec4 _MainTex_ST;
uniform vec4 _DetailAlbedoMap_ST;
uniform float _UVSec;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
varying vec3 xlv_TEXCOORD6;
void main ()
{
  vec2 tmpvar_1;
  tmpvar_1 = gl_MultiTexCoord0.xy;
  vec2 tmpvar_2;
  tmpvar_2 = gl_MultiTexCoord1.xy;
  vec4 tmpvar_3;
  vec4 tmpvar_4;
  vec4 tmpvar_5;
  vec4 tmpvar_6;
  vec4 tmpvar_7;
  vec4 tmpvar_8;
  tmpvar_8 = (_Object2World * gl_Vertex);
  vec3 tmpvar_9;
  tmpvar_9 = tmpvar_8.xyz;
  tmpvar_3 = (gl_ModelViewProjectionMatrix * gl_Vertex);
  vec4 texcoord_10;
  texcoord_10.xy = ((gl_MultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  vec2 tmpvar_11;
  if ((_UVSec == 0.0)) {
    tmpvar_11 = tmpvar_1;
  } else {
    tmpvar_11 = tmpvar_2;
  };
  texcoord_10.zw = ((tmpvar_11 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  vec3 n_12;
  n_12 = (tmpvar_8.xyz - _WorldSpaceCameraPos);
  vec4 v_13;
  v_13.x = _World2Object[0].x;
  v_13.y = _World2Object[1].x;
  v_13.z = _World2Object[2].x;
  v_13.w = _World2Object[3].x;
  vec4 v_14;
  v_14.x = _World2Object[0].y;
  v_14.y = _World2Object[1].y;
  v_14.z = _World2Object[2].y;
  v_14.w = _World2Object[3].y;
  vec4 v_15;
  v_15.x = _World2Object[0].z;
  v_15.y = _World2Object[1].z;
  v_15.z = _World2Object[2].z;
  v_15.w = _World2Object[3].z;
  vec3 tmpvar_16;
  tmpvar_16 = normalize(((
    (v_13.xyz * gl_Normal.x)
   + 
    (v_14.xyz * gl_Normal.y)
  ) + (v_15.xyz * gl_Normal.z)));
  tmpvar_4.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_5.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_6.xyz = tmpvar_16;
  tmpvar_7 = vec4(0.0, 0.0, 0.0, 0.0);
  vec3 ambient_17;
  ambient_17 = vec3(0.0, 0.0, 0.0);
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    ambient_17 = vec3(0.0, 0.0, 0.0);
  };
  vec3 x1_18;
  vec4 tmpvar_19;
  tmpvar_19 = (tmpvar_16.xyzz * tmpvar_16.yzzx);
  x1_18.x = dot (unity_SHBr, tmpvar_19);
  x1_18.y = dot (unity_SHBg, tmpvar_19);
  x1_18.z = dot (unity_SHBb, tmpvar_19);
  ambient_17 = (ambient_17 + (x1_18 + (unity_SHC.xyz * 
    ((tmpvar_16.x * tmpvar_16.x) - (tmpvar_16.y * tmpvar_16.y))
  )));
  tmpvar_7.xyz = ambient_17;
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = texcoord_10;
  xlv_TEXCOORD1 = n_12;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  xlv_TEXCOORD5 = tmpvar_7;
  xlv_TEXCOORD6 = tmpvar_9;
}


#endif
#ifdef FRAGMENT
#extension GL_ARB_shader_texture_lod : enable
uniform vec4 unity_SHAr;
uniform vec4 unity_SHAg;
uniform vec4 unity_SHAb;
uniform vec4 unity_ColorSpaceDielectricSpec;
uniform vec4 unity_ColorSpaceLuminance;
uniform vec4 _Color;
uniform sampler2D _MainTex;
uniform float _Metallic;
uniform float _Glossiness;
uniform sampler2D _OcclusionMap;
uniform float _OcclusionStrength;
varying vec4 xlv_TEXCOORD0;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
void main ()
{
  vec2 tmpvar_1;
  tmpvar_1.x = _Metallic;
  tmpvar_1.y = _Glossiness;
  float tmpvar_2;
  tmpvar_2 = tmpvar_1.y;
  vec3 tmpvar_3;
  tmpvar_3 = (_Color.xyz * texture2D (_MainTex, xlv_TEXCOORD0.xy).xyz);
  vec3 tmpvar_4;
  vec3 tmpvar_5;
  tmpvar_5 = mix (unity_ColorSpaceDielectricSpec.xyz, tmpvar_3, vec3(_Metallic));
  tmpvar_4 = (tmpvar_3 * (unity_ColorSpaceDielectricSpec.w - (_Metallic * unity_ColorSpaceDielectricSpec.w)));
  vec3 tmpvar_6;
  tmpvar_6 = normalize(xlv_TEXCOORD2_2.xyz);
  float tmpvar_7;
  tmpvar_7 = ((1.0 - _OcclusionStrength) + (texture2D (_OcclusionMap, xlv_TEXCOORD0.xy).y * _OcclusionStrength));
  vec3 tmpvar_8;
  tmpvar_8 = vec3(0.0, 0.0, 0.0);
  vec3 ambient_9;
  vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = tmpvar_6;
  vec3 x_11;
  x_11.x = dot (unity_SHAr, tmpvar_10);
  x_11.y = dot (unity_SHAg, tmpvar_10);
  x_11.z = dot (unity_SHAb, tmpvar_10);
  vec3 tmpvar_12;
  tmpvar_12 = max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD5.xyz + x_11));
  ambient_9 = tmpvar_12;
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    ambient_9 = max (((1.055 * 
      pow (max (tmpvar_12, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
    ) - 0.055), vec3(0.0, 0.0, 0.0));
  };
  tmpvar_8 = (ambient_9 * tmpvar_7);
  vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = (tmpvar_4 * tmpvar_8);
  vec4 tmpvar_14;
  tmpvar_14.xyz = tmpvar_4;
  tmpvar_14.w = tmpvar_7;
  vec4 tmpvar_15;
  tmpvar_15.xyz = tmpvar_5;
  tmpvar_15.w = tmpvar_2;
  vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = ((tmpvar_6 * 0.5) + 0.5);
  vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = exp2(-(tmpvar_13.xyz));
  gl_FragData[0] = tmpvar_14;
  gl_FragData[1] = tmpvar_15;
  gl_FragData[2] = tmpvar_16;
  gl_FragData[3] = tmpvar_17;
}


#endif
"
}
SubProgram "d3d9 " {
// Stats: 34 math
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Matrix 4 [_Object2World] 3
Matrix 7 [_World2Object] 3
Matrix 0 [glstate_matrix_mvp]
Vector 16 [_DetailAlbedoMap_ST]
Vector 15 [_MainTex_ST]
Float 17 [_UVSec]
Vector 10 [_WorldSpaceCameraPos]
Vector 13 [unity_SHBb]
Vector 12 [unity_SHBg]
Vector 11 [unity_SHBr]
Vector 14 [unity_SHC]
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   row_major float4x4 _Object2World;
//   float _UVSec;
//   row_major float4x4 _World2Object;
//   float3 _WorldSpaceCameraPos;
//   row_major float4x4 glstate_matrix_mvp;
//   float4 unity_SHBb;
//   float4 unity_SHBg;
//   float4 unity_SHBr;
//   float4 unity_SHC;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   glstate_matrix_mvp   c0       4
//   _Object2World        c4       3
//   _World2Object        c7       3
//   _WorldSpaceCameraPos c10      1
//   unity_SHBr           c11      1
//   unity_SHBg           c12      1
//   unity_SHBb           c13      1
//   unity_SHC            c14      1
//   _MainTex_ST          c15      1
//   _DetailAlbedoMap_ST  c16      1
//   _UVSec               c17      1
//

    vs_3_0
    def c18, 0, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6
    dcl_texcoord6 o7.xyz
    dp4 o0.x, c0, v0
    dp4 o0.y, c1, v0
    dp4 o0.z, c2, v0
    dp4 o0.w, c3, v0
    mad o1.xy, v2, c15, c15.zwzw
    abs r0.x, c17.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c16.xyxy, c16
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add o2.xyz, r0, -c10
    mov o7.xyz, r0
    mul r0.xyz, c8, v1.y
    mad r0.xyz, c7, v1.x, r0
    mad r0.xyz, c9, v1.z, r0
    nrm r1.xyz, r0
    mul r0.x, r1.y, r1.y
    mad r0.x, r1.x, r1.x, -r0.x
    mul r2, r1.yzzx, r1.xyzz
    mov o5.xyz, r1
    dp4 r1.x, c11, r2
    dp4 r1.y, c12, r2
    dp4 r1.z, c13, r2
    mad o6.xyz, c14, r0.x, r1
    mov o3, c18.x
    mov o4, c18.x
    mov o5.w, c18.x
    mov o6.w, c18.x

// approximately 33 instruction slots used
"
}
SubProgram "d3d11 " {
// Stats: 33 math
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
ConstBuffer "$Globals" 240
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 656 [unity_SHBr]
Vector 672 [unity_SHBg]
Vector 688 [unity_SHBb]
Vector 704 [unity_SHC]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer cb0[14], immediateIndexed
      dcl_constantbuffer cb1[5], immediateIndexed
      dcl_constantbuffer cb2[45], immediateIndexed
      dcl_constantbuffer cb3[19], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyz
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: mad o0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   4: eq r0.x, cb0[13].z, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[11].xxxy, cb0[11].zzzw
   7: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  13: mov o7.xyz, r0.xyzx
  14: mov o3.xyzw, l(0,0,0,0)
  15: mov o4.xyzw, l(0,0,0,0)
  16: mul r0.x, v1.x, cb3[16].x
  17: mul r0.y, v1.x, cb3[17].x
  18: mul r0.z, v1.x, cb3[18].x
  19: mul r1.x, v1.y, cb3[16].y
  20: mul r1.y, v1.y, cb3[17].y
  21: mul r1.z, v1.y, cb3[18].y
  22: add r0.xyz, r0.xyzx, r1.xyzx
  23: mul r1.x, v1.z, cb3[16].z
  24: mul r1.y, v1.z, cb3[17].z
  25: mul r1.z, v1.z, cb3[18].z
  26: add r0.xyz, r0.xyzx, r1.xyzx
  27: dp3 r0.w, r0.xyzx, r0.xyzx
  28: rsq r0.w, r0.w
  29: mul r0.xyz, r0.wwww, r0.xyzx
  30: mov o5.xyz, r0.xyzx
  31: mov o5.w, l(0)
  32: mul r0.w, r0.y, r0.y
  33: mad r0.w, r0.x, r0.x, -r0.w
  34: mul r1.xyzw, r0.yzzx, r0.xyzz
  35: dp4 r0.x, cb2[41].xyzw, r1.xyzw
  36: dp4 r0.y, cb2[42].xyzw, r1.xyzw
  37: dp4 r0.z, cb2[43].xyzw, r1.xyzw
  38: mad o6.xyz, cb2[44].xyzx, r0.wwww, r0.xyzx
  39: mov o6.w, l(0)
  40: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
// Stats: 33 math, 3 textures, 1 branches
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" }
"#version 120

#ifdef VERTEX
uniform vec3 _WorldSpaceCameraPos;
uniform vec4 unity_SHBr;
uniform vec4 unity_SHBg;
uniform vec4 unity_SHBb;
uniform vec4 unity_SHC;

uniform mat4 _Object2World;
uniform mat4 _World2Object;
uniform vec4 unity_ColorSpaceLuminance;
uniform vec4 _MainTex_ST;
uniform vec4 _DetailAlbedoMap_ST;
uniform float _UVSec;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
varying vec3 xlv_TEXCOORD6;
void main ()
{
  vec2 tmpvar_1;
  tmpvar_1 = gl_MultiTexCoord0.xy;
  vec2 tmpvar_2;
  tmpvar_2 = gl_MultiTexCoord1.xy;
  vec4 tmpvar_3;
  vec4 tmpvar_4;
  vec4 tmpvar_5;
  vec4 tmpvar_6;
  vec4 tmpvar_7;
  vec4 tmpvar_8;
  tmpvar_8 = (_Object2World * gl_Vertex);
  vec3 tmpvar_9;
  tmpvar_9 = tmpvar_8.xyz;
  tmpvar_3 = (gl_ModelViewProjectionMatrix * gl_Vertex);
  vec4 texcoord_10;
  texcoord_10.xy = ((gl_MultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  vec2 tmpvar_11;
  if ((_UVSec == 0.0)) {
    tmpvar_11 = tmpvar_1;
  } else {
    tmpvar_11 = tmpvar_2;
  };
  texcoord_10.zw = ((tmpvar_11 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  vec3 n_12;
  n_12 = (tmpvar_8.xyz - _WorldSpaceCameraPos);
  vec4 v_13;
  v_13.x = _World2Object[0].x;
  v_13.y = _World2Object[1].x;
  v_13.z = _World2Object[2].x;
  v_13.w = _World2Object[3].x;
  vec4 v_14;
  v_14.x = _World2Object[0].y;
  v_14.y = _World2Object[1].y;
  v_14.z = _World2Object[2].y;
  v_14.w = _World2Object[3].y;
  vec4 v_15;
  v_15.x = _World2Object[0].z;
  v_15.y = _World2Object[1].z;
  v_15.z = _World2Object[2].z;
  v_15.w = _World2Object[3].z;
  vec3 tmpvar_16;
  tmpvar_16 = normalize(((
    (v_13.xyz * gl_Normal.x)
   + 
    (v_14.xyz * gl_Normal.y)
  ) + (v_15.xyz * gl_Normal.z)));
  tmpvar_4.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_5.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_6.xyz = tmpvar_16;
  tmpvar_7 = vec4(0.0, 0.0, 0.0, 0.0);
  vec3 ambient_17;
  ambient_17 = vec3(0.0, 0.0, 0.0);
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    ambient_17 = vec3(0.0, 0.0, 0.0);
  };
  vec3 x1_18;
  vec4 tmpvar_19;
  tmpvar_19 = (tmpvar_16.xyzz * tmpvar_16.yzzx);
  x1_18.x = dot (unity_SHBr, tmpvar_19);
  x1_18.y = dot (unity_SHBg, tmpvar_19);
  x1_18.z = dot (unity_SHBb, tmpvar_19);
  ambient_17 = (ambient_17 + (x1_18 + (unity_SHC.xyz * 
    ((tmpvar_16.x * tmpvar_16.x) - (tmpvar_16.y * tmpvar_16.y))
  )));
  tmpvar_7.xyz = ambient_17;
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = texcoord_10;
  xlv_TEXCOORD1 = n_12;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  xlv_TEXCOORD5 = tmpvar_7;
  xlv_TEXCOORD6 = tmpvar_9;
}


#endif
#ifdef FRAGMENT
#extension GL_ARB_shader_texture_lod : enable
uniform vec4 unity_SHAr;
uniform vec4 unity_SHAg;
uniform vec4 unity_SHAb;
uniform vec4 unity_ColorSpaceDielectricSpec;
uniform vec4 unity_ColorSpaceLuminance;
uniform vec4 _Color;
uniform sampler2D _MainTex;
uniform float _Metallic;
uniform float _Glossiness;
uniform sampler2D _OcclusionMap;
uniform float _OcclusionStrength;
uniform vec4 _EmissionColor;
uniform sampler2D _EmissionMap;
varying vec4 xlv_TEXCOORD0;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
void main ()
{
  vec3 color_1;
  vec2 tmpvar_2;
  tmpvar_2.x = _Metallic;
  tmpvar_2.y = _Glossiness;
  float tmpvar_3;
  tmpvar_3 = tmpvar_2.y;
  vec3 tmpvar_4;
  tmpvar_4 = (_Color.xyz * texture2D (_MainTex, xlv_TEXCOORD0.xy).xyz);
  vec3 tmpvar_5;
  vec3 tmpvar_6;
  tmpvar_6 = mix (unity_ColorSpaceDielectricSpec.xyz, tmpvar_4, vec3(_Metallic));
  tmpvar_5 = (tmpvar_4 * (unity_ColorSpaceDielectricSpec.w - (_Metallic * unity_ColorSpaceDielectricSpec.w)));
  vec3 tmpvar_7;
  tmpvar_7 = normalize(xlv_TEXCOORD2_2.xyz);
  float tmpvar_8;
  tmpvar_8 = ((1.0 - _OcclusionStrength) + (texture2D (_OcclusionMap, xlv_TEXCOORD0.xy).y * _OcclusionStrength));
  vec3 tmpvar_9;
  tmpvar_9 = vec3(0.0, 0.0, 0.0);
  vec3 ambient_10;
  vec4 tmpvar_11;
  tmpvar_11.w = 1.0;
  tmpvar_11.xyz = tmpvar_7;
  vec3 x_12;
  x_12.x = dot (unity_SHAr, tmpvar_11);
  x_12.y = dot (unity_SHAg, tmpvar_11);
  x_12.z = dot (unity_SHAb, tmpvar_11);
  vec3 tmpvar_13;
  tmpvar_13 = max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD5.xyz + x_12));
  ambient_10 = tmpvar_13;
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    ambient_10 = max (((1.055 * 
      pow (max (tmpvar_13, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
    ) - 0.055), vec3(0.0, 0.0, 0.0));
  };
  tmpvar_9 = (ambient_10 * tmpvar_8);
  vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = (tmpvar_5 * tmpvar_9);
  color_1 = (tmpvar_14.xyz + (texture2D (_EmissionMap, xlv_TEXCOORD0.xy).xyz * _EmissionColor.xyz));
  color_1 = exp2(-(color_1));
  vec4 tmpvar_15;
  tmpvar_15.xyz = tmpvar_5;
  tmpvar_15.w = tmpvar_8;
  vec4 tmpvar_16;
  tmpvar_16.xyz = tmpvar_6;
  tmpvar_16.w = tmpvar_3;
  vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = ((tmpvar_7 * 0.5) + 0.5);
  vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = color_1;
  gl_FragData[0] = tmpvar_15;
  gl_FragData[1] = tmpvar_16;
  gl_FragData[2] = tmpvar_17;
  gl_FragData[3] = tmpvar_18;
}


#endif
"
}
SubProgram "d3d9 " {
// Stats: 34 math
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Matrix 4 [_Object2World] 3
Matrix 7 [_World2Object] 3
Matrix 0 [glstate_matrix_mvp]
Vector 16 [_DetailAlbedoMap_ST]
Vector 15 [_MainTex_ST]
Float 17 [_UVSec]
Vector 10 [_WorldSpaceCameraPos]
Vector 13 [unity_SHBb]
Vector 12 [unity_SHBg]
Vector 11 [unity_SHBr]
Vector 14 [unity_SHC]
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   row_major float4x4 _Object2World;
//   float _UVSec;
//   row_major float4x4 _World2Object;
//   float3 _WorldSpaceCameraPos;
//   row_major float4x4 glstate_matrix_mvp;
//   float4 unity_SHBb;
//   float4 unity_SHBg;
//   float4 unity_SHBr;
//   float4 unity_SHC;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   glstate_matrix_mvp   c0       4
//   _Object2World        c4       3
//   _World2Object        c7       3
//   _WorldSpaceCameraPos c10      1
//   unity_SHBr           c11      1
//   unity_SHBg           c12      1
//   unity_SHBb           c13      1
//   unity_SHC            c14      1
//   _MainTex_ST          c15      1
//   _DetailAlbedoMap_ST  c16      1
//   _UVSec               c17      1
//

    vs_3_0
    def c18, 0, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6
    dcl_texcoord6 o7.xyz
    dp4 o0.x, c0, v0
    dp4 o0.y, c1, v0
    dp4 o0.z, c2, v0
    dp4 o0.w, c3, v0
    mad o1.xy, v2, c15, c15.zwzw
    abs r0.x, c17.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c16.xyxy, c16
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add o2.xyz, r0, -c10
    mov o7.xyz, r0
    mul r0.xyz, c8, v1.y
    mad r0.xyz, c7, v1.x, r0
    mad r0.xyz, c9, v1.z, r0
    nrm r1.xyz, r0
    mul r0.x, r1.y, r1.y
    mad r0.x, r1.x, r1.x, -r0.x
    mul r2, r1.yzzx, r1.xyzz
    mov o5.xyz, r1
    dp4 r1.x, c11, r2
    dp4 r1.y, c12, r2
    dp4 r1.z, c13, r2
    mad o6.xyz, c14, r0.x, r1
    mov o3, c18.x
    mov o4, c18.x
    mov o5.w, c18.x
    mov o6.w, c18.x

// approximately 33 instruction slots used
"
}
SubProgram "d3d11 " {
// Stats: 33 math
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
ConstBuffer "$Globals" 240
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 656 [unity_SHBr]
Vector 672 [unity_SHBg]
Vector 688 [unity_SHBb]
Vector 704 [unity_SHC]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer cb0[14], immediateIndexed
      dcl_constantbuffer cb1[5], immediateIndexed
      dcl_constantbuffer cb2[45], immediateIndexed
      dcl_constantbuffer cb3[19], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyz
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: mad o0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   4: eq r0.x, cb0[13].z, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[11].xxxy, cb0[11].zzzw
   7: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  13: mov o7.xyz, r0.xyzx
  14: mov o3.xyzw, l(0,0,0,0)
  15: mov o4.xyzw, l(0,0,0,0)
  16: mul r0.x, v1.x, cb3[16].x
  17: mul r0.y, v1.x, cb3[17].x
  18: mul r0.z, v1.x, cb3[18].x
  19: mul r1.x, v1.y, cb3[16].y
  20: mul r1.y, v1.y, cb3[17].y
  21: mul r1.z, v1.y, cb3[18].y
  22: add r0.xyz, r0.xyzx, r1.xyzx
  23: mul r1.x, v1.z, cb3[16].z
  24: mul r1.y, v1.z, cb3[17].z
  25: mul r1.z, v1.z, cb3[18].z
  26: add r0.xyz, r0.xyzx, r1.xyzx
  27: dp3 r0.w, r0.xyzx, r0.xyzx
  28: rsq r0.w, r0.w
  29: mul r0.xyz, r0.wwww, r0.xyzx
  30: mov o5.xyz, r0.xyzx
  31: mov o5.w, l(0)
  32: mul r0.w, r0.y, r0.y
  33: mad r0.w, r0.x, r0.x, -r0.w
  34: mul r1.xyzw, r0.yzzx, r0.xyzz
  35: dp4 r0.x, cb2[41].xyzw, r1.xyzw
  36: dp4 r0.y, cb2[42].xyzw, r1.xyzw
  37: dp4 r0.z, cb2[43].xyzw, r1.xyzw
  38: mad o6.xyz, cb2[44].xyzx, r0.wwww, r0.xyzx
  39: mov o6.w, l(0)
  40: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
// Stats: 31 math, 2 textures, 1 branches
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_ALPHABLEND_ON" }
"#version 120

#ifdef VERTEX
uniform vec3 _WorldSpaceCameraPos;
uniform vec4 unity_SHBr;
uniform vec4 unity_SHBg;
uniform vec4 unity_SHBb;
uniform vec4 unity_SHC;

uniform mat4 _Object2World;
uniform mat4 _World2Object;
uniform vec4 unity_ColorSpaceLuminance;
uniform vec4 _MainTex_ST;
uniform vec4 _DetailAlbedoMap_ST;
uniform float _UVSec;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
varying vec3 xlv_TEXCOORD6;
void main ()
{
  vec2 tmpvar_1;
  tmpvar_1 = gl_MultiTexCoord0.xy;
  vec2 tmpvar_2;
  tmpvar_2 = gl_MultiTexCoord1.xy;
  vec4 tmpvar_3;
  vec4 tmpvar_4;
  vec4 tmpvar_5;
  vec4 tmpvar_6;
  vec4 tmpvar_7;
  vec4 tmpvar_8;
  tmpvar_8 = (_Object2World * gl_Vertex);
  vec3 tmpvar_9;
  tmpvar_9 = tmpvar_8.xyz;
  tmpvar_3 = (gl_ModelViewProjectionMatrix * gl_Vertex);
  vec4 texcoord_10;
  texcoord_10.xy = ((gl_MultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  vec2 tmpvar_11;
  if ((_UVSec == 0.0)) {
    tmpvar_11 = tmpvar_1;
  } else {
    tmpvar_11 = tmpvar_2;
  };
  texcoord_10.zw = ((tmpvar_11 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  vec3 n_12;
  n_12 = (tmpvar_8.xyz - _WorldSpaceCameraPos);
  vec4 v_13;
  v_13.x = _World2Object[0].x;
  v_13.y = _World2Object[1].x;
  v_13.z = _World2Object[2].x;
  v_13.w = _World2Object[3].x;
  vec4 v_14;
  v_14.x = _World2Object[0].y;
  v_14.y = _World2Object[1].y;
  v_14.z = _World2Object[2].y;
  v_14.w = _World2Object[3].y;
  vec4 v_15;
  v_15.x = _World2Object[0].z;
  v_15.y = _World2Object[1].z;
  v_15.z = _World2Object[2].z;
  v_15.w = _World2Object[3].z;
  vec3 tmpvar_16;
  tmpvar_16 = normalize(((
    (v_13.xyz * gl_Normal.x)
   + 
    (v_14.xyz * gl_Normal.y)
  ) + (v_15.xyz * gl_Normal.z)));
  tmpvar_4.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_5.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_6.xyz = tmpvar_16;
  tmpvar_7 = vec4(0.0, 0.0, 0.0, 0.0);
  vec3 ambient_17;
  ambient_17 = vec3(0.0, 0.0, 0.0);
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    ambient_17 = vec3(0.0, 0.0, 0.0);
  };
  vec3 x1_18;
  vec4 tmpvar_19;
  tmpvar_19 = (tmpvar_16.xyzz * tmpvar_16.yzzx);
  x1_18.x = dot (unity_SHBr, tmpvar_19);
  x1_18.y = dot (unity_SHBg, tmpvar_19);
  x1_18.z = dot (unity_SHBb, tmpvar_19);
  ambient_17 = (ambient_17 + (x1_18 + (unity_SHC.xyz * 
    ((tmpvar_16.x * tmpvar_16.x) - (tmpvar_16.y * tmpvar_16.y))
  )));
  tmpvar_7.xyz = ambient_17;
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = texcoord_10;
  xlv_TEXCOORD1 = n_12;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  xlv_TEXCOORD5 = tmpvar_7;
  xlv_TEXCOORD6 = tmpvar_9;
}


#endif
#ifdef FRAGMENT
#extension GL_ARB_shader_texture_lod : enable
uniform vec4 unity_SHAr;
uniform vec4 unity_SHAg;
uniform vec4 unity_SHAb;
uniform vec4 unity_ColorSpaceDielectricSpec;
uniform vec4 unity_ColorSpaceLuminance;
uniform vec4 _Color;
uniform sampler2D _MainTex;
uniform float _Metallic;
uniform float _Glossiness;
uniform sampler2D _OcclusionMap;
uniform float _OcclusionStrength;
varying vec4 xlv_TEXCOORD0;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
void main ()
{
  vec2 tmpvar_1;
  tmpvar_1.x = _Metallic;
  tmpvar_1.y = _Glossiness;
  float tmpvar_2;
  tmpvar_2 = tmpvar_1.y;
  vec3 tmpvar_3;
  tmpvar_3 = (_Color.xyz * texture2D (_MainTex, xlv_TEXCOORD0.xy).xyz);
  vec3 tmpvar_4;
  vec3 tmpvar_5;
  tmpvar_5 = mix (unity_ColorSpaceDielectricSpec.xyz, tmpvar_3, vec3(_Metallic));
  tmpvar_4 = (tmpvar_3 * (unity_ColorSpaceDielectricSpec.w - (_Metallic * unity_ColorSpaceDielectricSpec.w)));
  vec3 tmpvar_6;
  tmpvar_6 = normalize(xlv_TEXCOORD2_2.xyz);
  float tmpvar_7;
  tmpvar_7 = ((1.0 - _OcclusionStrength) + (texture2D (_OcclusionMap, xlv_TEXCOORD0.xy).y * _OcclusionStrength));
  vec3 tmpvar_8;
  tmpvar_8 = vec3(0.0, 0.0, 0.0);
  vec3 ambient_9;
  vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = tmpvar_6;
  vec3 x_11;
  x_11.x = dot (unity_SHAr, tmpvar_10);
  x_11.y = dot (unity_SHAg, tmpvar_10);
  x_11.z = dot (unity_SHAb, tmpvar_10);
  vec3 tmpvar_12;
  tmpvar_12 = max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD5.xyz + x_11));
  ambient_9 = tmpvar_12;
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    ambient_9 = max (((1.055 * 
      pow (max (tmpvar_12, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
    ) - 0.055), vec3(0.0, 0.0, 0.0));
  };
  tmpvar_8 = (ambient_9 * tmpvar_7);
  vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = (tmpvar_4 * tmpvar_8);
  vec4 tmpvar_14;
  tmpvar_14.xyz = tmpvar_4;
  tmpvar_14.w = tmpvar_7;
  vec4 tmpvar_15;
  tmpvar_15.xyz = tmpvar_5;
  tmpvar_15.w = tmpvar_2;
  vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = ((tmpvar_6 * 0.5) + 0.5);
  vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = exp2(-(tmpvar_13.xyz));
  gl_FragData[0] = tmpvar_14;
  gl_FragData[1] = tmpvar_15;
  gl_FragData[2] = tmpvar_16;
  gl_FragData[3] = tmpvar_17;
}


#endif
"
}
SubProgram "d3d9 " {
// Stats: 34 math
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_ALPHABLEND_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Matrix 4 [_Object2World] 3
Matrix 7 [_World2Object] 3
Matrix 0 [glstate_matrix_mvp]
Vector 16 [_DetailAlbedoMap_ST]
Vector 15 [_MainTex_ST]
Float 17 [_UVSec]
Vector 10 [_WorldSpaceCameraPos]
Vector 13 [unity_SHBb]
Vector 12 [unity_SHBg]
Vector 11 [unity_SHBr]
Vector 14 [unity_SHC]
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   row_major float4x4 _Object2World;
//   float _UVSec;
//   row_major float4x4 _World2Object;
//   float3 _WorldSpaceCameraPos;
//   row_major float4x4 glstate_matrix_mvp;
//   float4 unity_SHBb;
//   float4 unity_SHBg;
//   float4 unity_SHBr;
//   float4 unity_SHC;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   glstate_matrix_mvp   c0       4
//   _Object2World        c4       3
//   _World2Object        c7       3
//   _WorldSpaceCameraPos c10      1
//   unity_SHBr           c11      1
//   unity_SHBg           c12      1
//   unity_SHBb           c13      1
//   unity_SHC            c14      1
//   _MainTex_ST          c15      1
//   _DetailAlbedoMap_ST  c16      1
//   _UVSec               c17      1
//

    vs_3_0
    def c18, 0, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6
    dcl_texcoord6 o7.xyz
    dp4 o0.x, c0, v0
    dp4 o0.y, c1, v0
    dp4 o0.z, c2, v0
    dp4 o0.w, c3, v0
    mad o1.xy, v2, c15, c15.zwzw
    abs r0.x, c17.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c16.xyxy, c16
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add o2.xyz, r0, -c10
    mov o7.xyz, r0
    mul r0.xyz, c8, v1.y
    mad r0.xyz, c7, v1.x, r0
    mad r0.xyz, c9, v1.z, r0
    nrm r1.xyz, r0
    mul r0.x, r1.y, r1.y
    mad r0.x, r1.x, r1.x, -r0.x
    mul r2, r1.yzzx, r1.xyzz
    mov o5.xyz, r1
    dp4 r1.x, c11, r2
    dp4 r1.y, c12, r2
    dp4 r1.z, c13, r2
    mad o6.xyz, c14, r0.x, r1
    mov o3, c18.x
    mov o4, c18.x
    mov o5.w, c18.x
    mov o6.w, c18.x

// approximately 33 instruction slots used
"
}
SubProgram "d3d11 " {
// Stats: 33 math
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_ALPHABLEND_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
ConstBuffer "$Globals" 240
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 656 [unity_SHBr]
Vector 672 [unity_SHBg]
Vector 688 [unity_SHBb]
Vector 704 [unity_SHC]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer cb0[14], immediateIndexed
      dcl_constantbuffer cb1[5], immediateIndexed
      dcl_constantbuffer cb2[45], immediateIndexed
      dcl_constantbuffer cb3[19], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyz
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: mad o0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   4: eq r0.x, cb0[13].z, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[11].xxxy, cb0[11].zzzw
   7: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  13: mov o7.xyz, r0.xyzx
  14: mov o3.xyzw, l(0,0,0,0)
  15: mov o4.xyzw, l(0,0,0,0)
  16: mul r0.x, v1.x, cb3[16].x
  17: mul r0.y, v1.x, cb3[17].x
  18: mul r0.z, v1.x, cb3[18].x
  19: mul r1.x, v1.y, cb3[16].y
  20: mul r1.y, v1.y, cb3[17].y
  21: mul r1.z, v1.y, cb3[18].y
  22: add r0.xyz, r0.xyzx, r1.xyzx
  23: mul r1.x, v1.z, cb3[16].z
  24: mul r1.y, v1.z, cb3[17].z
  25: mul r1.z, v1.z, cb3[18].z
  26: add r0.xyz, r0.xyzx, r1.xyzx
  27: dp3 r0.w, r0.xyzx, r0.xyzx
  28: rsq r0.w, r0.w
  29: mul r0.xyz, r0.wwww, r0.xyzx
  30: mov o5.xyz, r0.xyzx
  31: mov o5.w, l(0)
  32: mul r0.w, r0.y, r0.y
  33: mad r0.w, r0.x, r0.x, -r0.w
  34: mul r1.xyzw, r0.yzzx, r0.xyzz
  35: dp4 r0.x, cb2[41].xyzw, r1.xyzw
  36: dp4 r0.y, cb2[42].xyzw, r1.xyzw
  37: dp4 r0.z, cb2[43].xyzw, r1.xyzw
  38: mad o6.xyz, cb2[44].xyzx, r0.wwww, r0.xyzx
  39: mov o6.w, l(0)
  40: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
// Stats: 33 math, 3 textures, 1 branches
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "_ALPHABLEND_ON" }
"#version 120

#ifdef VERTEX
uniform vec3 _WorldSpaceCameraPos;
uniform vec4 unity_SHBr;
uniform vec4 unity_SHBg;
uniform vec4 unity_SHBb;
uniform vec4 unity_SHC;

uniform mat4 _Object2World;
uniform mat4 _World2Object;
uniform vec4 unity_ColorSpaceLuminance;
uniform vec4 _MainTex_ST;
uniform vec4 _DetailAlbedoMap_ST;
uniform float _UVSec;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
varying vec3 xlv_TEXCOORD6;
void main ()
{
  vec2 tmpvar_1;
  tmpvar_1 = gl_MultiTexCoord0.xy;
  vec2 tmpvar_2;
  tmpvar_2 = gl_MultiTexCoord1.xy;
  vec4 tmpvar_3;
  vec4 tmpvar_4;
  vec4 tmpvar_5;
  vec4 tmpvar_6;
  vec4 tmpvar_7;
  vec4 tmpvar_8;
  tmpvar_8 = (_Object2World * gl_Vertex);
  vec3 tmpvar_9;
  tmpvar_9 = tmpvar_8.xyz;
  tmpvar_3 = (gl_ModelViewProjectionMatrix * gl_Vertex);
  vec4 texcoord_10;
  texcoord_10.xy = ((gl_MultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  vec2 tmpvar_11;
  if ((_UVSec == 0.0)) {
    tmpvar_11 = tmpvar_1;
  } else {
    tmpvar_11 = tmpvar_2;
  };
  texcoord_10.zw = ((tmpvar_11 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  vec3 n_12;
  n_12 = (tmpvar_8.xyz - _WorldSpaceCameraPos);
  vec4 v_13;
  v_13.x = _World2Object[0].x;
  v_13.y = _World2Object[1].x;
  v_13.z = _World2Object[2].x;
  v_13.w = _World2Object[3].x;
  vec4 v_14;
  v_14.x = _World2Object[0].y;
  v_14.y = _World2Object[1].y;
  v_14.z = _World2Object[2].y;
  v_14.w = _World2Object[3].y;
  vec4 v_15;
  v_15.x = _World2Object[0].z;
  v_15.y = _World2Object[1].z;
  v_15.z = _World2Object[2].z;
  v_15.w = _World2Object[3].z;
  vec3 tmpvar_16;
  tmpvar_16 = normalize(((
    (v_13.xyz * gl_Normal.x)
   + 
    (v_14.xyz * gl_Normal.y)
  ) + (v_15.xyz * gl_Normal.z)));
  tmpvar_4.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_5.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_6.xyz = tmpvar_16;
  tmpvar_7 = vec4(0.0, 0.0, 0.0, 0.0);
  vec3 ambient_17;
  ambient_17 = vec3(0.0, 0.0, 0.0);
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    ambient_17 = vec3(0.0, 0.0, 0.0);
  };
  vec3 x1_18;
  vec4 tmpvar_19;
  tmpvar_19 = (tmpvar_16.xyzz * tmpvar_16.yzzx);
  x1_18.x = dot (unity_SHBr, tmpvar_19);
  x1_18.y = dot (unity_SHBg, tmpvar_19);
  x1_18.z = dot (unity_SHBb, tmpvar_19);
  ambient_17 = (ambient_17 + (x1_18 + (unity_SHC.xyz * 
    ((tmpvar_16.x * tmpvar_16.x) - (tmpvar_16.y * tmpvar_16.y))
  )));
  tmpvar_7.xyz = ambient_17;
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = texcoord_10;
  xlv_TEXCOORD1 = n_12;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  xlv_TEXCOORD5 = tmpvar_7;
  xlv_TEXCOORD6 = tmpvar_9;
}


#endif
#ifdef FRAGMENT
#extension GL_ARB_shader_texture_lod : enable
uniform vec4 unity_SHAr;
uniform vec4 unity_SHAg;
uniform vec4 unity_SHAb;
uniform vec4 unity_ColorSpaceDielectricSpec;
uniform vec4 unity_ColorSpaceLuminance;
uniform vec4 _Color;
uniform sampler2D _MainTex;
uniform float _Metallic;
uniform float _Glossiness;
uniform sampler2D _OcclusionMap;
uniform float _OcclusionStrength;
uniform vec4 _EmissionColor;
uniform sampler2D _EmissionMap;
varying vec4 xlv_TEXCOORD0;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
void main ()
{
  vec3 color_1;
  vec2 tmpvar_2;
  tmpvar_2.x = _Metallic;
  tmpvar_2.y = _Glossiness;
  float tmpvar_3;
  tmpvar_3 = tmpvar_2.y;
  vec3 tmpvar_4;
  tmpvar_4 = (_Color.xyz * texture2D (_MainTex, xlv_TEXCOORD0.xy).xyz);
  vec3 tmpvar_5;
  vec3 tmpvar_6;
  tmpvar_6 = mix (unity_ColorSpaceDielectricSpec.xyz, tmpvar_4, vec3(_Metallic));
  tmpvar_5 = (tmpvar_4 * (unity_ColorSpaceDielectricSpec.w - (_Metallic * unity_ColorSpaceDielectricSpec.w)));
  vec3 tmpvar_7;
  tmpvar_7 = normalize(xlv_TEXCOORD2_2.xyz);
  float tmpvar_8;
  tmpvar_8 = ((1.0 - _OcclusionStrength) + (texture2D (_OcclusionMap, xlv_TEXCOORD0.xy).y * _OcclusionStrength));
  vec3 tmpvar_9;
  tmpvar_9 = vec3(0.0, 0.0, 0.0);
  vec3 ambient_10;
  vec4 tmpvar_11;
  tmpvar_11.w = 1.0;
  tmpvar_11.xyz = tmpvar_7;
  vec3 x_12;
  x_12.x = dot (unity_SHAr, tmpvar_11);
  x_12.y = dot (unity_SHAg, tmpvar_11);
  x_12.z = dot (unity_SHAb, tmpvar_11);
  vec3 tmpvar_13;
  tmpvar_13 = max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD5.xyz + x_12));
  ambient_10 = tmpvar_13;
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    ambient_10 = max (((1.055 * 
      pow (max (tmpvar_13, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
    ) - 0.055), vec3(0.0, 0.0, 0.0));
  };
  tmpvar_9 = (ambient_10 * tmpvar_8);
  vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = (tmpvar_5 * tmpvar_9);
  color_1 = (tmpvar_14.xyz + (texture2D (_EmissionMap, xlv_TEXCOORD0.xy).xyz * _EmissionColor.xyz));
  color_1 = exp2(-(color_1));
  vec4 tmpvar_15;
  tmpvar_15.xyz = tmpvar_5;
  tmpvar_15.w = tmpvar_8;
  vec4 tmpvar_16;
  tmpvar_16.xyz = tmpvar_6;
  tmpvar_16.w = tmpvar_3;
  vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = ((tmpvar_7 * 0.5) + 0.5);
  vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = color_1;
  gl_FragData[0] = tmpvar_15;
  gl_FragData[1] = tmpvar_16;
  gl_FragData[2] = tmpvar_17;
  gl_FragData[3] = tmpvar_18;
}


#endif
"
}
SubProgram "d3d9 " {
// Stats: 34 math
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "_ALPHABLEND_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Matrix 4 [_Object2World] 3
Matrix 7 [_World2Object] 3
Matrix 0 [glstate_matrix_mvp]
Vector 16 [_DetailAlbedoMap_ST]
Vector 15 [_MainTex_ST]
Float 17 [_UVSec]
Vector 10 [_WorldSpaceCameraPos]
Vector 13 [unity_SHBb]
Vector 12 [unity_SHBg]
Vector 11 [unity_SHBr]
Vector 14 [unity_SHC]
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   row_major float4x4 _Object2World;
//   float _UVSec;
//   row_major float4x4 _World2Object;
//   float3 _WorldSpaceCameraPos;
//   row_major float4x4 glstate_matrix_mvp;
//   float4 unity_SHBb;
//   float4 unity_SHBg;
//   float4 unity_SHBr;
//   float4 unity_SHC;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   glstate_matrix_mvp   c0       4
//   _Object2World        c4       3
//   _World2Object        c7       3
//   _WorldSpaceCameraPos c10      1
//   unity_SHBr           c11      1
//   unity_SHBg           c12      1
//   unity_SHBb           c13      1
//   unity_SHC            c14      1
//   _MainTex_ST          c15      1
//   _DetailAlbedoMap_ST  c16      1
//   _UVSec               c17      1
//

    vs_3_0
    def c18, 0, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6
    dcl_texcoord6 o7.xyz
    dp4 o0.x, c0, v0
    dp4 o0.y, c1, v0
    dp4 o0.z, c2, v0
    dp4 o0.w, c3, v0
    mad o1.xy, v2, c15, c15.zwzw
    abs r0.x, c17.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c16.xyxy, c16
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add o2.xyz, r0, -c10
    mov o7.xyz, r0
    mul r0.xyz, c8, v1.y
    mad r0.xyz, c7, v1.x, r0
    mad r0.xyz, c9, v1.z, r0
    nrm r1.xyz, r0
    mul r0.x, r1.y, r1.y
    mad r0.x, r1.x, r1.x, -r0.x
    mul r2, r1.yzzx, r1.xyzz
    mov o5.xyz, r1
    dp4 r1.x, c11, r2
    dp4 r1.y, c12, r2
    dp4 r1.z, c13, r2
    mad o6.xyz, c14, r0.x, r1
    mov o3, c18.x
    mov o4, c18.x
    mov o5.w, c18.x
    mov o6.w, c18.x

// approximately 33 instruction slots used
"
}
SubProgram "d3d11 " {
// Stats: 33 math
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "_ALPHABLEND_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
ConstBuffer "$Globals" 240
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 656 [unity_SHBr]
Vector 672 [unity_SHBg]
Vector 688 [unity_SHBb]
Vector 704 [unity_SHC]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer cb0[14], immediateIndexed
      dcl_constantbuffer cb1[5], immediateIndexed
      dcl_constantbuffer cb2[45], immediateIndexed
      dcl_constantbuffer cb3[19], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyz
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: mad o0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   4: eq r0.x, cb0[13].z, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[11].xxxy, cb0[11].zzzw
   7: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  13: mov o7.xyz, r0.xyzx
  14: mov o3.xyzw, l(0,0,0,0)
  15: mov o4.xyzw, l(0,0,0,0)
  16: mul r0.x, v1.x, cb3[16].x
  17: mul r0.y, v1.x, cb3[17].x
  18: mul r0.z, v1.x, cb3[18].x
  19: mul r1.x, v1.y, cb3[16].y
  20: mul r1.y, v1.y, cb3[17].y
  21: mul r1.z, v1.y, cb3[18].y
  22: add r0.xyz, r0.xyzx, r1.xyzx
  23: mul r1.x, v1.z, cb3[16].z
  24: mul r1.y, v1.z, cb3[17].z
  25: mul r1.z, v1.z, cb3[18].z
  26: add r0.xyz, r0.xyzx, r1.xyzx
  27: dp3 r0.w, r0.xyzx, r0.xyzx
  28: rsq r0.w, r0.w
  29: mul r0.xyz, r0.wwww, r0.xyzx
  30: mov o5.xyz, r0.xyzx
  31: mov o5.w, l(0)
  32: mul r0.w, r0.y, r0.y
  33: mad r0.w, r0.x, r0.x, -r0.w
  34: mul r1.xyzw, r0.yzzx, r0.xyzz
  35: dp4 r0.x, cb2[41].xyzw, r1.xyzw
  36: dp4 r0.y, cb2[42].xyzw, r1.xyzw
  37: dp4 r0.z, cb2[43].xyzw, r1.xyzw
  38: mad o6.xyz, cb2[44].xyzx, r0.wwww, r0.xyzx
  39: mov o6.w, l(0)
  40: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
// Stats: 31 math, 2 textures, 1 branches
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_OFF" }
"#version 120

#ifdef VERTEX
uniform vec3 _WorldSpaceCameraPos;
uniform vec4 unity_SHBr;
uniform vec4 unity_SHBg;
uniform vec4 unity_SHBb;
uniform vec4 unity_SHC;

uniform mat4 _Object2World;
uniform mat4 _World2Object;
uniform vec4 unity_WorldTransformParams;
uniform vec4 unity_ColorSpaceLuminance;
uniform vec4 _MainTex_ST;
uniform vec4 _DetailAlbedoMap_ST;
uniform float _UVSec;
attribute vec4 TANGENT;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
varying vec3 xlv_TEXCOORD6;
void main ()
{
  vec2 tmpvar_1;
  tmpvar_1 = gl_MultiTexCoord0.xy;
  vec2 tmpvar_2;
  tmpvar_2 = gl_MultiTexCoord1.xy;
  vec4 tmpvar_3;
  vec4 tmpvar_4;
  vec4 tmpvar_5;
  vec4 tmpvar_6;
  vec4 tmpvar_7;
  vec4 tmpvar_8;
  tmpvar_8 = (_Object2World * gl_Vertex);
  vec3 tmpvar_9;
  tmpvar_9 = tmpvar_8.xyz;
  tmpvar_3 = (gl_ModelViewProjectionMatrix * gl_Vertex);
  vec4 texcoord_10;
  texcoord_10.xy = ((gl_MultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  vec2 tmpvar_11;
  if ((_UVSec == 0.0)) {
    tmpvar_11 = tmpvar_1;
  } else {
    tmpvar_11 = tmpvar_2;
  };
  texcoord_10.zw = ((tmpvar_11 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  vec3 n_12;
  n_12 = (tmpvar_8.xyz - _WorldSpaceCameraPos);
  vec4 v_13;
  v_13.x = _World2Object[0].x;
  v_13.y = _World2Object[1].x;
  v_13.z = _World2Object[2].x;
  v_13.w = _World2Object[3].x;
  vec4 v_14;
  v_14.x = _World2Object[0].y;
  v_14.y = _World2Object[1].y;
  v_14.z = _World2Object[2].y;
  v_14.w = _World2Object[3].y;
  vec4 v_15;
  v_15.x = _World2Object[0].z;
  v_15.y = _World2Object[1].z;
  v_15.z = _World2Object[2].z;
  v_15.w = _World2Object[3].z;
  vec3 tmpvar_16;
  tmpvar_16 = normalize(((
    (v_13.xyz * gl_Normal.x)
   + 
    (v_14.xyz * gl_Normal.y)
  ) + (v_15.xyz * gl_Normal.z)));
  mat3 tmpvar_17;
  tmpvar_17[0] = _Object2World[0].xyz;
  tmpvar_17[1] = _Object2World[1].xyz;
  tmpvar_17[2] = _Object2World[2].xyz;
  vec4 tmpvar_18;
  tmpvar_18.xyz = normalize((tmpvar_17 * TANGENT.xyz));
  tmpvar_18.w = TANGENT.w;
  vec3 tmpvar_19;
  vec3 tmpvar_20;
  tmpvar_19 = tmpvar_18.xyz;
  tmpvar_20 = (((tmpvar_16.yzx * tmpvar_18.zxy) - (tmpvar_16.zxy * tmpvar_18.yzx)) * (TANGENT.w * unity_WorldTransformParams.w));
  vec3 tmpvar_21;
  vec3 tmpvar_22;
  vec3 tmpvar_23;
  tmpvar_21.x = tmpvar_19.x;
  tmpvar_21.y = tmpvar_20.x;
  tmpvar_21.z = tmpvar_16.x;
  tmpvar_22.x = tmpvar_19.y;
  tmpvar_22.y = tmpvar_20.y;
  tmpvar_22.z = tmpvar_16.y;
  tmpvar_23.x = tmpvar_19.z;
  tmpvar_23.y = tmpvar_20.z;
  tmpvar_23.z = tmpvar_16.z;
  vec3 v_24;
  v_24.x = tmpvar_21.x;
  v_24.y = tmpvar_22.x;
  v_24.z = tmpvar_23.x;
  tmpvar_4.xyz = v_24;
  vec3 v_25;
  v_25.x = tmpvar_21.y;
  v_25.y = tmpvar_22.y;
  v_25.z = tmpvar_23.y;
  tmpvar_5.xyz = v_25;
  vec3 v_26;
  v_26.x = tmpvar_21.z;
  v_26.y = tmpvar_22.z;
  v_26.z = tmpvar_23.z;
  tmpvar_6.xyz = v_26;
  tmpvar_7 = vec4(0.0, 0.0, 0.0, 0.0);
  vec3 ambient_27;
  ambient_27 = vec3(0.0, 0.0, 0.0);
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    ambient_27 = vec3(0.0, 0.0, 0.0);
  };
  vec3 x1_28;
  vec4 tmpvar_29;
  tmpvar_29 = (tmpvar_16.xyzz * tmpvar_16.yzzx);
  x1_28.x = dot (unity_SHBr, tmpvar_29);
  x1_28.y = dot (unity_SHBg, tmpvar_29);
  x1_28.z = dot (unity_SHBb, tmpvar_29);
  ambient_27 = (ambient_27 + (x1_28 + (unity_SHC.xyz * 
    ((tmpvar_16.x * tmpvar_16.x) - (tmpvar_16.y * tmpvar_16.y))
  )));
  tmpvar_7.xyz = ambient_27;
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = texcoord_10;
  xlv_TEXCOORD1 = n_12;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  xlv_TEXCOORD5 = tmpvar_7;
  xlv_TEXCOORD6 = tmpvar_9;
}


#endif
#ifdef FRAGMENT
#extension GL_ARB_shader_texture_lod : enable
uniform vec4 unity_SHAr;
uniform vec4 unity_SHAg;
uniform vec4 unity_SHAb;
uniform vec4 unity_ColorSpaceDielectricSpec;
uniform vec4 unity_ColorSpaceLuminance;
uniform vec4 _Color;
uniform sampler2D _MainTex;
uniform float _Metallic;
uniform float _Glossiness;
uniform sampler2D _OcclusionMap;
uniform float _OcclusionStrength;
varying vec4 xlv_TEXCOORD0;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
void main ()
{
  vec2 tmpvar_1;
  tmpvar_1.x = _Metallic;
  tmpvar_1.y = _Glossiness;
  float tmpvar_2;
  tmpvar_2 = tmpvar_1.y;
  vec3 tmpvar_3;
  tmpvar_3 = (_Color.xyz * texture2D (_MainTex, xlv_TEXCOORD0.xy).xyz);
  vec3 tmpvar_4;
  vec3 tmpvar_5;
  tmpvar_5 = mix (unity_ColorSpaceDielectricSpec.xyz, tmpvar_3, vec3(_Metallic));
  tmpvar_4 = (tmpvar_3 * (unity_ColorSpaceDielectricSpec.w - (_Metallic * unity_ColorSpaceDielectricSpec.w)));
  vec3 tmpvar_6;
  tmpvar_6 = normalize(xlv_TEXCOORD2_2.xyz);
  float tmpvar_7;
  tmpvar_7 = ((1.0 - _OcclusionStrength) + (texture2D (_OcclusionMap, xlv_TEXCOORD0.xy).y * _OcclusionStrength));
  vec3 tmpvar_8;
  tmpvar_8 = vec3(0.0, 0.0, 0.0);
  vec3 ambient_9;
  vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = tmpvar_6;
  vec3 x_11;
  x_11.x = dot (unity_SHAr, tmpvar_10);
  x_11.y = dot (unity_SHAg, tmpvar_10);
  x_11.z = dot (unity_SHAb, tmpvar_10);
  vec3 tmpvar_12;
  tmpvar_12 = max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD5.xyz + x_11));
  ambient_9 = tmpvar_12;
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    ambient_9 = max (((1.055 * 
      pow (max (tmpvar_12, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
    ) - 0.055), vec3(0.0, 0.0, 0.0));
  };
  tmpvar_8 = (ambient_9 * tmpvar_7);
  vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = (tmpvar_4 * tmpvar_8);
  vec4 tmpvar_14;
  tmpvar_14.xyz = tmpvar_4;
  tmpvar_14.w = tmpvar_7;
  vec4 tmpvar_15;
  tmpvar_15.xyz = tmpvar_5;
  tmpvar_15.w = tmpvar_2;
  vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = ((tmpvar_6 * 0.5) + 0.5);
  vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = exp2(-(tmpvar_13.xyz));
  gl_FragData[0] = tmpvar_14;
  gl_FragData[1] = tmpvar_15;
  gl_FragData[2] = tmpvar_16;
  gl_FragData[3] = tmpvar_17;
}


#endif
"
}
SubProgram "d3d9 " {
// Stats: 45 math
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_OFF" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
Matrix 4 [_Object2World] 3
Matrix 7 [_World2Object] 3
Matrix 0 [glstate_matrix_mvp]
Vector 17 [_DetailAlbedoMap_ST]
Vector 16 [_MainTex_ST]
Float 18 [_UVSec]
Vector 10 [_WorldSpaceCameraPos]
Vector 13 [unity_SHBb]
Vector 12 [unity_SHBg]
Vector 11 [unity_SHBr]
Vector 14 [unity_SHC]
Vector 15 [unity_WorldTransformParams]
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   row_major float4x4 _Object2World;
//   float _UVSec;
//   row_major float4x4 _World2Object;
//   float3 _WorldSpaceCameraPos;
//   row_major float4x4 glstate_matrix_mvp;
//   float4 unity_SHBb;
//   float4 unity_SHBg;
//   float4 unity_SHBr;
//   float4 unity_SHC;
//   float4 unity_WorldTransformParams;
//
//
// Registers:
//
//   Name                       Reg   Size
//   -------------------------- ----- ----
//   glstate_matrix_mvp         c0       4
//   _Object2World              c4       3
//   _World2Object              c7       3
//   _WorldSpaceCameraPos       c10      1
//   unity_SHBr                 c11      1
//   unity_SHBg                 c12      1
//   unity_SHBb                 c13      1
//   unity_SHC                  c14      1
//   unity_WorldTransformParams c15      1
//   _MainTex_ST                c16      1
//   _DetailAlbedoMap_ST        c17      1
//   _UVSec                     c18      1
//

    vs_3_0
    def c19, 0, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_tangent v4
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6
    dcl_texcoord6 o7.xyz
    dp4 o0.x, c0, v0
    dp4 o0.y, c1, v0
    dp4 o0.z, c2, v0
    dp4 o0.w, c3, v0
    mad o1.xy, v2, c16, c16.zwzw
    abs r0.x, c18.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c17.xyxy, c17
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add o2.xyz, r0, -c10
    mov o7.xyz, r0
    mul r0.x, c15.w, v4.w
    dp3 r1.x, c4, v4
    dp3 r1.y, c5, v4
    dp3 r1.z, c6, v4
    nrm r2.xyz, r1
    mul r0.yzw, c8.xxyz, v1.y
    mad r0.yzw, c7.xxyz, v1.x, r0
    mad r0.yzw, c9.xxyz, v1.z, r0
    nrm r1.xyz, r0.yzww
    mul r0.yzw, r2.xyzx, r1.xzxy
    mad r0.yzw, r1.xyzx, r2.xzxy, -r0
    mov o3.xyz, r2
    mul o4.xyz, r0.x, r0.yzww
    mul r0.x, r1.y, r1.y
    mad r0.x, r1.x, r1.x, -r0.x
    mul r2, r1.yzzx, r1.xyzz
    mov o5.xyz, r1
    dp4 r1.x, c11, r2
    dp4 r1.y, c12, r2
    dp4 r1.z, c13, r2
    mad o6.xyz, c14, r0.x, r1
    mov o3.w, c19.x
    mov o4.w, c19.x
    mov o5.w, c19.x
    mov o6.w, c19.x

// approximately 44 instruction slots used
"
}
SubProgram "d3d11 " {
// Stats: 43 math
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_OFF" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
ConstBuffer "$Globals" 240
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 656 [unity_SHBr]
Vector 672 [unity_SHBg]
Vector 688 [unity_SHBb]
Vector 704 [unity_SHC]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
Vector 336 [unity_WorldTransformParams]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer cb0[14], immediateIndexed
      dcl_constantbuffer cb1[5], immediateIndexed
      dcl_constantbuffer cb2[45], immediateIndexed
      dcl_constantbuffer cb3[22], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyz
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: mad o0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   4: eq r0.x, cb0[13].z, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[11].xxxy, cb0[11].zzzw
   7: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  13: mov o7.xyz, r0.xyzx
  14: mul r0.xyz, v4.yyyy, cb3[13].xyzx
  15: mad r0.xyz, cb3[12].xyzx, v4.xxxx, r0.xyzx
  16: mad r0.xyz, cb3[14].xyzx, v4.zzzz, r0.xyzx
  17: dp3 r0.w, r0.xyzx, r0.xyzx
  18: rsq r0.w, r0.w
  19: mul r0.xyz, r0.wwww, r0.xyzx
  20: mov o3.xyz, r0.xyzx
  21: mov o3.w, l(0)
  22: mul r1.x, v1.x, cb3[16].x
  23: mul r1.y, v1.x, cb3[17].x
  24: mul r1.z, v1.x, cb3[18].x
  25: mul r2.x, v1.y, cb3[16].y
  26: mul r2.y, v1.y, cb3[17].y
  27: mul r2.z, v1.y, cb3[18].y
  28: add r1.xyz, r1.xyzx, r2.xyzx
  29: mul r2.x, v1.z, cb3[16].z
  30: mul r2.y, v1.z, cb3[17].z
  31: mul r2.z, v1.z, cb3[18].z
  32: add r1.xyz, r1.xyzx, r2.xyzx
  33: dp3 r0.w, r1.xyzx, r1.xyzx
  34: rsq r0.w, r0.w
  35: mul r1.xyz, r0.wwww, r1.xyzx
  36: mul r2.xyz, r0.yzxy, r1.zxyz
  37: mad r0.xyz, r1.yzxy, r0.zxyz, -r2.xyzx
  38: mul r0.w, v4.w, cb3[21].w
  39: mul o4.xyz, r0.wwww, r0.xyzx
  40: mov o4.w, l(0)
  41: mov o5.xyz, r1.xyzx
  42: mov o5.w, l(0)
  43: mul r0.x, r1.y, r1.y
  44: mad r0.x, r1.x, r1.x, -r0.x
  45: mul r1.xyzw, r1.yzzx, r1.xyzz
  46: dp4 r2.x, cb2[41].xyzw, r1.xyzw
  47: dp4 r2.y, cb2[42].xyzw, r1.xyzw
  48: dp4 r2.z, cb2[43].xyzw, r1.xyzw
  49: mad o6.xyz, cb2[44].xyzx, r0.xxxx, r2.xyzx
  50: mov o6.w, l(0)
  51: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
// Stats: 33 math, 3 textures, 1 branches
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_OFF" "_EMISSION" }
"#version 120

#ifdef VERTEX
uniform vec3 _WorldSpaceCameraPos;
uniform vec4 unity_SHBr;
uniform vec4 unity_SHBg;
uniform vec4 unity_SHBb;
uniform vec4 unity_SHC;

uniform mat4 _Object2World;
uniform mat4 _World2Object;
uniform vec4 unity_WorldTransformParams;
uniform vec4 unity_ColorSpaceLuminance;
uniform vec4 _MainTex_ST;
uniform vec4 _DetailAlbedoMap_ST;
uniform float _UVSec;
attribute vec4 TANGENT;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
varying vec3 xlv_TEXCOORD6;
void main ()
{
  vec2 tmpvar_1;
  tmpvar_1 = gl_MultiTexCoord0.xy;
  vec2 tmpvar_2;
  tmpvar_2 = gl_MultiTexCoord1.xy;
  vec4 tmpvar_3;
  vec4 tmpvar_4;
  vec4 tmpvar_5;
  vec4 tmpvar_6;
  vec4 tmpvar_7;
  vec4 tmpvar_8;
  tmpvar_8 = (_Object2World * gl_Vertex);
  vec3 tmpvar_9;
  tmpvar_9 = tmpvar_8.xyz;
  tmpvar_3 = (gl_ModelViewProjectionMatrix * gl_Vertex);
  vec4 texcoord_10;
  texcoord_10.xy = ((gl_MultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  vec2 tmpvar_11;
  if ((_UVSec == 0.0)) {
    tmpvar_11 = tmpvar_1;
  } else {
    tmpvar_11 = tmpvar_2;
  };
  texcoord_10.zw = ((tmpvar_11 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  vec3 n_12;
  n_12 = (tmpvar_8.xyz - _WorldSpaceCameraPos);
  vec4 v_13;
  v_13.x = _World2Object[0].x;
  v_13.y = _World2Object[1].x;
  v_13.z = _World2Object[2].x;
  v_13.w = _World2Object[3].x;
  vec4 v_14;
  v_14.x = _World2Object[0].y;
  v_14.y = _World2Object[1].y;
  v_14.z = _World2Object[2].y;
  v_14.w = _World2Object[3].y;
  vec4 v_15;
  v_15.x = _World2Object[0].z;
  v_15.y = _World2Object[1].z;
  v_15.z = _World2Object[2].z;
  v_15.w = _World2Object[3].z;
  vec3 tmpvar_16;
  tmpvar_16 = normalize(((
    (v_13.xyz * gl_Normal.x)
   + 
    (v_14.xyz * gl_Normal.y)
  ) + (v_15.xyz * gl_Normal.z)));
  mat3 tmpvar_17;
  tmpvar_17[0] = _Object2World[0].xyz;
  tmpvar_17[1] = _Object2World[1].xyz;
  tmpvar_17[2] = _Object2World[2].xyz;
  vec4 tmpvar_18;
  tmpvar_18.xyz = normalize((tmpvar_17 * TANGENT.xyz));
  tmpvar_18.w = TANGENT.w;
  vec3 tmpvar_19;
  vec3 tmpvar_20;
  tmpvar_19 = tmpvar_18.xyz;
  tmpvar_20 = (((tmpvar_16.yzx * tmpvar_18.zxy) - (tmpvar_16.zxy * tmpvar_18.yzx)) * (TANGENT.w * unity_WorldTransformParams.w));
  vec3 tmpvar_21;
  vec3 tmpvar_22;
  vec3 tmpvar_23;
  tmpvar_21.x = tmpvar_19.x;
  tmpvar_21.y = tmpvar_20.x;
  tmpvar_21.z = tmpvar_16.x;
  tmpvar_22.x = tmpvar_19.y;
  tmpvar_22.y = tmpvar_20.y;
  tmpvar_22.z = tmpvar_16.y;
  tmpvar_23.x = tmpvar_19.z;
  tmpvar_23.y = tmpvar_20.z;
  tmpvar_23.z = tmpvar_16.z;
  vec3 v_24;
  v_24.x = tmpvar_21.x;
  v_24.y = tmpvar_22.x;
  v_24.z = tmpvar_23.x;
  tmpvar_4.xyz = v_24;
  vec3 v_25;
  v_25.x = tmpvar_21.y;
  v_25.y = tmpvar_22.y;
  v_25.z = tmpvar_23.y;
  tmpvar_5.xyz = v_25;
  vec3 v_26;
  v_26.x = tmpvar_21.z;
  v_26.y = tmpvar_22.z;
  v_26.z = tmpvar_23.z;
  tmpvar_6.xyz = v_26;
  tmpvar_7 = vec4(0.0, 0.0, 0.0, 0.0);
  vec3 ambient_27;
  ambient_27 = vec3(0.0, 0.0, 0.0);
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    ambient_27 = vec3(0.0, 0.0, 0.0);
  };
  vec3 x1_28;
  vec4 tmpvar_29;
  tmpvar_29 = (tmpvar_16.xyzz * tmpvar_16.yzzx);
  x1_28.x = dot (unity_SHBr, tmpvar_29);
  x1_28.y = dot (unity_SHBg, tmpvar_29);
  x1_28.z = dot (unity_SHBb, tmpvar_29);
  ambient_27 = (ambient_27 + (x1_28 + (unity_SHC.xyz * 
    ((tmpvar_16.x * tmpvar_16.x) - (tmpvar_16.y * tmpvar_16.y))
  )));
  tmpvar_7.xyz = ambient_27;
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = texcoord_10;
  xlv_TEXCOORD1 = n_12;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  xlv_TEXCOORD5 = tmpvar_7;
  xlv_TEXCOORD6 = tmpvar_9;
}


#endif
#ifdef FRAGMENT
#extension GL_ARB_shader_texture_lod : enable
uniform vec4 unity_SHAr;
uniform vec4 unity_SHAg;
uniform vec4 unity_SHAb;
uniform vec4 unity_ColorSpaceDielectricSpec;
uniform vec4 unity_ColorSpaceLuminance;
uniform vec4 _Color;
uniform sampler2D _MainTex;
uniform float _Metallic;
uniform float _Glossiness;
uniform sampler2D _OcclusionMap;
uniform float _OcclusionStrength;
uniform vec4 _EmissionColor;
uniform sampler2D _EmissionMap;
varying vec4 xlv_TEXCOORD0;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
void main ()
{
  vec3 color_1;
  vec2 tmpvar_2;
  tmpvar_2.x = _Metallic;
  tmpvar_2.y = _Glossiness;
  float tmpvar_3;
  tmpvar_3 = tmpvar_2.y;
  vec3 tmpvar_4;
  tmpvar_4 = (_Color.xyz * texture2D (_MainTex, xlv_TEXCOORD0.xy).xyz);
  vec3 tmpvar_5;
  vec3 tmpvar_6;
  tmpvar_6 = mix (unity_ColorSpaceDielectricSpec.xyz, tmpvar_4, vec3(_Metallic));
  tmpvar_5 = (tmpvar_4 * (unity_ColorSpaceDielectricSpec.w - (_Metallic * unity_ColorSpaceDielectricSpec.w)));
  vec3 tmpvar_7;
  tmpvar_7 = normalize(xlv_TEXCOORD2_2.xyz);
  float tmpvar_8;
  tmpvar_8 = ((1.0 - _OcclusionStrength) + (texture2D (_OcclusionMap, xlv_TEXCOORD0.xy).y * _OcclusionStrength));
  vec3 tmpvar_9;
  tmpvar_9 = vec3(0.0, 0.0, 0.0);
  vec3 ambient_10;
  vec4 tmpvar_11;
  tmpvar_11.w = 1.0;
  tmpvar_11.xyz = tmpvar_7;
  vec3 x_12;
  x_12.x = dot (unity_SHAr, tmpvar_11);
  x_12.y = dot (unity_SHAg, tmpvar_11);
  x_12.z = dot (unity_SHAb, tmpvar_11);
  vec3 tmpvar_13;
  tmpvar_13 = max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD5.xyz + x_12));
  ambient_10 = tmpvar_13;
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    ambient_10 = max (((1.055 * 
      pow (max (tmpvar_13, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
    ) - 0.055), vec3(0.0, 0.0, 0.0));
  };
  tmpvar_9 = (ambient_10 * tmpvar_8);
  vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = (tmpvar_5 * tmpvar_9);
  color_1 = (tmpvar_14.xyz + (texture2D (_EmissionMap, xlv_TEXCOORD0.xy).xyz * _EmissionColor.xyz));
  color_1 = exp2(-(color_1));
  vec4 tmpvar_15;
  tmpvar_15.xyz = tmpvar_5;
  tmpvar_15.w = tmpvar_8;
  vec4 tmpvar_16;
  tmpvar_16.xyz = tmpvar_6;
  tmpvar_16.w = tmpvar_3;
  vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = ((tmpvar_7 * 0.5) + 0.5);
  vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = color_1;
  gl_FragData[0] = tmpvar_15;
  gl_FragData[1] = tmpvar_16;
  gl_FragData[2] = tmpvar_17;
  gl_FragData[3] = tmpvar_18;
}


#endif
"
}
SubProgram "d3d9 " {
// Stats: 45 math
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_OFF" "_EMISSION" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
Matrix 4 [_Object2World] 3
Matrix 7 [_World2Object] 3
Matrix 0 [glstate_matrix_mvp]
Vector 17 [_DetailAlbedoMap_ST]
Vector 16 [_MainTex_ST]
Float 18 [_UVSec]
Vector 10 [_WorldSpaceCameraPos]
Vector 13 [unity_SHBb]
Vector 12 [unity_SHBg]
Vector 11 [unity_SHBr]
Vector 14 [unity_SHC]
Vector 15 [unity_WorldTransformParams]
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   row_major float4x4 _Object2World;
//   float _UVSec;
//   row_major float4x4 _World2Object;
//   float3 _WorldSpaceCameraPos;
//   row_major float4x4 glstate_matrix_mvp;
//   float4 unity_SHBb;
//   float4 unity_SHBg;
//   float4 unity_SHBr;
//   float4 unity_SHC;
//   float4 unity_WorldTransformParams;
//
//
// Registers:
//
//   Name                       Reg   Size
//   -------------------------- ----- ----
//   glstate_matrix_mvp         c0       4
//   _Object2World              c4       3
//   _World2Object              c7       3
//   _WorldSpaceCameraPos       c10      1
//   unity_SHBr                 c11      1
//   unity_SHBg                 c12      1
//   unity_SHBb                 c13      1
//   unity_SHC                  c14      1
//   unity_WorldTransformParams c15      1
//   _MainTex_ST                c16      1
//   _DetailAlbedoMap_ST        c17      1
//   _UVSec                     c18      1
//

    vs_3_0
    def c19, 0, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_tangent v4
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6
    dcl_texcoord6 o7.xyz
    dp4 o0.x, c0, v0
    dp4 o0.y, c1, v0
    dp4 o0.z, c2, v0
    dp4 o0.w, c3, v0
    mad o1.xy, v2, c16, c16.zwzw
    abs r0.x, c18.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c17.xyxy, c17
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add o2.xyz, r0, -c10
    mov o7.xyz, r0
    mul r0.x, c15.w, v4.w
    dp3 r1.x, c4, v4
    dp3 r1.y, c5, v4
    dp3 r1.z, c6, v4
    nrm r2.xyz, r1
    mul r0.yzw, c8.xxyz, v1.y
    mad r0.yzw, c7.xxyz, v1.x, r0
    mad r0.yzw, c9.xxyz, v1.z, r0
    nrm r1.xyz, r0.yzww
    mul r0.yzw, r2.xyzx, r1.xzxy
    mad r0.yzw, r1.xyzx, r2.xzxy, -r0
    mov o3.xyz, r2
    mul o4.xyz, r0.x, r0.yzww
    mul r0.x, r1.y, r1.y
    mad r0.x, r1.x, r1.x, -r0.x
    mul r2, r1.yzzx, r1.xyzz
    mov o5.xyz, r1
    dp4 r1.x, c11, r2
    dp4 r1.y, c12, r2
    dp4 r1.z, c13, r2
    mad o6.xyz, c14, r0.x, r1
    mov o3.w, c19.x
    mov o4.w, c19.x
    mov o5.w, c19.x
    mov o6.w, c19.x

// approximately 44 instruction slots used
"
}
SubProgram "d3d11 " {
// Stats: 43 math
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_OFF" "_EMISSION" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
ConstBuffer "$Globals" 240
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 656 [unity_SHBr]
Vector 672 [unity_SHBg]
Vector 688 [unity_SHBb]
Vector 704 [unity_SHC]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
Vector 336 [unity_WorldTransformParams]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer cb0[14], immediateIndexed
      dcl_constantbuffer cb1[5], immediateIndexed
      dcl_constantbuffer cb2[45], immediateIndexed
      dcl_constantbuffer cb3[22], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyz
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: mad o0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   4: eq r0.x, cb0[13].z, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[11].xxxy, cb0[11].zzzw
   7: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  13: mov o7.xyz, r0.xyzx
  14: mul r0.xyz, v4.yyyy, cb3[13].xyzx
  15: mad r0.xyz, cb3[12].xyzx, v4.xxxx, r0.xyzx
  16: mad r0.xyz, cb3[14].xyzx, v4.zzzz, r0.xyzx
  17: dp3 r0.w, r0.xyzx, r0.xyzx
  18: rsq r0.w, r0.w
  19: mul r0.xyz, r0.wwww, r0.xyzx
  20: mov o3.xyz, r0.xyzx
  21: mov o3.w, l(0)
  22: mul r1.x, v1.x, cb3[16].x
  23: mul r1.y, v1.x, cb3[17].x
  24: mul r1.z, v1.x, cb3[18].x
  25: mul r2.x, v1.y, cb3[16].y
  26: mul r2.y, v1.y, cb3[17].y
  27: mul r2.z, v1.y, cb3[18].y
  28: add r1.xyz, r1.xyzx, r2.xyzx
  29: mul r2.x, v1.z, cb3[16].z
  30: mul r2.y, v1.z, cb3[17].z
  31: mul r2.z, v1.z, cb3[18].z
  32: add r1.xyz, r1.xyzx, r2.xyzx
  33: dp3 r0.w, r1.xyzx, r1.xyzx
  34: rsq r0.w, r0.w
  35: mul r1.xyz, r0.wwww, r1.xyzx
  36: mul r2.xyz, r0.yzxy, r1.zxyz
  37: mad r0.xyz, r1.yzxy, r0.zxyz, -r2.xyzx
  38: mul r0.w, v4.w, cb3[21].w
  39: mul o4.xyz, r0.wwww, r0.xyzx
  40: mov o4.w, l(0)
  41: mov o5.xyz, r1.xyzx
  42: mov o5.w, l(0)
  43: mul r0.x, r1.y, r1.y
  44: mad r0.x, r1.x, r1.x, -r0.x
  45: mul r1.xyzw, r1.yzzx, r1.xyzz
  46: dp4 r2.x, cb2[41].xyzw, r1.xyzw
  47: dp4 r2.y, cb2[42].xyzw, r1.xyzw
  48: dp4 r2.z, cb2[43].xyzw, r1.xyzw
  49: mad o6.xyz, cb2[44].xyzx, r0.xxxx, r2.xyzx
  50: mov o6.w, l(0)
  51: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
// Stats: 31 math, 2 textures, 1 branches
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_OFF" "_ALPHABLEND_ON" }
"#version 120

#ifdef VERTEX
uniform vec3 _WorldSpaceCameraPos;
uniform vec4 unity_SHBr;
uniform vec4 unity_SHBg;
uniform vec4 unity_SHBb;
uniform vec4 unity_SHC;

uniform mat4 _Object2World;
uniform mat4 _World2Object;
uniform vec4 unity_WorldTransformParams;
uniform vec4 unity_ColorSpaceLuminance;
uniform vec4 _MainTex_ST;
uniform vec4 _DetailAlbedoMap_ST;
uniform float _UVSec;
attribute vec4 TANGENT;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
varying vec3 xlv_TEXCOORD6;
void main ()
{
  vec2 tmpvar_1;
  tmpvar_1 = gl_MultiTexCoord0.xy;
  vec2 tmpvar_2;
  tmpvar_2 = gl_MultiTexCoord1.xy;
  vec4 tmpvar_3;
  vec4 tmpvar_4;
  vec4 tmpvar_5;
  vec4 tmpvar_6;
  vec4 tmpvar_7;
  vec4 tmpvar_8;
  tmpvar_8 = (_Object2World * gl_Vertex);
  vec3 tmpvar_9;
  tmpvar_9 = tmpvar_8.xyz;
  tmpvar_3 = (gl_ModelViewProjectionMatrix * gl_Vertex);
  vec4 texcoord_10;
  texcoord_10.xy = ((gl_MultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  vec2 tmpvar_11;
  if ((_UVSec == 0.0)) {
    tmpvar_11 = tmpvar_1;
  } else {
    tmpvar_11 = tmpvar_2;
  };
  texcoord_10.zw = ((tmpvar_11 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  vec3 n_12;
  n_12 = (tmpvar_8.xyz - _WorldSpaceCameraPos);
  vec4 v_13;
  v_13.x = _World2Object[0].x;
  v_13.y = _World2Object[1].x;
  v_13.z = _World2Object[2].x;
  v_13.w = _World2Object[3].x;
  vec4 v_14;
  v_14.x = _World2Object[0].y;
  v_14.y = _World2Object[1].y;
  v_14.z = _World2Object[2].y;
  v_14.w = _World2Object[3].y;
  vec4 v_15;
  v_15.x = _World2Object[0].z;
  v_15.y = _World2Object[1].z;
  v_15.z = _World2Object[2].z;
  v_15.w = _World2Object[3].z;
  vec3 tmpvar_16;
  tmpvar_16 = normalize(((
    (v_13.xyz * gl_Normal.x)
   + 
    (v_14.xyz * gl_Normal.y)
  ) + (v_15.xyz * gl_Normal.z)));
  mat3 tmpvar_17;
  tmpvar_17[0] = _Object2World[0].xyz;
  tmpvar_17[1] = _Object2World[1].xyz;
  tmpvar_17[2] = _Object2World[2].xyz;
  vec4 tmpvar_18;
  tmpvar_18.xyz = normalize((tmpvar_17 * TANGENT.xyz));
  tmpvar_18.w = TANGENT.w;
  vec3 tmpvar_19;
  vec3 tmpvar_20;
  tmpvar_19 = tmpvar_18.xyz;
  tmpvar_20 = (((tmpvar_16.yzx * tmpvar_18.zxy) - (tmpvar_16.zxy * tmpvar_18.yzx)) * (TANGENT.w * unity_WorldTransformParams.w));
  vec3 tmpvar_21;
  vec3 tmpvar_22;
  vec3 tmpvar_23;
  tmpvar_21.x = tmpvar_19.x;
  tmpvar_21.y = tmpvar_20.x;
  tmpvar_21.z = tmpvar_16.x;
  tmpvar_22.x = tmpvar_19.y;
  tmpvar_22.y = tmpvar_20.y;
  tmpvar_22.z = tmpvar_16.y;
  tmpvar_23.x = tmpvar_19.z;
  tmpvar_23.y = tmpvar_20.z;
  tmpvar_23.z = tmpvar_16.z;
  vec3 v_24;
  v_24.x = tmpvar_21.x;
  v_24.y = tmpvar_22.x;
  v_24.z = tmpvar_23.x;
  tmpvar_4.xyz = v_24;
  vec3 v_25;
  v_25.x = tmpvar_21.y;
  v_25.y = tmpvar_22.y;
  v_25.z = tmpvar_23.y;
  tmpvar_5.xyz = v_25;
  vec3 v_26;
  v_26.x = tmpvar_21.z;
  v_26.y = tmpvar_22.z;
  v_26.z = tmpvar_23.z;
  tmpvar_6.xyz = v_26;
  tmpvar_7 = vec4(0.0, 0.0, 0.0, 0.0);
  vec3 ambient_27;
  ambient_27 = vec3(0.0, 0.0, 0.0);
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    ambient_27 = vec3(0.0, 0.0, 0.0);
  };
  vec3 x1_28;
  vec4 tmpvar_29;
  tmpvar_29 = (tmpvar_16.xyzz * tmpvar_16.yzzx);
  x1_28.x = dot (unity_SHBr, tmpvar_29);
  x1_28.y = dot (unity_SHBg, tmpvar_29);
  x1_28.z = dot (unity_SHBb, tmpvar_29);
  ambient_27 = (ambient_27 + (x1_28 + (unity_SHC.xyz * 
    ((tmpvar_16.x * tmpvar_16.x) - (tmpvar_16.y * tmpvar_16.y))
  )));
  tmpvar_7.xyz = ambient_27;
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = texcoord_10;
  xlv_TEXCOORD1 = n_12;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  xlv_TEXCOORD5 = tmpvar_7;
  xlv_TEXCOORD6 = tmpvar_9;
}


#endif
#ifdef FRAGMENT
#extension GL_ARB_shader_texture_lod : enable
uniform vec4 unity_SHAr;
uniform vec4 unity_SHAg;
uniform vec4 unity_SHAb;
uniform vec4 unity_ColorSpaceDielectricSpec;
uniform vec4 unity_ColorSpaceLuminance;
uniform vec4 _Color;
uniform sampler2D _MainTex;
uniform float _Metallic;
uniform float _Glossiness;
uniform sampler2D _OcclusionMap;
uniform float _OcclusionStrength;
varying vec4 xlv_TEXCOORD0;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
void main ()
{
  vec2 tmpvar_1;
  tmpvar_1.x = _Metallic;
  tmpvar_1.y = _Glossiness;
  float tmpvar_2;
  tmpvar_2 = tmpvar_1.y;
  vec3 tmpvar_3;
  tmpvar_3 = (_Color.xyz * texture2D (_MainTex, xlv_TEXCOORD0.xy).xyz);
  vec3 tmpvar_4;
  vec3 tmpvar_5;
  tmpvar_5 = mix (unity_ColorSpaceDielectricSpec.xyz, tmpvar_3, vec3(_Metallic));
  tmpvar_4 = (tmpvar_3 * (unity_ColorSpaceDielectricSpec.w - (_Metallic * unity_ColorSpaceDielectricSpec.w)));
  vec3 tmpvar_6;
  tmpvar_6 = normalize(xlv_TEXCOORD2_2.xyz);
  float tmpvar_7;
  tmpvar_7 = ((1.0 - _OcclusionStrength) + (texture2D (_OcclusionMap, xlv_TEXCOORD0.xy).y * _OcclusionStrength));
  vec3 tmpvar_8;
  tmpvar_8 = vec3(0.0, 0.0, 0.0);
  vec3 ambient_9;
  vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = tmpvar_6;
  vec3 x_11;
  x_11.x = dot (unity_SHAr, tmpvar_10);
  x_11.y = dot (unity_SHAg, tmpvar_10);
  x_11.z = dot (unity_SHAb, tmpvar_10);
  vec3 tmpvar_12;
  tmpvar_12 = max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD5.xyz + x_11));
  ambient_9 = tmpvar_12;
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    ambient_9 = max (((1.055 * 
      pow (max (tmpvar_12, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
    ) - 0.055), vec3(0.0, 0.0, 0.0));
  };
  tmpvar_8 = (ambient_9 * tmpvar_7);
  vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = (tmpvar_4 * tmpvar_8);
  vec4 tmpvar_14;
  tmpvar_14.xyz = tmpvar_4;
  tmpvar_14.w = tmpvar_7;
  vec4 tmpvar_15;
  tmpvar_15.xyz = tmpvar_5;
  tmpvar_15.w = tmpvar_2;
  vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = ((tmpvar_6 * 0.5) + 0.5);
  vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = exp2(-(tmpvar_13.xyz));
  gl_FragData[0] = tmpvar_14;
  gl_FragData[1] = tmpvar_15;
  gl_FragData[2] = tmpvar_16;
  gl_FragData[3] = tmpvar_17;
}


#endif
"
}
SubProgram "d3d9 " {
// Stats: 45 math
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_OFF" "_ALPHABLEND_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
Matrix 4 [_Object2World] 3
Matrix 7 [_World2Object] 3
Matrix 0 [glstate_matrix_mvp]
Vector 17 [_DetailAlbedoMap_ST]
Vector 16 [_MainTex_ST]
Float 18 [_UVSec]
Vector 10 [_WorldSpaceCameraPos]
Vector 13 [unity_SHBb]
Vector 12 [unity_SHBg]
Vector 11 [unity_SHBr]
Vector 14 [unity_SHC]
Vector 15 [unity_WorldTransformParams]
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   row_major float4x4 _Object2World;
//   float _UVSec;
//   row_major float4x4 _World2Object;
//   float3 _WorldSpaceCameraPos;
//   row_major float4x4 glstate_matrix_mvp;
//   float4 unity_SHBb;
//   float4 unity_SHBg;
//   float4 unity_SHBr;
//   float4 unity_SHC;
//   float4 unity_WorldTransformParams;
//
//
// Registers:
//
//   Name                       Reg   Size
//   -------------------------- ----- ----
//   glstate_matrix_mvp         c0       4
//   _Object2World              c4       3
//   _World2Object              c7       3
//   _WorldSpaceCameraPos       c10      1
//   unity_SHBr                 c11      1
//   unity_SHBg                 c12      1
//   unity_SHBb                 c13      1
//   unity_SHC                  c14      1
//   unity_WorldTransformParams c15      1
//   _MainTex_ST                c16      1
//   _DetailAlbedoMap_ST        c17      1
//   _UVSec                     c18      1
//

    vs_3_0
    def c19, 0, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_tangent v4
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6
    dcl_texcoord6 o7.xyz
    dp4 o0.x, c0, v0
    dp4 o0.y, c1, v0
    dp4 o0.z, c2, v0
    dp4 o0.w, c3, v0
    mad o1.xy, v2, c16, c16.zwzw
    abs r0.x, c18.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c17.xyxy, c17
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add o2.xyz, r0, -c10
    mov o7.xyz, r0
    mul r0.x, c15.w, v4.w
    dp3 r1.x, c4, v4
    dp3 r1.y, c5, v4
    dp3 r1.z, c6, v4
    nrm r2.xyz, r1
    mul r0.yzw, c8.xxyz, v1.y
    mad r0.yzw, c7.xxyz, v1.x, r0
    mad r0.yzw, c9.xxyz, v1.z, r0
    nrm r1.xyz, r0.yzww
    mul r0.yzw, r2.xyzx, r1.xzxy
    mad r0.yzw, r1.xyzx, r2.xzxy, -r0
    mov o3.xyz, r2
    mul o4.xyz, r0.x, r0.yzww
    mul r0.x, r1.y, r1.y
    mad r0.x, r1.x, r1.x, -r0.x
    mul r2, r1.yzzx, r1.xyzz
    mov o5.xyz, r1
    dp4 r1.x, c11, r2
    dp4 r1.y, c12, r2
    dp4 r1.z, c13, r2
    mad o6.xyz, c14, r0.x, r1
    mov o3.w, c19.x
    mov o4.w, c19.x
    mov o5.w, c19.x
    mov o6.w, c19.x

// approximately 44 instruction slots used
"
}
SubProgram "d3d11 " {
// Stats: 43 math
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_OFF" "_ALPHABLEND_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
ConstBuffer "$Globals" 240
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 656 [unity_SHBr]
Vector 672 [unity_SHBg]
Vector 688 [unity_SHBb]
Vector 704 [unity_SHC]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
Vector 336 [unity_WorldTransformParams]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer cb0[14], immediateIndexed
      dcl_constantbuffer cb1[5], immediateIndexed
      dcl_constantbuffer cb2[45], immediateIndexed
      dcl_constantbuffer cb3[22], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyz
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: mad o0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   4: eq r0.x, cb0[13].z, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[11].xxxy, cb0[11].zzzw
   7: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  13: mov o7.xyz, r0.xyzx
  14: mul r0.xyz, v4.yyyy, cb3[13].xyzx
  15: mad r0.xyz, cb3[12].xyzx, v4.xxxx, r0.xyzx
  16: mad r0.xyz, cb3[14].xyzx, v4.zzzz, r0.xyzx
  17: dp3 r0.w, r0.xyzx, r0.xyzx
  18: rsq r0.w, r0.w
  19: mul r0.xyz, r0.wwww, r0.xyzx
  20: mov o3.xyz, r0.xyzx
  21: mov o3.w, l(0)
  22: mul r1.x, v1.x, cb3[16].x
  23: mul r1.y, v1.x, cb3[17].x
  24: mul r1.z, v1.x, cb3[18].x
  25: mul r2.x, v1.y, cb3[16].y
  26: mul r2.y, v1.y, cb3[17].y
  27: mul r2.z, v1.y, cb3[18].y
  28: add r1.xyz, r1.xyzx, r2.xyzx
  29: mul r2.x, v1.z, cb3[16].z
  30: mul r2.y, v1.z, cb3[17].z
  31: mul r2.z, v1.z, cb3[18].z
  32: add r1.xyz, r1.xyzx, r2.xyzx
  33: dp3 r0.w, r1.xyzx, r1.xyzx
  34: rsq r0.w, r0.w
  35: mul r1.xyz, r0.wwww, r1.xyzx
  36: mul r2.xyz, r0.yzxy, r1.zxyz
  37: mad r0.xyz, r1.yzxy, r0.zxyz, -r2.xyzx
  38: mul r0.w, v4.w, cb3[21].w
  39: mul o4.xyz, r0.wwww, r0.xyzx
  40: mov o4.w, l(0)
  41: mov o5.xyz, r1.xyzx
  42: mov o5.w, l(0)
  43: mul r0.x, r1.y, r1.y
  44: mad r0.x, r1.x, r1.x, -r0.x
  45: mul r1.xyzw, r1.yzzx, r1.xyzz
  46: dp4 r2.x, cb2[41].xyzw, r1.xyzw
  47: dp4 r2.y, cb2[42].xyzw, r1.xyzw
  48: dp4 r2.z, cb2[43].xyzw, r1.xyzw
  49: mad o6.xyz, cb2[44].xyzx, r0.xxxx, r2.xyzx
  50: mov o6.w, l(0)
  51: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
// Stats: 33 math, 3 textures, 1 branches
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "_ALPHABLEND_ON" }
"#version 120

#ifdef VERTEX
uniform vec3 _WorldSpaceCameraPos;
uniform vec4 unity_SHBr;
uniform vec4 unity_SHBg;
uniform vec4 unity_SHBb;
uniform vec4 unity_SHC;

uniform mat4 _Object2World;
uniform mat4 _World2Object;
uniform vec4 unity_WorldTransformParams;
uniform vec4 unity_ColorSpaceLuminance;
uniform vec4 _MainTex_ST;
uniform vec4 _DetailAlbedoMap_ST;
uniform float _UVSec;
attribute vec4 TANGENT;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
varying vec3 xlv_TEXCOORD6;
void main ()
{
  vec2 tmpvar_1;
  tmpvar_1 = gl_MultiTexCoord0.xy;
  vec2 tmpvar_2;
  tmpvar_2 = gl_MultiTexCoord1.xy;
  vec4 tmpvar_3;
  vec4 tmpvar_4;
  vec4 tmpvar_5;
  vec4 tmpvar_6;
  vec4 tmpvar_7;
  vec4 tmpvar_8;
  tmpvar_8 = (_Object2World * gl_Vertex);
  vec3 tmpvar_9;
  tmpvar_9 = tmpvar_8.xyz;
  tmpvar_3 = (gl_ModelViewProjectionMatrix * gl_Vertex);
  vec4 texcoord_10;
  texcoord_10.xy = ((gl_MultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  vec2 tmpvar_11;
  if ((_UVSec == 0.0)) {
    tmpvar_11 = tmpvar_1;
  } else {
    tmpvar_11 = tmpvar_2;
  };
  texcoord_10.zw = ((tmpvar_11 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  vec3 n_12;
  n_12 = (tmpvar_8.xyz - _WorldSpaceCameraPos);
  vec4 v_13;
  v_13.x = _World2Object[0].x;
  v_13.y = _World2Object[1].x;
  v_13.z = _World2Object[2].x;
  v_13.w = _World2Object[3].x;
  vec4 v_14;
  v_14.x = _World2Object[0].y;
  v_14.y = _World2Object[1].y;
  v_14.z = _World2Object[2].y;
  v_14.w = _World2Object[3].y;
  vec4 v_15;
  v_15.x = _World2Object[0].z;
  v_15.y = _World2Object[1].z;
  v_15.z = _World2Object[2].z;
  v_15.w = _World2Object[3].z;
  vec3 tmpvar_16;
  tmpvar_16 = normalize(((
    (v_13.xyz * gl_Normal.x)
   + 
    (v_14.xyz * gl_Normal.y)
  ) + (v_15.xyz * gl_Normal.z)));
  mat3 tmpvar_17;
  tmpvar_17[0] = _Object2World[0].xyz;
  tmpvar_17[1] = _Object2World[1].xyz;
  tmpvar_17[2] = _Object2World[2].xyz;
  vec4 tmpvar_18;
  tmpvar_18.xyz = normalize((tmpvar_17 * TANGENT.xyz));
  tmpvar_18.w = TANGENT.w;
  vec3 tmpvar_19;
  vec3 tmpvar_20;
  tmpvar_19 = tmpvar_18.xyz;
  tmpvar_20 = (((tmpvar_16.yzx * tmpvar_18.zxy) - (tmpvar_16.zxy * tmpvar_18.yzx)) * (TANGENT.w * unity_WorldTransformParams.w));
  vec3 tmpvar_21;
  vec3 tmpvar_22;
  vec3 tmpvar_23;
  tmpvar_21.x = tmpvar_19.x;
  tmpvar_21.y = tmpvar_20.x;
  tmpvar_21.z = tmpvar_16.x;
  tmpvar_22.x = tmpvar_19.y;
  tmpvar_22.y = tmpvar_20.y;
  tmpvar_22.z = tmpvar_16.y;
  tmpvar_23.x = tmpvar_19.z;
  tmpvar_23.y = tmpvar_20.z;
  tmpvar_23.z = tmpvar_16.z;
  vec3 v_24;
  v_24.x = tmpvar_21.x;
  v_24.y = tmpvar_22.x;
  v_24.z = tmpvar_23.x;
  tmpvar_4.xyz = v_24;
  vec3 v_25;
  v_25.x = tmpvar_21.y;
  v_25.y = tmpvar_22.y;
  v_25.z = tmpvar_23.y;
  tmpvar_5.xyz = v_25;
  vec3 v_26;
  v_26.x = tmpvar_21.z;
  v_26.y = tmpvar_22.z;
  v_26.z = tmpvar_23.z;
  tmpvar_6.xyz = v_26;
  tmpvar_7 = vec4(0.0, 0.0, 0.0, 0.0);
  vec3 ambient_27;
  ambient_27 = vec3(0.0, 0.0, 0.0);
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    ambient_27 = vec3(0.0, 0.0, 0.0);
  };
  vec3 x1_28;
  vec4 tmpvar_29;
  tmpvar_29 = (tmpvar_16.xyzz * tmpvar_16.yzzx);
  x1_28.x = dot (unity_SHBr, tmpvar_29);
  x1_28.y = dot (unity_SHBg, tmpvar_29);
  x1_28.z = dot (unity_SHBb, tmpvar_29);
  ambient_27 = (ambient_27 + (x1_28 + (unity_SHC.xyz * 
    ((tmpvar_16.x * tmpvar_16.x) - (tmpvar_16.y * tmpvar_16.y))
  )));
  tmpvar_7.xyz = ambient_27;
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = texcoord_10;
  xlv_TEXCOORD1 = n_12;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  xlv_TEXCOORD5 = tmpvar_7;
  xlv_TEXCOORD6 = tmpvar_9;
}


#endif
#ifdef FRAGMENT
#extension GL_ARB_shader_texture_lod : enable
uniform vec4 unity_SHAr;
uniform vec4 unity_SHAg;
uniform vec4 unity_SHAb;
uniform vec4 unity_ColorSpaceDielectricSpec;
uniform vec4 unity_ColorSpaceLuminance;
uniform vec4 _Color;
uniform sampler2D _MainTex;
uniform float _Metallic;
uniform float _Glossiness;
uniform sampler2D _OcclusionMap;
uniform float _OcclusionStrength;
uniform vec4 _EmissionColor;
uniform sampler2D _EmissionMap;
varying vec4 xlv_TEXCOORD0;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
void main ()
{
  vec3 color_1;
  vec2 tmpvar_2;
  tmpvar_2.x = _Metallic;
  tmpvar_2.y = _Glossiness;
  float tmpvar_3;
  tmpvar_3 = tmpvar_2.y;
  vec3 tmpvar_4;
  tmpvar_4 = (_Color.xyz * texture2D (_MainTex, xlv_TEXCOORD0.xy).xyz);
  vec3 tmpvar_5;
  vec3 tmpvar_6;
  tmpvar_6 = mix (unity_ColorSpaceDielectricSpec.xyz, tmpvar_4, vec3(_Metallic));
  tmpvar_5 = (tmpvar_4 * (unity_ColorSpaceDielectricSpec.w - (_Metallic * unity_ColorSpaceDielectricSpec.w)));
  vec3 tmpvar_7;
  tmpvar_7 = normalize(xlv_TEXCOORD2_2.xyz);
  float tmpvar_8;
  tmpvar_8 = ((1.0 - _OcclusionStrength) + (texture2D (_OcclusionMap, xlv_TEXCOORD0.xy).y * _OcclusionStrength));
  vec3 tmpvar_9;
  tmpvar_9 = vec3(0.0, 0.0, 0.0);
  vec3 ambient_10;
  vec4 tmpvar_11;
  tmpvar_11.w = 1.0;
  tmpvar_11.xyz = tmpvar_7;
  vec3 x_12;
  x_12.x = dot (unity_SHAr, tmpvar_11);
  x_12.y = dot (unity_SHAg, tmpvar_11);
  x_12.z = dot (unity_SHAb, tmpvar_11);
  vec3 tmpvar_13;
  tmpvar_13 = max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD5.xyz + x_12));
  ambient_10 = tmpvar_13;
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    ambient_10 = max (((1.055 * 
      pow (max (tmpvar_13, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
    ) - 0.055), vec3(0.0, 0.0, 0.0));
  };
  tmpvar_9 = (ambient_10 * tmpvar_8);
  vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = (tmpvar_5 * tmpvar_9);
  color_1 = (tmpvar_14.xyz + (texture2D (_EmissionMap, xlv_TEXCOORD0.xy).xyz * _EmissionColor.xyz));
  color_1 = exp2(-(color_1));
  vec4 tmpvar_15;
  tmpvar_15.xyz = tmpvar_5;
  tmpvar_15.w = tmpvar_8;
  vec4 tmpvar_16;
  tmpvar_16.xyz = tmpvar_6;
  tmpvar_16.w = tmpvar_3;
  vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = ((tmpvar_7 * 0.5) + 0.5);
  vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = color_1;
  gl_FragData[0] = tmpvar_15;
  gl_FragData[1] = tmpvar_16;
  gl_FragData[2] = tmpvar_17;
  gl_FragData[3] = tmpvar_18;
}


#endif
"
}
SubProgram "d3d9 " {
// Stats: 45 math
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "_ALPHABLEND_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
Matrix 4 [_Object2World] 3
Matrix 7 [_World2Object] 3
Matrix 0 [glstate_matrix_mvp]
Vector 17 [_DetailAlbedoMap_ST]
Vector 16 [_MainTex_ST]
Float 18 [_UVSec]
Vector 10 [_WorldSpaceCameraPos]
Vector 13 [unity_SHBb]
Vector 12 [unity_SHBg]
Vector 11 [unity_SHBr]
Vector 14 [unity_SHC]
Vector 15 [unity_WorldTransformParams]
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   row_major float4x4 _Object2World;
//   float _UVSec;
//   row_major float4x4 _World2Object;
//   float3 _WorldSpaceCameraPos;
//   row_major float4x4 glstate_matrix_mvp;
//   float4 unity_SHBb;
//   float4 unity_SHBg;
//   float4 unity_SHBr;
//   float4 unity_SHC;
//   float4 unity_WorldTransformParams;
//
//
// Registers:
//
//   Name                       Reg   Size
//   -------------------------- ----- ----
//   glstate_matrix_mvp         c0       4
//   _Object2World              c4       3
//   _World2Object              c7       3
//   _WorldSpaceCameraPos       c10      1
//   unity_SHBr                 c11      1
//   unity_SHBg                 c12      1
//   unity_SHBb                 c13      1
//   unity_SHC                  c14      1
//   unity_WorldTransformParams c15      1
//   _MainTex_ST                c16      1
//   _DetailAlbedoMap_ST        c17      1
//   _UVSec                     c18      1
//

    vs_3_0
    def c19, 0, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_tangent v4
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6
    dcl_texcoord6 o7.xyz
    dp4 o0.x, c0, v0
    dp4 o0.y, c1, v0
    dp4 o0.z, c2, v0
    dp4 o0.w, c3, v0
    mad o1.xy, v2, c16, c16.zwzw
    abs r0.x, c18.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c17.xyxy, c17
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add o2.xyz, r0, -c10
    mov o7.xyz, r0
    mul r0.x, c15.w, v4.w
    dp3 r1.x, c4, v4
    dp3 r1.y, c5, v4
    dp3 r1.z, c6, v4
    nrm r2.xyz, r1
    mul r0.yzw, c8.xxyz, v1.y
    mad r0.yzw, c7.xxyz, v1.x, r0
    mad r0.yzw, c9.xxyz, v1.z, r0
    nrm r1.xyz, r0.yzww
    mul r0.yzw, r2.xyzx, r1.xzxy
    mad r0.yzw, r1.xyzx, r2.xzxy, -r0
    mov o3.xyz, r2
    mul o4.xyz, r0.x, r0.yzww
    mul r0.x, r1.y, r1.y
    mad r0.x, r1.x, r1.x, -r0.x
    mul r2, r1.yzzx, r1.xyzz
    mov o5.xyz, r1
    dp4 r1.x, c11, r2
    dp4 r1.y, c12, r2
    dp4 r1.z, c13, r2
    mad o6.xyz, c14, r0.x, r1
    mov o3.w, c19.x
    mov o4.w, c19.x
    mov o5.w, c19.x
    mov o6.w, c19.x

// approximately 44 instruction slots used
"
}
SubProgram "d3d11 " {
// Stats: 43 math
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "_ALPHABLEND_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
ConstBuffer "$Globals" 240
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 656 [unity_SHBr]
Vector 672 [unity_SHBg]
Vector 688 [unity_SHBb]
Vector 704 [unity_SHC]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
Vector 336 [unity_WorldTransformParams]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer cb0[14], immediateIndexed
      dcl_constantbuffer cb1[5], immediateIndexed
      dcl_constantbuffer cb2[45], immediateIndexed
      dcl_constantbuffer cb3[22], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyz
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: mad o0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   4: eq r0.x, cb0[13].z, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[11].xxxy, cb0[11].zzzw
   7: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  13: mov o7.xyz, r0.xyzx
  14: mul r0.xyz, v4.yyyy, cb3[13].xyzx
  15: mad r0.xyz, cb3[12].xyzx, v4.xxxx, r0.xyzx
  16: mad r0.xyz, cb3[14].xyzx, v4.zzzz, r0.xyzx
  17: dp3 r0.w, r0.xyzx, r0.xyzx
  18: rsq r0.w, r0.w
  19: mul r0.xyz, r0.wwww, r0.xyzx
  20: mov o3.xyz, r0.xyzx
  21: mov o3.w, l(0)
  22: mul r1.x, v1.x, cb3[16].x
  23: mul r1.y, v1.x, cb3[17].x
  24: mul r1.z, v1.x, cb3[18].x
  25: mul r2.x, v1.y, cb3[16].y
  26: mul r2.y, v1.y, cb3[17].y
  27: mul r2.z, v1.y, cb3[18].y
  28: add r1.xyz, r1.xyzx, r2.xyzx
  29: mul r2.x, v1.z, cb3[16].z
  30: mul r2.y, v1.z, cb3[17].z
  31: mul r2.z, v1.z, cb3[18].z
  32: add r1.xyz, r1.xyzx, r2.xyzx
  33: dp3 r0.w, r1.xyzx, r1.xyzx
  34: rsq r0.w, r0.w
  35: mul r1.xyz, r0.wwww, r1.xyzx
  36: mul r2.xyz, r0.yzxy, r1.zxyz
  37: mad r0.xyz, r1.yzxy, r0.zxyz, -r2.xyzx
  38: mul r0.w, v4.w, cb3[21].w
  39: mul o4.xyz, r0.wwww, r0.xyzx
  40: mov o4.w, l(0)
  41: mov o5.xyz, r1.xyzx
  42: mov o5.w, l(0)
  43: mul r0.x, r1.y, r1.y
  44: mad r0.x, r1.x, r1.x, -r0.x
  45: mul r1.xyzw, r1.yzzx, r1.xyzz
  46: dp4 r2.x, cb2[41].xyzw, r1.xyzw
  47: dp4 r2.y, cb2[42].xyzw, r1.xyzw
  48: dp4 r2.z, cb2[43].xyzw, r1.xyzw
  49: mad o6.xyz, cb2[44].xyzx, r0.xxxx, r2.xyzx
  50: mov o6.w, l(0)
  51: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
// Stats: 31 math, 2 textures, 1 branches
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_SEPARATE" "DYNAMICLIGHTMAP_OFF" }
"#version 120

#ifdef VERTEX
uniform vec3 _WorldSpaceCameraPos;
uniform vec4 unity_SHBr;
uniform vec4 unity_SHBg;
uniform vec4 unity_SHBb;
uniform vec4 unity_SHC;

uniform mat4 _Object2World;
uniform mat4 _World2Object;
uniform vec4 unity_WorldTransformParams;
uniform vec4 unity_ColorSpaceLuminance;
uniform vec4 _MainTex_ST;
uniform vec4 _DetailAlbedoMap_ST;
uniform float _UVSec;
attribute vec4 TANGENT;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
varying vec3 xlv_TEXCOORD6;
void main ()
{
  vec2 tmpvar_1;
  tmpvar_1 = gl_MultiTexCoord0.xy;
  vec2 tmpvar_2;
  tmpvar_2 = gl_MultiTexCoord1.xy;
  vec4 tmpvar_3;
  vec4 tmpvar_4;
  vec4 tmpvar_5;
  vec4 tmpvar_6;
  vec4 tmpvar_7;
  vec4 tmpvar_8;
  tmpvar_8 = (_Object2World * gl_Vertex);
  vec3 tmpvar_9;
  tmpvar_9 = tmpvar_8.xyz;
  tmpvar_3 = (gl_ModelViewProjectionMatrix * gl_Vertex);
  vec4 texcoord_10;
  texcoord_10.xy = ((gl_MultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  vec2 tmpvar_11;
  if ((_UVSec == 0.0)) {
    tmpvar_11 = tmpvar_1;
  } else {
    tmpvar_11 = tmpvar_2;
  };
  texcoord_10.zw = ((tmpvar_11 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  vec3 n_12;
  n_12 = (tmpvar_8.xyz - _WorldSpaceCameraPos);
  vec4 v_13;
  v_13.x = _World2Object[0].x;
  v_13.y = _World2Object[1].x;
  v_13.z = _World2Object[2].x;
  v_13.w = _World2Object[3].x;
  vec4 v_14;
  v_14.x = _World2Object[0].y;
  v_14.y = _World2Object[1].y;
  v_14.z = _World2Object[2].y;
  v_14.w = _World2Object[3].y;
  vec4 v_15;
  v_15.x = _World2Object[0].z;
  v_15.y = _World2Object[1].z;
  v_15.z = _World2Object[2].z;
  v_15.w = _World2Object[3].z;
  vec3 tmpvar_16;
  tmpvar_16 = normalize(((
    (v_13.xyz * gl_Normal.x)
   + 
    (v_14.xyz * gl_Normal.y)
  ) + (v_15.xyz * gl_Normal.z)));
  mat3 tmpvar_17;
  tmpvar_17[0] = _Object2World[0].xyz;
  tmpvar_17[1] = _Object2World[1].xyz;
  tmpvar_17[2] = _Object2World[2].xyz;
  vec4 tmpvar_18;
  tmpvar_18.xyz = normalize((tmpvar_17 * TANGENT.xyz));
  tmpvar_18.w = TANGENT.w;
  vec3 tmpvar_19;
  vec3 tmpvar_20;
  tmpvar_19 = tmpvar_18.xyz;
  tmpvar_20 = (((tmpvar_16.yzx * tmpvar_18.zxy) - (tmpvar_16.zxy * tmpvar_18.yzx)) * (TANGENT.w * unity_WorldTransformParams.w));
  vec3 tmpvar_21;
  vec3 tmpvar_22;
  vec3 tmpvar_23;
  tmpvar_21.x = tmpvar_19.x;
  tmpvar_21.y = tmpvar_20.x;
  tmpvar_21.z = tmpvar_16.x;
  tmpvar_22.x = tmpvar_19.y;
  tmpvar_22.y = tmpvar_20.y;
  tmpvar_22.z = tmpvar_16.y;
  tmpvar_23.x = tmpvar_19.z;
  tmpvar_23.y = tmpvar_20.z;
  tmpvar_23.z = tmpvar_16.z;
  vec3 v_24;
  v_24.x = tmpvar_21.x;
  v_24.y = tmpvar_22.x;
  v_24.z = tmpvar_23.x;
  tmpvar_4.xyz = v_24;
  vec3 v_25;
  v_25.x = tmpvar_21.y;
  v_25.y = tmpvar_22.y;
  v_25.z = tmpvar_23.y;
  tmpvar_5.xyz = v_25;
  vec3 v_26;
  v_26.x = tmpvar_21.z;
  v_26.y = tmpvar_22.z;
  v_26.z = tmpvar_23.z;
  tmpvar_6.xyz = v_26;
  tmpvar_7 = vec4(0.0, 0.0, 0.0, 0.0);
  vec3 ambient_27;
  ambient_27 = vec3(0.0, 0.0, 0.0);
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    ambient_27 = vec3(0.0, 0.0, 0.0);
  };
  vec3 x1_28;
  vec4 tmpvar_29;
  tmpvar_29 = (tmpvar_16.xyzz * tmpvar_16.yzzx);
  x1_28.x = dot (unity_SHBr, tmpvar_29);
  x1_28.y = dot (unity_SHBg, tmpvar_29);
  x1_28.z = dot (unity_SHBb, tmpvar_29);
  ambient_27 = (ambient_27 + (x1_28 + (unity_SHC.xyz * 
    ((tmpvar_16.x * tmpvar_16.x) - (tmpvar_16.y * tmpvar_16.y))
  )));
  tmpvar_7.xyz = ambient_27;
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = texcoord_10;
  xlv_TEXCOORD1 = n_12;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  xlv_TEXCOORD5 = tmpvar_7;
  xlv_TEXCOORD6 = tmpvar_9;
}


#endif
#ifdef FRAGMENT
#extension GL_ARB_shader_texture_lod : enable
uniform vec4 unity_SHAr;
uniform vec4 unity_SHAg;
uniform vec4 unity_SHAb;
uniform vec4 unity_ColorSpaceDielectricSpec;
uniform vec4 unity_ColorSpaceLuminance;
uniform vec4 _Color;
uniform sampler2D _MainTex;
uniform float _Metallic;
uniform float _Glossiness;
uniform sampler2D _OcclusionMap;
uniform float _OcclusionStrength;
varying vec4 xlv_TEXCOORD0;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
void main ()
{
  vec2 tmpvar_1;
  tmpvar_1.x = _Metallic;
  tmpvar_1.y = _Glossiness;
  float tmpvar_2;
  tmpvar_2 = tmpvar_1.y;
  vec3 tmpvar_3;
  tmpvar_3 = (_Color.xyz * texture2D (_MainTex, xlv_TEXCOORD0.xy).xyz);
  vec3 tmpvar_4;
  vec3 tmpvar_5;
  tmpvar_5 = mix (unity_ColorSpaceDielectricSpec.xyz, tmpvar_3, vec3(_Metallic));
  tmpvar_4 = (tmpvar_3 * (unity_ColorSpaceDielectricSpec.w - (_Metallic * unity_ColorSpaceDielectricSpec.w)));
  vec3 tmpvar_6;
  tmpvar_6 = normalize(xlv_TEXCOORD2_2.xyz);
  float tmpvar_7;
  tmpvar_7 = ((1.0 - _OcclusionStrength) + (texture2D (_OcclusionMap, xlv_TEXCOORD0.xy).y * _OcclusionStrength));
  vec3 tmpvar_8;
  tmpvar_8 = vec3(0.0, 0.0, 0.0);
  vec3 ambient_9;
  vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = tmpvar_6;
  vec3 x_11;
  x_11.x = dot (unity_SHAr, tmpvar_10);
  x_11.y = dot (unity_SHAg, tmpvar_10);
  x_11.z = dot (unity_SHAb, tmpvar_10);
  vec3 tmpvar_12;
  tmpvar_12 = max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD5.xyz + x_11));
  ambient_9 = tmpvar_12;
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    ambient_9 = max (((1.055 * 
      pow (max (tmpvar_12, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
    ) - 0.055), vec3(0.0, 0.0, 0.0));
  };
  tmpvar_8 = (ambient_9 * tmpvar_7);
  vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = (tmpvar_4 * tmpvar_8);
  vec4 tmpvar_14;
  tmpvar_14.xyz = tmpvar_4;
  tmpvar_14.w = tmpvar_7;
  vec4 tmpvar_15;
  tmpvar_15.xyz = tmpvar_5;
  tmpvar_15.w = tmpvar_2;
  vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = ((tmpvar_6 * 0.5) + 0.5);
  vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = exp2(-(tmpvar_13.xyz));
  gl_FragData[0] = tmpvar_14;
  gl_FragData[1] = tmpvar_15;
  gl_FragData[2] = tmpvar_16;
  gl_FragData[3] = tmpvar_17;
}


#endif
"
}
SubProgram "d3d9 " {
// Stats: 45 math
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_SEPARATE" "DYNAMICLIGHTMAP_OFF" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
Matrix 4 [_Object2World] 3
Matrix 7 [_World2Object] 3
Matrix 0 [glstate_matrix_mvp]
Vector 17 [_DetailAlbedoMap_ST]
Vector 16 [_MainTex_ST]
Float 18 [_UVSec]
Vector 10 [_WorldSpaceCameraPos]
Vector 13 [unity_SHBb]
Vector 12 [unity_SHBg]
Vector 11 [unity_SHBr]
Vector 14 [unity_SHC]
Vector 15 [unity_WorldTransformParams]
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   row_major float4x4 _Object2World;
//   float _UVSec;
//   row_major float4x4 _World2Object;
//   float3 _WorldSpaceCameraPos;
//   row_major float4x4 glstate_matrix_mvp;
//   float4 unity_SHBb;
//   float4 unity_SHBg;
//   float4 unity_SHBr;
//   float4 unity_SHC;
//   float4 unity_WorldTransformParams;
//
//
// Registers:
//
//   Name                       Reg   Size
//   -------------------------- ----- ----
//   glstate_matrix_mvp         c0       4
//   _Object2World              c4       3
//   _World2Object              c7       3
//   _WorldSpaceCameraPos       c10      1
//   unity_SHBr                 c11      1
//   unity_SHBg                 c12      1
//   unity_SHBb                 c13      1
//   unity_SHC                  c14      1
//   unity_WorldTransformParams c15      1
//   _MainTex_ST                c16      1
//   _DetailAlbedoMap_ST        c17      1
//   _UVSec                     c18      1
//

    vs_3_0
    def c19, 0, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_tangent v4
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6
    dcl_texcoord6 o7.xyz
    dp4 o0.x, c0, v0
    dp4 o0.y, c1, v0
    dp4 o0.z, c2, v0
    dp4 o0.w, c3, v0
    mad o1.xy, v2, c16, c16.zwzw
    abs r0.x, c18.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c17.xyxy, c17
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add o2.xyz, r0, -c10
    mov o7.xyz, r0
    mul r0.x, c15.w, v4.w
    dp3 r1.x, c4, v4
    dp3 r1.y, c5, v4
    dp3 r1.z, c6, v4
    nrm r2.xyz, r1
    mul r0.yzw, c8.xxyz, v1.y
    mad r0.yzw, c7.xxyz, v1.x, r0
    mad r0.yzw, c9.xxyz, v1.z, r0
    nrm r1.xyz, r0.yzww
    mul r0.yzw, r2.xyzx, r1.xzxy
    mad r0.yzw, r1.xyzx, r2.xzxy, -r0
    mov o3.xyz, r2
    mul o4.xyz, r0.x, r0.yzww
    mul r0.x, r1.y, r1.y
    mad r0.x, r1.x, r1.x, -r0.x
    mul r2, r1.yzzx, r1.xyzz
    mov o5.xyz, r1
    dp4 r1.x, c11, r2
    dp4 r1.y, c12, r2
    dp4 r1.z, c13, r2
    mad o6.xyz, c14, r0.x, r1
    mov o3.w, c19.x
    mov o4.w, c19.x
    mov o5.w, c19.x
    mov o6.w, c19.x

// approximately 44 instruction slots used
"
}
SubProgram "d3d11 " {
// Stats: 43 math
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_SEPARATE" "DYNAMICLIGHTMAP_OFF" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
ConstBuffer "$Globals" 240
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 656 [unity_SHBr]
Vector 672 [unity_SHBg]
Vector 688 [unity_SHBb]
Vector 704 [unity_SHC]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
Vector 336 [unity_WorldTransformParams]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer cb0[14], immediateIndexed
      dcl_constantbuffer cb1[5], immediateIndexed
      dcl_constantbuffer cb2[45], immediateIndexed
      dcl_constantbuffer cb3[22], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyz
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: mad o0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   4: eq r0.x, cb0[13].z, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[11].xxxy, cb0[11].zzzw
   7: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  13: mov o7.xyz, r0.xyzx
  14: mul r0.xyz, v4.yyyy, cb3[13].xyzx
  15: mad r0.xyz, cb3[12].xyzx, v4.xxxx, r0.xyzx
  16: mad r0.xyz, cb3[14].xyzx, v4.zzzz, r0.xyzx
  17: dp3 r0.w, r0.xyzx, r0.xyzx
  18: rsq r0.w, r0.w
  19: mul r0.xyz, r0.wwww, r0.xyzx
  20: mov o3.xyz, r0.xyzx
  21: mov o3.w, l(0)
  22: mul r1.x, v1.x, cb3[16].x
  23: mul r1.y, v1.x, cb3[17].x
  24: mul r1.z, v1.x, cb3[18].x
  25: mul r2.x, v1.y, cb3[16].y
  26: mul r2.y, v1.y, cb3[17].y
  27: mul r2.z, v1.y, cb3[18].y
  28: add r1.xyz, r1.xyzx, r2.xyzx
  29: mul r2.x, v1.z, cb3[16].z
  30: mul r2.y, v1.z, cb3[17].z
  31: mul r2.z, v1.z, cb3[18].z
  32: add r1.xyz, r1.xyzx, r2.xyzx
  33: dp3 r0.w, r1.xyzx, r1.xyzx
  34: rsq r0.w, r0.w
  35: mul r1.xyz, r0.wwww, r1.xyzx
  36: mul r2.xyz, r0.yzxy, r1.zxyz
  37: mad r0.xyz, r1.yzxy, r0.zxyz, -r2.xyzx
  38: mul r0.w, v4.w, cb3[21].w
  39: mul o4.xyz, r0.wwww, r0.xyzx
  40: mov o4.w, l(0)
  41: mov o5.xyz, r1.xyzx
  42: mov o5.w, l(0)
  43: mul r0.x, r1.y, r1.y
  44: mad r0.x, r1.x, r1.x, -r0.x
  45: mul r1.xyzw, r1.yzzx, r1.xyzz
  46: dp4 r2.x, cb2[41].xyzw, r1.xyzw
  47: dp4 r2.y, cb2[42].xyzw, r1.xyzw
  48: dp4 r2.z, cb2[43].xyzw, r1.xyzw
  49: mad o6.xyz, cb2[44].xyzx, r0.xxxx, r2.xyzx
  50: mov o6.w, l(0)
  51: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
// Stats: 33 math, 3 textures, 1 branches
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_SEPARATE" "DYNAMICLIGHTMAP_OFF" "_EMISSION" }
"#version 120

#ifdef VERTEX
uniform vec3 _WorldSpaceCameraPos;
uniform vec4 unity_SHBr;
uniform vec4 unity_SHBg;
uniform vec4 unity_SHBb;
uniform vec4 unity_SHC;

uniform mat4 _Object2World;
uniform mat4 _World2Object;
uniform vec4 unity_WorldTransformParams;
uniform vec4 unity_ColorSpaceLuminance;
uniform vec4 _MainTex_ST;
uniform vec4 _DetailAlbedoMap_ST;
uniform float _UVSec;
attribute vec4 TANGENT;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
varying vec3 xlv_TEXCOORD6;
void main ()
{
  vec2 tmpvar_1;
  tmpvar_1 = gl_MultiTexCoord0.xy;
  vec2 tmpvar_2;
  tmpvar_2 = gl_MultiTexCoord1.xy;
  vec4 tmpvar_3;
  vec4 tmpvar_4;
  vec4 tmpvar_5;
  vec4 tmpvar_6;
  vec4 tmpvar_7;
  vec4 tmpvar_8;
  tmpvar_8 = (_Object2World * gl_Vertex);
  vec3 tmpvar_9;
  tmpvar_9 = tmpvar_8.xyz;
  tmpvar_3 = (gl_ModelViewProjectionMatrix * gl_Vertex);
  vec4 texcoord_10;
  texcoord_10.xy = ((gl_MultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  vec2 tmpvar_11;
  if ((_UVSec == 0.0)) {
    tmpvar_11 = tmpvar_1;
  } else {
    tmpvar_11 = tmpvar_2;
  };
  texcoord_10.zw = ((tmpvar_11 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  vec3 n_12;
  n_12 = (tmpvar_8.xyz - _WorldSpaceCameraPos);
  vec4 v_13;
  v_13.x = _World2Object[0].x;
  v_13.y = _World2Object[1].x;
  v_13.z = _World2Object[2].x;
  v_13.w = _World2Object[3].x;
  vec4 v_14;
  v_14.x = _World2Object[0].y;
  v_14.y = _World2Object[1].y;
  v_14.z = _World2Object[2].y;
  v_14.w = _World2Object[3].y;
  vec4 v_15;
  v_15.x = _World2Object[0].z;
  v_15.y = _World2Object[1].z;
  v_15.z = _World2Object[2].z;
  v_15.w = _World2Object[3].z;
  vec3 tmpvar_16;
  tmpvar_16 = normalize(((
    (v_13.xyz * gl_Normal.x)
   + 
    (v_14.xyz * gl_Normal.y)
  ) + (v_15.xyz * gl_Normal.z)));
  mat3 tmpvar_17;
  tmpvar_17[0] = _Object2World[0].xyz;
  tmpvar_17[1] = _Object2World[1].xyz;
  tmpvar_17[2] = _Object2World[2].xyz;
  vec4 tmpvar_18;
  tmpvar_18.xyz = normalize((tmpvar_17 * TANGENT.xyz));
  tmpvar_18.w = TANGENT.w;
  vec3 tmpvar_19;
  vec3 tmpvar_20;
  tmpvar_19 = tmpvar_18.xyz;
  tmpvar_20 = (((tmpvar_16.yzx * tmpvar_18.zxy) - (tmpvar_16.zxy * tmpvar_18.yzx)) * (TANGENT.w * unity_WorldTransformParams.w));
  vec3 tmpvar_21;
  vec3 tmpvar_22;
  vec3 tmpvar_23;
  tmpvar_21.x = tmpvar_19.x;
  tmpvar_21.y = tmpvar_20.x;
  tmpvar_21.z = tmpvar_16.x;
  tmpvar_22.x = tmpvar_19.y;
  tmpvar_22.y = tmpvar_20.y;
  tmpvar_22.z = tmpvar_16.y;
  tmpvar_23.x = tmpvar_19.z;
  tmpvar_23.y = tmpvar_20.z;
  tmpvar_23.z = tmpvar_16.z;
  vec3 v_24;
  v_24.x = tmpvar_21.x;
  v_24.y = tmpvar_22.x;
  v_24.z = tmpvar_23.x;
  tmpvar_4.xyz = v_24;
  vec3 v_25;
  v_25.x = tmpvar_21.y;
  v_25.y = tmpvar_22.y;
  v_25.z = tmpvar_23.y;
  tmpvar_5.xyz = v_25;
  vec3 v_26;
  v_26.x = tmpvar_21.z;
  v_26.y = tmpvar_22.z;
  v_26.z = tmpvar_23.z;
  tmpvar_6.xyz = v_26;
  tmpvar_7 = vec4(0.0, 0.0, 0.0, 0.0);
  vec3 ambient_27;
  ambient_27 = vec3(0.0, 0.0, 0.0);
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    ambient_27 = vec3(0.0, 0.0, 0.0);
  };
  vec3 x1_28;
  vec4 tmpvar_29;
  tmpvar_29 = (tmpvar_16.xyzz * tmpvar_16.yzzx);
  x1_28.x = dot (unity_SHBr, tmpvar_29);
  x1_28.y = dot (unity_SHBg, tmpvar_29);
  x1_28.z = dot (unity_SHBb, tmpvar_29);
  ambient_27 = (ambient_27 + (x1_28 + (unity_SHC.xyz * 
    ((tmpvar_16.x * tmpvar_16.x) - (tmpvar_16.y * tmpvar_16.y))
  )));
  tmpvar_7.xyz = ambient_27;
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = texcoord_10;
  xlv_TEXCOORD1 = n_12;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  xlv_TEXCOORD5 = tmpvar_7;
  xlv_TEXCOORD6 = tmpvar_9;
}


#endif
#ifdef FRAGMENT
#extension GL_ARB_shader_texture_lod : enable
uniform vec4 unity_SHAr;
uniform vec4 unity_SHAg;
uniform vec4 unity_SHAb;
uniform vec4 unity_ColorSpaceDielectricSpec;
uniform vec4 unity_ColorSpaceLuminance;
uniform vec4 _Color;
uniform sampler2D _MainTex;
uniform float _Metallic;
uniform float _Glossiness;
uniform sampler2D _OcclusionMap;
uniform float _OcclusionStrength;
uniform vec4 _EmissionColor;
uniform sampler2D _EmissionMap;
varying vec4 xlv_TEXCOORD0;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
void main ()
{
  vec3 color_1;
  vec2 tmpvar_2;
  tmpvar_2.x = _Metallic;
  tmpvar_2.y = _Glossiness;
  float tmpvar_3;
  tmpvar_3 = tmpvar_2.y;
  vec3 tmpvar_4;
  tmpvar_4 = (_Color.xyz * texture2D (_MainTex, xlv_TEXCOORD0.xy).xyz);
  vec3 tmpvar_5;
  vec3 tmpvar_6;
  tmpvar_6 = mix (unity_ColorSpaceDielectricSpec.xyz, tmpvar_4, vec3(_Metallic));
  tmpvar_5 = (tmpvar_4 * (unity_ColorSpaceDielectricSpec.w - (_Metallic * unity_ColorSpaceDielectricSpec.w)));
  vec3 tmpvar_7;
  tmpvar_7 = normalize(xlv_TEXCOORD2_2.xyz);
  float tmpvar_8;
  tmpvar_8 = ((1.0 - _OcclusionStrength) + (texture2D (_OcclusionMap, xlv_TEXCOORD0.xy).y * _OcclusionStrength));
  vec3 tmpvar_9;
  tmpvar_9 = vec3(0.0, 0.0, 0.0);
  vec3 ambient_10;
  vec4 tmpvar_11;
  tmpvar_11.w = 1.0;
  tmpvar_11.xyz = tmpvar_7;
  vec3 x_12;
  x_12.x = dot (unity_SHAr, tmpvar_11);
  x_12.y = dot (unity_SHAg, tmpvar_11);
  x_12.z = dot (unity_SHAb, tmpvar_11);
  vec3 tmpvar_13;
  tmpvar_13 = max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD5.xyz + x_12));
  ambient_10 = tmpvar_13;
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    ambient_10 = max (((1.055 * 
      pow (max (tmpvar_13, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
    ) - 0.055), vec3(0.0, 0.0, 0.0));
  };
  tmpvar_9 = (ambient_10 * tmpvar_8);
  vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = (tmpvar_5 * tmpvar_9);
  color_1 = (tmpvar_14.xyz + (texture2D (_EmissionMap, xlv_TEXCOORD0.xy).xyz * _EmissionColor.xyz));
  color_1 = exp2(-(color_1));
  vec4 tmpvar_15;
  tmpvar_15.xyz = tmpvar_5;
  tmpvar_15.w = tmpvar_8;
  vec4 tmpvar_16;
  tmpvar_16.xyz = tmpvar_6;
  tmpvar_16.w = tmpvar_3;
  vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = ((tmpvar_7 * 0.5) + 0.5);
  vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = color_1;
  gl_FragData[0] = tmpvar_15;
  gl_FragData[1] = tmpvar_16;
  gl_FragData[2] = tmpvar_17;
  gl_FragData[3] = tmpvar_18;
}


#endif
"
}
SubProgram "d3d9 " {
// Stats: 45 math
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_SEPARATE" "DYNAMICLIGHTMAP_OFF" "_EMISSION" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
Matrix 4 [_Object2World] 3
Matrix 7 [_World2Object] 3
Matrix 0 [glstate_matrix_mvp]
Vector 17 [_DetailAlbedoMap_ST]
Vector 16 [_MainTex_ST]
Float 18 [_UVSec]
Vector 10 [_WorldSpaceCameraPos]
Vector 13 [unity_SHBb]
Vector 12 [unity_SHBg]
Vector 11 [unity_SHBr]
Vector 14 [unity_SHC]
Vector 15 [unity_WorldTransformParams]
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   row_major float4x4 _Object2World;
//   float _UVSec;
//   row_major float4x4 _World2Object;
//   float3 _WorldSpaceCameraPos;
//   row_major float4x4 glstate_matrix_mvp;
//   float4 unity_SHBb;
//   float4 unity_SHBg;
//   float4 unity_SHBr;
//   float4 unity_SHC;
//   float4 unity_WorldTransformParams;
//
//
// Registers:
//
//   Name                       Reg   Size
//   -------------------------- ----- ----
//   glstate_matrix_mvp         c0       4
//   _Object2World              c4       3
//   _World2Object              c7       3
//   _WorldSpaceCameraPos       c10      1
//   unity_SHBr                 c11      1
//   unity_SHBg                 c12      1
//   unity_SHBb                 c13      1
//   unity_SHC                  c14      1
//   unity_WorldTransformParams c15      1
//   _MainTex_ST                c16      1
//   _DetailAlbedoMap_ST        c17      1
//   _UVSec                     c18      1
//

    vs_3_0
    def c19, 0, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_tangent v4
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6
    dcl_texcoord6 o7.xyz
    dp4 o0.x, c0, v0
    dp4 o0.y, c1, v0
    dp4 o0.z, c2, v0
    dp4 o0.w, c3, v0
    mad o1.xy, v2, c16, c16.zwzw
    abs r0.x, c18.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c17.xyxy, c17
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add o2.xyz, r0, -c10
    mov o7.xyz, r0
    mul r0.x, c15.w, v4.w
    dp3 r1.x, c4, v4
    dp3 r1.y, c5, v4
    dp3 r1.z, c6, v4
    nrm r2.xyz, r1
    mul r0.yzw, c8.xxyz, v1.y
    mad r0.yzw, c7.xxyz, v1.x, r0
    mad r0.yzw, c9.xxyz, v1.z, r0
    nrm r1.xyz, r0.yzww
    mul r0.yzw, r2.xyzx, r1.xzxy
    mad r0.yzw, r1.xyzx, r2.xzxy, -r0
    mov o3.xyz, r2
    mul o4.xyz, r0.x, r0.yzww
    mul r0.x, r1.y, r1.y
    mad r0.x, r1.x, r1.x, -r0.x
    mul r2, r1.yzzx, r1.xyzz
    mov o5.xyz, r1
    dp4 r1.x, c11, r2
    dp4 r1.y, c12, r2
    dp4 r1.z, c13, r2
    mad o6.xyz, c14, r0.x, r1
    mov o3.w, c19.x
    mov o4.w, c19.x
    mov o5.w, c19.x
    mov o6.w, c19.x

// approximately 44 instruction slots used
"
}
SubProgram "d3d11 " {
// Stats: 43 math
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_SEPARATE" "DYNAMICLIGHTMAP_OFF" "_EMISSION" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
ConstBuffer "$Globals" 240
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 656 [unity_SHBr]
Vector 672 [unity_SHBg]
Vector 688 [unity_SHBb]
Vector 704 [unity_SHC]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
Vector 336 [unity_WorldTransformParams]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer cb0[14], immediateIndexed
      dcl_constantbuffer cb1[5], immediateIndexed
      dcl_constantbuffer cb2[45], immediateIndexed
      dcl_constantbuffer cb3[22], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyz
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: mad o0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   4: eq r0.x, cb0[13].z, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[11].xxxy, cb0[11].zzzw
   7: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  13: mov o7.xyz, r0.xyzx
  14: mul r0.xyz, v4.yyyy, cb3[13].xyzx
  15: mad r0.xyz, cb3[12].xyzx, v4.xxxx, r0.xyzx
  16: mad r0.xyz, cb3[14].xyzx, v4.zzzz, r0.xyzx
  17: dp3 r0.w, r0.xyzx, r0.xyzx
  18: rsq r0.w, r0.w
  19: mul r0.xyz, r0.wwww, r0.xyzx
  20: mov o3.xyz, r0.xyzx
  21: mov o3.w, l(0)
  22: mul r1.x, v1.x, cb3[16].x
  23: mul r1.y, v1.x, cb3[17].x
  24: mul r1.z, v1.x, cb3[18].x
  25: mul r2.x, v1.y, cb3[16].y
  26: mul r2.y, v1.y, cb3[17].y
  27: mul r2.z, v1.y, cb3[18].y
  28: add r1.xyz, r1.xyzx, r2.xyzx
  29: mul r2.x, v1.z, cb3[16].z
  30: mul r2.y, v1.z, cb3[17].z
  31: mul r2.z, v1.z, cb3[18].z
  32: add r1.xyz, r1.xyzx, r2.xyzx
  33: dp3 r0.w, r1.xyzx, r1.xyzx
  34: rsq r0.w, r0.w
  35: mul r1.xyz, r0.wwww, r1.xyzx
  36: mul r2.xyz, r0.yzxy, r1.zxyz
  37: mad r0.xyz, r1.yzxy, r0.zxyz, -r2.xyzx
  38: mul r0.w, v4.w, cb3[21].w
  39: mul o4.xyz, r0.wwww, r0.xyzx
  40: mov o4.w, l(0)
  41: mov o5.xyz, r1.xyzx
  42: mov o5.w, l(0)
  43: mul r0.x, r1.y, r1.y
  44: mad r0.x, r1.x, r1.x, -r0.x
  45: mul r1.xyzw, r1.yzzx, r1.xyzz
  46: dp4 r2.x, cb2[41].xyzw, r1.xyzw
  47: dp4 r2.y, cb2[42].xyzw, r1.xyzw
  48: dp4 r2.z, cb2[43].xyzw, r1.xyzw
  49: mad o6.xyz, cb2[44].xyzx, r0.xxxx, r2.xyzx
  50: mov o6.w, l(0)
  51: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
// Stats: 31 math, 2 textures, 1 branches
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_SEPARATE" "DYNAMICLIGHTMAP_OFF" "_ALPHABLEND_ON" }
"#version 120

#ifdef VERTEX
uniform vec3 _WorldSpaceCameraPos;
uniform vec4 unity_SHBr;
uniform vec4 unity_SHBg;
uniform vec4 unity_SHBb;
uniform vec4 unity_SHC;

uniform mat4 _Object2World;
uniform mat4 _World2Object;
uniform vec4 unity_WorldTransformParams;
uniform vec4 unity_ColorSpaceLuminance;
uniform vec4 _MainTex_ST;
uniform vec4 _DetailAlbedoMap_ST;
uniform float _UVSec;
attribute vec4 TANGENT;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
varying vec3 xlv_TEXCOORD6;
void main ()
{
  vec2 tmpvar_1;
  tmpvar_1 = gl_MultiTexCoord0.xy;
  vec2 tmpvar_2;
  tmpvar_2 = gl_MultiTexCoord1.xy;
  vec4 tmpvar_3;
  vec4 tmpvar_4;
  vec4 tmpvar_5;
  vec4 tmpvar_6;
  vec4 tmpvar_7;
  vec4 tmpvar_8;
  tmpvar_8 = (_Object2World * gl_Vertex);
  vec3 tmpvar_9;
  tmpvar_9 = tmpvar_8.xyz;
  tmpvar_3 = (gl_ModelViewProjectionMatrix * gl_Vertex);
  vec4 texcoord_10;
  texcoord_10.xy = ((gl_MultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  vec2 tmpvar_11;
  if ((_UVSec == 0.0)) {
    tmpvar_11 = tmpvar_1;
  } else {
    tmpvar_11 = tmpvar_2;
  };
  texcoord_10.zw = ((tmpvar_11 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  vec3 n_12;
  n_12 = (tmpvar_8.xyz - _WorldSpaceCameraPos);
  vec4 v_13;
  v_13.x = _World2Object[0].x;
  v_13.y = _World2Object[1].x;
  v_13.z = _World2Object[2].x;
  v_13.w = _World2Object[3].x;
  vec4 v_14;
  v_14.x = _World2Object[0].y;
  v_14.y = _World2Object[1].y;
  v_14.z = _World2Object[2].y;
  v_14.w = _World2Object[3].y;
  vec4 v_15;
  v_15.x = _World2Object[0].z;
  v_15.y = _World2Object[1].z;
  v_15.z = _World2Object[2].z;
  v_15.w = _World2Object[3].z;
  vec3 tmpvar_16;
  tmpvar_16 = normalize(((
    (v_13.xyz * gl_Normal.x)
   + 
    (v_14.xyz * gl_Normal.y)
  ) + (v_15.xyz * gl_Normal.z)));
  mat3 tmpvar_17;
  tmpvar_17[0] = _Object2World[0].xyz;
  tmpvar_17[1] = _Object2World[1].xyz;
  tmpvar_17[2] = _Object2World[2].xyz;
  vec4 tmpvar_18;
  tmpvar_18.xyz = normalize((tmpvar_17 * TANGENT.xyz));
  tmpvar_18.w = TANGENT.w;
  vec3 tmpvar_19;
  vec3 tmpvar_20;
  tmpvar_19 = tmpvar_18.xyz;
  tmpvar_20 = (((tmpvar_16.yzx * tmpvar_18.zxy) - (tmpvar_16.zxy * tmpvar_18.yzx)) * (TANGENT.w * unity_WorldTransformParams.w));
  vec3 tmpvar_21;
  vec3 tmpvar_22;
  vec3 tmpvar_23;
  tmpvar_21.x = tmpvar_19.x;
  tmpvar_21.y = tmpvar_20.x;
  tmpvar_21.z = tmpvar_16.x;
  tmpvar_22.x = tmpvar_19.y;
  tmpvar_22.y = tmpvar_20.y;
  tmpvar_22.z = tmpvar_16.y;
  tmpvar_23.x = tmpvar_19.z;
  tmpvar_23.y = tmpvar_20.z;
  tmpvar_23.z = tmpvar_16.z;
  vec3 v_24;
  v_24.x = tmpvar_21.x;
  v_24.y = tmpvar_22.x;
  v_24.z = tmpvar_23.x;
  tmpvar_4.xyz = v_24;
  vec3 v_25;
  v_25.x = tmpvar_21.y;
  v_25.y = tmpvar_22.y;
  v_25.z = tmpvar_23.y;
  tmpvar_5.xyz = v_25;
  vec3 v_26;
  v_26.x = tmpvar_21.z;
  v_26.y = tmpvar_22.z;
  v_26.z = tmpvar_23.z;
  tmpvar_6.xyz = v_26;
  tmpvar_7 = vec4(0.0, 0.0, 0.0, 0.0);
  vec3 ambient_27;
  ambient_27 = vec3(0.0, 0.0, 0.0);
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    ambient_27 = vec3(0.0, 0.0, 0.0);
  };
  vec3 x1_28;
  vec4 tmpvar_29;
  tmpvar_29 = (tmpvar_16.xyzz * tmpvar_16.yzzx);
  x1_28.x = dot (unity_SHBr, tmpvar_29);
  x1_28.y = dot (unity_SHBg, tmpvar_29);
  x1_28.z = dot (unity_SHBb, tmpvar_29);
  ambient_27 = (ambient_27 + (x1_28 + (unity_SHC.xyz * 
    ((tmpvar_16.x * tmpvar_16.x) - (tmpvar_16.y * tmpvar_16.y))
  )));
  tmpvar_7.xyz = ambient_27;
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = texcoord_10;
  xlv_TEXCOORD1 = n_12;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  xlv_TEXCOORD5 = tmpvar_7;
  xlv_TEXCOORD6 = tmpvar_9;
}


#endif
#ifdef FRAGMENT
#extension GL_ARB_shader_texture_lod : enable
uniform vec4 unity_SHAr;
uniform vec4 unity_SHAg;
uniform vec4 unity_SHAb;
uniform vec4 unity_ColorSpaceDielectricSpec;
uniform vec4 unity_ColorSpaceLuminance;
uniform vec4 _Color;
uniform sampler2D _MainTex;
uniform float _Metallic;
uniform float _Glossiness;
uniform sampler2D _OcclusionMap;
uniform float _OcclusionStrength;
varying vec4 xlv_TEXCOORD0;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
void main ()
{
  vec2 tmpvar_1;
  tmpvar_1.x = _Metallic;
  tmpvar_1.y = _Glossiness;
  float tmpvar_2;
  tmpvar_2 = tmpvar_1.y;
  vec3 tmpvar_3;
  tmpvar_3 = (_Color.xyz * texture2D (_MainTex, xlv_TEXCOORD0.xy).xyz);
  vec3 tmpvar_4;
  vec3 tmpvar_5;
  tmpvar_5 = mix (unity_ColorSpaceDielectricSpec.xyz, tmpvar_3, vec3(_Metallic));
  tmpvar_4 = (tmpvar_3 * (unity_ColorSpaceDielectricSpec.w - (_Metallic * unity_ColorSpaceDielectricSpec.w)));
  vec3 tmpvar_6;
  tmpvar_6 = normalize(xlv_TEXCOORD2_2.xyz);
  float tmpvar_7;
  tmpvar_7 = ((1.0 - _OcclusionStrength) + (texture2D (_OcclusionMap, xlv_TEXCOORD0.xy).y * _OcclusionStrength));
  vec3 tmpvar_8;
  tmpvar_8 = vec3(0.0, 0.0, 0.0);
  vec3 ambient_9;
  vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = tmpvar_6;
  vec3 x_11;
  x_11.x = dot (unity_SHAr, tmpvar_10);
  x_11.y = dot (unity_SHAg, tmpvar_10);
  x_11.z = dot (unity_SHAb, tmpvar_10);
  vec3 tmpvar_12;
  tmpvar_12 = max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD5.xyz + x_11));
  ambient_9 = tmpvar_12;
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    ambient_9 = max (((1.055 * 
      pow (max (tmpvar_12, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
    ) - 0.055), vec3(0.0, 0.0, 0.0));
  };
  tmpvar_8 = (ambient_9 * tmpvar_7);
  vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = (tmpvar_4 * tmpvar_8);
  vec4 tmpvar_14;
  tmpvar_14.xyz = tmpvar_4;
  tmpvar_14.w = tmpvar_7;
  vec4 tmpvar_15;
  tmpvar_15.xyz = tmpvar_5;
  tmpvar_15.w = tmpvar_2;
  vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = ((tmpvar_6 * 0.5) + 0.5);
  vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = exp2(-(tmpvar_13.xyz));
  gl_FragData[0] = tmpvar_14;
  gl_FragData[1] = tmpvar_15;
  gl_FragData[2] = tmpvar_16;
  gl_FragData[3] = tmpvar_17;
}


#endif
"
}
SubProgram "d3d9 " {
// Stats: 45 math
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_SEPARATE" "DYNAMICLIGHTMAP_OFF" "_ALPHABLEND_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
Matrix 4 [_Object2World] 3
Matrix 7 [_World2Object] 3
Matrix 0 [glstate_matrix_mvp]
Vector 17 [_DetailAlbedoMap_ST]
Vector 16 [_MainTex_ST]
Float 18 [_UVSec]
Vector 10 [_WorldSpaceCameraPos]
Vector 13 [unity_SHBb]
Vector 12 [unity_SHBg]
Vector 11 [unity_SHBr]
Vector 14 [unity_SHC]
Vector 15 [unity_WorldTransformParams]
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   row_major float4x4 _Object2World;
//   float _UVSec;
//   row_major float4x4 _World2Object;
//   float3 _WorldSpaceCameraPos;
//   row_major float4x4 glstate_matrix_mvp;
//   float4 unity_SHBb;
//   float4 unity_SHBg;
//   float4 unity_SHBr;
//   float4 unity_SHC;
//   float4 unity_WorldTransformParams;
//
//
// Registers:
//
//   Name                       Reg   Size
//   -------------------------- ----- ----
//   glstate_matrix_mvp         c0       4
//   _Object2World              c4       3
//   _World2Object              c7       3
//   _WorldSpaceCameraPos       c10      1
//   unity_SHBr                 c11      1
//   unity_SHBg                 c12      1
//   unity_SHBb                 c13      1
//   unity_SHC                  c14      1
//   unity_WorldTransformParams c15      1
//   _MainTex_ST                c16      1
//   _DetailAlbedoMap_ST        c17      1
//   _UVSec                     c18      1
//

    vs_3_0
    def c19, 0, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_tangent v4
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6
    dcl_texcoord6 o7.xyz
    dp4 o0.x, c0, v0
    dp4 o0.y, c1, v0
    dp4 o0.z, c2, v0
    dp4 o0.w, c3, v0
    mad o1.xy, v2, c16, c16.zwzw
    abs r0.x, c18.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c17.xyxy, c17
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add o2.xyz, r0, -c10
    mov o7.xyz, r0
    mul r0.x, c15.w, v4.w
    dp3 r1.x, c4, v4
    dp3 r1.y, c5, v4
    dp3 r1.z, c6, v4
    nrm r2.xyz, r1
    mul r0.yzw, c8.xxyz, v1.y
    mad r0.yzw, c7.xxyz, v1.x, r0
    mad r0.yzw, c9.xxyz, v1.z, r0
    nrm r1.xyz, r0.yzww
    mul r0.yzw, r2.xyzx, r1.xzxy
    mad r0.yzw, r1.xyzx, r2.xzxy, -r0
    mov o3.xyz, r2
    mul o4.xyz, r0.x, r0.yzww
    mul r0.x, r1.y, r1.y
    mad r0.x, r1.x, r1.x, -r0.x
    mul r2, r1.yzzx, r1.xyzz
    mov o5.xyz, r1
    dp4 r1.x, c11, r2
    dp4 r1.y, c12, r2
    dp4 r1.z, c13, r2
    mad o6.xyz, c14, r0.x, r1
    mov o3.w, c19.x
    mov o4.w, c19.x
    mov o5.w, c19.x
    mov o6.w, c19.x

// approximately 44 instruction slots used
"
}
SubProgram "d3d11 " {
// Stats: 43 math
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_SEPARATE" "DYNAMICLIGHTMAP_OFF" "_ALPHABLEND_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
ConstBuffer "$Globals" 240
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 656 [unity_SHBr]
Vector 672 [unity_SHBg]
Vector 688 [unity_SHBb]
Vector 704 [unity_SHC]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
Vector 336 [unity_WorldTransformParams]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer cb0[14], immediateIndexed
      dcl_constantbuffer cb1[5], immediateIndexed
      dcl_constantbuffer cb2[45], immediateIndexed
      dcl_constantbuffer cb3[22], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyz
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: mad o0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   4: eq r0.x, cb0[13].z, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[11].xxxy, cb0[11].zzzw
   7: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  13: mov o7.xyz, r0.xyzx
  14: mul r0.xyz, v4.yyyy, cb3[13].xyzx
  15: mad r0.xyz, cb3[12].xyzx, v4.xxxx, r0.xyzx
  16: mad r0.xyz, cb3[14].xyzx, v4.zzzz, r0.xyzx
  17: dp3 r0.w, r0.xyzx, r0.xyzx
  18: rsq r0.w, r0.w
  19: mul r0.xyz, r0.wwww, r0.xyzx
  20: mov o3.xyz, r0.xyzx
  21: mov o3.w, l(0)
  22: mul r1.x, v1.x, cb3[16].x
  23: mul r1.y, v1.x, cb3[17].x
  24: mul r1.z, v1.x, cb3[18].x
  25: mul r2.x, v1.y, cb3[16].y
  26: mul r2.y, v1.y, cb3[17].y
  27: mul r2.z, v1.y, cb3[18].y
  28: add r1.xyz, r1.xyzx, r2.xyzx
  29: mul r2.x, v1.z, cb3[16].z
  30: mul r2.y, v1.z, cb3[17].z
  31: mul r2.z, v1.z, cb3[18].z
  32: add r1.xyz, r1.xyzx, r2.xyzx
  33: dp3 r0.w, r1.xyzx, r1.xyzx
  34: rsq r0.w, r0.w
  35: mul r1.xyz, r0.wwww, r1.xyzx
  36: mul r2.xyz, r0.yzxy, r1.zxyz
  37: mad r0.xyz, r1.yzxy, r0.zxyz, -r2.xyzx
  38: mul r0.w, v4.w, cb3[21].w
  39: mul o4.xyz, r0.wwww, r0.xyzx
  40: mov o4.w, l(0)
  41: mov o5.xyz, r1.xyzx
  42: mov o5.w, l(0)
  43: mul r0.x, r1.y, r1.y
  44: mad r0.x, r1.x, r1.x, -r0.x
  45: mul r1.xyzw, r1.yzzx, r1.xyzz
  46: dp4 r2.x, cb2[41].xyzw, r1.xyzw
  47: dp4 r2.y, cb2[42].xyzw, r1.xyzw
  48: dp4 r2.z, cb2[43].xyzw, r1.xyzw
  49: mad o6.xyz, cb2[44].xyzx, r0.xxxx, r2.xyzx
  50: mov o6.w, l(0)
  51: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
// Stats: 33 math, 3 textures, 1 branches
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_SEPARATE" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "_ALPHABLEND_ON" }
"#version 120

#ifdef VERTEX
uniform vec3 _WorldSpaceCameraPos;
uniform vec4 unity_SHBr;
uniform vec4 unity_SHBg;
uniform vec4 unity_SHBb;
uniform vec4 unity_SHC;

uniform mat4 _Object2World;
uniform mat4 _World2Object;
uniform vec4 unity_WorldTransformParams;
uniform vec4 unity_ColorSpaceLuminance;
uniform vec4 _MainTex_ST;
uniform vec4 _DetailAlbedoMap_ST;
uniform float _UVSec;
attribute vec4 TANGENT;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
varying vec3 xlv_TEXCOORD6;
void main ()
{
  vec2 tmpvar_1;
  tmpvar_1 = gl_MultiTexCoord0.xy;
  vec2 tmpvar_2;
  tmpvar_2 = gl_MultiTexCoord1.xy;
  vec4 tmpvar_3;
  vec4 tmpvar_4;
  vec4 tmpvar_5;
  vec4 tmpvar_6;
  vec4 tmpvar_7;
  vec4 tmpvar_8;
  tmpvar_8 = (_Object2World * gl_Vertex);
  vec3 tmpvar_9;
  tmpvar_9 = tmpvar_8.xyz;
  tmpvar_3 = (gl_ModelViewProjectionMatrix * gl_Vertex);
  vec4 texcoord_10;
  texcoord_10.xy = ((gl_MultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  vec2 tmpvar_11;
  if ((_UVSec == 0.0)) {
    tmpvar_11 = tmpvar_1;
  } else {
    tmpvar_11 = tmpvar_2;
  };
  texcoord_10.zw = ((tmpvar_11 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  vec3 n_12;
  n_12 = (tmpvar_8.xyz - _WorldSpaceCameraPos);
  vec4 v_13;
  v_13.x = _World2Object[0].x;
  v_13.y = _World2Object[1].x;
  v_13.z = _World2Object[2].x;
  v_13.w = _World2Object[3].x;
  vec4 v_14;
  v_14.x = _World2Object[0].y;
  v_14.y = _World2Object[1].y;
  v_14.z = _World2Object[2].y;
  v_14.w = _World2Object[3].y;
  vec4 v_15;
  v_15.x = _World2Object[0].z;
  v_15.y = _World2Object[1].z;
  v_15.z = _World2Object[2].z;
  v_15.w = _World2Object[3].z;
  vec3 tmpvar_16;
  tmpvar_16 = normalize(((
    (v_13.xyz * gl_Normal.x)
   + 
    (v_14.xyz * gl_Normal.y)
  ) + (v_15.xyz * gl_Normal.z)));
  mat3 tmpvar_17;
  tmpvar_17[0] = _Object2World[0].xyz;
  tmpvar_17[1] = _Object2World[1].xyz;
  tmpvar_17[2] = _Object2World[2].xyz;
  vec4 tmpvar_18;
  tmpvar_18.xyz = normalize((tmpvar_17 * TANGENT.xyz));
  tmpvar_18.w = TANGENT.w;
  vec3 tmpvar_19;
  vec3 tmpvar_20;
  tmpvar_19 = tmpvar_18.xyz;
  tmpvar_20 = (((tmpvar_16.yzx * tmpvar_18.zxy) - (tmpvar_16.zxy * tmpvar_18.yzx)) * (TANGENT.w * unity_WorldTransformParams.w));
  vec3 tmpvar_21;
  vec3 tmpvar_22;
  vec3 tmpvar_23;
  tmpvar_21.x = tmpvar_19.x;
  tmpvar_21.y = tmpvar_20.x;
  tmpvar_21.z = tmpvar_16.x;
  tmpvar_22.x = tmpvar_19.y;
  tmpvar_22.y = tmpvar_20.y;
  tmpvar_22.z = tmpvar_16.y;
  tmpvar_23.x = tmpvar_19.z;
  tmpvar_23.y = tmpvar_20.z;
  tmpvar_23.z = tmpvar_16.z;
  vec3 v_24;
  v_24.x = tmpvar_21.x;
  v_24.y = tmpvar_22.x;
  v_24.z = tmpvar_23.x;
  tmpvar_4.xyz = v_24;
  vec3 v_25;
  v_25.x = tmpvar_21.y;
  v_25.y = tmpvar_22.y;
  v_25.z = tmpvar_23.y;
  tmpvar_5.xyz = v_25;
  vec3 v_26;
  v_26.x = tmpvar_21.z;
  v_26.y = tmpvar_22.z;
  v_26.z = tmpvar_23.z;
  tmpvar_6.xyz = v_26;
  tmpvar_7 = vec4(0.0, 0.0, 0.0, 0.0);
  vec3 ambient_27;
  ambient_27 = vec3(0.0, 0.0, 0.0);
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    ambient_27 = vec3(0.0, 0.0, 0.0);
  };
  vec3 x1_28;
  vec4 tmpvar_29;
  tmpvar_29 = (tmpvar_16.xyzz * tmpvar_16.yzzx);
  x1_28.x = dot (unity_SHBr, tmpvar_29);
  x1_28.y = dot (unity_SHBg, tmpvar_29);
  x1_28.z = dot (unity_SHBb, tmpvar_29);
  ambient_27 = (ambient_27 + (x1_28 + (unity_SHC.xyz * 
    ((tmpvar_16.x * tmpvar_16.x) - (tmpvar_16.y * tmpvar_16.y))
  )));
  tmpvar_7.xyz = ambient_27;
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = texcoord_10;
  xlv_TEXCOORD1 = n_12;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  xlv_TEXCOORD5 = tmpvar_7;
  xlv_TEXCOORD6 = tmpvar_9;
}


#endif
#ifdef FRAGMENT
#extension GL_ARB_shader_texture_lod : enable
uniform vec4 unity_SHAr;
uniform vec4 unity_SHAg;
uniform vec4 unity_SHAb;
uniform vec4 unity_ColorSpaceDielectricSpec;
uniform vec4 unity_ColorSpaceLuminance;
uniform vec4 _Color;
uniform sampler2D _MainTex;
uniform float _Metallic;
uniform float _Glossiness;
uniform sampler2D _OcclusionMap;
uniform float _OcclusionStrength;
uniform vec4 _EmissionColor;
uniform sampler2D _EmissionMap;
varying vec4 xlv_TEXCOORD0;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
void main ()
{
  vec3 color_1;
  vec2 tmpvar_2;
  tmpvar_2.x = _Metallic;
  tmpvar_2.y = _Glossiness;
  float tmpvar_3;
  tmpvar_3 = tmpvar_2.y;
  vec3 tmpvar_4;
  tmpvar_4 = (_Color.xyz * texture2D (_MainTex, xlv_TEXCOORD0.xy).xyz);
  vec3 tmpvar_5;
  vec3 tmpvar_6;
  tmpvar_6 = mix (unity_ColorSpaceDielectricSpec.xyz, tmpvar_4, vec3(_Metallic));
  tmpvar_5 = (tmpvar_4 * (unity_ColorSpaceDielectricSpec.w - (_Metallic * unity_ColorSpaceDielectricSpec.w)));
  vec3 tmpvar_7;
  tmpvar_7 = normalize(xlv_TEXCOORD2_2.xyz);
  float tmpvar_8;
  tmpvar_8 = ((1.0 - _OcclusionStrength) + (texture2D (_OcclusionMap, xlv_TEXCOORD0.xy).y * _OcclusionStrength));
  vec3 tmpvar_9;
  tmpvar_9 = vec3(0.0, 0.0, 0.0);
  vec3 ambient_10;
  vec4 tmpvar_11;
  tmpvar_11.w = 1.0;
  tmpvar_11.xyz = tmpvar_7;
  vec3 x_12;
  x_12.x = dot (unity_SHAr, tmpvar_11);
  x_12.y = dot (unity_SHAg, tmpvar_11);
  x_12.z = dot (unity_SHAb, tmpvar_11);
  vec3 tmpvar_13;
  tmpvar_13 = max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD5.xyz + x_12));
  ambient_10 = tmpvar_13;
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    ambient_10 = max (((1.055 * 
      pow (max (tmpvar_13, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
    ) - 0.055), vec3(0.0, 0.0, 0.0));
  };
  tmpvar_9 = (ambient_10 * tmpvar_8);
  vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = (tmpvar_5 * tmpvar_9);
  color_1 = (tmpvar_14.xyz + (texture2D (_EmissionMap, xlv_TEXCOORD0.xy).xyz * _EmissionColor.xyz));
  color_1 = exp2(-(color_1));
  vec4 tmpvar_15;
  tmpvar_15.xyz = tmpvar_5;
  tmpvar_15.w = tmpvar_8;
  vec4 tmpvar_16;
  tmpvar_16.xyz = tmpvar_6;
  tmpvar_16.w = tmpvar_3;
  vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = ((tmpvar_7 * 0.5) + 0.5);
  vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = color_1;
  gl_FragData[0] = tmpvar_15;
  gl_FragData[1] = tmpvar_16;
  gl_FragData[2] = tmpvar_17;
  gl_FragData[3] = tmpvar_18;
}


#endif
"
}
SubProgram "d3d9 " {
// Stats: 45 math
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_SEPARATE" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "_ALPHABLEND_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
Matrix 4 [_Object2World] 3
Matrix 7 [_World2Object] 3
Matrix 0 [glstate_matrix_mvp]
Vector 17 [_DetailAlbedoMap_ST]
Vector 16 [_MainTex_ST]
Float 18 [_UVSec]
Vector 10 [_WorldSpaceCameraPos]
Vector 13 [unity_SHBb]
Vector 12 [unity_SHBg]
Vector 11 [unity_SHBr]
Vector 14 [unity_SHC]
Vector 15 [unity_WorldTransformParams]
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   row_major float4x4 _Object2World;
//   float _UVSec;
//   row_major float4x4 _World2Object;
//   float3 _WorldSpaceCameraPos;
//   row_major float4x4 glstate_matrix_mvp;
//   float4 unity_SHBb;
//   float4 unity_SHBg;
//   float4 unity_SHBr;
//   float4 unity_SHC;
//   float4 unity_WorldTransformParams;
//
//
// Registers:
//
//   Name                       Reg   Size
//   -------------------------- ----- ----
//   glstate_matrix_mvp         c0       4
//   _Object2World              c4       3
//   _World2Object              c7       3
//   _WorldSpaceCameraPos       c10      1
//   unity_SHBr                 c11      1
//   unity_SHBg                 c12      1
//   unity_SHBb                 c13      1
//   unity_SHC                  c14      1
//   unity_WorldTransformParams c15      1
//   _MainTex_ST                c16      1
//   _DetailAlbedoMap_ST        c17      1
//   _UVSec                     c18      1
//

    vs_3_0
    def c19, 0, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_tangent v4
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6
    dcl_texcoord6 o7.xyz
    dp4 o0.x, c0, v0
    dp4 o0.y, c1, v0
    dp4 o0.z, c2, v0
    dp4 o0.w, c3, v0
    mad o1.xy, v2, c16, c16.zwzw
    abs r0.x, c18.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c17.xyxy, c17
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add o2.xyz, r0, -c10
    mov o7.xyz, r0
    mul r0.x, c15.w, v4.w
    dp3 r1.x, c4, v4
    dp3 r1.y, c5, v4
    dp3 r1.z, c6, v4
    nrm r2.xyz, r1
    mul r0.yzw, c8.xxyz, v1.y
    mad r0.yzw, c7.xxyz, v1.x, r0
    mad r0.yzw, c9.xxyz, v1.z, r0
    nrm r1.xyz, r0.yzww
    mul r0.yzw, r2.xyzx, r1.xzxy
    mad r0.yzw, r1.xyzx, r2.xzxy, -r0
    mov o3.xyz, r2
    mul o4.xyz, r0.x, r0.yzww
    mul r0.x, r1.y, r1.y
    mad r0.x, r1.x, r1.x, -r0.x
    mul r2, r1.yzzx, r1.xyzz
    mov o5.xyz, r1
    dp4 r1.x, c11, r2
    dp4 r1.y, c12, r2
    dp4 r1.z, c13, r2
    mad o6.xyz, c14, r0.x, r1
    mov o3.w, c19.x
    mov o4.w, c19.x
    mov o5.w, c19.x
    mov o6.w, c19.x

// approximately 44 instruction slots used
"
}
SubProgram "d3d11 " {
// Stats: 43 math
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_SEPARATE" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "_ALPHABLEND_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
ConstBuffer "$Globals" 240
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 656 [unity_SHBr]
Vector 672 [unity_SHBg]
Vector 688 [unity_SHBb]
Vector 704 [unity_SHC]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
Vector 336 [unity_WorldTransformParams]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer cb0[14], immediateIndexed
      dcl_constantbuffer cb1[5], immediateIndexed
      dcl_constantbuffer cb2[45], immediateIndexed
      dcl_constantbuffer cb3[22], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyz
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: mad o0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   4: eq r0.x, cb0[13].z, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[11].xxxy, cb0[11].zzzw
   7: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  13: mov o7.xyz, r0.xyzx
  14: mul r0.xyz, v4.yyyy, cb3[13].xyzx
  15: mad r0.xyz, cb3[12].xyzx, v4.xxxx, r0.xyzx
  16: mad r0.xyz, cb3[14].xyzx, v4.zzzz, r0.xyzx
  17: dp3 r0.w, r0.xyzx, r0.xyzx
  18: rsq r0.w, r0.w
  19: mul r0.xyz, r0.wwww, r0.xyzx
  20: mov o3.xyz, r0.xyzx
  21: mov o3.w, l(0)
  22: mul r1.x, v1.x, cb3[16].x
  23: mul r1.y, v1.x, cb3[17].x
  24: mul r1.z, v1.x, cb3[18].x
  25: mul r2.x, v1.y, cb3[16].y
  26: mul r2.y, v1.y, cb3[17].y
  27: mul r2.z, v1.y, cb3[18].y
  28: add r1.xyz, r1.xyzx, r2.xyzx
  29: mul r2.x, v1.z, cb3[16].z
  30: mul r2.y, v1.z, cb3[17].z
  31: mul r2.z, v1.z, cb3[18].z
  32: add r1.xyz, r1.xyzx, r2.xyzx
  33: dp3 r0.w, r1.xyzx, r1.xyzx
  34: rsq r0.w, r0.w
  35: mul r1.xyz, r0.wwww, r1.xyzx
  36: mul r2.xyz, r0.yzxy, r1.zxyz
  37: mad r0.xyz, r1.yzxy, r0.zxyz, -r2.xyzx
  38: mul r0.w, v4.w, cb3[21].w
  39: mul o4.xyz, r0.wwww, r0.xyzx
  40: mov o4.w, l(0)
  41: mov o5.xyz, r1.xyzx
  42: mov o5.w, l(0)
  43: mul r0.x, r1.y, r1.y
  44: mad r0.x, r1.x, r1.x, -r0.x
  45: mul r1.xyzw, r1.yzzx, r1.xyzz
  46: dp4 r2.x, cb2[41].xyzw, r1.xyzw
  47: dp4 r2.y, cb2[42].xyzw, r1.xyzw
  48: dp4 r2.z, cb2[43].xyzw, r1.xyzw
  49: mad o6.xyz, cb2[44].xyzx, r0.xxxx, r2.xyzx
  50: mov o6.w, l(0)
  51: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
// Stats: 29 math, 2 textures, 1 branches
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" }
"#version 120

#ifdef VERTEX
uniform vec3 _WorldSpaceCameraPos;
uniform vec4 unity_SHBr;
uniform vec4 unity_SHBg;
uniform vec4 unity_SHBb;
uniform vec4 unity_SHC;

uniform mat4 _Object2World;
uniform mat4 _World2Object;
uniform vec4 unity_ColorSpaceLuminance;
uniform vec4 _MainTex_ST;
uniform vec4 _DetailAlbedoMap_ST;
uniform float _UVSec;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
varying vec3 xlv_TEXCOORD6;
void main ()
{
  vec2 tmpvar_1;
  tmpvar_1 = gl_MultiTexCoord0.xy;
  vec2 tmpvar_2;
  tmpvar_2 = gl_MultiTexCoord1.xy;
  vec4 tmpvar_3;
  vec4 tmpvar_4;
  vec4 tmpvar_5;
  vec4 tmpvar_6;
  vec4 tmpvar_7;
  vec4 tmpvar_8;
  tmpvar_8 = (_Object2World * gl_Vertex);
  vec3 tmpvar_9;
  tmpvar_9 = tmpvar_8.xyz;
  tmpvar_3 = (gl_ModelViewProjectionMatrix * gl_Vertex);
  vec4 texcoord_10;
  texcoord_10.xy = ((gl_MultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  vec2 tmpvar_11;
  if ((_UVSec == 0.0)) {
    tmpvar_11 = tmpvar_1;
  } else {
    tmpvar_11 = tmpvar_2;
  };
  texcoord_10.zw = ((tmpvar_11 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  vec3 n_12;
  n_12 = (tmpvar_8.xyz - _WorldSpaceCameraPos);
  vec4 v_13;
  v_13.x = _World2Object[0].x;
  v_13.y = _World2Object[1].x;
  v_13.z = _World2Object[2].x;
  v_13.w = _World2Object[3].x;
  vec4 v_14;
  v_14.x = _World2Object[0].y;
  v_14.y = _World2Object[1].y;
  v_14.z = _World2Object[2].y;
  v_14.w = _World2Object[3].y;
  vec4 v_15;
  v_15.x = _World2Object[0].z;
  v_15.y = _World2Object[1].z;
  v_15.z = _World2Object[2].z;
  v_15.w = _World2Object[3].z;
  vec3 tmpvar_16;
  tmpvar_16 = normalize(((
    (v_13.xyz * gl_Normal.x)
   + 
    (v_14.xyz * gl_Normal.y)
  ) + (v_15.xyz * gl_Normal.z)));
  tmpvar_4.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_5.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_6.xyz = tmpvar_16;
  tmpvar_7 = vec4(0.0, 0.0, 0.0, 0.0);
  vec3 ambient_17;
  ambient_17 = vec3(0.0, 0.0, 0.0);
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    ambient_17 = vec3(0.0, 0.0, 0.0);
  };
  vec3 x1_18;
  vec4 tmpvar_19;
  tmpvar_19 = (tmpvar_16.xyzz * tmpvar_16.yzzx);
  x1_18.x = dot (unity_SHBr, tmpvar_19);
  x1_18.y = dot (unity_SHBg, tmpvar_19);
  x1_18.z = dot (unity_SHBb, tmpvar_19);
  ambient_17 = (ambient_17 + (x1_18 + (unity_SHC.xyz * 
    ((tmpvar_16.x * tmpvar_16.x) - (tmpvar_16.y * tmpvar_16.y))
  )));
  tmpvar_7.xyz = ambient_17;
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = texcoord_10;
  xlv_TEXCOORD1 = n_12;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  xlv_TEXCOORD5 = tmpvar_7;
  xlv_TEXCOORD6 = tmpvar_9;
}


#endif
#ifdef FRAGMENT
#extension GL_ARB_shader_texture_lod : enable
uniform vec4 unity_SHAr;
uniform vec4 unity_SHAg;
uniform vec4 unity_SHAb;
uniform vec4 unity_ColorSpaceDielectricSpec;
uniform vec4 unity_ColorSpaceLuminance;
uniform vec4 _Color;
uniform sampler2D _MainTex;
uniform float _Metallic;
uniform float _Glossiness;
uniform sampler2D _OcclusionMap;
uniform float _OcclusionStrength;
varying vec4 xlv_TEXCOORD0;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
void main ()
{
  vec2 tmpvar_1;
  tmpvar_1.x = _Metallic;
  tmpvar_1.y = _Glossiness;
  float tmpvar_2;
  tmpvar_2 = tmpvar_1.y;
  vec3 tmpvar_3;
  tmpvar_3 = (_Color.xyz * texture2D (_MainTex, xlv_TEXCOORD0.xy).xyz);
  vec3 tmpvar_4;
  vec3 tmpvar_5;
  tmpvar_5 = mix (unity_ColorSpaceDielectricSpec.xyz, tmpvar_3, vec3(_Metallic));
  tmpvar_4 = (tmpvar_3 * (unity_ColorSpaceDielectricSpec.w - (_Metallic * unity_ColorSpaceDielectricSpec.w)));
  vec3 tmpvar_6;
  tmpvar_6 = normalize(xlv_TEXCOORD2_2.xyz);
  float tmpvar_7;
  tmpvar_7 = ((1.0 - _OcclusionStrength) + (texture2D (_OcclusionMap, xlv_TEXCOORD0.xy).y * _OcclusionStrength));
  vec3 tmpvar_8;
  tmpvar_8 = vec3(0.0, 0.0, 0.0);
  vec3 ambient_9;
  vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = tmpvar_6;
  vec3 x_11;
  x_11.x = dot (unity_SHAr, tmpvar_10);
  x_11.y = dot (unity_SHAg, tmpvar_10);
  x_11.z = dot (unity_SHAb, tmpvar_10);
  vec3 tmpvar_12;
  tmpvar_12 = max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD5.xyz + x_11));
  ambient_9 = tmpvar_12;
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    ambient_9 = max (((1.055 * 
      pow (max (tmpvar_12, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
    ) - 0.055), vec3(0.0, 0.0, 0.0));
  };
  tmpvar_8 = (ambient_9 * tmpvar_7);
  vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = (tmpvar_4 * tmpvar_8);
  vec4 tmpvar_14;
  tmpvar_14.xyz = tmpvar_4;
  tmpvar_14.w = tmpvar_7;
  vec4 tmpvar_15;
  tmpvar_15.xyz = tmpvar_5;
  tmpvar_15.w = tmpvar_2;
  vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = ((tmpvar_6 * 0.5) + 0.5);
  vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = tmpvar_13.xyz;
  gl_FragData[0] = tmpvar_14;
  gl_FragData[1] = tmpvar_15;
  gl_FragData[2] = tmpvar_16;
  gl_FragData[3] = tmpvar_17;
}


#endif
"
}
SubProgram "d3d9 " {
// Stats: 34 math
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Matrix 4 [_Object2World] 3
Matrix 7 [_World2Object] 3
Matrix 0 [glstate_matrix_mvp]
Vector 16 [_DetailAlbedoMap_ST]
Vector 15 [_MainTex_ST]
Float 17 [_UVSec]
Vector 10 [_WorldSpaceCameraPos]
Vector 13 [unity_SHBb]
Vector 12 [unity_SHBg]
Vector 11 [unity_SHBr]
Vector 14 [unity_SHC]
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   row_major float4x4 _Object2World;
//   float _UVSec;
//   row_major float4x4 _World2Object;
//   float3 _WorldSpaceCameraPos;
//   row_major float4x4 glstate_matrix_mvp;
//   float4 unity_SHBb;
//   float4 unity_SHBg;
//   float4 unity_SHBr;
//   float4 unity_SHC;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   glstate_matrix_mvp   c0       4
//   _Object2World        c4       3
//   _World2Object        c7       3
//   _WorldSpaceCameraPos c10      1
//   unity_SHBr           c11      1
//   unity_SHBg           c12      1
//   unity_SHBb           c13      1
//   unity_SHC            c14      1
//   _MainTex_ST          c15      1
//   _DetailAlbedoMap_ST  c16      1
//   _UVSec               c17      1
//

    vs_3_0
    def c18, 0, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6
    dcl_texcoord6 o7.xyz
    dp4 o0.x, c0, v0
    dp4 o0.y, c1, v0
    dp4 o0.z, c2, v0
    dp4 o0.w, c3, v0
    mad o1.xy, v2, c15, c15.zwzw
    abs r0.x, c17.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c16.xyxy, c16
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add o2.xyz, r0, -c10
    mov o7.xyz, r0
    mul r0.xyz, c8, v1.y
    mad r0.xyz, c7, v1.x, r0
    mad r0.xyz, c9, v1.z, r0
    nrm r1.xyz, r0
    mul r0.x, r1.y, r1.y
    mad r0.x, r1.x, r1.x, -r0.x
    mul r2, r1.yzzx, r1.xyzz
    mov o5.xyz, r1
    dp4 r1.x, c11, r2
    dp4 r1.y, c12, r2
    dp4 r1.z, c13, r2
    mad o6.xyz, c14, r0.x, r1
    mov o3, c18.x
    mov o4, c18.x
    mov o5.w, c18.x
    mov o6.w, c18.x

// approximately 33 instruction slots used
"
}
SubProgram "d3d11 " {
// Stats: 33 math
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
ConstBuffer "$Globals" 240
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 656 [unity_SHBr]
Vector 672 [unity_SHBg]
Vector 688 [unity_SHBb]
Vector 704 [unity_SHC]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer cb0[14], immediateIndexed
      dcl_constantbuffer cb1[5], immediateIndexed
      dcl_constantbuffer cb2[45], immediateIndexed
      dcl_constantbuffer cb3[19], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyz
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: mad o0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   4: eq r0.x, cb0[13].z, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[11].xxxy, cb0[11].zzzw
   7: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  13: mov o7.xyz, r0.xyzx
  14: mov o3.xyzw, l(0,0,0,0)
  15: mov o4.xyzw, l(0,0,0,0)
  16: mul r0.x, v1.x, cb3[16].x
  17: mul r0.y, v1.x, cb3[17].x
  18: mul r0.z, v1.x, cb3[18].x
  19: mul r1.x, v1.y, cb3[16].y
  20: mul r1.y, v1.y, cb3[17].y
  21: mul r1.z, v1.y, cb3[18].y
  22: add r0.xyz, r0.xyzx, r1.xyzx
  23: mul r1.x, v1.z, cb3[16].z
  24: mul r1.y, v1.z, cb3[17].z
  25: mul r1.z, v1.z, cb3[18].z
  26: add r0.xyz, r0.xyzx, r1.xyzx
  27: dp3 r0.w, r0.xyzx, r0.xyzx
  28: rsq r0.w, r0.w
  29: mul r0.xyz, r0.wwww, r0.xyzx
  30: mov o5.xyz, r0.xyzx
  31: mov o5.w, l(0)
  32: mul r0.w, r0.y, r0.y
  33: mad r0.w, r0.x, r0.x, -r0.w
  34: mul r1.xyzw, r0.yzzx, r0.xyzz
  35: dp4 r0.x, cb2[41].xyzw, r1.xyzw
  36: dp4 r0.y, cb2[42].xyzw, r1.xyzw
  37: dp4 r0.z, cb2[43].xyzw, r1.xyzw
  38: mad o6.xyz, cb2[44].xyzx, r0.wwww, r0.xyzx
  39: mov o6.w, l(0)
  40: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
// Stats: 31 math, 3 textures, 1 branches
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "UNITY_HDR_ON" }
"#version 120

#ifdef VERTEX
uniform vec3 _WorldSpaceCameraPos;
uniform vec4 unity_SHBr;
uniform vec4 unity_SHBg;
uniform vec4 unity_SHBb;
uniform vec4 unity_SHC;

uniform mat4 _Object2World;
uniform mat4 _World2Object;
uniform vec4 unity_ColorSpaceLuminance;
uniform vec4 _MainTex_ST;
uniform vec4 _DetailAlbedoMap_ST;
uniform float _UVSec;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
varying vec3 xlv_TEXCOORD6;
void main ()
{
  vec2 tmpvar_1;
  tmpvar_1 = gl_MultiTexCoord0.xy;
  vec2 tmpvar_2;
  tmpvar_2 = gl_MultiTexCoord1.xy;
  vec4 tmpvar_3;
  vec4 tmpvar_4;
  vec4 tmpvar_5;
  vec4 tmpvar_6;
  vec4 tmpvar_7;
  vec4 tmpvar_8;
  tmpvar_8 = (_Object2World * gl_Vertex);
  vec3 tmpvar_9;
  tmpvar_9 = tmpvar_8.xyz;
  tmpvar_3 = (gl_ModelViewProjectionMatrix * gl_Vertex);
  vec4 texcoord_10;
  texcoord_10.xy = ((gl_MultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  vec2 tmpvar_11;
  if ((_UVSec == 0.0)) {
    tmpvar_11 = tmpvar_1;
  } else {
    tmpvar_11 = tmpvar_2;
  };
  texcoord_10.zw = ((tmpvar_11 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  vec3 n_12;
  n_12 = (tmpvar_8.xyz - _WorldSpaceCameraPos);
  vec4 v_13;
  v_13.x = _World2Object[0].x;
  v_13.y = _World2Object[1].x;
  v_13.z = _World2Object[2].x;
  v_13.w = _World2Object[3].x;
  vec4 v_14;
  v_14.x = _World2Object[0].y;
  v_14.y = _World2Object[1].y;
  v_14.z = _World2Object[2].y;
  v_14.w = _World2Object[3].y;
  vec4 v_15;
  v_15.x = _World2Object[0].z;
  v_15.y = _World2Object[1].z;
  v_15.z = _World2Object[2].z;
  v_15.w = _World2Object[3].z;
  vec3 tmpvar_16;
  tmpvar_16 = normalize(((
    (v_13.xyz * gl_Normal.x)
   + 
    (v_14.xyz * gl_Normal.y)
  ) + (v_15.xyz * gl_Normal.z)));
  tmpvar_4.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_5.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_6.xyz = tmpvar_16;
  tmpvar_7 = vec4(0.0, 0.0, 0.0, 0.0);
  vec3 ambient_17;
  ambient_17 = vec3(0.0, 0.0, 0.0);
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    ambient_17 = vec3(0.0, 0.0, 0.0);
  };
  vec3 x1_18;
  vec4 tmpvar_19;
  tmpvar_19 = (tmpvar_16.xyzz * tmpvar_16.yzzx);
  x1_18.x = dot (unity_SHBr, tmpvar_19);
  x1_18.y = dot (unity_SHBg, tmpvar_19);
  x1_18.z = dot (unity_SHBb, tmpvar_19);
  ambient_17 = (ambient_17 + (x1_18 + (unity_SHC.xyz * 
    ((tmpvar_16.x * tmpvar_16.x) - (tmpvar_16.y * tmpvar_16.y))
  )));
  tmpvar_7.xyz = ambient_17;
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = texcoord_10;
  xlv_TEXCOORD1 = n_12;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  xlv_TEXCOORD5 = tmpvar_7;
  xlv_TEXCOORD6 = tmpvar_9;
}


#endif
#ifdef FRAGMENT
#extension GL_ARB_shader_texture_lod : enable
uniform vec4 unity_SHAr;
uniform vec4 unity_SHAg;
uniform vec4 unity_SHAb;
uniform vec4 unity_ColorSpaceDielectricSpec;
uniform vec4 unity_ColorSpaceLuminance;
uniform vec4 _Color;
uniform sampler2D _MainTex;
uniform float _Metallic;
uniform float _Glossiness;
uniform sampler2D _OcclusionMap;
uniform float _OcclusionStrength;
uniform vec4 _EmissionColor;
uniform sampler2D _EmissionMap;
varying vec4 xlv_TEXCOORD0;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
void main ()
{
  vec2 tmpvar_1;
  tmpvar_1.x = _Metallic;
  tmpvar_1.y = _Glossiness;
  float tmpvar_2;
  tmpvar_2 = tmpvar_1.y;
  vec3 tmpvar_3;
  tmpvar_3 = (_Color.xyz * texture2D (_MainTex, xlv_TEXCOORD0.xy).xyz);
  vec3 tmpvar_4;
  vec3 tmpvar_5;
  tmpvar_5 = mix (unity_ColorSpaceDielectricSpec.xyz, tmpvar_3, vec3(_Metallic));
  tmpvar_4 = (tmpvar_3 * (unity_ColorSpaceDielectricSpec.w - (_Metallic * unity_ColorSpaceDielectricSpec.w)));
  vec3 tmpvar_6;
  tmpvar_6 = normalize(xlv_TEXCOORD2_2.xyz);
  float tmpvar_7;
  tmpvar_7 = ((1.0 - _OcclusionStrength) + (texture2D (_OcclusionMap, xlv_TEXCOORD0.xy).y * _OcclusionStrength));
  vec3 tmpvar_8;
  tmpvar_8 = vec3(0.0, 0.0, 0.0);
  vec3 ambient_9;
  vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = tmpvar_6;
  vec3 x_11;
  x_11.x = dot (unity_SHAr, tmpvar_10);
  x_11.y = dot (unity_SHAg, tmpvar_10);
  x_11.z = dot (unity_SHAb, tmpvar_10);
  vec3 tmpvar_12;
  tmpvar_12 = max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD5.xyz + x_11));
  ambient_9 = tmpvar_12;
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    ambient_9 = max (((1.055 * 
      pow (max (tmpvar_12, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
    ) - 0.055), vec3(0.0, 0.0, 0.0));
  };
  tmpvar_8 = (ambient_9 * tmpvar_7);
  vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = (tmpvar_4 * tmpvar_8);
  vec4 tmpvar_14;
  tmpvar_14.xyz = tmpvar_4;
  tmpvar_14.w = tmpvar_7;
  vec4 tmpvar_15;
  tmpvar_15.xyz = tmpvar_5;
  tmpvar_15.w = tmpvar_2;
  vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = ((tmpvar_6 * 0.5) + 0.5);
  vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = (tmpvar_13.xyz + (texture2D (_EmissionMap, xlv_TEXCOORD0.xy).xyz * _EmissionColor.xyz));
  gl_FragData[0] = tmpvar_14;
  gl_FragData[1] = tmpvar_15;
  gl_FragData[2] = tmpvar_16;
  gl_FragData[3] = tmpvar_17;
}


#endif
"
}
SubProgram "d3d9 " {
// Stats: 34 math
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "UNITY_HDR_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Matrix 4 [_Object2World] 3
Matrix 7 [_World2Object] 3
Matrix 0 [glstate_matrix_mvp]
Vector 16 [_DetailAlbedoMap_ST]
Vector 15 [_MainTex_ST]
Float 17 [_UVSec]
Vector 10 [_WorldSpaceCameraPos]
Vector 13 [unity_SHBb]
Vector 12 [unity_SHBg]
Vector 11 [unity_SHBr]
Vector 14 [unity_SHC]
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   row_major float4x4 _Object2World;
//   float _UVSec;
//   row_major float4x4 _World2Object;
//   float3 _WorldSpaceCameraPos;
//   row_major float4x4 glstate_matrix_mvp;
//   float4 unity_SHBb;
//   float4 unity_SHBg;
//   float4 unity_SHBr;
//   float4 unity_SHC;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   glstate_matrix_mvp   c0       4
//   _Object2World        c4       3
//   _World2Object        c7       3
//   _WorldSpaceCameraPos c10      1
//   unity_SHBr           c11      1
//   unity_SHBg           c12      1
//   unity_SHBb           c13      1
//   unity_SHC            c14      1
//   _MainTex_ST          c15      1
//   _DetailAlbedoMap_ST  c16      1
//   _UVSec               c17      1
//

    vs_3_0
    def c18, 0, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6
    dcl_texcoord6 o7.xyz
    dp4 o0.x, c0, v0
    dp4 o0.y, c1, v0
    dp4 o0.z, c2, v0
    dp4 o0.w, c3, v0
    mad o1.xy, v2, c15, c15.zwzw
    abs r0.x, c17.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c16.xyxy, c16
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add o2.xyz, r0, -c10
    mov o7.xyz, r0
    mul r0.xyz, c8, v1.y
    mad r0.xyz, c7, v1.x, r0
    mad r0.xyz, c9, v1.z, r0
    nrm r1.xyz, r0
    mul r0.x, r1.y, r1.y
    mad r0.x, r1.x, r1.x, -r0.x
    mul r2, r1.yzzx, r1.xyzz
    mov o5.xyz, r1
    dp4 r1.x, c11, r2
    dp4 r1.y, c12, r2
    dp4 r1.z, c13, r2
    mad o6.xyz, c14, r0.x, r1
    mov o3, c18.x
    mov o4, c18.x
    mov o5.w, c18.x
    mov o6.w, c18.x

// approximately 33 instruction slots used
"
}
SubProgram "d3d11 " {
// Stats: 33 math
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "UNITY_HDR_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
ConstBuffer "$Globals" 240
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 656 [unity_SHBr]
Vector 672 [unity_SHBg]
Vector 688 [unity_SHBb]
Vector 704 [unity_SHC]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer cb0[14], immediateIndexed
      dcl_constantbuffer cb1[5], immediateIndexed
      dcl_constantbuffer cb2[45], immediateIndexed
      dcl_constantbuffer cb3[19], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyz
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: mad o0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   4: eq r0.x, cb0[13].z, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[11].xxxy, cb0[11].zzzw
   7: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  13: mov o7.xyz, r0.xyzx
  14: mov o3.xyzw, l(0,0,0,0)
  15: mov o4.xyzw, l(0,0,0,0)
  16: mul r0.x, v1.x, cb3[16].x
  17: mul r0.y, v1.x, cb3[17].x
  18: mul r0.z, v1.x, cb3[18].x
  19: mul r1.x, v1.y, cb3[16].y
  20: mul r1.y, v1.y, cb3[17].y
  21: mul r1.z, v1.y, cb3[18].y
  22: add r0.xyz, r0.xyzx, r1.xyzx
  23: mul r1.x, v1.z, cb3[16].z
  24: mul r1.y, v1.z, cb3[17].z
  25: mul r1.z, v1.z, cb3[18].z
  26: add r0.xyz, r0.xyzx, r1.xyzx
  27: dp3 r0.w, r0.xyzx, r0.xyzx
  28: rsq r0.w, r0.w
  29: mul r0.xyz, r0.wwww, r0.xyzx
  30: mov o5.xyz, r0.xyzx
  31: mov o5.w, l(0)
  32: mul r0.w, r0.y, r0.y
  33: mad r0.w, r0.x, r0.x, -r0.w
  34: mul r1.xyzw, r0.yzzx, r0.xyzz
  35: dp4 r0.x, cb2[41].xyzw, r1.xyzw
  36: dp4 r0.y, cb2[42].xyzw, r1.xyzw
  37: dp4 r0.z, cb2[43].xyzw, r1.xyzw
  38: mad o6.xyz, cb2[44].xyzx, r0.wwww, r0.xyzx
  39: mov o6.w, l(0)
  40: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
// Stats: 29 math, 2 textures, 1 branches
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" "_ALPHABLEND_ON" }
"#version 120

#ifdef VERTEX
uniform vec3 _WorldSpaceCameraPos;
uniform vec4 unity_SHBr;
uniform vec4 unity_SHBg;
uniform vec4 unity_SHBb;
uniform vec4 unity_SHC;

uniform mat4 _Object2World;
uniform mat4 _World2Object;
uniform vec4 unity_ColorSpaceLuminance;
uniform vec4 _MainTex_ST;
uniform vec4 _DetailAlbedoMap_ST;
uniform float _UVSec;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
varying vec3 xlv_TEXCOORD6;
void main ()
{
  vec2 tmpvar_1;
  tmpvar_1 = gl_MultiTexCoord0.xy;
  vec2 tmpvar_2;
  tmpvar_2 = gl_MultiTexCoord1.xy;
  vec4 tmpvar_3;
  vec4 tmpvar_4;
  vec4 tmpvar_5;
  vec4 tmpvar_6;
  vec4 tmpvar_7;
  vec4 tmpvar_8;
  tmpvar_8 = (_Object2World * gl_Vertex);
  vec3 tmpvar_9;
  tmpvar_9 = tmpvar_8.xyz;
  tmpvar_3 = (gl_ModelViewProjectionMatrix * gl_Vertex);
  vec4 texcoord_10;
  texcoord_10.xy = ((gl_MultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  vec2 tmpvar_11;
  if ((_UVSec == 0.0)) {
    tmpvar_11 = tmpvar_1;
  } else {
    tmpvar_11 = tmpvar_2;
  };
  texcoord_10.zw = ((tmpvar_11 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  vec3 n_12;
  n_12 = (tmpvar_8.xyz - _WorldSpaceCameraPos);
  vec4 v_13;
  v_13.x = _World2Object[0].x;
  v_13.y = _World2Object[1].x;
  v_13.z = _World2Object[2].x;
  v_13.w = _World2Object[3].x;
  vec4 v_14;
  v_14.x = _World2Object[0].y;
  v_14.y = _World2Object[1].y;
  v_14.z = _World2Object[2].y;
  v_14.w = _World2Object[3].y;
  vec4 v_15;
  v_15.x = _World2Object[0].z;
  v_15.y = _World2Object[1].z;
  v_15.z = _World2Object[2].z;
  v_15.w = _World2Object[3].z;
  vec3 tmpvar_16;
  tmpvar_16 = normalize(((
    (v_13.xyz * gl_Normal.x)
   + 
    (v_14.xyz * gl_Normal.y)
  ) + (v_15.xyz * gl_Normal.z)));
  tmpvar_4.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_5.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_6.xyz = tmpvar_16;
  tmpvar_7 = vec4(0.0, 0.0, 0.0, 0.0);
  vec3 ambient_17;
  ambient_17 = vec3(0.0, 0.0, 0.0);
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    ambient_17 = vec3(0.0, 0.0, 0.0);
  };
  vec3 x1_18;
  vec4 tmpvar_19;
  tmpvar_19 = (tmpvar_16.xyzz * tmpvar_16.yzzx);
  x1_18.x = dot (unity_SHBr, tmpvar_19);
  x1_18.y = dot (unity_SHBg, tmpvar_19);
  x1_18.z = dot (unity_SHBb, tmpvar_19);
  ambient_17 = (ambient_17 + (x1_18 + (unity_SHC.xyz * 
    ((tmpvar_16.x * tmpvar_16.x) - (tmpvar_16.y * tmpvar_16.y))
  )));
  tmpvar_7.xyz = ambient_17;
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = texcoord_10;
  xlv_TEXCOORD1 = n_12;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  xlv_TEXCOORD5 = tmpvar_7;
  xlv_TEXCOORD6 = tmpvar_9;
}


#endif
#ifdef FRAGMENT
#extension GL_ARB_shader_texture_lod : enable
uniform vec4 unity_SHAr;
uniform vec4 unity_SHAg;
uniform vec4 unity_SHAb;
uniform vec4 unity_ColorSpaceDielectricSpec;
uniform vec4 unity_ColorSpaceLuminance;
uniform vec4 _Color;
uniform sampler2D _MainTex;
uniform float _Metallic;
uniform float _Glossiness;
uniform sampler2D _OcclusionMap;
uniform float _OcclusionStrength;
varying vec4 xlv_TEXCOORD0;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
void main ()
{
  vec2 tmpvar_1;
  tmpvar_1.x = _Metallic;
  tmpvar_1.y = _Glossiness;
  float tmpvar_2;
  tmpvar_2 = tmpvar_1.y;
  vec3 tmpvar_3;
  tmpvar_3 = (_Color.xyz * texture2D (_MainTex, xlv_TEXCOORD0.xy).xyz);
  vec3 tmpvar_4;
  vec3 tmpvar_5;
  tmpvar_5 = mix (unity_ColorSpaceDielectricSpec.xyz, tmpvar_3, vec3(_Metallic));
  tmpvar_4 = (tmpvar_3 * (unity_ColorSpaceDielectricSpec.w - (_Metallic * unity_ColorSpaceDielectricSpec.w)));
  vec3 tmpvar_6;
  tmpvar_6 = normalize(xlv_TEXCOORD2_2.xyz);
  float tmpvar_7;
  tmpvar_7 = ((1.0 - _OcclusionStrength) + (texture2D (_OcclusionMap, xlv_TEXCOORD0.xy).y * _OcclusionStrength));
  vec3 tmpvar_8;
  tmpvar_8 = vec3(0.0, 0.0, 0.0);
  vec3 ambient_9;
  vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = tmpvar_6;
  vec3 x_11;
  x_11.x = dot (unity_SHAr, tmpvar_10);
  x_11.y = dot (unity_SHAg, tmpvar_10);
  x_11.z = dot (unity_SHAb, tmpvar_10);
  vec3 tmpvar_12;
  tmpvar_12 = max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD5.xyz + x_11));
  ambient_9 = tmpvar_12;
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    ambient_9 = max (((1.055 * 
      pow (max (tmpvar_12, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
    ) - 0.055), vec3(0.0, 0.0, 0.0));
  };
  tmpvar_8 = (ambient_9 * tmpvar_7);
  vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = (tmpvar_4 * tmpvar_8);
  vec4 tmpvar_14;
  tmpvar_14.xyz = tmpvar_4;
  tmpvar_14.w = tmpvar_7;
  vec4 tmpvar_15;
  tmpvar_15.xyz = tmpvar_5;
  tmpvar_15.w = tmpvar_2;
  vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = ((tmpvar_6 * 0.5) + 0.5);
  vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = tmpvar_13.xyz;
  gl_FragData[0] = tmpvar_14;
  gl_FragData[1] = tmpvar_15;
  gl_FragData[2] = tmpvar_16;
  gl_FragData[3] = tmpvar_17;
}


#endif
"
}
SubProgram "d3d9 " {
// Stats: 34 math
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" "_ALPHABLEND_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Matrix 4 [_Object2World] 3
Matrix 7 [_World2Object] 3
Matrix 0 [glstate_matrix_mvp]
Vector 16 [_DetailAlbedoMap_ST]
Vector 15 [_MainTex_ST]
Float 17 [_UVSec]
Vector 10 [_WorldSpaceCameraPos]
Vector 13 [unity_SHBb]
Vector 12 [unity_SHBg]
Vector 11 [unity_SHBr]
Vector 14 [unity_SHC]
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   row_major float4x4 _Object2World;
//   float _UVSec;
//   row_major float4x4 _World2Object;
//   float3 _WorldSpaceCameraPos;
//   row_major float4x4 glstate_matrix_mvp;
//   float4 unity_SHBb;
//   float4 unity_SHBg;
//   float4 unity_SHBr;
//   float4 unity_SHC;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   glstate_matrix_mvp   c0       4
//   _Object2World        c4       3
//   _World2Object        c7       3
//   _WorldSpaceCameraPos c10      1
//   unity_SHBr           c11      1
//   unity_SHBg           c12      1
//   unity_SHBb           c13      1
//   unity_SHC            c14      1
//   _MainTex_ST          c15      1
//   _DetailAlbedoMap_ST  c16      1
//   _UVSec               c17      1
//

    vs_3_0
    def c18, 0, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6
    dcl_texcoord6 o7.xyz
    dp4 o0.x, c0, v0
    dp4 o0.y, c1, v0
    dp4 o0.z, c2, v0
    dp4 o0.w, c3, v0
    mad o1.xy, v2, c15, c15.zwzw
    abs r0.x, c17.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c16.xyxy, c16
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add o2.xyz, r0, -c10
    mov o7.xyz, r0
    mul r0.xyz, c8, v1.y
    mad r0.xyz, c7, v1.x, r0
    mad r0.xyz, c9, v1.z, r0
    nrm r1.xyz, r0
    mul r0.x, r1.y, r1.y
    mad r0.x, r1.x, r1.x, -r0.x
    mul r2, r1.yzzx, r1.xyzz
    mov o5.xyz, r1
    dp4 r1.x, c11, r2
    dp4 r1.y, c12, r2
    dp4 r1.z, c13, r2
    mad o6.xyz, c14, r0.x, r1
    mov o3, c18.x
    mov o4, c18.x
    mov o5.w, c18.x
    mov o6.w, c18.x

// approximately 33 instruction slots used
"
}
SubProgram "d3d11 " {
// Stats: 33 math
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" "_ALPHABLEND_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
ConstBuffer "$Globals" 240
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 656 [unity_SHBr]
Vector 672 [unity_SHBg]
Vector 688 [unity_SHBb]
Vector 704 [unity_SHC]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer cb0[14], immediateIndexed
      dcl_constantbuffer cb1[5], immediateIndexed
      dcl_constantbuffer cb2[45], immediateIndexed
      dcl_constantbuffer cb3[19], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyz
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: mad o0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   4: eq r0.x, cb0[13].z, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[11].xxxy, cb0[11].zzzw
   7: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  13: mov o7.xyz, r0.xyzx
  14: mov o3.xyzw, l(0,0,0,0)
  15: mov o4.xyzw, l(0,0,0,0)
  16: mul r0.x, v1.x, cb3[16].x
  17: mul r0.y, v1.x, cb3[17].x
  18: mul r0.z, v1.x, cb3[18].x
  19: mul r1.x, v1.y, cb3[16].y
  20: mul r1.y, v1.y, cb3[17].y
  21: mul r1.z, v1.y, cb3[18].y
  22: add r0.xyz, r0.xyzx, r1.xyzx
  23: mul r1.x, v1.z, cb3[16].z
  24: mul r1.y, v1.z, cb3[17].z
  25: mul r1.z, v1.z, cb3[18].z
  26: add r0.xyz, r0.xyzx, r1.xyzx
  27: dp3 r0.w, r0.xyzx, r0.xyzx
  28: rsq r0.w, r0.w
  29: mul r0.xyz, r0.wwww, r0.xyzx
  30: mov o5.xyz, r0.xyzx
  31: mov o5.w, l(0)
  32: mul r0.w, r0.y, r0.y
  33: mad r0.w, r0.x, r0.x, -r0.w
  34: mul r1.xyzw, r0.yzzx, r0.xyzz
  35: dp4 r0.x, cb2[41].xyzw, r1.xyzw
  36: dp4 r0.y, cb2[42].xyzw, r1.xyzw
  37: dp4 r0.z, cb2[43].xyzw, r1.xyzw
  38: mad o6.xyz, cb2[44].xyzx, r0.wwww, r0.xyzx
  39: mov o6.w, l(0)
  40: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
// Stats: 31 math, 3 textures, 1 branches
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "UNITY_HDR_ON" "_ALPHABLEND_ON" }
"#version 120

#ifdef VERTEX
uniform vec3 _WorldSpaceCameraPos;
uniform vec4 unity_SHBr;
uniform vec4 unity_SHBg;
uniform vec4 unity_SHBb;
uniform vec4 unity_SHC;

uniform mat4 _Object2World;
uniform mat4 _World2Object;
uniform vec4 unity_ColorSpaceLuminance;
uniform vec4 _MainTex_ST;
uniform vec4 _DetailAlbedoMap_ST;
uniform float _UVSec;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
varying vec3 xlv_TEXCOORD6;
void main ()
{
  vec2 tmpvar_1;
  tmpvar_1 = gl_MultiTexCoord0.xy;
  vec2 tmpvar_2;
  tmpvar_2 = gl_MultiTexCoord1.xy;
  vec4 tmpvar_3;
  vec4 tmpvar_4;
  vec4 tmpvar_5;
  vec4 tmpvar_6;
  vec4 tmpvar_7;
  vec4 tmpvar_8;
  tmpvar_8 = (_Object2World * gl_Vertex);
  vec3 tmpvar_9;
  tmpvar_9 = tmpvar_8.xyz;
  tmpvar_3 = (gl_ModelViewProjectionMatrix * gl_Vertex);
  vec4 texcoord_10;
  texcoord_10.xy = ((gl_MultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  vec2 tmpvar_11;
  if ((_UVSec == 0.0)) {
    tmpvar_11 = tmpvar_1;
  } else {
    tmpvar_11 = tmpvar_2;
  };
  texcoord_10.zw = ((tmpvar_11 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  vec3 n_12;
  n_12 = (tmpvar_8.xyz - _WorldSpaceCameraPos);
  vec4 v_13;
  v_13.x = _World2Object[0].x;
  v_13.y = _World2Object[1].x;
  v_13.z = _World2Object[2].x;
  v_13.w = _World2Object[3].x;
  vec4 v_14;
  v_14.x = _World2Object[0].y;
  v_14.y = _World2Object[1].y;
  v_14.z = _World2Object[2].y;
  v_14.w = _World2Object[3].y;
  vec4 v_15;
  v_15.x = _World2Object[0].z;
  v_15.y = _World2Object[1].z;
  v_15.z = _World2Object[2].z;
  v_15.w = _World2Object[3].z;
  vec3 tmpvar_16;
  tmpvar_16 = normalize(((
    (v_13.xyz * gl_Normal.x)
   + 
    (v_14.xyz * gl_Normal.y)
  ) + (v_15.xyz * gl_Normal.z)));
  tmpvar_4.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_5.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_6.xyz = tmpvar_16;
  tmpvar_7 = vec4(0.0, 0.0, 0.0, 0.0);
  vec3 ambient_17;
  ambient_17 = vec3(0.0, 0.0, 0.0);
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    ambient_17 = vec3(0.0, 0.0, 0.0);
  };
  vec3 x1_18;
  vec4 tmpvar_19;
  tmpvar_19 = (tmpvar_16.xyzz * tmpvar_16.yzzx);
  x1_18.x = dot (unity_SHBr, tmpvar_19);
  x1_18.y = dot (unity_SHBg, tmpvar_19);
  x1_18.z = dot (unity_SHBb, tmpvar_19);
  ambient_17 = (ambient_17 + (x1_18 + (unity_SHC.xyz * 
    ((tmpvar_16.x * tmpvar_16.x) - (tmpvar_16.y * tmpvar_16.y))
  )));
  tmpvar_7.xyz = ambient_17;
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = texcoord_10;
  xlv_TEXCOORD1 = n_12;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  xlv_TEXCOORD5 = tmpvar_7;
  xlv_TEXCOORD6 = tmpvar_9;
}


#endif
#ifdef FRAGMENT
#extension GL_ARB_shader_texture_lod : enable
uniform vec4 unity_SHAr;
uniform vec4 unity_SHAg;
uniform vec4 unity_SHAb;
uniform vec4 unity_ColorSpaceDielectricSpec;
uniform vec4 unity_ColorSpaceLuminance;
uniform vec4 _Color;
uniform sampler2D _MainTex;
uniform float _Metallic;
uniform float _Glossiness;
uniform sampler2D _OcclusionMap;
uniform float _OcclusionStrength;
uniform vec4 _EmissionColor;
uniform sampler2D _EmissionMap;
varying vec4 xlv_TEXCOORD0;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
void main ()
{
  vec2 tmpvar_1;
  tmpvar_1.x = _Metallic;
  tmpvar_1.y = _Glossiness;
  float tmpvar_2;
  tmpvar_2 = tmpvar_1.y;
  vec3 tmpvar_3;
  tmpvar_3 = (_Color.xyz * texture2D (_MainTex, xlv_TEXCOORD0.xy).xyz);
  vec3 tmpvar_4;
  vec3 tmpvar_5;
  tmpvar_5 = mix (unity_ColorSpaceDielectricSpec.xyz, tmpvar_3, vec3(_Metallic));
  tmpvar_4 = (tmpvar_3 * (unity_ColorSpaceDielectricSpec.w - (_Metallic * unity_ColorSpaceDielectricSpec.w)));
  vec3 tmpvar_6;
  tmpvar_6 = normalize(xlv_TEXCOORD2_2.xyz);
  float tmpvar_7;
  tmpvar_7 = ((1.0 - _OcclusionStrength) + (texture2D (_OcclusionMap, xlv_TEXCOORD0.xy).y * _OcclusionStrength));
  vec3 tmpvar_8;
  tmpvar_8 = vec3(0.0, 0.0, 0.0);
  vec3 ambient_9;
  vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = tmpvar_6;
  vec3 x_11;
  x_11.x = dot (unity_SHAr, tmpvar_10);
  x_11.y = dot (unity_SHAg, tmpvar_10);
  x_11.z = dot (unity_SHAb, tmpvar_10);
  vec3 tmpvar_12;
  tmpvar_12 = max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD5.xyz + x_11));
  ambient_9 = tmpvar_12;
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    ambient_9 = max (((1.055 * 
      pow (max (tmpvar_12, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
    ) - 0.055), vec3(0.0, 0.0, 0.0));
  };
  tmpvar_8 = (ambient_9 * tmpvar_7);
  vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = (tmpvar_4 * tmpvar_8);
  vec4 tmpvar_14;
  tmpvar_14.xyz = tmpvar_4;
  tmpvar_14.w = tmpvar_7;
  vec4 tmpvar_15;
  tmpvar_15.xyz = tmpvar_5;
  tmpvar_15.w = tmpvar_2;
  vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = ((tmpvar_6 * 0.5) + 0.5);
  vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = (tmpvar_13.xyz + (texture2D (_EmissionMap, xlv_TEXCOORD0.xy).xyz * _EmissionColor.xyz));
  gl_FragData[0] = tmpvar_14;
  gl_FragData[1] = tmpvar_15;
  gl_FragData[2] = tmpvar_16;
  gl_FragData[3] = tmpvar_17;
}


#endif
"
}
SubProgram "d3d9 " {
// Stats: 34 math
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "UNITY_HDR_ON" "_ALPHABLEND_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Matrix 4 [_Object2World] 3
Matrix 7 [_World2Object] 3
Matrix 0 [glstate_matrix_mvp]
Vector 16 [_DetailAlbedoMap_ST]
Vector 15 [_MainTex_ST]
Float 17 [_UVSec]
Vector 10 [_WorldSpaceCameraPos]
Vector 13 [unity_SHBb]
Vector 12 [unity_SHBg]
Vector 11 [unity_SHBr]
Vector 14 [unity_SHC]
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   row_major float4x4 _Object2World;
//   float _UVSec;
//   row_major float4x4 _World2Object;
//   float3 _WorldSpaceCameraPos;
//   row_major float4x4 glstate_matrix_mvp;
//   float4 unity_SHBb;
//   float4 unity_SHBg;
//   float4 unity_SHBr;
//   float4 unity_SHC;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   glstate_matrix_mvp   c0       4
//   _Object2World        c4       3
//   _World2Object        c7       3
//   _WorldSpaceCameraPos c10      1
//   unity_SHBr           c11      1
//   unity_SHBg           c12      1
//   unity_SHBb           c13      1
//   unity_SHC            c14      1
//   _MainTex_ST          c15      1
//   _DetailAlbedoMap_ST  c16      1
//   _UVSec               c17      1
//

    vs_3_0
    def c18, 0, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6
    dcl_texcoord6 o7.xyz
    dp4 o0.x, c0, v0
    dp4 o0.y, c1, v0
    dp4 o0.z, c2, v0
    dp4 o0.w, c3, v0
    mad o1.xy, v2, c15, c15.zwzw
    abs r0.x, c17.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c16.xyxy, c16
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add o2.xyz, r0, -c10
    mov o7.xyz, r0
    mul r0.xyz, c8, v1.y
    mad r0.xyz, c7, v1.x, r0
    mad r0.xyz, c9, v1.z, r0
    nrm r1.xyz, r0
    mul r0.x, r1.y, r1.y
    mad r0.x, r1.x, r1.x, -r0.x
    mul r2, r1.yzzx, r1.xyzz
    mov o5.xyz, r1
    dp4 r1.x, c11, r2
    dp4 r1.y, c12, r2
    dp4 r1.z, c13, r2
    mad o6.xyz, c14, r0.x, r1
    mov o3, c18.x
    mov o4, c18.x
    mov o5.w, c18.x
    mov o6.w, c18.x

// approximately 33 instruction slots used
"
}
SubProgram "d3d11 " {
// Stats: 33 math
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "UNITY_HDR_ON" "_ALPHABLEND_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
ConstBuffer "$Globals" 240
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 656 [unity_SHBr]
Vector 672 [unity_SHBg]
Vector 688 [unity_SHBb]
Vector 704 [unity_SHC]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer cb0[14], immediateIndexed
      dcl_constantbuffer cb1[5], immediateIndexed
      dcl_constantbuffer cb2[45], immediateIndexed
      dcl_constantbuffer cb3[19], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyz
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: mad o0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   4: eq r0.x, cb0[13].z, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[11].xxxy, cb0[11].zzzw
   7: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  13: mov o7.xyz, r0.xyzx
  14: mov o3.xyzw, l(0,0,0,0)
  15: mov o4.xyzw, l(0,0,0,0)
  16: mul r0.x, v1.x, cb3[16].x
  17: mul r0.y, v1.x, cb3[17].x
  18: mul r0.z, v1.x, cb3[18].x
  19: mul r1.x, v1.y, cb3[16].y
  20: mul r1.y, v1.y, cb3[17].y
  21: mul r1.z, v1.y, cb3[18].y
  22: add r0.xyz, r0.xyzx, r1.xyzx
  23: mul r1.x, v1.z, cb3[16].z
  24: mul r1.y, v1.z, cb3[17].z
  25: mul r1.z, v1.z, cb3[18].z
  26: add r0.xyz, r0.xyzx, r1.xyzx
  27: dp3 r0.w, r0.xyzx, r0.xyzx
  28: rsq r0.w, r0.w
  29: mul r0.xyz, r0.wwww, r0.xyzx
  30: mov o5.xyz, r0.xyzx
  31: mov o5.w, l(0)
  32: mul r0.w, r0.y, r0.y
  33: mad r0.w, r0.x, r0.x, -r0.w
  34: mul r1.xyzw, r0.yzzx, r0.xyzz
  35: dp4 r0.x, cb2[41].xyzw, r1.xyzw
  36: dp4 r0.y, cb2[42].xyzw, r1.xyzw
  37: dp4 r0.z, cb2[43].xyzw, r1.xyzw
  38: mad o6.xyz, cb2[44].xyzx, r0.wwww, r0.xyzx
  39: mov o6.w, l(0)
  40: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
// Stats: 29 math, 2 textures, 1 branches
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" }
"#version 120

#ifdef VERTEX
uniform vec3 _WorldSpaceCameraPos;
uniform vec4 unity_SHBr;
uniform vec4 unity_SHBg;
uniform vec4 unity_SHBb;
uniform vec4 unity_SHC;

uniform mat4 _Object2World;
uniform mat4 _World2Object;
uniform vec4 unity_WorldTransformParams;
uniform vec4 unity_ColorSpaceLuminance;
uniform vec4 _MainTex_ST;
uniform vec4 _DetailAlbedoMap_ST;
uniform float _UVSec;
attribute vec4 TANGENT;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
varying vec3 xlv_TEXCOORD6;
void main ()
{
  vec2 tmpvar_1;
  tmpvar_1 = gl_MultiTexCoord0.xy;
  vec2 tmpvar_2;
  tmpvar_2 = gl_MultiTexCoord1.xy;
  vec4 tmpvar_3;
  vec4 tmpvar_4;
  vec4 tmpvar_5;
  vec4 tmpvar_6;
  vec4 tmpvar_7;
  vec4 tmpvar_8;
  tmpvar_8 = (_Object2World * gl_Vertex);
  vec3 tmpvar_9;
  tmpvar_9 = tmpvar_8.xyz;
  tmpvar_3 = (gl_ModelViewProjectionMatrix * gl_Vertex);
  vec4 texcoord_10;
  texcoord_10.xy = ((gl_MultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  vec2 tmpvar_11;
  if ((_UVSec == 0.0)) {
    tmpvar_11 = tmpvar_1;
  } else {
    tmpvar_11 = tmpvar_2;
  };
  texcoord_10.zw = ((tmpvar_11 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  vec3 n_12;
  n_12 = (tmpvar_8.xyz - _WorldSpaceCameraPos);
  vec4 v_13;
  v_13.x = _World2Object[0].x;
  v_13.y = _World2Object[1].x;
  v_13.z = _World2Object[2].x;
  v_13.w = _World2Object[3].x;
  vec4 v_14;
  v_14.x = _World2Object[0].y;
  v_14.y = _World2Object[1].y;
  v_14.z = _World2Object[2].y;
  v_14.w = _World2Object[3].y;
  vec4 v_15;
  v_15.x = _World2Object[0].z;
  v_15.y = _World2Object[1].z;
  v_15.z = _World2Object[2].z;
  v_15.w = _World2Object[3].z;
  vec3 tmpvar_16;
  tmpvar_16 = normalize(((
    (v_13.xyz * gl_Normal.x)
   + 
    (v_14.xyz * gl_Normal.y)
  ) + (v_15.xyz * gl_Normal.z)));
  mat3 tmpvar_17;
  tmpvar_17[0] = _Object2World[0].xyz;
  tmpvar_17[1] = _Object2World[1].xyz;
  tmpvar_17[2] = _Object2World[2].xyz;
  vec4 tmpvar_18;
  tmpvar_18.xyz = normalize((tmpvar_17 * TANGENT.xyz));
  tmpvar_18.w = TANGENT.w;
  vec3 tmpvar_19;
  vec3 tmpvar_20;
  tmpvar_19 = tmpvar_18.xyz;
  tmpvar_20 = (((tmpvar_16.yzx * tmpvar_18.zxy) - (tmpvar_16.zxy * tmpvar_18.yzx)) * (TANGENT.w * unity_WorldTransformParams.w));
  vec3 tmpvar_21;
  vec3 tmpvar_22;
  vec3 tmpvar_23;
  tmpvar_21.x = tmpvar_19.x;
  tmpvar_21.y = tmpvar_20.x;
  tmpvar_21.z = tmpvar_16.x;
  tmpvar_22.x = tmpvar_19.y;
  tmpvar_22.y = tmpvar_20.y;
  tmpvar_22.z = tmpvar_16.y;
  tmpvar_23.x = tmpvar_19.z;
  tmpvar_23.y = tmpvar_20.z;
  tmpvar_23.z = tmpvar_16.z;
  vec3 v_24;
  v_24.x = tmpvar_21.x;
  v_24.y = tmpvar_22.x;
  v_24.z = tmpvar_23.x;
  tmpvar_4.xyz = v_24;
  vec3 v_25;
  v_25.x = tmpvar_21.y;
  v_25.y = tmpvar_22.y;
  v_25.z = tmpvar_23.y;
  tmpvar_5.xyz = v_25;
  vec3 v_26;
  v_26.x = tmpvar_21.z;
  v_26.y = tmpvar_22.z;
  v_26.z = tmpvar_23.z;
  tmpvar_6.xyz = v_26;
  tmpvar_7 = vec4(0.0, 0.0, 0.0, 0.0);
  vec3 ambient_27;
  ambient_27 = vec3(0.0, 0.0, 0.0);
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    ambient_27 = vec3(0.0, 0.0, 0.0);
  };
  vec3 x1_28;
  vec4 tmpvar_29;
  tmpvar_29 = (tmpvar_16.xyzz * tmpvar_16.yzzx);
  x1_28.x = dot (unity_SHBr, tmpvar_29);
  x1_28.y = dot (unity_SHBg, tmpvar_29);
  x1_28.z = dot (unity_SHBb, tmpvar_29);
  ambient_27 = (ambient_27 + (x1_28 + (unity_SHC.xyz * 
    ((tmpvar_16.x * tmpvar_16.x) - (tmpvar_16.y * tmpvar_16.y))
  )));
  tmpvar_7.xyz = ambient_27;
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = texcoord_10;
  xlv_TEXCOORD1 = n_12;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  xlv_TEXCOORD5 = tmpvar_7;
  xlv_TEXCOORD6 = tmpvar_9;
}


#endif
#ifdef FRAGMENT
#extension GL_ARB_shader_texture_lod : enable
uniform vec4 unity_SHAr;
uniform vec4 unity_SHAg;
uniform vec4 unity_SHAb;
uniform vec4 unity_ColorSpaceDielectricSpec;
uniform vec4 unity_ColorSpaceLuminance;
uniform vec4 _Color;
uniform sampler2D _MainTex;
uniform float _Metallic;
uniform float _Glossiness;
uniform sampler2D _OcclusionMap;
uniform float _OcclusionStrength;
varying vec4 xlv_TEXCOORD0;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
void main ()
{
  vec2 tmpvar_1;
  tmpvar_1.x = _Metallic;
  tmpvar_1.y = _Glossiness;
  float tmpvar_2;
  tmpvar_2 = tmpvar_1.y;
  vec3 tmpvar_3;
  tmpvar_3 = (_Color.xyz * texture2D (_MainTex, xlv_TEXCOORD0.xy).xyz);
  vec3 tmpvar_4;
  vec3 tmpvar_5;
  tmpvar_5 = mix (unity_ColorSpaceDielectricSpec.xyz, tmpvar_3, vec3(_Metallic));
  tmpvar_4 = (tmpvar_3 * (unity_ColorSpaceDielectricSpec.w - (_Metallic * unity_ColorSpaceDielectricSpec.w)));
  vec3 tmpvar_6;
  tmpvar_6 = normalize(xlv_TEXCOORD2_2.xyz);
  float tmpvar_7;
  tmpvar_7 = ((1.0 - _OcclusionStrength) + (texture2D (_OcclusionMap, xlv_TEXCOORD0.xy).y * _OcclusionStrength));
  vec3 tmpvar_8;
  tmpvar_8 = vec3(0.0, 0.0, 0.0);
  vec3 ambient_9;
  vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = tmpvar_6;
  vec3 x_11;
  x_11.x = dot (unity_SHAr, tmpvar_10);
  x_11.y = dot (unity_SHAg, tmpvar_10);
  x_11.z = dot (unity_SHAb, tmpvar_10);
  vec3 tmpvar_12;
  tmpvar_12 = max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD5.xyz + x_11));
  ambient_9 = tmpvar_12;
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    ambient_9 = max (((1.055 * 
      pow (max (tmpvar_12, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
    ) - 0.055), vec3(0.0, 0.0, 0.0));
  };
  tmpvar_8 = (ambient_9 * tmpvar_7);
  vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = (tmpvar_4 * tmpvar_8);
  vec4 tmpvar_14;
  tmpvar_14.xyz = tmpvar_4;
  tmpvar_14.w = tmpvar_7;
  vec4 tmpvar_15;
  tmpvar_15.xyz = tmpvar_5;
  tmpvar_15.w = tmpvar_2;
  vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = ((tmpvar_6 * 0.5) + 0.5);
  vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = tmpvar_13.xyz;
  gl_FragData[0] = tmpvar_14;
  gl_FragData[1] = tmpvar_15;
  gl_FragData[2] = tmpvar_16;
  gl_FragData[3] = tmpvar_17;
}


#endif
"
}
SubProgram "d3d9 " {
// Stats: 45 math
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
Matrix 4 [_Object2World] 3
Matrix 7 [_World2Object] 3
Matrix 0 [glstate_matrix_mvp]
Vector 17 [_DetailAlbedoMap_ST]
Vector 16 [_MainTex_ST]
Float 18 [_UVSec]
Vector 10 [_WorldSpaceCameraPos]
Vector 13 [unity_SHBb]
Vector 12 [unity_SHBg]
Vector 11 [unity_SHBr]
Vector 14 [unity_SHC]
Vector 15 [unity_WorldTransformParams]
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   row_major float4x4 _Object2World;
//   float _UVSec;
//   row_major float4x4 _World2Object;
//   float3 _WorldSpaceCameraPos;
//   row_major float4x4 glstate_matrix_mvp;
//   float4 unity_SHBb;
//   float4 unity_SHBg;
//   float4 unity_SHBr;
//   float4 unity_SHC;
//   float4 unity_WorldTransformParams;
//
//
// Registers:
//
//   Name                       Reg   Size
//   -------------------------- ----- ----
//   glstate_matrix_mvp         c0       4
//   _Object2World              c4       3
//   _World2Object              c7       3
//   _WorldSpaceCameraPos       c10      1
//   unity_SHBr                 c11      1
//   unity_SHBg                 c12      1
//   unity_SHBb                 c13      1
//   unity_SHC                  c14      1
//   unity_WorldTransformParams c15      1
//   _MainTex_ST                c16      1
//   _DetailAlbedoMap_ST        c17      1
//   _UVSec                     c18      1
//

    vs_3_0
    def c19, 0, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_tangent v4
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6
    dcl_texcoord6 o7.xyz
    dp4 o0.x, c0, v0
    dp4 o0.y, c1, v0
    dp4 o0.z, c2, v0
    dp4 o0.w, c3, v0
    mad o1.xy, v2, c16, c16.zwzw
    abs r0.x, c18.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c17.xyxy, c17
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add o2.xyz, r0, -c10
    mov o7.xyz, r0
    mul r0.x, c15.w, v4.w
    dp3 r1.x, c4, v4
    dp3 r1.y, c5, v4
    dp3 r1.z, c6, v4
    nrm r2.xyz, r1
    mul r0.yzw, c8.xxyz, v1.y
    mad r0.yzw, c7.xxyz, v1.x, r0
    mad r0.yzw, c9.xxyz, v1.z, r0
    nrm r1.xyz, r0.yzww
    mul r0.yzw, r2.xyzx, r1.xzxy
    mad r0.yzw, r1.xyzx, r2.xzxy, -r0
    mov o3.xyz, r2
    mul o4.xyz, r0.x, r0.yzww
    mul r0.x, r1.y, r1.y
    mad r0.x, r1.x, r1.x, -r0.x
    mul r2, r1.yzzx, r1.xyzz
    mov o5.xyz, r1
    dp4 r1.x, c11, r2
    dp4 r1.y, c12, r2
    dp4 r1.z, c13, r2
    mad o6.xyz, c14, r0.x, r1
    mov o3.w, c19.x
    mov o4.w, c19.x
    mov o5.w, c19.x
    mov o6.w, c19.x

// approximately 44 instruction slots used
"
}
SubProgram "d3d11 " {
// Stats: 43 math
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
ConstBuffer "$Globals" 240
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 656 [unity_SHBr]
Vector 672 [unity_SHBg]
Vector 688 [unity_SHBb]
Vector 704 [unity_SHC]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
Vector 336 [unity_WorldTransformParams]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer cb0[14], immediateIndexed
      dcl_constantbuffer cb1[5], immediateIndexed
      dcl_constantbuffer cb2[45], immediateIndexed
      dcl_constantbuffer cb3[22], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyz
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: mad o0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   4: eq r0.x, cb0[13].z, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[11].xxxy, cb0[11].zzzw
   7: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  13: mov o7.xyz, r0.xyzx
  14: mul r0.xyz, v4.yyyy, cb3[13].xyzx
  15: mad r0.xyz, cb3[12].xyzx, v4.xxxx, r0.xyzx
  16: mad r0.xyz, cb3[14].xyzx, v4.zzzz, r0.xyzx
  17: dp3 r0.w, r0.xyzx, r0.xyzx
  18: rsq r0.w, r0.w
  19: mul r0.xyz, r0.wwww, r0.xyzx
  20: mov o3.xyz, r0.xyzx
  21: mov o3.w, l(0)
  22: mul r1.x, v1.x, cb3[16].x
  23: mul r1.y, v1.x, cb3[17].x
  24: mul r1.z, v1.x, cb3[18].x
  25: mul r2.x, v1.y, cb3[16].y
  26: mul r2.y, v1.y, cb3[17].y
  27: mul r2.z, v1.y, cb3[18].y
  28: add r1.xyz, r1.xyzx, r2.xyzx
  29: mul r2.x, v1.z, cb3[16].z
  30: mul r2.y, v1.z, cb3[17].z
  31: mul r2.z, v1.z, cb3[18].z
  32: add r1.xyz, r1.xyzx, r2.xyzx
  33: dp3 r0.w, r1.xyzx, r1.xyzx
  34: rsq r0.w, r0.w
  35: mul r1.xyz, r0.wwww, r1.xyzx
  36: mul r2.xyz, r0.yzxy, r1.zxyz
  37: mad r0.xyz, r1.yzxy, r0.zxyz, -r2.xyzx
  38: mul r0.w, v4.w, cb3[21].w
  39: mul o4.xyz, r0.wwww, r0.xyzx
  40: mov o4.w, l(0)
  41: mov o5.xyz, r1.xyzx
  42: mov o5.w, l(0)
  43: mul r0.x, r1.y, r1.y
  44: mad r0.x, r1.x, r1.x, -r0.x
  45: mul r1.xyzw, r1.yzzx, r1.xyzz
  46: dp4 r2.x, cb2[41].xyzw, r1.xyzw
  47: dp4 r2.y, cb2[42].xyzw, r1.xyzw
  48: dp4 r2.z, cb2[43].xyzw, r1.xyzw
  49: mad o6.xyz, cb2[44].xyzx, r0.xxxx, r2.xyzx
  50: mov o6.w, l(0)
  51: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
// Stats: 31 math, 3 textures, 1 branches
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "UNITY_HDR_ON" }
"#version 120

#ifdef VERTEX
uniform vec3 _WorldSpaceCameraPos;
uniform vec4 unity_SHBr;
uniform vec4 unity_SHBg;
uniform vec4 unity_SHBb;
uniform vec4 unity_SHC;

uniform mat4 _Object2World;
uniform mat4 _World2Object;
uniform vec4 unity_WorldTransformParams;
uniform vec4 unity_ColorSpaceLuminance;
uniform vec4 _MainTex_ST;
uniform vec4 _DetailAlbedoMap_ST;
uniform float _UVSec;
attribute vec4 TANGENT;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
varying vec3 xlv_TEXCOORD6;
void main ()
{
  vec2 tmpvar_1;
  tmpvar_1 = gl_MultiTexCoord0.xy;
  vec2 tmpvar_2;
  tmpvar_2 = gl_MultiTexCoord1.xy;
  vec4 tmpvar_3;
  vec4 tmpvar_4;
  vec4 tmpvar_5;
  vec4 tmpvar_6;
  vec4 tmpvar_7;
  vec4 tmpvar_8;
  tmpvar_8 = (_Object2World * gl_Vertex);
  vec3 tmpvar_9;
  tmpvar_9 = tmpvar_8.xyz;
  tmpvar_3 = (gl_ModelViewProjectionMatrix * gl_Vertex);
  vec4 texcoord_10;
  texcoord_10.xy = ((gl_MultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  vec2 tmpvar_11;
  if ((_UVSec == 0.0)) {
    tmpvar_11 = tmpvar_1;
  } else {
    tmpvar_11 = tmpvar_2;
  };
  texcoord_10.zw = ((tmpvar_11 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  vec3 n_12;
  n_12 = (tmpvar_8.xyz - _WorldSpaceCameraPos);
  vec4 v_13;
  v_13.x = _World2Object[0].x;
  v_13.y = _World2Object[1].x;
  v_13.z = _World2Object[2].x;
  v_13.w = _World2Object[3].x;
  vec4 v_14;
  v_14.x = _World2Object[0].y;
  v_14.y = _World2Object[1].y;
  v_14.z = _World2Object[2].y;
  v_14.w = _World2Object[3].y;
  vec4 v_15;
  v_15.x = _World2Object[0].z;
  v_15.y = _World2Object[1].z;
  v_15.z = _World2Object[2].z;
  v_15.w = _World2Object[3].z;
  vec3 tmpvar_16;
  tmpvar_16 = normalize(((
    (v_13.xyz * gl_Normal.x)
   + 
    (v_14.xyz * gl_Normal.y)
  ) + (v_15.xyz * gl_Normal.z)));
  mat3 tmpvar_17;
  tmpvar_17[0] = _Object2World[0].xyz;
  tmpvar_17[1] = _Object2World[1].xyz;
  tmpvar_17[2] = _Object2World[2].xyz;
  vec4 tmpvar_18;
  tmpvar_18.xyz = normalize((tmpvar_17 * TANGENT.xyz));
  tmpvar_18.w = TANGENT.w;
  vec3 tmpvar_19;
  vec3 tmpvar_20;
  tmpvar_19 = tmpvar_18.xyz;
  tmpvar_20 = (((tmpvar_16.yzx * tmpvar_18.zxy) - (tmpvar_16.zxy * tmpvar_18.yzx)) * (TANGENT.w * unity_WorldTransformParams.w));
  vec3 tmpvar_21;
  vec3 tmpvar_22;
  vec3 tmpvar_23;
  tmpvar_21.x = tmpvar_19.x;
  tmpvar_21.y = tmpvar_20.x;
  tmpvar_21.z = tmpvar_16.x;
  tmpvar_22.x = tmpvar_19.y;
  tmpvar_22.y = tmpvar_20.y;
  tmpvar_22.z = tmpvar_16.y;
  tmpvar_23.x = tmpvar_19.z;
  tmpvar_23.y = tmpvar_20.z;
  tmpvar_23.z = tmpvar_16.z;
  vec3 v_24;
  v_24.x = tmpvar_21.x;
  v_24.y = tmpvar_22.x;
  v_24.z = tmpvar_23.x;
  tmpvar_4.xyz = v_24;
  vec3 v_25;
  v_25.x = tmpvar_21.y;
  v_25.y = tmpvar_22.y;
  v_25.z = tmpvar_23.y;
  tmpvar_5.xyz = v_25;
  vec3 v_26;
  v_26.x = tmpvar_21.z;
  v_26.y = tmpvar_22.z;
  v_26.z = tmpvar_23.z;
  tmpvar_6.xyz = v_26;
  tmpvar_7 = vec4(0.0, 0.0, 0.0, 0.0);
  vec3 ambient_27;
  ambient_27 = vec3(0.0, 0.0, 0.0);
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    ambient_27 = vec3(0.0, 0.0, 0.0);
  };
  vec3 x1_28;
  vec4 tmpvar_29;
  tmpvar_29 = (tmpvar_16.xyzz * tmpvar_16.yzzx);
  x1_28.x = dot (unity_SHBr, tmpvar_29);
  x1_28.y = dot (unity_SHBg, tmpvar_29);
  x1_28.z = dot (unity_SHBb, tmpvar_29);
  ambient_27 = (ambient_27 + (x1_28 + (unity_SHC.xyz * 
    ((tmpvar_16.x * tmpvar_16.x) - (tmpvar_16.y * tmpvar_16.y))
  )));
  tmpvar_7.xyz = ambient_27;
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = texcoord_10;
  xlv_TEXCOORD1 = n_12;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  xlv_TEXCOORD5 = tmpvar_7;
  xlv_TEXCOORD6 = tmpvar_9;
}


#endif
#ifdef FRAGMENT
#extension GL_ARB_shader_texture_lod : enable
uniform vec4 unity_SHAr;
uniform vec4 unity_SHAg;
uniform vec4 unity_SHAb;
uniform vec4 unity_ColorSpaceDielectricSpec;
uniform vec4 unity_ColorSpaceLuminance;
uniform vec4 _Color;
uniform sampler2D _MainTex;
uniform float _Metallic;
uniform float _Glossiness;
uniform sampler2D _OcclusionMap;
uniform float _OcclusionStrength;
uniform vec4 _EmissionColor;
uniform sampler2D _EmissionMap;
varying vec4 xlv_TEXCOORD0;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
void main ()
{
  vec2 tmpvar_1;
  tmpvar_1.x = _Metallic;
  tmpvar_1.y = _Glossiness;
  float tmpvar_2;
  tmpvar_2 = tmpvar_1.y;
  vec3 tmpvar_3;
  tmpvar_3 = (_Color.xyz * texture2D (_MainTex, xlv_TEXCOORD0.xy).xyz);
  vec3 tmpvar_4;
  vec3 tmpvar_5;
  tmpvar_5 = mix (unity_ColorSpaceDielectricSpec.xyz, tmpvar_3, vec3(_Metallic));
  tmpvar_4 = (tmpvar_3 * (unity_ColorSpaceDielectricSpec.w - (_Metallic * unity_ColorSpaceDielectricSpec.w)));
  vec3 tmpvar_6;
  tmpvar_6 = normalize(xlv_TEXCOORD2_2.xyz);
  float tmpvar_7;
  tmpvar_7 = ((1.0 - _OcclusionStrength) + (texture2D (_OcclusionMap, xlv_TEXCOORD0.xy).y * _OcclusionStrength));
  vec3 tmpvar_8;
  tmpvar_8 = vec3(0.0, 0.0, 0.0);
  vec3 ambient_9;
  vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = tmpvar_6;
  vec3 x_11;
  x_11.x = dot (unity_SHAr, tmpvar_10);
  x_11.y = dot (unity_SHAg, tmpvar_10);
  x_11.z = dot (unity_SHAb, tmpvar_10);
  vec3 tmpvar_12;
  tmpvar_12 = max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD5.xyz + x_11));
  ambient_9 = tmpvar_12;
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    ambient_9 = max (((1.055 * 
      pow (max (tmpvar_12, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
    ) - 0.055), vec3(0.0, 0.0, 0.0));
  };
  tmpvar_8 = (ambient_9 * tmpvar_7);
  vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = (tmpvar_4 * tmpvar_8);
  vec4 tmpvar_14;
  tmpvar_14.xyz = tmpvar_4;
  tmpvar_14.w = tmpvar_7;
  vec4 tmpvar_15;
  tmpvar_15.xyz = tmpvar_5;
  tmpvar_15.w = tmpvar_2;
  vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = ((tmpvar_6 * 0.5) + 0.5);
  vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = (tmpvar_13.xyz + (texture2D (_EmissionMap, xlv_TEXCOORD0.xy).xyz * _EmissionColor.xyz));
  gl_FragData[0] = tmpvar_14;
  gl_FragData[1] = tmpvar_15;
  gl_FragData[2] = tmpvar_16;
  gl_FragData[3] = tmpvar_17;
}


#endif
"
}
SubProgram "d3d9 " {
// Stats: 45 math
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "UNITY_HDR_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
Matrix 4 [_Object2World] 3
Matrix 7 [_World2Object] 3
Matrix 0 [glstate_matrix_mvp]
Vector 17 [_DetailAlbedoMap_ST]
Vector 16 [_MainTex_ST]
Float 18 [_UVSec]
Vector 10 [_WorldSpaceCameraPos]
Vector 13 [unity_SHBb]
Vector 12 [unity_SHBg]
Vector 11 [unity_SHBr]
Vector 14 [unity_SHC]
Vector 15 [unity_WorldTransformParams]
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   row_major float4x4 _Object2World;
//   float _UVSec;
//   row_major float4x4 _World2Object;
//   float3 _WorldSpaceCameraPos;
//   row_major float4x4 glstate_matrix_mvp;
//   float4 unity_SHBb;
//   float4 unity_SHBg;
//   float4 unity_SHBr;
//   float4 unity_SHC;
//   float4 unity_WorldTransformParams;
//
//
// Registers:
//
//   Name                       Reg   Size
//   -------------------------- ----- ----
//   glstate_matrix_mvp         c0       4
//   _Object2World              c4       3
//   _World2Object              c7       3
//   _WorldSpaceCameraPos       c10      1
//   unity_SHBr                 c11      1
//   unity_SHBg                 c12      1
//   unity_SHBb                 c13      1
//   unity_SHC                  c14      1
//   unity_WorldTransformParams c15      1
//   _MainTex_ST                c16      1
//   _DetailAlbedoMap_ST        c17      1
//   _UVSec                     c18      1
//

    vs_3_0
    def c19, 0, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_tangent v4
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6
    dcl_texcoord6 o7.xyz
    dp4 o0.x, c0, v0
    dp4 o0.y, c1, v0
    dp4 o0.z, c2, v0
    dp4 o0.w, c3, v0
    mad o1.xy, v2, c16, c16.zwzw
    abs r0.x, c18.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c17.xyxy, c17
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add o2.xyz, r0, -c10
    mov o7.xyz, r0
    mul r0.x, c15.w, v4.w
    dp3 r1.x, c4, v4
    dp3 r1.y, c5, v4
    dp3 r1.z, c6, v4
    nrm r2.xyz, r1
    mul r0.yzw, c8.xxyz, v1.y
    mad r0.yzw, c7.xxyz, v1.x, r0
    mad r0.yzw, c9.xxyz, v1.z, r0
    nrm r1.xyz, r0.yzww
    mul r0.yzw, r2.xyzx, r1.xzxy
    mad r0.yzw, r1.xyzx, r2.xzxy, -r0
    mov o3.xyz, r2
    mul o4.xyz, r0.x, r0.yzww
    mul r0.x, r1.y, r1.y
    mad r0.x, r1.x, r1.x, -r0.x
    mul r2, r1.yzzx, r1.xyzz
    mov o5.xyz, r1
    dp4 r1.x, c11, r2
    dp4 r1.y, c12, r2
    dp4 r1.z, c13, r2
    mad o6.xyz, c14, r0.x, r1
    mov o3.w, c19.x
    mov o4.w, c19.x
    mov o5.w, c19.x
    mov o6.w, c19.x

// approximately 44 instruction slots used
"
}
SubProgram "d3d11 " {
// Stats: 43 math
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "UNITY_HDR_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
ConstBuffer "$Globals" 240
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 656 [unity_SHBr]
Vector 672 [unity_SHBg]
Vector 688 [unity_SHBb]
Vector 704 [unity_SHC]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
Vector 336 [unity_WorldTransformParams]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer cb0[14], immediateIndexed
      dcl_constantbuffer cb1[5], immediateIndexed
      dcl_constantbuffer cb2[45], immediateIndexed
      dcl_constantbuffer cb3[22], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyz
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: mad o0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   4: eq r0.x, cb0[13].z, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[11].xxxy, cb0[11].zzzw
   7: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  13: mov o7.xyz, r0.xyzx
  14: mul r0.xyz, v4.yyyy, cb3[13].xyzx
  15: mad r0.xyz, cb3[12].xyzx, v4.xxxx, r0.xyzx
  16: mad r0.xyz, cb3[14].xyzx, v4.zzzz, r0.xyzx
  17: dp3 r0.w, r0.xyzx, r0.xyzx
  18: rsq r0.w, r0.w
  19: mul r0.xyz, r0.wwww, r0.xyzx
  20: mov o3.xyz, r0.xyzx
  21: mov o3.w, l(0)
  22: mul r1.x, v1.x, cb3[16].x
  23: mul r1.y, v1.x, cb3[17].x
  24: mul r1.z, v1.x, cb3[18].x
  25: mul r2.x, v1.y, cb3[16].y
  26: mul r2.y, v1.y, cb3[17].y
  27: mul r2.z, v1.y, cb3[18].y
  28: add r1.xyz, r1.xyzx, r2.xyzx
  29: mul r2.x, v1.z, cb3[16].z
  30: mul r2.y, v1.z, cb3[17].z
  31: mul r2.z, v1.z, cb3[18].z
  32: add r1.xyz, r1.xyzx, r2.xyzx
  33: dp3 r0.w, r1.xyzx, r1.xyzx
  34: rsq r0.w, r0.w
  35: mul r1.xyz, r0.wwww, r1.xyzx
  36: mul r2.xyz, r0.yzxy, r1.zxyz
  37: mad r0.xyz, r1.yzxy, r0.zxyz, -r2.xyzx
  38: mul r0.w, v4.w, cb3[21].w
  39: mul o4.xyz, r0.wwww, r0.xyzx
  40: mov o4.w, l(0)
  41: mov o5.xyz, r1.xyzx
  42: mov o5.w, l(0)
  43: mul r0.x, r1.y, r1.y
  44: mad r0.x, r1.x, r1.x, -r0.x
  45: mul r1.xyzw, r1.yzzx, r1.xyzz
  46: dp4 r2.x, cb2[41].xyzw, r1.xyzw
  47: dp4 r2.y, cb2[42].xyzw, r1.xyzw
  48: dp4 r2.z, cb2[43].xyzw, r1.xyzw
  49: mad o6.xyz, cb2[44].xyzx, r0.xxxx, r2.xyzx
  50: mov o6.w, l(0)
  51: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
// Stats: 29 math, 2 textures, 1 branches
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" "_ALPHABLEND_ON" }
"#version 120

#ifdef VERTEX
uniform vec3 _WorldSpaceCameraPos;
uniform vec4 unity_SHBr;
uniform vec4 unity_SHBg;
uniform vec4 unity_SHBb;
uniform vec4 unity_SHC;

uniform mat4 _Object2World;
uniform mat4 _World2Object;
uniform vec4 unity_WorldTransformParams;
uniform vec4 unity_ColorSpaceLuminance;
uniform vec4 _MainTex_ST;
uniform vec4 _DetailAlbedoMap_ST;
uniform float _UVSec;
attribute vec4 TANGENT;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
varying vec3 xlv_TEXCOORD6;
void main ()
{
  vec2 tmpvar_1;
  tmpvar_1 = gl_MultiTexCoord0.xy;
  vec2 tmpvar_2;
  tmpvar_2 = gl_MultiTexCoord1.xy;
  vec4 tmpvar_3;
  vec4 tmpvar_4;
  vec4 tmpvar_5;
  vec4 tmpvar_6;
  vec4 tmpvar_7;
  vec4 tmpvar_8;
  tmpvar_8 = (_Object2World * gl_Vertex);
  vec3 tmpvar_9;
  tmpvar_9 = tmpvar_8.xyz;
  tmpvar_3 = (gl_ModelViewProjectionMatrix * gl_Vertex);
  vec4 texcoord_10;
  texcoord_10.xy = ((gl_MultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  vec2 tmpvar_11;
  if ((_UVSec == 0.0)) {
    tmpvar_11 = tmpvar_1;
  } else {
    tmpvar_11 = tmpvar_2;
  };
  texcoord_10.zw = ((tmpvar_11 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  vec3 n_12;
  n_12 = (tmpvar_8.xyz - _WorldSpaceCameraPos);
  vec4 v_13;
  v_13.x = _World2Object[0].x;
  v_13.y = _World2Object[1].x;
  v_13.z = _World2Object[2].x;
  v_13.w = _World2Object[3].x;
  vec4 v_14;
  v_14.x = _World2Object[0].y;
  v_14.y = _World2Object[1].y;
  v_14.z = _World2Object[2].y;
  v_14.w = _World2Object[3].y;
  vec4 v_15;
  v_15.x = _World2Object[0].z;
  v_15.y = _World2Object[1].z;
  v_15.z = _World2Object[2].z;
  v_15.w = _World2Object[3].z;
  vec3 tmpvar_16;
  tmpvar_16 = normalize(((
    (v_13.xyz * gl_Normal.x)
   + 
    (v_14.xyz * gl_Normal.y)
  ) + (v_15.xyz * gl_Normal.z)));
  mat3 tmpvar_17;
  tmpvar_17[0] = _Object2World[0].xyz;
  tmpvar_17[1] = _Object2World[1].xyz;
  tmpvar_17[2] = _Object2World[2].xyz;
  vec4 tmpvar_18;
  tmpvar_18.xyz = normalize((tmpvar_17 * TANGENT.xyz));
  tmpvar_18.w = TANGENT.w;
  vec3 tmpvar_19;
  vec3 tmpvar_20;
  tmpvar_19 = tmpvar_18.xyz;
  tmpvar_20 = (((tmpvar_16.yzx * tmpvar_18.zxy) - (tmpvar_16.zxy * tmpvar_18.yzx)) * (TANGENT.w * unity_WorldTransformParams.w));
  vec3 tmpvar_21;
  vec3 tmpvar_22;
  vec3 tmpvar_23;
  tmpvar_21.x = tmpvar_19.x;
  tmpvar_21.y = tmpvar_20.x;
  tmpvar_21.z = tmpvar_16.x;
  tmpvar_22.x = tmpvar_19.y;
  tmpvar_22.y = tmpvar_20.y;
  tmpvar_22.z = tmpvar_16.y;
  tmpvar_23.x = tmpvar_19.z;
  tmpvar_23.y = tmpvar_20.z;
  tmpvar_23.z = tmpvar_16.z;
  vec3 v_24;
  v_24.x = tmpvar_21.x;
  v_24.y = tmpvar_22.x;
  v_24.z = tmpvar_23.x;
  tmpvar_4.xyz = v_24;
  vec3 v_25;
  v_25.x = tmpvar_21.y;
  v_25.y = tmpvar_22.y;
  v_25.z = tmpvar_23.y;
  tmpvar_5.xyz = v_25;
  vec3 v_26;
  v_26.x = tmpvar_21.z;
  v_26.y = tmpvar_22.z;
  v_26.z = tmpvar_23.z;
  tmpvar_6.xyz = v_26;
  tmpvar_7 = vec4(0.0, 0.0, 0.0, 0.0);
  vec3 ambient_27;
  ambient_27 = vec3(0.0, 0.0, 0.0);
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    ambient_27 = vec3(0.0, 0.0, 0.0);
  };
  vec3 x1_28;
  vec4 tmpvar_29;
  tmpvar_29 = (tmpvar_16.xyzz * tmpvar_16.yzzx);
  x1_28.x = dot (unity_SHBr, tmpvar_29);
  x1_28.y = dot (unity_SHBg, tmpvar_29);
  x1_28.z = dot (unity_SHBb, tmpvar_29);
  ambient_27 = (ambient_27 + (x1_28 + (unity_SHC.xyz * 
    ((tmpvar_16.x * tmpvar_16.x) - (tmpvar_16.y * tmpvar_16.y))
  )));
  tmpvar_7.xyz = ambient_27;
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = texcoord_10;
  xlv_TEXCOORD1 = n_12;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  xlv_TEXCOORD5 = tmpvar_7;
  xlv_TEXCOORD6 = tmpvar_9;
}


#endif
#ifdef FRAGMENT
#extension GL_ARB_shader_texture_lod : enable
uniform vec4 unity_SHAr;
uniform vec4 unity_SHAg;
uniform vec4 unity_SHAb;
uniform vec4 unity_ColorSpaceDielectricSpec;
uniform vec4 unity_ColorSpaceLuminance;
uniform vec4 _Color;
uniform sampler2D _MainTex;
uniform float _Metallic;
uniform float _Glossiness;
uniform sampler2D _OcclusionMap;
uniform float _OcclusionStrength;
varying vec4 xlv_TEXCOORD0;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
void main ()
{
  vec2 tmpvar_1;
  tmpvar_1.x = _Metallic;
  tmpvar_1.y = _Glossiness;
  float tmpvar_2;
  tmpvar_2 = tmpvar_1.y;
  vec3 tmpvar_3;
  tmpvar_3 = (_Color.xyz * texture2D (_MainTex, xlv_TEXCOORD0.xy).xyz);
  vec3 tmpvar_4;
  vec3 tmpvar_5;
  tmpvar_5 = mix (unity_ColorSpaceDielectricSpec.xyz, tmpvar_3, vec3(_Metallic));
  tmpvar_4 = (tmpvar_3 * (unity_ColorSpaceDielectricSpec.w - (_Metallic * unity_ColorSpaceDielectricSpec.w)));
  vec3 tmpvar_6;
  tmpvar_6 = normalize(xlv_TEXCOORD2_2.xyz);
  float tmpvar_7;
  tmpvar_7 = ((1.0 - _OcclusionStrength) + (texture2D (_OcclusionMap, xlv_TEXCOORD0.xy).y * _OcclusionStrength));
  vec3 tmpvar_8;
  tmpvar_8 = vec3(0.0, 0.0, 0.0);
  vec3 ambient_9;
  vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = tmpvar_6;
  vec3 x_11;
  x_11.x = dot (unity_SHAr, tmpvar_10);
  x_11.y = dot (unity_SHAg, tmpvar_10);
  x_11.z = dot (unity_SHAb, tmpvar_10);
  vec3 tmpvar_12;
  tmpvar_12 = max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD5.xyz + x_11));
  ambient_9 = tmpvar_12;
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    ambient_9 = max (((1.055 * 
      pow (max (tmpvar_12, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
    ) - 0.055), vec3(0.0, 0.0, 0.0));
  };
  tmpvar_8 = (ambient_9 * tmpvar_7);
  vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = (tmpvar_4 * tmpvar_8);
  vec4 tmpvar_14;
  tmpvar_14.xyz = tmpvar_4;
  tmpvar_14.w = tmpvar_7;
  vec4 tmpvar_15;
  tmpvar_15.xyz = tmpvar_5;
  tmpvar_15.w = tmpvar_2;
  vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = ((tmpvar_6 * 0.5) + 0.5);
  vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = tmpvar_13.xyz;
  gl_FragData[0] = tmpvar_14;
  gl_FragData[1] = tmpvar_15;
  gl_FragData[2] = tmpvar_16;
  gl_FragData[3] = tmpvar_17;
}


#endif
"
}
SubProgram "d3d9 " {
// Stats: 45 math
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" "_ALPHABLEND_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
Matrix 4 [_Object2World] 3
Matrix 7 [_World2Object] 3
Matrix 0 [glstate_matrix_mvp]
Vector 17 [_DetailAlbedoMap_ST]
Vector 16 [_MainTex_ST]
Float 18 [_UVSec]
Vector 10 [_WorldSpaceCameraPos]
Vector 13 [unity_SHBb]
Vector 12 [unity_SHBg]
Vector 11 [unity_SHBr]
Vector 14 [unity_SHC]
Vector 15 [unity_WorldTransformParams]
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   row_major float4x4 _Object2World;
//   float _UVSec;
//   row_major float4x4 _World2Object;
//   float3 _WorldSpaceCameraPos;
//   row_major float4x4 glstate_matrix_mvp;
//   float4 unity_SHBb;
//   float4 unity_SHBg;
//   float4 unity_SHBr;
//   float4 unity_SHC;
//   float4 unity_WorldTransformParams;
//
//
// Registers:
//
//   Name                       Reg   Size
//   -------------------------- ----- ----
//   glstate_matrix_mvp         c0       4
//   _Object2World              c4       3
//   _World2Object              c7       3
//   _WorldSpaceCameraPos       c10      1
//   unity_SHBr                 c11      1
//   unity_SHBg                 c12      1
//   unity_SHBb                 c13      1
//   unity_SHC                  c14      1
//   unity_WorldTransformParams c15      1
//   _MainTex_ST                c16      1
//   _DetailAlbedoMap_ST        c17      1
//   _UVSec                     c18      1
//

    vs_3_0
    def c19, 0, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_tangent v4
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6
    dcl_texcoord6 o7.xyz
    dp4 o0.x, c0, v0
    dp4 o0.y, c1, v0
    dp4 o0.z, c2, v0
    dp4 o0.w, c3, v0
    mad o1.xy, v2, c16, c16.zwzw
    abs r0.x, c18.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c17.xyxy, c17
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add o2.xyz, r0, -c10
    mov o7.xyz, r0
    mul r0.x, c15.w, v4.w
    dp3 r1.x, c4, v4
    dp3 r1.y, c5, v4
    dp3 r1.z, c6, v4
    nrm r2.xyz, r1
    mul r0.yzw, c8.xxyz, v1.y
    mad r0.yzw, c7.xxyz, v1.x, r0
    mad r0.yzw, c9.xxyz, v1.z, r0
    nrm r1.xyz, r0.yzww
    mul r0.yzw, r2.xyzx, r1.xzxy
    mad r0.yzw, r1.xyzx, r2.xzxy, -r0
    mov o3.xyz, r2
    mul o4.xyz, r0.x, r0.yzww
    mul r0.x, r1.y, r1.y
    mad r0.x, r1.x, r1.x, -r0.x
    mul r2, r1.yzzx, r1.xyzz
    mov o5.xyz, r1
    dp4 r1.x, c11, r2
    dp4 r1.y, c12, r2
    dp4 r1.z, c13, r2
    mad o6.xyz, c14, r0.x, r1
    mov o3.w, c19.x
    mov o4.w, c19.x
    mov o5.w, c19.x
    mov o6.w, c19.x

// approximately 44 instruction slots used
"
}
SubProgram "d3d11 " {
// Stats: 43 math
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" "_ALPHABLEND_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
ConstBuffer "$Globals" 240
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 656 [unity_SHBr]
Vector 672 [unity_SHBg]
Vector 688 [unity_SHBb]
Vector 704 [unity_SHC]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
Vector 336 [unity_WorldTransformParams]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer cb0[14], immediateIndexed
      dcl_constantbuffer cb1[5], immediateIndexed
      dcl_constantbuffer cb2[45], immediateIndexed
      dcl_constantbuffer cb3[22], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyz
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: mad o0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   4: eq r0.x, cb0[13].z, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[11].xxxy, cb0[11].zzzw
   7: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  13: mov o7.xyz, r0.xyzx
  14: mul r0.xyz, v4.yyyy, cb3[13].xyzx
  15: mad r0.xyz, cb3[12].xyzx, v4.xxxx, r0.xyzx
  16: mad r0.xyz, cb3[14].xyzx, v4.zzzz, r0.xyzx
  17: dp3 r0.w, r0.xyzx, r0.xyzx
  18: rsq r0.w, r0.w
  19: mul r0.xyz, r0.wwww, r0.xyzx
  20: mov o3.xyz, r0.xyzx
  21: mov o3.w, l(0)
  22: mul r1.x, v1.x, cb3[16].x
  23: mul r1.y, v1.x, cb3[17].x
  24: mul r1.z, v1.x, cb3[18].x
  25: mul r2.x, v1.y, cb3[16].y
  26: mul r2.y, v1.y, cb3[17].y
  27: mul r2.z, v1.y, cb3[18].y
  28: add r1.xyz, r1.xyzx, r2.xyzx
  29: mul r2.x, v1.z, cb3[16].z
  30: mul r2.y, v1.z, cb3[17].z
  31: mul r2.z, v1.z, cb3[18].z
  32: add r1.xyz, r1.xyzx, r2.xyzx
  33: dp3 r0.w, r1.xyzx, r1.xyzx
  34: rsq r0.w, r0.w
  35: mul r1.xyz, r0.wwww, r1.xyzx
  36: mul r2.xyz, r0.yzxy, r1.zxyz
  37: mad r0.xyz, r1.yzxy, r0.zxyz, -r2.xyzx
  38: mul r0.w, v4.w, cb3[21].w
  39: mul o4.xyz, r0.wwww, r0.xyzx
  40: mov o4.w, l(0)
  41: mov o5.xyz, r1.xyzx
  42: mov o5.w, l(0)
  43: mul r0.x, r1.y, r1.y
  44: mad r0.x, r1.x, r1.x, -r0.x
  45: mul r1.xyzw, r1.yzzx, r1.xyzz
  46: dp4 r2.x, cb2[41].xyzw, r1.xyzw
  47: dp4 r2.y, cb2[42].xyzw, r1.xyzw
  48: dp4 r2.z, cb2[43].xyzw, r1.xyzw
  49: mad o6.xyz, cb2[44].xyzx, r0.xxxx, r2.xyzx
  50: mov o6.w, l(0)
  51: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
// Stats: 31 math, 3 textures, 1 branches
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "UNITY_HDR_ON" "_ALPHABLEND_ON" }
"#version 120

#ifdef VERTEX
uniform vec3 _WorldSpaceCameraPos;
uniform vec4 unity_SHBr;
uniform vec4 unity_SHBg;
uniform vec4 unity_SHBb;
uniform vec4 unity_SHC;

uniform mat4 _Object2World;
uniform mat4 _World2Object;
uniform vec4 unity_WorldTransformParams;
uniform vec4 unity_ColorSpaceLuminance;
uniform vec4 _MainTex_ST;
uniform vec4 _DetailAlbedoMap_ST;
uniform float _UVSec;
attribute vec4 TANGENT;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
varying vec3 xlv_TEXCOORD6;
void main ()
{
  vec2 tmpvar_1;
  tmpvar_1 = gl_MultiTexCoord0.xy;
  vec2 tmpvar_2;
  tmpvar_2 = gl_MultiTexCoord1.xy;
  vec4 tmpvar_3;
  vec4 tmpvar_4;
  vec4 tmpvar_5;
  vec4 tmpvar_6;
  vec4 tmpvar_7;
  vec4 tmpvar_8;
  tmpvar_8 = (_Object2World * gl_Vertex);
  vec3 tmpvar_9;
  tmpvar_9 = tmpvar_8.xyz;
  tmpvar_3 = (gl_ModelViewProjectionMatrix * gl_Vertex);
  vec4 texcoord_10;
  texcoord_10.xy = ((gl_MultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  vec2 tmpvar_11;
  if ((_UVSec == 0.0)) {
    tmpvar_11 = tmpvar_1;
  } else {
    tmpvar_11 = tmpvar_2;
  };
  texcoord_10.zw = ((tmpvar_11 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  vec3 n_12;
  n_12 = (tmpvar_8.xyz - _WorldSpaceCameraPos);
  vec4 v_13;
  v_13.x = _World2Object[0].x;
  v_13.y = _World2Object[1].x;
  v_13.z = _World2Object[2].x;
  v_13.w = _World2Object[3].x;
  vec4 v_14;
  v_14.x = _World2Object[0].y;
  v_14.y = _World2Object[1].y;
  v_14.z = _World2Object[2].y;
  v_14.w = _World2Object[3].y;
  vec4 v_15;
  v_15.x = _World2Object[0].z;
  v_15.y = _World2Object[1].z;
  v_15.z = _World2Object[2].z;
  v_15.w = _World2Object[3].z;
  vec3 tmpvar_16;
  tmpvar_16 = normalize(((
    (v_13.xyz * gl_Normal.x)
   + 
    (v_14.xyz * gl_Normal.y)
  ) + (v_15.xyz * gl_Normal.z)));
  mat3 tmpvar_17;
  tmpvar_17[0] = _Object2World[0].xyz;
  tmpvar_17[1] = _Object2World[1].xyz;
  tmpvar_17[2] = _Object2World[2].xyz;
  vec4 tmpvar_18;
  tmpvar_18.xyz = normalize((tmpvar_17 * TANGENT.xyz));
  tmpvar_18.w = TANGENT.w;
  vec3 tmpvar_19;
  vec3 tmpvar_20;
  tmpvar_19 = tmpvar_18.xyz;
  tmpvar_20 = (((tmpvar_16.yzx * tmpvar_18.zxy) - (tmpvar_16.zxy * tmpvar_18.yzx)) * (TANGENT.w * unity_WorldTransformParams.w));
  vec3 tmpvar_21;
  vec3 tmpvar_22;
  vec3 tmpvar_23;
  tmpvar_21.x = tmpvar_19.x;
  tmpvar_21.y = tmpvar_20.x;
  tmpvar_21.z = tmpvar_16.x;
  tmpvar_22.x = tmpvar_19.y;
  tmpvar_22.y = tmpvar_20.y;
  tmpvar_22.z = tmpvar_16.y;
  tmpvar_23.x = tmpvar_19.z;
  tmpvar_23.y = tmpvar_20.z;
  tmpvar_23.z = tmpvar_16.z;
  vec3 v_24;
  v_24.x = tmpvar_21.x;
  v_24.y = tmpvar_22.x;
  v_24.z = tmpvar_23.x;
  tmpvar_4.xyz = v_24;
  vec3 v_25;
  v_25.x = tmpvar_21.y;
  v_25.y = tmpvar_22.y;
  v_25.z = tmpvar_23.y;
  tmpvar_5.xyz = v_25;
  vec3 v_26;
  v_26.x = tmpvar_21.z;
  v_26.y = tmpvar_22.z;
  v_26.z = tmpvar_23.z;
  tmpvar_6.xyz = v_26;
  tmpvar_7 = vec4(0.0, 0.0, 0.0, 0.0);
  vec3 ambient_27;
  ambient_27 = vec3(0.0, 0.0, 0.0);
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    ambient_27 = vec3(0.0, 0.0, 0.0);
  };
  vec3 x1_28;
  vec4 tmpvar_29;
  tmpvar_29 = (tmpvar_16.xyzz * tmpvar_16.yzzx);
  x1_28.x = dot (unity_SHBr, tmpvar_29);
  x1_28.y = dot (unity_SHBg, tmpvar_29);
  x1_28.z = dot (unity_SHBb, tmpvar_29);
  ambient_27 = (ambient_27 + (x1_28 + (unity_SHC.xyz * 
    ((tmpvar_16.x * tmpvar_16.x) - (tmpvar_16.y * tmpvar_16.y))
  )));
  tmpvar_7.xyz = ambient_27;
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = texcoord_10;
  xlv_TEXCOORD1 = n_12;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  xlv_TEXCOORD5 = tmpvar_7;
  xlv_TEXCOORD6 = tmpvar_9;
}


#endif
#ifdef FRAGMENT
#extension GL_ARB_shader_texture_lod : enable
uniform vec4 unity_SHAr;
uniform vec4 unity_SHAg;
uniform vec4 unity_SHAb;
uniform vec4 unity_ColorSpaceDielectricSpec;
uniform vec4 unity_ColorSpaceLuminance;
uniform vec4 _Color;
uniform sampler2D _MainTex;
uniform float _Metallic;
uniform float _Glossiness;
uniform sampler2D _OcclusionMap;
uniform float _OcclusionStrength;
uniform vec4 _EmissionColor;
uniform sampler2D _EmissionMap;
varying vec4 xlv_TEXCOORD0;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
void main ()
{
  vec2 tmpvar_1;
  tmpvar_1.x = _Metallic;
  tmpvar_1.y = _Glossiness;
  float tmpvar_2;
  tmpvar_2 = tmpvar_1.y;
  vec3 tmpvar_3;
  tmpvar_3 = (_Color.xyz * texture2D (_MainTex, xlv_TEXCOORD0.xy).xyz);
  vec3 tmpvar_4;
  vec3 tmpvar_5;
  tmpvar_5 = mix (unity_ColorSpaceDielectricSpec.xyz, tmpvar_3, vec3(_Metallic));
  tmpvar_4 = (tmpvar_3 * (unity_ColorSpaceDielectricSpec.w - (_Metallic * unity_ColorSpaceDielectricSpec.w)));
  vec3 tmpvar_6;
  tmpvar_6 = normalize(xlv_TEXCOORD2_2.xyz);
  float tmpvar_7;
  tmpvar_7 = ((1.0 - _OcclusionStrength) + (texture2D (_OcclusionMap, xlv_TEXCOORD0.xy).y * _OcclusionStrength));
  vec3 tmpvar_8;
  tmpvar_8 = vec3(0.0, 0.0, 0.0);
  vec3 ambient_9;
  vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = tmpvar_6;
  vec3 x_11;
  x_11.x = dot (unity_SHAr, tmpvar_10);
  x_11.y = dot (unity_SHAg, tmpvar_10);
  x_11.z = dot (unity_SHAb, tmpvar_10);
  vec3 tmpvar_12;
  tmpvar_12 = max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD5.xyz + x_11));
  ambient_9 = tmpvar_12;
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    ambient_9 = max (((1.055 * 
      pow (max (tmpvar_12, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
    ) - 0.055), vec3(0.0, 0.0, 0.0));
  };
  tmpvar_8 = (ambient_9 * tmpvar_7);
  vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = (tmpvar_4 * tmpvar_8);
  vec4 tmpvar_14;
  tmpvar_14.xyz = tmpvar_4;
  tmpvar_14.w = tmpvar_7;
  vec4 tmpvar_15;
  tmpvar_15.xyz = tmpvar_5;
  tmpvar_15.w = tmpvar_2;
  vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = ((tmpvar_6 * 0.5) + 0.5);
  vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = (tmpvar_13.xyz + (texture2D (_EmissionMap, xlv_TEXCOORD0.xy).xyz * _EmissionColor.xyz));
  gl_FragData[0] = tmpvar_14;
  gl_FragData[1] = tmpvar_15;
  gl_FragData[2] = tmpvar_16;
  gl_FragData[3] = tmpvar_17;
}


#endif
"
}
SubProgram "d3d9 " {
// Stats: 45 math
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "UNITY_HDR_ON" "_ALPHABLEND_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
Matrix 4 [_Object2World] 3
Matrix 7 [_World2Object] 3
Matrix 0 [glstate_matrix_mvp]
Vector 17 [_DetailAlbedoMap_ST]
Vector 16 [_MainTex_ST]
Float 18 [_UVSec]
Vector 10 [_WorldSpaceCameraPos]
Vector 13 [unity_SHBb]
Vector 12 [unity_SHBg]
Vector 11 [unity_SHBr]
Vector 14 [unity_SHC]
Vector 15 [unity_WorldTransformParams]
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   row_major float4x4 _Object2World;
//   float _UVSec;
//   row_major float4x4 _World2Object;
//   float3 _WorldSpaceCameraPos;
//   row_major float4x4 glstate_matrix_mvp;
//   float4 unity_SHBb;
//   float4 unity_SHBg;
//   float4 unity_SHBr;
//   float4 unity_SHC;
//   float4 unity_WorldTransformParams;
//
//
// Registers:
//
//   Name                       Reg   Size
//   -------------------------- ----- ----
//   glstate_matrix_mvp         c0       4
//   _Object2World              c4       3
//   _World2Object              c7       3
//   _WorldSpaceCameraPos       c10      1
//   unity_SHBr                 c11      1
//   unity_SHBg                 c12      1
//   unity_SHBb                 c13      1
//   unity_SHC                  c14      1
//   unity_WorldTransformParams c15      1
//   _MainTex_ST                c16      1
//   _DetailAlbedoMap_ST        c17      1
//   _UVSec                     c18      1
//

    vs_3_0
    def c19, 0, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_tangent v4
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6
    dcl_texcoord6 o7.xyz
    dp4 o0.x, c0, v0
    dp4 o0.y, c1, v0
    dp4 o0.z, c2, v0
    dp4 o0.w, c3, v0
    mad o1.xy, v2, c16, c16.zwzw
    abs r0.x, c18.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c17.xyxy, c17
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add o2.xyz, r0, -c10
    mov o7.xyz, r0
    mul r0.x, c15.w, v4.w
    dp3 r1.x, c4, v4
    dp3 r1.y, c5, v4
    dp3 r1.z, c6, v4
    nrm r2.xyz, r1
    mul r0.yzw, c8.xxyz, v1.y
    mad r0.yzw, c7.xxyz, v1.x, r0
    mad r0.yzw, c9.xxyz, v1.z, r0
    nrm r1.xyz, r0.yzww
    mul r0.yzw, r2.xyzx, r1.xzxy
    mad r0.yzw, r1.xyzx, r2.xzxy, -r0
    mov o3.xyz, r2
    mul o4.xyz, r0.x, r0.yzww
    mul r0.x, r1.y, r1.y
    mad r0.x, r1.x, r1.x, -r0.x
    mul r2, r1.yzzx, r1.xyzz
    mov o5.xyz, r1
    dp4 r1.x, c11, r2
    dp4 r1.y, c12, r2
    dp4 r1.z, c13, r2
    mad o6.xyz, c14, r0.x, r1
    mov o3.w, c19.x
    mov o4.w, c19.x
    mov o5.w, c19.x
    mov o6.w, c19.x

// approximately 44 instruction slots used
"
}
SubProgram "d3d11 " {
// Stats: 43 math
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "UNITY_HDR_ON" "_ALPHABLEND_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
ConstBuffer "$Globals" 240
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 656 [unity_SHBr]
Vector 672 [unity_SHBg]
Vector 688 [unity_SHBb]
Vector 704 [unity_SHC]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
Vector 336 [unity_WorldTransformParams]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer cb0[14], immediateIndexed
      dcl_constantbuffer cb1[5], immediateIndexed
      dcl_constantbuffer cb2[45], immediateIndexed
      dcl_constantbuffer cb3[22], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyz
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: mad o0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   4: eq r0.x, cb0[13].z, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[11].xxxy, cb0[11].zzzw
   7: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  13: mov o7.xyz, r0.xyzx
  14: mul r0.xyz, v4.yyyy, cb3[13].xyzx
  15: mad r0.xyz, cb3[12].xyzx, v4.xxxx, r0.xyzx
  16: mad r0.xyz, cb3[14].xyzx, v4.zzzz, r0.xyzx
  17: dp3 r0.w, r0.xyzx, r0.xyzx
  18: rsq r0.w, r0.w
  19: mul r0.xyz, r0.wwww, r0.xyzx
  20: mov o3.xyz, r0.xyzx
  21: mov o3.w, l(0)
  22: mul r1.x, v1.x, cb3[16].x
  23: mul r1.y, v1.x, cb3[17].x
  24: mul r1.z, v1.x, cb3[18].x
  25: mul r2.x, v1.y, cb3[16].y
  26: mul r2.y, v1.y, cb3[17].y
  27: mul r2.z, v1.y, cb3[18].y
  28: add r1.xyz, r1.xyzx, r2.xyzx
  29: mul r2.x, v1.z, cb3[16].z
  30: mul r2.y, v1.z, cb3[17].z
  31: mul r2.z, v1.z, cb3[18].z
  32: add r1.xyz, r1.xyzx, r2.xyzx
  33: dp3 r0.w, r1.xyzx, r1.xyzx
  34: rsq r0.w, r0.w
  35: mul r1.xyz, r0.wwww, r1.xyzx
  36: mul r2.xyz, r0.yzxy, r1.zxyz
  37: mad r0.xyz, r1.yzxy, r0.zxyz, -r2.xyzx
  38: mul r0.w, v4.w, cb3[21].w
  39: mul o4.xyz, r0.wwww, r0.xyzx
  40: mov o4.w, l(0)
  41: mov o5.xyz, r1.xyzx
  42: mov o5.w, l(0)
  43: mul r0.x, r1.y, r1.y
  44: mad r0.x, r1.x, r1.x, -r0.x
  45: mul r1.xyzw, r1.yzzx, r1.xyzz
  46: dp4 r2.x, cb2[41].xyzw, r1.xyzw
  47: dp4 r2.y, cb2[42].xyzw, r1.xyzw
  48: dp4 r2.z, cb2[43].xyzw, r1.xyzw
  49: mad o6.xyz, cb2[44].xyzx, r0.xxxx, r2.xyzx
  50: mov o6.w, l(0)
  51: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
// Stats: 29 math, 2 textures, 1 branches
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_SEPARATE" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" }
"#version 120

#ifdef VERTEX
uniform vec3 _WorldSpaceCameraPos;
uniform vec4 unity_SHBr;
uniform vec4 unity_SHBg;
uniform vec4 unity_SHBb;
uniform vec4 unity_SHC;

uniform mat4 _Object2World;
uniform mat4 _World2Object;
uniform vec4 unity_WorldTransformParams;
uniform vec4 unity_ColorSpaceLuminance;
uniform vec4 _MainTex_ST;
uniform vec4 _DetailAlbedoMap_ST;
uniform float _UVSec;
attribute vec4 TANGENT;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
varying vec3 xlv_TEXCOORD6;
void main ()
{
  vec2 tmpvar_1;
  tmpvar_1 = gl_MultiTexCoord0.xy;
  vec2 tmpvar_2;
  tmpvar_2 = gl_MultiTexCoord1.xy;
  vec4 tmpvar_3;
  vec4 tmpvar_4;
  vec4 tmpvar_5;
  vec4 tmpvar_6;
  vec4 tmpvar_7;
  vec4 tmpvar_8;
  tmpvar_8 = (_Object2World * gl_Vertex);
  vec3 tmpvar_9;
  tmpvar_9 = tmpvar_8.xyz;
  tmpvar_3 = (gl_ModelViewProjectionMatrix * gl_Vertex);
  vec4 texcoord_10;
  texcoord_10.xy = ((gl_MultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  vec2 tmpvar_11;
  if ((_UVSec == 0.0)) {
    tmpvar_11 = tmpvar_1;
  } else {
    tmpvar_11 = tmpvar_2;
  };
  texcoord_10.zw = ((tmpvar_11 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  vec3 n_12;
  n_12 = (tmpvar_8.xyz - _WorldSpaceCameraPos);
  vec4 v_13;
  v_13.x = _World2Object[0].x;
  v_13.y = _World2Object[1].x;
  v_13.z = _World2Object[2].x;
  v_13.w = _World2Object[3].x;
  vec4 v_14;
  v_14.x = _World2Object[0].y;
  v_14.y = _World2Object[1].y;
  v_14.z = _World2Object[2].y;
  v_14.w = _World2Object[3].y;
  vec4 v_15;
  v_15.x = _World2Object[0].z;
  v_15.y = _World2Object[1].z;
  v_15.z = _World2Object[2].z;
  v_15.w = _World2Object[3].z;
  vec3 tmpvar_16;
  tmpvar_16 = normalize(((
    (v_13.xyz * gl_Normal.x)
   + 
    (v_14.xyz * gl_Normal.y)
  ) + (v_15.xyz * gl_Normal.z)));
  mat3 tmpvar_17;
  tmpvar_17[0] = _Object2World[0].xyz;
  tmpvar_17[1] = _Object2World[1].xyz;
  tmpvar_17[2] = _Object2World[2].xyz;
  vec4 tmpvar_18;
  tmpvar_18.xyz = normalize((tmpvar_17 * TANGENT.xyz));
  tmpvar_18.w = TANGENT.w;
  vec3 tmpvar_19;
  vec3 tmpvar_20;
  tmpvar_19 = tmpvar_18.xyz;
  tmpvar_20 = (((tmpvar_16.yzx * tmpvar_18.zxy) - (tmpvar_16.zxy * tmpvar_18.yzx)) * (TANGENT.w * unity_WorldTransformParams.w));
  vec3 tmpvar_21;
  vec3 tmpvar_22;
  vec3 tmpvar_23;
  tmpvar_21.x = tmpvar_19.x;
  tmpvar_21.y = tmpvar_20.x;
  tmpvar_21.z = tmpvar_16.x;
  tmpvar_22.x = tmpvar_19.y;
  tmpvar_22.y = tmpvar_20.y;
  tmpvar_22.z = tmpvar_16.y;
  tmpvar_23.x = tmpvar_19.z;
  tmpvar_23.y = tmpvar_20.z;
  tmpvar_23.z = tmpvar_16.z;
  vec3 v_24;
  v_24.x = tmpvar_21.x;
  v_24.y = tmpvar_22.x;
  v_24.z = tmpvar_23.x;
  tmpvar_4.xyz = v_24;
  vec3 v_25;
  v_25.x = tmpvar_21.y;
  v_25.y = tmpvar_22.y;
  v_25.z = tmpvar_23.y;
  tmpvar_5.xyz = v_25;
  vec3 v_26;
  v_26.x = tmpvar_21.z;
  v_26.y = tmpvar_22.z;
  v_26.z = tmpvar_23.z;
  tmpvar_6.xyz = v_26;
  tmpvar_7 = vec4(0.0, 0.0, 0.0, 0.0);
  vec3 ambient_27;
  ambient_27 = vec3(0.0, 0.0, 0.0);
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    ambient_27 = vec3(0.0, 0.0, 0.0);
  };
  vec3 x1_28;
  vec4 tmpvar_29;
  tmpvar_29 = (tmpvar_16.xyzz * tmpvar_16.yzzx);
  x1_28.x = dot (unity_SHBr, tmpvar_29);
  x1_28.y = dot (unity_SHBg, tmpvar_29);
  x1_28.z = dot (unity_SHBb, tmpvar_29);
  ambient_27 = (ambient_27 + (x1_28 + (unity_SHC.xyz * 
    ((tmpvar_16.x * tmpvar_16.x) - (tmpvar_16.y * tmpvar_16.y))
  )));
  tmpvar_7.xyz = ambient_27;
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = texcoord_10;
  xlv_TEXCOORD1 = n_12;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  xlv_TEXCOORD5 = tmpvar_7;
  xlv_TEXCOORD6 = tmpvar_9;
}


#endif
#ifdef FRAGMENT
#extension GL_ARB_shader_texture_lod : enable
uniform vec4 unity_SHAr;
uniform vec4 unity_SHAg;
uniform vec4 unity_SHAb;
uniform vec4 unity_ColorSpaceDielectricSpec;
uniform vec4 unity_ColorSpaceLuminance;
uniform vec4 _Color;
uniform sampler2D _MainTex;
uniform float _Metallic;
uniform float _Glossiness;
uniform sampler2D _OcclusionMap;
uniform float _OcclusionStrength;
varying vec4 xlv_TEXCOORD0;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
void main ()
{
  vec2 tmpvar_1;
  tmpvar_1.x = _Metallic;
  tmpvar_1.y = _Glossiness;
  float tmpvar_2;
  tmpvar_2 = tmpvar_1.y;
  vec3 tmpvar_3;
  tmpvar_3 = (_Color.xyz * texture2D (_MainTex, xlv_TEXCOORD0.xy).xyz);
  vec3 tmpvar_4;
  vec3 tmpvar_5;
  tmpvar_5 = mix (unity_ColorSpaceDielectricSpec.xyz, tmpvar_3, vec3(_Metallic));
  tmpvar_4 = (tmpvar_3 * (unity_ColorSpaceDielectricSpec.w - (_Metallic * unity_ColorSpaceDielectricSpec.w)));
  vec3 tmpvar_6;
  tmpvar_6 = normalize(xlv_TEXCOORD2_2.xyz);
  float tmpvar_7;
  tmpvar_7 = ((1.0 - _OcclusionStrength) + (texture2D (_OcclusionMap, xlv_TEXCOORD0.xy).y * _OcclusionStrength));
  vec3 tmpvar_8;
  tmpvar_8 = vec3(0.0, 0.0, 0.0);
  vec3 ambient_9;
  vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = tmpvar_6;
  vec3 x_11;
  x_11.x = dot (unity_SHAr, tmpvar_10);
  x_11.y = dot (unity_SHAg, tmpvar_10);
  x_11.z = dot (unity_SHAb, tmpvar_10);
  vec3 tmpvar_12;
  tmpvar_12 = max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD5.xyz + x_11));
  ambient_9 = tmpvar_12;
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    ambient_9 = max (((1.055 * 
      pow (max (tmpvar_12, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
    ) - 0.055), vec3(0.0, 0.0, 0.0));
  };
  tmpvar_8 = (ambient_9 * tmpvar_7);
  vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = (tmpvar_4 * tmpvar_8);
  vec4 tmpvar_14;
  tmpvar_14.xyz = tmpvar_4;
  tmpvar_14.w = tmpvar_7;
  vec4 tmpvar_15;
  tmpvar_15.xyz = tmpvar_5;
  tmpvar_15.w = tmpvar_2;
  vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = ((tmpvar_6 * 0.5) + 0.5);
  vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = tmpvar_13.xyz;
  gl_FragData[0] = tmpvar_14;
  gl_FragData[1] = tmpvar_15;
  gl_FragData[2] = tmpvar_16;
  gl_FragData[3] = tmpvar_17;
}


#endif
"
}
SubProgram "d3d9 " {
// Stats: 45 math
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_SEPARATE" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
Matrix 4 [_Object2World] 3
Matrix 7 [_World2Object] 3
Matrix 0 [glstate_matrix_mvp]
Vector 17 [_DetailAlbedoMap_ST]
Vector 16 [_MainTex_ST]
Float 18 [_UVSec]
Vector 10 [_WorldSpaceCameraPos]
Vector 13 [unity_SHBb]
Vector 12 [unity_SHBg]
Vector 11 [unity_SHBr]
Vector 14 [unity_SHC]
Vector 15 [unity_WorldTransformParams]
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   row_major float4x4 _Object2World;
//   float _UVSec;
//   row_major float4x4 _World2Object;
//   float3 _WorldSpaceCameraPos;
//   row_major float4x4 glstate_matrix_mvp;
//   float4 unity_SHBb;
//   float4 unity_SHBg;
//   float4 unity_SHBr;
//   float4 unity_SHC;
//   float4 unity_WorldTransformParams;
//
//
// Registers:
//
//   Name                       Reg   Size
//   -------------------------- ----- ----
//   glstate_matrix_mvp         c0       4
//   _Object2World              c4       3
//   _World2Object              c7       3
//   _WorldSpaceCameraPos       c10      1
//   unity_SHBr                 c11      1
//   unity_SHBg                 c12      1
//   unity_SHBb                 c13      1
//   unity_SHC                  c14      1
//   unity_WorldTransformParams c15      1
//   _MainTex_ST                c16      1
//   _DetailAlbedoMap_ST        c17      1
//   _UVSec                     c18      1
//

    vs_3_0
    def c19, 0, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_tangent v4
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6
    dcl_texcoord6 o7.xyz
    dp4 o0.x, c0, v0
    dp4 o0.y, c1, v0
    dp4 o0.z, c2, v0
    dp4 o0.w, c3, v0
    mad o1.xy, v2, c16, c16.zwzw
    abs r0.x, c18.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c17.xyxy, c17
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add o2.xyz, r0, -c10
    mov o7.xyz, r0
    mul r0.x, c15.w, v4.w
    dp3 r1.x, c4, v4
    dp3 r1.y, c5, v4
    dp3 r1.z, c6, v4
    nrm r2.xyz, r1
    mul r0.yzw, c8.xxyz, v1.y
    mad r0.yzw, c7.xxyz, v1.x, r0
    mad r0.yzw, c9.xxyz, v1.z, r0
    nrm r1.xyz, r0.yzww
    mul r0.yzw, r2.xyzx, r1.xzxy
    mad r0.yzw, r1.xyzx, r2.xzxy, -r0
    mov o3.xyz, r2
    mul o4.xyz, r0.x, r0.yzww
    mul r0.x, r1.y, r1.y
    mad r0.x, r1.x, r1.x, -r0.x
    mul r2, r1.yzzx, r1.xyzz
    mov o5.xyz, r1
    dp4 r1.x, c11, r2
    dp4 r1.y, c12, r2
    dp4 r1.z, c13, r2
    mad o6.xyz, c14, r0.x, r1
    mov o3.w, c19.x
    mov o4.w, c19.x
    mov o5.w, c19.x
    mov o6.w, c19.x

// approximately 44 instruction slots used
"
}
SubProgram "d3d11 " {
// Stats: 43 math
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_SEPARATE" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
ConstBuffer "$Globals" 240
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 656 [unity_SHBr]
Vector 672 [unity_SHBg]
Vector 688 [unity_SHBb]
Vector 704 [unity_SHC]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
Vector 336 [unity_WorldTransformParams]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer cb0[14], immediateIndexed
      dcl_constantbuffer cb1[5], immediateIndexed
      dcl_constantbuffer cb2[45], immediateIndexed
      dcl_constantbuffer cb3[22], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyz
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: mad o0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   4: eq r0.x, cb0[13].z, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[11].xxxy, cb0[11].zzzw
   7: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  13: mov o7.xyz, r0.xyzx
  14: mul r0.xyz, v4.yyyy, cb3[13].xyzx
  15: mad r0.xyz, cb3[12].xyzx, v4.xxxx, r0.xyzx
  16: mad r0.xyz, cb3[14].xyzx, v4.zzzz, r0.xyzx
  17: dp3 r0.w, r0.xyzx, r0.xyzx
  18: rsq r0.w, r0.w
  19: mul r0.xyz, r0.wwww, r0.xyzx
  20: mov o3.xyz, r0.xyzx
  21: mov o3.w, l(0)
  22: mul r1.x, v1.x, cb3[16].x
  23: mul r1.y, v1.x, cb3[17].x
  24: mul r1.z, v1.x, cb3[18].x
  25: mul r2.x, v1.y, cb3[16].y
  26: mul r2.y, v1.y, cb3[17].y
  27: mul r2.z, v1.y, cb3[18].y
  28: add r1.xyz, r1.xyzx, r2.xyzx
  29: mul r2.x, v1.z, cb3[16].z
  30: mul r2.y, v1.z, cb3[17].z
  31: mul r2.z, v1.z, cb3[18].z
  32: add r1.xyz, r1.xyzx, r2.xyzx
  33: dp3 r0.w, r1.xyzx, r1.xyzx
  34: rsq r0.w, r0.w
  35: mul r1.xyz, r0.wwww, r1.xyzx
  36: mul r2.xyz, r0.yzxy, r1.zxyz
  37: mad r0.xyz, r1.yzxy, r0.zxyz, -r2.xyzx
  38: mul r0.w, v4.w, cb3[21].w
  39: mul o4.xyz, r0.wwww, r0.xyzx
  40: mov o4.w, l(0)
  41: mov o5.xyz, r1.xyzx
  42: mov o5.w, l(0)
  43: mul r0.x, r1.y, r1.y
  44: mad r0.x, r1.x, r1.x, -r0.x
  45: mul r1.xyzw, r1.yzzx, r1.xyzz
  46: dp4 r2.x, cb2[41].xyzw, r1.xyzw
  47: dp4 r2.y, cb2[42].xyzw, r1.xyzw
  48: dp4 r2.z, cb2[43].xyzw, r1.xyzw
  49: mad o6.xyz, cb2[44].xyzx, r0.xxxx, r2.xyzx
  50: mov o6.w, l(0)
  51: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
// Stats: 31 math, 3 textures, 1 branches
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_SEPARATE" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "UNITY_HDR_ON" }
"#version 120

#ifdef VERTEX
uniform vec3 _WorldSpaceCameraPos;
uniform vec4 unity_SHBr;
uniform vec4 unity_SHBg;
uniform vec4 unity_SHBb;
uniform vec4 unity_SHC;

uniform mat4 _Object2World;
uniform mat4 _World2Object;
uniform vec4 unity_WorldTransformParams;
uniform vec4 unity_ColorSpaceLuminance;
uniform vec4 _MainTex_ST;
uniform vec4 _DetailAlbedoMap_ST;
uniform float _UVSec;
attribute vec4 TANGENT;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
varying vec3 xlv_TEXCOORD6;
void main ()
{
  vec2 tmpvar_1;
  tmpvar_1 = gl_MultiTexCoord0.xy;
  vec2 tmpvar_2;
  tmpvar_2 = gl_MultiTexCoord1.xy;
  vec4 tmpvar_3;
  vec4 tmpvar_4;
  vec4 tmpvar_5;
  vec4 tmpvar_6;
  vec4 tmpvar_7;
  vec4 tmpvar_8;
  tmpvar_8 = (_Object2World * gl_Vertex);
  vec3 tmpvar_9;
  tmpvar_9 = tmpvar_8.xyz;
  tmpvar_3 = (gl_ModelViewProjectionMatrix * gl_Vertex);
  vec4 texcoord_10;
  texcoord_10.xy = ((gl_MultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  vec2 tmpvar_11;
  if ((_UVSec == 0.0)) {
    tmpvar_11 = tmpvar_1;
  } else {
    tmpvar_11 = tmpvar_2;
  };
  texcoord_10.zw = ((tmpvar_11 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  vec3 n_12;
  n_12 = (tmpvar_8.xyz - _WorldSpaceCameraPos);
  vec4 v_13;
  v_13.x = _World2Object[0].x;
  v_13.y = _World2Object[1].x;
  v_13.z = _World2Object[2].x;
  v_13.w = _World2Object[3].x;
  vec4 v_14;
  v_14.x = _World2Object[0].y;
  v_14.y = _World2Object[1].y;
  v_14.z = _World2Object[2].y;
  v_14.w = _World2Object[3].y;
  vec4 v_15;
  v_15.x = _World2Object[0].z;
  v_15.y = _World2Object[1].z;
  v_15.z = _World2Object[2].z;
  v_15.w = _World2Object[3].z;
  vec3 tmpvar_16;
  tmpvar_16 = normalize(((
    (v_13.xyz * gl_Normal.x)
   + 
    (v_14.xyz * gl_Normal.y)
  ) + (v_15.xyz * gl_Normal.z)));
  mat3 tmpvar_17;
  tmpvar_17[0] = _Object2World[0].xyz;
  tmpvar_17[1] = _Object2World[1].xyz;
  tmpvar_17[2] = _Object2World[2].xyz;
  vec4 tmpvar_18;
  tmpvar_18.xyz = normalize((tmpvar_17 * TANGENT.xyz));
  tmpvar_18.w = TANGENT.w;
  vec3 tmpvar_19;
  vec3 tmpvar_20;
  tmpvar_19 = tmpvar_18.xyz;
  tmpvar_20 = (((tmpvar_16.yzx * tmpvar_18.zxy) - (tmpvar_16.zxy * tmpvar_18.yzx)) * (TANGENT.w * unity_WorldTransformParams.w));
  vec3 tmpvar_21;
  vec3 tmpvar_22;
  vec3 tmpvar_23;
  tmpvar_21.x = tmpvar_19.x;
  tmpvar_21.y = tmpvar_20.x;
  tmpvar_21.z = tmpvar_16.x;
  tmpvar_22.x = tmpvar_19.y;
  tmpvar_22.y = tmpvar_20.y;
  tmpvar_22.z = tmpvar_16.y;
  tmpvar_23.x = tmpvar_19.z;
  tmpvar_23.y = tmpvar_20.z;
  tmpvar_23.z = tmpvar_16.z;
  vec3 v_24;
  v_24.x = tmpvar_21.x;
  v_24.y = tmpvar_22.x;
  v_24.z = tmpvar_23.x;
  tmpvar_4.xyz = v_24;
  vec3 v_25;
  v_25.x = tmpvar_21.y;
  v_25.y = tmpvar_22.y;
  v_25.z = tmpvar_23.y;
  tmpvar_5.xyz = v_25;
  vec3 v_26;
  v_26.x = tmpvar_21.z;
  v_26.y = tmpvar_22.z;
  v_26.z = tmpvar_23.z;
  tmpvar_6.xyz = v_26;
  tmpvar_7 = vec4(0.0, 0.0, 0.0, 0.0);
  vec3 ambient_27;
  ambient_27 = vec3(0.0, 0.0, 0.0);
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    ambient_27 = vec3(0.0, 0.0, 0.0);
  };
  vec3 x1_28;
  vec4 tmpvar_29;
  tmpvar_29 = (tmpvar_16.xyzz * tmpvar_16.yzzx);
  x1_28.x = dot (unity_SHBr, tmpvar_29);
  x1_28.y = dot (unity_SHBg, tmpvar_29);
  x1_28.z = dot (unity_SHBb, tmpvar_29);
  ambient_27 = (ambient_27 + (x1_28 + (unity_SHC.xyz * 
    ((tmpvar_16.x * tmpvar_16.x) - (tmpvar_16.y * tmpvar_16.y))
  )));
  tmpvar_7.xyz = ambient_27;
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = texcoord_10;
  xlv_TEXCOORD1 = n_12;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  xlv_TEXCOORD5 = tmpvar_7;
  xlv_TEXCOORD6 = tmpvar_9;
}


#endif
#ifdef FRAGMENT
#extension GL_ARB_shader_texture_lod : enable
uniform vec4 unity_SHAr;
uniform vec4 unity_SHAg;
uniform vec4 unity_SHAb;
uniform vec4 unity_ColorSpaceDielectricSpec;
uniform vec4 unity_ColorSpaceLuminance;
uniform vec4 _Color;
uniform sampler2D _MainTex;
uniform float _Metallic;
uniform float _Glossiness;
uniform sampler2D _OcclusionMap;
uniform float _OcclusionStrength;
uniform vec4 _EmissionColor;
uniform sampler2D _EmissionMap;
varying vec4 xlv_TEXCOORD0;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
void main ()
{
  vec2 tmpvar_1;
  tmpvar_1.x = _Metallic;
  tmpvar_1.y = _Glossiness;
  float tmpvar_2;
  tmpvar_2 = tmpvar_1.y;
  vec3 tmpvar_3;
  tmpvar_3 = (_Color.xyz * texture2D (_MainTex, xlv_TEXCOORD0.xy).xyz);
  vec3 tmpvar_4;
  vec3 tmpvar_5;
  tmpvar_5 = mix (unity_ColorSpaceDielectricSpec.xyz, tmpvar_3, vec3(_Metallic));
  tmpvar_4 = (tmpvar_3 * (unity_ColorSpaceDielectricSpec.w - (_Metallic * unity_ColorSpaceDielectricSpec.w)));
  vec3 tmpvar_6;
  tmpvar_6 = normalize(xlv_TEXCOORD2_2.xyz);
  float tmpvar_7;
  tmpvar_7 = ((1.0 - _OcclusionStrength) + (texture2D (_OcclusionMap, xlv_TEXCOORD0.xy).y * _OcclusionStrength));
  vec3 tmpvar_8;
  tmpvar_8 = vec3(0.0, 0.0, 0.0);
  vec3 ambient_9;
  vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = tmpvar_6;
  vec3 x_11;
  x_11.x = dot (unity_SHAr, tmpvar_10);
  x_11.y = dot (unity_SHAg, tmpvar_10);
  x_11.z = dot (unity_SHAb, tmpvar_10);
  vec3 tmpvar_12;
  tmpvar_12 = max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD5.xyz + x_11));
  ambient_9 = tmpvar_12;
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    ambient_9 = max (((1.055 * 
      pow (max (tmpvar_12, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
    ) - 0.055), vec3(0.0, 0.0, 0.0));
  };
  tmpvar_8 = (ambient_9 * tmpvar_7);
  vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = (tmpvar_4 * tmpvar_8);
  vec4 tmpvar_14;
  tmpvar_14.xyz = tmpvar_4;
  tmpvar_14.w = tmpvar_7;
  vec4 tmpvar_15;
  tmpvar_15.xyz = tmpvar_5;
  tmpvar_15.w = tmpvar_2;
  vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = ((tmpvar_6 * 0.5) + 0.5);
  vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = (tmpvar_13.xyz + (texture2D (_EmissionMap, xlv_TEXCOORD0.xy).xyz * _EmissionColor.xyz));
  gl_FragData[0] = tmpvar_14;
  gl_FragData[1] = tmpvar_15;
  gl_FragData[2] = tmpvar_16;
  gl_FragData[3] = tmpvar_17;
}


#endif
"
}
SubProgram "d3d9 " {
// Stats: 45 math
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_SEPARATE" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "UNITY_HDR_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
Matrix 4 [_Object2World] 3
Matrix 7 [_World2Object] 3
Matrix 0 [glstate_matrix_mvp]
Vector 17 [_DetailAlbedoMap_ST]
Vector 16 [_MainTex_ST]
Float 18 [_UVSec]
Vector 10 [_WorldSpaceCameraPos]
Vector 13 [unity_SHBb]
Vector 12 [unity_SHBg]
Vector 11 [unity_SHBr]
Vector 14 [unity_SHC]
Vector 15 [unity_WorldTransformParams]
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   row_major float4x4 _Object2World;
//   float _UVSec;
//   row_major float4x4 _World2Object;
//   float3 _WorldSpaceCameraPos;
//   row_major float4x4 glstate_matrix_mvp;
//   float4 unity_SHBb;
//   float4 unity_SHBg;
//   float4 unity_SHBr;
//   float4 unity_SHC;
//   float4 unity_WorldTransformParams;
//
//
// Registers:
//
//   Name                       Reg   Size
//   -------------------------- ----- ----
//   glstate_matrix_mvp         c0       4
//   _Object2World              c4       3
//   _World2Object              c7       3
//   _WorldSpaceCameraPos       c10      1
//   unity_SHBr                 c11      1
//   unity_SHBg                 c12      1
//   unity_SHBb                 c13      1
//   unity_SHC                  c14      1
//   unity_WorldTransformParams c15      1
//   _MainTex_ST                c16      1
//   _DetailAlbedoMap_ST        c17      1
//   _UVSec                     c18      1
//

    vs_3_0
    def c19, 0, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_tangent v4
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6
    dcl_texcoord6 o7.xyz
    dp4 o0.x, c0, v0
    dp4 o0.y, c1, v0
    dp4 o0.z, c2, v0
    dp4 o0.w, c3, v0
    mad o1.xy, v2, c16, c16.zwzw
    abs r0.x, c18.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c17.xyxy, c17
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add o2.xyz, r0, -c10
    mov o7.xyz, r0
    mul r0.x, c15.w, v4.w
    dp3 r1.x, c4, v4
    dp3 r1.y, c5, v4
    dp3 r1.z, c6, v4
    nrm r2.xyz, r1
    mul r0.yzw, c8.xxyz, v1.y
    mad r0.yzw, c7.xxyz, v1.x, r0
    mad r0.yzw, c9.xxyz, v1.z, r0
    nrm r1.xyz, r0.yzww
    mul r0.yzw, r2.xyzx, r1.xzxy
    mad r0.yzw, r1.xyzx, r2.xzxy, -r0
    mov o3.xyz, r2
    mul o4.xyz, r0.x, r0.yzww
    mul r0.x, r1.y, r1.y
    mad r0.x, r1.x, r1.x, -r0.x
    mul r2, r1.yzzx, r1.xyzz
    mov o5.xyz, r1
    dp4 r1.x, c11, r2
    dp4 r1.y, c12, r2
    dp4 r1.z, c13, r2
    mad o6.xyz, c14, r0.x, r1
    mov o3.w, c19.x
    mov o4.w, c19.x
    mov o5.w, c19.x
    mov o6.w, c19.x

// approximately 44 instruction slots used
"
}
SubProgram "d3d11 " {
// Stats: 43 math
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_SEPARATE" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "UNITY_HDR_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
ConstBuffer "$Globals" 240
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 656 [unity_SHBr]
Vector 672 [unity_SHBg]
Vector 688 [unity_SHBb]
Vector 704 [unity_SHC]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
Vector 336 [unity_WorldTransformParams]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer cb0[14], immediateIndexed
      dcl_constantbuffer cb1[5], immediateIndexed
      dcl_constantbuffer cb2[45], immediateIndexed
      dcl_constantbuffer cb3[22], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyz
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: mad o0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   4: eq r0.x, cb0[13].z, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[11].xxxy, cb0[11].zzzw
   7: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  13: mov o7.xyz, r0.xyzx
  14: mul r0.xyz, v4.yyyy, cb3[13].xyzx
  15: mad r0.xyz, cb3[12].xyzx, v4.xxxx, r0.xyzx
  16: mad r0.xyz, cb3[14].xyzx, v4.zzzz, r0.xyzx
  17: dp3 r0.w, r0.xyzx, r0.xyzx
  18: rsq r0.w, r0.w
  19: mul r0.xyz, r0.wwww, r0.xyzx
  20: mov o3.xyz, r0.xyzx
  21: mov o3.w, l(0)
  22: mul r1.x, v1.x, cb3[16].x
  23: mul r1.y, v1.x, cb3[17].x
  24: mul r1.z, v1.x, cb3[18].x
  25: mul r2.x, v1.y, cb3[16].y
  26: mul r2.y, v1.y, cb3[17].y
  27: mul r2.z, v1.y, cb3[18].y
  28: add r1.xyz, r1.xyzx, r2.xyzx
  29: mul r2.x, v1.z, cb3[16].z
  30: mul r2.y, v1.z, cb3[17].z
  31: mul r2.z, v1.z, cb3[18].z
  32: add r1.xyz, r1.xyzx, r2.xyzx
  33: dp3 r0.w, r1.xyzx, r1.xyzx
  34: rsq r0.w, r0.w
  35: mul r1.xyz, r0.wwww, r1.xyzx
  36: mul r2.xyz, r0.yzxy, r1.zxyz
  37: mad r0.xyz, r1.yzxy, r0.zxyz, -r2.xyzx
  38: mul r0.w, v4.w, cb3[21].w
  39: mul o4.xyz, r0.wwww, r0.xyzx
  40: mov o4.w, l(0)
  41: mov o5.xyz, r1.xyzx
  42: mov o5.w, l(0)
  43: mul r0.x, r1.y, r1.y
  44: mad r0.x, r1.x, r1.x, -r0.x
  45: mul r1.xyzw, r1.yzzx, r1.xyzz
  46: dp4 r2.x, cb2[41].xyzw, r1.xyzw
  47: dp4 r2.y, cb2[42].xyzw, r1.xyzw
  48: dp4 r2.z, cb2[43].xyzw, r1.xyzw
  49: mad o6.xyz, cb2[44].xyzx, r0.xxxx, r2.xyzx
  50: mov o6.w, l(0)
  51: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
// Stats: 29 math, 2 textures, 1 branches
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_SEPARATE" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" "_ALPHABLEND_ON" }
"#version 120

#ifdef VERTEX
uniform vec3 _WorldSpaceCameraPos;
uniform vec4 unity_SHBr;
uniform vec4 unity_SHBg;
uniform vec4 unity_SHBb;
uniform vec4 unity_SHC;

uniform mat4 _Object2World;
uniform mat4 _World2Object;
uniform vec4 unity_WorldTransformParams;
uniform vec4 unity_ColorSpaceLuminance;
uniform vec4 _MainTex_ST;
uniform vec4 _DetailAlbedoMap_ST;
uniform float _UVSec;
attribute vec4 TANGENT;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
varying vec3 xlv_TEXCOORD6;
void main ()
{
  vec2 tmpvar_1;
  tmpvar_1 = gl_MultiTexCoord0.xy;
  vec2 tmpvar_2;
  tmpvar_2 = gl_MultiTexCoord1.xy;
  vec4 tmpvar_3;
  vec4 tmpvar_4;
  vec4 tmpvar_5;
  vec4 tmpvar_6;
  vec4 tmpvar_7;
  vec4 tmpvar_8;
  tmpvar_8 = (_Object2World * gl_Vertex);
  vec3 tmpvar_9;
  tmpvar_9 = tmpvar_8.xyz;
  tmpvar_3 = (gl_ModelViewProjectionMatrix * gl_Vertex);
  vec4 texcoord_10;
  texcoord_10.xy = ((gl_MultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  vec2 tmpvar_11;
  if ((_UVSec == 0.0)) {
    tmpvar_11 = tmpvar_1;
  } else {
    tmpvar_11 = tmpvar_2;
  };
  texcoord_10.zw = ((tmpvar_11 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  vec3 n_12;
  n_12 = (tmpvar_8.xyz - _WorldSpaceCameraPos);
  vec4 v_13;
  v_13.x = _World2Object[0].x;
  v_13.y = _World2Object[1].x;
  v_13.z = _World2Object[2].x;
  v_13.w = _World2Object[3].x;
  vec4 v_14;
  v_14.x = _World2Object[0].y;
  v_14.y = _World2Object[1].y;
  v_14.z = _World2Object[2].y;
  v_14.w = _World2Object[3].y;
  vec4 v_15;
  v_15.x = _World2Object[0].z;
  v_15.y = _World2Object[1].z;
  v_15.z = _World2Object[2].z;
  v_15.w = _World2Object[3].z;
  vec3 tmpvar_16;
  tmpvar_16 = normalize(((
    (v_13.xyz * gl_Normal.x)
   + 
    (v_14.xyz * gl_Normal.y)
  ) + (v_15.xyz * gl_Normal.z)));
  mat3 tmpvar_17;
  tmpvar_17[0] = _Object2World[0].xyz;
  tmpvar_17[1] = _Object2World[1].xyz;
  tmpvar_17[2] = _Object2World[2].xyz;
  vec4 tmpvar_18;
  tmpvar_18.xyz = normalize((tmpvar_17 * TANGENT.xyz));
  tmpvar_18.w = TANGENT.w;
  vec3 tmpvar_19;
  vec3 tmpvar_20;
  tmpvar_19 = tmpvar_18.xyz;
  tmpvar_20 = (((tmpvar_16.yzx * tmpvar_18.zxy) - (tmpvar_16.zxy * tmpvar_18.yzx)) * (TANGENT.w * unity_WorldTransformParams.w));
  vec3 tmpvar_21;
  vec3 tmpvar_22;
  vec3 tmpvar_23;
  tmpvar_21.x = tmpvar_19.x;
  tmpvar_21.y = tmpvar_20.x;
  tmpvar_21.z = tmpvar_16.x;
  tmpvar_22.x = tmpvar_19.y;
  tmpvar_22.y = tmpvar_20.y;
  tmpvar_22.z = tmpvar_16.y;
  tmpvar_23.x = tmpvar_19.z;
  tmpvar_23.y = tmpvar_20.z;
  tmpvar_23.z = tmpvar_16.z;
  vec3 v_24;
  v_24.x = tmpvar_21.x;
  v_24.y = tmpvar_22.x;
  v_24.z = tmpvar_23.x;
  tmpvar_4.xyz = v_24;
  vec3 v_25;
  v_25.x = tmpvar_21.y;
  v_25.y = tmpvar_22.y;
  v_25.z = tmpvar_23.y;
  tmpvar_5.xyz = v_25;
  vec3 v_26;
  v_26.x = tmpvar_21.z;
  v_26.y = tmpvar_22.z;
  v_26.z = tmpvar_23.z;
  tmpvar_6.xyz = v_26;
  tmpvar_7 = vec4(0.0, 0.0, 0.0, 0.0);
  vec3 ambient_27;
  ambient_27 = vec3(0.0, 0.0, 0.0);
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    ambient_27 = vec3(0.0, 0.0, 0.0);
  };
  vec3 x1_28;
  vec4 tmpvar_29;
  tmpvar_29 = (tmpvar_16.xyzz * tmpvar_16.yzzx);
  x1_28.x = dot (unity_SHBr, tmpvar_29);
  x1_28.y = dot (unity_SHBg, tmpvar_29);
  x1_28.z = dot (unity_SHBb, tmpvar_29);
  ambient_27 = (ambient_27 + (x1_28 + (unity_SHC.xyz * 
    ((tmpvar_16.x * tmpvar_16.x) - (tmpvar_16.y * tmpvar_16.y))
  )));
  tmpvar_7.xyz = ambient_27;
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = texcoord_10;
  xlv_TEXCOORD1 = n_12;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  xlv_TEXCOORD5 = tmpvar_7;
  xlv_TEXCOORD6 = tmpvar_9;
}


#endif
#ifdef FRAGMENT
#extension GL_ARB_shader_texture_lod : enable
uniform vec4 unity_SHAr;
uniform vec4 unity_SHAg;
uniform vec4 unity_SHAb;
uniform vec4 unity_ColorSpaceDielectricSpec;
uniform vec4 unity_ColorSpaceLuminance;
uniform vec4 _Color;
uniform sampler2D _MainTex;
uniform float _Metallic;
uniform float _Glossiness;
uniform sampler2D _OcclusionMap;
uniform float _OcclusionStrength;
varying vec4 xlv_TEXCOORD0;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
void main ()
{
  vec2 tmpvar_1;
  tmpvar_1.x = _Metallic;
  tmpvar_1.y = _Glossiness;
  float tmpvar_2;
  tmpvar_2 = tmpvar_1.y;
  vec3 tmpvar_3;
  tmpvar_3 = (_Color.xyz * texture2D (_MainTex, xlv_TEXCOORD0.xy).xyz);
  vec3 tmpvar_4;
  vec3 tmpvar_5;
  tmpvar_5 = mix (unity_ColorSpaceDielectricSpec.xyz, tmpvar_3, vec3(_Metallic));
  tmpvar_4 = (tmpvar_3 * (unity_ColorSpaceDielectricSpec.w - (_Metallic * unity_ColorSpaceDielectricSpec.w)));
  vec3 tmpvar_6;
  tmpvar_6 = normalize(xlv_TEXCOORD2_2.xyz);
  float tmpvar_7;
  tmpvar_7 = ((1.0 - _OcclusionStrength) + (texture2D (_OcclusionMap, xlv_TEXCOORD0.xy).y * _OcclusionStrength));
  vec3 tmpvar_8;
  tmpvar_8 = vec3(0.0, 0.0, 0.0);
  vec3 ambient_9;
  vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = tmpvar_6;
  vec3 x_11;
  x_11.x = dot (unity_SHAr, tmpvar_10);
  x_11.y = dot (unity_SHAg, tmpvar_10);
  x_11.z = dot (unity_SHAb, tmpvar_10);
  vec3 tmpvar_12;
  tmpvar_12 = max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD5.xyz + x_11));
  ambient_9 = tmpvar_12;
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    ambient_9 = max (((1.055 * 
      pow (max (tmpvar_12, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
    ) - 0.055), vec3(0.0, 0.0, 0.0));
  };
  tmpvar_8 = (ambient_9 * tmpvar_7);
  vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = (tmpvar_4 * tmpvar_8);
  vec4 tmpvar_14;
  tmpvar_14.xyz = tmpvar_4;
  tmpvar_14.w = tmpvar_7;
  vec4 tmpvar_15;
  tmpvar_15.xyz = tmpvar_5;
  tmpvar_15.w = tmpvar_2;
  vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = ((tmpvar_6 * 0.5) + 0.5);
  vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = tmpvar_13.xyz;
  gl_FragData[0] = tmpvar_14;
  gl_FragData[1] = tmpvar_15;
  gl_FragData[2] = tmpvar_16;
  gl_FragData[3] = tmpvar_17;
}


#endif
"
}
SubProgram "d3d9 " {
// Stats: 45 math
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_SEPARATE" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" "_ALPHABLEND_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
Matrix 4 [_Object2World] 3
Matrix 7 [_World2Object] 3
Matrix 0 [glstate_matrix_mvp]
Vector 17 [_DetailAlbedoMap_ST]
Vector 16 [_MainTex_ST]
Float 18 [_UVSec]
Vector 10 [_WorldSpaceCameraPos]
Vector 13 [unity_SHBb]
Vector 12 [unity_SHBg]
Vector 11 [unity_SHBr]
Vector 14 [unity_SHC]
Vector 15 [unity_WorldTransformParams]
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   row_major float4x4 _Object2World;
//   float _UVSec;
//   row_major float4x4 _World2Object;
//   float3 _WorldSpaceCameraPos;
//   row_major float4x4 glstate_matrix_mvp;
//   float4 unity_SHBb;
//   float4 unity_SHBg;
//   float4 unity_SHBr;
//   float4 unity_SHC;
//   float4 unity_WorldTransformParams;
//
//
// Registers:
//
//   Name                       Reg   Size
//   -------------------------- ----- ----
//   glstate_matrix_mvp         c0       4
//   _Object2World              c4       3
//   _World2Object              c7       3
//   _WorldSpaceCameraPos       c10      1
//   unity_SHBr                 c11      1
//   unity_SHBg                 c12      1
//   unity_SHBb                 c13      1
//   unity_SHC                  c14      1
//   unity_WorldTransformParams c15      1
//   _MainTex_ST                c16      1
//   _DetailAlbedoMap_ST        c17      1
//   _UVSec                     c18      1
//

    vs_3_0
    def c19, 0, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_tangent v4
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6
    dcl_texcoord6 o7.xyz
    dp4 o0.x, c0, v0
    dp4 o0.y, c1, v0
    dp4 o0.z, c2, v0
    dp4 o0.w, c3, v0
    mad o1.xy, v2, c16, c16.zwzw
    abs r0.x, c18.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c17.xyxy, c17
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add o2.xyz, r0, -c10
    mov o7.xyz, r0
    mul r0.x, c15.w, v4.w
    dp3 r1.x, c4, v4
    dp3 r1.y, c5, v4
    dp3 r1.z, c6, v4
    nrm r2.xyz, r1
    mul r0.yzw, c8.xxyz, v1.y
    mad r0.yzw, c7.xxyz, v1.x, r0
    mad r0.yzw, c9.xxyz, v1.z, r0
    nrm r1.xyz, r0.yzww
    mul r0.yzw, r2.xyzx, r1.xzxy
    mad r0.yzw, r1.xyzx, r2.xzxy, -r0
    mov o3.xyz, r2
    mul o4.xyz, r0.x, r0.yzww
    mul r0.x, r1.y, r1.y
    mad r0.x, r1.x, r1.x, -r0.x
    mul r2, r1.yzzx, r1.xyzz
    mov o5.xyz, r1
    dp4 r1.x, c11, r2
    dp4 r1.y, c12, r2
    dp4 r1.z, c13, r2
    mad o6.xyz, c14, r0.x, r1
    mov o3.w, c19.x
    mov o4.w, c19.x
    mov o5.w, c19.x
    mov o6.w, c19.x

// approximately 44 instruction slots used
"
}
SubProgram "d3d11 " {
// Stats: 43 math
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_SEPARATE" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" "_ALPHABLEND_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
ConstBuffer "$Globals" 240
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 656 [unity_SHBr]
Vector 672 [unity_SHBg]
Vector 688 [unity_SHBb]
Vector 704 [unity_SHC]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
Vector 336 [unity_WorldTransformParams]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer cb0[14], immediateIndexed
      dcl_constantbuffer cb1[5], immediateIndexed
      dcl_constantbuffer cb2[45], immediateIndexed
      dcl_constantbuffer cb3[22], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyz
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: mad o0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   4: eq r0.x, cb0[13].z, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[11].xxxy, cb0[11].zzzw
   7: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  13: mov o7.xyz, r0.xyzx
  14: mul r0.xyz, v4.yyyy, cb3[13].xyzx
  15: mad r0.xyz, cb3[12].xyzx, v4.xxxx, r0.xyzx
  16: mad r0.xyz, cb3[14].xyzx, v4.zzzz, r0.xyzx
  17: dp3 r0.w, r0.xyzx, r0.xyzx
  18: rsq r0.w, r0.w
  19: mul r0.xyz, r0.wwww, r0.xyzx
  20: mov o3.xyz, r0.xyzx
  21: mov o3.w, l(0)
  22: mul r1.x, v1.x, cb3[16].x
  23: mul r1.y, v1.x, cb3[17].x
  24: mul r1.z, v1.x, cb3[18].x
  25: mul r2.x, v1.y, cb3[16].y
  26: mul r2.y, v1.y, cb3[17].y
  27: mul r2.z, v1.y, cb3[18].y
  28: add r1.xyz, r1.xyzx, r2.xyzx
  29: mul r2.x, v1.z, cb3[16].z
  30: mul r2.y, v1.z, cb3[17].z
  31: mul r2.z, v1.z, cb3[18].z
  32: add r1.xyz, r1.xyzx, r2.xyzx
  33: dp3 r0.w, r1.xyzx, r1.xyzx
  34: rsq r0.w, r0.w
  35: mul r1.xyz, r0.wwww, r1.xyzx
  36: mul r2.xyz, r0.yzxy, r1.zxyz
  37: mad r0.xyz, r1.yzxy, r0.zxyz, -r2.xyzx
  38: mul r0.w, v4.w, cb3[21].w
  39: mul o4.xyz, r0.wwww, r0.xyzx
  40: mov o4.w, l(0)
  41: mov o5.xyz, r1.xyzx
  42: mov o5.w, l(0)
  43: mul r0.x, r1.y, r1.y
  44: mad r0.x, r1.x, r1.x, -r0.x
  45: mul r1.xyzw, r1.yzzx, r1.xyzz
  46: dp4 r2.x, cb2[41].xyzw, r1.xyzw
  47: dp4 r2.y, cb2[42].xyzw, r1.xyzw
  48: dp4 r2.z, cb2[43].xyzw, r1.xyzw
  49: mad o6.xyz, cb2[44].xyzx, r0.xxxx, r2.xyzx
  50: mov o6.w, l(0)
  51: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
// Stats: 31 math, 3 textures, 1 branches
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_SEPARATE" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "UNITY_HDR_ON" "_ALPHABLEND_ON" }
"#version 120

#ifdef VERTEX
uniform vec3 _WorldSpaceCameraPos;
uniform vec4 unity_SHBr;
uniform vec4 unity_SHBg;
uniform vec4 unity_SHBb;
uniform vec4 unity_SHC;

uniform mat4 _Object2World;
uniform mat4 _World2Object;
uniform vec4 unity_WorldTransformParams;
uniform vec4 unity_ColorSpaceLuminance;
uniform vec4 _MainTex_ST;
uniform vec4 _DetailAlbedoMap_ST;
uniform float _UVSec;
attribute vec4 TANGENT;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
varying vec3 xlv_TEXCOORD6;
void main ()
{
  vec2 tmpvar_1;
  tmpvar_1 = gl_MultiTexCoord0.xy;
  vec2 tmpvar_2;
  tmpvar_2 = gl_MultiTexCoord1.xy;
  vec4 tmpvar_3;
  vec4 tmpvar_4;
  vec4 tmpvar_5;
  vec4 tmpvar_6;
  vec4 tmpvar_7;
  vec4 tmpvar_8;
  tmpvar_8 = (_Object2World * gl_Vertex);
  vec3 tmpvar_9;
  tmpvar_9 = tmpvar_8.xyz;
  tmpvar_3 = (gl_ModelViewProjectionMatrix * gl_Vertex);
  vec4 texcoord_10;
  texcoord_10.xy = ((gl_MultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  vec2 tmpvar_11;
  if ((_UVSec == 0.0)) {
    tmpvar_11 = tmpvar_1;
  } else {
    tmpvar_11 = tmpvar_2;
  };
  texcoord_10.zw = ((tmpvar_11 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  vec3 n_12;
  n_12 = (tmpvar_8.xyz - _WorldSpaceCameraPos);
  vec4 v_13;
  v_13.x = _World2Object[0].x;
  v_13.y = _World2Object[1].x;
  v_13.z = _World2Object[2].x;
  v_13.w = _World2Object[3].x;
  vec4 v_14;
  v_14.x = _World2Object[0].y;
  v_14.y = _World2Object[1].y;
  v_14.z = _World2Object[2].y;
  v_14.w = _World2Object[3].y;
  vec4 v_15;
  v_15.x = _World2Object[0].z;
  v_15.y = _World2Object[1].z;
  v_15.z = _World2Object[2].z;
  v_15.w = _World2Object[3].z;
  vec3 tmpvar_16;
  tmpvar_16 = normalize(((
    (v_13.xyz * gl_Normal.x)
   + 
    (v_14.xyz * gl_Normal.y)
  ) + (v_15.xyz * gl_Normal.z)));
  mat3 tmpvar_17;
  tmpvar_17[0] = _Object2World[0].xyz;
  tmpvar_17[1] = _Object2World[1].xyz;
  tmpvar_17[2] = _Object2World[2].xyz;
  vec4 tmpvar_18;
  tmpvar_18.xyz = normalize((tmpvar_17 * TANGENT.xyz));
  tmpvar_18.w = TANGENT.w;
  vec3 tmpvar_19;
  vec3 tmpvar_20;
  tmpvar_19 = tmpvar_18.xyz;
  tmpvar_20 = (((tmpvar_16.yzx * tmpvar_18.zxy) - (tmpvar_16.zxy * tmpvar_18.yzx)) * (TANGENT.w * unity_WorldTransformParams.w));
  vec3 tmpvar_21;
  vec3 tmpvar_22;
  vec3 tmpvar_23;
  tmpvar_21.x = tmpvar_19.x;
  tmpvar_21.y = tmpvar_20.x;
  tmpvar_21.z = tmpvar_16.x;
  tmpvar_22.x = tmpvar_19.y;
  tmpvar_22.y = tmpvar_20.y;
  tmpvar_22.z = tmpvar_16.y;
  tmpvar_23.x = tmpvar_19.z;
  tmpvar_23.y = tmpvar_20.z;
  tmpvar_23.z = tmpvar_16.z;
  vec3 v_24;
  v_24.x = tmpvar_21.x;
  v_24.y = tmpvar_22.x;
  v_24.z = tmpvar_23.x;
  tmpvar_4.xyz = v_24;
  vec3 v_25;
  v_25.x = tmpvar_21.y;
  v_25.y = tmpvar_22.y;
  v_25.z = tmpvar_23.y;
  tmpvar_5.xyz = v_25;
  vec3 v_26;
  v_26.x = tmpvar_21.z;
  v_26.y = tmpvar_22.z;
  v_26.z = tmpvar_23.z;
  tmpvar_6.xyz = v_26;
  tmpvar_7 = vec4(0.0, 0.0, 0.0, 0.0);
  vec3 ambient_27;
  ambient_27 = vec3(0.0, 0.0, 0.0);
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    ambient_27 = vec3(0.0, 0.0, 0.0);
  };
  vec3 x1_28;
  vec4 tmpvar_29;
  tmpvar_29 = (tmpvar_16.xyzz * tmpvar_16.yzzx);
  x1_28.x = dot (unity_SHBr, tmpvar_29);
  x1_28.y = dot (unity_SHBg, tmpvar_29);
  x1_28.z = dot (unity_SHBb, tmpvar_29);
  ambient_27 = (ambient_27 + (x1_28 + (unity_SHC.xyz * 
    ((tmpvar_16.x * tmpvar_16.x) - (tmpvar_16.y * tmpvar_16.y))
  )));
  tmpvar_7.xyz = ambient_27;
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = texcoord_10;
  xlv_TEXCOORD1 = n_12;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  xlv_TEXCOORD5 = tmpvar_7;
  xlv_TEXCOORD6 = tmpvar_9;
}


#endif
#ifdef FRAGMENT
#extension GL_ARB_shader_texture_lod : enable
uniform vec4 unity_SHAr;
uniform vec4 unity_SHAg;
uniform vec4 unity_SHAb;
uniform vec4 unity_ColorSpaceDielectricSpec;
uniform vec4 unity_ColorSpaceLuminance;
uniform vec4 _Color;
uniform sampler2D _MainTex;
uniform float _Metallic;
uniform float _Glossiness;
uniform sampler2D _OcclusionMap;
uniform float _OcclusionStrength;
uniform vec4 _EmissionColor;
uniform sampler2D _EmissionMap;
varying vec4 xlv_TEXCOORD0;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
void main ()
{
  vec2 tmpvar_1;
  tmpvar_1.x = _Metallic;
  tmpvar_1.y = _Glossiness;
  float tmpvar_2;
  tmpvar_2 = tmpvar_1.y;
  vec3 tmpvar_3;
  tmpvar_3 = (_Color.xyz * texture2D (_MainTex, xlv_TEXCOORD0.xy).xyz);
  vec3 tmpvar_4;
  vec3 tmpvar_5;
  tmpvar_5 = mix (unity_ColorSpaceDielectricSpec.xyz, tmpvar_3, vec3(_Metallic));
  tmpvar_4 = (tmpvar_3 * (unity_ColorSpaceDielectricSpec.w - (_Metallic * unity_ColorSpaceDielectricSpec.w)));
  vec3 tmpvar_6;
  tmpvar_6 = normalize(xlv_TEXCOORD2_2.xyz);
  float tmpvar_7;
  tmpvar_7 = ((1.0 - _OcclusionStrength) + (texture2D (_OcclusionMap, xlv_TEXCOORD0.xy).y * _OcclusionStrength));
  vec3 tmpvar_8;
  tmpvar_8 = vec3(0.0, 0.0, 0.0);
  vec3 ambient_9;
  vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = tmpvar_6;
  vec3 x_11;
  x_11.x = dot (unity_SHAr, tmpvar_10);
  x_11.y = dot (unity_SHAg, tmpvar_10);
  x_11.z = dot (unity_SHAb, tmpvar_10);
  vec3 tmpvar_12;
  tmpvar_12 = max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD5.xyz + x_11));
  ambient_9 = tmpvar_12;
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    ambient_9 = max (((1.055 * 
      pow (max (tmpvar_12, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
    ) - 0.055), vec3(0.0, 0.0, 0.0));
  };
  tmpvar_8 = (ambient_9 * tmpvar_7);
  vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = (tmpvar_4 * tmpvar_8);
  vec4 tmpvar_14;
  tmpvar_14.xyz = tmpvar_4;
  tmpvar_14.w = tmpvar_7;
  vec4 tmpvar_15;
  tmpvar_15.xyz = tmpvar_5;
  tmpvar_15.w = tmpvar_2;
  vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = ((tmpvar_6 * 0.5) + 0.5);
  vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = (tmpvar_13.xyz + (texture2D (_EmissionMap, xlv_TEXCOORD0.xy).xyz * _EmissionColor.xyz));
  gl_FragData[0] = tmpvar_14;
  gl_FragData[1] = tmpvar_15;
  gl_FragData[2] = tmpvar_16;
  gl_FragData[3] = tmpvar_17;
}


#endif
"
}
SubProgram "d3d9 " {
// Stats: 45 math
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_SEPARATE" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "UNITY_HDR_ON" "_ALPHABLEND_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
Matrix 4 [_Object2World] 3
Matrix 7 [_World2Object] 3
Matrix 0 [glstate_matrix_mvp]
Vector 17 [_DetailAlbedoMap_ST]
Vector 16 [_MainTex_ST]
Float 18 [_UVSec]
Vector 10 [_WorldSpaceCameraPos]
Vector 13 [unity_SHBb]
Vector 12 [unity_SHBg]
Vector 11 [unity_SHBr]
Vector 14 [unity_SHC]
Vector 15 [unity_WorldTransformParams]
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   row_major float4x4 _Object2World;
//   float _UVSec;
//   row_major float4x4 _World2Object;
//   float3 _WorldSpaceCameraPos;
//   row_major float4x4 glstate_matrix_mvp;
//   float4 unity_SHBb;
//   float4 unity_SHBg;
//   float4 unity_SHBr;
//   float4 unity_SHC;
//   float4 unity_WorldTransformParams;
//
//
// Registers:
//
//   Name                       Reg   Size
//   -------------------------- ----- ----
//   glstate_matrix_mvp         c0       4
//   _Object2World              c4       3
//   _World2Object              c7       3
//   _WorldSpaceCameraPos       c10      1
//   unity_SHBr                 c11      1
//   unity_SHBg                 c12      1
//   unity_SHBb                 c13      1
//   unity_SHC                  c14      1
//   unity_WorldTransformParams c15      1
//   _MainTex_ST                c16      1
//   _DetailAlbedoMap_ST        c17      1
//   _UVSec                     c18      1
//

    vs_3_0
    def c19, 0, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_tangent v4
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6
    dcl_texcoord6 o7.xyz
    dp4 o0.x, c0, v0
    dp4 o0.y, c1, v0
    dp4 o0.z, c2, v0
    dp4 o0.w, c3, v0
    mad o1.xy, v2, c16, c16.zwzw
    abs r0.x, c18.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c17.xyxy, c17
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add o2.xyz, r0, -c10
    mov o7.xyz, r0
    mul r0.x, c15.w, v4.w
    dp3 r1.x, c4, v4
    dp3 r1.y, c5, v4
    dp3 r1.z, c6, v4
    nrm r2.xyz, r1
    mul r0.yzw, c8.xxyz, v1.y
    mad r0.yzw, c7.xxyz, v1.x, r0
    mad r0.yzw, c9.xxyz, v1.z, r0
    nrm r1.xyz, r0.yzww
    mul r0.yzw, r2.xyzx, r1.xzxy
    mad r0.yzw, r1.xyzx, r2.xzxy, -r0
    mov o3.xyz, r2
    mul o4.xyz, r0.x, r0.yzww
    mul r0.x, r1.y, r1.y
    mad r0.x, r1.x, r1.x, -r0.x
    mul r2, r1.yzzx, r1.xyzz
    mov o5.xyz, r1
    dp4 r1.x, c11, r2
    dp4 r1.y, c12, r2
    dp4 r1.z, c13, r2
    mad o6.xyz, c14, r0.x, r1
    mov o3.w, c19.x
    mov o4.w, c19.x
    mov o5.w, c19.x
    mov o6.w, c19.x

// approximately 44 instruction slots used
"
}
SubProgram "d3d11 " {
// Stats: 43 math
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_SEPARATE" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "UNITY_HDR_ON" "_ALPHABLEND_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
ConstBuffer "$Globals" 240
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 656 [unity_SHBr]
Vector 672 [unity_SHBg]
Vector 688 [unity_SHBb]
Vector 704 [unity_SHC]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
Vector 336 [unity_WorldTransformParams]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer cb0[14], immediateIndexed
      dcl_constantbuffer cb1[5], immediateIndexed
      dcl_constantbuffer cb2[45], immediateIndexed
      dcl_constantbuffer cb3[22], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyz
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: mad o0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   4: eq r0.x, cb0[13].z, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[11].xxxy, cb0[11].zzzw
   7: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  13: mov o7.xyz, r0.xyzx
  14: mul r0.xyz, v4.yyyy, cb3[13].xyzx
  15: mad r0.xyz, cb3[12].xyzx, v4.xxxx, r0.xyzx
  16: mad r0.xyz, cb3[14].xyzx, v4.zzzz, r0.xyzx
  17: dp3 r0.w, r0.xyzx, r0.xyzx
  18: rsq r0.w, r0.w
  19: mul r0.xyz, r0.wwww, r0.xyzx
  20: mov o3.xyz, r0.xyzx
  21: mov o3.w, l(0)
  22: mul r1.x, v1.x, cb3[16].x
  23: mul r1.y, v1.x, cb3[17].x
  24: mul r1.z, v1.x, cb3[18].x
  25: mul r2.x, v1.y, cb3[16].y
  26: mul r2.y, v1.y, cb3[17].y
  27: mul r2.z, v1.y, cb3[18].y
  28: add r1.xyz, r1.xyzx, r2.xyzx
  29: mul r2.x, v1.z, cb3[16].z
  30: mul r2.y, v1.z, cb3[17].z
  31: mul r2.z, v1.z, cb3[18].z
  32: add r1.xyz, r1.xyzx, r2.xyzx
  33: dp3 r0.w, r1.xyzx, r1.xyzx
  34: rsq r0.w, r0.w
  35: mul r1.xyz, r0.wwww, r1.xyzx
  36: mul r2.xyz, r0.yzxy, r1.zxyz
  37: mad r0.xyz, r1.yzxy, r0.zxyz, -r2.xyzx
  38: mul r0.w, v4.w, cb3[21].w
  39: mul o4.xyz, r0.wwww, r0.xyzx
  40: mov o4.w, l(0)
  41: mov o5.xyz, r1.xyzx
  42: mov o5.w, l(0)
  43: mul r0.x, r1.y, r1.y
  44: mad r0.x, r1.x, r1.x, -r0.x
  45: mul r1.xyzw, r1.yzzx, r1.xyzz
  46: dp4 r2.x, cb2[41].xyzw, r1.xyzw
  47: dp4 r2.y, cb2[42].xyzw, r1.xyzw
  48: dp4 r2.z, cb2[43].xyzw, r1.xyzw
  49: mad o6.xyz, cb2[44].xyzx, r0.xxxx, r2.xyzx
  50: mov o6.w, l(0)
  51: ret 
// Approximately 0 instruction slots used
"
}
}
Program "fp" {
SubProgram "opengl " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
"// shader disassembly not supported on opengl"
}
SubProgram "d3d9 " {
// Stats: 38 math, 2 textures
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
Vector 5 [_Color]
Float 7 [_Glossiness]
Float 6 [_Metallic]
Float 8 [_OcclusionStrength]
Vector 3 [unity_ColorSpaceDielectricSpec]
Vector 4 [unity_ColorSpaceLuminance]
Vector 2 [unity_SHAb]
Vector 1 [unity_SHAg]
Vector 0 [unity_SHAr]
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_OcclusionMap] 2D 1
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D _OcclusionMap;
//   float _OcclusionStrength;
//   float4 unity_ColorSpaceDielectricSpec;
//   float4 unity_ColorSpaceLuminance;
//   float4 unity_SHAb;
//   float4 unity_SHAg;
//   float4 unity_SHAr;
//
//
// Registers:
//
//   Name                           Reg   Size
//   ------------------------------ ----- ----
//   unity_SHAr                     c0       1
//   unity_SHAg                     c1       1
//   unity_SHAb                     c2       1
//   unity_ColorSpaceDielectricSpec c3       1
//   unity_ColorSpaceLuminance      c4       1
//   _Color                         c5       1
//   _Metallic                      c6       1
//   _Glossiness                    c7       1
//   _OcclusionStrength             c8       1
//   _MainTex                       s0       1
//   _OcclusionMap                  s1       1
//

    ps_3_0
    def c9, 1.05499995, -0.0549999997, 0, 0
    def c10, 1, 0, 0.416666657, 0.5
    dcl_texcoord v0.xy
    dcl_texcoord4_pp v1.xyz
    dcl_texcoord5_pp v2.xyz
    dcl_2d s0
    dcl_2d s1
    texld r0, v0, s0
    mov r1, c3
    mad_pp r2.xyz, c5, r0, -r1
    mul_pp r0.xyz, r0, c5
    mad_pp oC1.xyz, c6.x, r2, r1
    nrm_pp r2.xyz, v1
    mov r2.w, c10.x
    dp4_pp r1.x, c0, r2
    dp4_pp r1.y, c1, r2
    dp4_pp r1.z, c2, r2
    mad_pp oC2, r2, c10.wwwx, c10.wwwy
    add_pp r1.xyz, r1, v2
    max_pp r2.xyz, r1, c10.y
    log_pp r1.x, r2.x
    log_pp r1.y, r2.y
    log_pp r1.z, r2.z
    mul_pp r1.xyz, r1, c10.z
    exp_pp r3.x, r1.x
    exp_pp r3.y, r1.y
    exp_pp r3.z, r1.z
    mad_pp r1.xyz, r3, c9.x, c9.y
    max_pp r3.xyz, r1, c10.y
    abs r0.w, c4.w
    cmp_pp r1.xyz, -r0.w, r3, r2
    texld_pp r2, v0, s1
    mov r2.x, c10.x
    add_pp r0.w, r2.x, -c8.x
    mad_pp r2.w, r2.y, c8.x, r0.w
    mul_pp r1.xyz, r1, r2.w
    mad_pp r0.w, c6.x, -r1.w, r1.w
    mul_pp r2.xyz, r0.w, r0
    mul_pp r0.xyz, r1, r2
    mov_pp oC0, r2
    exp_pp oC3.x, -r0.x
    exp_pp oC3.y, -r0.y
    exp_pp oC3.z, -r0.z
    mov_pp oC1.w, c7.x
    mov_pp oC3.w, c10.x

// approximately 40 instruction slots used (2 texture, 38 arithmetic)
"
}
SubProgram "d3d11 " {
// Stats: 25 math, 2 textures
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_OcclusionMap] 2D 1
ConstBuffer "$Globals" 240
Vector 32 [unity_ColorSpaceDielectricSpec]
Vector 48 [unity_ColorSpaceLuminance]
Vector 128 [_Color]
Float 200 [_Metallic]
Float 204 [_Glossiness]
Float 208 [_OcclusionStrength]
ConstBuffer "UnityLighting" 720
Vector 608 [unity_SHAr]
Vector 624 [unity_SHAg]
Vector 640 [unity_SHAb]
BindCB  "$Globals" 0
BindCB  "UnityLighting" 1
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer cb0[14], immediateIndexed
      dcl_constantbuffer cb1[41], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 3
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s1
   1: add r0.x, -cb0[13].x, l(1.000000)
   2: mad r0.w, r0.y, cb0[13].x, r0.x
   3: mad r1.x, -cb0[12].z, cb0[2].w, cb0[2].w
   4: sample r2.xyzw, v1.xyxx, t0.xyzw, s0
   5: mul r1.yzw, r2.xxyz, cb0[8].xxyz
   6: mad r2.xyz, cb0[8].xyzx, r2.xyzx, -cb0[2].xyzx
   7: mad o1.xyz, cb0[12].zzzz, r2.xyzx, cb0[2].xyzx
   8: mul r0.xyz, r1.xxxx, r1.yzwy
   9: mov o0.xyzw, r0.xyzw
  10: mov o1.w, cb0[12].w
  11: dp3 r1.x, v5.xyzx, v5.xyzx
  12: rsq r1.x, r1.x
  13: mul r1.xyz, r1.xxxx, v5.xyzx
  14: mov r1.w, l(1.000000)
  15: mad o2.xyzw, r1.xyzw, l(0.500000, 0.500000, 0.500000, 1.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  16: dp4 r2.x, cb1[38].xyzw, r1.xyzw
  17: dp4 r2.y, cb1[39].xyzw, r1.xyzw
  18: dp4 r2.z, cb1[40].xyzw, r1.xyzw
  19: add r1.xyz, r2.xyzx, v6.xyzx
  20: max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  21: log r2.xyz, r1.xyzx
  22: mul r2.xyz, r2.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  23: exp r2.xyz, r2.xyzx
  24: mad r2.xyz, r2.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  25: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  26: eq r1.w, cb0[3].w, l(0.000000)
  27: movc r1.xyz, r1.wwww, r2.xyzx, r1.xyzx
  28: mul r1.xyz, r0.wwww, r1.xyzx
  29: mul r0.xyz, r0.xyzx, r1.xyzx
  30: exp o3.xyz, -r0.xyzx
  31: mov o3.w, l(1.000000)
  32: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" }
"// shader disassembly not supported on opengl"
}
SubProgram "d3d9 " {
// Stats: 39 math, 3 textures
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" }
Vector 5 [_Color]
Vector 9 [_EmissionColor]
Float 7 [_Glossiness]
Float 6 [_Metallic]
Float 8 [_OcclusionStrength]
Vector 3 [unity_ColorSpaceDielectricSpec]
Vector 4 [unity_ColorSpaceLuminance]
Vector 2 [unity_SHAb]
Vector 1 [unity_SHAg]
Vector 0 [unity_SHAr]
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_OcclusionMap] 2D 1
SetTexture 2 [_EmissionMap] 2D 2
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _Color;
//   float4 _EmissionColor;
//   sampler2D _EmissionMap;
//   float _Glossiness;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D _OcclusionMap;
//   float _OcclusionStrength;
//   float4 unity_ColorSpaceDielectricSpec;
//   float4 unity_ColorSpaceLuminance;
//   float4 unity_SHAb;
//   float4 unity_SHAg;
//   float4 unity_SHAr;
//
//
// Registers:
//
//   Name                           Reg   Size
//   ------------------------------ ----- ----
//   unity_SHAr                     c0       1
//   unity_SHAg                     c1       1
//   unity_SHAb                     c2       1
//   unity_ColorSpaceDielectricSpec c3       1
//   unity_ColorSpaceLuminance      c4       1
//   _Color                         c5       1
//   _Metallic                      c6       1
//   _Glossiness                    c7       1
//   _OcclusionStrength             c8       1
//   _EmissionColor                 c9       1
//   _MainTex                       s0       1
//   _OcclusionMap                  s1       1
//   _EmissionMap                   s2       1
//

    ps_3_0
    def c10, 1.05499995, -0.0549999997, 0, 0
    def c11, 1, 0, 0.416666657, 0.5
    dcl_texcoord v0.xy
    dcl_texcoord4_pp v1.xyz
    dcl_texcoord5_pp v2.xyz
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    texld r0, v0, s0
    mov r1, c3
    mad_pp r2.xyz, c5, r0, -r1
    mul_pp r0.xyz, r0, c5
    mad_pp oC1.xyz, c6.x, r2, r1
    nrm_pp r2.xyz, v1
    mov r2.w, c11.x
    dp4_pp r1.x, c0, r2
    dp4_pp r1.y, c1, r2
    dp4_pp r1.z, c2, r2
    mad_pp oC2, r2, c11.wwwx, c11.wwwy
    add_pp r1.xyz, r1, v2
    max_pp r2.xyz, r1, c11.y
    log_pp r1.x, r2.x
    log_pp r1.y, r2.y
    log_pp r1.z, r2.z
    mul_pp r1.xyz, r1, c11.z
    exp_pp r3.x, r1.x
    exp_pp r3.y, r1.y
    exp_pp r3.z, r1.z
    mad_pp r1.xyz, r3, c10.x, c10.y
    max_pp r3.xyz, r1, c11.y
    abs r0.w, c4.w
    cmp_pp r1.xyz, -r0.w, r3, r2
    texld_pp r2, v0, s1
    mov r2.x, c11.x
    add_pp r0.w, r2.x, -c8.x
    mad_pp r2.w, r2.y, c8.x, r0.w
    mul_pp r1.xyz, r1, r2.w
    mad_pp r0.w, c6.x, -r1.w, r1.w
    mul_pp r2.xyz, r0.w, r0
    texld r0, v0, s2
    mul_pp r0.xyz, r0, c9
    mad_pp r0.xyz, r2, r1, r0
    mov_pp oC0, r2
    exp_pp oC3.x, -r0.x
    exp_pp oC3.y, -r0.y
    exp_pp oC3.z, -r0.z
    mov_pp oC1.w, c7.x
    mov_pp oC3.w, c11.x

// approximately 42 instruction slots used (3 texture, 39 arithmetic)
"
}
SubProgram "d3d11 " {
// Stats: 26 math, 3 textures
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" }
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_OcclusionMap] 2D 1
SetTexture 2 [_EmissionMap] 2D 2
ConstBuffer "$Globals" 240
Vector 32 [unity_ColorSpaceDielectricSpec]
Vector 48 [unity_ColorSpaceLuminance]
Vector 128 [_Color]
Float 200 [_Metallic]
Float 204 [_Glossiness]
Float 208 [_OcclusionStrength]
Vector 224 [_EmissionColor]
ConstBuffer "UnityLighting" 720
Vector 608 [unity_SHAr]
Vector 624 [unity_SHAg]
Vector 640 [unity_SHAb]
BindCB  "$Globals" 0
BindCB  "UnityLighting" 1
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer cb0[15], immediateIndexed
      dcl_constantbuffer cb1[41], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 3
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s1
   1: add r0.x, -cb0[13].x, l(1.000000)
   2: mad r0.w, r0.y, cb0[13].x, r0.x
   3: mad r1.x, -cb0[12].z, cb0[2].w, cb0[2].w
   4: sample r2.xyzw, v1.xyxx, t0.xyzw, s0
   5: mul r1.yzw, r2.xxyz, cb0[8].xxyz
   6: mad r2.xyz, cb0[8].xyzx, r2.xyzx, -cb0[2].xyzx
   7: mad o1.xyz, cb0[12].zzzz, r2.xyzx, cb0[2].xyzx
   8: mul r0.xyz, r1.xxxx, r1.yzwy
   9: mov o0.xyzw, r0.xyzw
  10: mov o1.w, cb0[12].w
  11: dp3 r1.x, v5.xyzx, v5.xyzx
  12: rsq r1.x, r1.x
  13: mul r1.xyz, r1.xxxx, v5.xyzx
  14: mov r1.w, l(1.000000)
  15: mad o2.xyzw, r1.xyzw, l(0.500000, 0.500000, 0.500000, 1.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  16: dp4 r2.x, cb1[38].xyzw, r1.xyzw
  17: dp4 r2.y, cb1[39].xyzw, r1.xyzw
  18: dp4 r2.z, cb1[40].xyzw, r1.xyzw
  19: add r1.xyz, r2.xyzx, v6.xyzx
  20: max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  21: log r2.xyz, r1.xyzx
  22: mul r2.xyz, r2.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  23: exp r2.xyz, r2.xyzx
  24: mad r2.xyz, r2.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  25: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  26: eq r1.w, cb0[3].w, l(0.000000)
  27: movc r1.xyz, r1.wwww, r2.xyzx, r1.xyzx
  28: mul r1.xyz, r0.wwww, r1.xyzx
  29: sample r2.xyzw, v1.xyxx, t2.xyzw, s2
  30: mul r2.xyz, r2.xyzx, cb0[14].xyzx
  31: mad r0.xyz, r0.xyzx, r1.xyzx, r2.xyzx
  32: exp o3.xyz, -r0.xyzx
  33: mov o3.w, l(1.000000)
  34: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_ALPHABLEND_ON" }
"// shader disassembly not supported on opengl"
}
SubProgram "d3d9 " {
// Stats: 38 math, 2 textures
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_ALPHABLEND_ON" }
Vector 5 [_Color]
Float 7 [_Glossiness]
Float 6 [_Metallic]
Float 8 [_OcclusionStrength]
Vector 3 [unity_ColorSpaceDielectricSpec]
Vector 4 [unity_ColorSpaceLuminance]
Vector 2 [unity_SHAb]
Vector 1 [unity_SHAg]
Vector 0 [unity_SHAr]
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_OcclusionMap] 2D 1
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D _OcclusionMap;
//   float _OcclusionStrength;
//   float4 unity_ColorSpaceDielectricSpec;
//   float4 unity_ColorSpaceLuminance;
//   float4 unity_SHAb;
//   float4 unity_SHAg;
//   float4 unity_SHAr;
//
//
// Registers:
//
//   Name                           Reg   Size
//   ------------------------------ ----- ----
//   unity_SHAr                     c0       1
//   unity_SHAg                     c1       1
//   unity_SHAb                     c2       1
//   unity_ColorSpaceDielectricSpec c3       1
//   unity_ColorSpaceLuminance      c4       1
//   _Color                         c5       1
//   _Metallic                      c6       1
//   _Glossiness                    c7       1
//   _OcclusionStrength             c8       1
//   _MainTex                       s0       1
//   _OcclusionMap                  s1       1
//

    ps_3_0
    def c9, 1.05499995, -0.0549999997, 0, 0
    def c10, 1, 0, 0.416666657, 0.5
    dcl_texcoord v0.xy
    dcl_texcoord4_pp v1.xyz
    dcl_texcoord5_pp v2.xyz
    dcl_2d s0
    dcl_2d s1
    texld r0, v0, s0
    mov r1, c3
    mad_pp r2.xyz, c5, r0, -r1
    mul_pp r0.xyz, r0, c5
    mad_pp oC1.xyz, c6.x, r2, r1
    nrm_pp r2.xyz, v1
    mov r2.w, c10.x
    dp4_pp r1.x, c0, r2
    dp4_pp r1.y, c1, r2
    dp4_pp r1.z, c2, r2
    mad_pp oC2, r2, c10.wwwx, c10.wwwy
    add_pp r1.xyz, r1, v2
    max_pp r2.xyz, r1, c10.y
    log_pp r1.x, r2.x
    log_pp r1.y, r2.y
    log_pp r1.z, r2.z
    mul_pp r1.xyz, r1, c10.z
    exp_pp r3.x, r1.x
    exp_pp r3.y, r1.y
    exp_pp r3.z, r1.z
    mad_pp r1.xyz, r3, c9.x, c9.y
    max_pp r3.xyz, r1, c10.y
    abs r0.w, c4.w
    cmp_pp r1.xyz, -r0.w, r3, r2
    texld_pp r2, v0, s1
    mov r2.x, c10.x
    add_pp r0.w, r2.x, -c8.x
    mad_pp r2.w, r2.y, c8.x, r0.w
    mul_pp r1.xyz, r1, r2.w
    mad_pp r0.w, c6.x, -r1.w, r1.w
    mul_pp r2.xyz, r0.w, r0
    mul_pp r0.xyz, r1, r2
    mov_pp oC0, r2
    exp_pp oC3.x, -r0.x
    exp_pp oC3.y, -r0.y
    exp_pp oC3.z, -r0.z
    mov_pp oC1.w, c7.x
    mov_pp oC3.w, c10.x

// approximately 40 instruction slots used (2 texture, 38 arithmetic)
"
}
SubProgram "d3d11 " {
// Stats: 25 math, 2 textures
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_ALPHABLEND_ON" }
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_OcclusionMap] 2D 1
ConstBuffer "$Globals" 240
Vector 32 [unity_ColorSpaceDielectricSpec]
Vector 48 [unity_ColorSpaceLuminance]
Vector 128 [_Color]
Float 200 [_Metallic]
Float 204 [_Glossiness]
Float 208 [_OcclusionStrength]
ConstBuffer "UnityLighting" 720
Vector 608 [unity_SHAr]
Vector 624 [unity_SHAg]
Vector 640 [unity_SHAb]
BindCB  "$Globals" 0
BindCB  "UnityLighting" 1
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer cb0[14], immediateIndexed
      dcl_constantbuffer cb1[41], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 3
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s1
   1: add r0.x, -cb0[13].x, l(1.000000)
   2: mad r0.w, r0.y, cb0[13].x, r0.x
   3: mad r1.x, -cb0[12].z, cb0[2].w, cb0[2].w
   4: sample r2.xyzw, v1.xyxx, t0.xyzw, s0
   5: mul r1.yzw, r2.xxyz, cb0[8].xxyz
   6: mad r2.xyz, cb0[8].xyzx, r2.xyzx, -cb0[2].xyzx
   7: mad o1.xyz, cb0[12].zzzz, r2.xyzx, cb0[2].xyzx
   8: mul r0.xyz, r1.xxxx, r1.yzwy
   9: mov o0.xyzw, r0.xyzw
  10: mov o1.w, cb0[12].w
  11: dp3 r1.x, v5.xyzx, v5.xyzx
  12: rsq r1.x, r1.x
  13: mul r1.xyz, r1.xxxx, v5.xyzx
  14: mov r1.w, l(1.000000)
  15: mad o2.xyzw, r1.xyzw, l(0.500000, 0.500000, 0.500000, 1.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  16: dp4 r2.x, cb1[38].xyzw, r1.xyzw
  17: dp4 r2.y, cb1[39].xyzw, r1.xyzw
  18: dp4 r2.z, cb1[40].xyzw, r1.xyzw
  19: add r1.xyz, r2.xyzx, v6.xyzx
  20: max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  21: log r2.xyz, r1.xyzx
  22: mul r2.xyz, r2.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  23: exp r2.xyz, r2.xyzx
  24: mad r2.xyz, r2.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  25: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  26: eq r1.w, cb0[3].w, l(0.000000)
  27: movc r1.xyz, r1.wwww, r2.xyzx, r1.xyzx
  28: mul r1.xyz, r0.wwww, r1.xyzx
  29: mul r0.xyz, r0.xyzx, r1.xyzx
  30: exp o3.xyz, -r0.xyzx
  31: mov o3.w, l(1.000000)
  32: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "_ALPHABLEND_ON" }
"// shader disassembly not supported on opengl"
}
SubProgram "d3d9 " {
// Stats: 39 math, 3 textures
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "_ALPHABLEND_ON" }
Vector 5 [_Color]
Vector 9 [_EmissionColor]
Float 7 [_Glossiness]
Float 6 [_Metallic]
Float 8 [_OcclusionStrength]
Vector 3 [unity_ColorSpaceDielectricSpec]
Vector 4 [unity_ColorSpaceLuminance]
Vector 2 [unity_SHAb]
Vector 1 [unity_SHAg]
Vector 0 [unity_SHAr]
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_OcclusionMap] 2D 1
SetTexture 2 [_EmissionMap] 2D 2
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _Color;
//   float4 _EmissionColor;
//   sampler2D _EmissionMap;
//   float _Glossiness;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D _OcclusionMap;
//   float _OcclusionStrength;
//   float4 unity_ColorSpaceDielectricSpec;
//   float4 unity_ColorSpaceLuminance;
//   float4 unity_SHAb;
//   float4 unity_SHAg;
//   float4 unity_SHAr;
//
//
// Registers:
//
//   Name                           Reg   Size
//   ------------------------------ ----- ----
//   unity_SHAr                     c0       1
//   unity_SHAg                     c1       1
//   unity_SHAb                     c2       1
//   unity_ColorSpaceDielectricSpec c3       1
//   unity_ColorSpaceLuminance      c4       1
//   _Color                         c5       1
//   _Metallic                      c6       1
//   _Glossiness                    c7       1
//   _OcclusionStrength             c8       1
//   _EmissionColor                 c9       1
//   _MainTex                       s0       1
//   _OcclusionMap                  s1       1
//   _EmissionMap                   s2       1
//

    ps_3_0
    def c10, 1.05499995, -0.0549999997, 0, 0
    def c11, 1, 0, 0.416666657, 0.5
    dcl_texcoord v0.xy
    dcl_texcoord4_pp v1.xyz
    dcl_texcoord5_pp v2.xyz
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    texld r0, v0, s0
    mov r1, c3
    mad_pp r2.xyz, c5, r0, -r1
    mul_pp r0.xyz, r0, c5
    mad_pp oC1.xyz, c6.x, r2, r1
    nrm_pp r2.xyz, v1
    mov r2.w, c11.x
    dp4_pp r1.x, c0, r2
    dp4_pp r1.y, c1, r2
    dp4_pp r1.z, c2, r2
    mad_pp oC2, r2, c11.wwwx, c11.wwwy
    add_pp r1.xyz, r1, v2
    max_pp r2.xyz, r1, c11.y
    log_pp r1.x, r2.x
    log_pp r1.y, r2.y
    log_pp r1.z, r2.z
    mul_pp r1.xyz, r1, c11.z
    exp_pp r3.x, r1.x
    exp_pp r3.y, r1.y
    exp_pp r3.z, r1.z
    mad_pp r1.xyz, r3, c10.x, c10.y
    max_pp r3.xyz, r1, c11.y
    abs r0.w, c4.w
    cmp_pp r1.xyz, -r0.w, r3, r2
    texld_pp r2, v0, s1
    mov r2.x, c11.x
    add_pp r0.w, r2.x, -c8.x
    mad_pp r2.w, r2.y, c8.x, r0.w
    mul_pp r1.xyz, r1, r2.w
    mad_pp r0.w, c6.x, -r1.w, r1.w
    mul_pp r2.xyz, r0.w, r0
    texld r0, v0, s2
    mul_pp r0.xyz, r0, c9
    mad_pp r0.xyz, r2, r1, r0
    mov_pp oC0, r2
    exp_pp oC3.x, -r0.x
    exp_pp oC3.y, -r0.y
    exp_pp oC3.z, -r0.z
    mov_pp oC1.w, c7.x
    mov_pp oC3.w, c11.x

// approximately 42 instruction slots used (3 texture, 39 arithmetic)
"
}
SubProgram "d3d11 " {
// Stats: 26 math, 3 textures
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "_ALPHABLEND_ON" }
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_OcclusionMap] 2D 1
SetTexture 2 [_EmissionMap] 2D 2
ConstBuffer "$Globals" 240
Vector 32 [unity_ColorSpaceDielectricSpec]
Vector 48 [unity_ColorSpaceLuminance]
Vector 128 [_Color]
Float 200 [_Metallic]
Float 204 [_Glossiness]
Float 208 [_OcclusionStrength]
Vector 224 [_EmissionColor]
ConstBuffer "UnityLighting" 720
Vector 608 [unity_SHAr]
Vector 624 [unity_SHAg]
Vector 640 [unity_SHAb]
BindCB  "$Globals" 0
BindCB  "UnityLighting" 1
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer cb0[15], immediateIndexed
      dcl_constantbuffer cb1[41], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 3
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s1
   1: add r0.x, -cb0[13].x, l(1.000000)
   2: mad r0.w, r0.y, cb0[13].x, r0.x
   3: mad r1.x, -cb0[12].z, cb0[2].w, cb0[2].w
   4: sample r2.xyzw, v1.xyxx, t0.xyzw, s0
   5: mul r1.yzw, r2.xxyz, cb0[8].xxyz
   6: mad r2.xyz, cb0[8].xyzx, r2.xyzx, -cb0[2].xyzx
   7: mad o1.xyz, cb0[12].zzzz, r2.xyzx, cb0[2].xyzx
   8: mul r0.xyz, r1.xxxx, r1.yzwy
   9: mov o0.xyzw, r0.xyzw
  10: mov o1.w, cb0[12].w
  11: dp3 r1.x, v5.xyzx, v5.xyzx
  12: rsq r1.x, r1.x
  13: mul r1.xyz, r1.xxxx, v5.xyzx
  14: mov r1.w, l(1.000000)
  15: mad o2.xyzw, r1.xyzw, l(0.500000, 0.500000, 0.500000, 1.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  16: dp4 r2.x, cb1[38].xyzw, r1.xyzw
  17: dp4 r2.y, cb1[39].xyzw, r1.xyzw
  18: dp4 r2.z, cb1[40].xyzw, r1.xyzw
  19: add r1.xyz, r2.xyzx, v6.xyzx
  20: max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  21: log r2.xyz, r1.xyzx
  22: mul r2.xyz, r2.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  23: exp r2.xyz, r2.xyzx
  24: mad r2.xyz, r2.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  25: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  26: eq r1.w, cb0[3].w, l(0.000000)
  27: movc r1.xyz, r1.wwww, r2.xyzx, r1.xyzx
  28: mul r1.xyz, r0.wwww, r1.xyzx
  29: sample r2.xyzw, v1.xyxx, t2.xyzw, s2
  30: mul r2.xyz, r2.xyzx, cb0[14].xyzx
  31: mad r0.xyz, r0.xyzx, r1.xyzx, r2.xyzx
  32: exp o3.xyz, -r0.xyzx
  33: mov o3.w, l(1.000000)
  34: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_OFF" }
"// shader disassembly not supported on opengl"
}
SubProgram "d3d9 " {
// Stats: 38 math, 2 textures
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_OFF" }
Vector 5 [_Color]
Float 7 [_Glossiness]
Float 6 [_Metallic]
Float 8 [_OcclusionStrength]
Vector 3 [unity_ColorSpaceDielectricSpec]
Vector 4 [unity_ColorSpaceLuminance]
Vector 2 [unity_SHAb]
Vector 1 [unity_SHAg]
Vector 0 [unity_SHAr]
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_OcclusionMap] 2D 1
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D _OcclusionMap;
//   float _OcclusionStrength;
//   float4 unity_ColorSpaceDielectricSpec;
//   float4 unity_ColorSpaceLuminance;
//   float4 unity_SHAb;
//   float4 unity_SHAg;
//   float4 unity_SHAr;
//
//
// Registers:
//
//   Name                           Reg   Size
//   ------------------------------ ----- ----
//   unity_SHAr                     c0       1
//   unity_SHAg                     c1       1
//   unity_SHAb                     c2       1
//   unity_ColorSpaceDielectricSpec c3       1
//   unity_ColorSpaceLuminance      c4       1
//   _Color                         c5       1
//   _Metallic                      c6       1
//   _Glossiness                    c7       1
//   _OcclusionStrength             c8       1
//   _MainTex                       s0       1
//   _OcclusionMap                  s1       1
//

    ps_3_0
    def c9, 1.05499995, -0.0549999997, 0, 0
    def c10, 1, 0, 0.416666657, 0.5
    dcl_texcoord v0.xy
    dcl_texcoord4_pp v1.xyz
    dcl_texcoord5_pp v2.xyz
    dcl_2d s0
    dcl_2d s1
    texld r0, v0, s0
    mov r1, c3
    mad_pp r2.xyz, c5, r0, -r1
    mul_pp r0.xyz, r0, c5
    mad_pp oC1.xyz, c6.x, r2, r1
    nrm_pp r2.xyz, v1
    mov r2.w, c10.x
    dp4_pp r1.x, c0, r2
    dp4_pp r1.y, c1, r2
    dp4_pp r1.z, c2, r2
    mad_pp oC2, r2, c10.wwwx, c10.wwwy
    add_pp r1.xyz, r1, v2
    max_pp r2.xyz, r1, c10.y
    log_pp r1.x, r2.x
    log_pp r1.y, r2.y
    log_pp r1.z, r2.z
    mul_pp r1.xyz, r1, c10.z
    exp_pp r3.x, r1.x
    exp_pp r3.y, r1.y
    exp_pp r3.z, r1.z
    mad_pp r1.xyz, r3, c9.x, c9.y
    max_pp r3.xyz, r1, c10.y
    abs r0.w, c4.w
    cmp_pp r1.xyz, -r0.w, r3, r2
    texld_pp r2, v0, s1
    mov r2.x, c10.x
    add_pp r0.w, r2.x, -c8.x
    mad_pp r2.w, r2.y, c8.x, r0.w
    mul_pp r1.xyz, r1, r2.w
    mad_pp r0.w, c6.x, -r1.w, r1.w
    mul_pp r2.xyz, r0.w, r0
    mul_pp r0.xyz, r1, r2
    mov_pp oC0, r2
    exp_pp oC3.x, -r0.x
    exp_pp oC3.y, -r0.y
    exp_pp oC3.z, -r0.z
    mov_pp oC1.w, c7.x
    mov_pp oC3.w, c10.x

// approximately 40 instruction slots used (2 texture, 38 arithmetic)
"
}
SubProgram "d3d11 " {
// Stats: 25 math, 2 textures
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_OFF" }
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_OcclusionMap] 2D 1
ConstBuffer "$Globals" 240
Vector 32 [unity_ColorSpaceDielectricSpec]
Vector 48 [unity_ColorSpaceLuminance]
Vector 128 [_Color]
Float 200 [_Metallic]
Float 204 [_Glossiness]
Float 208 [_OcclusionStrength]
ConstBuffer "UnityLighting" 720
Vector 608 [unity_SHAr]
Vector 624 [unity_SHAg]
Vector 640 [unity_SHAb]
BindCB  "$Globals" 0
BindCB  "UnityLighting" 1
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer cb0[14], immediateIndexed
      dcl_constantbuffer cb1[41], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 3
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s1
   1: add r0.x, -cb0[13].x, l(1.000000)
   2: mad r0.w, r0.y, cb0[13].x, r0.x
   3: mad r1.x, -cb0[12].z, cb0[2].w, cb0[2].w
   4: sample r2.xyzw, v1.xyxx, t0.xyzw, s0
   5: mul r1.yzw, r2.xxyz, cb0[8].xxyz
   6: mad r2.xyz, cb0[8].xyzx, r2.xyzx, -cb0[2].xyzx
   7: mad o1.xyz, cb0[12].zzzz, r2.xyzx, cb0[2].xyzx
   8: mul r0.xyz, r1.xxxx, r1.yzwy
   9: mov o0.xyzw, r0.xyzw
  10: mov o1.w, cb0[12].w
  11: dp3 r1.x, v5.xyzx, v5.xyzx
  12: rsq r1.x, r1.x
  13: mul r1.xyz, r1.xxxx, v5.xyzx
  14: mov r1.w, l(1.000000)
  15: mad o2.xyzw, r1.xyzw, l(0.500000, 0.500000, 0.500000, 1.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  16: dp4 r2.x, cb1[38].xyzw, r1.xyzw
  17: dp4 r2.y, cb1[39].xyzw, r1.xyzw
  18: dp4 r2.z, cb1[40].xyzw, r1.xyzw
  19: add r1.xyz, r2.xyzx, v6.xyzx
  20: max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  21: log r2.xyz, r1.xyzx
  22: mul r2.xyz, r2.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  23: exp r2.xyz, r2.xyzx
  24: mad r2.xyz, r2.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  25: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  26: eq r1.w, cb0[3].w, l(0.000000)
  27: movc r1.xyz, r1.wwww, r2.xyzx, r1.xyzx
  28: mul r1.xyz, r0.wwww, r1.xyzx
  29: mul r0.xyz, r0.xyzx, r1.xyzx
  30: exp o3.xyz, -r0.xyzx
  31: mov o3.w, l(1.000000)
  32: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_OFF" "_EMISSION" }
"// shader disassembly not supported on opengl"
}
SubProgram "d3d9 " {
// Stats: 39 math, 3 textures
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_OFF" "_EMISSION" }
Vector 5 [_Color]
Vector 9 [_EmissionColor]
Float 7 [_Glossiness]
Float 6 [_Metallic]
Float 8 [_OcclusionStrength]
Vector 3 [unity_ColorSpaceDielectricSpec]
Vector 4 [unity_ColorSpaceLuminance]
Vector 2 [unity_SHAb]
Vector 1 [unity_SHAg]
Vector 0 [unity_SHAr]
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_OcclusionMap] 2D 1
SetTexture 2 [_EmissionMap] 2D 2
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _Color;
//   float4 _EmissionColor;
//   sampler2D _EmissionMap;
//   float _Glossiness;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D _OcclusionMap;
//   float _OcclusionStrength;
//   float4 unity_ColorSpaceDielectricSpec;
//   float4 unity_ColorSpaceLuminance;
//   float4 unity_SHAb;
//   float4 unity_SHAg;
//   float4 unity_SHAr;
//
//
// Registers:
//
//   Name                           Reg   Size
//   ------------------------------ ----- ----
//   unity_SHAr                     c0       1
//   unity_SHAg                     c1       1
//   unity_SHAb                     c2       1
//   unity_ColorSpaceDielectricSpec c3       1
//   unity_ColorSpaceLuminance      c4       1
//   _Color                         c5       1
//   _Metallic                      c6       1
//   _Glossiness                    c7       1
//   _OcclusionStrength             c8       1
//   _EmissionColor                 c9       1
//   _MainTex                       s0       1
//   _OcclusionMap                  s1       1
//   _EmissionMap                   s2       1
//

    ps_3_0
    def c10, 1.05499995, -0.0549999997, 0, 0
    def c11, 1, 0, 0.416666657, 0.5
    dcl_texcoord v0.xy
    dcl_texcoord4_pp v1.xyz
    dcl_texcoord5_pp v2.xyz
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    texld r0, v0, s0
    mov r1, c3
    mad_pp r2.xyz, c5, r0, -r1
    mul_pp r0.xyz, r0, c5
    mad_pp oC1.xyz, c6.x, r2, r1
    nrm_pp r2.xyz, v1
    mov r2.w, c11.x
    dp4_pp r1.x, c0, r2
    dp4_pp r1.y, c1, r2
    dp4_pp r1.z, c2, r2
    mad_pp oC2, r2, c11.wwwx, c11.wwwy
    add_pp r1.xyz, r1, v2
    max_pp r2.xyz, r1, c11.y
    log_pp r1.x, r2.x
    log_pp r1.y, r2.y
    log_pp r1.z, r2.z
    mul_pp r1.xyz, r1, c11.z
    exp_pp r3.x, r1.x
    exp_pp r3.y, r1.y
    exp_pp r3.z, r1.z
    mad_pp r1.xyz, r3, c10.x, c10.y
    max_pp r3.xyz, r1, c11.y
    abs r0.w, c4.w
    cmp_pp r1.xyz, -r0.w, r3, r2
    texld_pp r2, v0, s1
    mov r2.x, c11.x
    add_pp r0.w, r2.x, -c8.x
    mad_pp r2.w, r2.y, c8.x, r0.w
    mul_pp r1.xyz, r1, r2.w
    mad_pp r0.w, c6.x, -r1.w, r1.w
    mul_pp r2.xyz, r0.w, r0
    texld r0, v0, s2
    mul_pp r0.xyz, r0, c9
    mad_pp r0.xyz, r2, r1, r0
    mov_pp oC0, r2
    exp_pp oC3.x, -r0.x
    exp_pp oC3.y, -r0.y
    exp_pp oC3.z, -r0.z
    mov_pp oC1.w, c7.x
    mov_pp oC3.w, c11.x

// approximately 42 instruction slots used (3 texture, 39 arithmetic)
"
}
SubProgram "d3d11 " {
// Stats: 26 math, 3 textures
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_OFF" "_EMISSION" }
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_OcclusionMap] 2D 1
SetTexture 2 [_EmissionMap] 2D 2
ConstBuffer "$Globals" 240
Vector 32 [unity_ColorSpaceDielectricSpec]
Vector 48 [unity_ColorSpaceLuminance]
Vector 128 [_Color]
Float 200 [_Metallic]
Float 204 [_Glossiness]
Float 208 [_OcclusionStrength]
Vector 224 [_EmissionColor]
ConstBuffer "UnityLighting" 720
Vector 608 [unity_SHAr]
Vector 624 [unity_SHAg]
Vector 640 [unity_SHAb]
BindCB  "$Globals" 0
BindCB  "UnityLighting" 1
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer cb0[15], immediateIndexed
      dcl_constantbuffer cb1[41], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 3
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s1
   1: add r0.x, -cb0[13].x, l(1.000000)
   2: mad r0.w, r0.y, cb0[13].x, r0.x
   3: mad r1.x, -cb0[12].z, cb0[2].w, cb0[2].w
   4: sample r2.xyzw, v1.xyxx, t0.xyzw, s0
   5: mul r1.yzw, r2.xxyz, cb0[8].xxyz
   6: mad r2.xyz, cb0[8].xyzx, r2.xyzx, -cb0[2].xyzx
   7: mad o1.xyz, cb0[12].zzzz, r2.xyzx, cb0[2].xyzx
   8: mul r0.xyz, r1.xxxx, r1.yzwy
   9: mov o0.xyzw, r0.xyzw
  10: mov o1.w, cb0[12].w
  11: dp3 r1.x, v5.xyzx, v5.xyzx
  12: rsq r1.x, r1.x
  13: mul r1.xyz, r1.xxxx, v5.xyzx
  14: mov r1.w, l(1.000000)
  15: mad o2.xyzw, r1.xyzw, l(0.500000, 0.500000, 0.500000, 1.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  16: dp4 r2.x, cb1[38].xyzw, r1.xyzw
  17: dp4 r2.y, cb1[39].xyzw, r1.xyzw
  18: dp4 r2.z, cb1[40].xyzw, r1.xyzw
  19: add r1.xyz, r2.xyzx, v6.xyzx
  20: max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  21: log r2.xyz, r1.xyzx
  22: mul r2.xyz, r2.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  23: exp r2.xyz, r2.xyzx
  24: mad r2.xyz, r2.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  25: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  26: eq r1.w, cb0[3].w, l(0.000000)
  27: movc r1.xyz, r1.wwww, r2.xyzx, r1.xyzx
  28: mul r1.xyz, r0.wwww, r1.xyzx
  29: sample r2.xyzw, v1.xyxx, t2.xyzw, s2
  30: mul r2.xyz, r2.xyzx, cb0[14].xyzx
  31: mad r0.xyz, r0.xyzx, r1.xyzx, r2.xyzx
  32: exp o3.xyz, -r0.xyzx
  33: mov o3.w, l(1.000000)
  34: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_OFF" "_ALPHABLEND_ON" }
"// shader disassembly not supported on opengl"
}
SubProgram "d3d9 " {
// Stats: 38 math, 2 textures
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_OFF" "_ALPHABLEND_ON" }
Vector 5 [_Color]
Float 7 [_Glossiness]
Float 6 [_Metallic]
Float 8 [_OcclusionStrength]
Vector 3 [unity_ColorSpaceDielectricSpec]
Vector 4 [unity_ColorSpaceLuminance]
Vector 2 [unity_SHAb]
Vector 1 [unity_SHAg]
Vector 0 [unity_SHAr]
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_OcclusionMap] 2D 1
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D _OcclusionMap;
//   float _OcclusionStrength;
//   float4 unity_ColorSpaceDielectricSpec;
//   float4 unity_ColorSpaceLuminance;
//   float4 unity_SHAb;
//   float4 unity_SHAg;
//   float4 unity_SHAr;
//
//
// Registers:
//
//   Name                           Reg   Size
//   ------------------------------ ----- ----
//   unity_SHAr                     c0       1
//   unity_SHAg                     c1       1
//   unity_SHAb                     c2       1
//   unity_ColorSpaceDielectricSpec c3       1
//   unity_ColorSpaceLuminance      c4       1
//   _Color                         c5       1
//   _Metallic                      c6       1
//   _Glossiness                    c7       1
//   _OcclusionStrength             c8       1
//   _MainTex                       s0       1
//   _OcclusionMap                  s1       1
//

    ps_3_0
    def c9, 1.05499995, -0.0549999997, 0, 0
    def c10, 1, 0, 0.416666657, 0.5
    dcl_texcoord v0.xy
    dcl_texcoord4_pp v1.xyz
    dcl_texcoord5_pp v2.xyz
    dcl_2d s0
    dcl_2d s1
    texld r0, v0, s0
    mov r1, c3
    mad_pp r2.xyz, c5, r0, -r1
    mul_pp r0.xyz, r0, c5
    mad_pp oC1.xyz, c6.x, r2, r1
    nrm_pp r2.xyz, v1
    mov r2.w, c10.x
    dp4_pp r1.x, c0, r2
    dp4_pp r1.y, c1, r2
    dp4_pp r1.z, c2, r2
    mad_pp oC2, r2, c10.wwwx, c10.wwwy
    add_pp r1.xyz, r1, v2
    max_pp r2.xyz, r1, c10.y
    log_pp r1.x, r2.x
    log_pp r1.y, r2.y
    log_pp r1.z, r2.z
    mul_pp r1.xyz, r1, c10.z
    exp_pp r3.x, r1.x
    exp_pp r3.y, r1.y
    exp_pp r3.z, r1.z
    mad_pp r1.xyz, r3, c9.x, c9.y
    max_pp r3.xyz, r1, c10.y
    abs r0.w, c4.w
    cmp_pp r1.xyz, -r0.w, r3, r2
    texld_pp r2, v0, s1
    mov r2.x, c10.x
    add_pp r0.w, r2.x, -c8.x
    mad_pp r2.w, r2.y, c8.x, r0.w
    mul_pp r1.xyz, r1, r2.w
    mad_pp r0.w, c6.x, -r1.w, r1.w
    mul_pp r2.xyz, r0.w, r0
    mul_pp r0.xyz, r1, r2
    mov_pp oC0, r2
    exp_pp oC3.x, -r0.x
    exp_pp oC3.y, -r0.y
    exp_pp oC3.z, -r0.z
    mov_pp oC1.w, c7.x
    mov_pp oC3.w, c10.x

// approximately 40 instruction slots used (2 texture, 38 arithmetic)
"
}
SubProgram "d3d11 " {
// Stats: 25 math, 2 textures
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_OFF" "_ALPHABLEND_ON" }
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_OcclusionMap] 2D 1
ConstBuffer "$Globals" 240
Vector 32 [unity_ColorSpaceDielectricSpec]
Vector 48 [unity_ColorSpaceLuminance]
Vector 128 [_Color]
Float 200 [_Metallic]
Float 204 [_Glossiness]
Float 208 [_OcclusionStrength]
ConstBuffer "UnityLighting" 720
Vector 608 [unity_SHAr]
Vector 624 [unity_SHAg]
Vector 640 [unity_SHAb]
BindCB  "$Globals" 0
BindCB  "UnityLighting" 1
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer cb0[14], immediateIndexed
      dcl_constantbuffer cb1[41], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 3
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s1
   1: add r0.x, -cb0[13].x, l(1.000000)
   2: mad r0.w, r0.y, cb0[13].x, r0.x
   3: mad r1.x, -cb0[12].z, cb0[2].w, cb0[2].w
   4: sample r2.xyzw, v1.xyxx, t0.xyzw, s0
   5: mul r1.yzw, r2.xxyz, cb0[8].xxyz
   6: mad r2.xyz, cb0[8].xyzx, r2.xyzx, -cb0[2].xyzx
   7: mad o1.xyz, cb0[12].zzzz, r2.xyzx, cb0[2].xyzx
   8: mul r0.xyz, r1.xxxx, r1.yzwy
   9: mov o0.xyzw, r0.xyzw
  10: mov o1.w, cb0[12].w
  11: dp3 r1.x, v5.xyzx, v5.xyzx
  12: rsq r1.x, r1.x
  13: mul r1.xyz, r1.xxxx, v5.xyzx
  14: mov r1.w, l(1.000000)
  15: mad o2.xyzw, r1.xyzw, l(0.500000, 0.500000, 0.500000, 1.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  16: dp4 r2.x, cb1[38].xyzw, r1.xyzw
  17: dp4 r2.y, cb1[39].xyzw, r1.xyzw
  18: dp4 r2.z, cb1[40].xyzw, r1.xyzw
  19: add r1.xyz, r2.xyzx, v6.xyzx
  20: max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  21: log r2.xyz, r1.xyzx
  22: mul r2.xyz, r2.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  23: exp r2.xyz, r2.xyzx
  24: mad r2.xyz, r2.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  25: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  26: eq r1.w, cb0[3].w, l(0.000000)
  27: movc r1.xyz, r1.wwww, r2.xyzx, r1.xyzx
  28: mul r1.xyz, r0.wwww, r1.xyzx
  29: mul r0.xyz, r0.xyzx, r1.xyzx
  30: exp o3.xyz, -r0.xyzx
  31: mov o3.w, l(1.000000)
  32: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "_ALPHABLEND_ON" }
"// shader disassembly not supported on opengl"
}
SubProgram "d3d9 " {
// Stats: 39 math, 3 textures
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "_ALPHABLEND_ON" }
Vector 5 [_Color]
Vector 9 [_EmissionColor]
Float 7 [_Glossiness]
Float 6 [_Metallic]
Float 8 [_OcclusionStrength]
Vector 3 [unity_ColorSpaceDielectricSpec]
Vector 4 [unity_ColorSpaceLuminance]
Vector 2 [unity_SHAb]
Vector 1 [unity_SHAg]
Vector 0 [unity_SHAr]
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_OcclusionMap] 2D 1
SetTexture 2 [_EmissionMap] 2D 2
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _Color;
//   float4 _EmissionColor;
//   sampler2D _EmissionMap;
//   float _Glossiness;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D _OcclusionMap;
//   float _OcclusionStrength;
//   float4 unity_ColorSpaceDielectricSpec;
//   float4 unity_ColorSpaceLuminance;
//   float4 unity_SHAb;
//   float4 unity_SHAg;
//   float4 unity_SHAr;
//
//
// Registers:
//
//   Name                           Reg   Size
//   ------------------------------ ----- ----
//   unity_SHAr                     c0       1
//   unity_SHAg                     c1       1
//   unity_SHAb                     c2       1
//   unity_ColorSpaceDielectricSpec c3       1
//   unity_ColorSpaceLuminance      c4       1
//   _Color                         c5       1
//   _Metallic                      c6       1
//   _Glossiness                    c7       1
//   _OcclusionStrength             c8       1
//   _EmissionColor                 c9       1
//   _MainTex                       s0       1
//   _OcclusionMap                  s1       1
//   _EmissionMap                   s2       1
//

    ps_3_0
    def c10, 1.05499995, -0.0549999997, 0, 0
    def c11, 1, 0, 0.416666657, 0.5
    dcl_texcoord v0.xy
    dcl_texcoord4_pp v1.xyz
    dcl_texcoord5_pp v2.xyz
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    texld r0, v0, s0
    mov r1, c3
    mad_pp r2.xyz, c5, r0, -r1
    mul_pp r0.xyz, r0, c5
    mad_pp oC1.xyz, c6.x, r2, r1
    nrm_pp r2.xyz, v1
    mov r2.w, c11.x
    dp4_pp r1.x, c0, r2
    dp4_pp r1.y, c1, r2
    dp4_pp r1.z, c2, r2
    mad_pp oC2, r2, c11.wwwx, c11.wwwy
    add_pp r1.xyz, r1, v2
    max_pp r2.xyz, r1, c11.y
    log_pp r1.x, r2.x
    log_pp r1.y, r2.y
    log_pp r1.z, r2.z
    mul_pp r1.xyz, r1, c11.z
    exp_pp r3.x, r1.x
    exp_pp r3.y, r1.y
    exp_pp r3.z, r1.z
    mad_pp r1.xyz, r3, c10.x, c10.y
    max_pp r3.xyz, r1, c11.y
    abs r0.w, c4.w
    cmp_pp r1.xyz, -r0.w, r3, r2
    texld_pp r2, v0, s1
    mov r2.x, c11.x
    add_pp r0.w, r2.x, -c8.x
    mad_pp r2.w, r2.y, c8.x, r0.w
    mul_pp r1.xyz, r1, r2.w
    mad_pp r0.w, c6.x, -r1.w, r1.w
    mul_pp r2.xyz, r0.w, r0
    texld r0, v0, s2
    mul_pp r0.xyz, r0, c9
    mad_pp r0.xyz, r2, r1, r0
    mov_pp oC0, r2
    exp_pp oC3.x, -r0.x
    exp_pp oC3.y, -r0.y
    exp_pp oC3.z, -r0.z
    mov_pp oC1.w, c7.x
    mov_pp oC3.w, c11.x

// approximately 42 instruction slots used (3 texture, 39 arithmetic)
"
}
SubProgram "d3d11 " {
// Stats: 26 math, 3 textures
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "_ALPHABLEND_ON" }
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_OcclusionMap] 2D 1
SetTexture 2 [_EmissionMap] 2D 2
ConstBuffer "$Globals" 240
Vector 32 [unity_ColorSpaceDielectricSpec]
Vector 48 [unity_ColorSpaceLuminance]
Vector 128 [_Color]
Float 200 [_Metallic]
Float 204 [_Glossiness]
Float 208 [_OcclusionStrength]
Vector 224 [_EmissionColor]
ConstBuffer "UnityLighting" 720
Vector 608 [unity_SHAr]
Vector 624 [unity_SHAg]
Vector 640 [unity_SHAb]
BindCB  "$Globals" 0
BindCB  "UnityLighting" 1
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer cb0[15], immediateIndexed
      dcl_constantbuffer cb1[41], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 3
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s1
   1: add r0.x, -cb0[13].x, l(1.000000)
   2: mad r0.w, r0.y, cb0[13].x, r0.x
   3: mad r1.x, -cb0[12].z, cb0[2].w, cb0[2].w
   4: sample r2.xyzw, v1.xyxx, t0.xyzw, s0
   5: mul r1.yzw, r2.xxyz, cb0[8].xxyz
   6: mad r2.xyz, cb0[8].xyzx, r2.xyzx, -cb0[2].xyzx
   7: mad o1.xyz, cb0[12].zzzz, r2.xyzx, cb0[2].xyzx
   8: mul r0.xyz, r1.xxxx, r1.yzwy
   9: mov o0.xyzw, r0.xyzw
  10: mov o1.w, cb0[12].w
  11: dp3 r1.x, v5.xyzx, v5.xyzx
  12: rsq r1.x, r1.x
  13: mul r1.xyz, r1.xxxx, v5.xyzx
  14: mov r1.w, l(1.000000)
  15: mad o2.xyzw, r1.xyzw, l(0.500000, 0.500000, 0.500000, 1.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  16: dp4 r2.x, cb1[38].xyzw, r1.xyzw
  17: dp4 r2.y, cb1[39].xyzw, r1.xyzw
  18: dp4 r2.z, cb1[40].xyzw, r1.xyzw
  19: add r1.xyz, r2.xyzx, v6.xyzx
  20: max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  21: log r2.xyz, r1.xyzx
  22: mul r2.xyz, r2.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  23: exp r2.xyz, r2.xyzx
  24: mad r2.xyz, r2.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  25: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  26: eq r1.w, cb0[3].w, l(0.000000)
  27: movc r1.xyz, r1.wwww, r2.xyzx, r1.xyzx
  28: mul r1.xyz, r0.wwww, r1.xyzx
  29: sample r2.xyzw, v1.xyxx, t2.xyzw, s2
  30: mul r2.xyz, r2.xyzx, cb0[14].xyzx
  31: mad r0.xyz, r0.xyzx, r1.xyzx, r2.xyzx
  32: exp o3.xyz, -r0.xyzx
  33: mov o3.w, l(1.000000)
  34: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_SEPARATE" "DYNAMICLIGHTMAP_OFF" }
"// shader disassembly not supported on opengl"
}
SubProgram "d3d9 " {
// Stats: 38 math, 2 textures
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_SEPARATE" "DYNAMICLIGHTMAP_OFF" }
Vector 5 [_Color]
Float 7 [_Glossiness]
Float 6 [_Metallic]
Float 8 [_OcclusionStrength]
Vector 3 [unity_ColorSpaceDielectricSpec]
Vector 4 [unity_ColorSpaceLuminance]
Vector 2 [unity_SHAb]
Vector 1 [unity_SHAg]
Vector 0 [unity_SHAr]
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_OcclusionMap] 2D 1
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D _OcclusionMap;
//   float _OcclusionStrength;
//   float4 unity_ColorSpaceDielectricSpec;
//   float4 unity_ColorSpaceLuminance;
//   float4 unity_SHAb;
//   float4 unity_SHAg;
//   float4 unity_SHAr;
//
//
// Registers:
//
//   Name                           Reg   Size
//   ------------------------------ ----- ----
//   unity_SHAr                     c0       1
//   unity_SHAg                     c1       1
//   unity_SHAb                     c2       1
//   unity_ColorSpaceDielectricSpec c3       1
//   unity_ColorSpaceLuminance      c4       1
//   _Color                         c5       1
//   _Metallic                      c6       1
//   _Glossiness                    c7       1
//   _OcclusionStrength             c8       1
//   _MainTex                       s0       1
//   _OcclusionMap                  s1       1
//

    ps_3_0
    def c9, 1.05499995, -0.0549999997, 0, 0
    def c10, 1, 0, 0.416666657, 0.5
    dcl_texcoord v0.xy
    dcl_texcoord4_pp v1.xyz
    dcl_texcoord5_pp v2.xyz
    dcl_2d s0
    dcl_2d s1
    texld r0, v0, s0
    mov r1, c3
    mad_pp r2.xyz, c5, r0, -r1
    mul_pp r0.xyz, r0, c5
    mad_pp oC1.xyz, c6.x, r2, r1
    nrm_pp r2.xyz, v1
    mov r2.w, c10.x
    dp4_pp r1.x, c0, r2
    dp4_pp r1.y, c1, r2
    dp4_pp r1.z, c2, r2
    mad_pp oC2, r2, c10.wwwx, c10.wwwy
    add_pp r1.xyz, r1, v2
    max_pp r2.xyz, r1, c10.y
    log_pp r1.x, r2.x
    log_pp r1.y, r2.y
    log_pp r1.z, r2.z
    mul_pp r1.xyz, r1, c10.z
    exp_pp r3.x, r1.x
    exp_pp r3.y, r1.y
    exp_pp r3.z, r1.z
    mad_pp r1.xyz, r3, c9.x, c9.y
    max_pp r3.xyz, r1, c10.y
    abs r0.w, c4.w
    cmp_pp r1.xyz, -r0.w, r3, r2
    texld_pp r2, v0, s1
    mov r2.x, c10.x
    add_pp r0.w, r2.x, -c8.x
    mad_pp r2.w, r2.y, c8.x, r0.w
    mul_pp r1.xyz, r1, r2.w
    mad_pp r0.w, c6.x, -r1.w, r1.w
    mul_pp r2.xyz, r0.w, r0
    mul_pp r0.xyz, r1, r2
    mov_pp oC0, r2
    exp_pp oC3.x, -r0.x
    exp_pp oC3.y, -r0.y
    exp_pp oC3.z, -r0.z
    mov_pp oC1.w, c7.x
    mov_pp oC3.w, c10.x

// approximately 40 instruction slots used (2 texture, 38 arithmetic)
"
}
SubProgram "d3d11 " {
// Stats: 25 math, 2 textures
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_SEPARATE" "DYNAMICLIGHTMAP_OFF" }
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_OcclusionMap] 2D 1
ConstBuffer "$Globals" 240
Vector 32 [unity_ColorSpaceDielectricSpec]
Vector 48 [unity_ColorSpaceLuminance]
Vector 128 [_Color]
Float 200 [_Metallic]
Float 204 [_Glossiness]
Float 208 [_OcclusionStrength]
ConstBuffer "UnityLighting" 720
Vector 608 [unity_SHAr]
Vector 624 [unity_SHAg]
Vector 640 [unity_SHAb]
BindCB  "$Globals" 0
BindCB  "UnityLighting" 1
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer cb0[14], immediateIndexed
      dcl_constantbuffer cb1[41], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 3
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s1
   1: add r0.x, -cb0[13].x, l(1.000000)
   2: mad r0.w, r0.y, cb0[13].x, r0.x
   3: mad r1.x, -cb0[12].z, cb0[2].w, cb0[2].w
   4: sample r2.xyzw, v1.xyxx, t0.xyzw, s0
   5: mul r1.yzw, r2.xxyz, cb0[8].xxyz
   6: mad r2.xyz, cb0[8].xyzx, r2.xyzx, -cb0[2].xyzx
   7: mad o1.xyz, cb0[12].zzzz, r2.xyzx, cb0[2].xyzx
   8: mul r0.xyz, r1.xxxx, r1.yzwy
   9: mov o0.xyzw, r0.xyzw
  10: mov o1.w, cb0[12].w
  11: dp3 r1.x, v5.xyzx, v5.xyzx
  12: rsq r1.x, r1.x
  13: mul r1.xyz, r1.xxxx, v5.xyzx
  14: mov r1.w, l(1.000000)
  15: mad o2.xyzw, r1.xyzw, l(0.500000, 0.500000, 0.500000, 1.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  16: dp4 r2.x, cb1[38].xyzw, r1.xyzw
  17: dp4 r2.y, cb1[39].xyzw, r1.xyzw
  18: dp4 r2.z, cb1[40].xyzw, r1.xyzw
  19: add r1.xyz, r2.xyzx, v6.xyzx
  20: max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  21: log r2.xyz, r1.xyzx
  22: mul r2.xyz, r2.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  23: exp r2.xyz, r2.xyzx
  24: mad r2.xyz, r2.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  25: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  26: eq r1.w, cb0[3].w, l(0.000000)
  27: movc r1.xyz, r1.wwww, r2.xyzx, r1.xyzx
  28: mul r1.xyz, r0.wwww, r1.xyzx
  29: mul r0.xyz, r0.xyzx, r1.xyzx
  30: exp o3.xyz, -r0.xyzx
  31: mov o3.w, l(1.000000)
  32: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_SEPARATE" "DYNAMICLIGHTMAP_OFF" "_EMISSION" }
"// shader disassembly not supported on opengl"
}
SubProgram "d3d9 " {
// Stats: 39 math, 3 textures
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_SEPARATE" "DYNAMICLIGHTMAP_OFF" "_EMISSION" }
Vector 5 [_Color]
Vector 9 [_EmissionColor]
Float 7 [_Glossiness]
Float 6 [_Metallic]
Float 8 [_OcclusionStrength]
Vector 3 [unity_ColorSpaceDielectricSpec]
Vector 4 [unity_ColorSpaceLuminance]
Vector 2 [unity_SHAb]
Vector 1 [unity_SHAg]
Vector 0 [unity_SHAr]
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_OcclusionMap] 2D 1
SetTexture 2 [_EmissionMap] 2D 2
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _Color;
//   float4 _EmissionColor;
//   sampler2D _EmissionMap;
//   float _Glossiness;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D _OcclusionMap;
//   float _OcclusionStrength;
//   float4 unity_ColorSpaceDielectricSpec;
//   float4 unity_ColorSpaceLuminance;
//   float4 unity_SHAb;
//   float4 unity_SHAg;
//   float4 unity_SHAr;
//
//
// Registers:
//
//   Name                           Reg   Size
//   ------------------------------ ----- ----
//   unity_SHAr                     c0       1
//   unity_SHAg                     c1       1
//   unity_SHAb                     c2       1
//   unity_ColorSpaceDielectricSpec c3       1
//   unity_ColorSpaceLuminance      c4       1
//   _Color                         c5       1
//   _Metallic                      c6       1
//   _Glossiness                    c7       1
//   _OcclusionStrength             c8       1
//   _EmissionColor                 c9       1
//   _MainTex                       s0       1
//   _OcclusionMap                  s1       1
//   _EmissionMap                   s2       1
//

    ps_3_0
    def c10, 1.05499995, -0.0549999997, 0, 0
    def c11, 1, 0, 0.416666657, 0.5
    dcl_texcoord v0.xy
    dcl_texcoord4_pp v1.xyz
    dcl_texcoord5_pp v2.xyz
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    texld r0, v0, s0
    mov r1, c3
    mad_pp r2.xyz, c5, r0, -r1
    mul_pp r0.xyz, r0, c5
    mad_pp oC1.xyz, c6.x, r2, r1
    nrm_pp r2.xyz, v1
    mov r2.w, c11.x
    dp4_pp r1.x, c0, r2
    dp4_pp r1.y, c1, r2
    dp4_pp r1.z, c2, r2
    mad_pp oC2, r2, c11.wwwx, c11.wwwy
    add_pp r1.xyz, r1, v2
    max_pp r2.xyz, r1, c11.y
    log_pp r1.x, r2.x
    log_pp r1.y, r2.y
    log_pp r1.z, r2.z
    mul_pp r1.xyz, r1, c11.z
    exp_pp r3.x, r1.x
    exp_pp r3.y, r1.y
    exp_pp r3.z, r1.z
    mad_pp r1.xyz, r3, c10.x, c10.y
    max_pp r3.xyz, r1, c11.y
    abs r0.w, c4.w
    cmp_pp r1.xyz, -r0.w, r3, r2
    texld_pp r2, v0, s1
    mov r2.x, c11.x
    add_pp r0.w, r2.x, -c8.x
    mad_pp r2.w, r2.y, c8.x, r0.w
    mul_pp r1.xyz, r1, r2.w
    mad_pp r0.w, c6.x, -r1.w, r1.w
    mul_pp r2.xyz, r0.w, r0
    texld r0, v0, s2
    mul_pp r0.xyz, r0, c9
    mad_pp r0.xyz, r2, r1, r0
    mov_pp oC0, r2
    exp_pp oC3.x, -r0.x
    exp_pp oC3.y, -r0.y
    exp_pp oC3.z, -r0.z
    mov_pp oC1.w, c7.x
    mov_pp oC3.w, c11.x

// approximately 42 instruction slots used (3 texture, 39 arithmetic)
"
}
SubProgram "d3d11 " {
// Stats: 26 math, 3 textures
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_SEPARATE" "DYNAMICLIGHTMAP_OFF" "_EMISSION" }
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_OcclusionMap] 2D 1
SetTexture 2 [_EmissionMap] 2D 2
ConstBuffer "$Globals" 240
Vector 32 [unity_ColorSpaceDielectricSpec]
Vector 48 [unity_ColorSpaceLuminance]
Vector 128 [_Color]
Float 200 [_Metallic]
Float 204 [_Glossiness]
Float 208 [_OcclusionStrength]
Vector 224 [_EmissionColor]
ConstBuffer "UnityLighting" 720
Vector 608 [unity_SHAr]
Vector 624 [unity_SHAg]
Vector 640 [unity_SHAb]
BindCB  "$Globals" 0
BindCB  "UnityLighting" 1
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer cb0[15], immediateIndexed
      dcl_constantbuffer cb1[41], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 3
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s1
   1: add r0.x, -cb0[13].x, l(1.000000)
   2: mad r0.w, r0.y, cb0[13].x, r0.x
   3: mad r1.x, -cb0[12].z, cb0[2].w, cb0[2].w
   4: sample r2.xyzw, v1.xyxx, t0.xyzw, s0
   5: mul r1.yzw, r2.xxyz, cb0[8].xxyz
   6: mad r2.xyz, cb0[8].xyzx, r2.xyzx, -cb0[2].xyzx
   7: mad o1.xyz, cb0[12].zzzz, r2.xyzx, cb0[2].xyzx
   8: mul r0.xyz, r1.xxxx, r1.yzwy
   9: mov o0.xyzw, r0.xyzw
  10: mov o1.w, cb0[12].w
  11: dp3 r1.x, v5.xyzx, v5.xyzx
  12: rsq r1.x, r1.x
  13: mul r1.xyz, r1.xxxx, v5.xyzx
  14: mov r1.w, l(1.000000)
  15: mad o2.xyzw, r1.xyzw, l(0.500000, 0.500000, 0.500000, 1.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  16: dp4 r2.x, cb1[38].xyzw, r1.xyzw
  17: dp4 r2.y, cb1[39].xyzw, r1.xyzw
  18: dp4 r2.z, cb1[40].xyzw, r1.xyzw
  19: add r1.xyz, r2.xyzx, v6.xyzx
  20: max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  21: log r2.xyz, r1.xyzx
  22: mul r2.xyz, r2.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  23: exp r2.xyz, r2.xyzx
  24: mad r2.xyz, r2.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  25: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  26: eq r1.w, cb0[3].w, l(0.000000)
  27: movc r1.xyz, r1.wwww, r2.xyzx, r1.xyzx
  28: mul r1.xyz, r0.wwww, r1.xyzx
  29: sample r2.xyzw, v1.xyxx, t2.xyzw, s2
  30: mul r2.xyz, r2.xyzx, cb0[14].xyzx
  31: mad r0.xyz, r0.xyzx, r1.xyzx, r2.xyzx
  32: exp o3.xyz, -r0.xyzx
  33: mov o3.w, l(1.000000)
  34: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_SEPARATE" "DYNAMICLIGHTMAP_OFF" "_ALPHABLEND_ON" }
"// shader disassembly not supported on opengl"
}
SubProgram "d3d9 " {
// Stats: 38 math, 2 textures
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_SEPARATE" "DYNAMICLIGHTMAP_OFF" "_ALPHABLEND_ON" }
Vector 5 [_Color]
Float 7 [_Glossiness]
Float 6 [_Metallic]
Float 8 [_OcclusionStrength]
Vector 3 [unity_ColorSpaceDielectricSpec]
Vector 4 [unity_ColorSpaceLuminance]
Vector 2 [unity_SHAb]
Vector 1 [unity_SHAg]
Vector 0 [unity_SHAr]
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_OcclusionMap] 2D 1
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D _OcclusionMap;
//   float _OcclusionStrength;
//   float4 unity_ColorSpaceDielectricSpec;
//   float4 unity_ColorSpaceLuminance;
//   float4 unity_SHAb;
//   float4 unity_SHAg;
//   float4 unity_SHAr;
//
//
// Registers:
//
//   Name                           Reg   Size
//   ------------------------------ ----- ----
//   unity_SHAr                     c0       1
//   unity_SHAg                     c1       1
//   unity_SHAb                     c2       1
//   unity_ColorSpaceDielectricSpec c3       1
//   unity_ColorSpaceLuminance      c4       1
//   _Color                         c5       1
//   _Metallic                      c6       1
//   _Glossiness                    c7       1
//   _OcclusionStrength             c8       1
//   _MainTex                       s0       1
//   _OcclusionMap                  s1       1
//

    ps_3_0
    def c9, 1.05499995, -0.0549999997, 0, 0
    def c10, 1, 0, 0.416666657, 0.5
    dcl_texcoord v0.xy
    dcl_texcoord4_pp v1.xyz
    dcl_texcoord5_pp v2.xyz
    dcl_2d s0
    dcl_2d s1
    texld r0, v0, s0
    mov r1, c3
    mad_pp r2.xyz, c5, r0, -r1
    mul_pp r0.xyz, r0, c5
    mad_pp oC1.xyz, c6.x, r2, r1
    nrm_pp r2.xyz, v1
    mov r2.w, c10.x
    dp4_pp r1.x, c0, r2
    dp4_pp r1.y, c1, r2
    dp4_pp r1.z, c2, r2
    mad_pp oC2, r2, c10.wwwx, c10.wwwy
    add_pp r1.xyz, r1, v2
    max_pp r2.xyz, r1, c10.y
    log_pp r1.x, r2.x
    log_pp r1.y, r2.y
    log_pp r1.z, r2.z
    mul_pp r1.xyz, r1, c10.z
    exp_pp r3.x, r1.x
    exp_pp r3.y, r1.y
    exp_pp r3.z, r1.z
    mad_pp r1.xyz, r3, c9.x, c9.y
    max_pp r3.xyz, r1, c10.y
    abs r0.w, c4.w
    cmp_pp r1.xyz, -r0.w, r3, r2
    texld_pp r2, v0, s1
    mov r2.x, c10.x
    add_pp r0.w, r2.x, -c8.x
    mad_pp r2.w, r2.y, c8.x, r0.w
    mul_pp r1.xyz, r1, r2.w
    mad_pp r0.w, c6.x, -r1.w, r1.w
    mul_pp r2.xyz, r0.w, r0
    mul_pp r0.xyz, r1, r2
    mov_pp oC0, r2
    exp_pp oC3.x, -r0.x
    exp_pp oC3.y, -r0.y
    exp_pp oC3.z, -r0.z
    mov_pp oC1.w, c7.x
    mov_pp oC3.w, c10.x

// approximately 40 instruction slots used (2 texture, 38 arithmetic)
"
}
SubProgram "d3d11 " {
// Stats: 25 math, 2 textures
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_SEPARATE" "DYNAMICLIGHTMAP_OFF" "_ALPHABLEND_ON" }
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_OcclusionMap] 2D 1
ConstBuffer "$Globals" 240
Vector 32 [unity_ColorSpaceDielectricSpec]
Vector 48 [unity_ColorSpaceLuminance]
Vector 128 [_Color]
Float 200 [_Metallic]
Float 204 [_Glossiness]
Float 208 [_OcclusionStrength]
ConstBuffer "UnityLighting" 720
Vector 608 [unity_SHAr]
Vector 624 [unity_SHAg]
Vector 640 [unity_SHAb]
BindCB  "$Globals" 0
BindCB  "UnityLighting" 1
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer cb0[14], immediateIndexed
      dcl_constantbuffer cb1[41], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 3
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s1
   1: add r0.x, -cb0[13].x, l(1.000000)
   2: mad r0.w, r0.y, cb0[13].x, r0.x
   3: mad r1.x, -cb0[12].z, cb0[2].w, cb0[2].w
   4: sample r2.xyzw, v1.xyxx, t0.xyzw, s0
   5: mul r1.yzw, r2.xxyz, cb0[8].xxyz
   6: mad r2.xyz, cb0[8].xyzx, r2.xyzx, -cb0[2].xyzx
   7: mad o1.xyz, cb0[12].zzzz, r2.xyzx, cb0[2].xyzx
   8: mul r0.xyz, r1.xxxx, r1.yzwy
   9: mov o0.xyzw, r0.xyzw
  10: mov o1.w, cb0[12].w
  11: dp3 r1.x, v5.xyzx, v5.xyzx
  12: rsq r1.x, r1.x
  13: mul r1.xyz, r1.xxxx, v5.xyzx
  14: mov r1.w, l(1.000000)
  15: mad o2.xyzw, r1.xyzw, l(0.500000, 0.500000, 0.500000, 1.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  16: dp4 r2.x, cb1[38].xyzw, r1.xyzw
  17: dp4 r2.y, cb1[39].xyzw, r1.xyzw
  18: dp4 r2.z, cb1[40].xyzw, r1.xyzw
  19: add r1.xyz, r2.xyzx, v6.xyzx
  20: max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  21: log r2.xyz, r1.xyzx
  22: mul r2.xyz, r2.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  23: exp r2.xyz, r2.xyzx
  24: mad r2.xyz, r2.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  25: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  26: eq r1.w, cb0[3].w, l(0.000000)
  27: movc r1.xyz, r1.wwww, r2.xyzx, r1.xyzx
  28: mul r1.xyz, r0.wwww, r1.xyzx
  29: mul r0.xyz, r0.xyzx, r1.xyzx
  30: exp o3.xyz, -r0.xyzx
  31: mov o3.w, l(1.000000)
  32: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_SEPARATE" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "_ALPHABLEND_ON" }
"// shader disassembly not supported on opengl"
}
SubProgram "d3d9 " {
// Stats: 39 math, 3 textures
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_SEPARATE" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "_ALPHABLEND_ON" }
Vector 5 [_Color]
Vector 9 [_EmissionColor]
Float 7 [_Glossiness]
Float 6 [_Metallic]
Float 8 [_OcclusionStrength]
Vector 3 [unity_ColorSpaceDielectricSpec]
Vector 4 [unity_ColorSpaceLuminance]
Vector 2 [unity_SHAb]
Vector 1 [unity_SHAg]
Vector 0 [unity_SHAr]
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_OcclusionMap] 2D 1
SetTexture 2 [_EmissionMap] 2D 2
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _Color;
//   float4 _EmissionColor;
//   sampler2D _EmissionMap;
//   float _Glossiness;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D _OcclusionMap;
//   float _OcclusionStrength;
//   float4 unity_ColorSpaceDielectricSpec;
//   float4 unity_ColorSpaceLuminance;
//   float4 unity_SHAb;
//   float4 unity_SHAg;
//   float4 unity_SHAr;
//
//
// Registers:
//
//   Name                           Reg   Size
//   ------------------------------ ----- ----
//   unity_SHAr                     c0       1
//   unity_SHAg                     c1       1
//   unity_SHAb                     c2       1
//   unity_ColorSpaceDielectricSpec c3       1
//   unity_ColorSpaceLuminance      c4       1
//   _Color                         c5       1
//   _Metallic                      c6       1
//   _Glossiness                    c7       1
//   _OcclusionStrength             c8       1
//   _EmissionColor                 c9       1
//   _MainTex                       s0       1
//   _OcclusionMap                  s1       1
//   _EmissionMap                   s2       1
//

    ps_3_0
    def c10, 1.05499995, -0.0549999997, 0, 0
    def c11, 1, 0, 0.416666657, 0.5
    dcl_texcoord v0.xy
    dcl_texcoord4_pp v1.xyz
    dcl_texcoord5_pp v2.xyz
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    texld r0, v0, s0
    mov r1, c3
    mad_pp r2.xyz, c5, r0, -r1
    mul_pp r0.xyz, r0, c5
    mad_pp oC1.xyz, c6.x, r2, r1
    nrm_pp r2.xyz, v1
    mov r2.w, c11.x
    dp4_pp r1.x, c0, r2
    dp4_pp r1.y, c1, r2
    dp4_pp r1.z, c2, r2
    mad_pp oC2, r2, c11.wwwx, c11.wwwy
    add_pp r1.xyz, r1, v2
    max_pp r2.xyz, r1, c11.y
    log_pp r1.x, r2.x
    log_pp r1.y, r2.y
    log_pp r1.z, r2.z
    mul_pp r1.xyz, r1, c11.z
    exp_pp r3.x, r1.x
    exp_pp r3.y, r1.y
    exp_pp r3.z, r1.z
    mad_pp r1.xyz, r3, c10.x, c10.y
    max_pp r3.xyz, r1, c11.y
    abs r0.w, c4.w
    cmp_pp r1.xyz, -r0.w, r3, r2
    texld_pp r2, v0, s1
    mov r2.x, c11.x
    add_pp r0.w, r2.x, -c8.x
    mad_pp r2.w, r2.y, c8.x, r0.w
    mul_pp r1.xyz, r1, r2.w
    mad_pp r0.w, c6.x, -r1.w, r1.w
    mul_pp r2.xyz, r0.w, r0
    texld r0, v0, s2
    mul_pp r0.xyz, r0, c9
    mad_pp r0.xyz, r2, r1, r0
    mov_pp oC0, r2
    exp_pp oC3.x, -r0.x
    exp_pp oC3.y, -r0.y
    exp_pp oC3.z, -r0.z
    mov_pp oC1.w, c7.x
    mov_pp oC3.w, c11.x

// approximately 42 instruction slots used (3 texture, 39 arithmetic)
"
}
SubProgram "d3d11 " {
// Stats: 26 math, 3 textures
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_SEPARATE" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "_ALPHABLEND_ON" }
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_OcclusionMap] 2D 1
SetTexture 2 [_EmissionMap] 2D 2
ConstBuffer "$Globals" 240
Vector 32 [unity_ColorSpaceDielectricSpec]
Vector 48 [unity_ColorSpaceLuminance]
Vector 128 [_Color]
Float 200 [_Metallic]
Float 204 [_Glossiness]
Float 208 [_OcclusionStrength]
Vector 224 [_EmissionColor]
ConstBuffer "UnityLighting" 720
Vector 608 [unity_SHAr]
Vector 624 [unity_SHAg]
Vector 640 [unity_SHAb]
BindCB  "$Globals" 0
BindCB  "UnityLighting" 1
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer cb0[15], immediateIndexed
      dcl_constantbuffer cb1[41], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 3
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s1
   1: add r0.x, -cb0[13].x, l(1.000000)
   2: mad r0.w, r0.y, cb0[13].x, r0.x
   3: mad r1.x, -cb0[12].z, cb0[2].w, cb0[2].w
   4: sample r2.xyzw, v1.xyxx, t0.xyzw, s0
   5: mul r1.yzw, r2.xxyz, cb0[8].xxyz
   6: mad r2.xyz, cb0[8].xyzx, r2.xyzx, -cb0[2].xyzx
   7: mad o1.xyz, cb0[12].zzzz, r2.xyzx, cb0[2].xyzx
   8: mul r0.xyz, r1.xxxx, r1.yzwy
   9: mov o0.xyzw, r0.xyzw
  10: mov o1.w, cb0[12].w
  11: dp3 r1.x, v5.xyzx, v5.xyzx
  12: rsq r1.x, r1.x
  13: mul r1.xyz, r1.xxxx, v5.xyzx
  14: mov r1.w, l(1.000000)
  15: mad o2.xyzw, r1.xyzw, l(0.500000, 0.500000, 0.500000, 1.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  16: dp4 r2.x, cb1[38].xyzw, r1.xyzw
  17: dp4 r2.y, cb1[39].xyzw, r1.xyzw
  18: dp4 r2.z, cb1[40].xyzw, r1.xyzw
  19: add r1.xyz, r2.xyzx, v6.xyzx
  20: max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  21: log r2.xyz, r1.xyzx
  22: mul r2.xyz, r2.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  23: exp r2.xyz, r2.xyzx
  24: mad r2.xyz, r2.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  25: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  26: eq r1.w, cb0[3].w, l(0.000000)
  27: movc r1.xyz, r1.wwww, r2.xyzx, r1.xyzx
  28: mul r1.xyz, r0.wwww, r1.xyzx
  29: sample r2.xyzw, v1.xyxx, t2.xyzw, s2
  30: mul r2.xyz, r2.xyzx, cb0[14].xyzx
  31: mad r0.xyz, r0.xyzx, r1.xyzx, r2.xyzx
  32: exp o3.xyz, -r0.xyzx
  33: mov o3.w, l(1.000000)
  34: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" }
"// shader disassembly not supported on opengl"
}
SubProgram "d3d9 " {
// Stats: 35 math, 2 textures
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" }
Vector 5 [_Color]
Float 7 [_Glossiness]
Float 6 [_Metallic]
Float 8 [_OcclusionStrength]
Vector 3 [unity_ColorSpaceDielectricSpec]
Vector 4 [unity_ColorSpaceLuminance]
Vector 2 [unity_SHAb]
Vector 1 [unity_SHAg]
Vector 0 [unity_SHAr]
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_OcclusionMap] 2D 1
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D _OcclusionMap;
//   float _OcclusionStrength;
//   float4 unity_ColorSpaceDielectricSpec;
//   float4 unity_ColorSpaceLuminance;
//   float4 unity_SHAb;
//   float4 unity_SHAg;
//   float4 unity_SHAr;
//
//
// Registers:
//
//   Name                           Reg   Size
//   ------------------------------ ----- ----
//   unity_SHAr                     c0       1
//   unity_SHAg                     c1       1
//   unity_SHAb                     c2       1
//   unity_ColorSpaceDielectricSpec c3       1
//   unity_ColorSpaceLuminance      c4       1
//   _Color                         c5       1
//   _Metallic                      c6       1
//   _Glossiness                    c7       1
//   _OcclusionStrength             c8       1
//   _MainTex                       s0       1
//   _OcclusionMap                  s1       1
//

    ps_3_0
    def c9, 1.05499995, -0.0549999997, 0, 0
    def c10, 1, 0, 0.416666657, 0.5
    dcl_texcoord v0.xy
    dcl_texcoord4_pp v1.xyz
    dcl_texcoord5_pp v2.xyz
    dcl_2d s0
    dcl_2d s1
    texld r0, v0, s0
    mov r1, c3
    mad_pp r2.xyz, c5, r0, -r1
    mul_pp r0.xyz, r0, c5
    mad_pp oC1.xyz, c6.x, r2, r1
    nrm_pp r2.xyz, v1
    mov r2.w, c10.x
    dp4_pp r1.x, c0, r2
    dp4_pp r1.y, c1, r2
    dp4_pp r1.z, c2, r2
    mad_pp oC2, r2, c10.wwwx, c10.wwwy
    add_pp r1.xyz, r1, v2
    max_pp r2.xyz, r1, c10.y
    log_pp r1.x, r2.x
    log_pp r1.y, r2.y
    log_pp r1.z, r2.z
    mul_pp r1.xyz, r1, c10.z
    exp_pp r3.x, r1.x
    exp_pp r3.y, r1.y
    exp_pp r3.z, r1.z
    mad_pp r1.xyz, r3, c9.x, c9.y
    max_pp r3.xyz, r1, c10.y
    abs r0.w, c4.w
    cmp_pp r1.xyz, -r0.w, r3, r2
    texld_pp r2, v0, s1
    mov r2.x, c10.x
    add_pp r0.w, r2.x, -c8.x
    mad_pp r2.w, r2.y, c8.x, r0.w
    mul_pp r1.xyz, r1, r2.w
    mad_pp r0.w, c6.x, -r1.w, r1.w
    mul_pp r2.xyz, r0.w, r0
    mul_pp oC3.xyz, r1, r2
    mov_pp oC0, r2
    mov_pp oC1.w, c7.x
    mov_pp oC3.w, c10.x

// approximately 37 instruction slots used (2 texture, 35 arithmetic)
"
}
SubProgram "d3d11 " {
// Stats: 24 math, 2 textures
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" }
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_OcclusionMap] 2D 1
ConstBuffer "$Globals" 240
Vector 32 [unity_ColorSpaceDielectricSpec]
Vector 48 [unity_ColorSpaceLuminance]
Vector 128 [_Color]
Float 200 [_Metallic]
Float 204 [_Glossiness]
Float 208 [_OcclusionStrength]
ConstBuffer "UnityLighting" 720
Vector 608 [unity_SHAr]
Vector 624 [unity_SHAg]
Vector 640 [unity_SHAb]
BindCB  "$Globals" 0
BindCB  "UnityLighting" 1
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer cb0[14], immediateIndexed
      dcl_constantbuffer cb1[41], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 3
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s1
   1: add r0.x, -cb0[13].x, l(1.000000)
   2: mad r0.w, r0.y, cb0[13].x, r0.x
   3: mad r1.x, -cb0[12].z, cb0[2].w, cb0[2].w
   4: sample r2.xyzw, v1.xyxx, t0.xyzw, s0
   5: mul r1.yzw, r2.xxyz, cb0[8].xxyz
   6: mad r2.xyz, cb0[8].xyzx, r2.xyzx, -cb0[2].xyzx
   7: mad o1.xyz, cb0[12].zzzz, r2.xyzx, cb0[2].xyzx
   8: mul r0.xyz, r1.xxxx, r1.yzwy
   9: mov o0.xyzw, r0.xyzw
  10: mov o1.w, cb0[12].w
  11: dp3 r1.x, v5.xyzx, v5.xyzx
  12: rsq r1.x, r1.x
  13: mul r1.xyz, r1.xxxx, v5.xyzx
  14: mov r1.w, l(1.000000)
  15: mad o2.xyzw, r1.xyzw, l(0.500000, 0.500000, 0.500000, 1.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  16: dp4 r2.x, cb1[38].xyzw, r1.xyzw
  17: dp4 r2.y, cb1[39].xyzw, r1.xyzw
  18: dp4 r2.z, cb1[40].xyzw, r1.xyzw
  19: add r1.xyz, r2.xyzx, v6.xyzx
  20: max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  21: log r2.xyz, r1.xyzx
  22: mul r2.xyz, r2.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  23: exp r2.xyz, r2.xyzx
  24: mad r2.xyz, r2.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  25: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  26: eq r1.w, cb0[3].w, l(0.000000)
  27: movc r1.xyz, r1.wwww, r2.xyzx, r1.xyzx
  28: mul r1.xyz, r0.wwww, r1.xyzx
  29: mul o3.xyz, r0.xyzx, r1.xyzx
  30: mov o3.w, l(1.000000)
  31: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "UNITY_HDR_ON" }
"// shader disassembly not supported on opengl"
}
SubProgram "d3d9 " {
// Stats: 36 math, 3 textures
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "UNITY_HDR_ON" }
Vector 5 [_Color]
Vector 9 [_EmissionColor]
Float 7 [_Glossiness]
Float 6 [_Metallic]
Float 8 [_OcclusionStrength]
Vector 3 [unity_ColorSpaceDielectricSpec]
Vector 4 [unity_ColorSpaceLuminance]
Vector 2 [unity_SHAb]
Vector 1 [unity_SHAg]
Vector 0 [unity_SHAr]
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_OcclusionMap] 2D 1
SetTexture 2 [_EmissionMap] 2D 2
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _Color;
//   float4 _EmissionColor;
//   sampler2D _EmissionMap;
//   float _Glossiness;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D _OcclusionMap;
//   float _OcclusionStrength;
//   float4 unity_ColorSpaceDielectricSpec;
//   float4 unity_ColorSpaceLuminance;
//   float4 unity_SHAb;
//   float4 unity_SHAg;
//   float4 unity_SHAr;
//
//
// Registers:
//
//   Name                           Reg   Size
//   ------------------------------ ----- ----
//   unity_SHAr                     c0       1
//   unity_SHAg                     c1       1
//   unity_SHAb                     c2       1
//   unity_ColorSpaceDielectricSpec c3       1
//   unity_ColorSpaceLuminance      c4       1
//   _Color                         c5       1
//   _Metallic                      c6       1
//   _Glossiness                    c7       1
//   _OcclusionStrength             c8       1
//   _EmissionColor                 c9       1
//   _MainTex                       s0       1
//   _OcclusionMap                  s1       1
//   _EmissionMap                   s2       1
//

    ps_3_0
    def c10, 1.05499995, -0.0549999997, 0, 0
    def c11, 1, 0, 0.416666657, 0.5
    dcl_texcoord v0.xy
    dcl_texcoord4_pp v1.xyz
    dcl_texcoord5_pp v2.xyz
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    texld r0, v0, s0
    mov r1, c3
    mad_pp r2.xyz, c5, r0, -r1
    mul_pp r0.xyz, r0, c5
    mad_pp oC1.xyz, c6.x, r2, r1
    nrm_pp r2.xyz, v1
    mov r2.w, c11.x
    dp4_pp r1.x, c0, r2
    dp4_pp r1.y, c1, r2
    dp4_pp r1.z, c2, r2
    mad_pp oC2, r2, c11.wwwx, c11.wwwy
    add_pp r1.xyz, r1, v2
    max_pp r2.xyz, r1, c11.y
    log_pp r1.x, r2.x
    log_pp r1.y, r2.y
    log_pp r1.z, r2.z
    mul_pp r1.xyz, r1, c11.z
    exp_pp r3.x, r1.x
    exp_pp r3.y, r1.y
    exp_pp r3.z, r1.z
    mad_pp r1.xyz, r3, c10.x, c10.y
    max_pp r3.xyz, r1, c11.y
    abs r0.w, c4.w
    cmp_pp r1.xyz, -r0.w, r3, r2
    texld_pp r2, v0, s1
    mov r2.x, c11.x
    add_pp r0.w, r2.x, -c8.x
    mad_pp r2.w, r2.y, c8.x, r0.w
    mul_pp r1.xyz, r1, r2.w
    mad_pp r0.w, c6.x, -r1.w, r1.w
    mul_pp r2.xyz, r0.w, r0
    texld r0, v0, s2
    mul_pp r0.xyz, r0, c9
    mad_pp oC3.xyz, r2, r1, r0
    mov_pp oC0, r2
    mov_pp oC1.w, c7.x
    mov_pp oC3.w, c11.x

// approximately 39 instruction slots used (3 texture, 36 arithmetic)
"
}
SubProgram "d3d11 " {
// Stats: 25 math, 3 textures
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "UNITY_HDR_ON" }
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_OcclusionMap] 2D 1
SetTexture 2 [_EmissionMap] 2D 2
ConstBuffer "$Globals" 240
Vector 32 [unity_ColorSpaceDielectricSpec]
Vector 48 [unity_ColorSpaceLuminance]
Vector 128 [_Color]
Float 200 [_Metallic]
Float 204 [_Glossiness]
Float 208 [_OcclusionStrength]
Vector 224 [_EmissionColor]
ConstBuffer "UnityLighting" 720
Vector 608 [unity_SHAr]
Vector 624 [unity_SHAg]
Vector 640 [unity_SHAb]
BindCB  "$Globals" 0
BindCB  "UnityLighting" 1
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer cb0[15], immediateIndexed
      dcl_constantbuffer cb1[41], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 3
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s1
   1: add r0.x, -cb0[13].x, l(1.000000)
   2: mad r0.w, r0.y, cb0[13].x, r0.x
   3: mad r1.x, -cb0[12].z, cb0[2].w, cb0[2].w
   4: sample r2.xyzw, v1.xyxx, t0.xyzw, s0
   5: mul r1.yzw, r2.xxyz, cb0[8].xxyz
   6: mad r2.xyz, cb0[8].xyzx, r2.xyzx, -cb0[2].xyzx
   7: mad o1.xyz, cb0[12].zzzz, r2.xyzx, cb0[2].xyzx
   8: mul r0.xyz, r1.xxxx, r1.yzwy
   9: mov o0.xyzw, r0.xyzw
  10: mov o1.w, cb0[12].w
  11: dp3 r1.x, v5.xyzx, v5.xyzx
  12: rsq r1.x, r1.x
  13: mul r1.xyz, r1.xxxx, v5.xyzx
  14: mov r1.w, l(1.000000)
  15: mad o2.xyzw, r1.xyzw, l(0.500000, 0.500000, 0.500000, 1.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  16: dp4 r2.x, cb1[38].xyzw, r1.xyzw
  17: dp4 r2.y, cb1[39].xyzw, r1.xyzw
  18: dp4 r2.z, cb1[40].xyzw, r1.xyzw
  19: add r1.xyz, r2.xyzx, v6.xyzx
  20: max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  21: log r2.xyz, r1.xyzx
  22: mul r2.xyz, r2.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  23: exp r2.xyz, r2.xyzx
  24: mad r2.xyz, r2.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  25: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  26: eq r1.w, cb0[3].w, l(0.000000)
  27: movc r1.xyz, r1.wwww, r2.xyzx, r1.xyzx
  28: mul r1.xyz, r0.wwww, r1.xyzx
  29: sample r2.xyzw, v1.xyxx, t2.xyzw, s2
  30: mul r2.xyz, r2.xyzx, cb0[14].xyzx
  31: mad o3.xyz, r0.xyzx, r1.xyzx, r2.xyzx
  32: mov o3.w, l(1.000000)
  33: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" "_ALPHABLEND_ON" }
"// shader disassembly not supported on opengl"
}
SubProgram "d3d9 " {
// Stats: 35 math, 2 textures
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" "_ALPHABLEND_ON" }
Vector 5 [_Color]
Float 7 [_Glossiness]
Float 6 [_Metallic]
Float 8 [_OcclusionStrength]
Vector 3 [unity_ColorSpaceDielectricSpec]
Vector 4 [unity_ColorSpaceLuminance]
Vector 2 [unity_SHAb]
Vector 1 [unity_SHAg]
Vector 0 [unity_SHAr]
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_OcclusionMap] 2D 1
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D _OcclusionMap;
//   float _OcclusionStrength;
//   float4 unity_ColorSpaceDielectricSpec;
//   float4 unity_ColorSpaceLuminance;
//   float4 unity_SHAb;
//   float4 unity_SHAg;
//   float4 unity_SHAr;
//
//
// Registers:
//
//   Name                           Reg   Size
//   ------------------------------ ----- ----
//   unity_SHAr                     c0       1
//   unity_SHAg                     c1       1
//   unity_SHAb                     c2       1
//   unity_ColorSpaceDielectricSpec c3       1
//   unity_ColorSpaceLuminance      c4       1
//   _Color                         c5       1
//   _Metallic                      c6       1
//   _Glossiness                    c7       1
//   _OcclusionStrength             c8       1
//   _MainTex                       s0       1
//   _OcclusionMap                  s1       1
//

    ps_3_0
    def c9, 1.05499995, -0.0549999997, 0, 0
    def c10, 1, 0, 0.416666657, 0.5
    dcl_texcoord v0.xy
    dcl_texcoord4_pp v1.xyz
    dcl_texcoord5_pp v2.xyz
    dcl_2d s0
    dcl_2d s1
    texld r0, v0, s0
    mov r1, c3
    mad_pp r2.xyz, c5, r0, -r1
    mul_pp r0.xyz, r0, c5
    mad_pp oC1.xyz, c6.x, r2, r1
    nrm_pp r2.xyz, v1
    mov r2.w, c10.x
    dp4_pp r1.x, c0, r2
    dp4_pp r1.y, c1, r2
    dp4_pp r1.z, c2, r2
    mad_pp oC2, r2, c10.wwwx, c10.wwwy
    add_pp r1.xyz, r1, v2
    max_pp r2.xyz, r1, c10.y
    log_pp r1.x, r2.x
    log_pp r1.y, r2.y
    log_pp r1.z, r2.z
    mul_pp r1.xyz, r1, c10.z
    exp_pp r3.x, r1.x
    exp_pp r3.y, r1.y
    exp_pp r3.z, r1.z
    mad_pp r1.xyz, r3, c9.x, c9.y
    max_pp r3.xyz, r1, c10.y
    abs r0.w, c4.w
    cmp_pp r1.xyz, -r0.w, r3, r2
    texld_pp r2, v0, s1
    mov r2.x, c10.x
    add_pp r0.w, r2.x, -c8.x
    mad_pp r2.w, r2.y, c8.x, r0.w
    mul_pp r1.xyz, r1, r2.w
    mad_pp r0.w, c6.x, -r1.w, r1.w
    mul_pp r2.xyz, r0.w, r0
    mul_pp oC3.xyz, r1, r2
    mov_pp oC0, r2
    mov_pp oC1.w, c7.x
    mov_pp oC3.w, c10.x

// approximately 37 instruction slots used (2 texture, 35 arithmetic)
"
}
SubProgram "d3d11 " {
// Stats: 24 math, 2 textures
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" "_ALPHABLEND_ON" }
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_OcclusionMap] 2D 1
ConstBuffer "$Globals" 240
Vector 32 [unity_ColorSpaceDielectricSpec]
Vector 48 [unity_ColorSpaceLuminance]
Vector 128 [_Color]
Float 200 [_Metallic]
Float 204 [_Glossiness]
Float 208 [_OcclusionStrength]
ConstBuffer "UnityLighting" 720
Vector 608 [unity_SHAr]
Vector 624 [unity_SHAg]
Vector 640 [unity_SHAb]
BindCB  "$Globals" 0
BindCB  "UnityLighting" 1
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer cb0[14], immediateIndexed
      dcl_constantbuffer cb1[41], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 3
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s1
   1: add r0.x, -cb0[13].x, l(1.000000)
   2: mad r0.w, r0.y, cb0[13].x, r0.x
   3: mad r1.x, -cb0[12].z, cb0[2].w, cb0[2].w
   4: sample r2.xyzw, v1.xyxx, t0.xyzw, s0
   5: mul r1.yzw, r2.xxyz, cb0[8].xxyz
   6: mad r2.xyz, cb0[8].xyzx, r2.xyzx, -cb0[2].xyzx
   7: mad o1.xyz, cb0[12].zzzz, r2.xyzx, cb0[2].xyzx
   8: mul r0.xyz, r1.xxxx, r1.yzwy
   9: mov o0.xyzw, r0.xyzw
  10: mov o1.w, cb0[12].w
  11: dp3 r1.x, v5.xyzx, v5.xyzx
  12: rsq r1.x, r1.x
  13: mul r1.xyz, r1.xxxx, v5.xyzx
  14: mov r1.w, l(1.000000)
  15: mad o2.xyzw, r1.xyzw, l(0.500000, 0.500000, 0.500000, 1.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  16: dp4 r2.x, cb1[38].xyzw, r1.xyzw
  17: dp4 r2.y, cb1[39].xyzw, r1.xyzw
  18: dp4 r2.z, cb1[40].xyzw, r1.xyzw
  19: add r1.xyz, r2.xyzx, v6.xyzx
  20: max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  21: log r2.xyz, r1.xyzx
  22: mul r2.xyz, r2.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  23: exp r2.xyz, r2.xyzx
  24: mad r2.xyz, r2.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  25: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  26: eq r1.w, cb0[3].w, l(0.000000)
  27: movc r1.xyz, r1.wwww, r2.xyzx, r1.xyzx
  28: mul r1.xyz, r0.wwww, r1.xyzx
  29: mul o3.xyz, r0.xyzx, r1.xyzx
  30: mov o3.w, l(1.000000)
  31: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "UNITY_HDR_ON" "_ALPHABLEND_ON" }
"// shader disassembly not supported on opengl"
}
SubProgram "d3d9 " {
// Stats: 36 math, 3 textures
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "UNITY_HDR_ON" "_ALPHABLEND_ON" }
Vector 5 [_Color]
Vector 9 [_EmissionColor]
Float 7 [_Glossiness]
Float 6 [_Metallic]
Float 8 [_OcclusionStrength]
Vector 3 [unity_ColorSpaceDielectricSpec]
Vector 4 [unity_ColorSpaceLuminance]
Vector 2 [unity_SHAb]
Vector 1 [unity_SHAg]
Vector 0 [unity_SHAr]
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_OcclusionMap] 2D 1
SetTexture 2 [_EmissionMap] 2D 2
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _Color;
//   float4 _EmissionColor;
//   sampler2D _EmissionMap;
//   float _Glossiness;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D _OcclusionMap;
//   float _OcclusionStrength;
//   float4 unity_ColorSpaceDielectricSpec;
//   float4 unity_ColorSpaceLuminance;
//   float4 unity_SHAb;
//   float4 unity_SHAg;
//   float4 unity_SHAr;
//
//
// Registers:
//
//   Name                           Reg   Size
//   ------------------------------ ----- ----
//   unity_SHAr                     c0       1
//   unity_SHAg                     c1       1
//   unity_SHAb                     c2       1
//   unity_ColorSpaceDielectricSpec c3       1
//   unity_ColorSpaceLuminance      c4       1
//   _Color                         c5       1
//   _Metallic                      c6       1
//   _Glossiness                    c7       1
//   _OcclusionStrength             c8       1
//   _EmissionColor                 c9       1
//   _MainTex                       s0       1
//   _OcclusionMap                  s1       1
//   _EmissionMap                   s2       1
//

    ps_3_0
    def c10, 1.05499995, -0.0549999997, 0, 0
    def c11, 1, 0, 0.416666657, 0.5
    dcl_texcoord v0.xy
    dcl_texcoord4_pp v1.xyz
    dcl_texcoord5_pp v2.xyz
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    texld r0, v0, s0
    mov r1, c3
    mad_pp r2.xyz, c5, r0, -r1
    mul_pp r0.xyz, r0, c5
    mad_pp oC1.xyz, c6.x, r2, r1
    nrm_pp r2.xyz, v1
    mov r2.w, c11.x
    dp4_pp r1.x, c0, r2
    dp4_pp r1.y, c1, r2
    dp4_pp r1.z, c2, r2
    mad_pp oC2, r2, c11.wwwx, c11.wwwy
    add_pp r1.xyz, r1, v2
    max_pp r2.xyz, r1, c11.y
    log_pp r1.x, r2.x
    log_pp r1.y, r2.y
    log_pp r1.z, r2.z
    mul_pp r1.xyz, r1, c11.z
    exp_pp r3.x, r1.x
    exp_pp r3.y, r1.y
    exp_pp r3.z, r1.z
    mad_pp r1.xyz, r3, c10.x, c10.y
    max_pp r3.xyz, r1, c11.y
    abs r0.w, c4.w
    cmp_pp r1.xyz, -r0.w, r3, r2
    texld_pp r2, v0, s1
    mov r2.x, c11.x
    add_pp r0.w, r2.x, -c8.x
    mad_pp r2.w, r2.y, c8.x, r0.w
    mul_pp r1.xyz, r1, r2.w
    mad_pp r0.w, c6.x, -r1.w, r1.w
    mul_pp r2.xyz, r0.w, r0
    texld r0, v0, s2
    mul_pp r0.xyz, r0, c9
    mad_pp oC3.xyz, r2, r1, r0
    mov_pp oC0, r2
    mov_pp oC1.w, c7.x
    mov_pp oC3.w, c11.x

// approximately 39 instruction slots used (3 texture, 36 arithmetic)
"
}
SubProgram "d3d11 " {
// Stats: 25 math, 3 textures
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "UNITY_HDR_ON" "_ALPHABLEND_ON" }
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_OcclusionMap] 2D 1
SetTexture 2 [_EmissionMap] 2D 2
ConstBuffer "$Globals" 240
Vector 32 [unity_ColorSpaceDielectricSpec]
Vector 48 [unity_ColorSpaceLuminance]
Vector 128 [_Color]
Float 200 [_Metallic]
Float 204 [_Glossiness]
Float 208 [_OcclusionStrength]
Vector 224 [_EmissionColor]
ConstBuffer "UnityLighting" 720
Vector 608 [unity_SHAr]
Vector 624 [unity_SHAg]
Vector 640 [unity_SHAb]
BindCB  "$Globals" 0
BindCB  "UnityLighting" 1
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer cb0[15], immediateIndexed
      dcl_constantbuffer cb1[41], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 3
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s1
   1: add r0.x, -cb0[13].x, l(1.000000)
   2: mad r0.w, r0.y, cb0[13].x, r0.x
   3: mad r1.x, -cb0[12].z, cb0[2].w, cb0[2].w
   4: sample r2.xyzw, v1.xyxx, t0.xyzw, s0
   5: mul r1.yzw, r2.xxyz, cb0[8].xxyz
   6: mad r2.xyz, cb0[8].xyzx, r2.xyzx, -cb0[2].xyzx
   7: mad o1.xyz, cb0[12].zzzz, r2.xyzx, cb0[2].xyzx
   8: mul r0.xyz, r1.xxxx, r1.yzwy
   9: mov o0.xyzw, r0.xyzw
  10: mov o1.w, cb0[12].w
  11: dp3 r1.x, v5.xyzx, v5.xyzx
  12: rsq r1.x, r1.x
  13: mul r1.xyz, r1.xxxx, v5.xyzx
  14: mov r1.w, l(1.000000)
  15: mad o2.xyzw, r1.xyzw, l(0.500000, 0.500000, 0.500000, 1.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  16: dp4 r2.x, cb1[38].xyzw, r1.xyzw
  17: dp4 r2.y, cb1[39].xyzw, r1.xyzw
  18: dp4 r2.z, cb1[40].xyzw, r1.xyzw
  19: add r1.xyz, r2.xyzx, v6.xyzx
  20: max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  21: log r2.xyz, r1.xyzx
  22: mul r2.xyz, r2.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  23: exp r2.xyz, r2.xyzx
  24: mad r2.xyz, r2.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  25: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  26: eq r1.w, cb0[3].w, l(0.000000)
  27: movc r1.xyz, r1.wwww, r2.xyzx, r1.xyzx
  28: mul r1.xyz, r0.wwww, r1.xyzx
  29: sample r2.xyzw, v1.xyxx, t2.xyzw, s2
  30: mul r2.xyz, r2.xyzx, cb0[14].xyzx
  31: mad o3.xyz, r0.xyzx, r1.xyzx, r2.xyzx
  32: mov o3.w, l(1.000000)
  33: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" }
"// shader disassembly not supported on opengl"
}
SubProgram "d3d9 " {
// Stats: 35 math, 2 textures
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" }
Vector 5 [_Color]
Float 7 [_Glossiness]
Float 6 [_Metallic]
Float 8 [_OcclusionStrength]
Vector 3 [unity_ColorSpaceDielectricSpec]
Vector 4 [unity_ColorSpaceLuminance]
Vector 2 [unity_SHAb]
Vector 1 [unity_SHAg]
Vector 0 [unity_SHAr]
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_OcclusionMap] 2D 1
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D _OcclusionMap;
//   float _OcclusionStrength;
//   float4 unity_ColorSpaceDielectricSpec;
//   float4 unity_ColorSpaceLuminance;
//   float4 unity_SHAb;
//   float4 unity_SHAg;
//   float4 unity_SHAr;
//
//
// Registers:
//
//   Name                           Reg   Size
//   ------------------------------ ----- ----
//   unity_SHAr                     c0       1
//   unity_SHAg                     c1       1
//   unity_SHAb                     c2       1
//   unity_ColorSpaceDielectricSpec c3       1
//   unity_ColorSpaceLuminance      c4       1
//   _Color                         c5       1
//   _Metallic                      c6       1
//   _Glossiness                    c7       1
//   _OcclusionStrength             c8       1
//   _MainTex                       s0       1
//   _OcclusionMap                  s1       1
//

    ps_3_0
    def c9, 1.05499995, -0.0549999997, 0, 0
    def c10, 1, 0, 0.416666657, 0.5
    dcl_texcoord v0.xy
    dcl_texcoord4_pp v1.xyz
    dcl_texcoord5_pp v2.xyz
    dcl_2d s0
    dcl_2d s1
    texld r0, v0, s0
    mov r1, c3
    mad_pp r2.xyz, c5, r0, -r1
    mul_pp r0.xyz, r0, c5
    mad_pp oC1.xyz, c6.x, r2, r1
    nrm_pp r2.xyz, v1
    mov r2.w, c10.x
    dp4_pp r1.x, c0, r2
    dp4_pp r1.y, c1, r2
    dp4_pp r1.z, c2, r2
    mad_pp oC2, r2, c10.wwwx, c10.wwwy
    add_pp r1.xyz, r1, v2
    max_pp r2.xyz, r1, c10.y
    log_pp r1.x, r2.x
    log_pp r1.y, r2.y
    log_pp r1.z, r2.z
    mul_pp r1.xyz, r1, c10.z
    exp_pp r3.x, r1.x
    exp_pp r3.y, r1.y
    exp_pp r3.z, r1.z
    mad_pp r1.xyz, r3, c9.x, c9.y
    max_pp r3.xyz, r1, c10.y
    abs r0.w, c4.w
    cmp_pp r1.xyz, -r0.w, r3, r2
    texld_pp r2, v0, s1
    mov r2.x, c10.x
    add_pp r0.w, r2.x, -c8.x
    mad_pp r2.w, r2.y, c8.x, r0.w
    mul_pp r1.xyz, r1, r2.w
    mad_pp r0.w, c6.x, -r1.w, r1.w
    mul_pp r2.xyz, r0.w, r0
    mul_pp oC3.xyz, r1, r2
    mov_pp oC0, r2
    mov_pp oC1.w, c7.x
    mov_pp oC3.w, c10.x

// approximately 37 instruction slots used (2 texture, 35 arithmetic)
"
}
SubProgram "d3d11 " {
// Stats: 24 math, 2 textures
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" }
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_OcclusionMap] 2D 1
ConstBuffer "$Globals" 240
Vector 32 [unity_ColorSpaceDielectricSpec]
Vector 48 [unity_ColorSpaceLuminance]
Vector 128 [_Color]
Float 200 [_Metallic]
Float 204 [_Glossiness]
Float 208 [_OcclusionStrength]
ConstBuffer "UnityLighting" 720
Vector 608 [unity_SHAr]
Vector 624 [unity_SHAg]
Vector 640 [unity_SHAb]
BindCB  "$Globals" 0
BindCB  "UnityLighting" 1
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer cb0[14], immediateIndexed
      dcl_constantbuffer cb1[41], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 3
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s1
   1: add r0.x, -cb0[13].x, l(1.000000)
   2: mad r0.w, r0.y, cb0[13].x, r0.x
   3: mad r1.x, -cb0[12].z, cb0[2].w, cb0[2].w
   4: sample r2.xyzw, v1.xyxx, t0.xyzw, s0
   5: mul r1.yzw, r2.xxyz, cb0[8].xxyz
   6: mad r2.xyz, cb0[8].xyzx, r2.xyzx, -cb0[2].xyzx
   7: mad o1.xyz, cb0[12].zzzz, r2.xyzx, cb0[2].xyzx
   8: mul r0.xyz, r1.xxxx, r1.yzwy
   9: mov o0.xyzw, r0.xyzw
  10: mov o1.w, cb0[12].w
  11: dp3 r1.x, v5.xyzx, v5.xyzx
  12: rsq r1.x, r1.x
  13: mul r1.xyz, r1.xxxx, v5.xyzx
  14: mov r1.w, l(1.000000)
  15: mad o2.xyzw, r1.xyzw, l(0.500000, 0.500000, 0.500000, 1.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  16: dp4 r2.x, cb1[38].xyzw, r1.xyzw
  17: dp4 r2.y, cb1[39].xyzw, r1.xyzw
  18: dp4 r2.z, cb1[40].xyzw, r1.xyzw
  19: add r1.xyz, r2.xyzx, v6.xyzx
  20: max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  21: log r2.xyz, r1.xyzx
  22: mul r2.xyz, r2.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  23: exp r2.xyz, r2.xyzx
  24: mad r2.xyz, r2.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  25: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  26: eq r1.w, cb0[3].w, l(0.000000)
  27: movc r1.xyz, r1.wwww, r2.xyzx, r1.xyzx
  28: mul r1.xyz, r0.wwww, r1.xyzx
  29: mul o3.xyz, r0.xyzx, r1.xyzx
  30: mov o3.w, l(1.000000)
  31: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "UNITY_HDR_ON" }
"// shader disassembly not supported on opengl"
}
SubProgram "d3d9 " {
// Stats: 36 math, 3 textures
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "UNITY_HDR_ON" }
Vector 5 [_Color]
Vector 9 [_EmissionColor]
Float 7 [_Glossiness]
Float 6 [_Metallic]
Float 8 [_OcclusionStrength]
Vector 3 [unity_ColorSpaceDielectricSpec]
Vector 4 [unity_ColorSpaceLuminance]
Vector 2 [unity_SHAb]
Vector 1 [unity_SHAg]
Vector 0 [unity_SHAr]
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_OcclusionMap] 2D 1
SetTexture 2 [_EmissionMap] 2D 2
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _Color;
//   float4 _EmissionColor;
//   sampler2D _EmissionMap;
//   float _Glossiness;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D _OcclusionMap;
//   float _OcclusionStrength;
//   float4 unity_ColorSpaceDielectricSpec;
//   float4 unity_ColorSpaceLuminance;
//   float4 unity_SHAb;
//   float4 unity_SHAg;
//   float4 unity_SHAr;
//
//
// Registers:
//
//   Name                           Reg   Size
//   ------------------------------ ----- ----
//   unity_SHAr                     c0       1
//   unity_SHAg                     c1       1
//   unity_SHAb                     c2       1
//   unity_ColorSpaceDielectricSpec c3       1
//   unity_ColorSpaceLuminance      c4       1
//   _Color                         c5       1
//   _Metallic                      c6       1
//   _Glossiness                    c7       1
//   _OcclusionStrength             c8       1
//   _EmissionColor                 c9       1
//   _MainTex                       s0       1
//   _OcclusionMap                  s1       1
//   _EmissionMap                   s2       1
//

    ps_3_0
    def c10, 1.05499995, -0.0549999997, 0, 0
    def c11, 1, 0, 0.416666657, 0.5
    dcl_texcoord v0.xy
    dcl_texcoord4_pp v1.xyz
    dcl_texcoord5_pp v2.xyz
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    texld r0, v0, s0
    mov r1, c3
    mad_pp r2.xyz, c5, r0, -r1
    mul_pp r0.xyz, r0, c5
    mad_pp oC1.xyz, c6.x, r2, r1
    nrm_pp r2.xyz, v1
    mov r2.w, c11.x
    dp4_pp r1.x, c0, r2
    dp4_pp r1.y, c1, r2
    dp4_pp r1.z, c2, r2
    mad_pp oC2, r2, c11.wwwx, c11.wwwy
    add_pp r1.xyz, r1, v2
    max_pp r2.xyz, r1, c11.y
    log_pp r1.x, r2.x
    log_pp r1.y, r2.y
    log_pp r1.z, r2.z
    mul_pp r1.xyz, r1, c11.z
    exp_pp r3.x, r1.x
    exp_pp r3.y, r1.y
    exp_pp r3.z, r1.z
    mad_pp r1.xyz, r3, c10.x, c10.y
    max_pp r3.xyz, r1, c11.y
    abs r0.w, c4.w
    cmp_pp r1.xyz, -r0.w, r3, r2
    texld_pp r2, v0, s1
    mov r2.x, c11.x
    add_pp r0.w, r2.x, -c8.x
    mad_pp r2.w, r2.y, c8.x, r0.w
    mul_pp r1.xyz, r1, r2.w
    mad_pp r0.w, c6.x, -r1.w, r1.w
    mul_pp r2.xyz, r0.w, r0
    texld r0, v0, s2
    mul_pp r0.xyz, r0, c9
    mad_pp oC3.xyz, r2, r1, r0
    mov_pp oC0, r2
    mov_pp oC1.w, c7.x
    mov_pp oC3.w, c11.x

// approximately 39 instruction slots used (3 texture, 36 arithmetic)
"
}
SubProgram "d3d11 " {
// Stats: 25 math, 3 textures
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "UNITY_HDR_ON" }
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_OcclusionMap] 2D 1
SetTexture 2 [_EmissionMap] 2D 2
ConstBuffer "$Globals" 240
Vector 32 [unity_ColorSpaceDielectricSpec]
Vector 48 [unity_ColorSpaceLuminance]
Vector 128 [_Color]
Float 200 [_Metallic]
Float 204 [_Glossiness]
Float 208 [_OcclusionStrength]
Vector 224 [_EmissionColor]
ConstBuffer "UnityLighting" 720
Vector 608 [unity_SHAr]
Vector 624 [unity_SHAg]
Vector 640 [unity_SHAb]
BindCB  "$Globals" 0
BindCB  "UnityLighting" 1
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer cb0[15], immediateIndexed
      dcl_constantbuffer cb1[41], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 3
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s1
   1: add r0.x, -cb0[13].x, l(1.000000)
   2: mad r0.w, r0.y, cb0[13].x, r0.x
   3: mad r1.x, -cb0[12].z, cb0[2].w, cb0[2].w
   4: sample r2.xyzw, v1.xyxx, t0.xyzw, s0
   5: mul r1.yzw, r2.xxyz, cb0[8].xxyz
   6: mad r2.xyz, cb0[8].xyzx, r2.xyzx, -cb0[2].xyzx
   7: mad o1.xyz, cb0[12].zzzz, r2.xyzx, cb0[2].xyzx
   8: mul r0.xyz, r1.xxxx, r1.yzwy
   9: mov o0.xyzw, r0.xyzw
  10: mov o1.w, cb0[12].w
  11: dp3 r1.x, v5.xyzx, v5.xyzx
  12: rsq r1.x, r1.x
  13: mul r1.xyz, r1.xxxx, v5.xyzx
  14: mov r1.w, l(1.000000)
  15: mad o2.xyzw, r1.xyzw, l(0.500000, 0.500000, 0.500000, 1.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  16: dp4 r2.x, cb1[38].xyzw, r1.xyzw
  17: dp4 r2.y, cb1[39].xyzw, r1.xyzw
  18: dp4 r2.z, cb1[40].xyzw, r1.xyzw
  19: add r1.xyz, r2.xyzx, v6.xyzx
  20: max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  21: log r2.xyz, r1.xyzx
  22: mul r2.xyz, r2.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  23: exp r2.xyz, r2.xyzx
  24: mad r2.xyz, r2.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  25: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  26: eq r1.w, cb0[3].w, l(0.000000)
  27: movc r1.xyz, r1.wwww, r2.xyzx, r1.xyzx
  28: mul r1.xyz, r0.wwww, r1.xyzx
  29: sample r2.xyzw, v1.xyxx, t2.xyzw, s2
  30: mul r2.xyz, r2.xyzx, cb0[14].xyzx
  31: mad o3.xyz, r0.xyzx, r1.xyzx, r2.xyzx
  32: mov o3.w, l(1.000000)
  33: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" "_ALPHABLEND_ON" }
"// shader disassembly not supported on opengl"
}
SubProgram "d3d9 " {
// Stats: 35 math, 2 textures
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" "_ALPHABLEND_ON" }
Vector 5 [_Color]
Float 7 [_Glossiness]
Float 6 [_Metallic]
Float 8 [_OcclusionStrength]
Vector 3 [unity_ColorSpaceDielectricSpec]
Vector 4 [unity_ColorSpaceLuminance]
Vector 2 [unity_SHAb]
Vector 1 [unity_SHAg]
Vector 0 [unity_SHAr]
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_OcclusionMap] 2D 1
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D _OcclusionMap;
//   float _OcclusionStrength;
//   float4 unity_ColorSpaceDielectricSpec;
//   float4 unity_ColorSpaceLuminance;
//   float4 unity_SHAb;
//   float4 unity_SHAg;
//   float4 unity_SHAr;
//
//
// Registers:
//
//   Name                           Reg   Size
//   ------------------------------ ----- ----
//   unity_SHAr                     c0       1
//   unity_SHAg                     c1       1
//   unity_SHAb                     c2       1
//   unity_ColorSpaceDielectricSpec c3       1
//   unity_ColorSpaceLuminance      c4       1
//   _Color                         c5       1
//   _Metallic                      c6       1
//   _Glossiness                    c7       1
//   _OcclusionStrength             c8       1
//   _MainTex                       s0       1
//   _OcclusionMap                  s1       1
//

    ps_3_0
    def c9, 1.05499995, -0.0549999997, 0, 0
    def c10, 1, 0, 0.416666657, 0.5
    dcl_texcoord v0.xy
    dcl_texcoord4_pp v1.xyz
    dcl_texcoord5_pp v2.xyz
    dcl_2d s0
    dcl_2d s1
    texld r0, v0, s0
    mov r1, c3
    mad_pp r2.xyz, c5, r0, -r1
    mul_pp r0.xyz, r0, c5
    mad_pp oC1.xyz, c6.x, r2, r1
    nrm_pp r2.xyz, v1
    mov r2.w, c10.x
    dp4_pp r1.x, c0, r2
    dp4_pp r1.y, c1, r2
    dp4_pp r1.z, c2, r2
    mad_pp oC2, r2, c10.wwwx, c10.wwwy
    add_pp r1.xyz, r1, v2
    max_pp r2.xyz, r1, c10.y
    log_pp r1.x, r2.x
    log_pp r1.y, r2.y
    log_pp r1.z, r2.z
    mul_pp r1.xyz, r1, c10.z
    exp_pp r3.x, r1.x
    exp_pp r3.y, r1.y
    exp_pp r3.z, r1.z
    mad_pp r1.xyz, r3, c9.x, c9.y
    max_pp r3.xyz, r1, c10.y
    abs r0.w, c4.w
    cmp_pp r1.xyz, -r0.w, r3, r2
    texld_pp r2, v0, s1
    mov r2.x, c10.x
    add_pp r0.w, r2.x, -c8.x
    mad_pp r2.w, r2.y, c8.x, r0.w
    mul_pp r1.xyz, r1, r2.w
    mad_pp r0.w, c6.x, -r1.w, r1.w
    mul_pp r2.xyz, r0.w, r0
    mul_pp oC3.xyz, r1, r2
    mov_pp oC0, r2
    mov_pp oC1.w, c7.x
    mov_pp oC3.w, c10.x

// approximately 37 instruction slots used (2 texture, 35 arithmetic)
"
}
SubProgram "d3d11 " {
// Stats: 24 math, 2 textures
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" "_ALPHABLEND_ON" }
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_OcclusionMap] 2D 1
ConstBuffer "$Globals" 240
Vector 32 [unity_ColorSpaceDielectricSpec]
Vector 48 [unity_ColorSpaceLuminance]
Vector 128 [_Color]
Float 200 [_Metallic]
Float 204 [_Glossiness]
Float 208 [_OcclusionStrength]
ConstBuffer "UnityLighting" 720
Vector 608 [unity_SHAr]
Vector 624 [unity_SHAg]
Vector 640 [unity_SHAb]
BindCB  "$Globals" 0
BindCB  "UnityLighting" 1
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer cb0[14], immediateIndexed
      dcl_constantbuffer cb1[41], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 3
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s1
   1: add r0.x, -cb0[13].x, l(1.000000)
   2: mad r0.w, r0.y, cb0[13].x, r0.x
   3: mad r1.x, -cb0[12].z, cb0[2].w, cb0[2].w
   4: sample r2.xyzw, v1.xyxx, t0.xyzw, s0
   5: mul r1.yzw, r2.xxyz, cb0[8].xxyz
   6: mad r2.xyz, cb0[8].xyzx, r2.xyzx, -cb0[2].xyzx
   7: mad o1.xyz, cb0[12].zzzz, r2.xyzx, cb0[2].xyzx
   8: mul r0.xyz, r1.xxxx, r1.yzwy
   9: mov o0.xyzw, r0.xyzw
  10: mov o1.w, cb0[12].w
  11: dp3 r1.x, v5.xyzx, v5.xyzx
  12: rsq r1.x, r1.x
  13: mul r1.xyz, r1.xxxx, v5.xyzx
  14: mov r1.w, l(1.000000)
  15: mad o2.xyzw, r1.xyzw, l(0.500000, 0.500000, 0.500000, 1.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  16: dp4 r2.x, cb1[38].xyzw, r1.xyzw
  17: dp4 r2.y, cb1[39].xyzw, r1.xyzw
  18: dp4 r2.z, cb1[40].xyzw, r1.xyzw
  19: add r1.xyz, r2.xyzx, v6.xyzx
  20: max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  21: log r2.xyz, r1.xyzx
  22: mul r2.xyz, r2.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  23: exp r2.xyz, r2.xyzx
  24: mad r2.xyz, r2.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  25: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  26: eq r1.w, cb0[3].w, l(0.000000)
  27: movc r1.xyz, r1.wwww, r2.xyzx, r1.xyzx
  28: mul r1.xyz, r0.wwww, r1.xyzx
  29: mul o3.xyz, r0.xyzx, r1.xyzx
  30: mov o3.w, l(1.000000)
  31: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "UNITY_HDR_ON" "_ALPHABLEND_ON" }
"// shader disassembly not supported on opengl"
}
SubProgram "d3d9 " {
// Stats: 36 math, 3 textures
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "UNITY_HDR_ON" "_ALPHABLEND_ON" }
Vector 5 [_Color]
Vector 9 [_EmissionColor]
Float 7 [_Glossiness]
Float 6 [_Metallic]
Float 8 [_OcclusionStrength]
Vector 3 [unity_ColorSpaceDielectricSpec]
Vector 4 [unity_ColorSpaceLuminance]
Vector 2 [unity_SHAb]
Vector 1 [unity_SHAg]
Vector 0 [unity_SHAr]
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_OcclusionMap] 2D 1
SetTexture 2 [_EmissionMap] 2D 2
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _Color;
//   float4 _EmissionColor;
//   sampler2D _EmissionMap;
//   float _Glossiness;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D _OcclusionMap;
//   float _OcclusionStrength;
//   float4 unity_ColorSpaceDielectricSpec;
//   float4 unity_ColorSpaceLuminance;
//   float4 unity_SHAb;
//   float4 unity_SHAg;
//   float4 unity_SHAr;
//
//
// Registers:
//
//   Name                           Reg   Size
//   ------------------------------ ----- ----
//   unity_SHAr                     c0       1
//   unity_SHAg                     c1       1
//   unity_SHAb                     c2       1
//   unity_ColorSpaceDielectricSpec c3       1
//   unity_ColorSpaceLuminance      c4       1
//   _Color                         c5       1
//   _Metallic                      c6       1
//   _Glossiness                    c7       1
//   _OcclusionStrength             c8       1
//   _EmissionColor                 c9       1
//   _MainTex                       s0       1
//   _OcclusionMap                  s1       1
//   _EmissionMap                   s2       1
//

    ps_3_0
    def c10, 1.05499995, -0.0549999997, 0, 0
    def c11, 1, 0, 0.416666657, 0.5
    dcl_texcoord v0.xy
    dcl_texcoord4_pp v1.xyz
    dcl_texcoord5_pp v2.xyz
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    texld r0, v0, s0
    mov r1, c3
    mad_pp r2.xyz, c5, r0, -r1
    mul_pp r0.xyz, r0, c5
    mad_pp oC1.xyz, c6.x, r2, r1
    nrm_pp r2.xyz, v1
    mov r2.w, c11.x
    dp4_pp r1.x, c0, r2
    dp4_pp r1.y, c1, r2
    dp4_pp r1.z, c2, r2
    mad_pp oC2, r2, c11.wwwx, c11.wwwy
    add_pp r1.xyz, r1, v2
    max_pp r2.xyz, r1, c11.y
    log_pp r1.x, r2.x
    log_pp r1.y, r2.y
    log_pp r1.z, r2.z
    mul_pp r1.xyz, r1, c11.z
    exp_pp r3.x, r1.x
    exp_pp r3.y, r1.y
    exp_pp r3.z, r1.z
    mad_pp r1.xyz, r3, c10.x, c10.y
    max_pp r3.xyz, r1, c11.y
    abs r0.w, c4.w
    cmp_pp r1.xyz, -r0.w, r3, r2
    texld_pp r2, v0, s1
    mov r2.x, c11.x
    add_pp r0.w, r2.x, -c8.x
    mad_pp r2.w, r2.y, c8.x, r0.w
    mul_pp r1.xyz, r1, r2.w
    mad_pp r0.w, c6.x, -r1.w, r1.w
    mul_pp r2.xyz, r0.w, r0
    texld r0, v0, s2
    mul_pp r0.xyz, r0, c9
    mad_pp oC3.xyz, r2, r1, r0
    mov_pp oC0, r2
    mov_pp oC1.w, c7.x
    mov_pp oC3.w, c11.x

// approximately 39 instruction slots used (3 texture, 36 arithmetic)
"
}
SubProgram "d3d11 " {
// Stats: 25 math, 3 textures
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "UNITY_HDR_ON" "_ALPHABLEND_ON" }
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_OcclusionMap] 2D 1
SetTexture 2 [_EmissionMap] 2D 2
ConstBuffer "$Globals" 240
Vector 32 [unity_ColorSpaceDielectricSpec]
Vector 48 [unity_ColorSpaceLuminance]
Vector 128 [_Color]
Float 200 [_Metallic]
Float 204 [_Glossiness]
Float 208 [_OcclusionStrength]
Vector 224 [_EmissionColor]
ConstBuffer "UnityLighting" 720
Vector 608 [unity_SHAr]
Vector 624 [unity_SHAg]
Vector 640 [unity_SHAb]
BindCB  "$Globals" 0
BindCB  "UnityLighting" 1
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer cb0[15], immediateIndexed
      dcl_constantbuffer cb1[41], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 3
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s1
   1: add r0.x, -cb0[13].x, l(1.000000)
   2: mad r0.w, r0.y, cb0[13].x, r0.x
   3: mad r1.x, -cb0[12].z, cb0[2].w, cb0[2].w
   4: sample r2.xyzw, v1.xyxx, t0.xyzw, s0
   5: mul r1.yzw, r2.xxyz, cb0[8].xxyz
   6: mad r2.xyz, cb0[8].xyzx, r2.xyzx, -cb0[2].xyzx
   7: mad o1.xyz, cb0[12].zzzz, r2.xyzx, cb0[2].xyzx
   8: mul r0.xyz, r1.xxxx, r1.yzwy
   9: mov o0.xyzw, r0.xyzw
  10: mov o1.w, cb0[12].w
  11: dp3 r1.x, v5.xyzx, v5.xyzx
  12: rsq r1.x, r1.x
  13: mul r1.xyz, r1.xxxx, v5.xyzx
  14: mov r1.w, l(1.000000)
  15: mad o2.xyzw, r1.xyzw, l(0.500000, 0.500000, 0.500000, 1.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  16: dp4 r2.x, cb1[38].xyzw, r1.xyzw
  17: dp4 r2.y, cb1[39].xyzw, r1.xyzw
  18: dp4 r2.z, cb1[40].xyzw, r1.xyzw
  19: add r1.xyz, r2.xyzx, v6.xyzx
  20: max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  21: log r2.xyz, r1.xyzx
  22: mul r2.xyz, r2.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  23: exp r2.xyz, r2.xyzx
  24: mad r2.xyz, r2.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  25: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  26: eq r1.w, cb0[3].w, l(0.000000)
  27: movc r1.xyz, r1.wwww, r2.xyzx, r1.xyzx
  28: mul r1.xyz, r0.wwww, r1.xyzx
  29: sample r2.xyzw, v1.xyxx, t2.xyzw, s2
  30: mul r2.xyz, r2.xyzx, cb0[14].xyzx
  31: mad o3.xyz, r0.xyzx, r1.xyzx, r2.xyzx
  32: mov o3.w, l(1.000000)
  33: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_SEPARATE" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" }
"// shader disassembly not supported on opengl"
}
SubProgram "d3d9 " {
// Stats: 35 math, 2 textures
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_SEPARATE" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" }
Vector 5 [_Color]
Float 7 [_Glossiness]
Float 6 [_Metallic]
Float 8 [_OcclusionStrength]
Vector 3 [unity_ColorSpaceDielectricSpec]
Vector 4 [unity_ColorSpaceLuminance]
Vector 2 [unity_SHAb]
Vector 1 [unity_SHAg]
Vector 0 [unity_SHAr]
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_OcclusionMap] 2D 1
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D _OcclusionMap;
//   float _OcclusionStrength;
//   float4 unity_ColorSpaceDielectricSpec;
//   float4 unity_ColorSpaceLuminance;
//   float4 unity_SHAb;
//   float4 unity_SHAg;
//   float4 unity_SHAr;
//
//
// Registers:
//
//   Name                           Reg   Size
//   ------------------------------ ----- ----
//   unity_SHAr                     c0       1
//   unity_SHAg                     c1       1
//   unity_SHAb                     c2       1
//   unity_ColorSpaceDielectricSpec c3       1
//   unity_ColorSpaceLuminance      c4       1
//   _Color                         c5       1
//   _Metallic                      c6       1
//   _Glossiness                    c7       1
//   _OcclusionStrength             c8       1
//   _MainTex                       s0       1
//   _OcclusionMap                  s1       1
//

    ps_3_0
    def c9, 1.05499995, -0.0549999997, 0, 0
    def c10, 1, 0, 0.416666657, 0.5
    dcl_texcoord v0.xy
    dcl_texcoord4_pp v1.xyz
    dcl_texcoord5_pp v2.xyz
    dcl_2d s0
    dcl_2d s1
    texld r0, v0, s0
    mov r1, c3
    mad_pp r2.xyz, c5, r0, -r1
    mul_pp r0.xyz, r0, c5
    mad_pp oC1.xyz, c6.x, r2, r1
    nrm_pp r2.xyz, v1
    mov r2.w, c10.x
    dp4_pp r1.x, c0, r2
    dp4_pp r1.y, c1, r2
    dp4_pp r1.z, c2, r2
    mad_pp oC2, r2, c10.wwwx, c10.wwwy
    add_pp r1.xyz, r1, v2
    max_pp r2.xyz, r1, c10.y
    log_pp r1.x, r2.x
    log_pp r1.y, r2.y
    log_pp r1.z, r2.z
    mul_pp r1.xyz, r1, c10.z
    exp_pp r3.x, r1.x
    exp_pp r3.y, r1.y
    exp_pp r3.z, r1.z
    mad_pp r1.xyz, r3, c9.x, c9.y
    max_pp r3.xyz, r1, c10.y
    abs r0.w, c4.w
    cmp_pp r1.xyz, -r0.w, r3, r2
    texld_pp r2, v0, s1
    mov r2.x, c10.x
    add_pp r0.w, r2.x, -c8.x
    mad_pp r2.w, r2.y, c8.x, r0.w
    mul_pp r1.xyz, r1, r2.w
    mad_pp r0.w, c6.x, -r1.w, r1.w
    mul_pp r2.xyz, r0.w, r0
    mul_pp oC3.xyz, r1, r2
    mov_pp oC0, r2
    mov_pp oC1.w, c7.x
    mov_pp oC3.w, c10.x

// approximately 37 instruction slots used (2 texture, 35 arithmetic)
"
}
SubProgram "d3d11 " {
// Stats: 24 math, 2 textures
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_SEPARATE" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" }
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_OcclusionMap] 2D 1
ConstBuffer "$Globals" 240
Vector 32 [unity_ColorSpaceDielectricSpec]
Vector 48 [unity_ColorSpaceLuminance]
Vector 128 [_Color]
Float 200 [_Metallic]
Float 204 [_Glossiness]
Float 208 [_OcclusionStrength]
ConstBuffer "UnityLighting" 720
Vector 608 [unity_SHAr]
Vector 624 [unity_SHAg]
Vector 640 [unity_SHAb]
BindCB  "$Globals" 0
BindCB  "UnityLighting" 1
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer cb0[14], immediateIndexed
      dcl_constantbuffer cb1[41], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 3
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s1
   1: add r0.x, -cb0[13].x, l(1.000000)
   2: mad r0.w, r0.y, cb0[13].x, r0.x
   3: mad r1.x, -cb0[12].z, cb0[2].w, cb0[2].w
   4: sample r2.xyzw, v1.xyxx, t0.xyzw, s0
   5: mul r1.yzw, r2.xxyz, cb0[8].xxyz
   6: mad r2.xyz, cb0[8].xyzx, r2.xyzx, -cb0[2].xyzx
   7: mad o1.xyz, cb0[12].zzzz, r2.xyzx, cb0[2].xyzx
   8: mul r0.xyz, r1.xxxx, r1.yzwy
   9: mov o0.xyzw, r0.xyzw
  10: mov o1.w, cb0[12].w
  11: dp3 r1.x, v5.xyzx, v5.xyzx
  12: rsq r1.x, r1.x
  13: mul r1.xyz, r1.xxxx, v5.xyzx
  14: mov r1.w, l(1.000000)
  15: mad o2.xyzw, r1.xyzw, l(0.500000, 0.500000, 0.500000, 1.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  16: dp4 r2.x, cb1[38].xyzw, r1.xyzw
  17: dp4 r2.y, cb1[39].xyzw, r1.xyzw
  18: dp4 r2.z, cb1[40].xyzw, r1.xyzw
  19: add r1.xyz, r2.xyzx, v6.xyzx
  20: max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  21: log r2.xyz, r1.xyzx
  22: mul r2.xyz, r2.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  23: exp r2.xyz, r2.xyzx
  24: mad r2.xyz, r2.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  25: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  26: eq r1.w, cb0[3].w, l(0.000000)
  27: movc r1.xyz, r1.wwww, r2.xyzx, r1.xyzx
  28: mul r1.xyz, r0.wwww, r1.xyzx
  29: mul o3.xyz, r0.xyzx, r1.xyzx
  30: mov o3.w, l(1.000000)
  31: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_SEPARATE" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "UNITY_HDR_ON" }
"// shader disassembly not supported on opengl"
}
SubProgram "d3d9 " {
// Stats: 36 math, 3 textures
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_SEPARATE" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "UNITY_HDR_ON" }
Vector 5 [_Color]
Vector 9 [_EmissionColor]
Float 7 [_Glossiness]
Float 6 [_Metallic]
Float 8 [_OcclusionStrength]
Vector 3 [unity_ColorSpaceDielectricSpec]
Vector 4 [unity_ColorSpaceLuminance]
Vector 2 [unity_SHAb]
Vector 1 [unity_SHAg]
Vector 0 [unity_SHAr]
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_OcclusionMap] 2D 1
SetTexture 2 [_EmissionMap] 2D 2
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _Color;
//   float4 _EmissionColor;
//   sampler2D _EmissionMap;
//   float _Glossiness;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D _OcclusionMap;
//   float _OcclusionStrength;
//   float4 unity_ColorSpaceDielectricSpec;
//   float4 unity_ColorSpaceLuminance;
//   float4 unity_SHAb;
//   float4 unity_SHAg;
//   float4 unity_SHAr;
//
//
// Registers:
//
//   Name                           Reg   Size
//   ------------------------------ ----- ----
//   unity_SHAr                     c0       1
//   unity_SHAg                     c1       1
//   unity_SHAb                     c2       1
//   unity_ColorSpaceDielectricSpec c3       1
//   unity_ColorSpaceLuminance      c4       1
//   _Color                         c5       1
//   _Metallic                      c6       1
//   _Glossiness                    c7       1
//   _OcclusionStrength             c8       1
//   _EmissionColor                 c9       1
//   _MainTex                       s0       1
//   _OcclusionMap                  s1       1
//   _EmissionMap                   s2       1
//

    ps_3_0
    def c10, 1.05499995, -0.0549999997, 0, 0
    def c11, 1, 0, 0.416666657, 0.5
    dcl_texcoord v0.xy
    dcl_texcoord4_pp v1.xyz
    dcl_texcoord5_pp v2.xyz
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    texld r0, v0, s0
    mov r1, c3
    mad_pp r2.xyz, c5, r0, -r1
    mul_pp r0.xyz, r0, c5
    mad_pp oC1.xyz, c6.x, r2, r1
    nrm_pp r2.xyz, v1
    mov r2.w, c11.x
    dp4_pp r1.x, c0, r2
    dp4_pp r1.y, c1, r2
    dp4_pp r1.z, c2, r2
    mad_pp oC2, r2, c11.wwwx, c11.wwwy
    add_pp r1.xyz, r1, v2
    max_pp r2.xyz, r1, c11.y
    log_pp r1.x, r2.x
    log_pp r1.y, r2.y
    log_pp r1.z, r2.z
    mul_pp r1.xyz, r1, c11.z
    exp_pp r3.x, r1.x
    exp_pp r3.y, r1.y
    exp_pp r3.z, r1.z
    mad_pp r1.xyz, r3, c10.x, c10.y
    max_pp r3.xyz, r1, c11.y
    abs r0.w, c4.w
    cmp_pp r1.xyz, -r0.w, r3, r2
    texld_pp r2, v0, s1
    mov r2.x, c11.x
    add_pp r0.w, r2.x, -c8.x
    mad_pp r2.w, r2.y, c8.x, r0.w
    mul_pp r1.xyz, r1, r2.w
    mad_pp r0.w, c6.x, -r1.w, r1.w
    mul_pp r2.xyz, r0.w, r0
    texld r0, v0, s2
    mul_pp r0.xyz, r0, c9
    mad_pp oC3.xyz, r2, r1, r0
    mov_pp oC0, r2
    mov_pp oC1.w, c7.x
    mov_pp oC3.w, c11.x

// approximately 39 instruction slots used (3 texture, 36 arithmetic)
"
}
SubProgram "d3d11 " {
// Stats: 25 math, 3 textures
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_SEPARATE" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "UNITY_HDR_ON" }
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_OcclusionMap] 2D 1
SetTexture 2 [_EmissionMap] 2D 2
ConstBuffer "$Globals" 240
Vector 32 [unity_ColorSpaceDielectricSpec]
Vector 48 [unity_ColorSpaceLuminance]
Vector 128 [_Color]
Float 200 [_Metallic]
Float 204 [_Glossiness]
Float 208 [_OcclusionStrength]
Vector 224 [_EmissionColor]
ConstBuffer "UnityLighting" 720
Vector 608 [unity_SHAr]
Vector 624 [unity_SHAg]
Vector 640 [unity_SHAb]
BindCB  "$Globals" 0
BindCB  "UnityLighting" 1
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer cb0[15], immediateIndexed
      dcl_constantbuffer cb1[41], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 3
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s1
   1: add r0.x, -cb0[13].x, l(1.000000)
   2: mad r0.w, r0.y, cb0[13].x, r0.x
   3: mad r1.x, -cb0[12].z, cb0[2].w, cb0[2].w
   4: sample r2.xyzw, v1.xyxx, t0.xyzw, s0
   5: mul r1.yzw, r2.xxyz, cb0[8].xxyz
   6: mad r2.xyz, cb0[8].xyzx, r2.xyzx, -cb0[2].xyzx
   7: mad o1.xyz, cb0[12].zzzz, r2.xyzx, cb0[2].xyzx
   8: mul r0.xyz, r1.xxxx, r1.yzwy
   9: mov o0.xyzw, r0.xyzw
  10: mov o1.w, cb0[12].w
  11: dp3 r1.x, v5.xyzx, v5.xyzx
  12: rsq r1.x, r1.x
  13: mul r1.xyz, r1.xxxx, v5.xyzx
  14: mov r1.w, l(1.000000)
  15: mad o2.xyzw, r1.xyzw, l(0.500000, 0.500000, 0.500000, 1.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  16: dp4 r2.x, cb1[38].xyzw, r1.xyzw
  17: dp4 r2.y, cb1[39].xyzw, r1.xyzw
  18: dp4 r2.z, cb1[40].xyzw, r1.xyzw
  19: add r1.xyz, r2.xyzx, v6.xyzx
  20: max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  21: log r2.xyz, r1.xyzx
  22: mul r2.xyz, r2.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  23: exp r2.xyz, r2.xyzx
  24: mad r2.xyz, r2.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  25: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  26: eq r1.w, cb0[3].w, l(0.000000)
  27: movc r1.xyz, r1.wwww, r2.xyzx, r1.xyzx
  28: mul r1.xyz, r0.wwww, r1.xyzx
  29: sample r2.xyzw, v1.xyxx, t2.xyzw, s2
  30: mul r2.xyz, r2.xyzx, cb0[14].xyzx
  31: mad o3.xyz, r0.xyzx, r1.xyzx, r2.xyzx
  32: mov o3.w, l(1.000000)
  33: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_SEPARATE" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" "_ALPHABLEND_ON" }
"// shader disassembly not supported on opengl"
}
SubProgram "d3d9 " {
// Stats: 35 math, 2 textures
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_SEPARATE" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" "_ALPHABLEND_ON" }
Vector 5 [_Color]
Float 7 [_Glossiness]
Float 6 [_Metallic]
Float 8 [_OcclusionStrength]
Vector 3 [unity_ColorSpaceDielectricSpec]
Vector 4 [unity_ColorSpaceLuminance]
Vector 2 [unity_SHAb]
Vector 1 [unity_SHAg]
Vector 0 [unity_SHAr]
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_OcclusionMap] 2D 1
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D _OcclusionMap;
//   float _OcclusionStrength;
//   float4 unity_ColorSpaceDielectricSpec;
//   float4 unity_ColorSpaceLuminance;
//   float4 unity_SHAb;
//   float4 unity_SHAg;
//   float4 unity_SHAr;
//
//
// Registers:
//
//   Name                           Reg   Size
//   ------------------------------ ----- ----
//   unity_SHAr                     c0       1
//   unity_SHAg                     c1       1
//   unity_SHAb                     c2       1
//   unity_ColorSpaceDielectricSpec c3       1
//   unity_ColorSpaceLuminance      c4       1
//   _Color                         c5       1
//   _Metallic                      c6       1
//   _Glossiness                    c7       1
//   _OcclusionStrength             c8       1
//   _MainTex                       s0       1
//   _OcclusionMap                  s1       1
//

    ps_3_0
    def c9, 1.05499995, -0.0549999997, 0, 0
    def c10, 1, 0, 0.416666657, 0.5
    dcl_texcoord v0.xy
    dcl_texcoord4_pp v1.xyz
    dcl_texcoord5_pp v2.xyz
    dcl_2d s0
    dcl_2d s1
    texld r0, v0, s0
    mov r1, c3
    mad_pp r2.xyz, c5, r0, -r1
    mul_pp r0.xyz, r0, c5
    mad_pp oC1.xyz, c6.x, r2, r1
    nrm_pp r2.xyz, v1
    mov r2.w, c10.x
    dp4_pp r1.x, c0, r2
    dp4_pp r1.y, c1, r2
    dp4_pp r1.z, c2, r2
    mad_pp oC2, r2, c10.wwwx, c10.wwwy
    add_pp r1.xyz, r1, v2
    max_pp r2.xyz, r1, c10.y
    log_pp r1.x, r2.x
    log_pp r1.y, r2.y
    log_pp r1.z, r2.z
    mul_pp r1.xyz, r1, c10.z
    exp_pp r3.x, r1.x
    exp_pp r3.y, r1.y
    exp_pp r3.z, r1.z
    mad_pp r1.xyz, r3, c9.x, c9.y
    max_pp r3.xyz, r1, c10.y
    abs r0.w, c4.w
    cmp_pp r1.xyz, -r0.w, r3, r2
    texld_pp r2, v0, s1
    mov r2.x, c10.x
    add_pp r0.w, r2.x, -c8.x
    mad_pp r2.w, r2.y, c8.x, r0.w
    mul_pp r1.xyz, r1, r2.w
    mad_pp r0.w, c6.x, -r1.w, r1.w
    mul_pp r2.xyz, r0.w, r0
    mul_pp oC3.xyz, r1, r2
    mov_pp oC0, r2
    mov_pp oC1.w, c7.x
    mov_pp oC3.w, c10.x

// approximately 37 instruction slots used (2 texture, 35 arithmetic)
"
}
SubProgram "d3d11 " {
// Stats: 24 math, 2 textures
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_SEPARATE" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" "_ALPHABLEND_ON" }
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_OcclusionMap] 2D 1
ConstBuffer "$Globals" 240
Vector 32 [unity_ColorSpaceDielectricSpec]
Vector 48 [unity_ColorSpaceLuminance]
Vector 128 [_Color]
Float 200 [_Metallic]
Float 204 [_Glossiness]
Float 208 [_OcclusionStrength]
ConstBuffer "UnityLighting" 720
Vector 608 [unity_SHAr]
Vector 624 [unity_SHAg]
Vector 640 [unity_SHAb]
BindCB  "$Globals" 0
BindCB  "UnityLighting" 1
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer cb0[14], immediateIndexed
      dcl_constantbuffer cb1[41], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 3
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s1
   1: add r0.x, -cb0[13].x, l(1.000000)
   2: mad r0.w, r0.y, cb0[13].x, r0.x
   3: mad r1.x, -cb0[12].z, cb0[2].w, cb0[2].w
   4: sample r2.xyzw, v1.xyxx, t0.xyzw, s0
   5: mul r1.yzw, r2.xxyz, cb0[8].xxyz
   6: mad r2.xyz, cb0[8].xyzx, r2.xyzx, -cb0[2].xyzx
   7: mad o1.xyz, cb0[12].zzzz, r2.xyzx, cb0[2].xyzx
   8: mul r0.xyz, r1.xxxx, r1.yzwy
   9: mov o0.xyzw, r0.xyzw
  10: mov o1.w, cb0[12].w
  11: dp3 r1.x, v5.xyzx, v5.xyzx
  12: rsq r1.x, r1.x
  13: mul r1.xyz, r1.xxxx, v5.xyzx
  14: mov r1.w, l(1.000000)
  15: mad o2.xyzw, r1.xyzw, l(0.500000, 0.500000, 0.500000, 1.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  16: dp4 r2.x, cb1[38].xyzw, r1.xyzw
  17: dp4 r2.y, cb1[39].xyzw, r1.xyzw
  18: dp4 r2.z, cb1[40].xyzw, r1.xyzw
  19: add r1.xyz, r2.xyzx, v6.xyzx
  20: max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  21: log r2.xyz, r1.xyzx
  22: mul r2.xyz, r2.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  23: exp r2.xyz, r2.xyzx
  24: mad r2.xyz, r2.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  25: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  26: eq r1.w, cb0[3].w, l(0.000000)
  27: movc r1.xyz, r1.wwww, r2.xyzx, r1.xyzx
  28: mul r1.xyz, r0.wwww, r1.xyzx
  29: mul o3.xyz, r0.xyzx, r1.xyzx
  30: mov o3.w, l(1.000000)
  31: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_SEPARATE" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "UNITY_HDR_ON" "_ALPHABLEND_ON" }
"// shader disassembly not supported on opengl"
}
SubProgram "d3d9 " {
// Stats: 36 math, 3 textures
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_SEPARATE" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "UNITY_HDR_ON" "_ALPHABLEND_ON" }
Vector 5 [_Color]
Vector 9 [_EmissionColor]
Float 7 [_Glossiness]
Float 6 [_Metallic]
Float 8 [_OcclusionStrength]
Vector 3 [unity_ColorSpaceDielectricSpec]
Vector 4 [unity_ColorSpaceLuminance]
Vector 2 [unity_SHAb]
Vector 1 [unity_SHAg]
Vector 0 [unity_SHAr]
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_OcclusionMap] 2D 1
SetTexture 2 [_EmissionMap] 2D 2
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _Color;
//   float4 _EmissionColor;
//   sampler2D _EmissionMap;
//   float _Glossiness;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D _OcclusionMap;
//   float _OcclusionStrength;
//   float4 unity_ColorSpaceDielectricSpec;
//   float4 unity_ColorSpaceLuminance;
//   float4 unity_SHAb;
//   float4 unity_SHAg;
//   float4 unity_SHAr;
//
//
// Registers:
//
//   Name                           Reg   Size
//   ------------------------------ ----- ----
//   unity_SHAr                     c0       1
//   unity_SHAg                     c1       1
//   unity_SHAb                     c2       1
//   unity_ColorSpaceDielectricSpec c3       1
//   unity_ColorSpaceLuminance      c4       1
//   _Color                         c5       1
//   _Metallic                      c6       1
//   _Glossiness                    c7       1
//   _OcclusionStrength             c8       1
//   _EmissionColor                 c9       1
//   _MainTex                       s0       1
//   _OcclusionMap                  s1       1
//   _EmissionMap                   s2       1
//

    ps_3_0
    def c10, 1.05499995, -0.0549999997, 0, 0
    def c11, 1, 0, 0.416666657, 0.5
    dcl_texcoord v0.xy
    dcl_texcoord4_pp v1.xyz
    dcl_texcoord5_pp v2.xyz
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    texld r0, v0, s0
    mov r1, c3
    mad_pp r2.xyz, c5, r0, -r1
    mul_pp r0.xyz, r0, c5
    mad_pp oC1.xyz, c6.x, r2, r1
    nrm_pp r2.xyz, v1
    mov r2.w, c11.x
    dp4_pp r1.x, c0, r2
    dp4_pp r1.y, c1, r2
    dp4_pp r1.z, c2, r2
    mad_pp oC2, r2, c11.wwwx, c11.wwwy
    add_pp r1.xyz, r1, v2
    max_pp r2.xyz, r1, c11.y
    log_pp r1.x, r2.x
    log_pp r1.y, r2.y
    log_pp r1.z, r2.z
    mul_pp r1.xyz, r1, c11.z
    exp_pp r3.x, r1.x
    exp_pp r3.y, r1.y
    exp_pp r3.z, r1.z
    mad_pp r1.xyz, r3, c10.x, c10.y
    max_pp r3.xyz, r1, c11.y
    abs r0.w, c4.w
    cmp_pp r1.xyz, -r0.w, r3, r2
    texld_pp r2, v0, s1
    mov r2.x, c11.x
    add_pp r0.w, r2.x, -c8.x
    mad_pp r2.w, r2.y, c8.x, r0.w
    mul_pp r1.xyz, r1, r2.w
    mad_pp r0.w, c6.x, -r1.w, r1.w
    mul_pp r2.xyz, r0.w, r0
    texld r0, v0, s2
    mul_pp r0.xyz, r0, c9
    mad_pp oC3.xyz, r2, r1, r0
    mov_pp oC0, r2
    mov_pp oC1.w, c7.x
    mov_pp oC3.w, c11.x

// approximately 39 instruction slots used (3 texture, 36 arithmetic)
"
}
SubProgram "d3d11 " {
// Stats: 25 math, 3 textures
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_SEPARATE" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "UNITY_HDR_ON" "_ALPHABLEND_ON" }
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_OcclusionMap] 2D 1
SetTexture 2 [_EmissionMap] 2D 2
ConstBuffer "$Globals" 240
Vector 32 [unity_ColorSpaceDielectricSpec]
Vector 48 [unity_ColorSpaceLuminance]
Vector 128 [_Color]
Float 200 [_Metallic]
Float 204 [_Glossiness]
Float 208 [_OcclusionStrength]
Vector 224 [_EmissionColor]
ConstBuffer "UnityLighting" 720
Vector 608 [unity_SHAr]
Vector 624 [unity_SHAg]
Vector 640 [unity_SHAb]
BindCB  "$Globals" 0
BindCB  "UnityLighting" 1
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer cb0[15], immediateIndexed
      dcl_constantbuffer cb1[41], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 3
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s1
   1: add r0.x, -cb0[13].x, l(1.000000)
   2: mad r0.w, r0.y, cb0[13].x, r0.x
   3: mad r1.x, -cb0[12].z, cb0[2].w, cb0[2].w
   4: sample r2.xyzw, v1.xyxx, t0.xyzw, s0
   5: mul r1.yzw, r2.xxyz, cb0[8].xxyz
   6: mad r2.xyz, cb0[8].xyzx, r2.xyzx, -cb0[2].xyzx
   7: mad o1.xyz, cb0[12].zzzz, r2.xyzx, cb0[2].xyzx
   8: mul r0.xyz, r1.xxxx, r1.yzwy
   9: mov o0.xyzw, r0.xyzw
  10: mov o1.w, cb0[12].w
  11: dp3 r1.x, v5.xyzx, v5.xyzx
  12: rsq r1.x, r1.x
  13: mul r1.xyz, r1.xxxx, v5.xyzx
  14: mov r1.w, l(1.000000)
  15: mad o2.xyzw, r1.xyzw, l(0.500000, 0.500000, 0.500000, 1.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  16: dp4 r2.x, cb1[38].xyzw, r1.xyzw
  17: dp4 r2.y, cb1[39].xyzw, r1.xyzw
  18: dp4 r2.z, cb1[40].xyzw, r1.xyzw
  19: add r1.xyz, r2.xyzx, v6.xyzx
  20: max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  21: log r2.xyz, r1.xyzx
  22: mul r2.xyz, r2.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  23: exp r2.xyz, r2.xyzx
  24: mad r2.xyz, r2.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  25: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  26: eq r1.w, cb0[3].w, l(0.000000)
  27: movc r1.xyz, r1.wwww, r2.xyzx, r1.xyzx
  28: mul r1.xyz, r0.wwww, r1.xyzx
  29: sample r2.xyzw, v1.xyxx, t2.xyzw, s2
  30: mul r2.xyz, r2.xyzx, cb0[14].xyzx
  31: mad o3.xyz, r0.xyzx, r1.xyzx, r2.xyzx
  32: mov o3.w, l(1.000000)
  33: ret 
// Approximately 0 instruction slots used
"
}
}
 }
}
SubShader { 
 LOD 150
 Tags { "RenderType"="Opaque" "PerformanceChecks"="False" }


 // Stats for Vertex shader:
 //       d3d11 : 59 avg math (48..71)
 //    d3d11_9x : 57 avg math (46..69)
 //        d3d9 : 72 avg math (56..89)
 //      opengl : 50 avg math (49..52), 5 avg texture (4..6)
 // Stats for Fragment shader:
 //       d3d11 : 42 avg math (40..44), 4 avg texture (3..5)
 //    d3d11_9x : 39 avg math (37..41), 4 avg texture (3..5)
 //        d3d9 : 49 avg math (48..50), 5 avg texture (4..6)
 Pass {
  Name "FORWARD"
  Tags { "LIGHTMODE"="ForwardBase" "SHADOWSUPPORT"="true" "RenderType"="Opaque" "PerformanceChecks"="False" }
  ZWrite [_ZWrite]
  Blend [_SrcBlend] [_DstBlend]
  GpuProgramID 358221
Program "vp" {
SubProgram "opengl " {
// Stats: 49 math, 4 textures
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
"#version 120

#ifdef VERTEX
uniform vec3 _WorldSpaceCameraPos;
uniform vec4 unity_SHAr;
uniform vec4 unity_SHAg;
uniform vec4 unity_SHAb;
uniform vec4 unity_SHBr;
uniform vec4 unity_SHBg;
uniform vec4 unity_SHBb;
uniform vec4 unity_SHC;

uniform mat4 _Object2World;
uniform mat4 _World2Object;
uniform vec4 unity_ColorSpaceLuminance;
uniform vec4 _MainTex_ST;
uniform vec4 _DetailAlbedoMap_ST;
uniform float _UVSec;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
void main ()
{
  vec2 tmpvar_1;
  tmpvar_1 = gl_MultiTexCoord0.xy;
  vec2 tmpvar_2;
  tmpvar_2 = gl_MultiTexCoord1.xy;
  vec4 tmpvar_3;
  vec4 tmpvar_4;
  vec4 tmpvar_5;
  vec4 tmpvar_6;
  vec4 tmpvar_7;
  tmpvar_7 = (_Object2World * gl_Vertex);
  tmpvar_3 = (gl_ModelViewProjectionMatrix * gl_Vertex);
  vec4 texcoord_8;
  texcoord_8.xy = ((gl_MultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  vec2 tmpvar_9;
  if ((_UVSec == 0.0)) {
    tmpvar_9 = tmpvar_1;
  } else {
    tmpvar_9 = tmpvar_2;
  };
  texcoord_8.zw = ((tmpvar_9 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  vec3 tmpvar_10;
  tmpvar_10 = normalize((tmpvar_7.xyz - _WorldSpaceCameraPos));
  vec4 v_11;
  v_11.x = _World2Object[0].x;
  v_11.y = _World2Object[1].x;
  v_11.z = _World2Object[2].x;
  v_11.w = _World2Object[3].x;
  vec4 v_12;
  v_12.x = _World2Object[0].y;
  v_12.y = _World2Object[1].y;
  v_12.z = _World2Object[2].y;
  v_12.w = _World2Object[3].y;
  vec4 v_13;
  v_13.x = _World2Object[0].z;
  v_13.y = _World2Object[1].z;
  v_13.z = _World2Object[2].z;
  v_13.w = _World2Object[3].z;
  vec3 tmpvar_14;
  tmpvar_14 = normalize(((
    (v_11.xyz * gl_Normal.x)
   + 
    (v_12.xyz * gl_Normal.y)
  ) + (v_13.xyz * gl_Normal.z)));
  tmpvar_4.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_5.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_6.xyz = tmpvar_14;
  vec4 ambientOrLightmapUV_15;
  ambientOrLightmapUV_15 = vec4(0.0, 0.0, 0.0, 0.0);
  vec3 ambient_16;
  ambient_16 = vec3(0.0, 0.0, 0.0);
  vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = tmpvar_14;
  vec3 res_18;
  vec3 x_19;
  x_19.x = dot (unity_SHAr, tmpvar_17);
  x_19.y = dot (unity_SHAg, tmpvar_17);
  x_19.z = dot (unity_SHAb, tmpvar_17);
  vec3 x1_20;
  vec4 tmpvar_21;
  tmpvar_21 = (tmpvar_14.xyzz * tmpvar_14.yzzx);
  x1_20.x = dot (unity_SHBr, tmpvar_21);
  x1_20.y = dot (unity_SHBg, tmpvar_21);
  x1_20.z = dot (unity_SHBb, tmpvar_21);
  res_18 = (x_19 + (x1_20 + (unity_SHC.xyz * 
    ((tmpvar_14.x * tmpvar_14.x) - (tmpvar_14.y * tmpvar_14.y))
  )));
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    res_18 = max (((1.055 * 
      pow (max (res_18, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
    ) - 0.055), vec3(0.0, 0.0, 0.0));
  };
  ambient_16 = max (vec3(0.0, 0.0, 0.0), res_18);
  ambientOrLightmapUV_15.xyz = ambient_16;
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = texcoord_8;
  xlv_TEXCOORD1 = tmpvar_10;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  xlv_TEXCOORD5 = ambientOrLightmapUV_15;
}


#endif
#ifdef FRAGMENT
uniform vec4 _WorldSpaceLightPos0;
uniform samplerCube unity_SpecCube0;
uniform vec4 unity_SpecCube0_HDR;
uniform vec4 unity_ColorSpaceDielectricSpec;
uniform vec4 _LightColor0;
uniform sampler2D unity_NHxRoughness;
uniform vec4 _Color;
uniform sampler2D _MainTex;
uniform float _Metallic;
uniform float _Glossiness;
uniform sampler2D _OcclusionMap;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
void main ()
{
  vec4 c_1;
  vec3 tmpvar_2;
  tmpvar_2 = (_Color.xyz * texture2D (_MainTex, xlv_TEXCOORD0.xy).xyz);
  vec3 tmpvar_3;
  vec3 tmpvar_4;
  tmpvar_4 = mix (unity_ColorSpaceDielectricSpec.xyz, tmpvar_2, vec3(_Metallic));
  float tmpvar_5;
  tmpvar_5 = (unity_ColorSpaceDielectricSpec.w - (_Metallic * unity_ColorSpaceDielectricSpec.w));
  tmpvar_3 = (tmpvar_2 * tmpvar_5);
  vec3 tmpvar_6;
  tmpvar_6 = normalize(xlv_TEXCOORD2_2.xyz);
  float tmpvar_7;
  tmpvar_7 = texture2D (_OcclusionMap, xlv_TEXCOORD0.xy).y;
  vec3 tmpvar_8;
  float tmpvar_9;
  tmpvar_9 = (1.0 - _Glossiness);
  tmpvar_8 = (xlv_TEXCOORD1 - (2.0 * (
    dot (tmpvar_6, xlv_TEXCOORD1)
   * tmpvar_6)));
  vec4 tmpvar_10;
  tmpvar_10.xyz = tmpvar_8;
  tmpvar_10.w = ((tmpvar_9 * (1.7 - 
    (0.7 * tmpvar_9)
  )) * 6.0);
  vec4 tmpvar_11;
  tmpvar_11 = textureCube (unity_SpecCube0, tmpvar_8, tmpvar_10.w);
  vec3 viewDir_12;
  viewDir_12 = -(xlv_TEXCOORD1);
  vec3 color_13;
  vec2 tmpvar_14;
  tmpvar_14.x = dot ((viewDir_12 - (2.0 * 
    (dot (tmpvar_6, viewDir_12) * tmpvar_6)
  )), _WorldSpaceLightPos0.xyz);
  tmpvar_14.y = (1.0 - clamp (dot (tmpvar_6, viewDir_12), 0.0, 1.0));
  vec2 tmpvar_15;
  tmpvar_15 = ((tmpvar_14 * tmpvar_14) * (tmpvar_14 * tmpvar_14));
  vec2 tmpvar_16;
  tmpvar_16.x = tmpvar_15.x;
  tmpvar_16.y = tmpvar_9;
  color_13 = ((tmpvar_3 + (
    (texture2D (unity_NHxRoughness, tmpvar_16).w * 16.0)
   * tmpvar_4)) * (_LightColor0.xyz * clamp (
    dot (tmpvar_6, _WorldSpaceLightPos0.xyz)
  , 0.0, 1.0)));
  color_13 = (color_13 + ((
    (xlv_TEXCOORD5.xyz * tmpvar_7)
   * tmpvar_3) + (
    (((unity_SpecCube0_HDR.x * pow (tmpvar_11.w, unity_SpecCube0_HDR.y)) * tmpvar_11.xyz) * tmpvar_7)
   * 
    mix (tmpvar_4, vec3(clamp ((_Glossiness + (1.0 - tmpvar_5)), 0.0, 1.0)), tmpvar_15.yyy)
  )));
  vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = color_13;
  c_1.w = tmpvar_17.w;
  c_1.xyz = color_13;
  c_1.xyz = c_1.xyz;
  vec4 xlat_varoutput_18;
  xlat_varoutput_18.xyz = c_1.xyz;
  xlat_varoutput_18.w = 1.0;
  gl_FragData[0] = xlat_varoutput_18;
}


#endif
"
}
SubProgram "d3d9 " {
// Stats: 56 math
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Matrix 4 [_Object2World] 3
Matrix 7 [_World2Object] 3
Matrix 0 [glstate_matrix_mvp]
Vector 20 [_DetailAlbedoMap_ST]
Vector 19 [_MainTex_ST]
Float 21 [_UVSec]
Vector 10 [_WorldSpaceCameraPos]
Vector 18 [unity_ColorSpaceLuminance]
Vector 13 [unity_SHAb]
Vector 12 [unity_SHAg]
Vector 11 [unity_SHAr]
Vector 16 [unity_SHBb]
Vector 15 [unity_SHBg]
Vector 14 [unity_SHBr]
Vector 17 [unity_SHC]
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   row_major float4x4 _Object2World;
//   float _UVSec;
//   row_major float4x4 _World2Object;
//   float3 _WorldSpaceCameraPos;
//   row_major float4x4 glstate_matrix_mvp;
//   float4 unity_ColorSpaceLuminance;
//   float4 unity_SHAb;
//   float4 unity_SHAg;
//   float4 unity_SHAr;
//   float4 unity_SHBb;
//   float4 unity_SHBg;
//   float4 unity_SHBr;
//   float4 unity_SHC;
//
//
// Registers:
//
//   Name                      Reg   Size
//   ------------------------- ----- ----
//   glstate_matrix_mvp        c0       4
//   _Object2World             c4       3
//   _World2Object             c7       3
//   _WorldSpaceCameraPos      c10      1
//   unity_SHAr                c11      1
//   unity_SHAg                c12      1
//   unity_SHAb                c13      1
//   unity_SHBr                c14      1
//   unity_SHBg                c15      1
//   unity_SHBb                c16      1
//   unity_SHC                 c17      1
//   unity_ColorSpaceLuminance c18      1
//   _MainTex_ST               c19      1
//   _DetailAlbedoMap_ST       c20      1
//   _UVSec                    c21      1
//

    vs_2_0
    def c22, 1, 0, 0.416666657, 0
    def c23, 1.05499995, -0.0549999997, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dp4 oPos.x, c0, v0
    dp4 oPos.y, c1, v0
    dp4 oPos.z, c2, v0
    dp4 oPos.w, c3, v0
    mad oT0.xy, v2, c19, c19.zwzw
    mul r0.x, c21.x, c21.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad oT0.zw, r2.xyxy, c20.xyxy, c20
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add r0.xyz, r0, -c10
    dp3 r0.w, r0, r0
    rsq r0.w, r0.w
    mul oT1.xyz, r0.w, r0
    mul r0.xyz, v1.y, c8
    mad r0.xyz, c7, v1.x, r0
    mad r0.xyz, c9, v1.z, r0
    nrm r1.xyz, r0
    mul r0.x, r1.y, r1.y
    mad r0.x, r1.x, r1.x, -r0.x
    mul r2, r1.yzzx, r1.xyzz
    dp4 r3.x, c14, r2
    dp4 r3.y, c15, r2
    dp4 r3.z, c16, r2
    mad r0.xyz, c17, r0.x, r3
    mov r1.w, c22.x
    dp4 r2.x, c11, r1
    dp4 r2.y, c12, r1
    dp4 r2.z, c13, r1
    mov oT4.xyz, r1
    add r0.xyz, r0, r2
    max r1.xyz, r0, c22.y
    mov r1.w, c22.z
    lit r2, r1.xxww
    mov r2.x, r2.z
    lit r3, r1.yyww
    lit r1, r1.zzww
    mov r2.z, r1.z
    mov r2.y, r3.z
    mad r1.xyz, r2, c23.x, c23.y
    max r1.xyz, r1, c22.y
    mul r0.w, c18.w, c18.w
    sge r0.w, -r0.w, r0.w
    lrp r2.xyz, r0.w, r1, r0
    max oT5.xyz, r2, c22.y
    mov oT2, c22.y
    mov oT3, c22.y
    mov oT4.w, c22.y
    mov oT5.w, c22.y

// approximately 54 instruction slots used
"
}
SubProgram "d3d11 " {
// Stats: 48 math
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
ConstBuffer "$Globals" 240
Vector 48 [unity_ColorSpaceLuminance]
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 608 [unity_SHAr]
Vector 624 [unity_SHAg]
Vector 640 [unity_SHAb]
Vector 656 [unity_SHBr]
Vector 672 [unity_SHBg]
Vector 688 [unity_SHBb]
Vector 704 [unity_SHC]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer cb0[14], immediateIndexed
      dcl_constantbuffer cb1[5], immediateIndexed
      dcl_constantbuffer cb2[45], immediateIndexed
      dcl_constantbuffer cb3[19], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: mad o0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   4: eq r0.x, cb0[13].z, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[11].xxxy, cb0[11].zzzw
   7: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add r0.xyz, r0.xyzx, -cb1[4].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: rsq r0.w, r0.w
  15: mul o2.xyz, r0.wwww, r0.xyzx
  16: mov o3.xyzw, l(0,0,0,0)
  17: mov o4.xyzw, l(0,0,0,0)
  18: mul r0.x, v1.x, cb3[16].x
  19: mul r0.y, v1.x, cb3[17].x
  20: mul r0.z, v1.x, cb3[18].x
  21: mul r1.x, v1.y, cb3[16].y
  22: mul r1.y, v1.y, cb3[17].y
  23: mul r1.z, v1.y, cb3[18].y
  24: add r0.xyz, r0.xyzx, r1.xyzx
  25: mul r1.x, v1.z, cb3[16].z
  26: mul r1.y, v1.z, cb3[17].z
  27: mul r1.z, v1.z, cb3[18].z
  28: add r0.xyz, r0.xyzx, r1.xyzx
  29: dp3 r0.w, r0.xyzx, r0.xyzx
  30: rsq r0.w, r0.w
  31: mul r0.xyz, r0.wwww, r0.xyzx
  32: mov o5.xyz, r0.xyzx
  33: mov o5.w, l(0)
  34: mul r1.x, r0.y, r0.y
  35: mad r1.x, r0.x, r0.x, -r1.x
  36: mul r2.xyzw, r0.yzzx, r0.xyzz
  37: dp4 r3.x, cb2[41].xyzw, r2.xyzw
  38: dp4 r3.y, cb2[42].xyzw, r2.xyzw
  39: dp4 r3.z, cb2[43].xyzw, r2.xyzw
  40: mad r1.xyz, cb2[44].xyzx, r1.xxxx, r3.xyzx
  41: mov r0.w, l(1.000000)
  42: dp4 r2.x, cb2[38].xyzw, r0.xyzw
  43: dp4 r2.y, cb2[39].xyzw, r0.xyzw
  44: dp4 r2.z, cb2[40].xyzw, r0.xyzw
  45: add r0.xyz, r1.xyzx, r2.xyzx
  46: max r1.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  47: log r1.xyz, r1.xyzx
  48: mul r1.xyz, r1.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  49: exp r1.xyz, r1.xyzx
  50: mad r1.xyz, r1.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  51: max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  52: eq r0.w, cb0[3].w, l(0.000000)
  53: movc r0.xyz, r0.wwww, r1.xyzx, r0.xyzx
  54: max o6.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  55: mov o6.w, l(0)
  56: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "d3d11_9x " {
// Stats: 46 math
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
ConstBuffer "$Globals" 240
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 608 [unity_SHAr]
Vector 624 [unity_SHAg]
Vector 640 [unity_SHAb]
Vector 656 [unity_SHBr]
Vector 672 [unity_SHBg]
Vector 688 [unity_SHBb]
Vector 704 [unity_SHC]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c1         cb0            10         2  ( FLT, FLT, FLT, FLT)
// c3         cb0            13         1  ( FLT, FLT, FLT, FLT)
// c4         cb1             4         1  ( FLT, FLT, FLT, FLT)
// c5         cb2            38         7  ( FLT, FLT, FLT, FLT)
// c12        cb3             0         4  ( FLT, FLT, FLT, FLT)
// c16        cb3            12         7  ( FLT, FLT, FLT, FLT)
//
//
// Runtime generated constant mappings:
//
// Target Reg                               Constant Description
// ---------- --------------------------------------------------
// c0                              Vertex Shader position offset
//
//
// Level9 shader bytecode:
//
    vs_2_0
          def c23, 1, 0, 0.416666657, 0
          def c24, 1.05499995, -0.0549999997, 0, 0
          dcl_texcoord v0
          dcl_texcoord1 v1
          dcl_texcoord2 v2
          dcl_texcoord3 v3
   0:     mad oT0.xy, v2, c1, c1.zwzw
   1:     mul r0.x, c3.z, c3.z
   2:     sge r0.x, -r0.x, r0.x
   3:     mov r1.xy, v2
   4:     lrp r2.xy, r0.x, r1, v3
   5:     mad oT0.zw, r2.xyxy, c2.xyxy, c2
   6:     mul r0.xyz, v0.y, c17
   7:     mad r0.xyz, c16, v0.x, r0
   8:     mad r0.xyz, c18, v0.z, r0
   9:     mad r0.xyz, c19, v0.w, r0
  10:     add r0.xyz, r0, -c4
  11:     dp3 r0.w, r0, r0
  12:     rsq r0.w, r0.w
  13:     mul oT1.xyz, r0.w, r0
  14:     mul r0.x, v1.x, c20.x
  15:     mul r0.y, v1.x, c21.x
  16:     mul r0.z, v1.x, c22.x
  17:     mul r1.x, v1.y, c20.y
  18:     mul r1.y, v1.y, c21.y
  19:     mul r1.z, v1.y, c22.y
  20:     add r0.xyz, r0, r1
  21:     mul r1.x, v1.z, c20.z
  22:     mul r1.y, v1.z, c21.z
  23:     mul r1.z, v1.z, c22.z
  24:     add r0.xyz, r0, r1
  25:     nrm r1.xyz, r0
  28:     mul r0.x, r1.y, r1.y
  29:     mad r0.x, r1.x, r1.x, -r0.x
  30:     mul r2, r1.yzzx, r1.xyzz
  31:     dp4 r3.x, c8, r2
  32:     dp4 r3.y, c9, r2
  33:     dp4 r3.z, c10, r2
  34:     mad r0.xyz, c11, r0.x, r3
  35:     mov r1.w, c23.x
  36:     dp4 r2.x, c5, r1
  37:     dp4 r2.y, c6, r1
  38:     dp4 r2.z, c7, r1
  39:     mov oT4.xyz, r1
  40:     add r0.xyz, r0, r2
  41:     max r0.xyz, r0, c23.y
  42:     mov r0.w, c23.z
  43:     lit r1, r0.xxww
  44:     mov r1.x, r1.z
  45:     lit r2, r0.yyww
  46:     lit r0, r0.zzww
  47:     mov r1.z, r0.z
  48:     mov r1.y, r2.z
  49:     mad r0.xyz, r1, c24.x, c24.y
  50:     max oT5.xyz, r0, c23.y
  51:     mul r0, v0.y, c13
  52:     mad r0, c12, v0.x, r0
  53:     mad r0, c14, v0.z, r0
  54:     mad r0, c15, v0.w, r0
  55:     mad oPos.xy, r0.w, c0, r0
  56:     mov oPos.zw, r0
  57:     mov oT2, c23.y
  58:     mov oT3, c23.y
  59:     mov oT4.w, c23.y
  60:     mov oT5.w, c23.y

// approximately 61 instruction slots used
      vs_4_0
      dcl_constantbuffer cb0[14], immediateIndexed
      dcl_constantbuffer cb1[5], immediateIndexed
      dcl_constantbuffer cb2[45], immediateIndexed
      dcl_constantbuffer cb3[19], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: mad o0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   4: eq r0.x, cb0[13].z, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[11].xxxy, cb0[11].zzzw
   7: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add r0.xyz, r0.xyzx, -cb1[4].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: rsq r0.w, r0.w
  15: mul o2.xyz, r0.wwww, r0.xyzx
  16: mov o3.xyzw, l(0,0,0,0)
  17: mov o4.xyzw, l(0,0,0,0)
  18: mul r0.x, v1.x, cb3[16].x
  19: mul r0.y, v1.x, cb3[17].x
  20: mul r0.z, v1.x, cb3[18].x
  21: mul r1.x, v1.y, cb3[16].y
  22: mul r1.y, v1.y, cb3[17].y
  23: mul r1.z, v1.y, cb3[18].y
  24: add r0.xyz, r0.xyzx, r1.xyzx
  25: mul r1.x, v1.z, cb3[16].z
  26: mul r1.y, v1.z, cb3[17].z
  27: mul r1.z, v1.z, cb3[18].z
  28: add r0.xyz, r0.xyzx, r1.xyzx
  29: dp3 r0.w, r0.xyzx, r0.xyzx
  30: rsq r0.w, r0.w
  31: mul r0.xyz, r0.wwww, r0.xyzx
  32: mov o5.xyz, r0.xyzx
  33: mov o5.w, l(0)
  34: mul r1.x, r0.y, r0.y
  35: mad r1.x, r0.x, r0.x, -r1.x
  36: mul r2.xyzw, r0.yzzx, r0.xyzz
  37: dp4 r3.x, cb2[41].xyzw, r2.xyzw
  38: dp4 r3.y, cb2[42].xyzw, r2.xyzw
  39: dp4 r3.z, cb2[43].xyzw, r2.xyzw
  40: mad r1.xyz, cb2[44].xyzx, r1.xxxx, r3.xyzx
  41: mov r0.w, l(1.000000)
  42: dp4 r2.x, cb2[38].xyzw, r0.xyzw
  43: dp4 r2.y, cb2[39].xyzw, r0.xyzw
  44: dp4 r2.z, cb2[40].xyzw, r0.xyzw
  45: add r0.xyz, r1.xyzx, r2.xyzx
  46: max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  47: log r0.xyz, r0.xyzx
  48: mul r0.xyz, r0.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  49: exp r0.xyz, r0.xyzx
  50: mad r0.xyz, r0.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  51: max o6.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  52: mov o6.w, l(0)
  53: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
// Stats: 50 math, 5 textures
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
"#version 120

#ifdef VERTEX
uniform vec3 _WorldSpaceCameraPos;
uniform vec4 _ProjectionParams;
uniform vec4 unity_SHAr;
uniform vec4 unity_SHAg;
uniform vec4 unity_SHAb;
uniform vec4 unity_SHBr;
uniform vec4 unity_SHBg;
uniform vec4 unity_SHBb;
uniform vec4 unity_SHC;

uniform mat4 _Object2World;
uniform mat4 _World2Object;
uniform vec4 unity_ColorSpaceLuminance;
uniform vec4 _MainTex_ST;
uniform vec4 _DetailAlbedoMap_ST;
uniform float _UVSec;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
varying vec4 xlv_TEXCOORD6;
void main ()
{
  vec2 tmpvar_1;
  tmpvar_1 = gl_MultiTexCoord0.xy;
  vec2 tmpvar_2;
  tmpvar_2 = gl_MultiTexCoord1.xy;
  vec4 tmpvar_3;
  vec4 tmpvar_4;
  vec4 tmpvar_5;
  vec4 tmpvar_6;
  vec4 tmpvar_7;
  tmpvar_7 = (_Object2World * gl_Vertex);
  tmpvar_3 = (gl_ModelViewProjectionMatrix * gl_Vertex);
  vec4 texcoord_8;
  texcoord_8.xy = ((gl_MultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  vec2 tmpvar_9;
  if ((_UVSec == 0.0)) {
    tmpvar_9 = tmpvar_1;
  } else {
    tmpvar_9 = tmpvar_2;
  };
  texcoord_8.zw = ((tmpvar_9 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  vec3 tmpvar_10;
  tmpvar_10 = normalize((tmpvar_7.xyz - _WorldSpaceCameraPos));
  vec4 v_11;
  v_11.x = _World2Object[0].x;
  v_11.y = _World2Object[1].x;
  v_11.z = _World2Object[2].x;
  v_11.w = _World2Object[3].x;
  vec4 v_12;
  v_12.x = _World2Object[0].y;
  v_12.y = _World2Object[1].y;
  v_12.z = _World2Object[2].y;
  v_12.w = _World2Object[3].y;
  vec4 v_13;
  v_13.x = _World2Object[0].z;
  v_13.y = _World2Object[1].z;
  v_13.z = _World2Object[2].z;
  v_13.w = _World2Object[3].z;
  vec3 tmpvar_14;
  tmpvar_14 = normalize(((
    (v_11.xyz * gl_Normal.x)
   + 
    (v_12.xyz * gl_Normal.y)
  ) + (v_13.xyz * gl_Normal.z)));
  tmpvar_4.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_5.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_6.xyz = tmpvar_14;
  vec4 o_15;
  vec4 tmpvar_16;
  tmpvar_16 = (tmpvar_3 * 0.5);
  vec2 tmpvar_17;
  tmpvar_17.x = tmpvar_16.x;
  tmpvar_17.y = (tmpvar_16.y * _ProjectionParams.x);
  o_15.xy = (tmpvar_17 + tmpvar_16.w);
  o_15.zw = tmpvar_3.zw;
  vec4 ambientOrLightmapUV_18;
  ambientOrLightmapUV_18 = vec4(0.0, 0.0, 0.0, 0.0);
  vec3 ambient_19;
  ambient_19 = vec3(0.0, 0.0, 0.0);
  vec4 tmpvar_20;
  tmpvar_20.w = 1.0;
  tmpvar_20.xyz = tmpvar_14;
  vec3 res_21;
  vec3 x_22;
  x_22.x = dot (unity_SHAr, tmpvar_20);
  x_22.y = dot (unity_SHAg, tmpvar_20);
  x_22.z = dot (unity_SHAb, tmpvar_20);
  vec3 x1_23;
  vec4 tmpvar_24;
  tmpvar_24 = (tmpvar_14.xyzz * tmpvar_14.yzzx);
  x1_23.x = dot (unity_SHBr, tmpvar_24);
  x1_23.y = dot (unity_SHBg, tmpvar_24);
  x1_23.z = dot (unity_SHBb, tmpvar_24);
  res_21 = (x_22 + (x1_23 + (unity_SHC.xyz * 
    ((tmpvar_14.x * tmpvar_14.x) - (tmpvar_14.y * tmpvar_14.y))
  )));
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    res_21 = max (((1.055 * 
      pow (max (res_21, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
    ) - 0.055), vec3(0.0, 0.0, 0.0));
  };
  ambient_19 = max (vec3(0.0, 0.0, 0.0), res_21);
  ambientOrLightmapUV_18.xyz = ambient_19;
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = texcoord_8;
  xlv_TEXCOORD1 = tmpvar_10;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  xlv_TEXCOORD5 = ambientOrLightmapUV_18;
  xlv_TEXCOORD6 = o_15;
}


#endif
#ifdef FRAGMENT
uniform vec4 _WorldSpaceLightPos0;
uniform samplerCube unity_SpecCube0;
uniform vec4 unity_SpecCube0_HDR;
uniform vec4 unity_ColorSpaceDielectricSpec;
uniform vec4 _LightColor0;
uniform sampler2D unity_NHxRoughness;
uniform vec4 _Color;
uniform sampler2D _MainTex;
uniform float _Metallic;
uniform float _Glossiness;
uniform sampler2D _OcclusionMap;
uniform sampler2D _ShadowMapTexture;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
varying vec4 xlv_TEXCOORD6;
void main ()
{
  vec4 c_1;
  vec3 tmpvar_2;
  tmpvar_2 = (_Color.xyz * texture2D (_MainTex, xlv_TEXCOORD0.xy).xyz);
  vec3 tmpvar_3;
  vec3 tmpvar_4;
  tmpvar_4 = mix (unity_ColorSpaceDielectricSpec.xyz, tmpvar_2, vec3(_Metallic));
  float tmpvar_5;
  tmpvar_5 = (unity_ColorSpaceDielectricSpec.w - (_Metallic * unity_ColorSpaceDielectricSpec.w));
  tmpvar_3 = (tmpvar_2 * tmpvar_5);
  vec3 tmpvar_6;
  tmpvar_6 = normalize(xlv_TEXCOORD2_2.xyz);
  float tmpvar_7;
  tmpvar_7 = texture2D (_OcclusionMap, xlv_TEXCOORD0.xy).y;
  vec3 tmpvar_8;
  float tmpvar_9;
  tmpvar_9 = (1.0 - _Glossiness);
  tmpvar_8 = (xlv_TEXCOORD1 - (2.0 * (
    dot (tmpvar_6, xlv_TEXCOORD1)
   * tmpvar_6)));
  vec4 tmpvar_10;
  tmpvar_10.xyz = tmpvar_8;
  tmpvar_10.w = ((tmpvar_9 * (1.7 - 
    (0.7 * tmpvar_9)
  )) * 6.0);
  vec4 tmpvar_11;
  tmpvar_11 = textureCube (unity_SpecCube0, tmpvar_8, tmpvar_10.w);
  vec3 viewDir_12;
  viewDir_12 = -(xlv_TEXCOORD1);
  vec3 color_13;
  vec2 tmpvar_14;
  tmpvar_14.x = dot ((viewDir_12 - (2.0 * 
    (dot (tmpvar_6, viewDir_12) * tmpvar_6)
  )), _WorldSpaceLightPos0.xyz);
  tmpvar_14.y = (1.0 - clamp (dot (tmpvar_6, viewDir_12), 0.0, 1.0));
  vec2 tmpvar_15;
  tmpvar_15 = ((tmpvar_14 * tmpvar_14) * (tmpvar_14 * tmpvar_14));
  vec2 tmpvar_16;
  tmpvar_16.x = tmpvar_15.x;
  tmpvar_16.y = tmpvar_9;
  color_13 = ((tmpvar_3 + (
    (texture2D (unity_NHxRoughness, tmpvar_16).w * 16.0)
   * tmpvar_4)) * ((_LightColor0.xyz * texture2DProj (_ShadowMapTexture, xlv_TEXCOORD6).x) * clamp (
    dot (tmpvar_6, _WorldSpaceLightPos0.xyz)
  , 0.0, 1.0)));
  color_13 = (color_13 + ((
    (xlv_TEXCOORD5.xyz * tmpvar_7)
   * tmpvar_3) + (
    (((unity_SpecCube0_HDR.x * pow (tmpvar_11.w, unity_SpecCube0_HDR.y)) * tmpvar_11.xyz) * tmpvar_7)
   * 
    mix (tmpvar_4, vec3(clamp ((_Glossiness + (1.0 - tmpvar_5)), 0.0, 1.0)), tmpvar_15.yyy)
  )));
  vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = color_13;
  c_1.w = tmpvar_17.w;
  c_1.xyz = color_13;
  c_1.xyz = c_1.xyz;
  vec4 xlat_varoutput_18;
  xlat_varoutput_18.xyz = c_1.xyz;
  xlat_varoutput_18.w = 1.0;
  gl_FragData[0] = xlat_varoutput_18;
}


#endif
"
}
SubProgram "d3d9 " {
// Stats: 62 math
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Matrix 4 [_Object2World] 3
Matrix 7 [_World2Object] 3
Matrix 0 [glstate_matrix_mvp]
Vector 22 [_DetailAlbedoMap_ST]
Vector 21 [_MainTex_ST]
Vector 11 [_ProjectionParams]
Vector 12 [_ScreenParams]
Float 23 [_UVSec]
Vector 10 [_WorldSpaceCameraPos]
Vector 20 [unity_ColorSpaceLuminance]
Vector 15 [unity_SHAb]
Vector 14 [unity_SHAg]
Vector 13 [unity_SHAr]
Vector 18 [unity_SHBb]
Vector 17 [unity_SHBg]
Vector 16 [unity_SHBr]
Vector 19 [unity_SHC]
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   row_major float4x4 _Object2World;
//   float4 _ProjectionParams;
//   float4 _ScreenParams;
//   float _UVSec;
//   row_major float4x4 _World2Object;
//   float3 _WorldSpaceCameraPos;
//   row_major float4x4 glstate_matrix_mvp;
//   float4 unity_ColorSpaceLuminance;
//   float4 unity_SHAb;
//   float4 unity_SHAg;
//   float4 unity_SHAr;
//   float4 unity_SHBb;
//   float4 unity_SHBg;
//   float4 unity_SHBr;
//   float4 unity_SHC;
//
//
// Registers:
//
//   Name                      Reg   Size
//   ------------------------- ----- ----
//   glstate_matrix_mvp        c0       4
//   _Object2World             c4       3
//   _World2Object             c7       3
//   _WorldSpaceCameraPos      c10      1
//   _ProjectionParams         c11      1
//   _ScreenParams             c12      1
//   unity_SHAr                c13      1
//   unity_SHAg                c14      1
//   unity_SHAb                c15      1
//   unity_SHBr                c16      1
//   unity_SHBg                c17      1
//   unity_SHBb                c18      1
//   unity_SHC                 c19      1
//   unity_ColorSpaceLuminance c20      1
//   _MainTex_ST               c21      1
//   _DetailAlbedoMap_ST       c22      1
//   _UVSec                    c23      1
//

    vs_2_0
    def c24, 0.5, 1, 0, 0.416666657
    def c25, 1.05499995, -0.0549999997, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    mad oT0.xy, v2, c21, c21.zwzw
    mul r0.x, c23.x, c23.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad oT0.zw, r2.xyxy, c22.xyxy, c22
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add r0.xyz, r0, -c10
    dp3 r0.w, r0, r0
    rsq r0.w, r0.w
    mul oT1.xyz, r0.w, r0
    dp4 r0.y, c1, v0
    mul r1.x, r0.y, c11.x
    mul r1.w, r1.x, c24.x
    dp4 r0.x, c0, v0
    dp4 r0.w, c3, v0
    mul r1.xz, r0.xyww, c24.x
    mad oT6.xy, r1.z, c12.zwzw, r1.xwzw
    mul r1.xyz, v1.y, c8
    mad r1.xyz, c7, v1.x, r1
    mad r1.xyz, c9, v1.z, r1
    nrm r2.xyz, r1
    mul r1.x, r2.y, r2.y
    mad r1.x, r2.x, r2.x, -r1.x
    mul r3, r2.yzzx, r2.xyzz
    dp4 r4.x, c16, r3
    dp4 r4.y, c17, r3
    dp4 r4.z, c18, r3
    mad r1.xyz, c19, r1.x, r4
    mov r2.w, c24.y
    dp4 r3.x, c13, r2
    dp4 r3.y, c14, r2
    dp4 r3.z, c15, r2
    mov oT4.xyz, r2
    add r1.xyz, r1, r3
    max r2.xyz, r1, c24.z
    mov r2.w, c24.w
    lit r3, r2.xxww
    mov r3.x, r3.z
    lit r4, r2.yyww
    lit r2, r2.zzww
    mov r3.z, r2.z
    mov r3.y, r4.z
    mad r2.xyz, r3, c25.x, c25.y
    max r2.xyz, r2, c24.z
    mul r1.w, c20.w, c20.w
    sge r1.w, -r1.w, r1.w
    lrp r3.xyz, r1.w, r2, r1
    max oT5.xyz, r3, c24.z
    dp4 r0.z, c2, v0
    mov oPos, r0
    mov oT6.zw, r0
    mov oT2, c24.z
    mov oT3, c24.z
    mov oT4.w, c24.z
    mov oT5.w, c24.z

// approximately 60 instruction slots used
"
}
SubProgram "d3d11 " {
// Stats: 51 math
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
ConstBuffer "$Globals" 240
Vector 48 [unity_ColorSpaceLuminance]
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
Vector 80 [_ProjectionParams]
ConstBuffer "UnityLighting" 720
Vector 608 [unity_SHAr]
Vector 624 [unity_SHAg]
Vector 640 [unity_SHAb]
Vector 656 [unity_SHBr]
Vector 672 [unity_SHBg]
Vector 688 [unity_SHBb]
Vector 704 [unity_SHC]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer cb0[14], immediateIndexed
      dcl_constantbuffer cb1[6], immediateIndexed
      dcl_constantbuffer cb2[45], immediateIndexed
      dcl_constantbuffer cb3[19], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 5
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   4: mov o0.xyzw, r0.xyzw
   5: eq r1.x, cb0[13].z, l(0.000000)
   6: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
   7: mad o1.zw, r1.xxxy, cb0[11].xxxy, cb0[11].zzzw
   8: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   9: mul r1.xyz, v0.yyyy, cb3[13].xyzx
  10: mad r1.xyz, cb3[12].xyzx, v0.xxxx, r1.xyzx
  11: mad r1.xyz, cb3[14].xyzx, v0.zzzz, r1.xyzx
  12: mad r1.xyz, cb3[15].xyzx, v0.wwww, r1.xyzx
  13: add r1.xyz, r1.xyzx, -cb1[4].xyzx
  14: dp3 r1.w, r1.xyzx, r1.xyzx
  15: rsq r1.w, r1.w
  16: mul o2.xyz, r1.wwww, r1.xyzx
  17: mov o3.xyzw, l(0,0,0,0)
  18: mov o4.xyzw, l(0,0,0,0)
  19: mul r1.x, v1.x, cb3[16].x
  20: mul r1.y, v1.x, cb3[17].x
  21: mul r1.z, v1.x, cb3[18].x
  22: mul r2.x, v1.y, cb3[16].y
  23: mul r2.y, v1.y, cb3[17].y
  24: mul r2.z, v1.y, cb3[18].y
  25: add r1.xyz, r1.xyzx, r2.xyzx
  26: mul r2.x, v1.z, cb3[16].z
  27: mul r2.y, v1.z, cb3[17].z
  28: mul r2.z, v1.z, cb3[18].z
  29: add r1.xyz, r1.xyzx, r2.xyzx
  30: dp3 r1.w, r1.xyzx, r1.xyzx
  31: rsq r1.w, r1.w
  32: mul r1.xyz, r1.wwww, r1.xyzx
  33: mov o5.xyz, r1.xyzx
  34: mov o5.w, l(0)
  35: mul r2.x, r1.y, r1.y
  36: mad r2.x, r1.x, r1.x, -r2.x
  37: mul r3.xyzw, r1.yzzx, r1.xyzz
  38: dp4 r4.x, cb2[41].xyzw, r3.xyzw
  39: dp4 r4.y, cb2[42].xyzw, r3.xyzw
  40: dp4 r4.z, cb2[43].xyzw, r3.xyzw
  41: mad r2.xyz, cb2[44].xyzx, r2.xxxx, r4.xyzx
  42: mov r1.w, l(1.000000)
  43: dp4 r3.x, cb2[38].xyzw, r1.xyzw
  44: dp4 r3.y, cb2[39].xyzw, r1.xyzw
  45: dp4 r3.z, cb2[40].xyzw, r1.xyzw
  46: add r1.xyz, r2.xyzx, r3.xyzx
  47: max r2.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  48: log r2.xyz, r2.xyzx
  49: mul r2.xyz, r2.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  50: exp r2.xyz, r2.xyzx
  51: mad r2.xyz, r2.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  52: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  53: eq r1.w, cb0[3].w, l(0.000000)
  54: movc r1.xyz, r1.wwww, r2.xyzx, r1.xyzx
  55: max o6.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  56: mov o6.w, l(0)
  57: mul r0.y, r0.y, cb1[5].x
  58: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  59: mov o7.zw, r0.zzzw
  60: add o7.xy, r1.zzzz, r1.xwxx
  61: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "d3d11_9x " {
// Stats: 49 math
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
ConstBuffer "$Globals" 240
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
Vector 80 [_ProjectionParams]
ConstBuffer "UnityLighting" 720
Vector 608 [unity_SHAr]
Vector 624 [unity_SHAg]
Vector 640 [unity_SHAb]
Vector 656 [unity_SHBr]
Vector 672 [unity_SHBg]
Vector 688 [unity_SHBb]
Vector 704 [unity_SHC]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c1         cb0            10         2  ( FLT, FLT, FLT, FLT)
// c3         cb0            13         1  ( FLT, FLT, FLT, FLT)
// c4         cb1             4         2  ( FLT, FLT, FLT, FLT)
// c6         cb2            38         7  ( FLT, FLT, FLT, FLT)
// c13        cb3             0         4  ( FLT, FLT, FLT, FLT)
// c17        cb3            12         7  ( FLT, FLT, FLT, FLT)
//
//
// Runtime generated constant mappings:
//
// Target Reg                               Constant Description
// ---------- --------------------------------------------------
// c0                              Vertex Shader position offset
//
//
// Level9 shader bytecode:
//
    vs_2_0
          def c24, 0.5, 1, 0, 0.416666657
          def c25, 1.05499995, -0.0549999997, 0, 0
          dcl_texcoord v0
          dcl_texcoord1 v1
          dcl_texcoord2 v2
          dcl_texcoord3 v3
   0:     mad oT0.xy, v2, c1, c1.zwzw
   1:     mul r0.x, c3.z, c3.z
   2:     sge r0.x, -r0.x, r0.x
   3:     mov r1.xy, v2
   4:     lrp r2.xy, r0.x, r1, v3
   5:     mad oT0.zw, r2.xyxy, c2.xyxy, c2
   6:     mul r0.xyz, v0.y, c18
   7:     mad r0.xyz, c17, v0.x, r0
   8:     mad r0.xyz, c19, v0.z, r0
   9:     mad r0.xyz, c20, v0.w, r0
  10:     add r0.xyz, r0, -c4
  11:     dp3 r0.w, r0, r0
  12:     rsq r0.w, r0.w
  13:     mul oT1.xyz, r0.w, r0
  14:     mul r0, v0.y, c14
  15:     mad r0, c13, v0.x, r0
  16:     mad r0, c15, v0.z, r0
  17:     mad r0, c16, v0.w, r0
  18:     mul r1.x, r0.y, c5.x
  19:     mul r1.w, r1.x, c24.x
  20:     mul r1.xz, r0.xyww, c24.x
  21:     add oT6.xy, r1.z, r1.xwzw
  22:     mul r1.x, v1.x, c21.x
  23:     mul r1.y, v1.x, c22.x
  24:     mul r1.z, v1.x, c23.x
  25:     mul r2.x, v1.y, c21.y
  26:     mul r2.y, v1.y, c22.y
  27:     mul r2.z, v1.y, c23.y
  28:     add r1.xyz, r1, r2
  29:     mul r2.x, v1.z, c21.z
  30:     mul r2.y, v1.z, c22.z
  31:     mul r2.z, v1.z, c23.z
  32:     add r1.xyz, r1, r2
  33:     nrm r2.xyz, r1
  36:     mul r1.x, r2.y, r2.y
  37:     mad r1.x, r2.x, r2.x, -r1.x
  38:     mul r3, r2.yzzx, r2.xyzz
  39:     dp4 r4.x, c9, r3
  40:     dp4 r4.y, c10, r3
  41:     dp4 r4.z, c11, r3
  42:     mad r1.xyz, c12, r1.x, r4
  43:     mov r2.w, c24.y
  44:     dp4 r3.x, c6, r2
  45:     dp4 r3.y, c7, r2
  46:     dp4 r3.z, c8, r2
  47:     mov oT4.xyz, r2
  48:     add r1.xyz, r1, r3
  49:     max r1.xyz, r1, c24.z
  50:     mov r1.w, c24.w
  51:     lit r2, r1.xxww
  52:     mov r2.x, r2.z
  53:     lit r3, r1.yyww
  54:     lit r1, r1.zzww
  55:     mov r2.z, r1.z
  56:     mov r2.y, r3.z
  57:     mad r1.xyz, r2, c25.x, c25.y
  58:     max oT5.xyz, r1, c24.z
  59:     mad oPos.xy, r0.w, c0, r0
  60:     mov oPos.zw, r0
  61:     mov oT6.zw, r0
  62:     mov oT2, c24.z
  63:     mov oT3, c24.z
  64:     mov oT4.w, c24.z
  65:     mov oT5.w, c24.z

// approximately 66 instruction slots used
      vs_4_0
      dcl_constantbuffer cb0[14], immediateIndexed
      dcl_constantbuffer cb1[6], immediateIndexed
      dcl_constantbuffer cb2[45], immediateIndexed
      dcl_constantbuffer cb3[19], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 5
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   4: mov o0.xyzw, r0.xyzw
   5: eq r1.x, cb0[13].z, l(0.000000)
   6: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
   7: mad o1.zw, r1.xxxy, cb0[11].xxxy, cb0[11].zzzw
   8: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   9: mul r1.xyz, v0.yyyy, cb3[13].xyzx
  10: mad r1.xyz, cb3[12].xyzx, v0.xxxx, r1.xyzx
  11: mad r1.xyz, cb3[14].xyzx, v0.zzzz, r1.xyzx
  12: mad r1.xyz, cb3[15].xyzx, v0.wwww, r1.xyzx
  13: add r1.xyz, r1.xyzx, -cb1[4].xyzx
  14: dp3 r1.w, r1.xyzx, r1.xyzx
  15: rsq r1.w, r1.w
  16: mul o2.xyz, r1.wwww, r1.xyzx
  17: mov o3.xyzw, l(0,0,0,0)
  18: mov o4.xyzw, l(0,0,0,0)
  19: mul r1.x, v1.x, cb3[16].x
  20: mul r1.y, v1.x, cb3[17].x
  21: mul r1.z, v1.x, cb3[18].x
  22: mul r2.x, v1.y, cb3[16].y
  23: mul r2.y, v1.y, cb3[17].y
  24: mul r2.z, v1.y, cb3[18].y
  25: add r1.xyz, r1.xyzx, r2.xyzx
  26: mul r2.x, v1.z, cb3[16].z
  27: mul r2.y, v1.z, cb3[17].z
  28: mul r2.z, v1.z, cb3[18].z
  29: add r1.xyz, r1.xyzx, r2.xyzx
  30: dp3 r1.w, r1.xyzx, r1.xyzx
  31: rsq r1.w, r1.w
  32: mul r1.xyz, r1.wwww, r1.xyzx
  33: mov o5.xyz, r1.xyzx
  34: mov o5.w, l(0)
  35: mul r2.x, r1.y, r1.y
  36: mad r2.x, r1.x, r1.x, -r2.x
  37: mul r3.xyzw, r1.yzzx, r1.xyzz
  38: dp4 r4.x, cb2[41].xyzw, r3.xyzw
  39: dp4 r4.y, cb2[42].xyzw, r3.xyzw
  40: dp4 r4.z, cb2[43].xyzw, r3.xyzw
  41: mad r2.xyz, cb2[44].xyzx, r2.xxxx, r4.xyzx
  42: mov r1.w, l(1.000000)
  43: dp4 r3.x, cb2[38].xyzw, r1.xyzw
  44: dp4 r3.y, cb2[39].xyzw, r1.xyzw
  45: dp4 r3.z, cb2[40].xyzw, r1.xyzw
  46: add r1.xyz, r2.xyzx, r3.xyzx
  47: max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  48: log r1.xyz, r1.xyzx
  49: mul r1.xyz, r1.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  50: exp r1.xyz, r1.xyzx
  51: mad r1.xyz, r1.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  52: max o6.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  53: mov o6.w, l(0)
  54: mul r0.y, r0.y, cb1[5].x
  55: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  56: mov o7.zw, r0.zzzw
  57: add o7.xy, r1.zzzz, r1.xwxx
  58: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
// Stats: 49 math, 4 textures
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" }
"#version 120

#ifdef VERTEX
uniform vec3 _WorldSpaceCameraPos;
uniform vec4 unity_4LightPosX0;
uniform vec4 unity_4LightPosY0;
uniform vec4 unity_4LightPosZ0;
uniform vec4 unity_4LightAtten0;
uniform vec4 unity_LightColor[8];
uniform vec4 unity_SHAr;
uniform vec4 unity_SHAg;
uniform vec4 unity_SHAb;
uniform vec4 unity_SHBr;
uniform vec4 unity_SHBg;
uniform vec4 unity_SHBb;
uniform vec4 unity_SHC;

uniform mat4 _Object2World;
uniform mat4 _World2Object;
uniform vec4 unity_ColorSpaceLuminance;
uniform vec4 _MainTex_ST;
uniform vec4 _DetailAlbedoMap_ST;
uniform float _UVSec;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
void main ()
{
  vec2 tmpvar_1;
  tmpvar_1 = gl_MultiTexCoord0.xy;
  vec2 tmpvar_2;
  tmpvar_2 = gl_MultiTexCoord1.xy;
  vec4 tmpvar_3;
  vec4 tmpvar_4;
  vec4 tmpvar_5;
  vec4 tmpvar_6;
  vec4 tmpvar_7;
  tmpvar_7 = (_Object2World * gl_Vertex);
  tmpvar_3 = (gl_ModelViewProjectionMatrix * gl_Vertex);
  vec4 texcoord_8;
  texcoord_8.xy = ((gl_MultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  vec2 tmpvar_9;
  if ((_UVSec == 0.0)) {
    tmpvar_9 = tmpvar_1;
  } else {
    tmpvar_9 = tmpvar_2;
  };
  texcoord_8.zw = ((tmpvar_9 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  vec3 tmpvar_10;
  tmpvar_10 = normalize((tmpvar_7.xyz - _WorldSpaceCameraPos));
  vec4 v_11;
  v_11.x = _World2Object[0].x;
  v_11.y = _World2Object[1].x;
  v_11.z = _World2Object[2].x;
  v_11.w = _World2Object[3].x;
  vec4 v_12;
  v_12.x = _World2Object[0].y;
  v_12.y = _World2Object[1].y;
  v_12.z = _World2Object[2].y;
  v_12.w = _World2Object[3].y;
  vec4 v_13;
  v_13.x = _World2Object[0].z;
  v_13.y = _World2Object[1].z;
  v_13.z = _World2Object[2].z;
  v_13.w = _World2Object[3].z;
  vec3 tmpvar_14;
  tmpvar_14 = normalize(((
    (v_11.xyz * gl_Normal.x)
   + 
    (v_12.xyz * gl_Normal.y)
  ) + (v_13.xyz * gl_Normal.z)));
  tmpvar_4.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_5.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_6.xyz = tmpvar_14;
  vec4 ambientOrLightmapUV_15;
  ambientOrLightmapUV_15.w = 0.0;
  vec3 col_16;
  vec4 ndotl_17;
  vec4 lengthSq_18;
  vec4 tmpvar_19;
  tmpvar_19 = (unity_4LightPosX0 - tmpvar_7.x);
  vec4 tmpvar_20;
  tmpvar_20 = (unity_4LightPosY0 - tmpvar_7.y);
  vec4 tmpvar_21;
  tmpvar_21 = (unity_4LightPosZ0 - tmpvar_7.z);
  lengthSq_18 = (tmpvar_19 * tmpvar_19);
  lengthSq_18 = (lengthSq_18 + (tmpvar_20 * tmpvar_20));
  lengthSq_18 = (lengthSq_18 + (tmpvar_21 * tmpvar_21));
  ndotl_17 = (tmpvar_19 * tmpvar_14.x);
  ndotl_17 = (ndotl_17 + (tmpvar_20 * tmpvar_14.y));
  ndotl_17 = (ndotl_17 + (tmpvar_21 * tmpvar_14.z));
  vec4 tmpvar_22;
  tmpvar_22 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_17 * inversesqrt(lengthSq_18)));
  ndotl_17 = tmpvar_22;
  vec4 tmpvar_23;
  tmpvar_23 = (tmpvar_22 * (1.0/((1.0 + 
    (lengthSq_18 * unity_4LightAtten0)
  ))));
  col_16 = (unity_LightColor[0].xyz * tmpvar_23.x);
  col_16 = (col_16 + (unity_LightColor[1].xyz * tmpvar_23.y));
  col_16 = (col_16 + (unity_LightColor[2].xyz * tmpvar_23.z));
  col_16 = (col_16 + (unity_LightColor[3].xyz * tmpvar_23.w));
  ambientOrLightmapUV_15.xyz = col_16;
  vec3 ambient_24;
  ambient_24 = ambientOrLightmapUV_15.xyz;
  vec4 tmpvar_25;
  tmpvar_25.w = 1.0;
  tmpvar_25.xyz = tmpvar_14;
  vec3 res_26;
  vec3 x_27;
  x_27.x = dot (unity_SHAr, tmpvar_25);
  x_27.y = dot (unity_SHAg, tmpvar_25);
  x_27.z = dot (unity_SHAb, tmpvar_25);
  vec3 x1_28;
  vec4 tmpvar_29;
  tmpvar_29 = (tmpvar_14.xyzz * tmpvar_14.yzzx);
  x1_28.x = dot (unity_SHBr, tmpvar_29);
  x1_28.y = dot (unity_SHBg, tmpvar_29);
  x1_28.z = dot (unity_SHBb, tmpvar_29);
  res_26 = (x_27 + (x1_28 + (unity_SHC.xyz * 
    ((tmpvar_14.x * tmpvar_14.x) - (tmpvar_14.y * tmpvar_14.y))
  )));
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    res_26 = max (((1.055 * 
      pow (max (res_26, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
    ) - 0.055), vec3(0.0, 0.0, 0.0));
  };
  ambient_24 = (col_16 + max (vec3(0.0, 0.0, 0.0), res_26));
  ambientOrLightmapUV_15.xyz = ambient_24;
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = texcoord_8;
  xlv_TEXCOORD1 = tmpvar_10;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  xlv_TEXCOORD5 = ambientOrLightmapUV_15;
}


#endif
#ifdef FRAGMENT
uniform vec4 _WorldSpaceLightPos0;
uniform samplerCube unity_SpecCube0;
uniform vec4 unity_SpecCube0_HDR;
uniform vec4 unity_ColorSpaceDielectricSpec;
uniform vec4 _LightColor0;
uniform sampler2D unity_NHxRoughness;
uniform vec4 _Color;
uniform sampler2D _MainTex;
uniform float _Metallic;
uniform float _Glossiness;
uniform sampler2D _OcclusionMap;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
void main ()
{
  vec4 c_1;
  vec3 tmpvar_2;
  tmpvar_2 = (_Color.xyz * texture2D (_MainTex, xlv_TEXCOORD0.xy).xyz);
  vec3 tmpvar_3;
  vec3 tmpvar_4;
  tmpvar_4 = mix (unity_ColorSpaceDielectricSpec.xyz, tmpvar_2, vec3(_Metallic));
  float tmpvar_5;
  tmpvar_5 = (unity_ColorSpaceDielectricSpec.w - (_Metallic * unity_ColorSpaceDielectricSpec.w));
  tmpvar_3 = (tmpvar_2 * tmpvar_5);
  vec3 tmpvar_6;
  tmpvar_6 = normalize(xlv_TEXCOORD2_2.xyz);
  float tmpvar_7;
  tmpvar_7 = texture2D (_OcclusionMap, xlv_TEXCOORD0.xy).y;
  vec3 tmpvar_8;
  float tmpvar_9;
  tmpvar_9 = (1.0 - _Glossiness);
  tmpvar_8 = (xlv_TEXCOORD1 - (2.0 * (
    dot (tmpvar_6, xlv_TEXCOORD1)
   * tmpvar_6)));
  vec4 tmpvar_10;
  tmpvar_10.xyz = tmpvar_8;
  tmpvar_10.w = ((tmpvar_9 * (1.7 - 
    (0.7 * tmpvar_9)
  )) * 6.0);
  vec4 tmpvar_11;
  tmpvar_11 = textureCube (unity_SpecCube0, tmpvar_8, tmpvar_10.w);
  vec3 viewDir_12;
  viewDir_12 = -(xlv_TEXCOORD1);
  vec3 color_13;
  vec2 tmpvar_14;
  tmpvar_14.x = dot ((viewDir_12 - (2.0 * 
    (dot (tmpvar_6, viewDir_12) * tmpvar_6)
  )), _WorldSpaceLightPos0.xyz);
  tmpvar_14.y = (1.0 - clamp (dot (tmpvar_6, viewDir_12), 0.0, 1.0));
  vec2 tmpvar_15;
  tmpvar_15 = ((tmpvar_14 * tmpvar_14) * (tmpvar_14 * tmpvar_14));
  vec2 tmpvar_16;
  tmpvar_16.x = tmpvar_15.x;
  tmpvar_16.y = tmpvar_9;
  color_13 = ((tmpvar_3 + (
    (texture2D (unity_NHxRoughness, tmpvar_16).w * 16.0)
   * tmpvar_4)) * (_LightColor0.xyz * clamp (
    dot (tmpvar_6, _WorldSpaceLightPos0.xyz)
  , 0.0, 1.0)));
  color_13 = (color_13 + ((
    (xlv_TEXCOORD5.xyz * tmpvar_7)
   * tmpvar_3) + (
    (((unity_SpecCube0_HDR.x * pow (tmpvar_11.w, unity_SpecCube0_HDR.y)) * tmpvar_11.xyz) * tmpvar_7)
   * 
    mix (tmpvar_4, vec3(clamp ((_Glossiness + (1.0 - tmpvar_5)), 0.0, 1.0)), tmpvar_15.yyy)
  )));
  vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = color_13;
  c_1.w = tmpvar_17.w;
  c_1.xyz = color_13;
  c_1.xyz = c_1.xyz;
  vec4 xlat_varoutput_18;
  xlat_varoutput_18.xyz = c_1.xyz;
  xlat_varoutput_18.w = 1.0;
  gl_FragData[0] = xlat_varoutput_18;
}


#endif
"
}
SubProgram "d3d9 " {
// Stats: 83 math
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Matrix 8 [_Object2World] 3
Matrix 11 [_World2Object] 3
Matrix 4 [glstate_matrix_mvp]
Vector 28 [_DetailAlbedoMap_ST]
Vector 27 [_MainTex_ST]
Float 29 [_UVSec]
Vector 14 [_WorldSpaceCameraPos]
Vector 18 [unity_4LightAtten0]
Vector 15 [unity_4LightPosX0]
Vector 16 [unity_4LightPosY0]
Vector 17 [unity_4LightPosZ0]
Vector 26 [unity_ColorSpaceLuminance]
Vector 0 [unity_LightColor0]
Vector 1 [unity_LightColor1]
Vector 2 [unity_LightColor2]
Vector 3 [unity_LightColor3]
Vector 21 [unity_SHAb]
Vector 20 [unity_SHAg]
Vector 19 [unity_SHAr]
Vector 24 [unity_SHBb]
Vector 23 [unity_SHBg]
Vector 22 [unity_SHBr]
Vector 25 [unity_SHC]
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   row_major float4x4 _Object2World;
//   float _UVSec;
//   row_major float4x4 _World2Object;
//   float3 _WorldSpaceCameraPos;
//   row_major float4x4 glstate_matrix_mvp;
//   float4 unity_4LightAtten0;
//   float4 unity_4LightPosX0;
//   float4 unity_4LightPosY0;
//   float4 unity_4LightPosZ0;
//   float4 unity_ColorSpaceLuminance;
//   float4 unity_LightColor[8];
//   float4 unity_SHAb;
//   float4 unity_SHAg;
//   float4 unity_SHAr;
//   float4 unity_SHBb;
//   float4 unity_SHBg;
//   float4 unity_SHBr;
//   float4 unity_SHC;
//
//
// Registers:
//
//   Name                      Reg   Size
//   ------------------------- ----- ----
//   unity_LightColor          c0       4
//   glstate_matrix_mvp        c4       4
//   _Object2World             c8       3
//   _World2Object             c11      3
//   _WorldSpaceCameraPos      c14      1
//   unity_4LightPosX0         c15      1
//   unity_4LightPosY0         c16      1
//   unity_4LightPosZ0         c17      1
//   unity_4LightAtten0        c18      1
//   unity_SHAr                c19      1
//   unity_SHAg                c20      1
//   unity_SHAb                c21      1
//   unity_SHBr                c22      1
//   unity_SHBg                c23      1
//   unity_SHBb                c24      1
//   unity_SHC                 c25      1
//   unity_ColorSpaceLuminance c26      1
//   _MainTex_ST               c27      1
//   _DetailAlbedoMap_ST       c28      1
//   _UVSec                    c29      1
//

    vs_2_0
    def c30, 0, 1, 0.416666657, 0
    def c31, 1.05499995, -0.0549999997, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dp4 oPos.x, c4, v0
    dp4 oPos.y, c5, v0
    dp4 oPos.z, c6, v0
    dp4 oPos.w, c7, v0
    mad oT0.xy, v2, c27, c27.zwzw
    mul r0.x, c29.x, c29.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad oT0.zw, r2.xyxy, c28.xyxy, c28
    dp4 r0.x, c8, v0
    dp4 r0.y, c9, v0
    dp4 r0.z, c10, v0
    add r1.xyz, r0, -c14
    add r2, -r0.x, c15
    add r3, -r0.y, c16
    add r0, -r0.z, c17
    dp3 r1.w, r1, r1
    rsq r1.w, r1.w
    mul oT1.xyz, r1.w, r1
    mul r1, r3, r3
    mad r1, r2, r2, r1
    mad r1, r0, r0, r1
    rsq r4.x, r1.x
    rsq r4.y, r1.y
    rsq r4.z, r1.z
    rsq r4.w, r1.w
    mov r5.y, c30.y
    mad r1, r1, c18, r5.y
    mul r5.xyz, v1.y, c12
    mad r5.xyz, c11, v1.x, r5
    mad r5.xyz, c13, v1.z, r5
    nrm r6.xyz, r5
    mul r3, r3, r6.y
    mad r2, r2, r6.x, r3
    mad r0, r0, r6.z, r2
    mul r0, r4, r0
    max r0, r0, c30.x
    rcp r2.x, r1.x
    rcp r2.y, r1.y
    rcp r2.z, r1.z
    rcp r2.w, r1.w
    mul r0, r0, r2
    mul r1.xyz, r0.y, c1
    mad r1.xyz, c0, r0.x, r1
    mad r0.xyz, c2, r0.z, r1
    mad r0.xyz, c3, r0.w, r0
    mul r0.w, r6.y, r6.y
    mad r0.w, r6.x, r6.x, -r0.w
    mul r1, r6.yzzx, r6.xyzz
    dp4 r2.x, c22, r1
    dp4 r2.y, c23, r1
    dp4 r2.z, c24, r1
    mad r1.xyz, c25, r0.w, r2
    mov r6.w, c30.y
    dp4 r2.x, c19, r6
    dp4 r2.y, c20, r6
    dp4 r2.z, c21, r6
    mov oT4.xyz, r6
    add r1.xyz, r1, r2
    max r2.xyz, r1, c30.x
    mov r2.w, c30.z
    lit r3, r2.xxww
    mov r3.x, r3.z
    lit r4, r2.yyww
    lit r2, r2.zzww
    mov r3.z, r2.z
    mov r3.y, r4.z
    mad r2.xyz, r3, c31.x, c31.y
    max r2.xyz, r2, c30.x
    mul r0.w, c26.w, c26.w
    sge r0.w, -r0.w, r0.w
    lrp r3.xyz, r0.w, r2, r1
    max r1.xyz, r3, c30.x
    add oT5.xyz, r0, r1
    mov oT2, c30.x
    mov oT3, c30.x
    mov oT4.w, c30.x
    mov oT5.w, c30.x

// approximately 81 instruction slots used
"
}
SubProgram "d3d11 " {
// Stats: 68 math
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
ConstBuffer "$Globals" 240
Vector 48 [unity_ColorSpaceLuminance]
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 32 [unity_4LightPosX0]
Vector 48 [unity_4LightPosY0]
Vector 64 [unity_4LightPosZ0]
Vector 80 [unity_4LightAtten0]
Vector 96 [unity_LightColor0]
Vector 112 [unity_LightColor1]
Vector 128 [unity_LightColor2]
Vector 144 [unity_LightColor3]
Vector 160 [unity_LightColor4]
Vector 176 [unity_LightColor5]
Vector 192 [unity_LightColor6]
Vector 208 [unity_LightColor7]
Vector 608 [unity_SHAr]
Vector 624 [unity_SHAg]
Vector 640 [unity_SHAb]
Vector 656 [unity_SHBr]
Vector 672 [unity_SHBg]
Vector 688 [unity_SHBb]
Vector 704 [unity_SHC]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer cb0[14], immediateIndexed
      dcl_constantbuffer cb1[5], immediateIndexed
      dcl_constantbuffer cb2[45], immediateIndexed
      dcl_constantbuffer cb3[19], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 6
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: mad o0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   4: eq r0.x, cb0[13].z, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[11].xxxy, cb0[11].zzzw
   7: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: rsq r0.w, r0.w
  15: mul o2.xyz, r0.wwww, r1.xyzx
  16: mov o3.xyzw, l(0,0,0,0)
  17: mov o4.xyzw, l(0,0,0,0)
  18: mov o5.w, l(0)
  19: mul r1.x, v1.x, cb3[16].x
  20: mul r1.y, v1.x, cb3[17].x
  21: mul r1.z, v1.x, cb3[18].x
  22: mul r2.x, v1.y, cb3[16].y
  23: mul r2.y, v1.y, cb3[17].y
  24: mul r2.z, v1.y, cb3[18].y
  25: add r1.xyz, r1.xyzx, r2.xyzx
  26: mul r2.x, v1.z, cb3[16].z
  27: mul r2.y, v1.z, cb3[17].z
  28: mul r2.z, v1.z, cb3[18].z
  29: add r1.xyz, r1.xyzx, r2.xyzx
  30: dp3 r0.w, r1.xyzx, r1.xyzx
  31: rsq r0.w, r0.w
  32: mul r1.xyz, r0.wwww, r1.xyzx
  33: mov o5.xyz, r1.xyzx
  34: mul r0.w, r1.y, r1.y
  35: mad r0.w, r1.x, r1.x, -r0.w
  36: mul r2.xyzw, r1.yzzx, r1.xyzz
  37: dp4 r3.x, cb2[41].xyzw, r2.xyzw
  38: dp4 r3.y, cb2[42].xyzw, r2.xyzw
  39: dp4 r3.z, cb2[43].xyzw, r2.xyzw
  40: mad r2.xyz, cb2[44].xyzx, r0.wwww, r3.xyzx
  41: mov r1.w, l(1.000000)
  42: dp4 r3.x, cb2[38].xyzw, r1.xyzw
  43: dp4 r3.y, cb2[39].xyzw, r1.xyzw
  44: dp4 r3.z, cb2[40].xyzw, r1.xyzw
  45: add r2.xyz, r2.xyzx, r3.xyzx
  46: max r3.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  47: log r3.xyz, r3.xyzx
  48: mul r3.xyz, r3.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  49: exp r3.xyz, r3.xyzx
  50: mad r3.xyz, r3.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  51: max r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  52: eq r0.w, cb0[3].w, l(0.000000)
  53: movc r2.xyz, r0.wwww, r3.xyzx, r2.xyzx
  54: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  55: add r3.xyzw, -r0.yyyy, cb2[3].xyzw
  56: mul r4.xyzw, r1.yyyy, r3.xyzw
  57: mul r3.xyzw, r3.xyzw, r3.xyzw
  58: add r5.xyzw, -r0.xxxx, cb2[2].xyzw
  59: add r0.xyzw, -r0.zzzz, cb2[4].xyzw
  60: mad r4.xyzw, r5.xyzw, r1.xxxx, r4.xyzw
  61: mad r1.xyzw, r0.xyzw, r1.zzzz, r4.xyzw
  62: mad r3.xyzw, r5.xyzw, r5.xyzw, r3.xyzw
  63: mad r0.xyzw, r0.xyzw, r0.xyzw, r3.xyzw
  64: rsq r3.xyzw, r0.xyzw
  65: mad r0.xyzw, r0.xyzw, cb2[5].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  66: div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
  67: mul r1.xyzw, r1.xyzw, r3.xyzw
  68: max r1.xyzw, r1.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  69: mul r0.xyzw, r0.xyzw, r1.xyzw
  70: mul r1.xyz, r0.yyyy, cb2[7].xyzx
  71: mad r1.xyz, cb2[6].xyzx, r0.xxxx, r1.xyzx
  72: mad r0.xyz, cb2[8].xyzx, r0.zzzz, r1.xyzx
  73: mad r0.xyz, cb2[9].xyzx, r0.wwww, r0.xyzx
  74: add o6.xyz, r2.xyzx, r0.xyzx
  75: mov o6.w, l(0)
  76: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "d3d11_9x " {
// Stats: 66 math
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
ConstBuffer "$Globals" 240
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 32 [unity_4LightPosX0]
Vector 48 [unity_4LightPosY0]
Vector 64 [unity_4LightPosZ0]
Vector 80 [unity_4LightAtten0]
Vector 96 [unity_LightColor0]
Vector 112 [unity_LightColor1]
Vector 128 [unity_LightColor2]
Vector 144 [unity_LightColor3]
Vector 160 [unity_LightColor4]
Vector 176 [unity_LightColor5]
Vector 192 [unity_LightColor6]
Vector 208 [unity_LightColor7]
Vector 608 [unity_SHAr]
Vector 624 [unity_SHAg]
Vector 640 [unity_SHAb]
Vector 656 [unity_SHBr]
Vector 672 [unity_SHBg]
Vector 688 [unity_SHBb]
Vector 704 [unity_SHC]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c1         cb0            10         2  ( FLT, FLT, FLT, FLT)
// c3         cb0            13         1  ( FLT, FLT, FLT, FLT)
// c4         cb1             4         1  ( FLT, FLT, FLT, FLT)
// c5         cb2             2         8  ( FLT, FLT, FLT, FLT)
// c13        cb2            38         7  ( FLT, FLT, FLT, FLT)
// c20        cb3             0         4  ( FLT, FLT, FLT, FLT)
// c24        cb3            12         7  ( FLT, FLT, FLT, FLT)
//
//
// Runtime generated constant mappings:
//
// Target Reg                               Constant Description
// ---------- --------------------------------------------------
// c0                              Vertex Shader position offset
//
//
// Level9 shader bytecode:
//
    vs_2_0
          def c31, 0, 1, 0.416666657, 0
          def c32, 1.05499995, -0.0549999997, 0, 0
          dcl_texcoord v0
          dcl_texcoord1 v1
          dcl_texcoord2 v2
          dcl_texcoord3 v3
   0:     mad oT0.xy, v2, c1, c1.zwzw
   1:     mul r0.x, c3.z, c3.z
   2:     sge r0.x, -r0.x, r0.x
   3:     mov r1.xy, v2
   4:     lrp r2.xy, r0.x, r1, v3
   5:     mad oT0.zw, r2.xyxy, c2.xyxy, c2
   6:     mul r0.xyz, v0.y, c25
   7:     mad r0.xyz, c24, v0.x, r0
   8:     mad r0.xyz, c26, v0.z, r0
   9:     mad r0.xyz, c27, v0.w, r0
  10:     add r1.xyz, r0, -c4
  11:     dp3 r0.w, r1, r1
  12:     rsq r0.w, r0.w
  13:     mul oT1.xyz, r0.w, r1
  14:     add r1, -r0.x, c5
  15:     add r2, -r0.y, c6
  16:     add r0, -r0.z, c7
  17:     mul r3.x, v1.x, c28.x
  18:     mul r3.y, v1.x, c29.x
  19:     mul r3.z, v1.x, c30.x
  20:     mul r4.x, v1.y, c28.y
  21:     mul r4.y, v1.y, c29.y
  22:     mul r4.z, v1.y, c30.y
  23:     add r3.xyz, r3, r4
  24:     mul r4.x, v1.z, c28.z
  25:     mul r4.y, v1.z, c29.z
  26:     mul r4.z, v1.z, c30.z
  27:     add r3.xyz, r3, r4
  28:     nrm r4.xyz, r3
  31:     mul r3, r2, r4.y
  32:     mul r2, r2, r2
  33:     mad r2, r1, r1, r2
  34:     mad r1, r1, r4.x, r3
  35:     mad r1, r0, r4.z, r1
  36:     mad r0, r0, r0, r2
  37:     rsq r2.x, r0.x
  38:     rsq r2.y, r0.y
  39:     rsq r2.z, r0.z
  40:     rsq r2.w, r0.w
  41:     mov r3.y, c31.y
  42:     mad r0, r0, c8, r3.y
  43:     mul r1, r1, r2
  44:     max r1, r1, c31.x
  45:     rcp r2.x, r0.x
  46:     rcp r2.y, r0.y
  47:     rcp r2.z, r0.z
  48:     rcp r2.w, r0.w
  49:     mul r0, r1, r2
  50:     mul r1.xyz, r0.y, c10
  51:     mad r1.xyz, c9, r0.x, r1
  52:     mad r0.xyz, c11, r0.z, r1
  53:     mad r0.xyz, c12, r0.w, r0
  54:     mul r0.w, r4.y, r4.y
  55:     mad r0.w, r4.x, r4.x, -r0.w
  56:     mul r1, r4.yzzx, r4.xyzz
  57:     dp4 r2.x, c16, r1
  58:     dp4 r2.y, c17, r1
  59:     dp4 r2.z, c18, r1
  60:     mad r1.xyz, c19, r0.w, r2
  61:     mov r4.w, c31.y
  62:     dp4 r2.x, c13, r4
  63:     dp4 r2.y, c14, r4
  64:     dp4 r2.z, c15, r4
  65:     mov oT4.xyz, r4
  66:     add r1.xyz, r1, r2
  67:     max r1.xyz, r1, c31.x
  68:     mov r1.w, c31.z
  69:     lit r2, r1.xxww
  70:     mov r2.x, r2.z
  71:     lit r3, r1.yyww
  72:     lit r1, r1.zzww
  73:     mov r2.z, r1.z
  74:     mov r2.y, r3.z
  75:     mad r1.xyz, r2, c32.x, c32.y
  76:     max r1.xyz, r1, c31.x
  77:     add oT5.xyz, r0, r1
  78:     mul r0, v0.y, c21
  79:     mad r0, c20, v0.x, r0
  80:     mad r0, c22, v0.z, r0
  81:     mad r0, c23, v0.w, r0
  82:     mad oPos.xy, r0.w, c0, r0
  83:     mov oPos.zw, r0
  84:     mov oT2, c31.x
  85:     mov oT3, c31.x
  86:     mov oT4.w, c31.x
  87:     mov oT5.w, c31.x

// approximately 88 instruction slots used
      vs_4_0
      dcl_constantbuffer cb0[14], immediateIndexed
      dcl_constantbuffer cb1[5], immediateIndexed
      dcl_constantbuffer cb2[45], immediateIndexed
      dcl_constantbuffer cb3[19], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 6
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: mad o0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   4: eq r0.x, cb0[13].z, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[11].xxxy, cb0[11].zzzw
   7: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: rsq r0.w, r0.w
  15: mul o2.xyz, r0.wwww, r1.xyzx
  16: mov o3.xyzw, l(0,0,0,0)
  17: mov o4.xyzw, l(0,0,0,0)
  18: mov o5.w, l(0)
  19: mul r1.x, v1.x, cb3[16].x
  20: mul r1.y, v1.x, cb3[17].x
  21: mul r1.z, v1.x, cb3[18].x
  22: mul r2.x, v1.y, cb3[16].y
  23: mul r2.y, v1.y, cb3[17].y
  24: mul r2.z, v1.y, cb3[18].y
  25: add r1.xyz, r1.xyzx, r2.xyzx
  26: mul r2.x, v1.z, cb3[16].z
  27: mul r2.y, v1.z, cb3[17].z
  28: mul r2.z, v1.z, cb3[18].z
  29: add r1.xyz, r1.xyzx, r2.xyzx
  30: dp3 r0.w, r1.xyzx, r1.xyzx
  31: rsq r0.w, r0.w
  32: mul r1.xyz, r0.wwww, r1.xyzx
  33: mov o5.xyz, r1.xyzx
  34: mul r0.w, r1.y, r1.y
  35: mad r0.w, r1.x, r1.x, -r0.w
  36: mul r2.xyzw, r1.yzzx, r1.xyzz
  37: dp4 r3.x, cb2[41].xyzw, r2.xyzw
  38: dp4 r3.y, cb2[42].xyzw, r2.xyzw
  39: dp4 r3.z, cb2[43].xyzw, r2.xyzw
  40: mad r2.xyz, cb2[44].xyzx, r0.wwww, r3.xyzx
  41: mov r1.w, l(1.000000)
  42: dp4 r3.x, cb2[38].xyzw, r1.xyzw
  43: dp4 r3.y, cb2[39].xyzw, r1.xyzw
  44: dp4 r3.z, cb2[40].xyzw, r1.xyzw
  45: add r2.xyz, r2.xyzx, r3.xyzx
  46: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  47: log r2.xyz, r2.xyzx
  48: mul r2.xyz, r2.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  49: exp r2.xyz, r2.xyzx
  50: mad r2.xyz, r2.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  51: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  52: add r3.xyzw, -r0.yyyy, cb2[3].xyzw
  53: mul r4.xyzw, r1.yyyy, r3.xyzw
  54: mul r3.xyzw, r3.xyzw, r3.xyzw
  55: add r5.xyzw, -r0.xxxx, cb2[2].xyzw
  56: add r0.xyzw, -r0.zzzz, cb2[4].xyzw
  57: mad r4.xyzw, r5.xyzw, r1.xxxx, r4.xyzw
  58: mad r1.xyzw, r0.xyzw, r1.zzzz, r4.xyzw
  59: mad r3.xyzw, r5.xyzw, r5.xyzw, r3.xyzw
  60: mad r0.xyzw, r0.xyzw, r0.xyzw, r3.xyzw
  61: rsq r3.xyzw, r0.xyzw
  62: mad r0.xyzw, r0.xyzw, cb2[5].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  63: div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
  64: mul r1.xyzw, r1.xyzw, r3.xyzw
  65: max r1.xyzw, r1.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  66: mul r0.xyzw, r0.xyzw, r1.xyzw
  67: mul r1.xyz, r0.yyyy, cb2[7].xyzx
  68: mad r1.xyz, cb2[6].xyzx, r0.xxxx, r1.xyzx
  69: mad r0.xyz, cb2[8].xyzx, r0.zzzz, r1.xyzx
  70: mad r0.xyz, cb2[9].xyzx, r0.wwww, r0.xyzx
  71: add o6.xyz, r2.xyzx, r0.xyzx
  72: mov o6.w, l(0)
  73: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
// Stats: 50 math, 5 textures
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" }
"#version 120

#ifdef VERTEX
uniform vec3 _WorldSpaceCameraPos;
uniform vec4 _ProjectionParams;
uniform vec4 unity_4LightPosX0;
uniform vec4 unity_4LightPosY0;
uniform vec4 unity_4LightPosZ0;
uniform vec4 unity_4LightAtten0;
uniform vec4 unity_LightColor[8];
uniform vec4 unity_SHAr;
uniform vec4 unity_SHAg;
uniform vec4 unity_SHAb;
uniform vec4 unity_SHBr;
uniform vec4 unity_SHBg;
uniform vec4 unity_SHBb;
uniform vec4 unity_SHC;

uniform mat4 _Object2World;
uniform mat4 _World2Object;
uniform vec4 unity_ColorSpaceLuminance;
uniform vec4 _MainTex_ST;
uniform vec4 _DetailAlbedoMap_ST;
uniform float _UVSec;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
varying vec4 xlv_TEXCOORD6;
void main ()
{
  vec2 tmpvar_1;
  tmpvar_1 = gl_MultiTexCoord0.xy;
  vec2 tmpvar_2;
  tmpvar_2 = gl_MultiTexCoord1.xy;
  vec4 tmpvar_3;
  vec4 tmpvar_4;
  vec4 tmpvar_5;
  vec4 tmpvar_6;
  vec4 tmpvar_7;
  tmpvar_7 = (_Object2World * gl_Vertex);
  tmpvar_3 = (gl_ModelViewProjectionMatrix * gl_Vertex);
  vec4 texcoord_8;
  texcoord_8.xy = ((gl_MultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  vec2 tmpvar_9;
  if ((_UVSec == 0.0)) {
    tmpvar_9 = tmpvar_1;
  } else {
    tmpvar_9 = tmpvar_2;
  };
  texcoord_8.zw = ((tmpvar_9 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  vec3 tmpvar_10;
  tmpvar_10 = normalize((tmpvar_7.xyz - _WorldSpaceCameraPos));
  vec4 v_11;
  v_11.x = _World2Object[0].x;
  v_11.y = _World2Object[1].x;
  v_11.z = _World2Object[2].x;
  v_11.w = _World2Object[3].x;
  vec4 v_12;
  v_12.x = _World2Object[0].y;
  v_12.y = _World2Object[1].y;
  v_12.z = _World2Object[2].y;
  v_12.w = _World2Object[3].y;
  vec4 v_13;
  v_13.x = _World2Object[0].z;
  v_13.y = _World2Object[1].z;
  v_13.z = _World2Object[2].z;
  v_13.w = _World2Object[3].z;
  vec3 tmpvar_14;
  tmpvar_14 = normalize(((
    (v_11.xyz * gl_Normal.x)
   + 
    (v_12.xyz * gl_Normal.y)
  ) + (v_13.xyz * gl_Normal.z)));
  tmpvar_4.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_5.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_6.xyz = tmpvar_14;
  vec4 o_15;
  vec4 tmpvar_16;
  tmpvar_16 = (tmpvar_3 * 0.5);
  vec2 tmpvar_17;
  tmpvar_17.x = tmpvar_16.x;
  tmpvar_17.y = (tmpvar_16.y * _ProjectionParams.x);
  o_15.xy = (tmpvar_17 + tmpvar_16.w);
  o_15.zw = tmpvar_3.zw;
  vec4 ambientOrLightmapUV_18;
  ambientOrLightmapUV_18.w = 0.0;
  vec3 col_19;
  vec4 ndotl_20;
  vec4 lengthSq_21;
  vec4 tmpvar_22;
  tmpvar_22 = (unity_4LightPosX0 - tmpvar_7.x);
  vec4 tmpvar_23;
  tmpvar_23 = (unity_4LightPosY0 - tmpvar_7.y);
  vec4 tmpvar_24;
  tmpvar_24 = (unity_4LightPosZ0 - tmpvar_7.z);
  lengthSq_21 = (tmpvar_22 * tmpvar_22);
  lengthSq_21 = (lengthSq_21 + (tmpvar_23 * tmpvar_23));
  lengthSq_21 = (lengthSq_21 + (tmpvar_24 * tmpvar_24));
  ndotl_20 = (tmpvar_22 * tmpvar_14.x);
  ndotl_20 = (ndotl_20 + (tmpvar_23 * tmpvar_14.y));
  ndotl_20 = (ndotl_20 + (tmpvar_24 * tmpvar_14.z));
  vec4 tmpvar_25;
  tmpvar_25 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_20 * inversesqrt(lengthSq_21)));
  ndotl_20 = tmpvar_25;
  vec4 tmpvar_26;
  tmpvar_26 = (tmpvar_25 * (1.0/((1.0 + 
    (lengthSq_21 * unity_4LightAtten0)
  ))));
  col_19 = (unity_LightColor[0].xyz * tmpvar_26.x);
  col_19 = (col_19 + (unity_LightColor[1].xyz * tmpvar_26.y));
  col_19 = (col_19 + (unity_LightColor[2].xyz * tmpvar_26.z));
  col_19 = (col_19 + (unity_LightColor[3].xyz * tmpvar_26.w));
  ambientOrLightmapUV_18.xyz = col_19;
  vec3 ambient_27;
  ambient_27 = ambientOrLightmapUV_18.xyz;
  vec4 tmpvar_28;
  tmpvar_28.w = 1.0;
  tmpvar_28.xyz = tmpvar_14;
  vec3 res_29;
  vec3 x_30;
  x_30.x = dot (unity_SHAr, tmpvar_28);
  x_30.y = dot (unity_SHAg, tmpvar_28);
  x_30.z = dot (unity_SHAb, tmpvar_28);
  vec3 x1_31;
  vec4 tmpvar_32;
  tmpvar_32 = (tmpvar_14.xyzz * tmpvar_14.yzzx);
  x1_31.x = dot (unity_SHBr, tmpvar_32);
  x1_31.y = dot (unity_SHBg, tmpvar_32);
  x1_31.z = dot (unity_SHBb, tmpvar_32);
  res_29 = (x_30 + (x1_31 + (unity_SHC.xyz * 
    ((tmpvar_14.x * tmpvar_14.x) - (tmpvar_14.y * tmpvar_14.y))
  )));
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    res_29 = max (((1.055 * 
      pow (max (res_29, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
    ) - 0.055), vec3(0.0, 0.0, 0.0));
  };
  ambient_27 = (col_19 + max (vec3(0.0, 0.0, 0.0), res_29));
  ambientOrLightmapUV_18.xyz = ambient_27;
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = texcoord_8;
  xlv_TEXCOORD1 = tmpvar_10;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  xlv_TEXCOORD5 = ambientOrLightmapUV_18;
  xlv_TEXCOORD6 = o_15;
}


#endif
#ifdef FRAGMENT
uniform vec4 _WorldSpaceLightPos0;
uniform samplerCube unity_SpecCube0;
uniform vec4 unity_SpecCube0_HDR;
uniform vec4 unity_ColorSpaceDielectricSpec;
uniform vec4 _LightColor0;
uniform sampler2D unity_NHxRoughness;
uniform vec4 _Color;
uniform sampler2D _MainTex;
uniform float _Metallic;
uniform float _Glossiness;
uniform sampler2D _OcclusionMap;
uniform sampler2D _ShadowMapTexture;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
varying vec4 xlv_TEXCOORD6;
void main ()
{
  vec4 c_1;
  vec3 tmpvar_2;
  tmpvar_2 = (_Color.xyz * texture2D (_MainTex, xlv_TEXCOORD0.xy).xyz);
  vec3 tmpvar_3;
  vec3 tmpvar_4;
  tmpvar_4 = mix (unity_ColorSpaceDielectricSpec.xyz, tmpvar_2, vec3(_Metallic));
  float tmpvar_5;
  tmpvar_5 = (unity_ColorSpaceDielectricSpec.w - (_Metallic * unity_ColorSpaceDielectricSpec.w));
  tmpvar_3 = (tmpvar_2 * tmpvar_5);
  vec3 tmpvar_6;
  tmpvar_6 = normalize(xlv_TEXCOORD2_2.xyz);
  float tmpvar_7;
  tmpvar_7 = texture2D (_OcclusionMap, xlv_TEXCOORD0.xy).y;
  vec3 tmpvar_8;
  float tmpvar_9;
  tmpvar_9 = (1.0 - _Glossiness);
  tmpvar_8 = (xlv_TEXCOORD1 - (2.0 * (
    dot (tmpvar_6, xlv_TEXCOORD1)
   * tmpvar_6)));
  vec4 tmpvar_10;
  tmpvar_10.xyz = tmpvar_8;
  tmpvar_10.w = ((tmpvar_9 * (1.7 - 
    (0.7 * tmpvar_9)
  )) * 6.0);
  vec4 tmpvar_11;
  tmpvar_11 = textureCube (unity_SpecCube0, tmpvar_8, tmpvar_10.w);
  vec3 viewDir_12;
  viewDir_12 = -(xlv_TEXCOORD1);
  vec3 color_13;
  vec2 tmpvar_14;
  tmpvar_14.x = dot ((viewDir_12 - (2.0 * 
    (dot (tmpvar_6, viewDir_12) * tmpvar_6)
  )), _WorldSpaceLightPos0.xyz);
  tmpvar_14.y = (1.0 - clamp (dot (tmpvar_6, viewDir_12), 0.0, 1.0));
  vec2 tmpvar_15;
  tmpvar_15 = ((tmpvar_14 * tmpvar_14) * (tmpvar_14 * tmpvar_14));
  vec2 tmpvar_16;
  tmpvar_16.x = tmpvar_15.x;
  tmpvar_16.y = tmpvar_9;
  color_13 = ((tmpvar_3 + (
    (texture2D (unity_NHxRoughness, tmpvar_16).w * 16.0)
   * tmpvar_4)) * ((_LightColor0.xyz * texture2DProj (_ShadowMapTexture, xlv_TEXCOORD6).x) * clamp (
    dot (tmpvar_6, _WorldSpaceLightPos0.xyz)
  , 0.0, 1.0)));
  color_13 = (color_13 + ((
    (xlv_TEXCOORD5.xyz * tmpvar_7)
   * tmpvar_3) + (
    (((unity_SpecCube0_HDR.x * pow (tmpvar_11.w, unity_SpecCube0_HDR.y)) * tmpvar_11.xyz) * tmpvar_7)
   * 
    mix (tmpvar_4, vec3(clamp ((_Glossiness + (1.0 - tmpvar_5)), 0.0, 1.0)), tmpvar_15.yyy)
  )));
  vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = color_13;
  c_1.w = tmpvar_17.w;
  c_1.xyz = color_13;
  c_1.xyz = c_1.xyz;
  vec4 xlat_varoutput_18;
  xlat_varoutput_18.xyz = c_1.xyz;
  xlat_varoutput_18.w = 1.0;
  gl_FragData[0] = xlat_varoutput_18;
}


#endif
"
}
SubProgram "d3d9 " {
// Stats: 89 math
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Matrix 8 [_Object2World] 3
Matrix 11 [_World2Object] 3
Matrix 4 [glstate_matrix_mvp]
Vector 30 [_DetailAlbedoMap_ST]
Vector 29 [_MainTex_ST]
Vector 15 [_ProjectionParams]
Vector 16 [_ScreenParams]
Float 31 [_UVSec]
Vector 14 [_WorldSpaceCameraPos]
Vector 20 [unity_4LightAtten0]
Vector 17 [unity_4LightPosX0]
Vector 18 [unity_4LightPosY0]
Vector 19 [unity_4LightPosZ0]
Vector 28 [unity_ColorSpaceLuminance]
Vector 0 [unity_LightColor0]
Vector 1 [unity_LightColor1]
Vector 2 [unity_LightColor2]
Vector 3 [unity_LightColor3]
Vector 23 [unity_SHAb]
Vector 22 [unity_SHAg]
Vector 21 [unity_SHAr]
Vector 26 [unity_SHBb]
Vector 25 [unity_SHBg]
Vector 24 [unity_SHBr]
Vector 27 [unity_SHC]
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   row_major float4x4 _Object2World;
//   float4 _ProjectionParams;
//   float4 _ScreenParams;
//   float _UVSec;
//   row_major float4x4 _World2Object;
//   float3 _WorldSpaceCameraPos;
//   row_major float4x4 glstate_matrix_mvp;
//   float4 unity_4LightAtten0;
//   float4 unity_4LightPosX0;
//   float4 unity_4LightPosY0;
//   float4 unity_4LightPosZ0;
//   float4 unity_ColorSpaceLuminance;
//   float4 unity_LightColor[8];
//   float4 unity_SHAb;
//   float4 unity_SHAg;
//   float4 unity_SHAr;
//   float4 unity_SHBb;
//   float4 unity_SHBg;
//   float4 unity_SHBr;
//   float4 unity_SHC;
//
//
// Registers:
//
//   Name                      Reg   Size
//   ------------------------- ----- ----
//   unity_LightColor          c0       4
//   glstate_matrix_mvp        c4       4
//   _Object2World             c8       3
//   _World2Object             c11      3
//   _WorldSpaceCameraPos      c14      1
//   _ProjectionParams         c15      1
//   _ScreenParams             c16      1
//   unity_4LightPosX0         c17      1
//   unity_4LightPosY0         c18      1
//   unity_4LightPosZ0         c19      1
//   unity_4LightAtten0        c20      1
//   unity_SHAr                c21      1
//   unity_SHAg                c22      1
//   unity_SHAb                c23      1
//   unity_SHBr                c24      1
//   unity_SHBg                c25      1
//   unity_SHBb                c26      1
//   unity_SHC                 c27      1
//   unity_ColorSpaceLuminance c28      1
//   _MainTex_ST               c29      1
//   _DetailAlbedoMap_ST       c30      1
//   _UVSec                    c31      1
//

    vs_2_0
    def c32, 0.5, 0, 1, 0.416666657
    def c33, 1.05499995, -0.0549999997, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    mad oT0.xy, v2, c29, c29.zwzw
    mul r0.x, c31.x, c31.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad oT0.zw, r2.xyxy, c30.xyxy, c30
    dp4 r0.x, c8, v0
    dp4 r0.y, c9, v0
    dp4 r0.z, c10, v0
    add r1.xyz, r0, -c14
    add r2, -r0.x, c17
    add r3, -r0.y, c18
    add r0, -r0.z, c19
    dp3 r1.w, r1, r1
    rsq r1.w, r1.w
    mul oT1.xyz, r1.w, r1
    dp4 r1.y, c5, v0
    mul r4.x, r1.y, c15.x
    mul r4.w, r4.x, c32.x
    dp4 r1.x, c4, v0
    dp4 r1.w, c7, v0
    mul r4.xz, r1.xyww, c32.x
    mad oT6.xy, r4.z, c16.zwzw, r4.xwzw
    mul r4, r3, r3
    mad r4, r2, r2, r4
    mad r4, r0, r0, r4
    rsq r5.x, r4.x
    rsq r5.y, r4.y
    rsq r5.z, r4.z
    rsq r5.w, r4.w
    mov r6.z, c32.z
    mad r4, r4, c20, r6.z
    mul r6.xyz, v1.y, c12
    mad r6.xyz, c11, v1.x, r6
    mad r6.xyz, c13, v1.z, r6
    nrm r7.xyz, r6
    mul r3, r3, r7.y
    mad r2, r2, r7.x, r3
    mad r0, r0, r7.z, r2
    mul r0, r5, r0
    max r0, r0, c32.y
    rcp r2.x, r4.x
    rcp r2.y, r4.y
    rcp r2.z, r4.z
    rcp r2.w, r4.w
    mul r0, r0, r2
    mul r2.xyz, r0.y, c1
    mad r2.xyz, c0, r0.x, r2
    mad r0.xyz, c2, r0.z, r2
    mad r0.xyz, c3, r0.w, r0
    mul r0.w, r7.y, r7.y
    mad r0.w, r7.x, r7.x, -r0.w
    mul r2, r7.yzzx, r7.xyzz
    dp4 r3.x, c24, r2
    dp4 r3.y, c25, r2
    dp4 r3.z, c26, r2
    mad r2.xyz, c27, r0.w, r3
    mov r7.w, c32.z
    dp4 r3.x, c21, r7
    dp4 r3.y, c22, r7
    dp4 r3.z, c23, r7
    mov oT4.xyz, r7
    add r2.xyz, r2, r3
    max r3.xyz, r2, c32.y
    mov r3.w, c32.w
    lit r4, r3.xxww
    mov r4.x, r4.z
    lit r5, r3.yyww
    lit r3, r3.zzww
    mov r4.z, r3.z
    mov r4.y, r5.z
    mad r3.xyz, r4, c33.x, c33.y
    max r3.xyz, r3, c32.y
    mul r0.w, c28.w, c28.w
    sge r0.w, -r0.w, r0.w
    lrp r4.xyz, r0.w, r3, r2
    max r2.xyz, r4, c32.y
    add oT5.xyz, r0, r2
    dp4 r1.z, c6, v0
    mov oPos, r1
    mov oT6.zw, r1
    mov oT2, c32.y
    mov oT3, c32.y
    mov oT4.w, c32.y
    mov oT5.w, c32.y

// approximately 87 instruction slots used
"
}
SubProgram "d3d11 " {
// Stats: 71 math
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
ConstBuffer "$Globals" 240
Vector 48 [unity_ColorSpaceLuminance]
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
Vector 80 [_ProjectionParams]
ConstBuffer "UnityLighting" 720
Vector 32 [unity_4LightPosX0]
Vector 48 [unity_4LightPosY0]
Vector 64 [unity_4LightPosZ0]
Vector 80 [unity_4LightAtten0]
Vector 96 [unity_LightColor0]
Vector 112 [unity_LightColor1]
Vector 128 [unity_LightColor2]
Vector 144 [unity_LightColor3]
Vector 160 [unity_LightColor4]
Vector 176 [unity_LightColor5]
Vector 192 [unity_LightColor6]
Vector 208 [unity_LightColor7]
Vector 608 [unity_SHAr]
Vector 624 [unity_SHAg]
Vector 640 [unity_SHAb]
Vector 656 [unity_SHBr]
Vector 672 [unity_SHBg]
Vector 688 [unity_SHBb]
Vector 704 [unity_SHC]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer cb0[14], immediateIndexed
      dcl_constantbuffer cb1[6], immediateIndexed
      dcl_constantbuffer cb2[45], immediateIndexed
      dcl_constantbuffer cb3[19], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 7
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   4: mov o0.xyzw, r0.xyzw
   5: eq r1.x, cb0[13].z, l(0.000000)
   6: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
   7: mad o1.zw, r1.xxxy, cb0[11].xxxy, cb0[11].zzzw
   8: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   9: mul r1.xyz, v0.yyyy, cb3[13].xyzx
  10: mad r1.xyz, cb3[12].xyzx, v0.xxxx, r1.xyzx
  11: mad r1.xyz, cb3[14].xyzx, v0.zzzz, r1.xyzx
  12: mad r1.xyz, cb3[15].xyzx, v0.wwww, r1.xyzx
  13: add r2.xyz, r1.xyzx, -cb1[4].xyzx
  14: dp3 r1.w, r2.xyzx, r2.xyzx
  15: rsq r1.w, r1.w
  16: mul o2.xyz, r1.wwww, r2.xyzx
  17: mov o3.xyzw, l(0,0,0,0)
  18: mov o4.xyzw, l(0,0,0,0)
  19: mov o5.w, l(0)
  20: mul r2.x, v1.x, cb3[16].x
  21: mul r2.y, v1.x, cb3[17].x
  22: mul r2.z, v1.x, cb3[18].x
  23: mul r3.x, v1.y, cb3[16].y
  24: mul r3.y, v1.y, cb3[17].y
  25: mul r3.z, v1.y, cb3[18].y
  26: add r2.xyz, r2.xyzx, r3.xyzx
  27: mul r3.x, v1.z, cb3[16].z
  28: mul r3.y, v1.z, cb3[17].z
  29: mul r3.z, v1.z, cb3[18].z
  30: add r2.xyz, r2.xyzx, r3.xyzx
  31: dp3 r1.w, r2.xyzx, r2.xyzx
  32: rsq r1.w, r1.w
  33: mul r2.xyz, r1.wwww, r2.xyzx
  34: mov o5.xyz, r2.xyzx
  35: mul r1.w, r2.y, r2.y
  36: mad r1.w, r2.x, r2.x, -r1.w
  37: mul r3.xyzw, r2.yzzx, r2.xyzz
  38: dp4 r4.x, cb2[41].xyzw, r3.xyzw
  39: dp4 r4.y, cb2[42].xyzw, r3.xyzw
  40: dp4 r4.z, cb2[43].xyzw, r3.xyzw
  41: mad r3.xyz, cb2[44].xyzx, r1.wwww, r4.xyzx
  42: mov r2.w, l(1.000000)
  43: dp4 r4.x, cb2[38].xyzw, r2.xyzw
  44: dp4 r4.y, cb2[39].xyzw, r2.xyzw
  45: dp4 r4.z, cb2[40].xyzw, r2.xyzw
  46: add r3.xyz, r3.xyzx, r4.xyzx
  47: max r4.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  48: log r4.xyz, r4.xyzx
  49: mul r4.xyz, r4.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  50: exp r4.xyz, r4.xyzx
  51: mad r4.xyz, r4.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  52: max r4.xyz, r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  53: eq r1.w, cb0[3].w, l(0.000000)
  54: movc r3.xyz, r1.wwww, r4.xyzx, r3.xyzx
  55: max r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  56: add r4.xyzw, -r1.yyyy, cb2[3].xyzw
  57: mul r5.xyzw, r2.yyyy, r4.xyzw
  58: mul r4.xyzw, r4.xyzw, r4.xyzw
  59: add r6.xyzw, -r1.xxxx, cb2[2].xyzw
  60: add r1.xyzw, -r1.zzzz, cb2[4].xyzw
  61: mad r5.xyzw, r6.xyzw, r2.xxxx, r5.xyzw
  62: mad r2.xyzw, r1.xyzw, r2.zzzz, r5.xyzw
  63: mad r4.xyzw, r6.xyzw, r6.xyzw, r4.xyzw
  64: mad r1.xyzw, r1.xyzw, r1.xyzw, r4.xyzw
  65: rsq r4.xyzw, r1.xyzw
  66: mad r1.xyzw, r1.xyzw, cb2[5].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  67: div r1.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r1.xyzw
  68: mul r2.xyzw, r2.xyzw, r4.xyzw
  69: max r2.xyzw, r2.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  70: mul r1.xyzw, r1.xyzw, r2.xyzw
  71: mul r2.xyz, r1.yyyy, cb2[7].xyzx
  72: mad r2.xyz, cb2[6].xyzx, r1.xxxx, r2.xyzx
  73: mad r1.xyz, cb2[8].xyzx, r1.zzzz, r2.xyzx
  74: mad r1.xyz, cb2[9].xyzx, r1.wwww, r1.xyzx
  75: add o6.xyz, r3.xyzx, r1.xyzx
  76: mov o6.w, l(0)
  77: mul r0.y, r0.y, cb1[5].x
  78: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  79: mov o7.zw, r0.zzzw
  80: add o7.xy, r1.zzzz, r1.xwxx
  81: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "d3d11_9x " {
// Stats: 69 math
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
ConstBuffer "$Globals" 240
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
Vector 80 [_ProjectionParams]
ConstBuffer "UnityLighting" 720
Vector 32 [unity_4LightPosX0]
Vector 48 [unity_4LightPosY0]
Vector 64 [unity_4LightPosZ0]
Vector 80 [unity_4LightAtten0]
Vector 96 [unity_LightColor0]
Vector 112 [unity_LightColor1]
Vector 128 [unity_LightColor2]
Vector 144 [unity_LightColor3]
Vector 160 [unity_LightColor4]
Vector 176 [unity_LightColor5]
Vector 192 [unity_LightColor6]
Vector 208 [unity_LightColor7]
Vector 608 [unity_SHAr]
Vector 624 [unity_SHAg]
Vector 640 [unity_SHAb]
Vector 656 [unity_SHBr]
Vector 672 [unity_SHBg]
Vector 688 [unity_SHBb]
Vector 704 [unity_SHC]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c1         cb0            10         2  ( FLT, FLT, FLT, FLT)
// c3         cb0            13         1  ( FLT, FLT, FLT, FLT)
// c4         cb1             4         2  ( FLT, FLT, FLT, FLT)
// c6         cb2             2         8  ( FLT, FLT, FLT, FLT)
// c14        cb2            38         7  ( FLT, FLT, FLT, FLT)
// c21        cb3             0         4  ( FLT, FLT, FLT, FLT)
// c25        cb3            12         7  ( FLT, FLT, FLT, FLT)
//
//
// Runtime generated constant mappings:
//
// Target Reg                               Constant Description
// ---------- --------------------------------------------------
// c0                              Vertex Shader position offset
//
//
// Level9 shader bytecode:
//
    vs_2_0
          def c32, 0.5, 0, 1, 0.416666657
          def c33, 1.05499995, -0.0549999997, 0, 0
          dcl_texcoord v0
          dcl_texcoord1 v1
          dcl_texcoord2 v2
          dcl_texcoord3 v3
   0:     mad oT0.xy, v2, c1, c1.zwzw
   1:     mul r0.x, c3.z, c3.z
   2:     sge r0.x, -r0.x, r0.x
   3:     mov r1.xy, v2
   4:     lrp r2.xy, r0.x, r1, v3
   5:     mad oT0.zw, r2.xyxy, c2.xyxy, c2
   6:     mul r0.xyz, v0.y, c26
   7:     mad r0.xyz, c25, v0.x, r0
   8:     mad r0.xyz, c27, v0.z, r0
   9:     mad r0.xyz, c28, v0.w, r0
  10:     add r1.xyz, r0, -c4
  11:     dp3 r0.w, r1, r1
  12:     rsq r0.w, r0.w
  13:     mul oT1.xyz, r0.w, r1
  14:     mul r1, v0.y, c22
  15:     mad r1, c21, v0.x, r1
  16:     mad r1, c23, v0.z, r1
  17:     mad r1, c24, v0.w, r1
  18:     mul r0.w, r1.y, c5.x
  19:     mul r2.w, r0.w, c32.x
  20:     mul r2.xz, r1.xyww, c32.x
  21:     add oT6.xy, r2.z, r2.xwzw
  22:     add r2, -r0.x, c6
  23:     add r3, -r0.y, c7
  24:     add r0, -r0.z, c8
  25:     mul r4.x, v1.x, c29.x
  26:     mul r4.y, v1.x, c30.x
  27:     mul r4.z, v1.x, c31.x
  28:     mul r5.x, v1.y, c29.y
  29:     mul r5.y, v1.y, c30.y
  30:     mul r5.z, v1.y, c31.y
  31:     add r4.xyz, r4, r5
  32:     mul r5.x, v1.z, c29.z
  33:     mul r5.y, v1.z, c30.z
  34:     mul r5.z, v1.z, c31.z
  35:     add r4.xyz, r4, r5
  36:     nrm r5.xyz, r4
  39:     mul r4, r3, r5.y
  40:     mul r3, r3, r3
  41:     mad r3, r2, r2, r3
  42:     mad r2, r2, r5.x, r4
  43:     mad r2, r0, r5.z, r2
  44:     mad r0, r0, r0, r3
  45:     rsq r3.x, r0.x
  46:     rsq r3.y, r0.y
  47:     rsq r3.z, r0.z
  48:     rsq r3.w, r0.w
  49:     mov r4.z, c32.z
  50:     mad r0, r0, c9, r4.z
  51:     mul r2, r2, r3
  52:     max r2, r2, c32.y
  53:     rcp r3.x, r0.x
  54:     rcp r3.y, r0.y
  55:     rcp r3.z, r0.z
  56:     rcp r3.w, r0.w
  57:     mul r0, r2, r3
  58:     mul r2.xyz, r0.y, c11
  59:     mad r2.xyz, c10, r0.x, r2
  60:     mad r0.xyz, c12, r0.z, r2
  61:     mad r0.xyz, c13, r0.w, r0
  62:     mul r0.w, r5.y, r5.y
  63:     mad r0.w, r5.x, r5.x, -r0.w
  64:     mul r2, r5.yzzx, r5.xyzz
  65:     dp4 r3.x, c17, r2
  66:     dp4 r3.y, c18, r2
  67:     dp4 r3.z, c19, r2
  68:     mad r2.xyz, c20, r0.w, r3
  69:     mov r5.w, c32.z
  70:     dp4 r3.x, c14, r5
  71:     dp4 r3.y, c15, r5
  72:     dp4 r3.z, c16, r5
  73:     mov oT4.xyz, r5
  74:     add r2.xyz, r2, r3
  75:     max r2.xyz, r2, c32.y
  76:     mov r2.w, c32.w
  77:     lit r3, r2.xxww
  78:     mov r3.x, r3.z
  79:     lit r4, r2.yyww
  80:     lit r2, r2.zzww
  81:     mov r3.z, r2.z
  82:     mov r3.y, r4.z
  83:     mad r2.xyz, r3, c33.x, c33.y
  84:     max r2.xyz, r2, c32.y
  85:     add oT5.xyz, r0, r2
  86:     mad oPos.xy, r1.w, c0, r1
  87:     mov oPos.zw, r1
  88:     mov oT6.zw, r1
  89:     mov oT2, c32.y
  90:     mov oT3, c32.y
  91:     mov oT4.w, c32.y
  92:     mov oT5.w, c32.y

// approximately 93 instruction slots used
      vs_4_0
      dcl_constantbuffer cb0[14], immediateIndexed
      dcl_constantbuffer cb1[6], immediateIndexed
      dcl_constantbuffer cb2[45], immediateIndexed
      dcl_constantbuffer cb3[19], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 7
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   4: mov o0.xyzw, r0.xyzw
   5: eq r1.x, cb0[13].z, l(0.000000)
   6: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
   7: mad o1.zw, r1.xxxy, cb0[11].xxxy, cb0[11].zzzw
   8: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   9: mul r1.xyz, v0.yyyy, cb3[13].xyzx
  10: mad r1.xyz, cb3[12].xyzx, v0.xxxx, r1.xyzx
  11: mad r1.xyz, cb3[14].xyzx, v0.zzzz, r1.xyzx
  12: mad r1.xyz, cb3[15].xyzx, v0.wwww, r1.xyzx
  13: add r2.xyz, r1.xyzx, -cb1[4].xyzx
  14: dp3 r1.w, r2.xyzx, r2.xyzx
  15: rsq r1.w, r1.w
  16: mul o2.xyz, r1.wwww, r2.xyzx
  17: mov o3.xyzw, l(0,0,0,0)
  18: mov o4.xyzw, l(0,0,0,0)
  19: mov o5.w, l(0)
  20: mul r2.x, v1.x, cb3[16].x
  21: mul r2.y, v1.x, cb3[17].x
  22: mul r2.z, v1.x, cb3[18].x
  23: mul r3.x, v1.y, cb3[16].y
  24: mul r3.y, v1.y, cb3[17].y
  25: mul r3.z, v1.y, cb3[18].y
  26: add r2.xyz, r2.xyzx, r3.xyzx
  27: mul r3.x, v1.z, cb3[16].z
  28: mul r3.y, v1.z, cb3[17].z
  29: mul r3.z, v1.z, cb3[18].z
  30: add r2.xyz, r2.xyzx, r3.xyzx
  31: dp3 r1.w, r2.xyzx, r2.xyzx
  32: rsq r1.w, r1.w
  33: mul r2.xyz, r1.wwww, r2.xyzx
  34: mov o5.xyz, r2.xyzx
  35: mul r1.w, r2.y, r2.y
  36: mad r1.w, r2.x, r2.x, -r1.w
  37: mul r3.xyzw, r2.yzzx, r2.xyzz
  38: dp4 r4.x, cb2[41].xyzw, r3.xyzw
  39: dp4 r4.y, cb2[42].xyzw, r3.xyzw
  40: dp4 r4.z, cb2[43].xyzw, r3.xyzw
  41: mad r3.xyz, cb2[44].xyzx, r1.wwww, r4.xyzx
  42: mov r2.w, l(1.000000)
  43: dp4 r4.x, cb2[38].xyzw, r2.xyzw
  44: dp4 r4.y, cb2[39].xyzw, r2.xyzw
  45: dp4 r4.z, cb2[40].xyzw, r2.xyzw
  46: add r3.xyz, r3.xyzx, r4.xyzx
  47: max r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  48: log r3.xyz, r3.xyzx
  49: mul r3.xyz, r3.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  50: exp r3.xyz, r3.xyzx
  51: mad r3.xyz, r3.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  52: max r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  53: add r4.xyzw, -r1.yyyy, cb2[3].xyzw
  54: mul r5.xyzw, r2.yyyy, r4.xyzw
  55: mul r4.xyzw, r4.xyzw, r4.xyzw
  56: add r6.xyzw, -r1.xxxx, cb2[2].xyzw
  57: add r1.xyzw, -r1.zzzz, cb2[4].xyzw
  58: mad r5.xyzw, r6.xyzw, r2.xxxx, r5.xyzw
  59: mad r2.xyzw, r1.xyzw, r2.zzzz, r5.xyzw
  60: mad r4.xyzw, r6.xyzw, r6.xyzw, r4.xyzw
  61: mad r1.xyzw, r1.xyzw, r1.xyzw, r4.xyzw
  62: rsq r4.xyzw, r1.xyzw
  63: mad r1.xyzw, r1.xyzw, cb2[5].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  64: div r1.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r1.xyzw
  65: mul r2.xyzw, r2.xyzw, r4.xyzw
  66: max r2.xyzw, r2.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  67: mul r1.xyzw, r1.xyzw, r2.xyzw
  68: mul r2.xyz, r1.yyyy, cb2[7].xyzx
  69: mad r2.xyz, cb2[6].xyzx, r1.xxxx, r2.xyzx
  70: mad r1.xyz, cb2[8].xyzx, r1.zzzz, r2.xyzx
  71: mad r1.xyz, cb2[9].xyzx, r1.wwww, r1.xyzx
  72: add o6.xyz, r3.xyzx, r1.xyzx
  73: mov o6.w, l(0)
  74: mul r0.y, r0.y, cb1[5].x
  75: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  76: mov o7.zw, r0.zzzw
  77: add o7.xy, r1.zzzz, r1.xwxx
  78: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
// Stats: 51 math, 5 textures
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" }
"#version 120

#ifdef VERTEX
uniform vec3 _WorldSpaceCameraPos;
uniform vec4 unity_SHAr;
uniform vec4 unity_SHAg;
uniform vec4 unity_SHAb;
uniform vec4 unity_SHBr;
uniform vec4 unity_SHBg;
uniform vec4 unity_SHBb;
uniform vec4 unity_SHC;

uniform mat4 _Object2World;
uniform mat4 _World2Object;
uniform vec4 unity_ColorSpaceLuminance;
uniform vec4 _MainTex_ST;
uniform vec4 _DetailAlbedoMap_ST;
uniform float _UVSec;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
void main ()
{
  vec2 tmpvar_1;
  tmpvar_1 = gl_MultiTexCoord0.xy;
  vec2 tmpvar_2;
  tmpvar_2 = gl_MultiTexCoord1.xy;
  vec4 tmpvar_3;
  vec4 tmpvar_4;
  vec4 tmpvar_5;
  vec4 tmpvar_6;
  vec4 tmpvar_7;
  tmpvar_7 = (_Object2World * gl_Vertex);
  tmpvar_3 = (gl_ModelViewProjectionMatrix * gl_Vertex);
  vec4 texcoord_8;
  texcoord_8.xy = ((gl_MultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  vec2 tmpvar_9;
  if ((_UVSec == 0.0)) {
    tmpvar_9 = tmpvar_1;
  } else {
    tmpvar_9 = tmpvar_2;
  };
  texcoord_8.zw = ((tmpvar_9 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  vec3 tmpvar_10;
  tmpvar_10 = normalize((tmpvar_7.xyz - _WorldSpaceCameraPos));
  vec4 v_11;
  v_11.x = _World2Object[0].x;
  v_11.y = _World2Object[1].x;
  v_11.z = _World2Object[2].x;
  v_11.w = _World2Object[3].x;
  vec4 v_12;
  v_12.x = _World2Object[0].y;
  v_12.y = _World2Object[1].y;
  v_12.z = _World2Object[2].y;
  v_12.w = _World2Object[3].y;
  vec4 v_13;
  v_13.x = _World2Object[0].z;
  v_13.y = _World2Object[1].z;
  v_13.z = _World2Object[2].z;
  v_13.w = _World2Object[3].z;
  vec3 tmpvar_14;
  tmpvar_14 = normalize(((
    (v_11.xyz * gl_Normal.x)
   + 
    (v_12.xyz * gl_Normal.y)
  ) + (v_13.xyz * gl_Normal.z)));
  tmpvar_4.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_5.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_6.xyz = tmpvar_14;
  vec4 ambientOrLightmapUV_15;
  ambientOrLightmapUV_15 = vec4(0.0, 0.0, 0.0, 0.0);
  vec3 ambient_16;
  ambient_16 = vec3(0.0, 0.0, 0.0);
  vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = tmpvar_14;
  vec3 res_18;
  vec3 x_19;
  x_19.x = dot (unity_SHAr, tmpvar_17);
  x_19.y = dot (unity_SHAg, tmpvar_17);
  x_19.z = dot (unity_SHAb, tmpvar_17);
  vec3 x1_20;
  vec4 tmpvar_21;
  tmpvar_21 = (tmpvar_14.xyzz * tmpvar_14.yzzx);
  x1_20.x = dot (unity_SHBr, tmpvar_21);
  x1_20.y = dot (unity_SHBg, tmpvar_21);
  x1_20.z = dot (unity_SHBb, tmpvar_21);
  res_18 = (x_19 + (x1_20 + (unity_SHC.xyz * 
    ((tmpvar_14.x * tmpvar_14.x) - (tmpvar_14.y * tmpvar_14.y))
  )));
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    res_18 = max (((1.055 * 
      pow (max (res_18, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
    ) - 0.055), vec3(0.0, 0.0, 0.0));
  };
  ambient_16 = max (vec3(0.0, 0.0, 0.0), res_18);
  ambientOrLightmapUV_15.xyz = ambient_16;
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = texcoord_8;
  xlv_TEXCOORD1 = tmpvar_10;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  xlv_TEXCOORD5 = ambientOrLightmapUV_15;
}


#endif
#ifdef FRAGMENT
uniform vec4 _WorldSpaceLightPos0;
uniform samplerCube unity_SpecCube0;
uniform vec4 unity_SpecCube0_HDR;
uniform vec4 unity_ColorSpaceDielectricSpec;
uniform vec4 _LightColor0;
uniform sampler2D unity_NHxRoughness;
uniform vec4 _Color;
uniform sampler2D _MainTex;
uniform float _Metallic;
uniform float _Glossiness;
uniform sampler2D _OcclusionMap;
uniform vec4 _EmissionColor;
uniform sampler2D _EmissionMap;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
void main ()
{
  vec4 c_1;
  vec3 tmpvar_2;
  tmpvar_2 = (_Color.xyz * texture2D (_MainTex, xlv_TEXCOORD0.xy).xyz);
  vec3 tmpvar_3;
  vec3 tmpvar_4;
  tmpvar_4 = mix (unity_ColorSpaceDielectricSpec.xyz, tmpvar_2, vec3(_Metallic));
  float tmpvar_5;
  tmpvar_5 = (unity_ColorSpaceDielectricSpec.w - (_Metallic * unity_ColorSpaceDielectricSpec.w));
  tmpvar_3 = (tmpvar_2 * tmpvar_5);
  vec3 tmpvar_6;
  tmpvar_6 = normalize(xlv_TEXCOORD2_2.xyz);
  float tmpvar_7;
  tmpvar_7 = texture2D (_OcclusionMap, xlv_TEXCOORD0.xy).y;
  vec3 tmpvar_8;
  float tmpvar_9;
  tmpvar_9 = (1.0 - _Glossiness);
  tmpvar_8 = (xlv_TEXCOORD1 - (2.0 * (
    dot (tmpvar_6, xlv_TEXCOORD1)
   * tmpvar_6)));
  vec4 tmpvar_10;
  tmpvar_10.xyz = tmpvar_8;
  tmpvar_10.w = ((tmpvar_9 * (1.7 - 
    (0.7 * tmpvar_9)
  )) * 6.0);
  vec4 tmpvar_11;
  tmpvar_11 = textureCube (unity_SpecCube0, tmpvar_8, tmpvar_10.w);
  vec3 viewDir_12;
  viewDir_12 = -(xlv_TEXCOORD1);
  vec3 color_13;
  vec2 tmpvar_14;
  tmpvar_14.x = dot ((viewDir_12 - (2.0 * 
    (dot (tmpvar_6, viewDir_12) * tmpvar_6)
  )), _WorldSpaceLightPos0.xyz);
  tmpvar_14.y = (1.0 - clamp (dot (tmpvar_6, viewDir_12), 0.0, 1.0));
  vec2 tmpvar_15;
  tmpvar_15 = ((tmpvar_14 * tmpvar_14) * (tmpvar_14 * tmpvar_14));
  vec2 tmpvar_16;
  tmpvar_16.x = tmpvar_15.x;
  tmpvar_16.y = tmpvar_9;
  color_13 = ((tmpvar_3 + (
    (texture2D (unity_NHxRoughness, tmpvar_16).w * 16.0)
   * tmpvar_4)) * (_LightColor0.xyz * clamp (
    dot (tmpvar_6, _WorldSpaceLightPos0.xyz)
  , 0.0, 1.0)));
  color_13 = (color_13 + ((
    (xlv_TEXCOORD5.xyz * tmpvar_7)
   * tmpvar_3) + (
    (((unity_SpecCube0_HDR.x * pow (tmpvar_11.w, unity_SpecCube0_HDR.y)) * tmpvar_11.xyz) * tmpvar_7)
   * 
    mix (tmpvar_4, vec3(clamp ((_Glossiness + (1.0 - tmpvar_5)), 0.0, 1.0)), tmpvar_15.yyy)
  )));
  vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = color_13;
  c_1.w = tmpvar_17.w;
  c_1.xyz = (color_13 + (texture2D (_EmissionMap, xlv_TEXCOORD0.xy).xyz * _EmissionColor.xyz));
  vec4 xlat_varoutput_18;
  xlat_varoutput_18.xyz = c_1.xyz;
  xlat_varoutput_18.w = 1.0;
  gl_FragData[0] = xlat_varoutput_18;
}


#endif
"
}
SubProgram "d3d9 " {
// Stats: 56 math
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Matrix 4 [_Object2World] 3
Matrix 7 [_World2Object] 3
Matrix 0 [glstate_matrix_mvp]
Vector 20 [_DetailAlbedoMap_ST]
Vector 19 [_MainTex_ST]
Float 21 [_UVSec]
Vector 10 [_WorldSpaceCameraPos]
Vector 18 [unity_ColorSpaceLuminance]
Vector 13 [unity_SHAb]
Vector 12 [unity_SHAg]
Vector 11 [unity_SHAr]
Vector 16 [unity_SHBb]
Vector 15 [unity_SHBg]
Vector 14 [unity_SHBr]
Vector 17 [unity_SHC]
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   row_major float4x4 _Object2World;
//   float _UVSec;
//   row_major float4x4 _World2Object;
//   float3 _WorldSpaceCameraPos;
//   row_major float4x4 glstate_matrix_mvp;
//   float4 unity_ColorSpaceLuminance;
//   float4 unity_SHAb;
//   float4 unity_SHAg;
//   float4 unity_SHAr;
//   float4 unity_SHBb;
//   float4 unity_SHBg;
//   float4 unity_SHBr;
//   float4 unity_SHC;
//
//
// Registers:
//
//   Name                      Reg   Size
//   ------------------------- ----- ----
//   glstate_matrix_mvp        c0       4
//   _Object2World             c4       3
//   _World2Object             c7       3
//   _WorldSpaceCameraPos      c10      1
//   unity_SHAr                c11      1
//   unity_SHAg                c12      1
//   unity_SHAb                c13      1
//   unity_SHBr                c14      1
//   unity_SHBg                c15      1
//   unity_SHBb                c16      1
//   unity_SHC                 c17      1
//   unity_ColorSpaceLuminance c18      1
//   _MainTex_ST               c19      1
//   _DetailAlbedoMap_ST       c20      1
//   _UVSec                    c21      1
//

    vs_2_0
    def c22, 1, 0, 0.416666657, 0
    def c23, 1.05499995, -0.0549999997, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dp4 oPos.x, c0, v0
    dp4 oPos.y, c1, v0
    dp4 oPos.z, c2, v0
    dp4 oPos.w, c3, v0
    mad oT0.xy, v2, c19, c19.zwzw
    mul r0.x, c21.x, c21.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad oT0.zw, r2.xyxy, c20.xyxy, c20
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add r0.xyz, r0, -c10
    dp3 r0.w, r0, r0
    rsq r0.w, r0.w
    mul oT1.xyz, r0.w, r0
    mul r0.xyz, v1.y, c8
    mad r0.xyz, c7, v1.x, r0
    mad r0.xyz, c9, v1.z, r0
    nrm r1.xyz, r0
    mul r0.x, r1.y, r1.y
    mad r0.x, r1.x, r1.x, -r0.x
    mul r2, r1.yzzx, r1.xyzz
    dp4 r3.x, c14, r2
    dp4 r3.y, c15, r2
    dp4 r3.z, c16, r2
    mad r0.xyz, c17, r0.x, r3
    mov r1.w, c22.x
    dp4 r2.x, c11, r1
    dp4 r2.y, c12, r1
    dp4 r2.z, c13, r1
    mov oT4.xyz, r1
    add r0.xyz, r0, r2
    max r1.xyz, r0, c22.y
    mov r1.w, c22.z
    lit r2, r1.xxww
    mov r2.x, r2.z
    lit r3, r1.yyww
    lit r1, r1.zzww
    mov r2.z, r1.z
    mov r2.y, r3.z
    mad r1.xyz, r2, c23.x, c23.y
    max r1.xyz, r1, c22.y
    mul r0.w, c18.w, c18.w
    sge r0.w, -r0.w, r0.w
    lrp r2.xyz, r0.w, r1, r0
    max oT5.xyz, r2, c22.y
    mov oT2, c22.y
    mov oT3, c22.y
    mov oT4.w, c22.y
    mov oT5.w, c22.y

// approximately 54 instruction slots used
"
}
SubProgram "d3d11 " {
// Stats: 48 math
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
ConstBuffer "$Globals" 240
Vector 48 [unity_ColorSpaceLuminance]
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 608 [unity_SHAr]
Vector 624 [unity_SHAg]
Vector 640 [unity_SHAb]
Vector 656 [unity_SHBr]
Vector 672 [unity_SHBg]
Vector 688 [unity_SHBb]
Vector 704 [unity_SHC]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer cb0[14], immediateIndexed
      dcl_constantbuffer cb1[5], immediateIndexed
      dcl_constantbuffer cb2[45], immediateIndexed
      dcl_constantbuffer cb3[19], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: mad o0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   4: eq r0.x, cb0[13].z, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[11].xxxy, cb0[11].zzzw
   7: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add r0.xyz, r0.xyzx, -cb1[4].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: rsq r0.w, r0.w
  15: mul o2.xyz, r0.wwww, r0.xyzx
  16: mov o3.xyzw, l(0,0,0,0)
  17: mov o4.xyzw, l(0,0,0,0)
  18: mul r0.x, v1.x, cb3[16].x
  19: mul r0.y, v1.x, cb3[17].x
  20: mul r0.z, v1.x, cb3[18].x
  21: mul r1.x, v1.y, cb3[16].y
  22: mul r1.y, v1.y, cb3[17].y
  23: mul r1.z, v1.y, cb3[18].y
  24: add r0.xyz, r0.xyzx, r1.xyzx
  25: mul r1.x, v1.z, cb3[16].z
  26: mul r1.y, v1.z, cb3[17].z
  27: mul r1.z, v1.z, cb3[18].z
  28: add r0.xyz, r0.xyzx, r1.xyzx
  29: dp3 r0.w, r0.xyzx, r0.xyzx
  30: rsq r0.w, r0.w
  31: mul r0.xyz, r0.wwww, r0.xyzx
  32: mov o5.xyz, r0.xyzx
  33: mov o5.w, l(0)
  34: mul r1.x, r0.y, r0.y
  35: mad r1.x, r0.x, r0.x, -r1.x
  36: mul r2.xyzw, r0.yzzx, r0.xyzz
  37: dp4 r3.x, cb2[41].xyzw, r2.xyzw
  38: dp4 r3.y, cb2[42].xyzw, r2.xyzw
  39: dp4 r3.z, cb2[43].xyzw, r2.xyzw
  40: mad r1.xyz, cb2[44].xyzx, r1.xxxx, r3.xyzx
  41: mov r0.w, l(1.000000)
  42: dp4 r2.x, cb2[38].xyzw, r0.xyzw
  43: dp4 r2.y, cb2[39].xyzw, r0.xyzw
  44: dp4 r2.z, cb2[40].xyzw, r0.xyzw
  45: add r0.xyz, r1.xyzx, r2.xyzx
  46: max r1.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  47: log r1.xyz, r1.xyzx
  48: mul r1.xyz, r1.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  49: exp r1.xyz, r1.xyzx
  50: mad r1.xyz, r1.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  51: max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  52: eq r0.w, cb0[3].w, l(0.000000)
  53: movc r0.xyz, r0.wwww, r1.xyzx, r0.xyzx
  54: max o6.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  55: mov o6.w, l(0)
  56: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "d3d11_9x " {
// Stats: 46 math
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
ConstBuffer "$Globals" 240
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 608 [unity_SHAr]
Vector 624 [unity_SHAg]
Vector 640 [unity_SHAb]
Vector 656 [unity_SHBr]
Vector 672 [unity_SHBg]
Vector 688 [unity_SHBb]
Vector 704 [unity_SHC]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c1         cb0            10         2  ( FLT, FLT, FLT, FLT)
// c3         cb0            13         1  ( FLT, FLT, FLT, FLT)
// c4         cb1             4         1  ( FLT, FLT, FLT, FLT)
// c5         cb2            38         7  ( FLT, FLT, FLT, FLT)
// c12        cb3             0         4  ( FLT, FLT, FLT, FLT)
// c16        cb3            12         7  ( FLT, FLT, FLT, FLT)
//
//
// Runtime generated constant mappings:
//
// Target Reg                               Constant Description
// ---------- --------------------------------------------------
// c0                              Vertex Shader position offset
//
//
// Level9 shader bytecode:
//
    vs_2_0
          def c23, 1, 0, 0.416666657, 0
          def c24, 1.05499995, -0.0549999997, 0, 0
          dcl_texcoord v0
          dcl_texcoord1 v1
          dcl_texcoord2 v2
          dcl_texcoord3 v3
   0:     mad oT0.xy, v2, c1, c1.zwzw
   1:     mul r0.x, c3.z, c3.z
   2:     sge r0.x, -r0.x, r0.x
   3:     mov r1.xy, v2
   4:     lrp r2.xy, r0.x, r1, v3
   5:     mad oT0.zw, r2.xyxy, c2.xyxy, c2
   6:     mul r0.xyz, v0.y, c17
   7:     mad r0.xyz, c16, v0.x, r0
   8:     mad r0.xyz, c18, v0.z, r0
   9:     mad r0.xyz, c19, v0.w, r0
  10:     add r0.xyz, r0, -c4
  11:     dp3 r0.w, r0, r0
  12:     rsq r0.w, r0.w
  13:     mul oT1.xyz, r0.w, r0
  14:     mul r0.x, v1.x, c20.x
  15:     mul r0.y, v1.x, c21.x
  16:     mul r0.z, v1.x, c22.x
  17:     mul r1.x, v1.y, c20.y
  18:     mul r1.y, v1.y, c21.y
  19:     mul r1.z, v1.y, c22.y
  20:     add r0.xyz, r0, r1
  21:     mul r1.x, v1.z, c20.z
  22:     mul r1.y, v1.z, c21.z
  23:     mul r1.z, v1.z, c22.z
  24:     add r0.xyz, r0, r1
  25:     nrm r1.xyz, r0
  28:     mul r0.x, r1.y, r1.y
  29:     mad r0.x, r1.x, r1.x, -r0.x
  30:     mul r2, r1.yzzx, r1.xyzz
  31:     dp4 r3.x, c8, r2
  32:     dp4 r3.y, c9, r2
  33:     dp4 r3.z, c10, r2
  34:     mad r0.xyz, c11, r0.x, r3
  35:     mov r1.w, c23.x
  36:     dp4 r2.x, c5, r1
  37:     dp4 r2.y, c6, r1
  38:     dp4 r2.z, c7, r1
  39:     mov oT4.xyz, r1
  40:     add r0.xyz, r0, r2
  41:     max r0.xyz, r0, c23.y
  42:     mov r0.w, c23.z
  43:     lit r1, r0.xxww
  44:     mov r1.x, r1.z
  45:     lit r2, r0.yyww
  46:     lit r0, r0.zzww
  47:     mov r1.z, r0.z
  48:     mov r1.y, r2.z
  49:     mad r0.xyz, r1, c24.x, c24.y
  50:     max oT5.xyz, r0, c23.y
  51:     mul r0, v0.y, c13
  52:     mad r0, c12, v0.x, r0
  53:     mad r0, c14, v0.z, r0
  54:     mad r0, c15, v0.w, r0
  55:     mad oPos.xy, r0.w, c0, r0
  56:     mov oPos.zw, r0
  57:     mov oT2, c23.y
  58:     mov oT3, c23.y
  59:     mov oT4.w, c23.y
  60:     mov oT5.w, c23.y

// approximately 61 instruction slots used
      vs_4_0
      dcl_constantbuffer cb0[14], immediateIndexed
      dcl_constantbuffer cb1[5], immediateIndexed
      dcl_constantbuffer cb2[45], immediateIndexed
      dcl_constantbuffer cb3[19], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: mad o0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   4: eq r0.x, cb0[13].z, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[11].xxxy, cb0[11].zzzw
   7: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add r0.xyz, r0.xyzx, -cb1[4].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: rsq r0.w, r0.w
  15: mul o2.xyz, r0.wwww, r0.xyzx
  16: mov o3.xyzw, l(0,0,0,0)
  17: mov o4.xyzw, l(0,0,0,0)
  18: mul r0.x, v1.x, cb3[16].x
  19: mul r0.y, v1.x, cb3[17].x
  20: mul r0.z, v1.x, cb3[18].x
  21: mul r1.x, v1.y, cb3[16].y
  22: mul r1.y, v1.y, cb3[17].y
  23: mul r1.z, v1.y, cb3[18].y
  24: add r0.xyz, r0.xyzx, r1.xyzx
  25: mul r1.x, v1.z, cb3[16].z
  26: mul r1.y, v1.z, cb3[17].z
  27: mul r1.z, v1.z, cb3[18].z
  28: add r0.xyz, r0.xyzx, r1.xyzx
  29: dp3 r0.w, r0.xyzx, r0.xyzx
  30: rsq r0.w, r0.w
  31: mul r0.xyz, r0.wwww, r0.xyzx
  32: mov o5.xyz, r0.xyzx
  33: mov o5.w, l(0)
  34: mul r1.x, r0.y, r0.y
  35: mad r1.x, r0.x, r0.x, -r1.x
  36: mul r2.xyzw, r0.yzzx, r0.xyzz
  37: dp4 r3.x, cb2[41].xyzw, r2.xyzw
  38: dp4 r3.y, cb2[42].xyzw, r2.xyzw
  39: dp4 r3.z, cb2[43].xyzw, r2.xyzw
  40: mad r1.xyz, cb2[44].xyzx, r1.xxxx, r3.xyzx
  41: mov r0.w, l(1.000000)
  42: dp4 r2.x, cb2[38].xyzw, r0.xyzw
  43: dp4 r2.y, cb2[39].xyzw, r0.xyzw
  44: dp4 r2.z, cb2[40].xyzw, r0.xyzw
  45: add r0.xyz, r1.xyzx, r2.xyzx
  46: max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  47: log r0.xyz, r0.xyzx
  48: mul r0.xyz, r0.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  49: exp r0.xyz, r0.xyzx
  50: mad r0.xyz, r0.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  51: max o6.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  52: mov o6.w, l(0)
  53: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
// Stats: 52 math, 6 textures
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" }
"#version 120

#ifdef VERTEX
uniform vec3 _WorldSpaceCameraPos;
uniform vec4 _ProjectionParams;
uniform vec4 unity_SHAr;
uniform vec4 unity_SHAg;
uniform vec4 unity_SHAb;
uniform vec4 unity_SHBr;
uniform vec4 unity_SHBg;
uniform vec4 unity_SHBb;
uniform vec4 unity_SHC;

uniform mat4 _Object2World;
uniform mat4 _World2Object;
uniform vec4 unity_ColorSpaceLuminance;
uniform vec4 _MainTex_ST;
uniform vec4 _DetailAlbedoMap_ST;
uniform float _UVSec;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
varying vec4 xlv_TEXCOORD6;
void main ()
{
  vec2 tmpvar_1;
  tmpvar_1 = gl_MultiTexCoord0.xy;
  vec2 tmpvar_2;
  tmpvar_2 = gl_MultiTexCoord1.xy;
  vec4 tmpvar_3;
  vec4 tmpvar_4;
  vec4 tmpvar_5;
  vec4 tmpvar_6;
  vec4 tmpvar_7;
  tmpvar_7 = (_Object2World * gl_Vertex);
  tmpvar_3 = (gl_ModelViewProjectionMatrix * gl_Vertex);
  vec4 texcoord_8;
  texcoord_8.xy = ((gl_MultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  vec2 tmpvar_9;
  if ((_UVSec == 0.0)) {
    tmpvar_9 = tmpvar_1;
  } else {
    tmpvar_9 = tmpvar_2;
  };
  texcoord_8.zw = ((tmpvar_9 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  vec3 tmpvar_10;
  tmpvar_10 = normalize((tmpvar_7.xyz - _WorldSpaceCameraPos));
  vec4 v_11;
  v_11.x = _World2Object[0].x;
  v_11.y = _World2Object[1].x;
  v_11.z = _World2Object[2].x;
  v_11.w = _World2Object[3].x;
  vec4 v_12;
  v_12.x = _World2Object[0].y;
  v_12.y = _World2Object[1].y;
  v_12.z = _World2Object[2].y;
  v_12.w = _World2Object[3].y;
  vec4 v_13;
  v_13.x = _World2Object[0].z;
  v_13.y = _World2Object[1].z;
  v_13.z = _World2Object[2].z;
  v_13.w = _World2Object[3].z;
  vec3 tmpvar_14;
  tmpvar_14 = normalize(((
    (v_11.xyz * gl_Normal.x)
   + 
    (v_12.xyz * gl_Normal.y)
  ) + (v_13.xyz * gl_Normal.z)));
  tmpvar_4.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_5.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_6.xyz = tmpvar_14;
  vec4 o_15;
  vec4 tmpvar_16;
  tmpvar_16 = (tmpvar_3 * 0.5);
  vec2 tmpvar_17;
  tmpvar_17.x = tmpvar_16.x;
  tmpvar_17.y = (tmpvar_16.y * _ProjectionParams.x);
  o_15.xy = (tmpvar_17 + tmpvar_16.w);
  o_15.zw = tmpvar_3.zw;
  vec4 ambientOrLightmapUV_18;
  ambientOrLightmapUV_18 = vec4(0.0, 0.0, 0.0, 0.0);
  vec3 ambient_19;
  ambient_19 = vec3(0.0, 0.0, 0.0);
  vec4 tmpvar_20;
  tmpvar_20.w = 1.0;
  tmpvar_20.xyz = tmpvar_14;
  vec3 res_21;
  vec3 x_22;
  x_22.x = dot (unity_SHAr, tmpvar_20);
  x_22.y = dot (unity_SHAg, tmpvar_20);
  x_22.z = dot (unity_SHAb, tmpvar_20);
  vec3 x1_23;
  vec4 tmpvar_24;
  tmpvar_24 = (tmpvar_14.xyzz * tmpvar_14.yzzx);
  x1_23.x = dot (unity_SHBr, tmpvar_24);
  x1_23.y = dot (unity_SHBg, tmpvar_24);
  x1_23.z = dot (unity_SHBb, tmpvar_24);
  res_21 = (x_22 + (x1_23 + (unity_SHC.xyz * 
    ((tmpvar_14.x * tmpvar_14.x) - (tmpvar_14.y * tmpvar_14.y))
  )));
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    res_21 = max (((1.055 * 
      pow (max (res_21, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
    ) - 0.055), vec3(0.0, 0.0, 0.0));
  };
  ambient_19 = max (vec3(0.0, 0.0, 0.0), res_21);
  ambientOrLightmapUV_18.xyz = ambient_19;
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = texcoord_8;
  xlv_TEXCOORD1 = tmpvar_10;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  xlv_TEXCOORD5 = ambientOrLightmapUV_18;
  xlv_TEXCOORD6 = o_15;
}


#endif
#ifdef FRAGMENT
uniform vec4 _WorldSpaceLightPos0;
uniform samplerCube unity_SpecCube0;
uniform vec4 unity_SpecCube0_HDR;
uniform vec4 unity_ColorSpaceDielectricSpec;
uniform vec4 _LightColor0;
uniform sampler2D unity_NHxRoughness;
uniform vec4 _Color;
uniform sampler2D _MainTex;
uniform float _Metallic;
uniform float _Glossiness;
uniform sampler2D _OcclusionMap;
uniform vec4 _EmissionColor;
uniform sampler2D _EmissionMap;
uniform sampler2D _ShadowMapTexture;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
varying vec4 xlv_TEXCOORD6;
void main ()
{
  vec4 c_1;
  vec3 tmpvar_2;
  tmpvar_2 = (_Color.xyz * texture2D (_MainTex, xlv_TEXCOORD0.xy).xyz);
  vec3 tmpvar_3;
  vec3 tmpvar_4;
  tmpvar_4 = mix (unity_ColorSpaceDielectricSpec.xyz, tmpvar_2, vec3(_Metallic));
  float tmpvar_5;
  tmpvar_5 = (unity_ColorSpaceDielectricSpec.w - (_Metallic * unity_ColorSpaceDielectricSpec.w));
  tmpvar_3 = (tmpvar_2 * tmpvar_5);
  vec3 tmpvar_6;
  tmpvar_6 = normalize(xlv_TEXCOORD2_2.xyz);
  float tmpvar_7;
  tmpvar_7 = texture2D (_OcclusionMap, xlv_TEXCOORD0.xy).y;
  vec3 tmpvar_8;
  float tmpvar_9;
  tmpvar_9 = (1.0 - _Glossiness);
  tmpvar_8 = (xlv_TEXCOORD1 - (2.0 * (
    dot (tmpvar_6, xlv_TEXCOORD1)
   * tmpvar_6)));
  vec4 tmpvar_10;
  tmpvar_10.xyz = tmpvar_8;
  tmpvar_10.w = ((tmpvar_9 * (1.7 - 
    (0.7 * tmpvar_9)
  )) * 6.0);
  vec4 tmpvar_11;
  tmpvar_11 = textureCube (unity_SpecCube0, tmpvar_8, tmpvar_10.w);
  vec3 viewDir_12;
  viewDir_12 = -(xlv_TEXCOORD1);
  vec3 color_13;
  vec2 tmpvar_14;
  tmpvar_14.x = dot ((viewDir_12 - (2.0 * 
    (dot (tmpvar_6, viewDir_12) * tmpvar_6)
  )), _WorldSpaceLightPos0.xyz);
  tmpvar_14.y = (1.0 - clamp (dot (tmpvar_6, viewDir_12), 0.0, 1.0));
  vec2 tmpvar_15;
  tmpvar_15 = ((tmpvar_14 * tmpvar_14) * (tmpvar_14 * tmpvar_14));
  vec2 tmpvar_16;
  tmpvar_16.x = tmpvar_15.x;
  tmpvar_16.y = tmpvar_9;
  color_13 = ((tmpvar_3 + (
    (texture2D (unity_NHxRoughness, tmpvar_16).w * 16.0)
   * tmpvar_4)) * ((_LightColor0.xyz * texture2DProj (_ShadowMapTexture, xlv_TEXCOORD6).x) * clamp (
    dot (tmpvar_6, _WorldSpaceLightPos0.xyz)
  , 0.0, 1.0)));
  color_13 = (color_13 + ((
    (xlv_TEXCOORD5.xyz * tmpvar_7)
   * tmpvar_3) + (
    (((unity_SpecCube0_HDR.x * pow (tmpvar_11.w, unity_SpecCube0_HDR.y)) * tmpvar_11.xyz) * tmpvar_7)
   * 
    mix (tmpvar_4, vec3(clamp ((_Glossiness + (1.0 - tmpvar_5)), 0.0, 1.0)), tmpvar_15.yyy)
  )));
  vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = color_13;
  c_1.w = tmpvar_17.w;
  c_1.xyz = (color_13 + (texture2D (_EmissionMap, xlv_TEXCOORD0.xy).xyz * _EmissionColor.xyz));
  vec4 xlat_varoutput_18;
  xlat_varoutput_18.xyz = c_1.xyz;
  xlat_varoutput_18.w = 1.0;
  gl_FragData[0] = xlat_varoutput_18;
}


#endif
"
}
SubProgram "d3d9 " {
// Stats: 62 math
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Matrix 4 [_Object2World] 3
Matrix 7 [_World2Object] 3
Matrix 0 [glstate_matrix_mvp]
Vector 22 [_DetailAlbedoMap_ST]
Vector 21 [_MainTex_ST]
Vector 11 [_ProjectionParams]
Vector 12 [_ScreenParams]
Float 23 [_UVSec]
Vector 10 [_WorldSpaceCameraPos]
Vector 20 [unity_ColorSpaceLuminance]
Vector 15 [unity_SHAb]
Vector 14 [unity_SHAg]
Vector 13 [unity_SHAr]
Vector 18 [unity_SHBb]
Vector 17 [unity_SHBg]
Vector 16 [unity_SHBr]
Vector 19 [unity_SHC]
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   row_major float4x4 _Object2World;
//   float4 _ProjectionParams;
//   float4 _ScreenParams;
//   float _UVSec;
//   row_major float4x4 _World2Object;
//   float3 _WorldSpaceCameraPos;
//   row_major float4x4 glstate_matrix_mvp;
//   float4 unity_ColorSpaceLuminance;
//   float4 unity_SHAb;
//   float4 unity_SHAg;
//   float4 unity_SHAr;
//   float4 unity_SHBb;
//   float4 unity_SHBg;
//   float4 unity_SHBr;
//   float4 unity_SHC;
//
//
// Registers:
//
//   Name                      Reg   Size
//   ------------------------- ----- ----
//   glstate_matrix_mvp        c0       4
//   _Object2World             c4       3
//   _World2Object             c7       3
//   _WorldSpaceCameraPos      c10      1
//   _ProjectionParams         c11      1
//   _ScreenParams             c12      1
//   unity_SHAr                c13      1
//   unity_SHAg                c14      1
//   unity_SHAb                c15      1
//   unity_SHBr                c16      1
//   unity_SHBg                c17      1
//   unity_SHBb                c18      1
//   unity_SHC                 c19      1
//   unity_ColorSpaceLuminance c20      1
//   _MainTex_ST               c21      1
//   _DetailAlbedoMap_ST       c22      1
//   _UVSec                    c23      1
//

    vs_2_0
    def c24, 0.5, 1, 0, 0.416666657
    def c25, 1.05499995, -0.0549999997, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    mad oT0.xy, v2, c21, c21.zwzw
    mul r0.x, c23.x, c23.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad oT0.zw, r2.xyxy, c22.xyxy, c22
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add r0.xyz, r0, -c10
    dp3 r0.w, r0, r0
    rsq r0.w, r0.w
    mul oT1.xyz, r0.w, r0
    dp4 r0.y, c1, v0
    mul r1.x, r0.y, c11.x
    mul r1.w, r1.x, c24.x
    dp4 r0.x, c0, v0
    dp4 r0.w, c3, v0
    mul r1.xz, r0.xyww, c24.x
    mad oT6.xy, r1.z, c12.zwzw, r1.xwzw
    mul r1.xyz, v1.y, c8
    mad r1.xyz, c7, v1.x, r1
    mad r1.xyz, c9, v1.z, r1
    nrm r2.xyz, r1
    mul r1.x, r2.y, r2.y
    mad r1.x, r2.x, r2.x, -r1.x
    mul r3, r2.yzzx, r2.xyzz
    dp4 r4.x, c16, r3
    dp4 r4.y, c17, r3
    dp4 r4.z, c18, r3
    mad r1.xyz, c19, r1.x, r4
    mov r2.w, c24.y
    dp4 r3.x, c13, r2
    dp4 r3.y, c14, r2
    dp4 r3.z, c15, r2
    mov oT4.xyz, r2
    add r1.xyz, r1, r3
    max r2.xyz, r1, c24.z
    mov r2.w, c24.w
    lit r3, r2.xxww
    mov r3.x, r3.z
    lit r4, r2.yyww
    lit r2, r2.zzww
    mov r3.z, r2.z
    mov r3.y, r4.z
    mad r2.xyz, r3, c25.x, c25.y
    max r2.xyz, r2, c24.z
    mul r1.w, c20.w, c20.w
    sge r1.w, -r1.w, r1.w
    lrp r3.xyz, r1.w, r2, r1
    max oT5.xyz, r3, c24.z
    dp4 r0.z, c2, v0
    mov oPos, r0
    mov oT6.zw, r0
    mov oT2, c24.z
    mov oT3, c24.z
    mov oT4.w, c24.z
    mov oT5.w, c24.z

// approximately 60 instruction slots used
"
}
SubProgram "d3d11 " {
// Stats: 51 math
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
ConstBuffer "$Globals" 240
Vector 48 [unity_ColorSpaceLuminance]
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
Vector 80 [_ProjectionParams]
ConstBuffer "UnityLighting" 720
Vector 608 [unity_SHAr]
Vector 624 [unity_SHAg]
Vector 640 [unity_SHAb]
Vector 656 [unity_SHBr]
Vector 672 [unity_SHBg]
Vector 688 [unity_SHBb]
Vector 704 [unity_SHC]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer cb0[14], immediateIndexed
      dcl_constantbuffer cb1[6], immediateIndexed
      dcl_constantbuffer cb2[45], immediateIndexed
      dcl_constantbuffer cb3[19], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 5
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   4: mov o0.xyzw, r0.xyzw
   5: eq r1.x, cb0[13].z, l(0.000000)
   6: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
   7: mad o1.zw, r1.xxxy, cb0[11].xxxy, cb0[11].zzzw
   8: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   9: mul r1.xyz, v0.yyyy, cb3[13].xyzx
  10: mad r1.xyz, cb3[12].xyzx, v0.xxxx, r1.xyzx
  11: mad r1.xyz, cb3[14].xyzx, v0.zzzz, r1.xyzx
  12: mad r1.xyz, cb3[15].xyzx, v0.wwww, r1.xyzx
  13: add r1.xyz, r1.xyzx, -cb1[4].xyzx
  14: dp3 r1.w, r1.xyzx, r1.xyzx
  15: rsq r1.w, r1.w
  16: mul o2.xyz, r1.wwww, r1.xyzx
  17: mov o3.xyzw, l(0,0,0,0)
  18: mov o4.xyzw, l(0,0,0,0)
  19: mul r1.x, v1.x, cb3[16].x
  20: mul r1.y, v1.x, cb3[17].x
  21: mul r1.z, v1.x, cb3[18].x
  22: mul r2.x, v1.y, cb3[16].y
  23: mul r2.y, v1.y, cb3[17].y
  24: mul r2.z, v1.y, cb3[18].y
  25: add r1.xyz, r1.xyzx, r2.xyzx
  26: mul r2.x, v1.z, cb3[16].z
  27: mul r2.y, v1.z, cb3[17].z
  28: mul r2.z, v1.z, cb3[18].z
  29: add r1.xyz, r1.xyzx, r2.xyzx
  30: dp3 r1.w, r1.xyzx, r1.xyzx
  31: rsq r1.w, r1.w
  32: mul r1.xyz, r1.wwww, r1.xyzx
  33: mov o5.xyz, r1.xyzx
  34: mov o5.w, l(0)
  35: mul r2.x, r1.y, r1.y
  36: mad r2.x, r1.x, r1.x, -r2.x
  37: mul r3.xyzw, r1.yzzx, r1.xyzz
  38: dp4 r4.x, cb2[41].xyzw, r3.xyzw
  39: dp4 r4.y, cb2[42].xyzw, r3.xyzw
  40: dp4 r4.z, cb2[43].xyzw, r3.xyzw
  41: mad r2.xyz, cb2[44].xyzx, r2.xxxx, r4.xyzx
  42: mov r1.w, l(1.000000)
  43: dp4 r3.x, cb2[38].xyzw, r1.xyzw
  44: dp4 r3.y, cb2[39].xyzw, r1.xyzw
  45: dp4 r3.z, cb2[40].xyzw, r1.xyzw
  46: add r1.xyz, r2.xyzx, r3.xyzx
  47: max r2.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  48: log r2.xyz, r2.xyzx
  49: mul r2.xyz, r2.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  50: exp r2.xyz, r2.xyzx
  51: mad r2.xyz, r2.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  52: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  53: eq r1.w, cb0[3].w, l(0.000000)
  54: movc r1.xyz, r1.wwww, r2.xyzx, r1.xyzx
  55: max o6.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  56: mov o6.w, l(0)
  57: mul r0.y, r0.y, cb1[5].x
  58: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  59: mov o7.zw, r0.zzzw
  60: add o7.xy, r1.zzzz, r1.xwxx
  61: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "d3d11_9x " {
// Stats: 49 math
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
ConstBuffer "$Globals" 240
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
Vector 80 [_ProjectionParams]
ConstBuffer "UnityLighting" 720
Vector 608 [unity_SHAr]
Vector 624 [unity_SHAg]
Vector 640 [unity_SHAb]
Vector 656 [unity_SHBr]
Vector 672 [unity_SHBg]
Vector 688 [unity_SHBb]
Vector 704 [unity_SHC]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c1         cb0            10         2  ( FLT, FLT, FLT, FLT)
// c3         cb0            13         1  ( FLT, FLT, FLT, FLT)
// c4         cb1             4         2  ( FLT, FLT, FLT, FLT)
// c6         cb2            38         7  ( FLT, FLT, FLT, FLT)
// c13        cb3             0         4  ( FLT, FLT, FLT, FLT)
// c17        cb3            12         7  ( FLT, FLT, FLT, FLT)
//
//
// Runtime generated constant mappings:
//
// Target Reg                               Constant Description
// ---------- --------------------------------------------------
// c0                              Vertex Shader position offset
//
//
// Level9 shader bytecode:
//
    vs_2_0
          def c24, 0.5, 1, 0, 0.416666657
          def c25, 1.05499995, -0.0549999997, 0, 0
          dcl_texcoord v0
          dcl_texcoord1 v1
          dcl_texcoord2 v2
          dcl_texcoord3 v3
   0:     mad oT0.xy, v2, c1, c1.zwzw
   1:     mul r0.x, c3.z, c3.z
   2:     sge r0.x, -r0.x, r0.x
   3:     mov r1.xy, v2
   4:     lrp r2.xy, r0.x, r1, v3
   5:     mad oT0.zw, r2.xyxy, c2.xyxy, c2
   6:     mul r0.xyz, v0.y, c18
   7:     mad r0.xyz, c17, v0.x, r0
   8:     mad r0.xyz, c19, v0.z, r0
   9:     mad r0.xyz, c20, v0.w, r0
  10:     add r0.xyz, r0, -c4
  11:     dp3 r0.w, r0, r0
  12:     rsq r0.w, r0.w
  13:     mul oT1.xyz, r0.w, r0
  14:     mul r0, v0.y, c14
  15:     mad r0, c13, v0.x, r0
  16:     mad r0, c15, v0.z, r0
  17:     mad r0, c16, v0.w, r0
  18:     mul r1.x, r0.y, c5.x
  19:     mul r1.w, r1.x, c24.x
  20:     mul r1.xz, r0.xyww, c24.x
  21:     add oT6.xy, r1.z, r1.xwzw
  22:     mul r1.x, v1.x, c21.x
  23:     mul r1.y, v1.x, c22.x
  24:     mul r1.z, v1.x, c23.x
  25:     mul r2.x, v1.y, c21.y
  26:     mul r2.y, v1.y, c22.y
  27:     mul r2.z, v1.y, c23.y
  28:     add r1.xyz, r1, r2
  29:     mul r2.x, v1.z, c21.z
  30:     mul r2.y, v1.z, c22.z
  31:     mul r2.z, v1.z, c23.z
  32:     add r1.xyz, r1, r2
  33:     nrm r2.xyz, r1
  36:     mul r1.x, r2.y, r2.y
  37:     mad r1.x, r2.x, r2.x, -r1.x
  38:     mul r3, r2.yzzx, r2.xyzz
  39:     dp4 r4.x, c9, r3
  40:     dp4 r4.y, c10, r3
  41:     dp4 r4.z, c11, r3
  42:     mad r1.xyz, c12, r1.x, r4
  43:     mov r2.w, c24.y
  44:     dp4 r3.x, c6, r2
  45:     dp4 r3.y, c7, r2
  46:     dp4 r3.z, c8, r2
  47:     mov oT4.xyz, r2
  48:     add r1.xyz, r1, r3
  49:     max r1.xyz, r1, c24.z
  50:     mov r1.w, c24.w
  51:     lit r2, r1.xxww
  52:     mov r2.x, r2.z
  53:     lit r3, r1.yyww
  54:     lit r1, r1.zzww
  55:     mov r2.z, r1.z
  56:     mov r2.y, r3.z
  57:     mad r1.xyz, r2, c25.x, c25.y
  58:     max oT5.xyz, r1, c24.z
  59:     mad oPos.xy, r0.w, c0, r0
  60:     mov oPos.zw, r0
  61:     mov oT6.zw, r0
  62:     mov oT2, c24.z
  63:     mov oT3, c24.z
  64:     mov oT4.w, c24.z
  65:     mov oT5.w, c24.z

// approximately 66 instruction slots used
      vs_4_0
      dcl_constantbuffer cb0[14], immediateIndexed
      dcl_constantbuffer cb1[6], immediateIndexed
      dcl_constantbuffer cb2[45], immediateIndexed
      dcl_constantbuffer cb3[19], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 5
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   4: mov o0.xyzw, r0.xyzw
   5: eq r1.x, cb0[13].z, l(0.000000)
   6: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
   7: mad o1.zw, r1.xxxy, cb0[11].xxxy, cb0[11].zzzw
   8: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   9: mul r1.xyz, v0.yyyy, cb3[13].xyzx
  10: mad r1.xyz, cb3[12].xyzx, v0.xxxx, r1.xyzx
  11: mad r1.xyz, cb3[14].xyzx, v0.zzzz, r1.xyzx
  12: mad r1.xyz, cb3[15].xyzx, v0.wwww, r1.xyzx
  13: add r1.xyz, r1.xyzx, -cb1[4].xyzx
  14: dp3 r1.w, r1.xyzx, r1.xyzx
  15: rsq r1.w, r1.w
  16: mul o2.xyz, r1.wwww, r1.xyzx
  17: mov o3.xyzw, l(0,0,0,0)
  18: mov o4.xyzw, l(0,0,0,0)
  19: mul r1.x, v1.x, cb3[16].x
  20: mul r1.y, v1.x, cb3[17].x
  21: mul r1.z, v1.x, cb3[18].x
  22: mul r2.x, v1.y, cb3[16].y
  23: mul r2.y, v1.y, cb3[17].y
  24: mul r2.z, v1.y, cb3[18].y
  25: add r1.xyz, r1.xyzx, r2.xyzx
  26: mul r2.x, v1.z, cb3[16].z
  27: mul r2.y, v1.z, cb3[17].z
  28: mul r2.z, v1.z, cb3[18].z
  29: add r1.xyz, r1.xyzx, r2.xyzx
  30: dp3 r1.w, r1.xyzx, r1.xyzx
  31: rsq r1.w, r1.w
  32: mul r1.xyz, r1.wwww, r1.xyzx
  33: mov o5.xyz, r1.xyzx
  34: mov o5.w, l(0)
  35: mul r2.x, r1.y, r1.y
  36: mad r2.x, r1.x, r1.x, -r2.x
  37: mul r3.xyzw, r1.yzzx, r1.xyzz
  38: dp4 r4.x, cb2[41].xyzw, r3.xyzw
  39: dp4 r4.y, cb2[42].xyzw, r3.xyzw
  40: dp4 r4.z, cb2[43].xyzw, r3.xyzw
  41: mad r2.xyz, cb2[44].xyzx, r2.xxxx, r4.xyzx
  42: mov r1.w, l(1.000000)
  43: dp4 r3.x, cb2[38].xyzw, r1.xyzw
  44: dp4 r3.y, cb2[39].xyzw, r1.xyzw
  45: dp4 r3.z, cb2[40].xyzw, r1.xyzw
  46: add r1.xyz, r2.xyzx, r3.xyzx
  47: max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  48: log r1.xyz, r1.xyzx
  49: mul r1.xyz, r1.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  50: exp r1.xyz, r1.xyzx
  51: mad r1.xyz, r1.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  52: max o6.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  53: mov o6.w, l(0)
  54: mul r0.y, r0.y, cb1[5].x
  55: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  56: mov o7.zw, r0.zzzw
  57: add o7.xy, r1.zzzz, r1.xwxx
  58: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
// Stats: 51 math, 5 textures
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "VERTEXLIGHT_ON" }
"#version 120

#ifdef VERTEX
uniform vec3 _WorldSpaceCameraPos;
uniform vec4 unity_4LightPosX0;
uniform vec4 unity_4LightPosY0;
uniform vec4 unity_4LightPosZ0;
uniform vec4 unity_4LightAtten0;
uniform vec4 unity_LightColor[8];
uniform vec4 unity_SHAr;
uniform vec4 unity_SHAg;
uniform vec4 unity_SHAb;
uniform vec4 unity_SHBr;
uniform vec4 unity_SHBg;
uniform vec4 unity_SHBb;
uniform vec4 unity_SHC;

uniform mat4 _Object2World;
uniform mat4 _World2Object;
uniform vec4 unity_ColorSpaceLuminance;
uniform vec4 _MainTex_ST;
uniform vec4 _DetailAlbedoMap_ST;
uniform float _UVSec;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
void main ()
{
  vec2 tmpvar_1;
  tmpvar_1 = gl_MultiTexCoord0.xy;
  vec2 tmpvar_2;
  tmpvar_2 = gl_MultiTexCoord1.xy;
  vec4 tmpvar_3;
  vec4 tmpvar_4;
  vec4 tmpvar_5;
  vec4 tmpvar_6;
  vec4 tmpvar_7;
  tmpvar_7 = (_Object2World * gl_Vertex);
  tmpvar_3 = (gl_ModelViewProjectionMatrix * gl_Vertex);
  vec4 texcoord_8;
  texcoord_8.xy = ((gl_MultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  vec2 tmpvar_9;
  if ((_UVSec == 0.0)) {
    tmpvar_9 = tmpvar_1;
  } else {
    tmpvar_9 = tmpvar_2;
  };
  texcoord_8.zw = ((tmpvar_9 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  vec3 tmpvar_10;
  tmpvar_10 = normalize((tmpvar_7.xyz - _WorldSpaceCameraPos));
  vec4 v_11;
  v_11.x = _World2Object[0].x;
  v_11.y = _World2Object[1].x;
  v_11.z = _World2Object[2].x;
  v_11.w = _World2Object[3].x;
  vec4 v_12;
  v_12.x = _World2Object[0].y;
  v_12.y = _World2Object[1].y;
  v_12.z = _World2Object[2].y;
  v_12.w = _World2Object[3].y;
  vec4 v_13;
  v_13.x = _World2Object[0].z;
  v_13.y = _World2Object[1].z;
  v_13.z = _World2Object[2].z;
  v_13.w = _World2Object[3].z;
  vec3 tmpvar_14;
  tmpvar_14 = normalize(((
    (v_11.xyz * gl_Normal.x)
   + 
    (v_12.xyz * gl_Normal.y)
  ) + (v_13.xyz * gl_Normal.z)));
  tmpvar_4.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_5.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_6.xyz = tmpvar_14;
  vec4 ambientOrLightmapUV_15;
  ambientOrLightmapUV_15.w = 0.0;
  vec3 col_16;
  vec4 ndotl_17;
  vec4 lengthSq_18;
  vec4 tmpvar_19;
  tmpvar_19 = (unity_4LightPosX0 - tmpvar_7.x);
  vec4 tmpvar_20;
  tmpvar_20 = (unity_4LightPosY0 - tmpvar_7.y);
  vec4 tmpvar_21;
  tmpvar_21 = (unity_4LightPosZ0 - tmpvar_7.z);
  lengthSq_18 = (tmpvar_19 * tmpvar_19);
  lengthSq_18 = (lengthSq_18 + (tmpvar_20 * tmpvar_20));
  lengthSq_18 = (lengthSq_18 + (tmpvar_21 * tmpvar_21));
  ndotl_17 = (tmpvar_19 * tmpvar_14.x);
  ndotl_17 = (ndotl_17 + (tmpvar_20 * tmpvar_14.y));
  ndotl_17 = (ndotl_17 + (tmpvar_21 * tmpvar_14.z));
  vec4 tmpvar_22;
  tmpvar_22 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_17 * inversesqrt(lengthSq_18)));
  ndotl_17 = tmpvar_22;
  vec4 tmpvar_23;
  tmpvar_23 = (tmpvar_22 * (1.0/((1.0 + 
    (lengthSq_18 * unity_4LightAtten0)
  ))));
  col_16 = (unity_LightColor[0].xyz * tmpvar_23.x);
  col_16 = (col_16 + (unity_LightColor[1].xyz * tmpvar_23.y));
  col_16 = (col_16 + (unity_LightColor[2].xyz * tmpvar_23.z));
  col_16 = (col_16 + (unity_LightColor[3].xyz * tmpvar_23.w));
  ambientOrLightmapUV_15.xyz = col_16;
  vec3 ambient_24;
  ambient_24 = ambientOrLightmapUV_15.xyz;
  vec4 tmpvar_25;
  tmpvar_25.w = 1.0;
  tmpvar_25.xyz = tmpvar_14;
  vec3 res_26;
  vec3 x_27;
  x_27.x = dot (unity_SHAr, tmpvar_25);
  x_27.y = dot (unity_SHAg, tmpvar_25);
  x_27.z = dot (unity_SHAb, tmpvar_25);
  vec3 x1_28;
  vec4 tmpvar_29;
  tmpvar_29 = (tmpvar_14.xyzz * tmpvar_14.yzzx);
  x1_28.x = dot (unity_SHBr, tmpvar_29);
  x1_28.y = dot (unity_SHBg, tmpvar_29);
  x1_28.z = dot (unity_SHBb, tmpvar_29);
  res_26 = (x_27 + (x1_28 + (unity_SHC.xyz * 
    ((tmpvar_14.x * tmpvar_14.x) - (tmpvar_14.y * tmpvar_14.y))
  )));
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    res_26 = max (((1.055 * 
      pow (max (res_26, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
    ) - 0.055), vec3(0.0, 0.0, 0.0));
  };
  ambient_24 = (col_16 + max (vec3(0.0, 0.0, 0.0), res_26));
  ambientOrLightmapUV_15.xyz = ambient_24;
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = texcoord_8;
  xlv_TEXCOORD1 = tmpvar_10;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  xlv_TEXCOORD5 = ambientOrLightmapUV_15;
}


#endif
#ifdef FRAGMENT
uniform vec4 _WorldSpaceLightPos0;
uniform samplerCube unity_SpecCube0;
uniform vec4 unity_SpecCube0_HDR;
uniform vec4 unity_ColorSpaceDielectricSpec;
uniform vec4 _LightColor0;
uniform sampler2D unity_NHxRoughness;
uniform vec4 _Color;
uniform sampler2D _MainTex;
uniform float _Metallic;
uniform float _Glossiness;
uniform sampler2D _OcclusionMap;
uniform vec4 _EmissionColor;
uniform sampler2D _EmissionMap;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
void main ()
{
  vec4 c_1;
  vec3 tmpvar_2;
  tmpvar_2 = (_Color.xyz * texture2D (_MainTex, xlv_TEXCOORD0.xy).xyz);
  vec3 tmpvar_3;
  vec3 tmpvar_4;
  tmpvar_4 = mix (unity_ColorSpaceDielectricSpec.xyz, tmpvar_2, vec3(_Metallic));
  float tmpvar_5;
  tmpvar_5 = (unity_ColorSpaceDielectricSpec.w - (_Metallic * unity_ColorSpaceDielectricSpec.w));
  tmpvar_3 = (tmpvar_2 * tmpvar_5);
  vec3 tmpvar_6;
  tmpvar_6 = normalize(xlv_TEXCOORD2_2.xyz);
  float tmpvar_7;
  tmpvar_7 = texture2D (_OcclusionMap, xlv_TEXCOORD0.xy).y;
  vec3 tmpvar_8;
  float tmpvar_9;
  tmpvar_9 = (1.0 - _Glossiness);
  tmpvar_8 = (xlv_TEXCOORD1 - (2.0 * (
    dot (tmpvar_6, xlv_TEXCOORD1)
   * tmpvar_6)));
  vec4 tmpvar_10;
  tmpvar_10.xyz = tmpvar_8;
  tmpvar_10.w = ((tmpvar_9 * (1.7 - 
    (0.7 * tmpvar_9)
  )) * 6.0);
  vec4 tmpvar_11;
  tmpvar_11 = textureCube (unity_SpecCube0, tmpvar_8, tmpvar_10.w);
  vec3 viewDir_12;
  viewDir_12 = -(xlv_TEXCOORD1);
  vec3 color_13;
  vec2 tmpvar_14;
  tmpvar_14.x = dot ((viewDir_12 - (2.0 * 
    (dot (tmpvar_6, viewDir_12) * tmpvar_6)
  )), _WorldSpaceLightPos0.xyz);
  tmpvar_14.y = (1.0 - clamp (dot (tmpvar_6, viewDir_12), 0.0, 1.0));
  vec2 tmpvar_15;
  tmpvar_15 = ((tmpvar_14 * tmpvar_14) * (tmpvar_14 * tmpvar_14));
  vec2 tmpvar_16;
  tmpvar_16.x = tmpvar_15.x;
  tmpvar_16.y = tmpvar_9;
  color_13 = ((tmpvar_3 + (
    (texture2D (unity_NHxRoughness, tmpvar_16).w * 16.0)
   * tmpvar_4)) * (_LightColor0.xyz * clamp (
    dot (tmpvar_6, _WorldSpaceLightPos0.xyz)
  , 0.0, 1.0)));
  color_13 = (color_13 + ((
    (xlv_TEXCOORD5.xyz * tmpvar_7)
   * tmpvar_3) + (
    (((unity_SpecCube0_HDR.x * pow (tmpvar_11.w, unity_SpecCube0_HDR.y)) * tmpvar_11.xyz) * tmpvar_7)
   * 
    mix (tmpvar_4, vec3(clamp ((_Glossiness + (1.0 - tmpvar_5)), 0.0, 1.0)), tmpvar_15.yyy)
  )));
  vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = color_13;
  c_1.w = tmpvar_17.w;
  c_1.xyz = (color_13 + (texture2D (_EmissionMap, xlv_TEXCOORD0.xy).xyz * _EmissionColor.xyz));
  vec4 xlat_varoutput_18;
  xlat_varoutput_18.xyz = c_1.xyz;
  xlat_varoutput_18.w = 1.0;
  gl_FragData[0] = xlat_varoutput_18;
}


#endif
"
}
SubProgram "d3d9 " {
// Stats: 83 math
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "VERTEXLIGHT_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Matrix 8 [_Object2World] 3
Matrix 11 [_World2Object] 3
Matrix 4 [glstate_matrix_mvp]
Vector 28 [_DetailAlbedoMap_ST]
Vector 27 [_MainTex_ST]
Float 29 [_UVSec]
Vector 14 [_WorldSpaceCameraPos]
Vector 18 [unity_4LightAtten0]
Vector 15 [unity_4LightPosX0]
Vector 16 [unity_4LightPosY0]
Vector 17 [unity_4LightPosZ0]
Vector 26 [unity_ColorSpaceLuminance]
Vector 0 [unity_LightColor0]
Vector 1 [unity_LightColor1]
Vector 2 [unity_LightColor2]
Vector 3 [unity_LightColor3]
Vector 21 [unity_SHAb]
Vector 20 [unity_SHAg]
Vector 19 [unity_SHAr]
Vector 24 [unity_SHBb]
Vector 23 [unity_SHBg]
Vector 22 [unity_SHBr]
Vector 25 [unity_SHC]
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   row_major float4x4 _Object2World;
//   float _UVSec;
//   row_major float4x4 _World2Object;
//   float3 _WorldSpaceCameraPos;
//   row_major float4x4 glstate_matrix_mvp;
//   float4 unity_4LightAtten0;
//   float4 unity_4LightPosX0;
//   float4 unity_4LightPosY0;
//   float4 unity_4LightPosZ0;
//   float4 unity_ColorSpaceLuminance;
//   float4 unity_LightColor[8];
//   float4 unity_SHAb;
//   float4 unity_SHAg;
//   float4 unity_SHAr;
//   float4 unity_SHBb;
//   float4 unity_SHBg;
//   float4 unity_SHBr;
//   float4 unity_SHC;
//
//
// Registers:
//
//   Name                      Reg   Size
//   ------------------------- ----- ----
//   unity_LightColor          c0       4
//   glstate_matrix_mvp        c4       4
//   _Object2World             c8       3
//   _World2Object             c11      3
//   _WorldSpaceCameraPos      c14      1
//   unity_4LightPosX0         c15      1
//   unity_4LightPosY0         c16      1
//   unity_4LightPosZ0         c17      1
//   unity_4LightAtten0        c18      1
//   unity_SHAr                c19      1
//   unity_SHAg                c20      1
//   unity_SHAb                c21      1
//   unity_SHBr                c22      1
//   unity_SHBg                c23      1
//   unity_SHBb                c24      1
//   unity_SHC                 c25      1
//   unity_ColorSpaceLuminance c26      1
//   _MainTex_ST               c27      1
//   _DetailAlbedoMap_ST       c28      1
//   _UVSec                    c29      1
//

    vs_2_0
    def c30, 0, 1, 0.416666657, 0
    def c31, 1.05499995, -0.0549999997, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dp4 oPos.x, c4, v0
    dp4 oPos.y, c5, v0
    dp4 oPos.z, c6, v0
    dp4 oPos.w, c7, v0
    mad oT0.xy, v2, c27, c27.zwzw
    mul r0.x, c29.x, c29.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad oT0.zw, r2.xyxy, c28.xyxy, c28
    dp4 r0.x, c8, v0
    dp4 r0.y, c9, v0
    dp4 r0.z, c10, v0
    add r1.xyz, r0, -c14
    add r2, -r0.x, c15
    add r3, -r0.y, c16
    add r0, -r0.z, c17
    dp3 r1.w, r1, r1
    rsq r1.w, r1.w
    mul oT1.xyz, r1.w, r1
    mul r1, r3, r3
    mad r1, r2, r2, r1
    mad r1, r0, r0, r1
    rsq r4.x, r1.x
    rsq r4.y, r1.y
    rsq r4.z, r1.z
    rsq r4.w, r1.w
    mov r5.y, c30.y
    mad r1, r1, c18, r5.y
    mul r5.xyz, v1.y, c12
    mad r5.xyz, c11, v1.x, r5
    mad r5.xyz, c13, v1.z, r5
    nrm r6.xyz, r5
    mul r3, r3, r6.y
    mad r2, r2, r6.x, r3
    mad r0, r0, r6.z, r2
    mul r0, r4, r0
    max r0, r0, c30.x
    rcp r2.x, r1.x
    rcp r2.y, r1.y
    rcp r2.z, r1.z
    rcp r2.w, r1.w
    mul r0, r0, r2
    mul r1.xyz, r0.y, c1
    mad r1.xyz, c0, r0.x, r1
    mad r0.xyz, c2, r0.z, r1
    mad r0.xyz, c3, r0.w, r0
    mul r0.w, r6.y, r6.y
    mad r0.w, r6.x, r6.x, -r0.w
    mul r1, r6.yzzx, r6.xyzz
    dp4 r2.x, c22, r1
    dp4 r2.y, c23, r1
    dp4 r2.z, c24, r1
    mad r1.xyz, c25, r0.w, r2
    mov r6.w, c30.y
    dp4 r2.x, c19, r6
    dp4 r2.y, c20, r6
    dp4 r2.z, c21, r6
    mov oT4.xyz, r6
    add r1.xyz, r1, r2
    max r2.xyz, r1, c30.x
    mov r2.w, c30.z
    lit r3, r2.xxww
    mov r3.x, r3.z
    lit r4, r2.yyww
    lit r2, r2.zzww
    mov r3.z, r2.z
    mov r3.y, r4.z
    mad r2.xyz, r3, c31.x, c31.y
    max r2.xyz, r2, c30.x
    mul r0.w, c26.w, c26.w
    sge r0.w, -r0.w, r0.w
    lrp r3.xyz, r0.w, r2, r1
    max r1.xyz, r3, c30.x
    add oT5.xyz, r0, r1
    mov oT2, c30.x
    mov oT3, c30.x
    mov oT4.w, c30.x
    mov oT5.w, c30.x

// approximately 81 instruction slots used
"
}
SubProgram "d3d11 " {
// Stats: 68 math
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "VERTEXLIGHT_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
ConstBuffer "$Globals" 240
Vector 48 [unity_ColorSpaceLuminance]
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 32 [unity_4LightPosX0]
Vector 48 [unity_4LightPosY0]
Vector 64 [unity_4LightPosZ0]
Vector 80 [unity_4LightAtten0]
Vector 96 [unity_LightColor0]
Vector 112 [unity_LightColor1]
Vector 128 [unity_LightColor2]
Vector 144 [unity_LightColor3]
Vector 160 [unity_LightColor4]
Vector 176 [unity_LightColor5]
Vector 192 [unity_LightColor6]
Vector 208 [unity_LightColor7]
Vector 608 [unity_SHAr]
Vector 624 [unity_SHAg]
Vector 640 [unity_SHAb]
Vector 656 [unity_SHBr]
Vector 672 [unity_SHBg]
Vector 688 [unity_SHBb]
Vector 704 [unity_SHC]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer cb0[14], immediateIndexed
      dcl_constantbuffer cb1[5], immediateIndexed
      dcl_constantbuffer cb2[45], immediateIndexed
      dcl_constantbuffer cb3[19], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 6
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: mad o0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   4: eq r0.x, cb0[13].z, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[11].xxxy, cb0[11].zzzw
   7: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: rsq r0.w, r0.w
  15: mul o2.xyz, r0.wwww, r1.xyzx
  16: mov o3.xyzw, l(0,0,0,0)
  17: mov o4.xyzw, l(0,0,0,0)
  18: mov o5.w, l(0)
  19: mul r1.x, v1.x, cb3[16].x
  20: mul r1.y, v1.x, cb3[17].x
  21: mul r1.z, v1.x, cb3[18].x
  22: mul r2.x, v1.y, cb3[16].y
  23: mul r2.y, v1.y, cb3[17].y
  24: mul r2.z, v1.y, cb3[18].y
  25: add r1.xyz, r1.xyzx, r2.xyzx
  26: mul r2.x, v1.z, cb3[16].z
  27: mul r2.y, v1.z, cb3[17].z
  28: mul r2.z, v1.z, cb3[18].z
  29: add r1.xyz, r1.xyzx, r2.xyzx
  30: dp3 r0.w, r1.xyzx, r1.xyzx
  31: rsq r0.w, r0.w
  32: mul r1.xyz, r0.wwww, r1.xyzx
  33: mov o5.xyz, r1.xyzx
  34: mul r0.w, r1.y, r1.y
  35: mad r0.w, r1.x, r1.x, -r0.w
  36: mul r2.xyzw, r1.yzzx, r1.xyzz
  37: dp4 r3.x, cb2[41].xyzw, r2.xyzw
  38: dp4 r3.y, cb2[42].xyzw, r2.xyzw
  39: dp4 r3.z, cb2[43].xyzw, r2.xyzw
  40: mad r2.xyz, cb2[44].xyzx, r0.wwww, r3.xyzx
  41: mov r1.w, l(1.000000)
  42: dp4 r3.x, cb2[38].xyzw, r1.xyzw
  43: dp4 r3.y, cb2[39].xyzw, r1.xyzw
  44: dp4 r3.z, cb2[40].xyzw, r1.xyzw
  45: add r2.xyz, r2.xyzx, r3.xyzx
  46: max r3.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  47: log r3.xyz, r3.xyzx
  48: mul r3.xyz, r3.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  49: exp r3.xyz, r3.xyzx
  50: mad r3.xyz, r3.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  51: max r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  52: eq r0.w, cb0[3].w, l(0.000000)
  53: movc r2.xyz, r0.wwww, r3.xyzx, r2.xyzx
  54: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  55: add r3.xyzw, -r0.yyyy, cb2[3].xyzw
  56: mul r4.xyzw, r1.yyyy, r3.xyzw
  57: mul r3.xyzw, r3.xyzw, r3.xyzw
  58: add r5.xyzw, -r0.xxxx, cb2[2].xyzw
  59: add r0.xyzw, -r0.zzzz, cb2[4].xyzw
  60: mad r4.xyzw, r5.xyzw, r1.xxxx, r4.xyzw
  61: mad r1.xyzw, r0.xyzw, r1.zzzz, r4.xyzw
  62: mad r3.xyzw, r5.xyzw, r5.xyzw, r3.xyzw
  63: mad r0.xyzw, r0.xyzw, r0.xyzw, r3.xyzw
  64: rsq r3.xyzw, r0.xyzw
  65: mad r0.xyzw, r0.xyzw, cb2[5].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  66: div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
  67: mul r1.xyzw, r1.xyzw, r3.xyzw
  68: max r1.xyzw, r1.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  69: mul r0.xyzw, r0.xyzw, r1.xyzw
  70: mul r1.xyz, r0.yyyy, cb2[7].xyzx
  71: mad r1.xyz, cb2[6].xyzx, r0.xxxx, r1.xyzx
  72: mad r0.xyz, cb2[8].xyzx, r0.zzzz, r1.xyzx
  73: mad r0.xyz, cb2[9].xyzx, r0.wwww, r0.xyzx
  74: add o6.xyz, r2.xyzx, r0.xyzx
  75: mov o6.w, l(0)
  76: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "d3d11_9x " {
// Stats: 66 math
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "VERTEXLIGHT_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
ConstBuffer "$Globals" 240
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 32 [unity_4LightPosX0]
Vector 48 [unity_4LightPosY0]
Vector 64 [unity_4LightPosZ0]
Vector 80 [unity_4LightAtten0]
Vector 96 [unity_LightColor0]
Vector 112 [unity_LightColor1]
Vector 128 [unity_LightColor2]
Vector 144 [unity_LightColor3]
Vector 160 [unity_LightColor4]
Vector 176 [unity_LightColor5]
Vector 192 [unity_LightColor6]
Vector 208 [unity_LightColor7]
Vector 608 [unity_SHAr]
Vector 624 [unity_SHAg]
Vector 640 [unity_SHAb]
Vector 656 [unity_SHBr]
Vector 672 [unity_SHBg]
Vector 688 [unity_SHBb]
Vector 704 [unity_SHC]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c1         cb0            10         2  ( FLT, FLT, FLT, FLT)
// c3         cb0            13         1  ( FLT, FLT, FLT, FLT)
// c4         cb1             4         1  ( FLT, FLT, FLT, FLT)
// c5         cb2             2         8  ( FLT, FLT, FLT, FLT)
// c13        cb2            38         7  ( FLT, FLT, FLT, FLT)
// c20        cb3             0         4  ( FLT, FLT, FLT, FLT)
// c24        cb3            12         7  ( FLT, FLT, FLT, FLT)
//
//
// Runtime generated constant mappings:
//
// Target Reg                               Constant Description
// ---------- --------------------------------------------------
// c0                              Vertex Shader position offset
//
//
// Level9 shader bytecode:
//
    vs_2_0
          def c31, 0, 1, 0.416666657, 0
          def c32, 1.05499995, -0.0549999997, 0, 0
          dcl_texcoord v0
          dcl_texcoord1 v1
          dcl_texcoord2 v2
          dcl_texcoord3 v3
   0:     mad oT0.xy, v2, c1, c1.zwzw
   1:     mul r0.x, c3.z, c3.z
   2:     sge r0.x, -r0.x, r0.x
   3:     mov r1.xy, v2
   4:     lrp r2.xy, r0.x, r1, v3
   5:     mad oT0.zw, r2.xyxy, c2.xyxy, c2
   6:     mul r0.xyz, v0.y, c25
   7:     mad r0.xyz, c24, v0.x, r0
   8:     mad r0.xyz, c26, v0.z, r0
   9:     mad r0.xyz, c27, v0.w, r0
  10:     add r1.xyz, r0, -c4
  11:     dp3 r0.w, r1, r1
  12:     rsq r0.w, r0.w
  13:     mul oT1.xyz, r0.w, r1
  14:     add r1, -r0.x, c5
  15:     add r2, -r0.y, c6
  16:     add r0, -r0.z, c7
  17:     mul r3.x, v1.x, c28.x
  18:     mul r3.y, v1.x, c29.x
  19:     mul r3.z, v1.x, c30.x
  20:     mul r4.x, v1.y, c28.y
  21:     mul r4.y, v1.y, c29.y
  22:     mul r4.z, v1.y, c30.y
  23:     add r3.xyz, r3, r4
  24:     mul r4.x, v1.z, c28.z
  25:     mul r4.y, v1.z, c29.z
  26:     mul r4.z, v1.z, c30.z
  27:     add r3.xyz, r3, r4
  28:     nrm r4.xyz, r3
  31:     mul r3, r2, r4.y
  32:     mul r2, r2, r2
  33:     mad r2, r1, r1, r2
  34:     mad r1, r1, r4.x, r3
  35:     mad r1, r0, r4.z, r1
  36:     mad r0, r0, r0, r2
  37:     rsq r2.x, r0.x
  38:     rsq r2.y, r0.y
  39:     rsq r2.z, r0.z
  40:     rsq r2.w, r0.w
  41:     mov r3.y, c31.y
  42:     mad r0, r0, c8, r3.y
  43:     mul r1, r1, r2
  44:     max r1, r1, c31.x
  45:     rcp r2.x, r0.x
  46:     rcp r2.y, r0.y
  47:     rcp r2.z, r0.z
  48:     rcp r2.w, r0.w
  49:     mul r0, r1, r2
  50:     mul r1.xyz, r0.y, c10
  51:     mad r1.xyz, c9, r0.x, r1
  52:     mad r0.xyz, c11, r0.z, r1
  53:     mad r0.xyz, c12, r0.w, r0
  54:     mul r0.w, r4.y, r4.y
  55:     mad r0.w, r4.x, r4.x, -r0.w
  56:     mul r1, r4.yzzx, r4.xyzz
  57:     dp4 r2.x, c16, r1
  58:     dp4 r2.y, c17, r1
  59:     dp4 r2.z, c18, r1
  60:     mad r1.xyz, c19, r0.w, r2
  61:     mov r4.w, c31.y
  62:     dp4 r2.x, c13, r4
  63:     dp4 r2.y, c14, r4
  64:     dp4 r2.z, c15, r4
  65:     mov oT4.xyz, r4
  66:     add r1.xyz, r1, r2
  67:     max r1.xyz, r1, c31.x
  68:     mov r1.w, c31.z
  69:     lit r2, r1.xxww
  70:     mov r2.x, r2.z
  71:     lit r3, r1.yyww
  72:     lit r1, r1.zzww
  73:     mov r2.z, r1.z
  74:     mov r2.y, r3.z
  75:     mad r1.xyz, r2, c32.x, c32.y
  76:     max r1.xyz, r1, c31.x
  77:     add oT5.xyz, r0, r1
  78:     mul r0, v0.y, c21
  79:     mad r0, c20, v0.x, r0
  80:     mad r0, c22, v0.z, r0
  81:     mad r0, c23, v0.w, r0
  82:     mad oPos.xy, r0.w, c0, r0
  83:     mov oPos.zw, r0
  84:     mov oT2, c31.x
  85:     mov oT3, c31.x
  86:     mov oT4.w, c31.x
  87:     mov oT5.w, c31.x

// approximately 88 instruction slots used
      vs_4_0
      dcl_constantbuffer cb0[14], immediateIndexed
      dcl_constantbuffer cb1[5], immediateIndexed
      dcl_constantbuffer cb2[45], immediateIndexed
      dcl_constantbuffer cb3[19], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 6
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: mad o0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   4: eq r0.x, cb0[13].z, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[11].xxxy, cb0[11].zzzw
   7: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: rsq r0.w, r0.w
  15: mul o2.xyz, r0.wwww, r1.xyzx
  16: mov o3.xyzw, l(0,0,0,0)
  17: mov o4.xyzw, l(0,0,0,0)
  18: mov o5.w, l(0)
  19: mul r1.x, v1.x, cb3[16].x
  20: mul r1.y, v1.x, cb3[17].x
  21: mul r1.z, v1.x, cb3[18].x
  22: mul r2.x, v1.y, cb3[16].y
  23: mul r2.y, v1.y, cb3[17].y
  24: mul r2.z, v1.y, cb3[18].y
  25: add r1.xyz, r1.xyzx, r2.xyzx
  26: mul r2.x, v1.z, cb3[16].z
  27: mul r2.y, v1.z, cb3[17].z
  28: mul r2.z, v1.z, cb3[18].z
  29: add r1.xyz, r1.xyzx, r2.xyzx
  30: dp3 r0.w, r1.xyzx, r1.xyzx
  31: rsq r0.w, r0.w
  32: mul r1.xyz, r0.wwww, r1.xyzx
  33: mov o5.xyz, r1.xyzx
  34: mul r0.w, r1.y, r1.y
  35: mad r0.w, r1.x, r1.x, -r0.w
  36: mul r2.xyzw, r1.yzzx, r1.xyzz
  37: dp4 r3.x, cb2[41].xyzw, r2.xyzw
  38: dp4 r3.y, cb2[42].xyzw, r2.xyzw
  39: dp4 r3.z, cb2[43].xyzw, r2.xyzw
  40: mad r2.xyz, cb2[44].xyzx, r0.wwww, r3.xyzx
  41: mov r1.w, l(1.000000)
  42: dp4 r3.x, cb2[38].xyzw, r1.xyzw
  43: dp4 r3.y, cb2[39].xyzw, r1.xyzw
  44: dp4 r3.z, cb2[40].xyzw, r1.xyzw
  45: add r2.xyz, r2.xyzx, r3.xyzx
  46: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  47: log r2.xyz, r2.xyzx
  48: mul r2.xyz, r2.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  49: exp r2.xyz, r2.xyzx
  50: mad r2.xyz, r2.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  51: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  52: add r3.xyzw, -r0.yyyy, cb2[3].xyzw
  53: mul r4.xyzw, r1.yyyy, r3.xyzw
  54: mul r3.xyzw, r3.xyzw, r3.xyzw
  55: add r5.xyzw, -r0.xxxx, cb2[2].xyzw
  56: add r0.xyzw, -r0.zzzz, cb2[4].xyzw
  57: mad r4.xyzw, r5.xyzw, r1.xxxx, r4.xyzw
  58: mad r1.xyzw, r0.xyzw, r1.zzzz, r4.xyzw
  59: mad r3.xyzw, r5.xyzw, r5.xyzw, r3.xyzw
  60: mad r0.xyzw, r0.xyzw, r0.xyzw, r3.xyzw
  61: rsq r3.xyzw, r0.xyzw
  62: mad r0.xyzw, r0.xyzw, cb2[5].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  63: div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
  64: mul r1.xyzw, r1.xyzw, r3.xyzw
  65: max r1.xyzw, r1.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  66: mul r0.xyzw, r0.xyzw, r1.xyzw
  67: mul r1.xyz, r0.yyyy, cb2[7].xyzx
  68: mad r1.xyz, cb2[6].xyzx, r0.xxxx, r1.xyzx
  69: mad r0.xyz, cb2[8].xyzx, r0.zzzz, r1.xyzx
  70: mad r0.xyz, cb2[9].xyzx, r0.wwww, r0.xyzx
  71: add o6.xyz, r2.xyzx, r0.xyzx
  72: mov o6.w, l(0)
  73: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
// Stats: 52 math, 6 textures
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "VERTEXLIGHT_ON" }
"#version 120

#ifdef VERTEX
uniform vec3 _WorldSpaceCameraPos;
uniform vec4 _ProjectionParams;
uniform vec4 unity_4LightPosX0;
uniform vec4 unity_4LightPosY0;
uniform vec4 unity_4LightPosZ0;
uniform vec4 unity_4LightAtten0;
uniform vec4 unity_LightColor[8];
uniform vec4 unity_SHAr;
uniform vec4 unity_SHAg;
uniform vec4 unity_SHAb;
uniform vec4 unity_SHBr;
uniform vec4 unity_SHBg;
uniform vec4 unity_SHBb;
uniform vec4 unity_SHC;

uniform mat4 _Object2World;
uniform mat4 _World2Object;
uniform vec4 unity_ColorSpaceLuminance;
uniform vec4 _MainTex_ST;
uniform vec4 _DetailAlbedoMap_ST;
uniform float _UVSec;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
varying vec4 xlv_TEXCOORD6;
void main ()
{
  vec2 tmpvar_1;
  tmpvar_1 = gl_MultiTexCoord0.xy;
  vec2 tmpvar_2;
  tmpvar_2 = gl_MultiTexCoord1.xy;
  vec4 tmpvar_3;
  vec4 tmpvar_4;
  vec4 tmpvar_5;
  vec4 tmpvar_6;
  vec4 tmpvar_7;
  tmpvar_7 = (_Object2World * gl_Vertex);
  tmpvar_3 = (gl_ModelViewProjectionMatrix * gl_Vertex);
  vec4 texcoord_8;
  texcoord_8.xy = ((gl_MultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  vec2 tmpvar_9;
  if ((_UVSec == 0.0)) {
    tmpvar_9 = tmpvar_1;
  } else {
    tmpvar_9 = tmpvar_2;
  };
  texcoord_8.zw = ((tmpvar_9 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  vec3 tmpvar_10;
  tmpvar_10 = normalize((tmpvar_7.xyz - _WorldSpaceCameraPos));
  vec4 v_11;
  v_11.x = _World2Object[0].x;
  v_11.y = _World2Object[1].x;
  v_11.z = _World2Object[2].x;
  v_11.w = _World2Object[3].x;
  vec4 v_12;
  v_12.x = _World2Object[0].y;
  v_12.y = _World2Object[1].y;
  v_12.z = _World2Object[2].y;
  v_12.w = _World2Object[3].y;
  vec4 v_13;
  v_13.x = _World2Object[0].z;
  v_13.y = _World2Object[1].z;
  v_13.z = _World2Object[2].z;
  v_13.w = _World2Object[3].z;
  vec3 tmpvar_14;
  tmpvar_14 = normalize(((
    (v_11.xyz * gl_Normal.x)
   + 
    (v_12.xyz * gl_Normal.y)
  ) + (v_13.xyz * gl_Normal.z)));
  tmpvar_4.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_5.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_6.xyz = tmpvar_14;
  vec4 o_15;
  vec4 tmpvar_16;
  tmpvar_16 = (tmpvar_3 * 0.5);
  vec2 tmpvar_17;
  tmpvar_17.x = tmpvar_16.x;
  tmpvar_17.y = (tmpvar_16.y * _ProjectionParams.x);
  o_15.xy = (tmpvar_17 + tmpvar_16.w);
  o_15.zw = tmpvar_3.zw;
  vec4 ambientOrLightmapUV_18;
  ambientOrLightmapUV_18.w = 0.0;
  vec3 col_19;
  vec4 ndotl_20;
  vec4 lengthSq_21;
  vec4 tmpvar_22;
  tmpvar_22 = (unity_4LightPosX0 - tmpvar_7.x);
  vec4 tmpvar_23;
  tmpvar_23 = (unity_4LightPosY0 - tmpvar_7.y);
  vec4 tmpvar_24;
  tmpvar_24 = (unity_4LightPosZ0 - tmpvar_7.z);
  lengthSq_21 = (tmpvar_22 * tmpvar_22);
  lengthSq_21 = (lengthSq_21 + (tmpvar_23 * tmpvar_23));
  lengthSq_21 = (lengthSq_21 + (tmpvar_24 * tmpvar_24));
  ndotl_20 = (tmpvar_22 * tmpvar_14.x);
  ndotl_20 = (ndotl_20 + (tmpvar_23 * tmpvar_14.y));
  ndotl_20 = (ndotl_20 + (tmpvar_24 * tmpvar_14.z));
  vec4 tmpvar_25;
  tmpvar_25 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_20 * inversesqrt(lengthSq_21)));
  ndotl_20 = tmpvar_25;
  vec4 tmpvar_26;
  tmpvar_26 = (tmpvar_25 * (1.0/((1.0 + 
    (lengthSq_21 * unity_4LightAtten0)
  ))));
  col_19 = (unity_LightColor[0].xyz * tmpvar_26.x);
  col_19 = (col_19 + (unity_LightColor[1].xyz * tmpvar_26.y));
  col_19 = (col_19 + (unity_LightColor[2].xyz * tmpvar_26.z));
  col_19 = (col_19 + (unity_LightColor[3].xyz * tmpvar_26.w));
  ambientOrLightmapUV_18.xyz = col_19;
  vec3 ambient_27;
  ambient_27 = ambientOrLightmapUV_18.xyz;
  vec4 tmpvar_28;
  tmpvar_28.w = 1.0;
  tmpvar_28.xyz = tmpvar_14;
  vec3 res_29;
  vec3 x_30;
  x_30.x = dot (unity_SHAr, tmpvar_28);
  x_30.y = dot (unity_SHAg, tmpvar_28);
  x_30.z = dot (unity_SHAb, tmpvar_28);
  vec3 x1_31;
  vec4 tmpvar_32;
  tmpvar_32 = (tmpvar_14.xyzz * tmpvar_14.yzzx);
  x1_31.x = dot (unity_SHBr, tmpvar_32);
  x1_31.y = dot (unity_SHBg, tmpvar_32);
  x1_31.z = dot (unity_SHBb, tmpvar_32);
  res_29 = (x_30 + (x1_31 + (unity_SHC.xyz * 
    ((tmpvar_14.x * tmpvar_14.x) - (tmpvar_14.y * tmpvar_14.y))
  )));
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    res_29 = max (((1.055 * 
      pow (max (res_29, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
    ) - 0.055), vec3(0.0, 0.0, 0.0));
  };
  ambient_27 = (col_19 + max (vec3(0.0, 0.0, 0.0), res_29));
  ambientOrLightmapUV_18.xyz = ambient_27;
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = texcoord_8;
  xlv_TEXCOORD1 = tmpvar_10;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  xlv_TEXCOORD5 = ambientOrLightmapUV_18;
  xlv_TEXCOORD6 = o_15;
}


#endif
#ifdef FRAGMENT
uniform vec4 _WorldSpaceLightPos0;
uniform samplerCube unity_SpecCube0;
uniform vec4 unity_SpecCube0_HDR;
uniform vec4 unity_ColorSpaceDielectricSpec;
uniform vec4 _LightColor0;
uniform sampler2D unity_NHxRoughness;
uniform vec4 _Color;
uniform sampler2D _MainTex;
uniform float _Metallic;
uniform float _Glossiness;
uniform sampler2D _OcclusionMap;
uniform vec4 _EmissionColor;
uniform sampler2D _EmissionMap;
uniform sampler2D _ShadowMapTexture;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
varying vec4 xlv_TEXCOORD6;
void main ()
{
  vec4 c_1;
  vec3 tmpvar_2;
  tmpvar_2 = (_Color.xyz * texture2D (_MainTex, xlv_TEXCOORD0.xy).xyz);
  vec3 tmpvar_3;
  vec3 tmpvar_4;
  tmpvar_4 = mix (unity_ColorSpaceDielectricSpec.xyz, tmpvar_2, vec3(_Metallic));
  float tmpvar_5;
  tmpvar_5 = (unity_ColorSpaceDielectricSpec.w - (_Metallic * unity_ColorSpaceDielectricSpec.w));
  tmpvar_3 = (tmpvar_2 * tmpvar_5);
  vec3 tmpvar_6;
  tmpvar_6 = normalize(xlv_TEXCOORD2_2.xyz);
  float tmpvar_7;
  tmpvar_7 = texture2D (_OcclusionMap, xlv_TEXCOORD0.xy).y;
  vec3 tmpvar_8;
  float tmpvar_9;
  tmpvar_9 = (1.0 - _Glossiness);
  tmpvar_8 = (xlv_TEXCOORD1 - (2.0 * (
    dot (tmpvar_6, xlv_TEXCOORD1)
   * tmpvar_6)));
  vec4 tmpvar_10;
  tmpvar_10.xyz = tmpvar_8;
  tmpvar_10.w = ((tmpvar_9 * (1.7 - 
    (0.7 * tmpvar_9)
  )) * 6.0);
  vec4 tmpvar_11;
  tmpvar_11 = textureCube (unity_SpecCube0, tmpvar_8, tmpvar_10.w);
  vec3 viewDir_12;
  viewDir_12 = -(xlv_TEXCOORD1);
  vec3 color_13;
  vec2 tmpvar_14;
  tmpvar_14.x = dot ((viewDir_12 - (2.0 * 
    (dot (tmpvar_6, viewDir_12) * tmpvar_6)
  )), _WorldSpaceLightPos0.xyz);
  tmpvar_14.y = (1.0 - clamp (dot (tmpvar_6, viewDir_12), 0.0, 1.0));
  vec2 tmpvar_15;
  tmpvar_15 = ((tmpvar_14 * tmpvar_14) * (tmpvar_14 * tmpvar_14));
  vec2 tmpvar_16;
  tmpvar_16.x = tmpvar_15.x;
  tmpvar_16.y = tmpvar_9;
  color_13 = ((tmpvar_3 + (
    (texture2D (unity_NHxRoughness, tmpvar_16).w * 16.0)
   * tmpvar_4)) * ((_LightColor0.xyz * texture2DProj (_ShadowMapTexture, xlv_TEXCOORD6).x) * clamp (
    dot (tmpvar_6, _WorldSpaceLightPos0.xyz)
  , 0.0, 1.0)));
  color_13 = (color_13 + ((
    (xlv_TEXCOORD5.xyz * tmpvar_7)
   * tmpvar_3) + (
    (((unity_SpecCube0_HDR.x * pow (tmpvar_11.w, unity_SpecCube0_HDR.y)) * tmpvar_11.xyz) * tmpvar_7)
   * 
    mix (tmpvar_4, vec3(clamp ((_Glossiness + (1.0 - tmpvar_5)), 0.0, 1.0)), tmpvar_15.yyy)
  )));
  vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = color_13;
  c_1.w = tmpvar_17.w;
  c_1.xyz = (color_13 + (texture2D (_EmissionMap, xlv_TEXCOORD0.xy).xyz * _EmissionColor.xyz));
  vec4 xlat_varoutput_18;
  xlat_varoutput_18.xyz = c_1.xyz;
  xlat_varoutput_18.w = 1.0;
  gl_FragData[0] = xlat_varoutput_18;
}


#endif
"
}
SubProgram "d3d9 " {
// Stats: 89 math
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "VERTEXLIGHT_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Matrix 8 [_Object2World] 3
Matrix 11 [_World2Object] 3
Matrix 4 [glstate_matrix_mvp]
Vector 30 [_DetailAlbedoMap_ST]
Vector 29 [_MainTex_ST]
Vector 15 [_ProjectionParams]
Vector 16 [_ScreenParams]
Float 31 [_UVSec]
Vector 14 [_WorldSpaceCameraPos]
Vector 20 [unity_4LightAtten0]
Vector 17 [unity_4LightPosX0]
Vector 18 [unity_4LightPosY0]
Vector 19 [unity_4LightPosZ0]
Vector 28 [unity_ColorSpaceLuminance]
Vector 0 [unity_LightColor0]
Vector 1 [unity_LightColor1]
Vector 2 [unity_LightColor2]
Vector 3 [unity_LightColor3]
Vector 23 [unity_SHAb]
Vector 22 [unity_SHAg]
Vector 21 [unity_SHAr]
Vector 26 [unity_SHBb]
Vector 25 [unity_SHBg]
Vector 24 [unity_SHBr]
Vector 27 [unity_SHC]
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   row_major float4x4 _Object2World;
//   float4 _ProjectionParams;
//   float4 _ScreenParams;
//   float _UVSec;
//   row_major float4x4 _World2Object;
//   float3 _WorldSpaceCameraPos;
//   row_major float4x4 glstate_matrix_mvp;
//   float4 unity_4LightAtten0;
//   float4 unity_4LightPosX0;
//   float4 unity_4LightPosY0;
//   float4 unity_4LightPosZ0;
//   float4 unity_ColorSpaceLuminance;
//   float4 unity_LightColor[8];
//   float4 unity_SHAb;
//   float4 unity_SHAg;
//   float4 unity_SHAr;
//   float4 unity_SHBb;
//   float4 unity_SHBg;
//   float4 unity_SHBr;
//   float4 unity_SHC;
//
//
// Registers:
//
//   Name                      Reg   Size
//   ------------------------- ----- ----
//   unity_LightColor          c0       4
//   glstate_matrix_mvp        c4       4
//   _Object2World             c8       3
//   _World2Object             c11      3
//   _WorldSpaceCameraPos      c14      1
//   _ProjectionParams         c15      1
//   _ScreenParams             c16      1
//   unity_4LightPosX0         c17      1
//   unity_4LightPosY0         c18      1
//   unity_4LightPosZ0         c19      1
//   unity_4LightAtten0        c20      1
//   unity_SHAr                c21      1
//   unity_SHAg                c22      1
//   unity_SHAb                c23      1
//   unity_SHBr                c24      1
//   unity_SHBg                c25      1
//   unity_SHBb                c26      1
//   unity_SHC                 c27      1
//   unity_ColorSpaceLuminance c28      1
//   _MainTex_ST               c29      1
//   _DetailAlbedoMap_ST       c30      1
//   _UVSec                    c31      1
//

    vs_2_0
    def c32, 0.5, 0, 1, 0.416666657
    def c33, 1.05499995, -0.0549999997, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    mad oT0.xy, v2, c29, c29.zwzw
    mul r0.x, c31.x, c31.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad oT0.zw, r2.xyxy, c30.xyxy, c30
    dp4 r0.x, c8, v0
    dp4 r0.y, c9, v0
    dp4 r0.z, c10, v0
    add r1.xyz, r0, -c14
    add r2, -r0.x, c17
    add r3, -r0.y, c18
    add r0, -r0.z, c19
    dp3 r1.w, r1, r1
    rsq r1.w, r1.w
    mul oT1.xyz, r1.w, r1
    dp4 r1.y, c5, v0
    mul r4.x, r1.y, c15.x
    mul r4.w, r4.x, c32.x
    dp4 r1.x, c4, v0
    dp4 r1.w, c7, v0
    mul r4.xz, r1.xyww, c32.x
    mad oT6.xy, r4.z, c16.zwzw, r4.xwzw
    mul r4, r3, r3
    mad r4, r2, r2, r4
    mad r4, r0, r0, r4
    rsq r5.x, r4.x
    rsq r5.y, r4.y
    rsq r5.z, r4.z
    rsq r5.w, r4.w
    mov r6.z, c32.z
    mad r4, r4, c20, r6.z
    mul r6.xyz, v1.y, c12
    mad r6.xyz, c11, v1.x, r6
    mad r6.xyz, c13, v1.z, r6
    nrm r7.xyz, r6
    mul r3, r3, r7.y
    mad r2, r2, r7.x, r3
    mad r0, r0, r7.z, r2
    mul r0, r5, r0
    max r0, r0, c32.y
    rcp r2.x, r4.x
    rcp r2.y, r4.y
    rcp r2.z, r4.z
    rcp r2.w, r4.w
    mul r0, r0, r2
    mul r2.xyz, r0.y, c1
    mad r2.xyz, c0, r0.x, r2
    mad r0.xyz, c2, r0.z, r2
    mad r0.xyz, c3, r0.w, r0
    mul r0.w, r7.y, r7.y
    mad r0.w, r7.x, r7.x, -r0.w
    mul r2, r7.yzzx, r7.xyzz
    dp4 r3.x, c24, r2
    dp4 r3.y, c25, r2
    dp4 r3.z, c26, r2
    mad r2.xyz, c27, r0.w, r3
    mov r7.w, c32.z
    dp4 r3.x, c21, r7
    dp4 r3.y, c22, r7
    dp4 r3.z, c23, r7
    mov oT4.xyz, r7
    add r2.xyz, r2, r3
    max r3.xyz, r2, c32.y
    mov r3.w, c32.w
    lit r4, r3.xxww
    mov r4.x, r4.z
    lit r5, r3.yyww
    lit r3, r3.zzww
    mov r4.z, r3.z
    mov r4.y, r5.z
    mad r3.xyz, r4, c33.x, c33.y
    max r3.xyz, r3, c32.y
    mul r0.w, c28.w, c28.w
    sge r0.w, -r0.w, r0.w
    lrp r4.xyz, r0.w, r3, r2
    max r2.xyz, r4, c32.y
    add oT5.xyz, r0, r2
    dp4 r1.z, c6, v0
    mov oPos, r1
    mov oT6.zw, r1
    mov oT2, c32.y
    mov oT3, c32.y
    mov oT4.w, c32.y
    mov oT5.w, c32.y

// approximately 87 instruction slots used
"
}
SubProgram "d3d11 " {
// Stats: 71 math
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "VERTEXLIGHT_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
ConstBuffer "$Globals" 240
Vector 48 [unity_ColorSpaceLuminance]
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
Vector 80 [_ProjectionParams]
ConstBuffer "UnityLighting" 720
Vector 32 [unity_4LightPosX0]
Vector 48 [unity_4LightPosY0]
Vector 64 [unity_4LightPosZ0]
Vector 80 [unity_4LightAtten0]
Vector 96 [unity_LightColor0]
Vector 112 [unity_LightColor1]
Vector 128 [unity_LightColor2]
Vector 144 [unity_LightColor3]
Vector 160 [unity_LightColor4]
Vector 176 [unity_LightColor5]
Vector 192 [unity_LightColor6]
Vector 208 [unity_LightColor7]
Vector 608 [unity_SHAr]
Vector 624 [unity_SHAg]
Vector 640 [unity_SHAb]
Vector 656 [unity_SHBr]
Vector 672 [unity_SHBg]
Vector 688 [unity_SHBb]
Vector 704 [unity_SHC]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer cb0[14], immediateIndexed
      dcl_constantbuffer cb1[6], immediateIndexed
      dcl_constantbuffer cb2[45], immediateIndexed
      dcl_constantbuffer cb3[19], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 7
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   4: mov o0.xyzw, r0.xyzw
   5: eq r1.x, cb0[13].z, l(0.000000)
   6: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
   7: mad o1.zw, r1.xxxy, cb0[11].xxxy, cb0[11].zzzw
   8: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   9: mul r1.xyz, v0.yyyy, cb3[13].xyzx
  10: mad r1.xyz, cb3[12].xyzx, v0.xxxx, r1.xyzx
  11: mad r1.xyz, cb3[14].xyzx, v0.zzzz, r1.xyzx
  12: mad r1.xyz, cb3[15].xyzx, v0.wwww, r1.xyzx
  13: add r2.xyz, r1.xyzx, -cb1[4].xyzx
  14: dp3 r1.w, r2.xyzx, r2.xyzx
  15: rsq r1.w, r1.w
  16: mul o2.xyz, r1.wwww, r2.xyzx
  17: mov o3.xyzw, l(0,0,0,0)
  18: mov o4.xyzw, l(0,0,0,0)
  19: mov o5.w, l(0)
  20: mul r2.x, v1.x, cb3[16].x
  21: mul r2.y, v1.x, cb3[17].x
  22: mul r2.z, v1.x, cb3[18].x
  23: mul r3.x, v1.y, cb3[16].y
  24: mul r3.y, v1.y, cb3[17].y
  25: mul r3.z, v1.y, cb3[18].y
  26: add r2.xyz, r2.xyzx, r3.xyzx
  27: mul r3.x, v1.z, cb3[16].z
  28: mul r3.y, v1.z, cb3[17].z
  29: mul r3.z, v1.z, cb3[18].z
  30: add r2.xyz, r2.xyzx, r3.xyzx
  31: dp3 r1.w, r2.xyzx, r2.xyzx
  32: rsq r1.w, r1.w
  33: mul r2.xyz, r1.wwww, r2.xyzx
  34: mov o5.xyz, r2.xyzx
  35: mul r1.w, r2.y, r2.y
  36: mad r1.w, r2.x, r2.x, -r1.w
  37: mul r3.xyzw, r2.yzzx, r2.xyzz
  38: dp4 r4.x, cb2[41].xyzw, r3.xyzw
  39: dp4 r4.y, cb2[42].xyzw, r3.xyzw
  40: dp4 r4.z, cb2[43].xyzw, r3.xyzw
  41: mad r3.xyz, cb2[44].xyzx, r1.wwww, r4.xyzx
  42: mov r2.w, l(1.000000)
  43: dp4 r4.x, cb2[38].xyzw, r2.xyzw
  44: dp4 r4.y, cb2[39].xyzw, r2.xyzw
  45: dp4 r4.z, cb2[40].xyzw, r2.xyzw
  46: add r3.xyz, r3.xyzx, r4.xyzx
  47: max r4.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  48: log r4.xyz, r4.xyzx
  49: mul r4.xyz, r4.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  50: exp r4.xyz, r4.xyzx
  51: mad r4.xyz, r4.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  52: max r4.xyz, r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  53: eq r1.w, cb0[3].w, l(0.000000)
  54: movc r3.xyz, r1.wwww, r4.xyzx, r3.xyzx
  55: max r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  56: add r4.xyzw, -r1.yyyy, cb2[3].xyzw
  57: mul r5.xyzw, r2.yyyy, r4.xyzw
  58: mul r4.xyzw, r4.xyzw, r4.xyzw
  59: add r6.xyzw, -r1.xxxx, cb2[2].xyzw
  60: add r1.xyzw, -r1.zzzz, cb2[4].xyzw
  61: mad r5.xyzw, r6.xyzw, r2.xxxx, r5.xyzw
  62: mad r2.xyzw, r1.xyzw, r2.zzzz, r5.xyzw
  63: mad r4.xyzw, r6.xyzw, r6.xyzw, r4.xyzw
  64: mad r1.xyzw, r1.xyzw, r1.xyzw, r4.xyzw
  65: rsq r4.xyzw, r1.xyzw
  66: mad r1.xyzw, r1.xyzw, cb2[5].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  67: div r1.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r1.xyzw
  68: mul r2.xyzw, r2.xyzw, r4.xyzw
  69: max r2.xyzw, r2.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  70: mul r1.xyzw, r1.xyzw, r2.xyzw
  71: mul r2.xyz, r1.yyyy, cb2[7].xyzx
  72: mad r2.xyz, cb2[6].xyzx, r1.xxxx, r2.xyzx
  73: mad r1.xyz, cb2[8].xyzx, r1.zzzz, r2.xyzx
  74: mad r1.xyz, cb2[9].xyzx, r1.wwww, r1.xyzx
  75: add o6.xyz, r3.xyzx, r1.xyzx
  76: mov o6.w, l(0)
  77: mul r0.y, r0.y, cb1[5].x
  78: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  79: mov o7.zw, r0.zzzw
  80: add o7.xy, r1.zzzz, r1.xwxx
  81: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "d3d11_9x " {
// Stats: 69 math
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "VERTEXLIGHT_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
ConstBuffer "$Globals" 240
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
Vector 80 [_ProjectionParams]
ConstBuffer "UnityLighting" 720
Vector 32 [unity_4LightPosX0]
Vector 48 [unity_4LightPosY0]
Vector 64 [unity_4LightPosZ0]
Vector 80 [unity_4LightAtten0]
Vector 96 [unity_LightColor0]
Vector 112 [unity_LightColor1]
Vector 128 [unity_LightColor2]
Vector 144 [unity_LightColor3]
Vector 160 [unity_LightColor4]
Vector 176 [unity_LightColor5]
Vector 192 [unity_LightColor6]
Vector 208 [unity_LightColor7]
Vector 608 [unity_SHAr]
Vector 624 [unity_SHAg]
Vector 640 [unity_SHAb]
Vector 656 [unity_SHBr]
Vector 672 [unity_SHBg]
Vector 688 [unity_SHBb]
Vector 704 [unity_SHC]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c1         cb0            10         2  ( FLT, FLT, FLT, FLT)
// c3         cb0            13         1  ( FLT, FLT, FLT, FLT)
// c4         cb1             4         2  ( FLT, FLT, FLT, FLT)
// c6         cb2             2         8  ( FLT, FLT, FLT, FLT)
// c14        cb2            38         7  ( FLT, FLT, FLT, FLT)
// c21        cb3             0         4  ( FLT, FLT, FLT, FLT)
// c25        cb3            12         7  ( FLT, FLT, FLT, FLT)
//
//
// Runtime generated constant mappings:
//
// Target Reg                               Constant Description
// ---------- --------------------------------------------------
// c0                              Vertex Shader position offset
//
//
// Level9 shader bytecode:
//
    vs_2_0
          def c32, 0.5, 0, 1, 0.416666657
          def c33, 1.05499995, -0.0549999997, 0, 0
          dcl_texcoord v0
          dcl_texcoord1 v1
          dcl_texcoord2 v2
          dcl_texcoord3 v3
   0:     mad oT0.xy, v2, c1, c1.zwzw
   1:     mul r0.x, c3.z, c3.z
   2:     sge r0.x, -r0.x, r0.x
   3:     mov r1.xy, v2
   4:     lrp r2.xy, r0.x, r1, v3
   5:     mad oT0.zw, r2.xyxy, c2.xyxy, c2
   6:     mul r0.xyz, v0.y, c26
   7:     mad r0.xyz, c25, v0.x, r0
   8:     mad r0.xyz, c27, v0.z, r0
   9:     mad r0.xyz, c28, v0.w, r0
  10:     add r1.xyz, r0, -c4
  11:     dp3 r0.w, r1, r1
  12:     rsq r0.w, r0.w
  13:     mul oT1.xyz, r0.w, r1
  14:     mul r1, v0.y, c22
  15:     mad r1, c21, v0.x, r1
  16:     mad r1, c23, v0.z, r1
  17:     mad r1, c24, v0.w, r1
  18:     mul r0.w, r1.y, c5.x
  19:     mul r2.w, r0.w, c32.x
  20:     mul r2.xz, r1.xyww, c32.x
  21:     add oT6.xy, r2.z, r2.xwzw
  22:     add r2, -r0.x, c6
  23:     add r3, -r0.y, c7
  24:     add r0, -r0.z, c8
  25:     mul r4.x, v1.x, c29.x
  26:     mul r4.y, v1.x, c30.x
  27:     mul r4.z, v1.x, c31.x
  28:     mul r5.x, v1.y, c29.y
  29:     mul r5.y, v1.y, c30.y
  30:     mul r5.z, v1.y, c31.y
  31:     add r4.xyz, r4, r5
  32:     mul r5.x, v1.z, c29.z
  33:     mul r5.y, v1.z, c30.z
  34:     mul r5.z, v1.z, c31.z
  35:     add r4.xyz, r4, r5
  36:     nrm r5.xyz, r4
  39:     mul r4, r3, r5.y
  40:     mul r3, r3, r3
  41:     mad r3, r2, r2, r3
  42:     mad r2, r2, r5.x, r4
  43:     mad r2, r0, r5.z, r2
  44:     mad r0, r0, r0, r3
  45:     rsq r3.x, r0.x
  46:     rsq r3.y, r0.y
  47:     rsq r3.z, r0.z
  48:     rsq r3.w, r0.w
  49:     mov r4.z, c32.z
  50:     mad r0, r0, c9, r4.z
  51:     mul r2, r2, r3
  52:     max r2, r2, c32.y
  53:     rcp r3.x, r0.x
  54:     rcp r3.y, r0.y
  55:     rcp r3.z, r0.z
  56:     rcp r3.w, r0.w
  57:     mul r0, r2, r3
  58:     mul r2.xyz, r0.y, c11
  59:     mad r2.xyz, c10, r0.x, r2
  60:     mad r0.xyz, c12, r0.z, r2
  61:     mad r0.xyz, c13, r0.w, r0
  62:     mul r0.w, r5.y, r5.y
  63:     mad r0.w, r5.x, r5.x, -r0.w
  64:     mul r2, r5.yzzx, r5.xyzz
  65:     dp4 r3.x, c17, r2
  66:     dp4 r3.y, c18, r2
  67:     dp4 r3.z, c19, r2
  68:     mad r2.xyz, c20, r0.w, r3
  69:     mov r5.w, c32.z
  70:     dp4 r3.x, c14, r5
  71:     dp4 r3.y, c15, r5
  72:     dp4 r3.z, c16, r5
  73:     mov oT4.xyz, r5
  74:     add r2.xyz, r2, r3
  75:     max r2.xyz, r2, c32.y
  76:     mov r2.w, c32.w
  77:     lit r3, r2.xxww
  78:     mov r3.x, r3.z
  79:     lit r4, r2.yyww
  80:     lit r2, r2.zzww
  81:     mov r3.z, r2.z
  82:     mov r3.y, r4.z
  83:     mad r2.xyz, r3, c33.x, c33.y
  84:     max r2.xyz, r2, c32.y
  85:     add oT5.xyz, r0, r2
  86:     mad oPos.xy, r1.w, c0, r1
  87:     mov oPos.zw, r1
  88:     mov oT6.zw, r1
  89:     mov oT2, c32.y
  90:     mov oT3, c32.y
  91:     mov oT4.w, c32.y
  92:     mov oT5.w, c32.y

// approximately 93 instruction slots used
      vs_4_0
      dcl_constantbuffer cb0[14], immediateIndexed
      dcl_constantbuffer cb1[6], immediateIndexed
      dcl_constantbuffer cb2[45], immediateIndexed
      dcl_constantbuffer cb3[19], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 7
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   4: mov o0.xyzw, r0.xyzw
   5: eq r1.x, cb0[13].z, l(0.000000)
   6: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
   7: mad o1.zw, r1.xxxy, cb0[11].xxxy, cb0[11].zzzw
   8: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   9: mul r1.xyz, v0.yyyy, cb3[13].xyzx
  10: mad r1.xyz, cb3[12].xyzx, v0.xxxx, r1.xyzx
  11: mad r1.xyz, cb3[14].xyzx, v0.zzzz, r1.xyzx
  12: mad r1.xyz, cb3[15].xyzx, v0.wwww, r1.xyzx
  13: add r2.xyz, r1.xyzx, -cb1[4].xyzx
  14: dp3 r1.w, r2.xyzx, r2.xyzx
  15: rsq r1.w, r1.w
  16: mul o2.xyz, r1.wwww, r2.xyzx
  17: mov o3.xyzw, l(0,0,0,0)
  18: mov o4.xyzw, l(0,0,0,0)
  19: mov o5.w, l(0)
  20: mul r2.x, v1.x, cb3[16].x
  21: mul r2.y, v1.x, cb3[17].x
  22: mul r2.z, v1.x, cb3[18].x
  23: mul r3.x, v1.y, cb3[16].y
  24: mul r3.y, v1.y, cb3[17].y
  25: mul r3.z, v1.y, cb3[18].y
  26: add r2.xyz, r2.xyzx, r3.xyzx
  27: mul r3.x, v1.z, cb3[16].z
  28: mul r3.y, v1.z, cb3[17].z
  29: mul r3.z, v1.z, cb3[18].z
  30: add r2.xyz, r2.xyzx, r3.xyzx
  31: dp3 r1.w, r2.xyzx, r2.xyzx
  32: rsq r1.w, r1.w
  33: mul r2.xyz, r1.wwww, r2.xyzx
  34: mov o5.xyz, r2.xyzx
  35: mul r1.w, r2.y, r2.y
  36: mad r1.w, r2.x, r2.x, -r1.w
  37: mul r3.xyzw, r2.yzzx, r2.xyzz
  38: dp4 r4.x, cb2[41].xyzw, r3.xyzw
  39: dp4 r4.y, cb2[42].xyzw, r3.xyzw
  40: dp4 r4.z, cb2[43].xyzw, r3.xyzw
  41: mad r3.xyz, cb2[44].xyzx, r1.wwww, r4.xyzx
  42: mov r2.w, l(1.000000)
  43: dp4 r4.x, cb2[38].xyzw, r2.xyzw
  44: dp4 r4.y, cb2[39].xyzw, r2.xyzw
  45: dp4 r4.z, cb2[40].xyzw, r2.xyzw
  46: add r3.xyz, r3.xyzx, r4.xyzx
  47: max r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  48: log r3.xyz, r3.xyzx
  49: mul r3.xyz, r3.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  50: exp r3.xyz, r3.xyzx
  51: mad r3.xyz, r3.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  52: max r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  53: add r4.xyzw, -r1.yyyy, cb2[3].xyzw
  54: mul r5.xyzw, r2.yyyy, r4.xyzw
  55: mul r4.xyzw, r4.xyzw, r4.xyzw
  56: add r6.xyzw, -r1.xxxx, cb2[2].xyzw
  57: add r1.xyzw, -r1.zzzz, cb2[4].xyzw
  58: mad r5.xyzw, r6.xyzw, r2.xxxx, r5.xyzw
  59: mad r2.xyzw, r1.xyzw, r2.zzzz, r5.xyzw
  60: mad r4.xyzw, r6.xyzw, r6.xyzw, r4.xyzw
  61: mad r1.xyzw, r1.xyzw, r1.xyzw, r4.xyzw
  62: rsq r4.xyzw, r1.xyzw
  63: mad r1.xyzw, r1.xyzw, cb2[5].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  64: div r1.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r1.xyzw
  65: mul r2.xyzw, r2.xyzw, r4.xyzw
  66: max r2.xyzw, r2.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  67: mul r1.xyzw, r1.xyzw, r2.xyzw
  68: mul r2.xyz, r1.yyyy, cb2[7].xyzx
  69: mad r2.xyz, cb2[6].xyzx, r1.xxxx, r2.xyzx
  70: mad r1.xyz, cb2[8].xyzx, r1.zzzz, r2.xyzx
  71: mad r1.xyz, cb2[9].xyzx, r1.wwww, r1.xyzx
  72: add o6.xyz, r3.xyzx, r1.xyzx
  73: mov o6.w, l(0)
  74: mul r0.y, r0.y, cb1[5].x
  75: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  76: mov o7.zw, r0.zzzw
  77: add o7.xy, r1.zzzz, r1.xwxx
  78: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
// Stats: 49 math, 4 textures
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_ALPHABLEND_ON" }
"#version 120

#ifdef VERTEX
uniform vec3 _WorldSpaceCameraPos;
uniform vec4 unity_SHAr;
uniform vec4 unity_SHAg;
uniform vec4 unity_SHAb;
uniform vec4 unity_SHBr;
uniform vec4 unity_SHBg;
uniform vec4 unity_SHBb;
uniform vec4 unity_SHC;

uniform mat4 _Object2World;
uniform mat4 _World2Object;
uniform vec4 unity_ColorSpaceLuminance;
uniform vec4 _MainTex_ST;
uniform vec4 _DetailAlbedoMap_ST;
uniform float _UVSec;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
void main ()
{
  vec2 tmpvar_1;
  tmpvar_1 = gl_MultiTexCoord0.xy;
  vec2 tmpvar_2;
  tmpvar_2 = gl_MultiTexCoord1.xy;
  vec4 tmpvar_3;
  vec4 tmpvar_4;
  vec4 tmpvar_5;
  vec4 tmpvar_6;
  vec4 tmpvar_7;
  tmpvar_7 = (_Object2World * gl_Vertex);
  tmpvar_3 = (gl_ModelViewProjectionMatrix * gl_Vertex);
  vec4 texcoord_8;
  texcoord_8.xy = ((gl_MultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  vec2 tmpvar_9;
  if ((_UVSec == 0.0)) {
    tmpvar_9 = tmpvar_1;
  } else {
    tmpvar_9 = tmpvar_2;
  };
  texcoord_8.zw = ((tmpvar_9 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  vec3 tmpvar_10;
  tmpvar_10 = normalize((tmpvar_7.xyz - _WorldSpaceCameraPos));
  vec4 v_11;
  v_11.x = _World2Object[0].x;
  v_11.y = _World2Object[1].x;
  v_11.z = _World2Object[2].x;
  v_11.w = _World2Object[3].x;
  vec4 v_12;
  v_12.x = _World2Object[0].y;
  v_12.y = _World2Object[1].y;
  v_12.z = _World2Object[2].y;
  v_12.w = _World2Object[3].y;
  vec4 v_13;
  v_13.x = _World2Object[0].z;
  v_13.y = _World2Object[1].z;
  v_13.z = _World2Object[2].z;
  v_13.w = _World2Object[3].z;
  vec3 tmpvar_14;
  tmpvar_14 = normalize(((
    (v_11.xyz * gl_Normal.x)
   + 
    (v_12.xyz * gl_Normal.y)
  ) + (v_13.xyz * gl_Normal.z)));
  tmpvar_4.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_5.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_6.xyz = tmpvar_14;
  vec4 ambientOrLightmapUV_15;
  ambientOrLightmapUV_15 = vec4(0.0, 0.0, 0.0, 0.0);
  vec3 ambient_16;
  ambient_16 = vec3(0.0, 0.0, 0.0);
  vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = tmpvar_14;
  vec3 res_18;
  vec3 x_19;
  x_19.x = dot (unity_SHAr, tmpvar_17);
  x_19.y = dot (unity_SHAg, tmpvar_17);
  x_19.z = dot (unity_SHAb, tmpvar_17);
  vec3 x1_20;
  vec4 tmpvar_21;
  tmpvar_21 = (tmpvar_14.xyzz * tmpvar_14.yzzx);
  x1_20.x = dot (unity_SHBr, tmpvar_21);
  x1_20.y = dot (unity_SHBg, tmpvar_21);
  x1_20.z = dot (unity_SHBb, tmpvar_21);
  res_18 = (x_19 + (x1_20 + (unity_SHC.xyz * 
    ((tmpvar_14.x * tmpvar_14.x) - (tmpvar_14.y * tmpvar_14.y))
  )));
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    res_18 = max (((1.055 * 
      pow (max (res_18, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
    ) - 0.055), vec3(0.0, 0.0, 0.0));
  };
  ambient_16 = max (vec3(0.0, 0.0, 0.0), res_18);
  ambientOrLightmapUV_15.xyz = ambient_16;
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = texcoord_8;
  xlv_TEXCOORD1 = tmpvar_10;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  xlv_TEXCOORD5 = ambientOrLightmapUV_15;
}


#endif
#ifdef FRAGMENT
uniform vec4 _WorldSpaceLightPos0;
uniform samplerCube unity_SpecCube0;
uniform vec4 unity_SpecCube0_HDR;
uniform vec4 unity_ColorSpaceDielectricSpec;
uniform vec4 _LightColor0;
uniform sampler2D unity_NHxRoughness;
uniform vec4 _Color;
uniform sampler2D _MainTex;
uniform float _Metallic;
uniform float _Glossiness;
uniform sampler2D _OcclusionMap;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
void main ()
{
  vec4 c_1;
  vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  vec3 tmpvar_3;
  tmpvar_3 = (_Color.xyz * tmpvar_2.xyz);
  vec3 tmpvar_4;
  vec3 tmpvar_5;
  tmpvar_5 = mix (unity_ColorSpaceDielectricSpec.xyz, tmpvar_3, vec3(_Metallic));
  float tmpvar_6;
  tmpvar_6 = (unity_ColorSpaceDielectricSpec.w - (_Metallic * unity_ColorSpaceDielectricSpec.w));
  tmpvar_4 = (tmpvar_3 * tmpvar_6);
  vec3 tmpvar_7;
  tmpvar_7 = normalize(xlv_TEXCOORD2_2.xyz);
  float tmpvar_8;
  tmpvar_8 = texture2D (_OcclusionMap, xlv_TEXCOORD0.xy).y;
  vec3 tmpvar_9;
  float tmpvar_10;
  tmpvar_10 = (1.0 - _Glossiness);
  tmpvar_9 = (xlv_TEXCOORD1 - (2.0 * (
    dot (tmpvar_7, xlv_TEXCOORD1)
   * tmpvar_7)));
  vec4 tmpvar_11;
  tmpvar_11.xyz = tmpvar_9;
  tmpvar_11.w = ((tmpvar_10 * (1.7 - 
    (0.7 * tmpvar_10)
  )) * 6.0);
  vec4 tmpvar_12;
  tmpvar_12 = textureCube (unity_SpecCube0, tmpvar_9, tmpvar_11.w);
  vec3 viewDir_13;
  viewDir_13 = -(xlv_TEXCOORD1);
  vec3 color_14;
  vec2 tmpvar_15;
  tmpvar_15.x = dot ((viewDir_13 - (2.0 * 
    (dot (tmpvar_7, viewDir_13) * tmpvar_7)
  )), _WorldSpaceLightPos0.xyz);
  tmpvar_15.y = (1.0 - clamp (dot (tmpvar_7, viewDir_13), 0.0, 1.0));
  vec2 tmpvar_16;
  tmpvar_16 = ((tmpvar_15 * tmpvar_15) * (tmpvar_15 * tmpvar_15));
  vec2 tmpvar_17;
  tmpvar_17.x = tmpvar_16.x;
  tmpvar_17.y = tmpvar_10;
  color_14 = ((tmpvar_4 + (
    (texture2D (unity_NHxRoughness, tmpvar_17).w * 16.0)
   * tmpvar_5)) * (_LightColor0.xyz * clamp (
    dot (tmpvar_7, _WorldSpaceLightPos0.xyz)
  , 0.0, 1.0)));
  color_14 = (color_14 + ((
    (xlv_TEXCOORD5.xyz * tmpvar_8)
   * tmpvar_4) + (
    (((unity_SpecCube0_HDR.x * pow (tmpvar_12.w, unity_SpecCube0_HDR.y)) * tmpvar_12.xyz) * tmpvar_8)
   * 
    mix (tmpvar_5, vec3(clamp ((_Glossiness + (1.0 - tmpvar_6)), 0.0, 1.0)), tmpvar_16.yyy)
  )));
  vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = color_14;
  c_1.w = tmpvar_18.w;
  c_1.xyz = color_14;
  c_1.xyz = c_1.xyz;
  vec4 xlat_varoutput_19;
  xlat_varoutput_19.xyz = c_1.xyz;
  xlat_varoutput_19.w = (tmpvar_2.w * _Color.w);
  gl_FragData[0] = xlat_varoutput_19;
}


#endif
"
}
SubProgram "d3d9 " {
// Stats: 56 math
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_ALPHABLEND_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Matrix 4 [_Object2World] 3
Matrix 7 [_World2Object] 3
Matrix 0 [glstate_matrix_mvp]
Vector 20 [_DetailAlbedoMap_ST]
Vector 19 [_MainTex_ST]
Float 21 [_UVSec]
Vector 10 [_WorldSpaceCameraPos]
Vector 18 [unity_ColorSpaceLuminance]
Vector 13 [unity_SHAb]
Vector 12 [unity_SHAg]
Vector 11 [unity_SHAr]
Vector 16 [unity_SHBb]
Vector 15 [unity_SHBg]
Vector 14 [unity_SHBr]
Vector 17 [unity_SHC]
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   row_major float4x4 _Object2World;
//   float _UVSec;
//   row_major float4x4 _World2Object;
//   float3 _WorldSpaceCameraPos;
//   row_major float4x4 glstate_matrix_mvp;
//   float4 unity_ColorSpaceLuminance;
//   float4 unity_SHAb;
//   float4 unity_SHAg;
//   float4 unity_SHAr;
//   float4 unity_SHBb;
//   float4 unity_SHBg;
//   float4 unity_SHBr;
//   float4 unity_SHC;
//
//
// Registers:
//
//   Name                      Reg   Size
//   ------------------------- ----- ----
//   glstate_matrix_mvp        c0       4
//   _Object2World             c4       3
//   _World2Object             c7       3
//   _WorldSpaceCameraPos      c10      1
//   unity_SHAr                c11      1
//   unity_SHAg                c12      1
//   unity_SHAb                c13      1
//   unity_SHBr                c14      1
//   unity_SHBg                c15      1
//   unity_SHBb                c16      1
//   unity_SHC                 c17      1
//   unity_ColorSpaceLuminance c18      1
//   _MainTex_ST               c19      1
//   _DetailAlbedoMap_ST       c20      1
//   _UVSec                    c21      1
//

    vs_2_0
    def c22, 1, 0, 0.416666657, 0
    def c23, 1.05499995, -0.0549999997, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dp4 oPos.x, c0, v0
    dp4 oPos.y, c1, v0
    dp4 oPos.z, c2, v0
    dp4 oPos.w, c3, v0
    mad oT0.xy, v2, c19, c19.zwzw
    mul r0.x, c21.x, c21.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad oT0.zw, r2.xyxy, c20.xyxy, c20
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add r0.xyz, r0, -c10
    dp3 r0.w, r0, r0
    rsq r0.w, r0.w
    mul oT1.xyz, r0.w, r0
    mul r0.xyz, v1.y, c8
    mad r0.xyz, c7, v1.x, r0
    mad r0.xyz, c9, v1.z, r0
    nrm r1.xyz, r0
    mul r0.x, r1.y, r1.y
    mad r0.x, r1.x, r1.x, -r0.x
    mul r2, r1.yzzx, r1.xyzz
    dp4 r3.x, c14, r2
    dp4 r3.y, c15, r2
    dp4 r3.z, c16, r2
    mad r0.xyz, c17, r0.x, r3
    mov r1.w, c22.x
    dp4 r2.x, c11, r1
    dp4 r2.y, c12, r1
    dp4 r2.z, c13, r1
    mov oT4.xyz, r1
    add r0.xyz, r0, r2
    max r1.xyz, r0, c22.y
    mov r1.w, c22.z
    lit r2, r1.xxww
    mov r2.x, r2.z
    lit r3, r1.yyww
    lit r1, r1.zzww
    mov r2.z, r1.z
    mov r2.y, r3.z
    mad r1.xyz, r2, c23.x, c23.y
    max r1.xyz, r1, c22.y
    mul r0.w, c18.w, c18.w
    sge r0.w, -r0.w, r0.w
    lrp r2.xyz, r0.w, r1, r0
    max oT5.xyz, r2, c22.y
    mov oT2, c22.y
    mov oT3, c22.y
    mov oT4.w, c22.y
    mov oT5.w, c22.y

// approximately 54 instruction slots used
"
}
SubProgram "d3d11 " {
// Stats: 48 math
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_ALPHABLEND_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
ConstBuffer "$Globals" 240
Vector 48 [unity_ColorSpaceLuminance]
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 608 [unity_SHAr]
Vector 624 [unity_SHAg]
Vector 640 [unity_SHAb]
Vector 656 [unity_SHBr]
Vector 672 [unity_SHBg]
Vector 688 [unity_SHBb]
Vector 704 [unity_SHC]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer cb0[14], immediateIndexed
      dcl_constantbuffer cb1[5], immediateIndexed
      dcl_constantbuffer cb2[45], immediateIndexed
      dcl_constantbuffer cb3[19], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: mad o0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   4: eq r0.x, cb0[13].z, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[11].xxxy, cb0[11].zzzw
   7: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add r0.xyz, r0.xyzx, -cb1[4].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: rsq r0.w, r0.w
  15: mul o2.xyz, r0.wwww, r0.xyzx
  16: mov o3.xyzw, l(0,0,0,0)
  17: mov o4.xyzw, l(0,0,0,0)
  18: mul r0.x, v1.x, cb3[16].x
  19: mul r0.y, v1.x, cb3[17].x
  20: mul r0.z, v1.x, cb3[18].x
  21: mul r1.x, v1.y, cb3[16].y
  22: mul r1.y, v1.y, cb3[17].y
  23: mul r1.z, v1.y, cb3[18].y
  24: add r0.xyz, r0.xyzx, r1.xyzx
  25: mul r1.x, v1.z, cb3[16].z
  26: mul r1.y, v1.z, cb3[17].z
  27: mul r1.z, v1.z, cb3[18].z
  28: add r0.xyz, r0.xyzx, r1.xyzx
  29: dp3 r0.w, r0.xyzx, r0.xyzx
  30: rsq r0.w, r0.w
  31: mul r0.xyz, r0.wwww, r0.xyzx
  32: mov o5.xyz, r0.xyzx
  33: mov o5.w, l(0)
  34: mul r1.x, r0.y, r0.y
  35: mad r1.x, r0.x, r0.x, -r1.x
  36: mul r2.xyzw, r0.yzzx, r0.xyzz
  37: dp4 r3.x, cb2[41].xyzw, r2.xyzw
  38: dp4 r3.y, cb2[42].xyzw, r2.xyzw
  39: dp4 r3.z, cb2[43].xyzw, r2.xyzw
  40: mad r1.xyz, cb2[44].xyzx, r1.xxxx, r3.xyzx
  41: mov r0.w, l(1.000000)
  42: dp4 r2.x, cb2[38].xyzw, r0.xyzw
  43: dp4 r2.y, cb2[39].xyzw, r0.xyzw
  44: dp4 r2.z, cb2[40].xyzw, r0.xyzw
  45: add r0.xyz, r1.xyzx, r2.xyzx
  46: max r1.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  47: log r1.xyz, r1.xyzx
  48: mul r1.xyz, r1.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  49: exp r1.xyz, r1.xyzx
  50: mad r1.xyz, r1.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  51: max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  52: eq r0.w, cb0[3].w, l(0.000000)
  53: movc r0.xyz, r0.wwww, r1.xyzx, r0.xyzx
  54: max o6.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  55: mov o6.w, l(0)
  56: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "d3d11_9x " {
// Stats: 46 math
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_ALPHABLEND_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
ConstBuffer "$Globals" 240
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 608 [unity_SHAr]
Vector 624 [unity_SHAg]
Vector 640 [unity_SHAb]
Vector 656 [unity_SHBr]
Vector 672 [unity_SHBg]
Vector 688 [unity_SHBb]
Vector 704 [unity_SHC]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c1         cb0            10         2  ( FLT, FLT, FLT, FLT)
// c3         cb0            13         1  ( FLT, FLT, FLT, FLT)
// c4         cb1             4         1  ( FLT, FLT, FLT, FLT)
// c5         cb2            38         7  ( FLT, FLT, FLT, FLT)
// c12        cb3             0         4  ( FLT, FLT, FLT, FLT)
// c16        cb3            12         7  ( FLT, FLT, FLT, FLT)
//
//
// Runtime generated constant mappings:
//
// Target Reg                               Constant Description
// ---------- --------------------------------------------------
// c0                              Vertex Shader position offset
//
//
// Level9 shader bytecode:
//
    vs_2_0
          def c23, 1, 0, 0.416666657, 0
          def c24, 1.05499995, -0.0549999997, 0, 0
          dcl_texcoord v0
          dcl_texcoord1 v1
          dcl_texcoord2 v2
          dcl_texcoord3 v3
   0:     mad oT0.xy, v2, c1, c1.zwzw
   1:     mul r0.x, c3.z, c3.z
   2:     sge r0.x, -r0.x, r0.x
   3:     mov r1.xy, v2
   4:     lrp r2.xy, r0.x, r1, v3
   5:     mad oT0.zw, r2.xyxy, c2.xyxy, c2
   6:     mul r0.xyz, v0.y, c17
   7:     mad r0.xyz, c16, v0.x, r0
   8:     mad r0.xyz, c18, v0.z, r0
   9:     mad r0.xyz, c19, v0.w, r0
  10:     add r0.xyz, r0, -c4
  11:     dp3 r0.w, r0, r0
  12:     rsq r0.w, r0.w
  13:     mul oT1.xyz, r0.w, r0
  14:     mul r0.x, v1.x, c20.x
  15:     mul r0.y, v1.x, c21.x
  16:     mul r0.z, v1.x, c22.x
  17:     mul r1.x, v1.y, c20.y
  18:     mul r1.y, v1.y, c21.y
  19:     mul r1.z, v1.y, c22.y
  20:     add r0.xyz, r0, r1
  21:     mul r1.x, v1.z, c20.z
  22:     mul r1.y, v1.z, c21.z
  23:     mul r1.z, v1.z, c22.z
  24:     add r0.xyz, r0, r1
  25:     nrm r1.xyz, r0
  28:     mul r0.x, r1.y, r1.y
  29:     mad r0.x, r1.x, r1.x, -r0.x
  30:     mul r2, r1.yzzx, r1.xyzz
  31:     dp4 r3.x, c8, r2
  32:     dp4 r3.y, c9, r2
  33:     dp4 r3.z, c10, r2
  34:     mad r0.xyz, c11, r0.x, r3
  35:     mov r1.w, c23.x
  36:     dp4 r2.x, c5, r1
  37:     dp4 r2.y, c6, r1
  38:     dp4 r2.z, c7, r1
  39:     mov oT4.xyz, r1
  40:     add r0.xyz, r0, r2
  41:     max r0.xyz, r0, c23.y
  42:     mov r0.w, c23.z
  43:     lit r1, r0.xxww
  44:     mov r1.x, r1.z
  45:     lit r2, r0.yyww
  46:     lit r0, r0.zzww
  47:     mov r1.z, r0.z
  48:     mov r1.y, r2.z
  49:     mad r0.xyz, r1, c24.x, c24.y
  50:     max oT5.xyz, r0, c23.y
  51:     mul r0, v0.y, c13
  52:     mad r0, c12, v0.x, r0
  53:     mad r0, c14, v0.z, r0
  54:     mad r0, c15, v0.w, r0
  55:     mad oPos.xy, r0.w, c0, r0
  56:     mov oPos.zw, r0
  57:     mov oT2, c23.y
  58:     mov oT3, c23.y
  59:     mov oT4.w, c23.y
  60:     mov oT5.w, c23.y

// approximately 61 instruction slots used
      vs_4_0
      dcl_constantbuffer cb0[14], immediateIndexed
      dcl_constantbuffer cb1[5], immediateIndexed
      dcl_constantbuffer cb2[45], immediateIndexed
      dcl_constantbuffer cb3[19], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: mad o0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   4: eq r0.x, cb0[13].z, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[11].xxxy, cb0[11].zzzw
   7: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add r0.xyz, r0.xyzx, -cb1[4].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: rsq r0.w, r0.w
  15: mul o2.xyz, r0.wwww, r0.xyzx
  16: mov o3.xyzw, l(0,0,0,0)
  17: mov o4.xyzw, l(0,0,0,0)
  18: mul r0.x, v1.x, cb3[16].x
  19: mul r0.y, v1.x, cb3[17].x
  20: mul r0.z, v1.x, cb3[18].x
  21: mul r1.x, v1.y, cb3[16].y
  22: mul r1.y, v1.y, cb3[17].y
  23: mul r1.z, v1.y, cb3[18].y
  24: add r0.xyz, r0.xyzx, r1.xyzx
  25: mul r1.x, v1.z, cb3[16].z
  26: mul r1.y, v1.z, cb3[17].z
  27: mul r1.z, v1.z, cb3[18].z
  28: add r0.xyz, r0.xyzx, r1.xyzx
  29: dp3 r0.w, r0.xyzx, r0.xyzx
  30: rsq r0.w, r0.w
  31: mul r0.xyz, r0.wwww, r0.xyzx
  32: mov o5.xyz, r0.xyzx
  33: mov o5.w, l(0)
  34: mul r1.x, r0.y, r0.y
  35: mad r1.x, r0.x, r0.x, -r1.x
  36: mul r2.xyzw, r0.yzzx, r0.xyzz
  37: dp4 r3.x, cb2[41].xyzw, r2.xyzw
  38: dp4 r3.y, cb2[42].xyzw, r2.xyzw
  39: dp4 r3.z, cb2[43].xyzw, r2.xyzw
  40: mad r1.xyz, cb2[44].xyzx, r1.xxxx, r3.xyzx
  41: mov r0.w, l(1.000000)
  42: dp4 r2.x, cb2[38].xyzw, r0.xyzw
  43: dp4 r2.y, cb2[39].xyzw, r0.xyzw
  44: dp4 r2.z, cb2[40].xyzw, r0.xyzw
  45: add r0.xyz, r1.xyzx, r2.xyzx
  46: max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  47: log r0.xyz, r0.xyzx
  48: mul r0.xyz, r0.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  49: exp r0.xyz, r0.xyzx
  50: mad r0.xyz, r0.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  51: max o6.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  52: mov o6.w, l(0)
  53: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
// Stats: 50 math, 5 textures
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_ALPHABLEND_ON" }
"#version 120

#ifdef VERTEX
uniform vec3 _WorldSpaceCameraPos;
uniform vec4 _ProjectionParams;
uniform vec4 unity_SHAr;
uniform vec4 unity_SHAg;
uniform vec4 unity_SHAb;
uniform vec4 unity_SHBr;
uniform vec4 unity_SHBg;
uniform vec4 unity_SHBb;
uniform vec4 unity_SHC;

uniform mat4 _Object2World;
uniform mat4 _World2Object;
uniform vec4 unity_ColorSpaceLuminance;
uniform vec4 _MainTex_ST;
uniform vec4 _DetailAlbedoMap_ST;
uniform float _UVSec;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
varying vec4 xlv_TEXCOORD6;
void main ()
{
  vec2 tmpvar_1;
  tmpvar_1 = gl_MultiTexCoord0.xy;
  vec2 tmpvar_2;
  tmpvar_2 = gl_MultiTexCoord1.xy;
  vec4 tmpvar_3;
  vec4 tmpvar_4;
  vec4 tmpvar_5;
  vec4 tmpvar_6;
  vec4 tmpvar_7;
  tmpvar_7 = (_Object2World * gl_Vertex);
  tmpvar_3 = (gl_ModelViewProjectionMatrix * gl_Vertex);
  vec4 texcoord_8;
  texcoord_8.xy = ((gl_MultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  vec2 tmpvar_9;
  if ((_UVSec == 0.0)) {
    tmpvar_9 = tmpvar_1;
  } else {
    tmpvar_9 = tmpvar_2;
  };
  texcoord_8.zw = ((tmpvar_9 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  vec3 tmpvar_10;
  tmpvar_10 = normalize((tmpvar_7.xyz - _WorldSpaceCameraPos));
  vec4 v_11;
  v_11.x = _World2Object[0].x;
  v_11.y = _World2Object[1].x;
  v_11.z = _World2Object[2].x;
  v_11.w = _World2Object[3].x;
  vec4 v_12;
  v_12.x = _World2Object[0].y;
  v_12.y = _World2Object[1].y;
  v_12.z = _World2Object[2].y;
  v_12.w = _World2Object[3].y;
  vec4 v_13;
  v_13.x = _World2Object[0].z;
  v_13.y = _World2Object[1].z;
  v_13.z = _World2Object[2].z;
  v_13.w = _World2Object[3].z;
  vec3 tmpvar_14;
  tmpvar_14 = normalize(((
    (v_11.xyz * gl_Normal.x)
   + 
    (v_12.xyz * gl_Normal.y)
  ) + (v_13.xyz * gl_Normal.z)));
  tmpvar_4.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_5.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_6.xyz = tmpvar_14;
  vec4 o_15;
  vec4 tmpvar_16;
  tmpvar_16 = (tmpvar_3 * 0.5);
  vec2 tmpvar_17;
  tmpvar_17.x = tmpvar_16.x;
  tmpvar_17.y = (tmpvar_16.y * _ProjectionParams.x);
  o_15.xy = (tmpvar_17 + tmpvar_16.w);
  o_15.zw = tmpvar_3.zw;
  vec4 ambientOrLightmapUV_18;
  ambientOrLightmapUV_18 = vec4(0.0, 0.0, 0.0, 0.0);
  vec3 ambient_19;
  ambient_19 = vec3(0.0, 0.0, 0.0);
  vec4 tmpvar_20;
  tmpvar_20.w = 1.0;
  tmpvar_20.xyz = tmpvar_14;
  vec3 res_21;
  vec3 x_22;
  x_22.x = dot (unity_SHAr, tmpvar_20);
  x_22.y = dot (unity_SHAg, tmpvar_20);
  x_22.z = dot (unity_SHAb, tmpvar_20);
  vec3 x1_23;
  vec4 tmpvar_24;
  tmpvar_24 = (tmpvar_14.xyzz * tmpvar_14.yzzx);
  x1_23.x = dot (unity_SHBr, tmpvar_24);
  x1_23.y = dot (unity_SHBg, tmpvar_24);
  x1_23.z = dot (unity_SHBb, tmpvar_24);
  res_21 = (x_22 + (x1_23 + (unity_SHC.xyz * 
    ((tmpvar_14.x * tmpvar_14.x) - (tmpvar_14.y * tmpvar_14.y))
  )));
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    res_21 = max (((1.055 * 
      pow (max (res_21, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
    ) - 0.055), vec3(0.0, 0.0, 0.0));
  };
  ambient_19 = max (vec3(0.0, 0.0, 0.0), res_21);
  ambientOrLightmapUV_18.xyz = ambient_19;
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = texcoord_8;
  xlv_TEXCOORD1 = tmpvar_10;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  xlv_TEXCOORD5 = ambientOrLightmapUV_18;
  xlv_TEXCOORD6 = o_15;
}


#endif
#ifdef FRAGMENT
uniform vec4 _WorldSpaceLightPos0;
uniform samplerCube unity_SpecCube0;
uniform vec4 unity_SpecCube0_HDR;
uniform vec4 unity_ColorSpaceDielectricSpec;
uniform vec4 _LightColor0;
uniform sampler2D unity_NHxRoughness;
uniform vec4 _Color;
uniform sampler2D _MainTex;
uniform float _Metallic;
uniform float _Glossiness;
uniform sampler2D _OcclusionMap;
uniform sampler2D _ShadowMapTexture;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
varying vec4 xlv_TEXCOORD6;
void main ()
{
  vec4 c_1;
  vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  vec3 tmpvar_3;
  tmpvar_3 = (_Color.xyz * tmpvar_2.xyz);
  vec3 tmpvar_4;
  vec3 tmpvar_5;
  tmpvar_5 = mix (unity_ColorSpaceDielectricSpec.xyz, tmpvar_3, vec3(_Metallic));
  float tmpvar_6;
  tmpvar_6 = (unity_ColorSpaceDielectricSpec.w - (_Metallic * unity_ColorSpaceDielectricSpec.w));
  tmpvar_4 = (tmpvar_3 * tmpvar_6);
  vec3 tmpvar_7;
  tmpvar_7 = normalize(xlv_TEXCOORD2_2.xyz);
  float tmpvar_8;
  tmpvar_8 = texture2D (_OcclusionMap, xlv_TEXCOORD0.xy).y;
  vec3 tmpvar_9;
  float tmpvar_10;
  tmpvar_10 = (1.0 - _Glossiness);
  tmpvar_9 = (xlv_TEXCOORD1 - (2.0 * (
    dot (tmpvar_7, xlv_TEXCOORD1)
   * tmpvar_7)));
  vec4 tmpvar_11;
  tmpvar_11.xyz = tmpvar_9;
  tmpvar_11.w = ((tmpvar_10 * (1.7 - 
    (0.7 * tmpvar_10)
  )) * 6.0);
  vec4 tmpvar_12;
  tmpvar_12 = textureCube (unity_SpecCube0, tmpvar_9, tmpvar_11.w);
  vec3 viewDir_13;
  viewDir_13 = -(xlv_TEXCOORD1);
  vec3 color_14;
  vec2 tmpvar_15;
  tmpvar_15.x = dot ((viewDir_13 - (2.0 * 
    (dot (tmpvar_7, viewDir_13) * tmpvar_7)
  )), _WorldSpaceLightPos0.xyz);
  tmpvar_15.y = (1.0 - clamp (dot (tmpvar_7, viewDir_13), 0.0, 1.0));
  vec2 tmpvar_16;
  tmpvar_16 = ((tmpvar_15 * tmpvar_15) * (tmpvar_15 * tmpvar_15));
  vec2 tmpvar_17;
  tmpvar_17.x = tmpvar_16.x;
  tmpvar_17.y = tmpvar_10;
  color_14 = ((tmpvar_4 + (
    (texture2D (unity_NHxRoughness, tmpvar_17).w * 16.0)
   * tmpvar_5)) * ((_LightColor0.xyz * texture2DProj (_ShadowMapTexture, xlv_TEXCOORD6).x) * clamp (
    dot (tmpvar_7, _WorldSpaceLightPos0.xyz)
  , 0.0, 1.0)));
  color_14 = (color_14 + ((
    (xlv_TEXCOORD5.xyz * tmpvar_8)
   * tmpvar_4) + (
    (((unity_SpecCube0_HDR.x * pow (tmpvar_12.w, unity_SpecCube0_HDR.y)) * tmpvar_12.xyz) * tmpvar_8)
   * 
    mix (tmpvar_5, vec3(clamp ((_Glossiness + (1.0 - tmpvar_6)), 0.0, 1.0)), tmpvar_16.yyy)
  )));
  vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = color_14;
  c_1.w = tmpvar_18.w;
  c_1.xyz = color_14;
  c_1.xyz = c_1.xyz;
  vec4 xlat_varoutput_19;
  xlat_varoutput_19.xyz = c_1.xyz;
  xlat_varoutput_19.w = (tmpvar_2.w * _Color.w);
  gl_FragData[0] = xlat_varoutput_19;
}


#endif
"
}
SubProgram "d3d9 " {
// Stats: 62 math
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_ALPHABLEND_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Matrix 4 [_Object2World] 3
Matrix 7 [_World2Object] 3
Matrix 0 [glstate_matrix_mvp]
Vector 22 [_DetailAlbedoMap_ST]
Vector 21 [_MainTex_ST]
Vector 11 [_ProjectionParams]
Vector 12 [_ScreenParams]
Float 23 [_UVSec]
Vector 10 [_WorldSpaceCameraPos]
Vector 20 [unity_ColorSpaceLuminance]
Vector 15 [unity_SHAb]
Vector 14 [unity_SHAg]
Vector 13 [unity_SHAr]
Vector 18 [unity_SHBb]
Vector 17 [unity_SHBg]
Vector 16 [unity_SHBr]
Vector 19 [unity_SHC]
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   row_major float4x4 _Object2World;
//   float4 _ProjectionParams;
//   float4 _ScreenParams;
//   float _UVSec;
//   row_major float4x4 _World2Object;
//   float3 _WorldSpaceCameraPos;
//   row_major float4x4 glstate_matrix_mvp;
//   float4 unity_ColorSpaceLuminance;
//   float4 unity_SHAb;
//   float4 unity_SHAg;
//   float4 unity_SHAr;
//   float4 unity_SHBb;
//   float4 unity_SHBg;
//   float4 unity_SHBr;
//   float4 unity_SHC;
//
//
// Registers:
//
//   Name                      Reg   Size
//   ------------------------- ----- ----
//   glstate_matrix_mvp        c0       4
//   _Object2World             c4       3
//   _World2Object             c7       3
//   _WorldSpaceCameraPos      c10      1
//   _ProjectionParams         c11      1
//   _ScreenParams             c12      1
//   unity_SHAr                c13      1
//   unity_SHAg                c14      1
//   unity_SHAb                c15      1
//   unity_SHBr                c16      1
//   unity_SHBg                c17      1
//   unity_SHBb                c18      1
//   unity_SHC                 c19      1
//   unity_ColorSpaceLuminance c20      1
//   _MainTex_ST               c21      1
//   _DetailAlbedoMap_ST       c22      1
//   _UVSec                    c23      1
//

    vs_2_0
    def c24, 0.5, 1, 0, 0.416666657
    def c25, 1.05499995, -0.0549999997, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    mad oT0.xy, v2, c21, c21.zwzw
    mul r0.x, c23.x, c23.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad oT0.zw, r2.xyxy, c22.xyxy, c22
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add r0.xyz, r0, -c10
    dp3 r0.w, r0, r0
    rsq r0.w, r0.w
    mul oT1.xyz, r0.w, r0
    dp4 r0.y, c1, v0
    mul r1.x, r0.y, c11.x
    mul r1.w, r1.x, c24.x
    dp4 r0.x, c0, v0
    dp4 r0.w, c3, v0
    mul r1.xz, r0.xyww, c24.x
    mad oT6.xy, r1.z, c12.zwzw, r1.xwzw
    mul r1.xyz, v1.y, c8
    mad r1.xyz, c7, v1.x, r1
    mad r1.xyz, c9, v1.z, r1
    nrm r2.xyz, r1
    mul r1.x, r2.y, r2.y
    mad r1.x, r2.x, r2.x, -r1.x
    mul r3, r2.yzzx, r2.xyzz
    dp4 r4.x, c16, r3
    dp4 r4.y, c17, r3
    dp4 r4.z, c18, r3
    mad r1.xyz, c19, r1.x, r4
    mov r2.w, c24.y
    dp4 r3.x, c13, r2
    dp4 r3.y, c14, r2
    dp4 r3.z, c15, r2
    mov oT4.xyz, r2
    add r1.xyz, r1, r3
    max r2.xyz, r1, c24.z
    mov r2.w, c24.w
    lit r3, r2.xxww
    mov r3.x, r3.z
    lit r4, r2.yyww
    lit r2, r2.zzww
    mov r3.z, r2.z
    mov r3.y, r4.z
    mad r2.xyz, r3, c25.x, c25.y
    max r2.xyz, r2, c24.z
    mul r1.w, c20.w, c20.w
    sge r1.w, -r1.w, r1.w
    lrp r3.xyz, r1.w, r2, r1
    max oT5.xyz, r3, c24.z
    dp4 r0.z, c2, v0
    mov oPos, r0
    mov oT6.zw, r0
    mov oT2, c24.z
    mov oT3, c24.z
    mov oT4.w, c24.z
    mov oT5.w, c24.z

// approximately 60 instruction slots used
"
}
SubProgram "d3d11 " {
// Stats: 51 math
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_ALPHABLEND_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
ConstBuffer "$Globals" 240
Vector 48 [unity_ColorSpaceLuminance]
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
Vector 80 [_ProjectionParams]
ConstBuffer "UnityLighting" 720
Vector 608 [unity_SHAr]
Vector 624 [unity_SHAg]
Vector 640 [unity_SHAb]
Vector 656 [unity_SHBr]
Vector 672 [unity_SHBg]
Vector 688 [unity_SHBb]
Vector 704 [unity_SHC]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer cb0[14], immediateIndexed
      dcl_constantbuffer cb1[6], immediateIndexed
      dcl_constantbuffer cb2[45], immediateIndexed
      dcl_constantbuffer cb3[19], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 5
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   4: mov o0.xyzw, r0.xyzw
   5: eq r1.x, cb0[13].z, l(0.000000)
   6: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
   7: mad o1.zw, r1.xxxy, cb0[11].xxxy, cb0[11].zzzw
   8: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   9: mul r1.xyz, v0.yyyy, cb3[13].xyzx
  10: mad r1.xyz, cb3[12].xyzx, v0.xxxx, r1.xyzx
  11: mad r1.xyz, cb3[14].xyzx, v0.zzzz, r1.xyzx
  12: mad r1.xyz, cb3[15].xyzx, v0.wwww, r1.xyzx
  13: add r1.xyz, r1.xyzx, -cb1[4].xyzx
  14: dp3 r1.w, r1.xyzx, r1.xyzx
  15: rsq r1.w, r1.w
  16: mul o2.xyz, r1.wwww, r1.xyzx
  17: mov o3.xyzw, l(0,0,0,0)
  18: mov o4.xyzw, l(0,0,0,0)
  19: mul r1.x, v1.x, cb3[16].x
  20: mul r1.y, v1.x, cb3[17].x
  21: mul r1.z, v1.x, cb3[18].x
  22: mul r2.x, v1.y, cb3[16].y
  23: mul r2.y, v1.y, cb3[17].y
  24: mul r2.z, v1.y, cb3[18].y
  25: add r1.xyz, r1.xyzx, r2.xyzx
  26: mul r2.x, v1.z, cb3[16].z
  27: mul r2.y, v1.z, cb3[17].z
  28: mul r2.z, v1.z, cb3[18].z
  29: add r1.xyz, r1.xyzx, r2.xyzx
  30: dp3 r1.w, r1.xyzx, r1.xyzx
  31: rsq r1.w, r1.w
  32: mul r1.xyz, r1.wwww, r1.xyzx
  33: mov o5.xyz, r1.xyzx
  34: mov o5.w, l(0)
  35: mul r2.x, r1.y, r1.y
  36: mad r2.x, r1.x, r1.x, -r2.x
  37: mul r3.xyzw, r1.yzzx, r1.xyzz
  38: dp4 r4.x, cb2[41].xyzw, r3.xyzw
  39: dp4 r4.y, cb2[42].xyzw, r3.xyzw
  40: dp4 r4.z, cb2[43].xyzw, r3.xyzw
  41: mad r2.xyz, cb2[44].xyzx, r2.xxxx, r4.xyzx
  42: mov r1.w, l(1.000000)
  43: dp4 r3.x, cb2[38].xyzw, r1.xyzw
  44: dp4 r3.y, cb2[39].xyzw, r1.xyzw
  45: dp4 r3.z, cb2[40].xyzw, r1.xyzw
  46: add r1.xyz, r2.xyzx, r3.xyzx
  47: max r2.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  48: log r2.xyz, r2.xyzx
  49: mul r2.xyz, r2.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  50: exp r2.xyz, r2.xyzx
  51: mad r2.xyz, r2.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  52: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  53: eq r1.w, cb0[3].w, l(0.000000)
  54: movc r1.xyz, r1.wwww, r2.xyzx, r1.xyzx
  55: max o6.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  56: mov o6.w, l(0)
  57: mul r0.y, r0.y, cb1[5].x
  58: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  59: mov o7.zw, r0.zzzw
  60: add o7.xy, r1.zzzz, r1.xwxx
  61: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "d3d11_9x " {
// Stats: 49 math
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_ALPHABLEND_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
ConstBuffer "$Globals" 240
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
Vector 80 [_ProjectionParams]
ConstBuffer "UnityLighting" 720
Vector 608 [unity_SHAr]
Vector 624 [unity_SHAg]
Vector 640 [unity_SHAb]
Vector 656 [unity_SHBr]
Vector 672 [unity_SHBg]
Vector 688 [unity_SHBb]
Vector 704 [unity_SHC]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c1         cb0            10         2  ( FLT, FLT, FLT, FLT)
// c3         cb0            13         1  ( FLT, FLT, FLT, FLT)
// c4         cb1             4         2  ( FLT, FLT, FLT, FLT)
// c6         cb2            38         7  ( FLT, FLT, FLT, FLT)
// c13        cb3             0         4  ( FLT, FLT, FLT, FLT)
// c17        cb3            12         7  ( FLT, FLT, FLT, FLT)
//
//
// Runtime generated constant mappings:
//
// Target Reg                               Constant Description
// ---------- --------------------------------------------------
// c0                              Vertex Shader position offset
//
//
// Level9 shader bytecode:
//
    vs_2_0
          def c24, 0.5, 1, 0, 0.416666657
          def c25, 1.05499995, -0.0549999997, 0, 0
          dcl_texcoord v0
          dcl_texcoord1 v1
          dcl_texcoord2 v2
          dcl_texcoord3 v3
   0:     mad oT0.xy, v2, c1, c1.zwzw
   1:     mul r0.x, c3.z, c3.z
   2:     sge r0.x, -r0.x, r0.x
   3:     mov r1.xy, v2
   4:     lrp r2.xy, r0.x, r1, v3
   5:     mad oT0.zw, r2.xyxy, c2.xyxy, c2
   6:     mul r0.xyz, v0.y, c18
   7:     mad r0.xyz, c17, v0.x, r0
   8:     mad r0.xyz, c19, v0.z, r0
   9:     mad r0.xyz, c20, v0.w, r0
  10:     add r0.xyz, r0, -c4
  11:     dp3 r0.w, r0, r0
  12:     rsq r0.w, r0.w
  13:     mul oT1.xyz, r0.w, r0
  14:     mul r0, v0.y, c14
  15:     mad r0, c13, v0.x, r0
  16:     mad r0, c15, v0.z, r0
  17:     mad r0, c16, v0.w, r0
  18:     mul r1.x, r0.y, c5.x
  19:     mul r1.w, r1.x, c24.x
  20:     mul r1.xz, r0.xyww, c24.x
  21:     add oT6.xy, r1.z, r1.xwzw
  22:     mul r1.x, v1.x, c21.x
  23:     mul r1.y, v1.x, c22.x
  24:     mul r1.z, v1.x, c23.x
  25:     mul r2.x, v1.y, c21.y
  26:     mul r2.y, v1.y, c22.y
  27:     mul r2.z, v1.y, c23.y
  28:     add r1.xyz, r1, r2
  29:     mul r2.x, v1.z, c21.z
  30:     mul r2.y, v1.z, c22.z
  31:     mul r2.z, v1.z, c23.z
  32:     add r1.xyz, r1, r2
  33:     nrm r2.xyz, r1
  36:     mul r1.x, r2.y, r2.y
  37:     mad r1.x, r2.x, r2.x, -r1.x
  38:     mul r3, r2.yzzx, r2.xyzz
  39:     dp4 r4.x, c9, r3
  40:     dp4 r4.y, c10, r3
  41:     dp4 r4.z, c11, r3
  42:     mad r1.xyz, c12, r1.x, r4
  43:     mov r2.w, c24.y
  44:     dp4 r3.x, c6, r2
  45:     dp4 r3.y, c7, r2
  46:     dp4 r3.z, c8, r2
  47:     mov oT4.xyz, r2
  48:     add r1.xyz, r1, r3
  49:     max r1.xyz, r1, c24.z
  50:     mov r1.w, c24.w
  51:     lit r2, r1.xxww
  52:     mov r2.x, r2.z
  53:     lit r3, r1.yyww
  54:     lit r1, r1.zzww
  55:     mov r2.z, r1.z
  56:     mov r2.y, r3.z
  57:     mad r1.xyz, r2, c25.x, c25.y
  58:     max oT5.xyz, r1, c24.z
  59:     mad oPos.xy, r0.w, c0, r0
  60:     mov oPos.zw, r0
  61:     mov oT6.zw, r0
  62:     mov oT2, c24.z
  63:     mov oT3, c24.z
  64:     mov oT4.w, c24.z
  65:     mov oT5.w, c24.z

// approximately 66 instruction slots used
      vs_4_0
      dcl_constantbuffer cb0[14], immediateIndexed
      dcl_constantbuffer cb1[6], immediateIndexed
      dcl_constantbuffer cb2[45], immediateIndexed
      dcl_constantbuffer cb3[19], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 5
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   4: mov o0.xyzw, r0.xyzw
   5: eq r1.x, cb0[13].z, l(0.000000)
   6: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
   7: mad o1.zw, r1.xxxy, cb0[11].xxxy, cb0[11].zzzw
   8: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   9: mul r1.xyz, v0.yyyy, cb3[13].xyzx
  10: mad r1.xyz, cb3[12].xyzx, v0.xxxx, r1.xyzx
  11: mad r1.xyz, cb3[14].xyzx, v0.zzzz, r1.xyzx
  12: mad r1.xyz, cb3[15].xyzx, v0.wwww, r1.xyzx
  13: add r1.xyz, r1.xyzx, -cb1[4].xyzx
  14: dp3 r1.w, r1.xyzx, r1.xyzx
  15: rsq r1.w, r1.w
  16: mul o2.xyz, r1.wwww, r1.xyzx
  17: mov o3.xyzw, l(0,0,0,0)
  18: mov o4.xyzw, l(0,0,0,0)
  19: mul r1.x, v1.x, cb3[16].x
  20: mul r1.y, v1.x, cb3[17].x
  21: mul r1.z, v1.x, cb3[18].x
  22: mul r2.x, v1.y, cb3[16].y
  23: mul r2.y, v1.y, cb3[17].y
  24: mul r2.z, v1.y, cb3[18].y
  25: add r1.xyz, r1.xyzx, r2.xyzx
  26: mul r2.x, v1.z, cb3[16].z
  27: mul r2.y, v1.z, cb3[17].z
  28: mul r2.z, v1.z, cb3[18].z
  29: add r1.xyz, r1.xyzx, r2.xyzx
  30: dp3 r1.w, r1.xyzx, r1.xyzx
  31: rsq r1.w, r1.w
  32: mul r1.xyz, r1.wwww, r1.xyzx
  33: mov o5.xyz, r1.xyzx
  34: mov o5.w, l(0)
  35: mul r2.x, r1.y, r1.y
  36: mad r2.x, r1.x, r1.x, -r2.x
  37: mul r3.xyzw, r1.yzzx, r1.xyzz
  38: dp4 r4.x, cb2[41].xyzw, r3.xyzw
  39: dp4 r4.y, cb2[42].xyzw, r3.xyzw
  40: dp4 r4.z, cb2[43].xyzw, r3.xyzw
  41: mad r2.xyz, cb2[44].xyzx, r2.xxxx, r4.xyzx
  42: mov r1.w, l(1.000000)
  43: dp4 r3.x, cb2[38].xyzw, r1.xyzw
  44: dp4 r3.y, cb2[39].xyzw, r1.xyzw
  45: dp4 r3.z, cb2[40].xyzw, r1.xyzw
  46: add r1.xyz, r2.xyzx, r3.xyzx
  47: max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  48: log r1.xyz, r1.xyzx
  49: mul r1.xyz, r1.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  50: exp r1.xyz, r1.xyzx
  51: mad r1.xyz, r1.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  52: max o6.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  53: mov o6.w, l(0)
  54: mul r0.y, r0.y, cb1[5].x
  55: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  56: mov o7.zw, r0.zzzw
  57: add o7.xy, r1.zzzz, r1.xwxx
  58: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
// Stats: 49 math, 4 textures
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" "_ALPHABLEND_ON" }
"#version 120

#ifdef VERTEX
uniform vec3 _WorldSpaceCameraPos;
uniform vec4 unity_4LightPosX0;
uniform vec4 unity_4LightPosY0;
uniform vec4 unity_4LightPosZ0;
uniform vec4 unity_4LightAtten0;
uniform vec4 unity_LightColor[8];
uniform vec4 unity_SHAr;
uniform vec4 unity_SHAg;
uniform vec4 unity_SHAb;
uniform vec4 unity_SHBr;
uniform vec4 unity_SHBg;
uniform vec4 unity_SHBb;
uniform vec4 unity_SHC;

uniform mat4 _Object2World;
uniform mat4 _World2Object;
uniform vec4 unity_ColorSpaceLuminance;
uniform vec4 _MainTex_ST;
uniform vec4 _DetailAlbedoMap_ST;
uniform float _UVSec;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
void main ()
{
  vec2 tmpvar_1;
  tmpvar_1 = gl_MultiTexCoord0.xy;
  vec2 tmpvar_2;
  tmpvar_2 = gl_MultiTexCoord1.xy;
  vec4 tmpvar_3;
  vec4 tmpvar_4;
  vec4 tmpvar_5;
  vec4 tmpvar_6;
  vec4 tmpvar_7;
  tmpvar_7 = (_Object2World * gl_Vertex);
  tmpvar_3 = (gl_ModelViewProjectionMatrix * gl_Vertex);
  vec4 texcoord_8;
  texcoord_8.xy = ((gl_MultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  vec2 tmpvar_9;
  if ((_UVSec == 0.0)) {
    tmpvar_9 = tmpvar_1;
  } else {
    tmpvar_9 = tmpvar_2;
  };
  texcoord_8.zw = ((tmpvar_9 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  vec3 tmpvar_10;
  tmpvar_10 = normalize((tmpvar_7.xyz - _WorldSpaceCameraPos));
  vec4 v_11;
  v_11.x = _World2Object[0].x;
  v_11.y = _World2Object[1].x;
  v_11.z = _World2Object[2].x;
  v_11.w = _World2Object[3].x;
  vec4 v_12;
  v_12.x = _World2Object[0].y;
  v_12.y = _World2Object[1].y;
  v_12.z = _World2Object[2].y;
  v_12.w = _World2Object[3].y;
  vec4 v_13;
  v_13.x = _World2Object[0].z;
  v_13.y = _World2Object[1].z;
  v_13.z = _World2Object[2].z;
  v_13.w = _World2Object[3].z;
  vec3 tmpvar_14;
  tmpvar_14 = normalize(((
    (v_11.xyz * gl_Normal.x)
   + 
    (v_12.xyz * gl_Normal.y)
  ) + (v_13.xyz * gl_Normal.z)));
  tmpvar_4.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_5.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_6.xyz = tmpvar_14;
  vec4 ambientOrLightmapUV_15;
  ambientOrLightmapUV_15.w = 0.0;
  vec3 col_16;
  vec4 ndotl_17;
  vec4 lengthSq_18;
  vec4 tmpvar_19;
  tmpvar_19 = (unity_4LightPosX0 - tmpvar_7.x);
  vec4 tmpvar_20;
  tmpvar_20 = (unity_4LightPosY0 - tmpvar_7.y);
  vec4 tmpvar_21;
  tmpvar_21 = (unity_4LightPosZ0 - tmpvar_7.z);
  lengthSq_18 = (tmpvar_19 * tmpvar_19);
  lengthSq_18 = (lengthSq_18 + (tmpvar_20 * tmpvar_20));
  lengthSq_18 = (lengthSq_18 + (tmpvar_21 * tmpvar_21));
  ndotl_17 = (tmpvar_19 * tmpvar_14.x);
  ndotl_17 = (ndotl_17 + (tmpvar_20 * tmpvar_14.y));
  ndotl_17 = (ndotl_17 + (tmpvar_21 * tmpvar_14.z));
  vec4 tmpvar_22;
  tmpvar_22 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_17 * inversesqrt(lengthSq_18)));
  ndotl_17 = tmpvar_22;
  vec4 tmpvar_23;
  tmpvar_23 = (tmpvar_22 * (1.0/((1.0 + 
    (lengthSq_18 * unity_4LightAtten0)
  ))));
  col_16 = (unity_LightColor[0].xyz * tmpvar_23.x);
  col_16 = (col_16 + (unity_LightColor[1].xyz * tmpvar_23.y));
  col_16 = (col_16 + (unity_LightColor[2].xyz * tmpvar_23.z));
  col_16 = (col_16 + (unity_LightColor[3].xyz * tmpvar_23.w));
  ambientOrLightmapUV_15.xyz = col_16;
  vec3 ambient_24;
  ambient_24 = ambientOrLightmapUV_15.xyz;
  vec4 tmpvar_25;
  tmpvar_25.w = 1.0;
  tmpvar_25.xyz = tmpvar_14;
  vec3 res_26;
  vec3 x_27;
  x_27.x = dot (unity_SHAr, tmpvar_25);
  x_27.y = dot (unity_SHAg, tmpvar_25);
  x_27.z = dot (unity_SHAb, tmpvar_25);
  vec3 x1_28;
  vec4 tmpvar_29;
  tmpvar_29 = (tmpvar_14.xyzz * tmpvar_14.yzzx);
  x1_28.x = dot (unity_SHBr, tmpvar_29);
  x1_28.y = dot (unity_SHBg, tmpvar_29);
  x1_28.z = dot (unity_SHBb, tmpvar_29);
  res_26 = (x_27 + (x1_28 + (unity_SHC.xyz * 
    ((tmpvar_14.x * tmpvar_14.x) - (tmpvar_14.y * tmpvar_14.y))
  )));
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    res_26 = max (((1.055 * 
      pow (max (res_26, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
    ) - 0.055), vec3(0.0, 0.0, 0.0));
  };
  ambient_24 = (col_16 + max (vec3(0.0, 0.0, 0.0), res_26));
  ambientOrLightmapUV_15.xyz = ambient_24;
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = texcoord_8;
  xlv_TEXCOORD1 = tmpvar_10;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  xlv_TEXCOORD5 = ambientOrLightmapUV_15;
}


#endif
#ifdef FRAGMENT
uniform vec4 _WorldSpaceLightPos0;
uniform samplerCube unity_SpecCube0;
uniform vec4 unity_SpecCube0_HDR;
uniform vec4 unity_ColorSpaceDielectricSpec;
uniform vec4 _LightColor0;
uniform sampler2D unity_NHxRoughness;
uniform vec4 _Color;
uniform sampler2D _MainTex;
uniform float _Metallic;
uniform float _Glossiness;
uniform sampler2D _OcclusionMap;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
void main ()
{
  vec4 c_1;
  vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  vec3 tmpvar_3;
  tmpvar_3 = (_Color.xyz * tmpvar_2.xyz);
  vec3 tmpvar_4;
  vec3 tmpvar_5;
  tmpvar_5 = mix (unity_ColorSpaceDielectricSpec.xyz, tmpvar_3, vec3(_Metallic));
  float tmpvar_6;
  tmpvar_6 = (unity_ColorSpaceDielectricSpec.w - (_Metallic * unity_ColorSpaceDielectricSpec.w));
  tmpvar_4 = (tmpvar_3 * tmpvar_6);
  vec3 tmpvar_7;
  tmpvar_7 = normalize(xlv_TEXCOORD2_2.xyz);
  float tmpvar_8;
  tmpvar_8 = texture2D (_OcclusionMap, xlv_TEXCOORD0.xy).y;
  vec3 tmpvar_9;
  float tmpvar_10;
  tmpvar_10 = (1.0 - _Glossiness);
  tmpvar_9 = (xlv_TEXCOORD1 - (2.0 * (
    dot (tmpvar_7, xlv_TEXCOORD1)
   * tmpvar_7)));
  vec4 tmpvar_11;
  tmpvar_11.xyz = tmpvar_9;
  tmpvar_11.w = ((tmpvar_10 * (1.7 - 
    (0.7 * tmpvar_10)
  )) * 6.0);
  vec4 tmpvar_12;
  tmpvar_12 = textureCube (unity_SpecCube0, tmpvar_9, tmpvar_11.w);
  vec3 viewDir_13;
  viewDir_13 = -(xlv_TEXCOORD1);
  vec3 color_14;
  vec2 tmpvar_15;
  tmpvar_15.x = dot ((viewDir_13 - (2.0 * 
    (dot (tmpvar_7, viewDir_13) * tmpvar_7)
  )), _WorldSpaceLightPos0.xyz);
  tmpvar_15.y = (1.0 - clamp (dot (tmpvar_7, viewDir_13), 0.0, 1.0));
  vec2 tmpvar_16;
  tmpvar_16 = ((tmpvar_15 * tmpvar_15) * (tmpvar_15 * tmpvar_15));
  vec2 tmpvar_17;
  tmpvar_17.x = tmpvar_16.x;
  tmpvar_17.y = tmpvar_10;
  color_14 = ((tmpvar_4 + (
    (texture2D (unity_NHxRoughness, tmpvar_17).w * 16.0)
   * tmpvar_5)) * (_LightColor0.xyz * clamp (
    dot (tmpvar_7, _WorldSpaceLightPos0.xyz)
  , 0.0, 1.0)));
  color_14 = (color_14 + ((
    (xlv_TEXCOORD5.xyz * tmpvar_8)
   * tmpvar_4) + (
    (((unity_SpecCube0_HDR.x * pow (tmpvar_12.w, unity_SpecCube0_HDR.y)) * tmpvar_12.xyz) * tmpvar_8)
   * 
    mix (tmpvar_5, vec3(clamp ((_Glossiness + (1.0 - tmpvar_6)), 0.0, 1.0)), tmpvar_16.yyy)
  )));
  vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = color_14;
  c_1.w = tmpvar_18.w;
  c_1.xyz = color_14;
  c_1.xyz = c_1.xyz;
  vec4 xlat_varoutput_19;
  xlat_varoutput_19.xyz = c_1.xyz;
  xlat_varoutput_19.w = (tmpvar_2.w * _Color.w);
  gl_FragData[0] = xlat_varoutput_19;
}


#endif
"
}
SubProgram "d3d9 " {
// Stats: 83 math
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" "_ALPHABLEND_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Matrix 8 [_Object2World] 3
Matrix 11 [_World2Object] 3
Matrix 4 [glstate_matrix_mvp]
Vector 28 [_DetailAlbedoMap_ST]
Vector 27 [_MainTex_ST]
Float 29 [_UVSec]
Vector 14 [_WorldSpaceCameraPos]
Vector 18 [unity_4LightAtten0]
Vector 15 [unity_4LightPosX0]
Vector 16 [unity_4LightPosY0]
Vector 17 [unity_4LightPosZ0]
Vector 26 [unity_ColorSpaceLuminance]
Vector 0 [unity_LightColor0]
Vector 1 [unity_LightColor1]
Vector 2 [unity_LightColor2]
Vector 3 [unity_LightColor3]
Vector 21 [unity_SHAb]
Vector 20 [unity_SHAg]
Vector 19 [unity_SHAr]
Vector 24 [unity_SHBb]
Vector 23 [unity_SHBg]
Vector 22 [unity_SHBr]
Vector 25 [unity_SHC]
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   row_major float4x4 _Object2World;
//   float _UVSec;
//   row_major float4x4 _World2Object;
//   float3 _WorldSpaceCameraPos;
//   row_major float4x4 glstate_matrix_mvp;
//   float4 unity_4LightAtten0;
//   float4 unity_4LightPosX0;
//   float4 unity_4LightPosY0;
//   float4 unity_4LightPosZ0;
//   float4 unity_ColorSpaceLuminance;
//   float4 unity_LightColor[8];
//   float4 unity_SHAb;
//   float4 unity_SHAg;
//   float4 unity_SHAr;
//   float4 unity_SHBb;
//   float4 unity_SHBg;
//   float4 unity_SHBr;
//   float4 unity_SHC;
//
//
// Registers:
//
//   Name                      Reg   Size
//   ------------------------- ----- ----
//   unity_LightColor          c0       4
//   glstate_matrix_mvp        c4       4
//   _Object2World             c8       3
//   _World2Object             c11      3
//   _WorldSpaceCameraPos      c14      1
//   unity_4LightPosX0         c15      1
//   unity_4LightPosY0         c16      1
//   unity_4LightPosZ0         c17      1
//   unity_4LightAtten0        c18      1
//   unity_SHAr                c19      1
//   unity_SHAg                c20      1
//   unity_SHAb                c21      1
//   unity_SHBr                c22      1
//   unity_SHBg                c23      1
//   unity_SHBb                c24      1
//   unity_SHC                 c25      1
//   unity_ColorSpaceLuminance c26      1
//   _MainTex_ST               c27      1
//   _DetailAlbedoMap_ST       c28      1
//   _UVSec                    c29      1
//

    vs_2_0
    def c30, 0, 1, 0.416666657, 0
    def c31, 1.05499995, -0.0549999997, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dp4 oPos.x, c4, v0
    dp4 oPos.y, c5, v0
    dp4 oPos.z, c6, v0
    dp4 oPos.w, c7, v0
    mad oT0.xy, v2, c27, c27.zwzw
    mul r0.x, c29.x, c29.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad oT0.zw, r2.xyxy, c28.xyxy, c28
    dp4 r0.x, c8, v0
    dp4 r0.y, c9, v0
    dp4 r0.z, c10, v0
    add r1.xyz, r0, -c14
    add r2, -r0.x, c15
    add r3, -r0.y, c16
    add r0, -r0.z, c17
    dp3 r1.w, r1, r1
    rsq r1.w, r1.w
    mul oT1.xyz, r1.w, r1
    mul r1, r3, r3
    mad r1, r2, r2, r1
    mad r1, r0, r0, r1
    rsq r4.x, r1.x
    rsq r4.y, r1.y
    rsq r4.z, r1.z
    rsq r4.w, r1.w
    mov r5.y, c30.y
    mad r1, r1, c18, r5.y
    mul r5.xyz, v1.y, c12
    mad r5.xyz, c11, v1.x, r5
    mad r5.xyz, c13, v1.z, r5
    nrm r6.xyz, r5
    mul r3, r3, r6.y
    mad r2, r2, r6.x, r3
    mad r0, r0, r6.z, r2
    mul r0, r4, r0
    max r0, r0, c30.x
    rcp r2.x, r1.x
    rcp r2.y, r1.y
    rcp r2.z, r1.z
    rcp r2.w, r1.w
    mul r0, r0, r2
    mul r1.xyz, r0.y, c1
    mad r1.xyz, c0, r0.x, r1
    mad r0.xyz, c2, r0.z, r1
    mad r0.xyz, c3, r0.w, r0
    mul r0.w, r6.y, r6.y
    mad r0.w, r6.x, r6.x, -r0.w
    mul r1, r6.yzzx, r6.xyzz
    dp4 r2.x, c22, r1
    dp4 r2.y, c23, r1
    dp4 r2.z, c24, r1
    mad r1.xyz, c25, r0.w, r2
    mov r6.w, c30.y
    dp4 r2.x, c19, r6
    dp4 r2.y, c20, r6
    dp4 r2.z, c21, r6
    mov oT4.xyz, r6
    add r1.xyz, r1, r2
    max r2.xyz, r1, c30.x
    mov r2.w, c30.z
    lit r3, r2.xxww
    mov r3.x, r3.z
    lit r4, r2.yyww
    lit r2, r2.zzww
    mov r3.z, r2.z
    mov r3.y, r4.z
    mad r2.xyz, r3, c31.x, c31.y
    max r2.xyz, r2, c30.x
    mul r0.w, c26.w, c26.w
    sge r0.w, -r0.w, r0.w
    lrp r3.xyz, r0.w, r2, r1
    max r1.xyz, r3, c30.x
    add oT5.xyz, r0, r1
    mov oT2, c30.x
    mov oT3, c30.x
    mov oT4.w, c30.x
    mov oT5.w, c30.x

// approximately 81 instruction slots used
"
}
SubProgram "d3d11 " {
// Stats: 68 math
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" "_ALPHABLEND_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
ConstBuffer "$Globals" 240
Vector 48 [unity_ColorSpaceLuminance]
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 32 [unity_4LightPosX0]
Vector 48 [unity_4LightPosY0]
Vector 64 [unity_4LightPosZ0]
Vector 80 [unity_4LightAtten0]
Vector 96 [unity_LightColor0]
Vector 112 [unity_LightColor1]
Vector 128 [unity_LightColor2]
Vector 144 [unity_LightColor3]
Vector 160 [unity_LightColor4]
Vector 176 [unity_LightColor5]
Vector 192 [unity_LightColor6]
Vector 208 [unity_LightColor7]
Vector 608 [unity_SHAr]
Vector 624 [unity_SHAg]
Vector 640 [unity_SHAb]
Vector 656 [unity_SHBr]
Vector 672 [unity_SHBg]
Vector 688 [unity_SHBb]
Vector 704 [unity_SHC]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer cb0[14], immediateIndexed
      dcl_constantbuffer cb1[5], immediateIndexed
      dcl_constantbuffer cb2[45], immediateIndexed
      dcl_constantbuffer cb3[19], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 6
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: mad o0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   4: eq r0.x, cb0[13].z, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[11].xxxy, cb0[11].zzzw
   7: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: rsq r0.w, r0.w
  15: mul o2.xyz, r0.wwww, r1.xyzx
  16: mov o3.xyzw, l(0,0,0,0)
  17: mov o4.xyzw, l(0,0,0,0)
  18: mov o5.w, l(0)
  19: mul r1.x, v1.x, cb3[16].x
  20: mul r1.y, v1.x, cb3[17].x
  21: mul r1.z, v1.x, cb3[18].x
  22: mul r2.x, v1.y, cb3[16].y
  23: mul r2.y, v1.y, cb3[17].y
  24: mul r2.z, v1.y, cb3[18].y
  25: add r1.xyz, r1.xyzx, r2.xyzx
  26: mul r2.x, v1.z, cb3[16].z
  27: mul r2.y, v1.z, cb3[17].z
  28: mul r2.z, v1.z, cb3[18].z
  29: add r1.xyz, r1.xyzx, r2.xyzx
  30: dp3 r0.w, r1.xyzx, r1.xyzx
  31: rsq r0.w, r0.w
  32: mul r1.xyz, r0.wwww, r1.xyzx
  33: mov o5.xyz, r1.xyzx
  34: mul r0.w, r1.y, r1.y
  35: mad r0.w, r1.x, r1.x, -r0.w
  36: mul r2.xyzw, r1.yzzx, r1.xyzz
  37: dp4 r3.x, cb2[41].xyzw, r2.xyzw
  38: dp4 r3.y, cb2[42].xyzw, r2.xyzw
  39: dp4 r3.z, cb2[43].xyzw, r2.xyzw
  40: mad r2.xyz, cb2[44].xyzx, r0.wwww, r3.xyzx
  41: mov r1.w, l(1.000000)
  42: dp4 r3.x, cb2[38].xyzw, r1.xyzw
  43: dp4 r3.y, cb2[39].xyzw, r1.xyzw
  44: dp4 r3.z, cb2[40].xyzw, r1.xyzw
  45: add r2.xyz, r2.xyzx, r3.xyzx
  46: max r3.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  47: log r3.xyz, r3.xyzx
  48: mul r3.xyz, r3.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  49: exp r3.xyz, r3.xyzx
  50: mad r3.xyz, r3.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  51: max r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  52: eq r0.w, cb0[3].w, l(0.000000)
  53: movc r2.xyz, r0.wwww, r3.xyzx, r2.xyzx
  54: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  55: add r3.xyzw, -r0.yyyy, cb2[3].xyzw
  56: mul r4.xyzw, r1.yyyy, r3.xyzw
  57: mul r3.xyzw, r3.xyzw, r3.xyzw
  58: add r5.xyzw, -r0.xxxx, cb2[2].xyzw
  59: add r0.xyzw, -r0.zzzz, cb2[4].xyzw
  60: mad r4.xyzw, r5.xyzw, r1.xxxx, r4.xyzw
  61: mad r1.xyzw, r0.xyzw, r1.zzzz, r4.xyzw
  62: mad r3.xyzw, r5.xyzw, r5.xyzw, r3.xyzw
  63: mad r0.xyzw, r0.xyzw, r0.xyzw, r3.xyzw
  64: rsq r3.xyzw, r0.xyzw
  65: mad r0.xyzw, r0.xyzw, cb2[5].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  66: div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
  67: mul r1.xyzw, r1.xyzw, r3.xyzw
  68: max r1.xyzw, r1.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  69: mul r0.xyzw, r0.xyzw, r1.xyzw
  70: mul r1.xyz, r0.yyyy, cb2[7].xyzx
  71: mad r1.xyz, cb2[6].xyzx, r0.xxxx, r1.xyzx
  72: mad r0.xyz, cb2[8].xyzx, r0.zzzz, r1.xyzx
  73: mad r0.xyz, cb2[9].xyzx, r0.wwww, r0.xyzx
  74: add o6.xyz, r2.xyzx, r0.xyzx
  75: mov o6.w, l(0)
  76: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "d3d11_9x " {
// Stats: 66 math
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" "_ALPHABLEND_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
ConstBuffer "$Globals" 240
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 32 [unity_4LightPosX0]
Vector 48 [unity_4LightPosY0]
Vector 64 [unity_4LightPosZ0]
Vector 80 [unity_4LightAtten0]
Vector 96 [unity_LightColor0]
Vector 112 [unity_LightColor1]
Vector 128 [unity_LightColor2]
Vector 144 [unity_LightColor3]
Vector 160 [unity_LightColor4]
Vector 176 [unity_LightColor5]
Vector 192 [unity_LightColor6]
Vector 208 [unity_LightColor7]
Vector 608 [unity_SHAr]
Vector 624 [unity_SHAg]
Vector 640 [unity_SHAb]
Vector 656 [unity_SHBr]
Vector 672 [unity_SHBg]
Vector 688 [unity_SHBb]
Vector 704 [unity_SHC]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c1         cb0            10         2  ( FLT, FLT, FLT, FLT)
// c3         cb0            13         1  ( FLT, FLT, FLT, FLT)
// c4         cb1             4         1  ( FLT, FLT, FLT, FLT)
// c5         cb2             2         8  ( FLT, FLT, FLT, FLT)
// c13        cb2            38         7  ( FLT, FLT, FLT, FLT)
// c20        cb3             0         4  ( FLT, FLT, FLT, FLT)
// c24        cb3            12         7  ( FLT, FLT, FLT, FLT)
//
//
// Runtime generated constant mappings:
//
// Target Reg                               Constant Description
// ---------- --------------------------------------------------
// c0                              Vertex Shader position offset
//
//
// Level9 shader bytecode:
//
    vs_2_0
          def c31, 0, 1, 0.416666657, 0
          def c32, 1.05499995, -0.0549999997, 0, 0
          dcl_texcoord v0
          dcl_texcoord1 v1
          dcl_texcoord2 v2
          dcl_texcoord3 v3
   0:     mad oT0.xy, v2, c1, c1.zwzw
   1:     mul r0.x, c3.z, c3.z
   2:     sge r0.x, -r0.x, r0.x
   3:     mov r1.xy, v2
   4:     lrp r2.xy, r0.x, r1, v3
   5:     mad oT0.zw, r2.xyxy, c2.xyxy, c2
   6:     mul r0.xyz, v0.y, c25
   7:     mad r0.xyz, c24, v0.x, r0
   8:     mad r0.xyz, c26, v0.z, r0
   9:     mad r0.xyz, c27, v0.w, r0
  10:     add r1.xyz, r0, -c4
  11:     dp3 r0.w, r1, r1
  12:     rsq r0.w, r0.w
  13:     mul oT1.xyz, r0.w, r1
  14:     add r1, -r0.x, c5
  15:     add r2, -r0.y, c6
  16:     add r0, -r0.z, c7
  17:     mul r3.x, v1.x, c28.x
  18:     mul r3.y, v1.x, c29.x
  19:     mul r3.z, v1.x, c30.x
  20:     mul r4.x, v1.y, c28.y
  21:     mul r4.y, v1.y, c29.y
  22:     mul r4.z, v1.y, c30.y
  23:     add r3.xyz, r3, r4
  24:     mul r4.x, v1.z, c28.z
  25:     mul r4.y, v1.z, c29.z
  26:     mul r4.z, v1.z, c30.z
  27:     add r3.xyz, r3, r4
  28:     nrm r4.xyz, r3
  31:     mul r3, r2, r4.y
  32:     mul r2, r2, r2
  33:     mad r2, r1, r1, r2
  34:     mad r1, r1, r4.x, r3
  35:     mad r1, r0, r4.z, r1
  36:     mad r0, r0, r0, r2
  37:     rsq r2.x, r0.x
  38:     rsq r2.y, r0.y
  39:     rsq r2.z, r0.z
  40:     rsq r2.w, r0.w
  41:     mov r3.y, c31.y
  42:     mad r0, r0, c8, r3.y
  43:     mul r1, r1, r2
  44:     max r1, r1, c31.x
  45:     rcp r2.x, r0.x
  46:     rcp r2.y, r0.y
  47:     rcp r2.z, r0.z
  48:     rcp r2.w, r0.w
  49:     mul r0, r1, r2
  50:     mul r1.xyz, r0.y, c10
  51:     mad r1.xyz, c9, r0.x, r1
  52:     mad r0.xyz, c11, r0.z, r1
  53:     mad r0.xyz, c12, r0.w, r0
  54:     mul r0.w, r4.y, r4.y
  55:     mad r0.w, r4.x, r4.x, -r0.w
  56:     mul r1, r4.yzzx, r4.xyzz
  57:     dp4 r2.x, c16, r1
  58:     dp4 r2.y, c17, r1
  59:     dp4 r2.z, c18, r1
  60:     mad r1.xyz, c19, r0.w, r2
  61:     mov r4.w, c31.y
  62:     dp4 r2.x, c13, r4
  63:     dp4 r2.y, c14, r4
  64:     dp4 r2.z, c15, r4
  65:     mov oT4.xyz, r4
  66:     add r1.xyz, r1, r2
  67:     max r1.xyz, r1, c31.x
  68:     mov r1.w, c31.z
  69:     lit r2, r1.xxww
  70:     mov r2.x, r2.z
  71:     lit r3, r1.yyww
  72:     lit r1, r1.zzww
  73:     mov r2.z, r1.z
  74:     mov r2.y, r3.z
  75:     mad r1.xyz, r2, c32.x, c32.y
  76:     max r1.xyz, r1, c31.x
  77:     add oT5.xyz, r0, r1
  78:     mul r0, v0.y, c21
  79:     mad r0, c20, v0.x, r0
  80:     mad r0, c22, v0.z, r0
  81:     mad r0, c23, v0.w, r0
  82:     mad oPos.xy, r0.w, c0, r0
  83:     mov oPos.zw, r0
  84:     mov oT2, c31.x
  85:     mov oT3, c31.x
  86:     mov oT4.w, c31.x
  87:     mov oT5.w, c31.x

// approximately 88 instruction slots used
      vs_4_0
      dcl_constantbuffer cb0[14], immediateIndexed
      dcl_constantbuffer cb1[5], immediateIndexed
      dcl_constantbuffer cb2[45], immediateIndexed
      dcl_constantbuffer cb3[19], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 6
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: mad o0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   4: eq r0.x, cb0[13].z, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[11].xxxy, cb0[11].zzzw
   7: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: rsq r0.w, r0.w
  15: mul o2.xyz, r0.wwww, r1.xyzx
  16: mov o3.xyzw, l(0,0,0,0)
  17: mov o4.xyzw, l(0,0,0,0)
  18: mov o5.w, l(0)
  19: mul r1.x, v1.x, cb3[16].x
  20: mul r1.y, v1.x, cb3[17].x
  21: mul r1.z, v1.x, cb3[18].x
  22: mul r2.x, v1.y, cb3[16].y
  23: mul r2.y, v1.y, cb3[17].y
  24: mul r2.z, v1.y, cb3[18].y
  25: add r1.xyz, r1.xyzx, r2.xyzx
  26: mul r2.x, v1.z, cb3[16].z
  27: mul r2.y, v1.z, cb3[17].z
  28: mul r2.z, v1.z, cb3[18].z
  29: add r1.xyz, r1.xyzx, r2.xyzx
  30: dp3 r0.w, r1.xyzx, r1.xyzx
  31: rsq r0.w, r0.w
  32: mul r1.xyz, r0.wwww, r1.xyzx
  33: mov o5.xyz, r1.xyzx
  34: mul r0.w, r1.y, r1.y
  35: mad r0.w, r1.x, r1.x, -r0.w
  36: mul r2.xyzw, r1.yzzx, r1.xyzz
  37: dp4 r3.x, cb2[41].xyzw, r2.xyzw
  38: dp4 r3.y, cb2[42].xyzw, r2.xyzw
  39: dp4 r3.z, cb2[43].xyzw, r2.xyzw
  40: mad r2.xyz, cb2[44].xyzx, r0.wwww, r3.xyzx
  41: mov r1.w, l(1.000000)
  42: dp4 r3.x, cb2[38].xyzw, r1.xyzw
  43: dp4 r3.y, cb2[39].xyzw, r1.xyzw
  44: dp4 r3.z, cb2[40].xyzw, r1.xyzw
  45: add r2.xyz, r2.xyzx, r3.xyzx
  46: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  47: log r2.xyz, r2.xyzx
  48: mul r2.xyz, r2.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  49: exp r2.xyz, r2.xyzx
  50: mad r2.xyz, r2.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  51: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  52: add r3.xyzw, -r0.yyyy, cb2[3].xyzw
  53: mul r4.xyzw, r1.yyyy, r3.xyzw
  54: mul r3.xyzw, r3.xyzw, r3.xyzw
  55: add r5.xyzw, -r0.xxxx, cb2[2].xyzw
  56: add r0.xyzw, -r0.zzzz, cb2[4].xyzw
  57: mad r4.xyzw, r5.xyzw, r1.xxxx, r4.xyzw
  58: mad r1.xyzw, r0.xyzw, r1.zzzz, r4.xyzw
  59: mad r3.xyzw, r5.xyzw, r5.xyzw, r3.xyzw
  60: mad r0.xyzw, r0.xyzw, r0.xyzw, r3.xyzw
  61: rsq r3.xyzw, r0.xyzw
  62: mad r0.xyzw, r0.xyzw, cb2[5].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  63: div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
  64: mul r1.xyzw, r1.xyzw, r3.xyzw
  65: max r1.xyzw, r1.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  66: mul r0.xyzw, r0.xyzw, r1.xyzw
  67: mul r1.xyz, r0.yyyy, cb2[7].xyzx
  68: mad r1.xyz, cb2[6].xyzx, r0.xxxx, r1.xyzx
  69: mad r0.xyz, cb2[8].xyzx, r0.zzzz, r1.xyzx
  70: mad r0.xyz, cb2[9].xyzx, r0.wwww, r0.xyzx
  71: add o6.xyz, r2.xyzx, r0.xyzx
  72: mov o6.w, l(0)
  73: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
// Stats: 50 math, 5 textures
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" "_ALPHABLEND_ON" }
"#version 120

#ifdef VERTEX
uniform vec3 _WorldSpaceCameraPos;
uniform vec4 _ProjectionParams;
uniform vec4 unity_4LightPosX0;
uniform vec4 unity_4LightPosY0;
uniform vec4 unity_4LightPosZ0;
uniform vec4 unity_4LightAtten0;
uniform vec4 unity_LightColor[8];
uniform vec4 unity_SHAr;
uniform vec4 unity_SHAg;
uniform vec4 unity_SHAb;
uniform vec4 unity_SHBr;
uniform vec4 unity_SHBg;
uniform vec4 unity_SHBb;
uniform vec4 unity_SHC;

uniform mat4 _Object2World;
uniform mat4 _World2Object;
uniform vec4 unity_ColorSpaceLuminance;
uniform vec4 _MainTex_ST;
uniform vec4 _DetailAlbedoMap_ST;
uniform float _UVSec;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
varying vec4 xlv_TEXCOORD6;
void main ()
{
  vec2 tmpvar_1;
  tmpvar_1 = gl_MultiTexCoord0.xy;
  vec2 tmpvar_2;
  tmpvar_2 = gl_MultiTexCoord1.xy;
  vec4 tmpvar_3;
  vec4 tmpvar_4;
  vec4 tmpvar_5;
  vec4 tmpvar_6;
  vec4 tmpvar_7;
  tmpvar_7 = (_Object2World * gl_Vertex);
  tmpvar_3 = (gl_ModelViewProjectionMatrix * gl_Vertex);
  vec4 texcoord_8;
  texcoord_8.xy = ((gl_MultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  vec2 tmpvar_9;
  if ((_UVSec == 0.0)) {
    tmpvar_9 = tmpvar_1;
  } else {
    tmpvar_9 = tmpvar_2;
  };
  texcoord_8.zw = ((tmpvar_9 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  vec3 tmpvar_10;
  tmpvar_10 = normalize((tmpvar_7.xyz - _WorldSpaceCameraPos));
  vec4 v_11;
  v_11.x = _World2Object[0].x;
  v_11.y = _World2Object[1].x;
  v_11.z = _World2Object[2].x;
  v_11.w = _World2Object[3].x;
  vec4 v_12;
  v_12.x = _World2Object[0].y;
  v_12.y = _World2Object[1].y;
  v_12.z = _World2Object[2].y;
  v_12.w = _World2Object[3].y;
  vec4 v_13;
  v_13.x = _World2Object[0].z;
  v_13.y = _World2Object[1].z;
  v_13.z = _World2Object[2].z;
  v_13.w = _World2Object[3].z;
  vec3 tmpvar_14;
  tmpvar_14 = normalize(((
    (v_11.xyz * gl_Normal.x)
   + 
    (v_12.xyz * gl_Normal.y)
  ) + (v_13.xyz * gl_Normal.z)));
  tmpvar_4.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_5.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_6.xyz = tmpvar_14;
  vec4 o_15;
  vec4 tmpvar_16;
  tmpvar_16 = (tmpvar_3 * 0.5);
  vec2 tmpvar_17;
  tmpvar_17.x = tmpvar_16.x;
  tmpvar_17.y = (tmpvar_16.y * _ProjectionParams.x);
  o_15.xy = (tmpvar_17 + tmpvar_16.w);
  o_15.zw = tmpvar_3.zw;
  vec4 ambientOrLightmapUV_18;
  ambientOrLightmapUV_18.w = 0.0;
  vec3 col_19;
  vec4 ndotl_20;
  vec4 lengthSq_21;
  vec4 tmpvar_22;
  tmpvar_22 = (unity_4LightPosX0 - tmpvar_7.x);
  vec4 tmpvar_23;
  tmpvar_23 = (unity_4LightPosY0 - tmpvar_7.y);
  vec4 tmpvar_24;
  tmpvar_24 = (unity_4LightPosZ0 - tmpvar_7.z);
  lengthSq_21 = (tmpvar_22 * tmpvar_22);
  lengthSq_21 = (lengthSq_21 + (tmpvar_23 * tmpvar_23));
  lengthSq_21 = (lengthSq_21 + (tmpvar_24 * tmpvar_24));
  ndotl_20 = (tmpvar_22 * tmpvar_14.x);
  ndotl_20 = (ndotl_20 + (tmpvar_23 * tmpvar_14.y));
  ndotl_20 = (ndotl_20 + (tmpvar_24 * tmpvar_14.z));
  vec4 tmpvar_25;
  tmpvar_25 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_20 * inversesqrt(lengthSq_21)));
  ndotl_20 = tmpvar_25;
  vec4 tmpvar_26;
  tmpvar_26 = (tmpvar_25 * (1.0/((1.0 + 
    (lengthSq_21 * unity_4LightAtten0)
  ))));
  col_19 = (unity_LightColor[0].xyz * tmpvar_26.x);
  col_19 = (col_19 + (unity_LightColor[1].xyz * tmpvar_26.y));
  col_19 = (col_19 + (unity_LightColor[2].xyz * tmpvar_26.z));
  col_19 = (col_19 + (unity_LightColor[3].xyz * tmpvar_26.w));
  ambientOrLightmapUV_18.xyz = col_19;
  vec3 ambient_27;
  ambient_27 = ambientOrLightmapUV_18.xyz;
  vec4 tmpvar_28;
  tmpvar_28.w = 1.0;
  tmpvar_28.xyz = tmpvar_14;
  vec3 res_29;
  vec3 x_30;
  x_30.x = dot (unity_SHAr, tmpvar_28);
  x_30.y = dot (unity_SHAg, tmpvar_28);
  x_30.z = dot (unity_SHAb, tmpvar_28);
  vec3 x1_31;
  vec4 tmpvar_32;
  tmpvar_32 = (tmpvar_14.xyzz * tmpvar_14.yzzx);
  x1_31.x = dot (unity_SHBr, tmpvar_32);
  x1_31.y = dot (unity_SHBg, tmpvar_32);
  x1_31.z = dot (unity_SHBb, tmpvar_32);
  res_29 = (x_30 + (x1_31 + (unity_SHC.xyz * 
    ((tmpvar_14.x * tmpvar_14.x) - (tmpvar_14.y * tmpvar_14.y))
  )));
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    res_29 = max (((1.055 * 
      pow (max (res_29, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
    ) - 0.055), vec3(0.0, 0.0, 0.0));
  };
  ambient_27 = (col_19 + max (vec3(0.0, 0.0, 0.0), res_29));
  ambientOrLightmapUV_18.xyz = ambient_27;
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = texcoord_8;
  xlv_TEXCOORD1 = tmpvar_10;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  xlv_TEXCOORD5 = ambientOrLightmapUV_18;
  xlv_TEXCOORD6 = o_15;
}


#endif
#ifdef FRAGMENT
uniform vec4 _WorldSpaceLightPos0;
uniform samplerCube unity_SpecCube0;
uniform vec4 unity_SpecCube0_HDR;
uniform vec4 unity_ColorSpaceDielectricSpec;
uniform vec4 _LightColor0;
uniform sampler2D unity_NHxRoughness;
uniform vec4 _Color;
uniform sampler2D _MainTex;
uniform float _Metallic;
uniform float _Glossiness;
uniform sampler2D _OcclusionMap;
uniform sampler2D _ShadowMapTexture;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
varying vec4 xlv_TEXCOORD6;
void main ()
{
  vec4 c_1;
  vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  vec3 tmpvar_3;
  tmpvar_3 = (_Color.xyz * tmpvar_2.xyz);
  vec3 tmpvar_4;
  vec3 tmpvar_5;
  tmpvar_5 = mix (unity_ColorSpaceDielectricSpec.xyz, tmpvar_3, vec3(_Metallic));
  float tmpvar_6;
  tmpvar_6 = (unity_ColorSpaceDielectricSpec.w - (_Metallic * unity_ColorSpaceDielectricSpec.w));
  tmpvar_4 = (tmpvar_3 * tmpvar_6);
  vec3 tmpvar_7;
  tmpvar_7 = normalize(xlv_TEXCOORD2_2.xyz);
  float tmpvar_8;
  tmpvar_8 = texture2D (_OcclusionMap, xlv_TEXCOORD0.xy).y;
  vec3 tmpvar_9;
  float tmpvar_10;
  tmpvar_10 = (1.0 - _Glossiness);
  tmpvar_9 = (xlv_TEXCOORD1 - (2.0 * (
    dot (tmpvar_7, xlv_TEXCOORD1)
   * tmpvar_7)));
  vec4 tmpvar_11;
  tmpvar_11.xyz = tmpvar_9;
  tmpvar_11.w = ((tmpvar_10 * (1.7 - 
    (0.7 * tmpvar_10)
  )) * 6.0);
  vec4 tmpvar_12;
  tmpvar_12 = textureCube (unity_SpecCube0, tmpvar_9, tmpvar_11.w);
  vec3 viewDir_13;
  viewDir_13 = -(xlv_TEXCOORD1);
  vec3 color_14;
  vec2 tmpvar_15;
  tmpvar_15.x = dot ((viewDir_13 - (2.0 * 
    (dot (tmpvar_7, viewDir_13) * tmpvar_7)
  )), _WorldSpaceLightPos0.xyz);
  tmpvar_15.y = (1.0 - clamp (dot (tmpvar_7, viewDir_13), 0.0, 1.0));
  vec2 tmpvar_16;
  tmpvar_16 = ((tmpvar_15 * tmpvar_15) * (tmpvar_15 * tmpvar_15));
  vec2 tmpvar_17;
  tmpvar_17.x = tmpvar_16.x;
  tmpvar_17.y = tmpvar_10;
  color_14 = ((tmpvar_4 + (
    (texture2D (unity_NHxRoughness, tmpvar_17).w * 16.0)
   * tmpvar_5)) * ((_LightColor0.xyz * texture2DProj (_ShadowMapTexture, xlv_TEXCOORD6).x) * clamp (
    dot (tmpvar_7, _WorldSpaceLightPos0.xyz)
  , 0.0, 1.0)));
  color_14 = (color_14 + ((
    (xlv_TEXCOORD5.xyz * tmpvar_8)
   * tmpvar_4) + (
    (((unity_SpecCube0_HDR.x * pow (tmpvar_12.w, unity_SpecCube0_HDR.y)) * tmpvar_12.xyz) * tmpvar_8)
   * 
    mix (tmpvar_5, vec3(clamp ((_Glossiness + (1.0 - tmpvar_6)), 0.0, 1.0)), tmpvar_16.yyy)
  )));
  vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = color_14;
  c_1.w = tmpvar_18.w;
  c_1.xyz = color_14;
  c_1.xyz = c_1.xyz;
  vec4 xlat_varoutput_19;
  xlat_varoutput_19.xyz = c_1.xyz;
  xlat_varoutput_19.w = (tmpvar_2.w * _Color.w);
  gl_FragData[0] = xlat_varoutput_19;
}


#endif
"
}
SubProgram "d3d9 " {
// Stats: 89 math
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" "_ALPHABLEND_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Matrix 8 [_Object2World] 3
Matrix 11 [_World2Object] 3
Matrix 4 [glstate_matrix_mvp]
Vector 30 [_DetailAlbedoMap_ST]
Vector 29 [_MainTex_ST]
Vector 15 [_ProjectionParams]
Vector 16 [_ScreenParams]
Float 31 [_UVSec]
Vector 14 [_WorldSpaceCameraPos]
Vector 20 [unity_4LightAtten0]
Vector 17 [unity_4LightPosX0]
Vector 18 [unity_4LightPosY0]
Vector 19 [unity_4LightPosZ0]
Vector 28 [unity_ColorSpaceLuminance]
Vector 0 [unity_LightColor0]
Vector 1 [unity_LightColor1]
Vector 2 [unity_LightColor2]
Vector 3 [unity_LightColor3]
Vector 23 [unity_SHAb]
Vector 22 [unity_SHAg]
Vector 21 [unity_SHAr]
Vector 26 [unity_SHBb]
Vector 25 [unity_SHBg]
Vector 24 [unity_SHBr]
Vector 27 [unity_SHC]
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   row_major float4x4 _Object2World;
//   float4 _ProjectionParams;
//   float4 _ScreenParams;
//   float _UVSec;
//   row_major float4x4 _World2Object;
//   float3 _WorldSpaceCameraPos;
//   row_major float4x4 glstate_matrix_mvp;
//   float4 unity_4LightAtten0;
//   float4 unity_4LightPosX0;
//   float4 unity_4LightPosY0;
//   float4 unity_4LightPosZ0;
//   float4 unity_ColorSpaceLuminance;
//   float4 unity_LightColor[8];
//   float4 unity_SHAb;
//   float4 unity_SHAg;
//   float4 unity_SHAr;
//   float4 unity_SHBb;
//   float4 unity_SHBg;
//   float4 unity_SHBr;
//   float4 unity_SHC;
//
//
// Registers:
//
//   Name                      Reg   Size
//   ------------------------- ----- ----
//   unity_LightColor          c0       4
//   glstate_matrix_mvp        c4       4
//   _Object2World             c8       3
//   _World2Object             c11      3
//   _WorldSpaceCameraPos      c14      1
//   _ProjectionParams         c15      1
//   _ScreenParams             c16      1
//   unity_4LightPosX0         c17      1
//   unity_4LightPosY0         c18      1
//   unity_4LightPosZ0         c19      1
//   unity_4LightAtten0        c20      1
//   unity_SHAr                c21      1
//   unity_SHAg                c22      1
//   unity_SHAb                c23      1
//   unity_SHBr                c24      1
//   unity_SHBg                c25      1
//   unity_SHBb                c26      1
//   unity_SHC                 c27      1
//   unity_ColorSpaceLuminance c28      1
//   _MainTex_ST               c29      1
//   _DetailAlbedoMap_ST       c30      1
//   _UVSec                    c31      1
//

    vs_2_0
    def c32, 0.5, 0, 1, 0.416666657
    def c33, 1.05499995, -0.0549999997, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    mad oT0.xy, v2, c29, c29.zwzw
    mul r0.x, c31.x, c31.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad oT0.zw, r2.xyxy, c30.xyxy, c30
    dp4 r0.x, c8, v0
    dp4 r0.y, c9, v0
    dp4 r0.z, c10, v0
    add r1.xyz, r0, -c14
    add r2, -r0.x, c17
    add r3, -r0.y, c18
    add r0, -r0.z, c19
    dp3 r1.w, r1, r1
    rsq r1.w, r1.w
    mul oT1.xyz, r1.w, r1
    dp4 r1.y, c5, v0
    mul r4.x, r1.y, c15.x
    mul r4.w, r4.x, c32.x
    dp4 r1.x, c4, v0
    dp4 r1.w, c7, v0
    mul r4.xz, r1.xyww, c32.x
    mad oT6.xy, r4.z, c16.zwzw, r4.xwzw
    mul r4, r3, r3
    mad r4, r2, r2, r4
    mad r4, r0, r0, r4
    rsq r5.x, r4.x
    rsq r5.y, r4.y
    rsq r5.z, r4.z
    rsq r5.w, r4.w
    mov r6.z, c32.z
    mad r4, r4, c20, r6.z
    mul r6.xyz, v1.y, c12
    mad r6.xyz, c11, v1.x, r6
    mad r6.xyz, c13, v1.z, r6
    nrm r7.xyz, r6
    mul r3, r3, r7.y
    mad r2, r2, r7.x, r3
    mad r0, r0, r7.z, r2
    mul r0, r5, r0
    max r0, r0, c32.y
    rcp r2.x, r4.x
    rcp r2.y, r4.y
    rcp r2.z, r4.z
    rcp r2.w, r4.w
    mul r0, r0, r2
    mul r2.xyz, r0.y, c1
    mad r2.xyz, c0, r0.x, r2
    mad r0.xyz, c2, r0.z, r2
    mad r0.xyz, c3, r0.w, r0
    mul r0.w, r7.y, r7.y
    mad r0.w, r7.x, r7.x, -r0.w
    mul r2, r7.yzzx, r7.xyzz
    dp4 r3.x, c24, r2
    dp4 r3.y, c25, r2
    dp4 r3.z, c26, r2
    mad r2.xyz, c27, r0.w, r3
    mov r7.w, c32.z
    dp4 r3.x, c21, r7
    dp4 r3.y, c22, r7
    dp4 r3.z, c23, r7
    mov oT4.xyz, r7
    add r2.xyz, r2, r3
    max r3.xyz, r2, c32.y
    mov r3.w, c32.w
    lit r4, r3.xxww
    mov r4.x, r4.z
    lit r5, r3.yyww
    lit r3, r3.zzww
    mov r4.z, r3.z
    mov r4.y, r5.z
    mad r3.xyz, r4, c33.x, c33.y
    max r3.xyz, r3, c32.y
    mul r0.w, c28.w, c28.w
    sge r0.w, -r0.w, r0.w
    lrp r4.xyz, r0.w, r3, r2
    max r2.xyz, r4, c32.y
    add oT5.xyz, r0, r2
    dp4 r1.z, c6, v0
    mov oPos, r1
    mov oT6.zw, r1
    mov oT2, c32.y
    mov oT3, c32.y
    mov oT4.w, c32.y
    mov oT5.w, c32.y

// approximately 87 instruction slots used
"
}
SubProgram "d3d11 " {
// Stats: 71 math
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" "_ALPHABLEND_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
ConstBuffer "$Globals" 240
Vector 48 [unity_ColorSpaceLuminance]
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
Vector 80 [_ProjectionParams]
ConstBuffer "UnityLighting" 720
Vector 32 [unity_4LightPosX0]
Vector 48 [unity_4LightPosY0]
Vector 64 [unity_4LightPosZ0]
Vector 80 [unity_4LightAtten0]
Vector 96 [unity_LightColor0]
Vector 112 [unity_LightColor1]
Vector 128 [unity_LightColor2]
Vector 144 [unity_LightColor3]
Vector 160 [unity_LightColor4]
Vector 176 [unity_LightColor5]
Vector 192 [unity_LightColor6]
Vector 208 [unity_LightColor7]
Vector 608 [unity_SHAr]
Vector 624 [unity_SHAg]
Vector 640 [unity_SHAb]
Vector 656 [unity_SHBr]
Vector 672 [unity_SHBg]
Vector 688 [unity_SHBb]
Vector 704 [unity_SHC]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer cb0[14], immediateIndexed
      dcl_constantbuffer cb1[6], immediateIndexed
      dcl_constantbuffer cb2[45], immediateIndexed
      dcl_constantbuffer cb3[19], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 7
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   4: mov o0.xyzw, r0.xyzw
   5: eq r1.x, cb0[13].z, l(0.000000)
   6: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
   7: mad o1.zw, r1.xxxy, cb0[11].xxxy, cb0[11].zzzw
   8: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   9: mul r1.xyz, v0.yyyy, cb3[13].xyzx
  10: mad r1.xyz, cb3[12].xyzx, v0.xxxx, r1.xyzx
  11: mad r1.xyz, cb3[14].xyzx, v0.zzzz, r1.xyzx
  12: mad r1.xyz, cb3[15].xyzx, v0.wwww, r1.xyzx
  13: add r2.xyz, r1.xyzx, -cb1[4].xyzx
  14: dp3 r1.w, r2.xyzx, r2.xyzx
  15: rsq r1.w, r1.w
  16: mul o2.xyz, r1.wwww, r2.xyzx
  17: mov o3.xyzw, l(0,0,0,0)
  18: mov o4.xyzw, l(0,0,0,0)
  19: mov o5.w, l(0)
  20: mul r2.x, v1.x, cb3[16].x
  21: mul r2.y, v1.x, cb3[17].x
  22: mul r2.z, v1.x, cb3[18].x
  23: mul r3.x, v1.y, cb3[16].y
  24: mul r3.y, v1.y, cb3[17].y
  25: mul r3.z, v1.y, cb3[18].y
  26: add r2.xyz, r2.xyzx, r3.xyzx
  27: mul r3.x, v1.z, cb3[16].z
  28: mul r3.y, v1.z, cb3[17].z
  29: mul r3.z, v1.z, cb3[18].z
  30: add r2.xyz, r2.xyzx, r3.xyzx
  31: dp3 r1.w, r2.xyzx, r2.xyzx
  32: rsq r1.w, r1.w
  33: mul r2.xyz, r1.wwww, r2.xyzx
  34: mov o5.xyz, r2.xyzx
  35: mul r1.w, r2.y, r2.y
  36: mad r1.w, r2.x, r2.x, -r1.w
  37: mul r3.xyzw, r2.yzzx, r2.xyzz
  38: dp4 r4.x, cb2[41].xyzw, r3.xyzw
  39: dp4 r4.y, cb2[42].xyzw, r3.xyzw
  40: dp4 r4.z, cb2[43].xyzw, r3.xyzw
  41: mad r3.xyz, cb2[44].xyzx, r1.wwww, r4.xyzx
  42: mov r2.w, l(1.000000)
  43: dp4 r4.x, cb2[38].xyzw, r2.xyzw
  44: dp4 r4.y, cb2[39].xyzw, r2.xyzw
  45: dp4 r4.z, cb2[40].xyzw, r2.xyzw
  46: add r3.xyz, r3.xyzx, r4.xyzx
  47: max r4.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  48: log r4.xyz, r4.xyzx
  49: mul r4.xyz, r4.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  50: exp r4.xyz, r4.xyzx
  51: mad r4.xyz, r4.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  52: max r4.xyz, r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  53: eq r1.w, cb0[3].w, l(0.000000)
  54: movc r3.xyz, r1.wwww, r4.xyzx, r3.xyzx
  55: max r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  56: add r4.xyzw, -r1.yyyy, cb2[3].xyzw
  57: mul r5.xyzw, r2.yyyy, r4.xyzw
  58: mul r4.xyzw, r4.xyzw, r4.xyzw
  59: add r6.xyzw, -r1.xxxx, cb2[2].xyzw
  60: add r1.xyzw, -r1.zzzz, cb2[4].xyzw
  61: mad r5.xyzw, r6.xyzw, r2.xxxx, r5.xyzw
  62: mad r2.xyzw, r1.xyzw, r2.zzzz, r5.xyzw
  63: mad r4.xyzw, r6.xyzw, r6.xyzw, r4.xyzw
  64: mad r1.xyzw, r1.xyzw, r1.xyzw, r4.xyzw
  65: rsq r4.xyzw, r1.xyzw
  66: mad r1.xyzw, r1.xyzw, cb2[5].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  67: div r1.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r1.xyzw
  68: mul r2.xyzw, r2.xyzw, r4.xyzw
  69: max r2.xyzw, r2.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  70: mul r1.xyzw, r1.xyzw, r2.xyzw
  71: mul r2.xyz, r1.yyyy, cb2[7].xyzx
  72: mad r2.xyz, cb2[6].xyzx, r1.xxxx, r2.xyzx
  73: mad r1.xyz, cb2[8].xyzx, r1.zzzz, r2.xyzx
  74: mad r1.xyz, cb2[9].xyzx, r1.wwww, r1.xyzx
  75: add o6.xyz, r3.xyzx, r1.xyzx
  76: mov o6.w, l(0)
  77: mul r0.y, r0.y, cb1[5].x
  78: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  79: mov o7.zw, r0.zzzw
  80: add o7.xy, r1.zzzz, r1.xwxx
  81: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "d3d11_9x " {
// Stats: 69 math
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" "_ALPHABLEND_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
ConstBuffer "$Globals" 240
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
Vector 80 [_ProjectionParams]
ConstBuffer "UnityLighting" 720
Vector 32 [unity_4LightPosX0]
Vector 48 [unity_4LightPosY0]
Vector 64 [unity_4LightPosZ0]
Vector 80 [unity_4LightAtten0]
Vector 96 [unity_LightColor0]
Vector 112 [unity_LightColor1]
Vector 128 [unity_LightColor2]
Vector 144 [unity_LightColor3]
Vector 160 [unity_LightColor4]
Vector 176 [unity_LightColor5]
Vector 192 [unity_LightColor6]
Vector 208 [unity_LightColor7]
Vector 608 [unity_SHAr]
Vector 624 [unity_SHAg]
Vector 640 [unity_SHAb]
Vector 656 [unity_SHBr]
Vector 672 [unity_SHBg]
Vector 688 [unity_SHBb]
Vector 704 [unity_SHC]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c1         cb0            10         2  ( FLT, FLT, FLT, FLT)
// c3         cb0            13         1  ( FLT, FLT, FLT, FLT)
// c4         cb1             4         2  ( FLT, FLT, FLT, FLT)
// c6         cb2             2         8  ( FLT, FLT, FLT, FLT)
// c14        cb2            38         7  ( FLT, FLT, FLT, FLT)
// c21        cb3             0         4  ( FLT, FLT, FLT, FLT)
// c25        cb3            12         7  ( FLT, FLT, FLT, FLT)
//
//
// Runtime generated constant mappings:
//
// Target Reg                               Constant Description
// ---------- --------------------------------------------------
// c0                              Vertex Shader position offset
//
//
// Level9 shader bytecode:
//
    vs_2_0
          def c32, 0.5, 0, 1, 0.416666657
          def c33, 1.05499995, -0.0549999997, 0, 0
          dcl_texcoord v0
          dcl_texcoord1 v1
          dcl_texcoord2 v2
          dcl_texcoord3 v3
   0:     mad oT0.xy, v2, c1, c1.zwzw
   1:     mul r0.x, c3.z, c3.z
   2:     sge r0.x, -r0.x, r0.x
   3:     mov r1.xy, v2
   4:     lrp r2.xy, r0.x, r1, v3
   5:     mad oT0.zw, r2.xyxy, c2.xyxy, c2
   6:     mul r0.xyz, v0.y, c26
   7:     mad r0.xyz, c25, v0.x, r0
   8:     mad r0.xyz, c27, v0.z, r0
   9:     mad r0.xyz, c28, v0.w, r0
  10:     add r1.xyz, r0, -c4
  11:     dp3 r0.w, r1, r1
  12:     rsq r0.w, r0.w
  13:     mul oT1.xyz, r0.w, r1
  14:     mul r1, v0.y, c22
  15:     mad r1, c21, v0.x, r1
  16:     mad r1, c23, v0.z, r1
  17:     mad r1, c24, v0.w, r1
  18:     mul r0.w, r1.y, c5.x
  19:     mul r2.w, r0.w, c32.x
  20:     mul r2.xz, r1.xyww, c32.x
  21:     add oT6.xy, r2.z, r2.xwzw
  22:     add r2, -r0.x, c6
  23:     add r3, -r0.y, c7
  24:     add r0, -r0.z, c8
  25:     mul r4.x, v1.x, c29.x
  26:     mul r4.y, v1.x, c30.x
  27:     mul r4.z, v1.x, c31.x
  28:     mul r5.x, v1.y, c29.y
  29:     mul r5.y, v1.y, c30.y
  30:     mul r5.z, v1.y, c31.y
  31:     add r4.xyz, r4, r5
  32:     mul r5.x, v1.z, c29.z
  33:     mul r5.y, v1.z, c30.z
  34:     mul r5.z, v1.z, c31.z
  35:     add r4.xyz, r4, r5
  36:     nrm r5.xyz, r4
  39:     mul r4, r3, r5.y
  40:     mul r3, r3, r3
  41:     mad r3, r2, r2, r3
  42:     mad r2, r2, r5.x, r4
  43:     mad r2, r0, r5.z, r2
  44:     mad r0, r0, r0, r3
  45:     rsq r3.x, r0.x
  46:     rsq r3.y, r0.y
  47:     rsq r3.z, r0.z
  48:     rsq r3.w, r0.w
  49:     mov r4.z, c32.z
  50:     mad r0, r0, c9, r4.z
  51:     mul r2, r2, r3
  52:     max r2, r2, c32.y
  53:     rcp r3.x, r0.x
  54:     rcp r3.y, r0.y
  55:     rcp r3.z, r0.z
  56:     rcp r3.w, r0.w
  57:     mul r0, r2, r3
  58:     mul r2.xyz, r0.y, c11
  59:     mad r2.xyz, c10, r0.x, r2
  60:     mad r0.xyz, c12, r0.z, r2
  61:     mad r0.xyz, c13, r0.w, r0
  62:     mul r0.w, r5.y, r5.y
  63:     mad r0.w, r5.x, r5.x, -r0.w
  64:     mul r2, r5.yzzx, r5.xyzz
  65:     dp4 r3.x, c17, r2
  66:     dp4 r3.y, c18, r2
  67:     dp4 r3.z, c19, r2
  68:     mad r2.xyz, c20, r0.w, r3
  69:     mov r5.w, c32.z
  70:     dp4 r3.x, c14, r5
  71:     dp4 r3.y, c15, r5
  72:     dp4 r3.z, c16, r5
  73:     mov oT4.xyz, r5
  74:     add r2.xyz, r2, r3
  75:     max r2.xyz, r2, c32.y
  76:     mov r2.w, c32.w
  77:     lit r3, r2.xxww
  78:     mov r3.x, r3.z
  79:     lit r4, r2.yyww
  80:     lit r2, r2.zzww
  81:     mov r3.z, r2.z
  82:     mov r3.y, r4.z
  83:     mad r2.xyz, r3, c33.x, c33.y
  84:     max r2.xyz, r2, c32.y
  85:     add oT5.xyz, r0, r2
  86:     mad oPos.xy, r1.w, c0, r1
  87:     mov oPos.zw, r1
  88:     mov oT6.zw, r1
  89:     mov oT2, c32.y
  90:     mov oT3, c32.y
  91:     mov oT4.w, c32.y
  92:     mov oT5.w, c32.y

// approximately 93 instruction slots used
      vs_4_0
      dcl_constantbuffer cb0[14], immediateIndexed
      dcl_constantbuffer cb1[6], immediateIndexed
      dcl_constantbuffer cb2[45], immediateIndexed
      dcl_constantbuffer cb3[19], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 7
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   4: mov o0.xyzw, r0.xyzw
   5: eq r1.x, cb0[13].z, l(0.000000)
   6: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
   7: mad o1.zw, r1.xxxy, cb0[11].xxxy, cb0[11].zzzw
   8: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   9: mul r1.xyz, v0.yyyy, cb3[13].xyzx
  10: mad r1.xyz, cb3[12].xyzx, v0.xxxx, r1.xyzx
  11: mad r1.xyz, cb3[14].xyzx, v0.zzzz, r1.xyzx
  12: mad r1.xyz, cb3[15].xyzx, v0.wwww, r1.xyzx
  13: add r2.xyz, r1.xyzx, -cb1[4].xyzx
  14: dp3 r1.w, r2.xyzx, r2.xyzx
  15: rsq r1.w, r1.w
  16: mul o2.xyz, r1.wwww, r2.xyzx
  17: mov o3.xyzw, l(0,0,0,0)
  18: mov o4.xyzw, l(0,0,0,0)
  19: mov o5.w, l(0)
  20: mul r2.x, v1.x, cb3[16].x
  21: mul r2.y, v1.x, cb3[17].x
  22: mul r2.z, v1.x, cb3[18].x
  23: mul r3.x, v1.y, cb3[16].y
  24: mul r3.y, v1.y, cb3[17].y
  25: mul r3.z, v1.y, cb3[18].y
  26: add r2.xyz, r2.xyzx, r3.xyzx
  27: mul r3.x, v1.z, cb3[16].z
  28: mul r3.y, v1.z, cb3[17].z
  29: mul r3.z, v1.z, cb3[18].z
  30: add r2.xyz, r2.xyzx, r3.xyzx
  31: dp3 r1.w, r2.xyzx, r2.xyzx
  32: rsq r1.w, r1.w
  33: mul r2.xyz, r1.wwww, r2.xyzx
  34: mov o5.xyz, r2.xyzx
  35: mul r1.w, r2.y, r2.y
  36: mad r1.w, r2.x, r2.x, -r1.w
  37: mul r3.xyzw, r2.yzzx, r2.xyzz
  38: dp4 r4.x, cb2[41].xyzw, r3.xyzw
  39: dp4 r4.y, cb2[42].xyzw, r3.xyzw
  40: dp4 r4.z, cb2[43].xyzw, r3.xyzw
  41: mad r3.xyz, cb2[44].xyzx, r1.wwww, r4.xyzx
  42: mov r2.w, l(1.000000)
  43: dp4 r4.x, cb2[38].xyzw, r2.xyzw
  44: dp4 r4.y, cb2[39].xyzw, r2.xyzw
  45: dp4 r4.z, cb2[40].xyzw, r2.xyzw
  46: add r3.xyz, r3.xyzx, r4.xyzx
  47: max r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  48: log r3.xyz, r3.xyzx
  49: mul r3.xyz, r3.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  50: exp r3.xyz, r3.xyzx
  51: mad r3.xyz, r3.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  52: max r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  53: add r4.xyzw, -r1.yyyy, cb2[3].xyzw
  54: mul r5.xyzw, r2.yyyy, r4.xyzw
  55: mul r4.xyzw, r4.xyzw, r4.xyzw
  56: add r6.xyzw, -r1.xxxx, cb2[2].xyzw
  57: add r1.xyzw, -r1.zzzz, cb2[4].xyzw
  58: mad r5.xyzw, r6.xyzw, r2.xxxx, r5.xyzw
  59: mad r2.xyzw, r1.xyzw, r2.zzzz, r5.xyzw
  60: mad r4.xyzw, r6.xyzw, r6.xyzw, r4.xyzw
  61: mad r1.xyzw, r1.xyzw, r1.xyzw, r4.xyzw
  62: rsq r4.xyzw, r1.xyzw
  63: mad r1.xyzw, r1.xyzw, cb2[5].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  64: div r1.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r1.xyzw
  65: mul r2.xyzw, r2.xyzw, r4.xyzw
  66: max r2.xyzw, r2.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  67: mul r1.xyzw, r1.xyzw, r2.xyzw
  68: mul r2.xyz, r1.yyyy, cb2[7].xyzx
  69: mad r2.xyz, cb2[6].xyzx, r1.xxxx, r2.xyzx
  70: mad r1.xyz, cb2[8].xyzx, r1.zzzz, r2.xyzx
  71: mad r1.xyz, cb2[9].xyzx, r1.wwww, r1.xyzx
  72: add o6.xyz, r3.xyzx, r1.xyzx
  73: mov o6.w, l(0)
  74: mul r0.y, r0.y, cb1[5].x
  75: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  76: mov o7.zw, r0.zzzw
  77: add o7.xy, r1.zzzz, r1.xwxx
  78: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
// Stats: 51 math, 5 textures
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "_ALPHABLEND_ON" }
"#version 120

#ifdef VERTEX
uniform vec3 _WorldSpaceCameraPos;
uniform vec4 unity_SHAr;
uniform vec4 unity_SHAg;
uniform vec4 unity_SHAb;
uniform vec4 unity_SHBr;
uniform vec4 unity_SHBg;
uniform vec4 unity_SHBb;
uniform vec4 unity_SHC;

uniform mat4 _Object2World;
uniform mat4 _World2Object;
uniform vec4 unity_ColorSpaceLuminance;
uniform vec4 _MainTex_ST;
uniform vec4 _DetailAlbedoMap_ST;
uniform float _UVSec;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
void main ()
{
  vec2 tmpvar_1;
  tmpvar_1 = gl_MultiTexCoord0.xy;
  vec2 tmpvar_2;
  tmpvar_2 = gl_MultiTexCoord1.xy;
  vec4 tmpvar_3;
  vec4 tmpvar_4;
  vec4 tmpvar_5;
  vec4 tmpvar_6;
  vec4 tmpvar_7;
  tmpvar_7 = (_Object2World * gl_Vertex);
  tmpvar_3 = (gl_ModelViewProjectionMatrix * gl_Vertex);
  vec4 texcoord_8;
  texcoord_8.xy = ((gl_MultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  vec2 tmpvar_9;
  if ((_UVSec == 0.0)) {
    tmpvar_9 = tmpvar_1;
  } else {
    tmpvar_9 = tmpvar_2;
  };
  texcoord_8.zw = ((tmpvar_9 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  vec3 tmpvar_10;
  tmpvar_10 = normalize((tmpvar_7.xyz - _WorldSpaceCameraPos));
  vec4 v_11;
  v_11.x = _World2Object[0].x;
  v_11.y = _World2Object[1].x;
  v_11.z = _World2Object[2].x;
  v_11.w = _World2Object[3].x;
  vec4 v_12;
  v_12.x = _World2Object[0].y;
  v_12.y = _World2Object[1].y;
  v_12.z = _World2Object[2].y;
  v_12.w = _World2Object[3].y;
  vec4 v_13;
  v_13.x = _World2Object[0].z;
  v_13.y = _World2Object[1].z;
  v_13.z = _World2Object[2].z;
  v_13.w = _World2Object[3].z;
  vec3 tmpvar_14;
  tmpvar_14 = normalize(((
    (v_11.xyz * gl_Normal.x)
   + 
    (v_12.xyz * gl_Normal.y)
  ) + (v_13.xyz * gl_Normal.z)));
  tmpvar_4.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_5.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_6.xyz = tmpvar_14;
  vec4 ambientOrLightmapUV_15;
  ambientOrLightmapUV_15 = vec4(0.0, 0.0, 0.0, 0.0);
  vec3 ambient_16;
  ambient_16 = vec3(0.0, 0.0, 0.0);
  vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = tmpvar_14;
  vec3 res_18;
  vec3 x_19;
  x_19.x = dot (unity_SHAr, tmpvar_17);
  x_19.y = dot (unity_SHAg, tmpvar_17);
  x_19.z = dot (unity_SHAb, tmpvar_17);
  vec3 x1_20;
  vec4 tmpvar_21;
  tmpvar_21 = (tmpvar_14.xyzz * tmpvar_14.yzzx);
  x1_20.x = dot (unity_SHBr, tmpvar_21);
  x1_20.y = dot (unity_SHBg, tmpvar_21);
  x1_20.z = dot (unity_SHBb, tmpvar_21);
  res_18 = (x_19 + (x1_20 + (unity_SHC.xyz * 
    ((tmpvar_14.x * tmpvar_14.x) - (tmpvar_14.y * tmpvar_14.y))
  )));
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    res_18 = max (((1.055 * 
      pow (max (res_18, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
    ) - 0.055), vec3(0.0, 0.0, 0.0));
  };
  ambient_16 = max (vec3(0.0, 0.0, 0.0), res_18);
  ambientOrLightmapUV_15.xyz = ambient_16;
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = texcoord_8;
  xlv_TEXCOORD1 = tmpvar_10;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  xlv_TEXCOORD5 = ambientOrLightmapUV_15;
}


#endif
#ifdef FRAGMENT
uniform vec4 _WorldSpaceLightPos0;
uniform samplerCube unity_SpecCube0;
uniform vec4 unity_SpecCube0_HDR;
uniform vec4 unity_ColorSpaceDielectricSpec;
uniform vec4 _LightColor0;
uniform sampler2D unity_NHxRoughness;
uniform vec4 _Color;
uniform sampler2D _MainTex;
uniform float _Metallic;
uniform float _Glossiness;
uniform sampler2D _OcclusionMap;
uniform vec4 _EmissionColor;
uniform sampler2D _EmissionMap;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
void main ()
{
  vec4 c_1;
  vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  vec3 tmpvar_3;
  tmpvar_3 = (_Color.xyz * tmpvar_2.xyz);
  vec3 tmpvar_4;
  vec3 tmpvar_5;
  tmpvar_5 = mix (unity_ColorSpaceDielectricSpec.xyz, tmpvar_3, vec3(_Metallic));
  float tmpvar_6;
  tmpvar_6 = (unity_ColorSpaceDielectricSpec.w - (_Metallic * unity_ColorSpaceDielectricSpec.w));
  tmpvar_4 = (tmpvar_3 * tmpvar_6);
  vec3 tmpvar_7;
  tmpvar_7 = normalize(xlv_TEXCOORD2_2.xyz);
  float tmpvar_8;
  tmpvar_8 = texture2D (_OcclusionMap, xlv_TEXCOORD0.xy).y;
  vec3 tmpvar_9;
  float tmpvar_10;
  tmpvar_10 = (1.0 - _Glossiness);
  tmpvar_9 = (xlv_TEXCOORD1 - (2.0 * (
    dot (tmpvar_7, xlv_TEXCOORD1)
   * tmpvar_7)));
  vec4 tmpvar_11;
  tmpvar_11.xyz = tmpvar_9;
  tmpvar_11.w = ((tmpvar_10 * (1.7 - 
    (0.7 * tmpvar_10)
  )) * 6.0);
  vec4 tmpvar_12;
  tmpvar_12 = textureCube (unity_SpecCube0, tmpvar_9, tmpvar_11.w);
  vec3 viewDir_13;
  viewDir_13 = -(xlv_TEXCOORD1);
  vec3 color_14;
  vec2 tmpvar_15;
  tmpvar_15.x = dot ((viewDir_13 - (2.0 * 
    (dot (tmpvar_7, viewDir_13) * tmpvar_7)
  )), _WorldSpaceLightPos0.xyz);
  tmpvar_15.y = (1.0 - clamp (dot (tmpvar_7, viewDir_13), 0.0, 1.0));
  vec2 tmpvar_16;
  tmpvar_16 = ((tmpvar_15 * tmpvar_15) * (tmpvar_15 * tmpvar_15));
  vec2 tmpvar_17;
  tmpvar_17.x = tmpvar_16.x;
  tmpvar_17.y = tmpvar_10;
  color_14 = ((tmpvar_4 + (
    (texture2D (unity_NHxRoughness, tmpvar_17).w * 16.0)
   * tmpvar_5)) * (_LightColor0.xyz * clamp (
    dot (tmpvar_7, _WorldSpaceLightPos0.xyz)
  , 0.0, 1.0)));
  color_14 = (color_14 + ((
    (xlv_TEXCOORD5.xyz * tmpvar_8)
   * tmpvar_4) + (
    (((unity_SpecCube0_HDR.x * pow (tmpvar_12.w, unity_SpecCube0_HDR.y)) * tmpvar_12.xyz) * tmpvar_8)
   * 
    mix (tmpvar_5, vec3(clamp ((_Glossiness + (1.0 - tmpvar_6)), 0.0, 1.0)), tmpvar_16.yyy)
  )));
  vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = color_14;
  c_1.w = tmpvar_18.w;
  c_1.xyz = (color_14 + (texture2D (_EmissionMap, xlv_TEXCOORD0.xy).xyz * _EmissionColor.xyz));
  vec4 xlat_varoutput_19;
  xlat_varoutput_19.xyz = c_1.xyz;
  xlat_varoutput_19.w = (tmpvar_2.w * _Color.w);
  gl_FragData[0] = xlat_varoutput_19;
}


#endif
"
}
SubProgram "d3d9 " {
// Stats: 56 math
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "_ALPHABLEND_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Matrix 4 [_Object2World] 3
Matrix 7 [_World2Object] 3
Matrix 0 [glstate_matrix_mvp]
Vector 20 [_DetailAlbedoMap_ST]
Vector 19 [_MainTex_ST]
Float 21 [_UVSec]
Vector 10 [_WorldSpaceCameraPos]
Vector 18 [unity_ColorSpaceLuminance]
Vector 13 [unity_SHAb]
Vector 12 [unity_SHAg]
Vector 11 [unity_SHAr]
Vector 16 [unity_SHBb]
Vector 15 [unity_SHBg]
Vector 14 [unity_SHBr]
Vector 17 [unity_SHC]
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   row_major float4x4 _Object2World;
//   float _UVSec;
//   row_major float4x4 _World2Object;
//   float3 _WorldSpaceCameraPos;
//   row_major float4x4 glstate_matrix_mvp;
//   float4 unity_ColorSpaceLuminance;
//   float4 unity_SHAb;
//   float4 unity_SHAg;
//   float4 unity_SHAr;
//   float4 unity_SHBb;
//   float4 unity_SHBg;
//   float4 unity_SHBr;
//   float4 unity_SHC;
//
//
// Registers:
//
//   Name                      Reg   Size
//   ------------------------- ----- ----
//   glstate_matrix_mvp        c0       4
//   _Object2World             c4       3
//   _World2Object             c7       3
//   _WorldSpaceCameraPos      c10      1
//   unity_SHAr                c11      1
//   unity_SHAg                c12      1
//   unity_SHAb                c13      1
//   unity_SHBr                c14      1
//   unity_SHBg                c15      1
//   unity_SHBb                c16      1
//   unity_SHC                 c17      1
//   unity_ColorSpaceLuminance c18      1
//   _MainTex_ST               c19      1
//   _DetailAlbedoMap_ST       c20      1
//   _UVSec                    c21      1
//

    vs_2_0
    def c22, 1, 0, 0.416666657, 0
    def c23, 1.05499995, -0.0549999997, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dp4 oPos.x, c0, v0
    dp4 oPos.y, c1, v0
    dp4 oPos.z, c2, v0
    dp4 oPos.w, c3, v0
    mad oT0.xy, v2, c19, c19.zwzw
    mul r0.x, c21.x, c21.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad oT0.zw, r2.xyxy, c20.xyxy, c20
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add r0.xyz, r0, -c10
    dp3 r0.w, r0, r0
    rsq r0.w, r0.w
    mul oT1.xyz, r0.w, r0
    mul r0.xyz, v1.y, c8
    mad r0.xyz, c7, v1.x, r0
    mad r0.xyz, c9, v1.z, r0
    nrm r1.xyz, r0
    mul r0.x, r1.y, r1.y
    mad r0.x, r1.x, r1.x, -r0.x
    mul r2, r1.yzzx, r1.xyzz
    dp4 r3.x, c14, r2
    dp4 r3.y, c15, r2
    dp4 r3.z, c16, r2
    mad r0.xyz, c17, r0.x, r3
    mov r1.w, c22.x
    dp4 r2.x, c11, r1
    dp4 r2.y, c12, r1
    dp4 r2.z, c13, r1
    mov oT4.xyz, r1
    add r0.xyz, r0, r2
    max r1.xyz, r0, c22.y
    mov r1.w, c22.z
    lit r2, r1.xxww
    mov r2.x, r2.z
    lit r3, r1.yyww
    lit r1, r1.zzww
    mov r2.z, r1.z
    mov r2.y, r3.z
    mad r1.xyz, r2, c23.x, c23.y
    max r1.xyz, r1, c22.y
    mul r0.w, c18.w, c18.w
    sge r0.w, -r0.w, r0.w
    lrp r2.xyz, r0.w, r1, r0
    max oT5.xyz, r2, c22.y
    mov oT2, c22.y
    mov oT3, c22.y
    mov oT4.w, c22.y
    mov oT5.w, c22.y

// approximately 54 instruction slots used
"
}
SubProgram "d3d11 " {
// Stats: 48 math
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "_ALPHABLEND_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
ConstBuffer "$Globals" 240
Vector 48 [unity_ColorSpaceLuminance]
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 608 [unity_SHAr]
Vector 624 [unity_SHAg]
Vector 640 [unity_SHAb]
Vector 656 [unity_SHBr]
Vector 672 [unity_SHBg]
Vector 688 [unity_SHBb]
Vector 704 [unity_SHC]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer cb0[14], immediateIndexed
      dcl_constantbuffer cb1[5], immediateIndexed
      dcl_constantbuffer cb2[45], immediateIndexed
      dcl_constantbuffer cb3[19], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: mad o0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   4: eq r0.x, cb0[13].z, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[11].xxxy, cb0[11].zzzw
   7: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add r0.xyz, r0.xyzx, -cb1[4].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: rsq r0.w, r0.w
  15: mul o2.xyz, r0.wwww, r0.xyzx
  16: mov o3.xyzw, l(0,0,0,0)
  17: mov o4.xyzw, l(0,0,0,0)
  18: mul r0.x, v1.x, cb3[16].x
  19: mul r0.y, v1.x, cb3[17].x
  20: mul r0.z, v1.x, cb3[18].x
  21: mul r1.x, v1.y, cb3[16].y
  22: mul r1.y, v1.y, cb3[17].y
  23: mul r1.z, v1.y, cb3[18].y
  24: add r0.xyz, r0.xyzx, r1.xyzx
  25: mul r1.x, v1.z, cb3[16].z
  26: mul r1.y, v1.z, cb3[17].z
  27: mul r1.z, v1.z, cb3[18].z
  28: add r0.xyz, r0.xyzx, r1.xyzx
  29: dp3 r0.w, r0.xyzx, r0.xyzx
  30: rsq r0.w, r0.w
  31: mul r0.xyz, r0.wwww, r0.xyzx
  32: mov o5.xyz, r0.xyzx
  33: mov o5.w, l(0)
  34: mul r1.x, r0.y, r0.y
  35: mad r1.x, r0.x, r0.x, -r1.x
  36: mul r2.xyzw, r0.yzzx, r0.xyzz
  37: dp4 r3.x, cb2[41].xyzw, r2.xyzw
  38: dp4 r3.y, cb2[42].xyzw, r2.xyzw
  39: dp4 r3.z, cb2[43].xyzw, r2.xyzw
  40: mad r1.xyz, cb2[44].xyzx, r1.xxxx, r3.xyzx
  41: mov r0.w, l(1.000000)
  42: dp4 r2.x, cb2[38].xyzw, r0.xyzw
  43: dp4 r2.y, cb2[39].xyzw, r0.xyzw
  44: dp4 r2.z, cb2[40].xyzw, r0.xyzw
  45: add r0.xyz, r1.xyzx, r2.xyzx
  46: max r1.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  47: log r1.xyz, r1.xyzx
  48: mul r1.xyz, r1.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  49: exp r1.xyz, r1.xyzx
  50: mad r1.xyz, r1.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  51: max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  52: eq r0.w, cb0[3].w, l(0.000000)
  53: movc r0.xyz, r0.wwww, r1.xyzx, r0.xyzx
  54: max o6.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  55: mov o6.w, l(0)
  56: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "d3d11_9x " {
// Stats: 46 math
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "_ALPHABLEND_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
ConstBuffer "$Globals" 240
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 608 [unity_SHAr]
Vector 624 [unity_SHAg]
Vector 640 [unity_SHAb]
Vector 656 [unity_SHBr]
Vector 672 [unity_SHBg]
Vector 688 [unity_SHBb]
Vector 704 [unity_SHC]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c1         cb0            10         2  ( FLT, FLT, FLT, FLT)
// c3         cb0            13         1  ( FLT, FLT, FLT, FLT)
// c4         cb1             4         1  ( FLT, FLT, FLT, FLT)
// c5         cb2            38         7  ( FLT, FLT, FLT, FLT)
// c12        cb3             0         4  ( FLT, FLT, FLT, FLT)
// c16        cb3            12         7  ( FLT, FLT, FLT, FLT)
//
//
// Runtime generated constant mappings:
//
// Target Reg                               Constant Description
// ---------- --------------------------------------------------
// c0                              Vertex Shader position offset
//
//
// Level9 shader bytecode:
//
    vs_2_0
          def c23, 1, 0, 0.416666657, 0
          def c24, 1.05499995, -0.0549999997, 0, 0
          dcl_texcoord v0
          dcl_texcoord1 v1
          dcl_texcoord2 v2
          dcl_texcoord3 v3
   0:     mad oT0.xy, v2, c1, c1.zwzw
   1:     mul r0.x, c3.z, c3.z
   2:     sge r0.x, -r0.x, r0.x
   3:     mov r1.xy, v2
   4:     lrp r2.xy, r0.x, r1, v3
   5:     mad oT0.zw, r2.xyxy, c2.xyxy, c2
   6:     mul r0.xyz, v0.y, c17
   7:     mad r0.xyz, c16, v0.x, r0
   8:     mad r0.xyz, c18, v0.z, r0
   9:     mad r0.xyz, c19, v0.w, r0
  10:     add r0.xyz, r0, -c4
  11:     dp3 r0.w, r0, r0
  12:     rsq r0.w, r0.w
  13:     mul oT1.xyz, r0.w, r0
  14:     mul r0.x, v1.x, c20.x
  15:     mul r0.y, v1.x, c21.x
  16:     mul r0.z, v1.x, c22.x
  17:     mul r1.x, v1.y, c20.y
  18:     mul r1.y, v1.y, c21.y
  19:     mul r1.z, v1.y, c22.y
  20:     add r0.xyz, r0, r1
  21:     mul r1.x, v1.z, c20.z
  22:     mul r1.y, v1.z, c21.z
  23:     mul r1.z, v1.z, c22.z
  24:     add r0.xyz, r0, r1
  25:     nrm r1.xyz, r0
  28:     mul r0.x, r1.y, r1.y
  29:     mad r0.x, r1.x, r1.x, -r0.x
  30:     mul r2, r1.yzzx, r1.xyzz
  31:     dp4 r3.x, c8, r2
  32:     dp4 r3.y, c9, r2
  33:     dp4 r3.z, c10, r2
  34:     mad r0.xyz, c11, r0.x, r3
  35:     mov r1.w, c23.x
  36:     dp4 r2.x, c5, r1
  37:     dp4 r2.y, c6, r1
  38:     dp4 r2.z, c7, r1
  39:     mov oT4.xyz, r1
  40:     add r0.xyz, r0, r2
  41:     max r0.xyz, r0, c23.y
  42:     mov r0.w, c23.z
  43:     lit r1, r0.xxww
  44:     mov r1.x, r1.z
  45:     lit r2, r0.yyww
  46:     lit r0, r0.zzww
  47:     mov r1.z, r0.z
  48:     mov r1.y, r2.z
  49:     mad r0.xyz, r1, c24.x, c24.y
  50:     max oT5.xyz, r0, c23.y
  51:     mul r0, v0.y, c13
  52:     mad r0, c12, v0.x, r0
  53:     mad r0, c14, v0.z, r0
  54:     mad r0, c15, v0.w, r0
  55:     mad oPos.xy, r0.w, c0, r0
  56:     mov oPos.zw, r0
  57:     mov oT2, c23.y
  58:     mov oT3, c23.y
  59:     mov oT4.w, c23.y
  60:     mov oT5.w, c23.y

// approximately 61 instruction slots used
      vs_4_0
      dcl_constantbuffer cb0[14], immediateIndexed
      dcl_constantbuffer cb1[5], immediateIndexed
      dcl_constantbuffer cb2[45], immediateIndexed
      dcl_constantbuffer cb3[19], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: mad o0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   4: eq r0.x, cb0[13].z, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[11].xxxy, cb0[11].zzzw
   7: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add r0.xyz, r0.xyzx, -cb1[4].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: rsq r0.w, r0.w
  15: mul o2.xyz, r0.wwww, r0.xyzx
  16: mov o3.xyzw, l(0,0,0,0)
  17: mov o4.xyzw, l(0,0,0,0)
  18: mul r0.x, v1.x, cb3[16].x
  19: mul r0.y, v1.x, cb3[17].x
  20: mul r0.z, v1.x, cb3[18].x
  21: mul r1.x, v1.y, cb3[16].y
  22: mul r1.y, v1.y, cb3[17].y
  23: mul r1.z, v1.y, cb3[18].y
  24: add r0.xyz, r0.xyzx, r1.xyzx
  25: mul r1.x, v1.z, cb3[16].z
  26: mul r1.y, v1.z, cb3[17].z
  27: mul r1.z, v1.z, cb3[18].z
  28: add r0.xyz, r0.xyzx, r1.xyzx
  29: dp3 r0.w, r0.xyzx, r0.xyzx
  30: rsq r0.w, r0.w
  31: mul r0.xyz, r0.wwww, r0.xyzx
  32: mov o5.xyz, r0.xyzx
  33: mov o5.w, l(0)
  34: mul r1.x, r0.y, r0.y
  35: mad r1.x, r0.x, r0.x, -r1.x
  36: mul r2.xyzw, r0.yzzx, r0.xyzz
  37: dp4 r3.x, cb2[41].xyzw, r2.xyzw
  38: dp4 r3.y, cb2[42].xyzw, r2.xyzw
  39: dp4 r3.z, cb2[43].xyzw, r2.xyzw
  40: mad r1.xyz, cb2[44].xyzx, r1.xxxx, r3.xyzx
  41: mov r0.w, l(1.000000)
  42: dp4 r2.x, cb2[38].xyzw, r0.xyzw
  43: dp4 r2.y, cb2[39].xyzw, r0.xyzw
  44: dp4 r2.z, cb2[40].xyzw, r0.xyzw
  45: add r0.xyz, r1.xyzx, r2.xyzx
  46: max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  47: log r0.xyz, r0.xyzx
  48: mul r0.xyz, r0.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  49: exp r0.xyz, r0.xyzx
  50: mad r0.xyz, r0.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  51: max o6.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  52: mov o6.w, l(0)
  53: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
// Stats: 52 math, 6 textures
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "_ALPHABLEND_ON" }
"#version 120

#ifdef VERTEX
uniform vec3 _WorldSpaceCameraPos;
uniform vec4 _ProjectionParams;
uniform vec4 unity_SHAr;
uniform vec4 unity_SHAg;
uniform vec4 unity_SHAb;
uniform vec4 unity_SHBr;
uniform vec4 unity_SHBg;
uniform vec4 unity_SHBb;
uniform vec4 unity_SHC;

uniform mat4 _Object2World;
uniform mat4 _World2Object;
uniform vec4 unity_ColorSpaceLuminance;
uniform vec4 _MainTex_ST;
uniform vec4 _DetailAlbedoMap_ST;
uniform float _UVSec;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
varying vec4 xlv_TEXCOORD6;
void main ()
{
  vec2 tmpvar_1;
  tmpvar_1 = gl_MultiTexCoord0.xy;
  vec2 tmpvar_2;
  tmpvar_2 = gl_MultiTexCoord1.xy;
  vec4 tmpvar_3;
  vec4 tmpvar_4;
  vec4 tmpvar_5;
  vec4 tmpvar_6;
  vec4 tmpvar_7;
  tmpvar_7 = (_Object2World * gl_Vertex);
  tmpvar_3 = (gl_ModelViewProjectionMatrix * gl_Vertex);
  vec4 texcoord_8;
  texcoord_8.xy = ((gl_MultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  vec2 tmpvar_9;
  if ((_UVSec == 0.0)) {
    tmpvar_9 = tmpvar_1;
  } else {
    tmpvar_9 = tmpvar_2;
  };
  texcoord_8.zw = ((tmpvar_9 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  vec3 tmpvar_10;
  tmpvar_10 = normalize((tmpvar_7.xyz - _WorldSpaceCameraPos));
  vec4 v_11;
  v_11.x = _World2Object[0].x;
  v_11.y = _World2Object[1].x;
  v_11.z = _World2Object[2].x;
  v_11.w = _World2Object[3].x;
  vec4 v_12;
  v_12.x = _World2Object[0].y;
  v_12.y = _World2Object[1].y;
  v_12.z = _World2Object[2].y;
  v_12.w = _World2Object[3].y;
  vec4 v_13;
  v_13.x = _World2Object[0].z;
  v_13.y = _World2Object[1].z;
  v_13.z = _World2Object[2].z;
  v_13.w = _World2Object[3].z;
  vec3 tmpvar_14;
  tmpvar_14 = normalize(((
    (v_11.xyz * gl_Normal.x)
   + 
    (v_12.xyz * gl_Normal.y)
  ) + (v_13.xyz * gl_Normal.z)));
  tmpvar_4.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_5.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_6.xyz = tmpvar_14;
  vec4 o_15;
  vec4 tmpvar_16;
  tmpvar_16 = (tmpvar_3 * 0.5);
  vec2 tmpvar_17;
  tmpvar_17.x = tmpvar_16.x;
  tmpvar_17.y = (tmpvar_16.y * _ProjectionParams.x);
  o_15.xy = (tmpvar_17 + tmpvar_16.w);
  o_15.zw = tmpvar_3.zw;
  vec4 ambientOrLightmapUV_18;
  ambientOrLightmapUV_18 = vec4(0.0, 0.0, 0.0, 0.0);
  vec3 ambient_19;
  ambient_19 = vec3(0.0, 0.0, 0.0);
  vec4 tmpvar_20;
  tmpvar_20.w = 1.0;
  tmpvar_20.xyz = tmpvar_14;
  vec3 res_21;
  vec3 x_22;
  x_22.x = dot (unity_SHAr, tmpvar_20);
  x_22.y = dot (unity_SHAg, tmpvar_20);
  x_22.z = dot (unity_SHAb, tmpvar_20);
  vec3 x1_23;
  vec4 tmpvar_24;
  tmpvar_24 = (tmpvar_14.xyzz * tmpvar_14.yzzx);
  x1_23.x = dot (unity_SHBr, tmpvar_24);
  x1_23.y = dot (unity_SHBg, tmpvar_24);
  x1_23.z = dot (unity_SHBb, tmpvar_24);
  res_21 = (x_22 + (x1_23 + (unity_SHC.xyz * 
    ((tmpvar_14.x * tmpvar_14.x) - (tmpvar_14.y * tmpvar_14.y))
  )));
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    res_21 = max (((1.055 * 
      pow (max (res_21, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
    ) - 0.055), vec3(0.0, 0.0, 0.0));
  };
  ambient_19 = max (vec3(0.0, 0.0, 0.0), res_21);
  ambientOrLightmapUV_18.xyz = ambient_19;
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = texcoord_8;
  xlv_TEXCOORD1 = tmpvar_10;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  xlv_TEXCOORD5 = ambientOrLightmapUV_18;
  xlv_TEXCOORD6 = o_15;
}


#endif
#ifdef FRAGMENT
uniform vec4 _WorldSpaceLightPos0;
uniform samplerCube unity_SpecCube0;
uniform vec4 unity_SpecCube0_HDR;
uniform vec4 unity_ColorSpaceDielectricSpec;
uniform vec4 _LightColor0;
uniform sampler2D unity_NHxRoughness;
uniform vec4 _Color;
uniform sampler2D _MainTex;
uniform float _Metallic;
uniform float _Glossiness;
uniform sampler2D _OcclusionMap;
uniform vec4 _EmissionColor;
uniform sampler2D _EmissionMap;
uniform sampler2D _ShadowMapTexture;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
varying vec4 xlv_TEXCOORD6;
void main ()
{
  vec4 c_1;
  vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  vec3 tmpvar_3;
  tmpvar_3 = (_Color.xyz * tmpvar_2.xyz);
  vec3 tmpvar_4;
  vec3 tmpvar_5;
  tmpvar_5 = mix (unity_ColorSpaceDielectricSpec.xyz, tmpvar_3, vec3(_Metallic));
  float tmpvar_6;
  tmpvar_6 = (unity_ColorSpaceDielectricSpec.w - (_Metallic * unity_ColorSpaceDielectricSpec.w));
  tmpvar_4 = (tmpvar_3 * tmpvar_6);
  vec3 tmpvar_7;
  tmpvar_7 = normalize(xlv_TEXCOORD2_2.xyz);
  float tmpvar_8;
  tmpvar_8 = texture2D (_OcclusionMap, xlv_TEXCOORD0.xy).y;
  vec3 tmpvar_9;
  float tmpvar_10;
  tmpvar_10 = (1.0 - _Glossiness);
  tmpvar_9 = (xlv_TEXCOORD1 - (2.0 * (
    dot (tmpvar_7, xlv_TEXCOORD1)
   * tmpvar_7)));
  vec4 tmpvar_11;
  tmpvar_11.xyz = tmpvar_9;
  tmpvar_11.w = ((tmpvar_10 * (1.7 - 
    (0.7 * tmpvar_10)
  )) * 6.0);
  vec4 tmpvar_12;
  tmpvar_12 = textureCube (unity_SpecCube0, tmpvar_9, tmpvar_11.w);
  vec3 viewDir_13;
  viewDir_13 = -(xlv_TEXCOORD1);
  vec3 color_14;
  vec2 tmpvar_15;
  tmpvar_15.x = dot ((viewDir_13 - (2.0 * 
    (dot (tmpvar_7, viewDir_13) * tmpvar_7)
  )), _WorldSpaceLightPos0.xyz);
  tmpvar_15.y = (1.0 - clamp (dot (tmpvar_7, viewDir_13), 0.0, 1.0));
  vec2 tmpvar_16;
  tmpvar_16 = ((tmpvar_15 * tmpvar_15) * (tmpvar_15 * tmpvar_15));
  vec2 tmpvar_17;
  tmpvar_17.x = tmpvar_16.x;
  tmpvar_17.y = tmpvar_10;
  color_14 = ((tmpvar_4 + (
    (texture2D (unity_NHxRoughness, tmpvar_17).w * 16.0)
   * tmpvar_5)) * ((_LightColor0.xyz * texture2DProj (_ShadowMapTexture, xlv_TEXCOORD6).x) * clamp (
    dot (tmpvar_7, _WorldSpaceLightPos0.xyz)
  , 0.0, 1.0)));
  color_14 = (color_14 + ((
    (xlv_TEXCOORD5.xyz * tmpvar_8)
   * tmpvar_4) + (
    (((unity_SpecCube0_HDR.x * pow (tmpvar_12.w, unity_SpecCube0_HDR.y)) * tmpvar_12.xyz) * tmpvar_8)
   * 
    mix (tmpvar_5, vec3(clamp ((_Glossiness + (1.0 - tmpvar_6)), 0.0, 1.0)), tmpvar_16.yyy)
  )));
  vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = color_14;
  c_1.w = tmpvar_18.w;
  c_1.xyz = (color_14 + (texture2D (_EmissionMap, xlv_TEXCOORD0.xy).xyz * _EmissionColor.xyz));
  vec4 xlat_varoutput_19;
  xlat_varoutput_19.xyz = c_1.xyz;
  xlat_varoutput_19.w = (tmpvar_2.w * _Color.w);
  gl_FragData[0] = xlat_varoutput_19;
}


#endif
"
}
SubProgram "d3d9 " {
// Stats: 62 math
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "_ALPHABLEND_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Matrix 4 [_Object2World] 3
Matrix 7 [_World2Object] 3
Matrix 0 [glstate_matrix_mvp]
Vector 22 [_DetailAlbedoMap_ST]
Vector 21 [_MainTex_ST]
Vector 11 [_ProjectionParams]
Vector 12 [_ScreenParams]
Float 23 [_UVSec]
Vector 10 [_WorldSpaceCameraPos]
Vector 20 [unity_ColorSpaceLuminance]
Vector 15 [unity_SHAb]
Vector 14 [unity_SHAg]
Vector 13 [unity_SHAr]
Vector 18 [unity_SHBb]
Vector 17 [unity_SHBg]
Vector 16 [unity_SHBr]
Vector 19 [unity_SHC]
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   row_major float4x4 _Object2World;
//   float4 _ProjectionParams;
//   float4 _ScreenParams;
//   float _UVSec;
//   row_major float4x4 _World2Object;
//   float3 _WorldSpaceCameraPos;
//   row_major float4x4 glstate_matrix_mvp;
//   float4 unity_ColorSpaceLuminance;
//   float4 unity_SHAb;
//   float4 unity_SHAg;
//   float4 unity_SHAr;
//   float4 unity_SHBb;
//   float4 unity_SHBg;
//   float4 unity_SHBr;
//   float4 unity_SHC;
//
//
// Registers:
//
//   Name                      Reg   Size
//   ------------------------- ----- ----
//   glstate_matrix_mvp        c0       4
//   _Object2World             c4       3
//   _World2Object             c7       3
//   _WorldSpaceCameraPos      c10      1
//   _ProjectionParams         c11      1
//   _ScreenParams             c12      1
//   unity_SHAr                c13      1
//   unity_SHAg                c14      1
//   unity_SHAb                c15      1
//   unity_SHBr                c16      1
//   unity_SHBg                c17      1
//   unity_SHBb                c18      1
//   unity_SHC                 c19      1
//   unity_ColorSpaceLuminance c20      1
//   _MainTex_ST               c21      1
//   _DetailAlbedoMap_ST       c22      1
//   _UVSec                    c23      1
//

    vs_2_0
    def c24, 0.5, 1, 0, 0.416666657
    def c25, 1.05499995, -0.0549999997, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    mad oT0.xy, v2, c21, c21.zwzw
    mul r0.x, c23.x, c23.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad oT0.zw, r2.xyxy, c22.xyxy, c22
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add r0.xyz, r0, -c10
    dp3 r0.w, r0, r0
    rsq r0.w, r0.w
    mul oT1.xyz, r0.w, r0
    dp4 r0.y, c1, v0
    mul r1.x, r0.y, c11.x
    mul r1.w, r1.x, c24.x
    dp4 r0.x, c0, v0
    dp4 r0.w, c3, v0
    mul r1.xz, r0.xyww, c24.x
    mad oT6.xy, r1.z, c12.zwzw, r1.xwzw
    mul r1.xyz, v1.y, c8
    mad r1.xyz, c7, v1.x, r1
    mad r1.xyz, c9, v1.z, r1
    nrm r2.xyz, r1
    mul r1.x, r2.y, r2.y
    mad r1.x, r2.x, r2.x, -r1.x
    mul r3, r2.yzzx, r2.xyzz
    dp4 r4.x, c16, r3
    dp4 r4.y, c17, r3
    dp4 r4.z, c18, r3
    mad r1.xyz, c19, r1.x, r4
    mov r2.w, c24.y
    dp4 r3.x, c13, r2
    dp4 r3.y, c14, r2
    dp4 r3.z, c15, r2
    mov oT4.xyz, r2
    add r1.xyz, r1, r3
    max r2.xyz, r1, c24.z
    mov r2.w, c24.w
    lit r3, r2.xxww
    mov r3.x, r3.z
    lit r4, r2.yyww
    lit r2, r2.zzww
    mov r3.z, r2.z
    mov r3.y, r4.z
    mad r2.xyz, r3, c25.x, c25.y
    max r2.xyz, r2, c24.z
    mul r1.w, c20.w, c20.w
    sge r1.w, -r1.w, r1.w
    lrp r3.xyz, r1.w, r2, r1
    max oT5.xyz, r3, c24.z
    dp4 r0.z, c2, v0
    mov oPos, r0
    mov oT6.zw, r0
    mov oT2, c24.z
    mov oT3, c24.z
    mov oT4.w, c24.z
    mov oT5.w, c24.z

// approximately 60 instruction slots used
"
}
SubProgram "d3d11 " {
// Stats: 51 math
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "_ALPHABLEND_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
ConstBuffer "$Globals" 240
Vector 48 [unity_ColorSpaceLuminance]
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
Vector 80 [_ProjectionParams]
ConstBuffer "UnityLighting" 720
Vector 608 [unity_SHAr]
Vector 624 [unity_SHAg]
Vector 640 [unity_SHAb]
Vector 656 [unity_SHBr]
Vector 672 [unity_SHBg]
Vector 688 [unity_SHBb]
Vector 704 [unity_SHC]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer cb0[14], immediateIndexed
      dcl_constantbuffer cb1[6], immediateIndexed
      dcl_constantbuffer cb2[45], immediateIndexed
      dcl_constantbuffer cb3[19], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 5
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   4: mov o0.xyzw, r0.xyzw
   5: eq r1.x, cb0[13].z, l(0.000000)
   6: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
   7: mad o1.zw, r1.xxxy, cb0[11].xxxy, cb0[11].zzzw
   8: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   9: mul r1.xyz, v0.yyyy, cb3[13].xyzx
  10: mad r1.xyz, cb3[12].xyzx, v0.xxxx, r1.xyzx
  11: mad r1.xyz, cb3[14].xyzx, v0.zzzz, r1.xyzx
  12: mad r1.xyz, cb3[15].xyzx, v0.wwww, r1.xyzx
  13: add r1.xyz, r1.xyzx, -cb1[4].xyzx
  14: dp3 r1.w, r1.xyzx, r1.xyzx
  15: rsq r1.w, r1.w
  16: mul o2.xyz, r1.wwww, r1.xyzx
  17: mov o3.xyzw, l(0,0,0,0)
  18: mov o4.xyzw, l(0,0,0,0)
  19: mul r1.x, v1.x, cb3[16].x
  20: mul r1.y, v1.x, cb3[17].x
  21: mul r1.z, v1.x, cb3[18].x
  22: mul r2.x, v1.y, cb3[16].y
  23: mul r2.y, v1.y, cb3[17].y
  24: mul r2.z, v1.y, cb3[18].y
  25: add r1.xyz, r1.xyzx, r2.xyzx
  26: mul r2.x, v1.z, cb3[16].z
  27: mul r2.y, v1.z, cb3[17].z
  28: mul r2.z, v1.z, cb3[18].z
  29: add r1.xyz, r1.xyzx, r2.xyzx
  30: dp3 r1.w, r1.xyzx, r1.xyzx
  31: rsq r1.w, r1.w
  32: mul r1.xyz, r1.wwww, r1.xyzx
  33: mov o5.xyz, r1.xyzx
  34: mov o5.w, l(0)
  35: mul r2.x, r1.y, r1.y
  36: mad r2.x, r1.x, r1.x, -r2.x
  37: mul r3.xyzw, r1.yzzx, r1.xyzz
  38: dp4 r4.x, cb2[41].xyzw, r3.xyzw
  39: dp4 r4.y, cb2[42].xyzw, r3.xyzw
  40: dp4 r4.z, cb2[43].xyzw, r3.xyzw
  41: mad r2.xyz, cb2[44].xyzx, r2.xxxx, r4.xyzx
  42: mov r1.w, l(1.000000)
  43: dp4 r3.x, cb2[38].xyzw, r1.xyzw
  44: dp4 r3.y, cb2[39].xyzw, r1.xyzw
  45: dp4 r3.z, cb2[40].xyzw, r1.xyzw
  46: add r1.xyz, r2.xyzx, r3.xyzx
  47: max r2.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  48: log r2.xyz, r2.xyzx
  49: mul r2.xyz, r2.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  50: exp r2.xyz, r2.xyzx
  51: mad r2.xyz, r2.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  52: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  53: eq r1.w, cb0[3].w, l(0.000000)
  54: movc r1.xyz, r1.wwww, r2.xyzx, r1.xyzx
  55: max o6.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  56: mov o6.w, l(0)
  57: mul r0.y, r0.y, cb1[5].x
  58: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  59: mov o7.zw, r0.zzzw
  60: add o7.xy, r1.zzzz, r1.xwxx
  61: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "d3d11_9x " {
// Stats: 49 math
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "_ALPHABLEND_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
ConstBuffer "$Globals" 240
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
Vector 80 [_ProjectionParams]
ConstBuffer "UnityLighting" 720
Vector 608 [unity_SHAr]
Vector 624 [unity_SHAg]
Vector 640 [unity_SHAb]
Vector 656 [unity_SHBr]
Vector 672 [unity_SHBg]
Vector 688 [unity_SHBb]
Vector 704 [unity_SHC]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c1         cb0            10         2  ( FLT, FLT, FLT, FLT)
// c3         cb0            13         1  ( FLT, FLT, FLT, FLT)
// c4         cb1             4         2  ( FLT, FLT, FLT, FLT)
// c6         cb2            38         7  ( FLT, FLT, FLT, FLT)
// c13        cb3             0         4  ( FLT, FLT, FLT, FLT)
// c17        cb3            12         7  ( FLT, FLT, FLT, FLT)
//
//
// Runtime generated constant mappings:
//
// Target Reg                               Constant Description
// ---------- --------------------------------------------------
// c0                              Vertex Shader position offset
//
//
// Level9 shader bytecode:
//
    vs_2_0
          def c24, 0.5, 1, 0, 0.416666657
          def c25, 1.05499995, -0.0549999997, 0, 0
          dcl_texcoord v0
          dcl_texcoord1 v1
          dcl_texcoord2 v2
          dcl_texcoord3 v3
   0:     mad oT0.xy, v2, c1, c1.zwzw
   1:     mul r0.x, c3.z, c3.z
   2:     sge r0.x, -r0.x, r0.x
   3:     mov r1.xy, v2
   4:     lrp r2.xy, r0.x, r1, v3
   5:     mad oT0.zw, r2.xyxy, c2.xyxy, c2
   6:     mul r0.xyz, v0.y, c18
   7:     mad r0.xyz, c17, v0.x, r0
   8:     mad r0.xyz, c19, v0.z, r0
   9:     mad r0.xyz, c20, v0.w, r0
  10:     add r0.xyz, r0, -c4
  11:     dp3 r0.w, r0, r0
  12:     rsq r0.w, r0.w
  13:     mul oT1.xyz, r0.w, r0
  14:     mul r0, v0.y, c14
  15:     mad r0, c13, v0.x, r0
  16:     mad r0, c15, v0.z, r0
  17:     mad r0, c16, v0.w, r0
  18:     mul r1.x, r0.y, c5.x
  19:     mul r1.w, r1.x, c24.x
  20:     mul r1.xz, r0.xyww, c24.x
  21:     add oT6.xy, r1.z, r1.xwzw
  22:     mul r1.x, v1.x, c21.x
  23:     mul r1.y, v1.x, c22.x
  24:     mul r1.z, v1.x, c23.x
  25:     mul r2.x, v1.y, c21.y
  26:     mul r2.y, v1.y, c22.y
  27:     mul r2.z, v1.y, c23.y
  28:     add r1.xyz, r1, r2
  29:     mul r2.x, v1.z, c21.z
  30:     mul r2.y, v1.z, c22.z
  31:     mul r2.z, v1.z, c23.z
  32:     add r1.xyz, r1, r2
  33:     nrm r2.xyz, r1
  36:     mul r1.x, r2.y, r2.y
  37:     mad r1.x, r2.x, r2.x, -r1.x
  38:     mul r3, r2.yzzx, r2.xyzz
  39:     dp4 r4.x, c9, r3
  40:     dp4 r4.y, c10, r3
  41:     dp4 r4.z, c11, r3
  42:     mad r1.xyz, c12, r1.x, r4
  43:     mov r2.w, c24.y
  44:     dp4 r3.x, c6, r2
  45:     dp4 r3.y, c7, r2
  46:     dp4 r3.z, c8, r2
  47:     mov oT4.xyz, r2
  48:     add r1.xyz, r1, r3
  49:     max r1.xyz, r1, c24.z
  50:     mov r1.w, c24.w
  51:     lit r2, r1.xxww
  52:     mov r2.x, r2.z
  53:     lit r3, r1.yyww
  54:     lit r1, r1.zzww
  55:     mov r2.z, r1.z
  56:     mov r2.y, r3.z
  57:     mad r1.xyz, r2, c25.x, c25.y
  58:     max oT5.xyz, r1, c24.z
  59:     mad oPos.xy, r0.w, c0, r0
  60:     mov oPos.zw, r0
  61:     mov oT6.zw, r0
  62:     mov oT2, c24.z
  63:     mov oT3, c24.z
  64:     mov oT4.w, c24.z
  65:     mov oT5.w, c24.z

// approximately 66 instruction slots used
      vs_4_0
      dcl_constantbuffer cb0[14], immediateIndexed
      dcl_constantbuffer cb1[6], immediateIndexed
      dcl_constantbuffer cb2[45], immediateIndexed
      dcl_constantbuffer cb3[19], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 5
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   4: mov o0.xyzw, r0.xyzw
   5: eq r1.x, cb0[13].z, l(0.000000)
   6: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
   7: mad o1.zw, r1.xxxy, cb0[11].xxxy, cb0[11].zzzw
   8: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   9: mul r1.xyz, v0.yyyy, cb3[13].xyzx
  10: mad r1.xyz, cb3[12].xyzx, v0.xxxx, r1.xyzx
  11: mad r1.xyz, cb3[14].xyzx, v0.zzzz, r1.xyzx
  12: mad r1.xyz, cb3[15].xyzx, v0.wwww, r1.xyzx
  13: add r1.xyz, r1.xyzx, -cb1[4].xyzx
  14: dp3 r1.w, r1.xyzx, r1.xyzx
  15: rsq r1.w, r1.w
  16: mul o2.xyz, r1.wwww, r1.xyzx
  17: mov o3.xyzw, l(0,0,0,0)
  18: mov o4.xyzw, l(0,0,0,0)
  19: mul r1.x, v1.x, cb3[16].x
  20: mul r1.y, v1.x, cb3[17].x
  21: mul r1.z, v1.x, cb3[18].x
  22: mul r2.x, v1.y, cb3[16].y
  23: mul r2.y, v1.y, cb3[17].y
  24: mul r2.z, v1.y, cb3[18].y
  25: add r1.xyz, r1.xyzx, r2.xyzx
  26: mul r2.x, v1.z, cb3[16].z
  27: mul r2.y, v1.z, cb3[17].z
  28: mul r2.z, v1.z, cb3[18].z
  29: add r1.xyz, r1.xyzx, r2.xyzx
  30: dp3 r1.w, r1.xyzx, r1.xyzx
  31: rsq r1.w, r1.w
  32: mul r1.xyz, r1.wwww, r1.xyzx
  33: mov o5.xyz, r1.xyzx
  34: mov o5.w, l(0)
  35: mul r2.x, r1.y, r1.y
  36: mad r2.x, r1.x, r1.x, -r2.x
  37: mul r3.xyzw, r1.yzzx, r1.xyzz
  38: dp4 r4.x, cb2[41].xyzw, r3.xyzw
  39: dp4 r4.y, cb2[42].xyzw, r3.xyzw
  40: dp4 r4.z, cb2[43].xyzw, r3.xyzw
  41: mad r2.xyz, cb2[44].xyzx, r2.xxxx, r4.xyzx
  42: mov r1.w, l(1.000000)
  43: dp4 r3.x, cb2[38].xyzw, r1.xyzw
  44: dp4 r3.y, cb2[39].xyzw, r1.xyzw
  45: dp4 r3.z, cb2[40].xyzw, r1.xyzw
  46: add r1.xyz, r2.xyzx, r3.xyzx
  47: max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  48: log r1.xyz, r1.xyzx
  49: mul r1.xyz, r1.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  50: exp r1.xyz, r1.xyzx
  51: mad r1.xyz, r1.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  52: max o6.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  53: mov o6.w, l(0)
  54: mul r0.y, r0.y, cb1[5].x
  55: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  56: mov o7.zw, r0.zzzw
  57: add o7.xy, r1.zzzz, r1.xwxx
  58: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
// Stats: 51 math, 5 textures
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "VERTEXLIGHT_ON" "_ALPHABLEND_ON" }
"#version 120

#ifdef VERTEX
uniform vec3 _WorldSpaceCameraPos;
uniform vec4 unity_4LightPosX0;
uniform vec4 unity_4LightPosY0;
uniform vec4 unity_4LightPosZ0;
uniform vec4 unity_4LightAtten0;
uniform vec4 unity_LightColor[8];
uniform vec4 unity_SHAr;
uniform vec4 unity_SHAg;
uniform vec4 unity_SHAb;
uniform vec4 unity_SHBr;
uniform vec4 unity_SHBg;
uniform vec4 unity_SHBb;
uniform vec4 unity_SHC;

uniform mat4 _Object2World;
uniform mat4 _World2Object;
uniform vec4 unity_ColorSpaceLuminance;
uniform vec4 _MainTex_ST;
uniform vec4 _DetailAlbedoMap_ST;
uniform float _UVSec;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
void main ()
{
  vec2 tmpvar_1;
  tmpvar_1 = gl_MultiTexCoord0.xy;
  vec2 tmpvar_2;
  tmpvar_2 = gl_MultiTexCoord1.xy;
  vec4 tmpvar_3;
  vec4 tmpvar_4;
  vec4 tmpvar_5;
  vec4 tmpvar_6;
  vec4 tmpvar_7;
  tmpvar_7 = (_Object2World * gl_Vertex);
  tmpvar_3 = (gl_ModelViewProjectionMatrix * gl_Vertex);
  vec4 texcoord_8;
  texcoord_8.xy = ((gl_MultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  vec2 tmpvar_9;
  if ((_UVSec == 0.0)) {
    tmpvar_9 = tmpvar_1;
  } else {
    tmpvar_9 = tmpvar_2;
  };
  texcoord_8.zw = ((tmpvar_9 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  vec3 tmpvar_10;
  tmpvar_10 = normalize((tmpvar_7.xyz - _WorldSpaceCameraPos));
  vec4 v_11;
  v_11.x = _World2Object[0].x;
  v_11.y = _World2Object[1].x;
  v_11.z = _World2Object[2].x;
  v_11.w = _World2Object[3].x;
  vec4 v_12;
  v_12.x = _World2Object[0].y;
  v_12.y = _World2Object[1].y;
  v_12.z = _World2Object[2].y;
  v_12.w = _World2Object[3].y;
  vec4 v_13;
  v_13.x = _World2Object[0].z;
  v_13.y = _World2Object[1].z;
  v_13.z = _World2Object[2].z;
  v_13.w = _World2Object[3].z;
  vec3 tmpvar_14;
  tmpvar_14 = normalize(((
    (v_11.xyz * gl_Normal.x)
   + 
    (v_12.xyz * gl_Normal.y)
  ) + (v_13.xyz * gl_Normal.z)));
  tmpvar_4.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_5.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_6.xyz = tmpvar_14;
  vec4 ambientOrLightmapUV_15;
  ambientOrLightmapUV_15.w = 0.0;
  vec3 col_16;
  vec4 ndotl_17;
  vec4 lengthSq_18;
  vec4 tmpvar_19;
  tmpvar_19 = (unity_4LightPosX0 - tmpvar_7.x);
  vec4 tmpvar_20;
  tmpvar_20 = (unity_4LightPosY0 - tmpvar_7.y);
  vec4 tmpvar_21;
  tmpvar_21 = (unity_4LightPosZ0 - tmpvar_7.z);
  lengthSq_18 = (tmpvar_19 * tmpvar_19);
  lengthSq_18 = (lengthSq_18 + (tmpvar_20 * tmpvar_20));
  lengthSq_18 = (lengthSq_18 + (tmpvar_21 * tmpvar_21));
  ndotl_17 = (tmpvar_19 * tmpvar_14.x);
  ndotl_17 = (ndotl_17 + (tmpvar_20 * tmpvar_14.y));
  ndotl_17 = (ndotl_17 + (tmpvar_21 * tmpvar_14.z));
  vec4 tmpvar_22;
  tmpvar_22 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_17 * inversesqrt(lengthSq_18)));
  ndotl_17 = tmpvar_22;
  vec4 tmpvar_23;
  tmpvar_23 = (tmpvar_22 * (1.0/((1.0 + 
    (lengthSq_18 * unity_4LightAtten0)
  ))));
  col_16 = (unity_LightColor[0].xyz * tmpvar_23.x);
  col_16 = (col_16 + (unity_LightColor[1].xyz * tmpvar_23.y));
  col_16 = (col_16 + (unity_LightColor[2].xyz * tmpvar_23.z));
  col_16 = (col_16 + (unity_LightColor[3].xyz * tmpvar_23.w));
  ambientOrLightmapUV_15.xyz = col_16;
  vec3 ambient_24;
  ambient_24 = ambientOrLightmapUV_15.xyz;
  vec4 tmpvar_25;
  tmpvar_25.w = 1.0;
  tmpvar_25.xyz = tmpvar_14;
  vec3 res_26;
  vec3 x_27;
  x_27.x = dot (unity_SHAr, tmpvar_25);
  x_27.y = dot (unity_SHAg, tmpvar_25);
  x_27.z = dot (unity_SHAb, tmpvar_25);
  vec3 x1_28;
  vec4 tmpvar_29;
  tmpvar_29 = (tmpvar_14.xyzz * tmpvar_14.yzzx);
  x1_28.x = dot (unity_SHBr, tmpvar_29);
  x1_28.y = dot (unity_SHBg, tmpvar_29);
  x1_28.z = dot (unity_SHBb, tmpvar_29);
  res_26 = (x_27 + (x1_28 + (unity_SHC.xyz * 
    ((tmpvar_14.x * tmpvar_14.x) - (tmpvar_14.y * tmpvar_14.y))
  )));
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    res_26 = max (((1.055 * 
      pow (max (res_26, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
    ) - 0.055), vec3(0.0, 0.0, 0.0));
  };
  ambient_24 = (col_16 + max (vec3(0.0, 0.0, 0.0), res_26));
  ambientOrLightmapUV_15.xyz = ambient_24;
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = texcoord_8;
  xlv_TEXCOORD1 = tmpvar_10;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  xlv_TEXCOORD5 = ambientOrLightmapUV_15;
}


#endif
#ifdef FRAGMENT
uniform vec4 _WorldSpaceLightPos0;
uniform samplerCube unity_SpecCube0;
uniform vec4 unity_SpecCube0_HDR;
uniform vec4 unity_ColorSpaceDielectricSpec;
uniform vec4 _LightColor0;
uniform sampler2D unity_NHxRoughness;
uniform vec4 _Color;
uniform sampler2D _MainTex;
uniform float _Metallic;
uniform float _Glossiness;
uniform sampler2D _OcclusionMap;
uniform vec4 _EmissionColor;
uniform sampler2D _EmissionMap;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
void main ()
{
  vec4 c_1;
  vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  vec3 tmpvar_3;
  tmpvar_3 = (_Color.xyz * tmpvar_2.xyz);
  vec3 tmpvar_4;
  vec3 tmpvar_5;
  tmpvar_5 = mix (unity_ColorSpaceDielectricSpec.xyz, tmpvar_3, vec3(_Metallic));
  float tmpvar_6;
  tmpvar_6 = (unity_ColorSpaceDielectricSpec.w - (_Metallic * unity_ColorSpaceDielectricSpec.w));
  tmpvar_4 = (tmpvar_3 * tmpvar_6);
  vec3 tmpvar_7;
  tmpvar_7 = normalize(xlv_TEXCOORD2_2.xyz);
  float tmpvar_8;
  tmpvar_8 = texture2D (_OcclusionMap, xlv_TEXCOORD0.xy).y;
  vec3 tmpvar_9;
  float tmpvar_10;
  tmpvar_10 = (1.0 - _Glossiness);
  tmpvar_9 = (xlv_TEXCOORD1 - (2.0 * (
    dot (tmpvar_7, xlv_TEXCOORD1)
   * tmpvar_7)));
  vec4 tmpvar_11;
  tmpvar_11.xyz = tmpvar_9;
  tmpvar_11.w = ((tmpvar_10 * (1.7 - 
    (0.7 * tmpvar_10)
  )) * 6.0);
  vec4 tmpvar_12;
  tmpvar_12 = textureCube (unity_SpecCube0, tmpvar_9, tmpvar_11.w);
  vec3 viewDir_13;
  viewDir_13 = -(xlv_TEXCOORD1);
  vec3 color_14;
  vec2 tmpvar_15;
  tmpvar_15.x = dot ((viewDir_13 - (2.0 * 
    (dot (tmpvar_7, viewDir_13) * tmpvar_7)
  )), _WorldSpaceLightPos0.xyz);
  tmpvar_15.y = (1.0 - clamp (dot (tmpvar_7, viewDir_13), 0.0, 1.0));
  vec2 tmpvar_16;
  tmpvar_16 = ((tmpvar_15 * tmpvar_15) * (tmpvar_15 * tmpvar_15));
  vec2 tmpvar_17;
  tmpvar_17.x = tmpvar_16.x;
  tmpvar_17.y = tmpvar_10;
  color_14 = ((tmpvar_4 + (
    (texture2D (unity_NHxRoughness, tmpvar_17).w * 16.0)
   * tmpvar_5)) * (_LightColor0.xyz * clamp (
    dot (tmpvar_7, _WorldSpaceLightPos0.xyz)
  , 0.0, 1.0)));
  color_14 = (color_14 + ((
    (xlv_TEXCOORD5.xyz * tmpvar_8)
   * tmpvar_4) + (
    (((unity_SpecCube0_HDR.x * pow (tmpvar_12.w, unity_SpecCube0_HDR.y)) * tmpvar_12.xyz) * tmpvar_8)
   * 
    mix (tmpvar_5, vec3(clamp ((_Glossiness + (1.0 - tmpvar_6)), 0.0, 1.0)), tmpvar_16.yyy)
  )));
  vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = color_14;
  c_1.w = tmpvar_18.w;
  c_1.xyz = (color_14 + (texture2D (_EmissionMap, xlv_TEXCOORD0.xy).xyz * _EmissionColor.xyz));
  vec4 xlat_varoutput_19;
  xlat_varoutput_19.xyz = c_1.xyz;
  xlat_varoutput_19.w = (tmpvar_2.w * _Color.w);
  gl_FragData[0] = xlat_varoutput_19;
}


#endif
"
}
SubProgram "d3d9 " {
// Stats: 83 math
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "VERTEXLIGHT_ON" "_ALPHABLEND_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Matrix 8 [_Object2World] 3
Matrix 11 [_World2Object] 3
Matrix 4 [glstate_matrix_mvp]
Vector 28 [_DetailAlbedoMap_ST]
Vector 27 [_MainTex_ST]
Float 29 [_UVSec]
Vector 14 [_WorldSpaceCameraPos]
Vector 18 [unity_4LightAtten0]
Vector 15 [unity_4LightPosX0]
Vector 16 [unity_4LightPosY0]
Vector 17 [unity_4LightPosZ0]
Vector 26 [unity_ColorSpaceLuminance]
Vector 0 [unity_LightColor0]
Vector 1 [unity_LightColor1]
Vector 2 [unity_LightColor2]
Vector 3 [unity_LightColor3]
Vector 21 [unity_SHAb]
Vector 20 [unity_SHAg]
Vector 19 [unity_SHAr]
Vector 24 [unity_SHBb]
Vector 23 [unity_SHBg]
Vector 22 [unity_SHBr]
Vector 25 [unity_SHC]
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   row_major float4x4 _Object2World;
//   float _UVSec;
//   row_major float4x4 _World2Object;
//   float3 _WorldSpaceCameraPos;
//   row_major float4x4 glstate_matrix_mvp;
//   float4 unity_4LightAtten0;
//   float4 unity_4LightPosX0;
//   float4 unity_4LightPosY0;
//   float4 unity_4LightPosZ0;
//   float4 unity_ColorSpaceLuminance;
//   float4 unity_LightColor[8];
//   float4 unity_SHAb;
//   float4 unity_SHAg;
//   float4 unity_SHAr;
//   float4 unity_SHBb;
//   float4 unity_SHBg;
//   float4 unity_SHBr;
//   float4 unity_SHC;
//
//
// Registers:
//
//   Name                      Reg   Size
//   ------------------------- ----- ----
//   unity_LightColor          c0       4
//   glstate_matrix_mvp        c4       4
//   _Object2World             c8       3
//   _World2Object             c11      3
//   _WorldSpaceCameraPos      c14      1
//   unity_4LightPosX0         c15      1
//   unity_4LightPosY0         c16      1
//   unity_4LightPosZ0         c17      1
//   unity_4LightAtten0        c18      1
//   unity_SHAr                c19      1
//   unity_SHAg                c20      1
//   unity_SHAb                c21      1
//   unity_SHBr                c22      1
//   unity_SHBg                c23      1
//   unity_SHBb                c24      1
//   unity_SHC                 c25      1
//   unity_ColorSpaceLuminance c26      1
//   _MainTex_ST               c27      1
//   _DetailAlbedoMap_ST       c28      1
//   _UVSec                    c29      1
//

    vs_2_0
    def c30, 0, 1, 0.416666657, 0
    def c31, 1.05499995, -0.0549999997, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dp4 oPos.x, c4, v0
    dp4 oPos.y, c5, v0
    dp4 oPos.z, c6, v0
    dp4 oPos.w, c7, v0
    mad oT0.xy, v2, c27, c27.zwzw
    mul r0.x, c29.x, c29.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad oT0.zw, r2.xyxy, c28.xyxy, c28
    dp4 r0.x, c8, v0
    dp4 r0.y, c9, v0
    dp4 r0.z, c10, v0
    add r1.xyz, r0, -c14
    add r2, -r0.x, c15
    add r3, -r0.y, c16
    add r0, -r0.z, c17
    dp3 r1.w, r1, r1
    rsq r1.w, r1.w
    mul oT1.xyz, r1.w, r1
    mul r1, r3, r3
    mad r1, r2, r2, r1
    mad r1, r0, r0, r1
    rsq r4.x, r1.x
    rsq r4.y, r1.y
    rsq r4.z, r1.z
    rsq r4.w, r1.w
    mov r5.y, c30.y
    mad r1, r1, c18, r5.y
    mul r5.xyz, v1.y, c12
    mad r5.xyz, c11, v1.x, r5
    mad r5.xyz, c13, v1.z, r5
    nrm r6.xyz, r5
    mul r3, r3, r6.y
    mad r2, r2, r6.x, r3
    mad r0, r0, r6.z, r2
    mul r0, r4, r0
    max r0, r0, c30.x
    rcp r2.x, r1.x
    rcp r2.y, r1.y
    rcp r2.z, r1.z
    rcp r2.w, r1.w
    mul r0, r0, r2
    mul r1.xyz, r0.y, c1
    mad r1.xyz, c0, r0.x, r1
    mad r0.xyz, c2, r0.z, r1
    mad r0.xyz, c3, r0.w, r0
    mul r0.w, r6.y, r6.y
    mad r0.w, r6.x, r6.x, -r0.w
    mul r1, r6.yzzx, r6.xyzz
    dp4 r2.x, c22, r1
    dp4 r2.y, c23, r1
    dp4 r2.z, c24, r1
    mad r1.xyz, c25, r0.w, r2
    mov r6.w, c30.y
    dp4 r2.x, c19, r6
    dp4 r2.y, c20, r6
    dp4 r2.z, c21, r6
    mov oT4.xyz, r6
    add r1.xyz, r1, r2
    max r2.xyz, r1, c30.x
    mov r2.w, c30.z
    lit r3, r2.xxww
    mov r3.x, r3.z
    lit r4, r2.yyww
    lit r2, r2.zzww
    mov r3.z, r2.z
    mov r3.y, r4.z
    mad r2.xyz, r3, c31.x, c31.y
    max r2.xyz, r2, c30.x
    mul r0.w, c26.w, c26.w
    sge r0.w, -r0.w, r0.w
    lrp r3.xyz, r0.w, r2, r1
    max r1.xyz, r3, c30.x
    add oT5.xyz, r0, r1
    mov oT2, c30.x
    mov oT3, c30.x
    mov oT4.w, c30.x
    mov oT5.w, c30.x

// approximately 81 instruction slots used
"
}
SubProgram "d3d11 " {
// Stats: 68 math
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "VERTEXLIGHT_ON" "_ALPHABLEND_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
ConstBuffer "$Globals" 240
Vector 48 [unity_ColorSpaceLuminance]
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 32 [unity_4LightPosX0]
Vector 48 [unity_4LightPosY0]
Vector 64 [unity_4LightPosZ0]
Vector 80 [unity_4LightAtten0]
Vector 96 [unity_LightColor0]
Vector 112 [unity_LightColor1]
Vector 128 [unity_LightColor2]
Vector 144 [unity_LightColor3]
Vector 160 [unity_LightColor4]
Vector 176 [unity_LightColor5]
Vector 192 [unity_LightColor6]
Vector 208 [unity_LightColor7]
Vector 608 [unity_SHAr]
Vector 624 [unity_SHAg]
Vector 640 [unity_SHAb]
Vector 656 [unity_SHBr]
Vector 672 [unity_SHBg]
Vector 688 [unity_SHBb]
Vector 704 [unity_SHC]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer cb0[14], immediateIndexed
      dcl_constantbuffer cb1[5], immediateIndexed
      dcl_constantbuffer cb2[45], immediateIndexed
      dcl_constantbuffer cb3[19], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 6
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: mad o0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   4: eq r0.x, cb0[13].z, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[11].xxxy, cb0[11].zzzw
   7: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: rsq r0.w, r0.w
  15: mul o2.xyz, r0.wwww, r1.xyzx
  16: mov o3.xyzw, l(0,0,0,0)
  17: mov o4.xyzw, l(0,0,0,0)
  18: mov o5.w, l(0)
  19: mul r1.x, v1.x, cb3[16].x
  20: mul r1.y, v1.x, cb3[17].x
  21: mul r1.z, v1.x, cb3[18].x
  22: mul r2.x, v1.y, cb3[16].y
  23: mul r2.y, v1.y, cb3[17].y
  24: mul r2.z, v1.y, cb3[18].y
  25: add r1.xyz, r1.xyzx, r2.xyzx
  26: mul r2.x, v1.z, cb3[16].z
  27: mul r2.y, v1.z, cb3[17].z
  28: mul r2.z, v1.z, cb3[18].z
  29: add r1.xyz, r1.xyzx, r2.xyzx
  30: dp3 r0.w, r1.xyzx, r1.xyzx
  31: rsq r0.w, r0.w
  32: mul r1.xyz, r0.wwww, r1.xyzx
  33: mov o5.xyz, r1.xyzx
  34: mul r0.w, r1.y, r1.y
  35: mad r0.w, r1.x, r1.x, -r0.w
  36: mul r2.xyzw, r1.yzzx, r1.xyzz
  37: dp4 r3.x, cb2[41].xyzw, r2.xyzw
  38: dp4 r3.y, cb2[42].xyzw, r2.xyzw
  39: dp4 r3.z, cb2[43].xyzw, r2.xyzw
  40: mad r2.xyz, cb2[44].xyzx, r0.wwww, r3.xyzx
  41: mov r1.w, l(1.000000)
  42: dp4 r3.x, cb2[38].xyzw, r1.xyzw
  43: dp4 r3.y, cb2[39].xyzw, r1.xyzw
  44: dp4 r3.z, cb2[40].xyzw, r1.xyzw
  45: add r2.xyz, r2.xyzx, r3.xyzx
  46: max r3.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  47: log r3.xyz, r3.xyzx
  48: mul r3.xyz, r3.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  49: exp r3.xyz, r3.xyzx
  50: mad r3.xyz, r3.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  51: max r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  52: eq r0.w, cb0[3].w, l(0.000000)
  53: movc r2.xyz, r0.wwww, r3.xyzx, r2.xyzx
  54: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  55: add r3.xyzw, -r0.yyyy, cb2[3].xyzw
  56: mul r4.xyzw, r1.yyyy, r3.xyzw
  57: mul r3.xyzw, r3.xyzw, r3.xyzw
  58: add r5.xyzw, -r0.xxxx, cb2[2].xyzw
  59: add r0.xyzw, -r0.zzzz, cb2[4].xyzw
  60: mad r4.xyzw, r5.xyzw, r1.xxxx, r4.xyzw
  61: mad r1.xyzw, r0.xyzw, r1.zzzz, r4.xyzw
  62: mad r3.xyzw, r5.xyzw, r5.xyzw, r3.xyzw
  63: mad r0.xyzw, r0.xyzw, r0.xyzw, r3.xyzw
  64: rsq r3.xyzw, r0.xyzw
  65: mad r0.xyzw, r0.xyzw, cb2[5].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  66: div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
  67: mul r1.xyzw, r1.xyzw, r3.xyzw
  68: max r1.xyzw, r1.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  69: mul r0.xyzw, r0.xyzw, r1.xyzw
  70: mul r1.xyz, r0.yyyy, cb2[7].xyzx
  71: mad r1.xyz, cb2[6].xyzx, r0.xxxx, r1.xyzx
  72: mad r0.xyz, cb2[8].xyzx, r0.zzzz, r1.xyzx
  73: mad r0.xyz, cb2[9].xyzx, r0.wwww, r0.xyzx
  74: add o6.xyz, r2.xyzx, r0.xyzx
  75: mov o6.w, l(0)
  76: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "d3d11_9x " {
// Stats: 66 math
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "VERTEXLIGHT_ON" "_ALPHABLEND_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
ConstBuffer "$Globals" 240
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 32 [unity_4LightPosX0]
Vector 48 [unity_4LightPosY0]
Vector 64 [unity_4LightPosZ0]
Vector 80 [unity_4LightAtten0]
Vector 96 [unity_LightColor0]
Vector 112 [unity_LightColor1]
Vector 128 [unity_LightColor2]
Vector 144 [unity_LightColor3]
Vector 160 [unity_LightColor4]
Vector 176 [unity_LightColor5]
Vector 192 [unity_LightColor6]
Vector 208 [unity_LightColor7]
Vector 608 [unity_SHAr]
Vector 624 [unity_SHAg]
Vector 640 [unity_SHAb]
Vector 656 [unity_SHBr]
Vector 672 [unity_SHBg]
Vector 688 [unity_SHBb]
Vector 704 [unity_SHC]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c1         cb0            10         2  ( FLT, FLT, FLT, FLT)
// c3         cb0            13         1  ( FLT, FLT, FLT, FLT)
// c4         cb1             4         1  ( FLT, FLT, FLT, FLT)
// c5         cb2             2         8  ( FLT, FLT, FLT, FLT)
// c13        cb2            38         7  ( FLT, FLT, FLT, FLT)
// c20        cb3             0         4  ( FLT, FLT, FLT, FLT)
// c24        cb3            12         7  ( FLT, FLT, FLT, FLT)
//
//
// Runtime generated constant mappings:
//
// Target Reg                               Constant Description
// ---------- --------------------------------------------------
// c0                              Vertex Shader position offset
//
//
// Level9 shader bytecode:
//
    vs_2_0
          def c31, 0, 1, 0.416666657, 0
          def c32, 1.05499995, -0.0549999997, 0, 0
          dcl_texcoord v0
          dcl_texcoord1 v1
          dcl_texcoord2 v2
          dcl_texcoord3 v3
   0:     mad oT0.xy, v2, c1, c1.zwzw
   1:     mul r0.x, c3.z, c3.z
   2:     sge r0.x, -r0.x, r0.x
   3:     mov r1.xy, v2
   4:     lrp r2.xy, r0.x, r1, v3
   5:     mad oT0.zw, r2.xyxy, c2.xyxy, c2
   6:     mul r0.xyz, v0.y, c25
   7:     mad r0.xyz, c24, v0.x, r0
   8:     mad r0.xyz, c26, v0.z, r0
   9:     mad r0.xyz, c27, v0.w, r0
  10:     add r1.xyz, r0, -c4
  11:     dp3 r0.w, r1, r1
  12:     rsq r0.w, r0.w
  13:     mul oT1.xyz, r0.w, r1
  14:     add r1, -r0.x, c5
  15:     add r2, -r0.y, c6
  16:     add r0, -r0.z, c7
  17:     mul r3.x, v1.x, c28.x
  18:     mul r3.y, v1.x, c29.x
  19:     mul r3.z, v1.x, c30.x
  20:     mul r4.x, v1.y, c28.y
  21:     mul r4.y, v1.y, c29.y
  22:     mul r4.z, v1.y, c30.y
  23:     add r3.xyz, r3, r4
  24:     mul r4.x, v1.z, c28.z
  25:     mul r4.y, v1.z, c29.z
  26:     mul r4.z, v1.z, c30.z
  27:     add r3.xyz, r3, r4
  28:     nrm r4.xyz, r3
  31:     mul r3, r2, r4.y
  32:     mul r2, r2, r2
  33:     mad r2, r1, r1, r2
  34:     mad r1, r1, r4.x, r3
  35:     mad r1, r0, r4.z, r1
  36:     mad r0, r0, r0, r2
  37:     rsq r2.x, r0.x
  38:     rsq r2.y, r0.y
  39:     rsq r2.z, r0.z
  40:     rsq r2.w, r0.w
  41:     mov r3.y, c31.y
  42:     mad r0, r0, c8, r3.y
  43:     mul r1, r1, r2
  44:     max r1, r1, c31.x
  45:     rcp r2.x, r0.x
  46:     rcp r2.y, r0.y
  47:     rcp r2.z, r0.z
  48:     rcp r2.w, r0.w
  49:     mul r0, r1, r2
  50:     mul r1.xyz, r0.y, c10
  51:     mad r1.xyz, c9, r0.x, r1
  52:     mad r0.xyz, c11, r0.z, r1
  53:     mad r0.xyz, c12, r0.w, r0
  54:     mul r0.w, r4.y, r4.y
  55:     mad r0.w, r4.x, r4.x, -r0.w
  56:     mul r1, r4.yzzx, r4.xyzz
  57:     dp4 r2.x, c16, r1
  58:     dp4 r2.y, c17, r1
  59:     dp4 r2.z, c18, r1
  60:     mad r1.xyz, c19, r0.w, r2
  61:     mov r4.w, c31.y
  62:     dp4 r2.x, c13, r4
  63:     dp4 r2.y, c14, r4
  64:     dp4 r2.z, c15, r4
  65:     mov oT4.xyz, r4
  66:     add r1.xyz, r1, r2
  67:     max r1.xyz, r1, c31.x
  68:     mov r1.w, c31.z
  69:     lit r2, r1.xxww
  70:     mov r2.x, r2.z
  71:     lit r3, r1.yyww
  72:     lit r1, r1.zzww
  73:     mov r2.z, r1.z
  74:     mov r2.y, r3.z
  75:     mad r1.xyz, r2, c32.x, c32.y
  76:     max r1.xyz, r1, c31.x
  77:     add oT5.xyz, r0, r1
  78:     mul r0, v0.y, c21
  79:     mad r0, c20, v0.x, r0
  80:     mad r0, c22, v0.z, r0
  81:     mad r0, c23, v0.w, r0
  82:     mad oPos.xy, r0.w, c0, r0
  83:     mov oPos.zw, r0
  84:     mov oT2, c31.x
  85:     mov oT3, c31.x
  86:     mov oT4.w, c31.x
  87:     mov oT5.w, c31.x

// approximately 88 instruction slots used
      vs_4_0
      dcl_constantbuffer cb0[14], immediateIndexed
      dcl_constantbuffer cb1[5], immediateIndexed
      dcl_constantbuffer cb2[45], immediateIndexed
      dcl_constantbuffer cb3[19], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 6
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: mad o0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   4: eq r0.x, cb0[13].z, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[11].xxxy, cb0[11].zzzw
   7: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: rsq r0.w, r0.w
  15: mul o2.xyz, r0.wwww, r1.xyzx
  16: mov o3.xyzw, l(0,0,0,0)
  17: mov o4.xyzw, l(0,0,0,0)
  18: mov o5.w, l(0)
  19: mul r1.x, v1.x, cb3[16].x
  20: mul r1.y, v1.x, cb3[17].x
  21: mul r1.z, v1.x, cb3[18].x
  22: mul r2.x, v1.y, cb3[16].y
  23: mul r2.y, v1.y, cb3[17].y
  24: mul r2.z, v1.y, cb3[18].y
  25: add r1.xyz, r1.xyzx, r2.xyzx
  26: mul r2.x, v1.z, cb3[16].z
  27: mul r2.y, v1.z, cb3[17].z
  28: mul r2.z, v1.z, cb3[18].z
  29: add r1.xyz, r1.xyzx, r2.xyzx
  30: dp3 r0.w, r1.xyzx, r1.xyzx
  31: rsq r0.w, r0.w
  32: mul r1.xyz, r0.wwww, r1.xyzx
  33: mov o5.xyz, r1.xyzx
  34: mul r0.w, r1.y, r1.y
  35: mad r0.w, r1.x, r1.x, -r0.w
  36: mul r2.xyzw, r1.yzzx, r1.xyzz
  37: dp4 r3.x, cb2[41].xyzw, r2.xyzw
  38: dp4 r3.y, cb2[42].xyzw, r2.xyzw
  39: dp4 r3.z, cb2[43].xyzw, r2.xyzw
  40: mad r2.xyz, cb2[44].xyzx, r0.wwww, r3.xyzx
  41: mov r1.w, l(1.000000)
  42: dp4 r3.x, cb2[38].xyzw, r1.xyzw
  43: dp4 r3.y, cb2[39].xyzw, r1.xyzw
  44: dp4 r3.z, cb2[40].xyzw, r1.xyzw
  45: add r2.xyz, r2.xyzx, r3.xyzx
  46: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  47: log r2.xyz, r2.xyzx
  48: mul r2.xyz, r2.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  49: exp r2.xyz, r2.xyzx
  50: mad r2.xyz, r2.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  51: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  52: add r3.xyzw, -r0.yyyy, cb2[3].xyzw
  53: mul r4.xyzw, r1.yyyy, r3.xyzw
  54: mul r3.xyzw, r3.xyzw, r3.xyzw
  55: add r5.xyzw, -r0.xxxx, cb2[2].xyzw
  56: add r0.xyzw, -r0.zzzz, cb2[4].xyzw
  57: mad r4.xyzw, r5.xyzw, r1.xxxx, r4.xyzw
  58: mad r1.xyzw, r0.xyzw, r1.zzzz, r4.xyzw
  59: mad r3.xyzw, r5.xyzw, r5.xyzw, r3.xyzw
  60: mad r0.xyzw, r0.xyzw, r0.xyzw, r3.xyzw
  61: rsq r3.xyzw, r0.xyzw
  62: mad r0.xyzw, r0.xyzw, cb2[5].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  63: div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
  64: mul r1.xyzw, r1.xyzw, r3.xyzw
  65: max r1.xyzw, r1.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  66: mul r0.xyzw, r0.xyzw, r1.xyzw
  67: mul r1.xyz, r0.yyyy, cb2[7].xyzx
  68: mad r1.xyz, cb2[6].xyzx, r0.xxxx, r1.xyzx
  69: mad r0.xyz, cb2[8].xyzx, r0.zzzz, r1.xyzx
  70: mad r0.xyz, cb2[9].xyzx, r0.wwww, r0.xyzx
  71: add o6.xyz, r2.xyzx, r0.xyzx
  72: mov o6.w, l(0)
  73: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
// Stats: 52 math, 6 textures
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "VERTEXLIGHT_ON" "_ALPHABLEND_ON" }
"#version 120

#ifdef VERTEX
uniform vec3 _WorldSpaceCameraPos;
uniform vec4 _ProjectionParams;
uniform vec4 unity_4LightPosX0;
uniform vec4 unity_4LightPosY0;
uniform vec4 unity_4LightPosZ0;
uniform vec4 unity_4LightAtten0;
uniform vec4 unity_LightColor[8];
uniform vec4 unity_SHAr;
uniform vec4 unity_SHAg;
uniform vec4 unity_SHAb;
uniform vec4 unity_SHBr;
uniform vec4 unity_SHBg;
uniform vec4 unity_SHBb;
uniform vec4 unity_SHC;

uniform mat4 _Object2World;
uniform mat4 _World2Object;
uniform vec4 unity_ColorSpaceLuminance;
uniform vec4 _MainTex_ST;
uniform vec4 _DetailAlbedoMap_ST;
uniform float _UVSec;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
varying vec4 xlv_TEXCOORD6;
void main ()
{
  vec2 tmpvar_1;
  tmpvar_1 = gl_MultiTexCoord0.xy;
  vec2 tmpvar_2;
  tmpvar_2 = gl_MultiTexCoord1.xy;
  vec4 tmpvar_3;
  vec4 tmpvar_4;
  vec4 tmpvar_5;
  vec4 tmpvar_6;
  vec4 tmpvar_7;
  tmpvar_7 = (_Object2World * gl_Vertex);
  tmpvar_3 = (gl_ModelViewProjectionMatrix * gl_Vertex);
  vec4 texcoord_8;
  texcoord_8.xy = ((gl_MultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  vec2 tmpvar_9;
  if ((_UVSec == 0.0)) {
    tmpvar_9 = tmpvar_1;
  } else {
    tmpvar_9 = tmpvar_2;
  };
  texcoord_8.zw = ((tmpvar_9 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  vec3 tmpvar_10;
  tmpvar_10 = normalize((tmpvar_7.xyz - _WorldSpaceCameraPos));
  vec4 v_11;
  v_11.x = _World2Object[0].x;
  v_11.y = _World2Object[1].x;
  v_11.z = _World2Object[2].x;
  v_11.w = _World2Object[3].x;
  vec4 v_12;
  v_12.x = _World2Object[0].y;
  v_12.y = _World2Object[1].y;
  v_12.z = _World2Object[2].y;
  v_12.w = _World2Object[3].y;
  vec4 v_13;
  v_13.x = _World2Object[0].z;
  v_13.y = _World2Object[1].z;
  v_13.z = _World2Object[2].z;
  v_13.w = _World2Object[3].z;
  vec3 tmpvar_14;
  tmpvar_14 = normalize(((
    (v_11.xyz * gl_Normal.x)
   + 
    (v_12.xyz * gl_Normal.y)
  ) + (v_13.xyz * gl_Normal.z)));
  tmpvar_4.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_5.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_6.xyz = tmpvar_14;
  vec4 o_15;
  vec4 tmpvar_16;
  tmpvar_16 = (tmpvar_3 * 0.5);
  vec2 tmpvar_17;
  tmpvar_17.x = tmpvar_16.x;
  tmpvar_17.y = (tmpvar_16.y * _ProjectionParams.x);
  o_15.xy = (tmpvar_17 + tmpvar_16.w);
  o_15.zw = tmpvar_3.zw;
  vec4 ambientOrLightmapUV_18;
  ambientOrLightmapUV_18.w = 0.0;
  vec3 col_19;
  vec4 ndotl_20;
  vec4 lengthSq_21;
  vec4 tmpvar_22;
  tmpvar_22 = (unity_4LightPosX0 - tmpvar_7.x);
  vec4 tmpvar_23;
  tmpvar_23 = (unity_4LightPosY0 - tmpvar_7.y);
  vec4 tmpvar_24;
  tmpvar_24 = (unity_4LightPosZ0 - tmpvar_7.z);
  lengthSq_21 = (tmpvar_22 * tmpvar_22);
  lengthSq_21 = (lengthSq_21 + (tmpvar_23 * tmpvar_23));
  lengthSq_21 = (lengthSq_21 + (tmpvar_24 * tmpvar_24));
  ndotl_20 = (tmpvar_22 * tmpvar_14.x);
  ndotl_20 = (ndotl_20 + (tmpvar_23 * tmpvar_14.y));
  ndotl_20 = (ndotl_20 + (tmpvar_24 * tmpvar_14.z));
  vec4 tmpvar_25;
  tmpvar_25 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_20 * inversesqrt(lengthSq_21)));
  ndotl_20 = tmpvar_25;
  vec4 tmpvar_26;
  tmpvar_26 = (tmpvar_25 * (1.0/((1.0 + 
    (lengthSq_21 * unity_4LightAtten0)
  ))));
  col_19 = (unity_LightColor[0].xyz * tmpvar_26.x);
  col_19 = (col_19 + (unity_LightColor[1].xyz * tmpvar_26.y));
  col_19 = (col_19 + (unity_LightColor[2].xyz * tmpvar_26.z));
  col_19 = (col_19 + (unity_LightColor[3].xyz * tmpvar_26.w));
  ambientOrLightmapUV_18.xyz = col_19;
  vec3 ambient_27;
  ambient_27 = ambientOrLightmapUV_18.xyz;
  vec4 tmpvar_28;
  tmpvar_28.w = 1.0;
  tmpvar_28.xyz = tmpvar_14;
  vec3 res_29;
  vec3 x_30;
  x_30.x = dot (unity_SHAr, tmpvar_28);
  x_30.y = dot (unity_SHAg, tmpvar_28);
  x_30.z = dot (unity_SHAb, tmpvar_28);
  vec3 x1_31;
  vec4 tmpvar_32;
  tmpvar_32 = (tmpvar_14.xyzz * tmpvar_14.yzzx);
  x1_31.x = dot (unity_SHBr, tmpvar_32);
  x1_31.y = dot (unity_SHBg, tmpvar_32);
  x1_31.z = dot (unity_SHBb, tmpvar_32);
  res_29 = (x_30 + (x1_31 + (unity_SHC.xyz * 
    ((tmpvar_14.x * tmpvar_14.x) - (tmpvar_14.y * tmpvar_14.y))
  )));
  if ((unity_ColorSpaceLuminance.w == 0.0)) {
    res_29 = max (((1.055 * 
      pow (max (res_29, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
    ) - 0.055), vec3(0.0, 0.0, 0.0));
  };
  ambient_27 = (col_19 + max (vec3(0.0, 0.0, 0.0), res_29));
  ambientOrLightmapUV_18.xyz = ambient_27;
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = texcoord_8;
  xlv_TEXCOORD1 = tmpvar_10;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  xlv_TEXCOORD5 = ambientOrLightmapUV_18;
  xlv_TEXCOORD6 = o_15;
}


#endif
#ifdef FRAGMENT
uniform vec4 _WorldSpaceLightPos0;
uniform samplerCube unity_SpecCube0;
uniform vec4 unity_SpecCube0_HDR;
uniform vec4 unity_ColorSpaceDielectricSpec;
uniform vec4 _LightColor0;
uniform sampler2D unity_NHxRoughness;
uniform vec4 _Color;
uniform sampler2D _MainTex;
uniform float _Metallic;
uniform float _Glossiness;
uniform sampler2D _OcclusionMap;
uniform vec4 _EmissionColor;
uniform sampler2D _EmissionMap;
uniform sampler2D _ShadowMapTexture;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
varying vec4 xlv_TEXCOORD6;
void main ()
{
  vec4 c_1;
  vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  vec3 tmpvar_3;
  tmpvar_3 = (_Color.xyz * tmpvar_2.xyz);
  vec3 tmpvar_4;
  vec3 tmpvar_5;
  tmpvar_5 = mix (unity_ColorSpaceDielectricSpec.xyz, tmpvar_3, vec3(_Metallic));
  float tmpvar_6;
  tmpvar_6 = (unity_ColorSpaceDielectricSpec.w - (_Metallic * unity_ColorSpaceDielectricSpec.w));
  tmpvar_4 = (tmpvar_3 * tmpvar_6);
  vec3 tmpvar_7;
  tmpvar_7 = normalize(xlv_TEXCOORD2_2.xyz);
  float tmpvar_8;
  tmpvar_8 = texture2D (_OcclusionMap, xlv_TEXCOORD0.xy).y;
  vec3 tmpvar_9;
  float tmpvar_10;
  tmpvar_10 = (1.0 - _Glossiness);
  tmpvar_9 = (xlv_TEXCOORD1 - (2.0 * (
    dot (tmpvar_7, xlv_TEXCOORD1)
   * tmpvar_7)));
  vec4 tmpvar_11;
  tmpvar_11.xyz = tmpvar_9;
  tmpvar_11.w = ((tmpvar_10 * (1.7 - 
    (0.7 * tmpvar_10)
  )) * 6.0);
  vec4 tmpvar_12;
  tmpvar_12 = textureCube (unity_SpecCube0, tmpvar_9, tmpvar_11.w);
  vec3 viewDir_13;
  viewDir_13 = -(xlv_TEXCOORD1);
  vec3 color_14;
  vec2 tmpvar_15;
  tmpvar_15.x = dot ((viewDir_13 - (2.0 * 
    (dot (tmpvar_7, viewDir_13) * tmpvar_7)
  )), _WorldSpaceLightPos0.xyz);
  tmpvar_15.y = (1.0 - clamp (dot (tmpvar_7, viewDir_13), 0.0, 1.0));
  vec2 tmpvar_16;
  tmpvar_16 = ((tmpvar_15 * tmpvar_15) * (tmpvar_15 * tmpvar_15));
  vec2 tmpvar_17;
  tmpvar_17.x = tmpvar_16.x;
  tmpvar_17.y = tmpvar_10;
  color_14 = ((tmpvar_4 + (
    (texture2D (unity_NHxRoughness, tmpvar_17).w * 16.0)
   * tmpvar_5)) * ((_LightColor0.xyz * texture2DProj (_ShadowMapTexture, xlv_TEXCOORD6).x) * clamp (
    dot (tmpvar_7, _WorldSpaceLightPos0.xyz)
  , 0.0, 1.0)));
  color_14 = (color_14 + ((
    (xlv_TEXCOORD5.xyz * tmpvar_8)
   * tmpvar_4) + (
    (((unity_SpecCube0_HDR.x * pow (tmpvar_12.w, unity_SpecCube0_HDR.y)) * tmpvar_12.xyz) * tmpvar_8)
   * 
    mix (tmpvar_5, vec3(clamp ((_Glossiness + (1.0 - tmpvar_6)), 0.0, 1.0)), tmpvar_16.yyy)
  )));
  vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = color_14;
  c_1.w = tmpvar_18.w;
  c_1.xyz = (color_14 + (texture2D (_EmissionMap, xlv_TEXCOORD0.xy).xyz * _EmissionColor.xyz));
  vec4 xlat_varoutput_19;
  xlat_varoutput_19.xyz = c_1.xyz;
  xlat_varoutput_19.w = (tmpvar_2.w * _Color.w);
  gl_FragData[0] = xlat_varoutput_19;
}


#endif
"
}
SubProgram "d3d9 " {
// Stats: 89 math
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "VERTEXLIGHT_ON" "_ALPHABLEND_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Matrix 8 [_Object2World] 3
Matrix 11 [_World2Object] 3
Matrix 4 [glstate_matrix_mvp]
Vector 30 [_DetailAlbedoMap_ST]
Vector 29 [_MainTex_ST]
Vector 15 [_ProjectionParams]
Vector 16 [_ScreenParams]
Float 31 [_UVSec]
Vector 14 [_WorldSpaceCameraPos]
Vector 20 [unity_4LightAtten0]
Vector 17 [unity_4LightPosX0]
Vector 18 [unity_4LightPosY0]
Vector 19 [unity_4LightPosZ0]
Vector 28 [unity_ColorSpaceLuminance]
Vector 0 [unity_LightColor0]
Vector 1 [unity_LightColor1]
Vector 2 [unity_LightColor2]
Vector 3 [unity_LightColor3]
Vector 23 [unity_SHAb]
Vector 22 [unity_SHAg]
Vector 21 [unity_SHAr]
Vector 26 [unity_SHBb]
Vector 25 [unity_SHBg]
Vector 24 [unity_SHBr]
Vector 27 [unity_SHC]
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   row_major float4x4 _Object2World;
//   float4 _ProjectionParams;
//   float4 _ScreenParams;
//   float _UVSec;
//   row_major float4x4 _World2Object;
//   float3 _WorldSpaceCameraPos;
//   row_major float4x4 glstate_matrix_mvp;
//   float4 unity_4LightAtten0;
//   float4 unity_4LightPosX0;
//   float4 unity_4LightPosY0;
//   float4 unity_4LightPosZ0;
//   float4 unity_ColorSpaceLuminance;
//   float4 unity_LightColor[8];
//   float4 unity_SHAb;
//   float4 unity_SHAg;
//   float4 unity_SHAr;
//   float4 unity_SHBb;
//   float4 unity_SHBg;
//   float4 unity_SHBr;
//   float4 unity_SHC;
//
//
// Registers:
//
//   Name                      Reg   Size
//   ------------------------- ----- ----
//   unity_LightColor          c0       4
//   glstate_matrix_mvp        c4       4
//   _Object2World             c8       3
//   _World2Object             c11      3
//   _WorldSpaceCameraPos      c14      1
//   _ProjectionParams         c15      1
//   _ScreenParams             c16      1
//   unity_4LightPosX0         c17      1
//   unity_4LightPosY0         c18      1
//   unity_4LightPosZ0         c19      1
//   unity_4LightAtten0        c20      1
//   unity_SHAr                c21      1
//   unity_SHAg                c22      1
//   unity_SHAb                c23      1
//   unity_SHBr                c24      1
//   unity_SHBg                c25      1
//   unity_SHBb                c26      1
//   unity_SHC                 c27      1
//   unity_ColorSpaceLuminance c28      1
//   _MainTex_ST               c29      1
//   _DetailAlbedoMap_ST       c30      1
//   _UVSec                    c31      1
//

    vs_2_0
    def c32, 0.5, 0, 1, 0.416666657
    def c33, 1.05499995, -0.0549999997, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    mad oT0.xy, v2, c29, c29.zwzw
    mul r0.x, c31.x, c31.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad oT0.zw, r2.xyxy, c30.xyxy, c30
    dp4 r0.x, c8, v0
    dp4 r0.y, c9, v0
    dp4 r0.z, c10, v0
    add r1.xyz, r0, -c14
    add r2, -r0.x, c17
    add r3, -r0.y, c18
    add r0, -r0.z, c19
    dp3 r1.w, r1, r1
    rsq r1.w, r1.w
    mul oT1.xyz, r1.w, r1
    dp4 r1.y, c5, v0
    mul r4.x, r1.y, c15.x
    mul r4.w, r4.x, c32.x
    dp4 r1.x, c4, v0
    dp4 r1.w, c7, v0
    mul r4.xz, r1.xyww, c32.x
    mad oT6.xy, r4.z, c16.zwzw, r4.xwzw
    mul r4, r3, r3
    mad r4, r2, r2, r4
    mad r4, r0, r0, r4
    rsq r5.x, r4.x
    rsq r5.y, r4.y
    rsq r5.z, r4.z
    rsq r5.w, r4.w
    mov r6.z, c32.z
    mad r4, r4, c20, r6.z
    mul r6.xyz, v1.y, c12
    mad r6.xyz, c11, v1.x, r6
    mad r6.xyz, c13, v1.z, r6
    nrm r7.xyz, r6
    mul r3, r3, r7.y
    mad r2, r2, r7.x, r3
    mad r0, r0, r7.z, r2
    mul r0, r5, r0
    max r0, r0, c32.y
    rcp r2.x, r4.x
    rcp r2.y, r4.y
    rcp r2.z, r4.z
    rcp r2.w, r4.w
    mul r0, r0, r2
    mul r2.xyz, r0.y, c1
    mad r2.xyz, c0, r0.x, r2
    mad r0.xyz, c2, r0.z, r2
    mad r0.xyz, c3, r0.w, r0
    mul r0.w, r7.y, r7.y
    mad r0.w, r7.x, r7.x, -r0.w
    mul r2, r7.yzzx, r7.xyzz
    dp4 r3.x, c24, r2
    dp4 r3.y, c25, r2
    dp4 r3.z, c26, r2
    mad r2.xyz, c27, r0.w, r3
    mov r7.w, c32.z
    dp4 r3.x, c21, r7
    dp4 r3.y, c22, r7
    dp4 r3.z, c23, r7
    mov oT4.xyz, r7
    add r2.xyz, r2, r3
    max r3.xyz, r2, c32.y
    mov r3.w, c32.w
    lit r4, r3.xxww
    mov r4.x, r4.z
    lit r5, r3.yyww
    lit r3, r3.zzww
    mov r4.z, r3.z
    mov r4.y, r5.z
    mad r3.xyz, r4, c33.x, c33.y
    max r3.xyz, r3, c32.y
    mul r0.w, c28.w, c28.w
    sge r0.w, -r0.w, r0.w
    lrp r4.xyz, r0.w, r3, r2
    max r2.xyz, r4, c32.y
    add oT5.xyz, r0, r2
    dp4 r1.z, c6, v0
    mov oPos, r1
    mov oT6.zw, r1
    mov oT2, c32.y
    mov oT3, c32.y
    mov oT4.w, c32.y
    mov oT5.w, c32.y

// approximately 87 instruction slots used
"
}
SubProgram "d3d11 " {
// Stats: 71 math
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "VERTEXLIGHT_ON" "_ALPHABLEND_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
ConstBuffer "$Globals" 240
Vector 48 [unity_ColorSpaceLuminance]
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
Vector 80 [_ProjectionParams]
ConstBuffer "UnityLighting" 720
Vector 32 [unity_4LightPosX0]
Vector 48 [unity_4LightPosY0]
Vector 64 [unity_4LightPosZ0]
Vector 80 [unity_4LightAtten0]
Vector 96 [unity_LightColor0]
Vector 112 [unity_LightColor1]
Vector 128 [unity_LightColor2]
Vector 144 [unity_LightColor3]
Vector 160 [unity_LightColor4]
Vector 176 [unity_LightColor5]
Vector 192 [unity_LightColor6]
Vector 208 [unity_LightColor7]
Vector 608 [unity_SHAr]
Vector 624 [unity_SHAg]
Vector 640 [unity_SHAb]
Vector 656 [unity_SHBr]
Vector 672 [unity_SHBg]
Vector 688 [unity_SHBb]
Vector 704 [unity_SHC]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer cb0[14], immediateIndexed
      dcl_constantbuffer cb1[6], immediateIndexed
      dcl_constantbuffer cb2[45], immediateIndexed
      dcl_constantbuffer cb3[19], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 7
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   4: mov o0.xyzw, r0.xyzw
   5: eq r1.x, cb0[13].z, l(0.000000)
   6: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
   7: mad o1.zw, r1.xxxy, cb0[11].xxxy, cb0[11].zzzw
   8: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   9: mul r1.xyz, v0.yyyy, cb3[13].xyzx
  10: mad r1.xyz, cb3[12].xyzx, v0.xxxx, r1.xyzx
  11: mad r1.xyz, cb3[14].xyzx, v0.zzzz, r1.xyzx
  12: mad r1.xyz, cb3[15].xyzx, v0.wwww, r1.xyzx
  13: add r2.xyz, r1.xyzx, -cb1[4].xyzx
  14: dp3 r1.w, r2.xyzx, r2.xyzx
  15: rsq r1.w, r1.w
  16: mul o2.xyz, r1.wwww, r2.xyzx
  17: mov o3.xyzw, l(0,0,0,0)
  18: mov o4.xyzw, l(0,0,0,0)
  19: mov o5.w, l(0)
  20: mul r2.x, v1.x, cb3[16].x
  21: mul r2.y, v1.x, cb3[17].x
  22: mul r2.z, v1.x, cb3[18].x
  23: mul r3.x, v1.y, cb3[16].y
  24: mul r3.y, v1.y, cb3[17].y
  25: mul r3.z, v1.y, cb3[18].y
  26: add r2.xyz, r2.xyzx, r3.xyzx
  27: mul r3.x, v1.z, cb3[16].z
  28: mul r3.y, v1.z, cb3[17].z
  29: mul r3.z, v1.z, cb3[18].z
  30: add r2.xyz, r2.xyzx, r3.xyzx
  31: dp3 r1.w, r2.xyzx, r2.xyzx
  32: rsq r1.w, r1.w
  33: mul r2.xyz, r1.wwww, r2.xyzx
  34: mov o5.xyz, r2.xyzx
  35: mul r1.w, r2.y, r2.y
  36: mad r1.w, r2.x, r2.x, -r1.w
  37: mul r3.xyzw, r2.yzzx, r2.xyzz
  38: dp4 r4.x, cb2[41].xyzw, r3.xyzw
  39: dp4 r4.y, cb2[42].xyzw, r3.xyzw
  40: dp4 r4.z, cb2[43].xyzw, r3.xyzw
  41: mad r3.xyz, cb2[44].xyzx, r1.wwww, r4.xyzx
  42: mov r2.w, l(1.000000)
  43: dp4 r4.x, cb2[38].xyzw, r2.xyzw
  44: dp4 r4.y, cb2[39].xyzw, r2.xyzw
  45: dp4 r4.z, cb2[40].xyzw, r2.xyzw
  46: add r3.xyz, r3.xyzx, r4.xyzx
  47: max r4.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  48: log r4.xyz, r4.xyzx
  49: mul r4.xyz, r4.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  50: exp r4.xyz, r4.xyzx
  51: mad r4.xyz, r4.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  52: max r4.xyz, r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  53: eq r1.w, cb0[3].w, l(0.000000)
  54: movc r3.xyz, r1.wwww, r4.xyzx, r3.xyzx
  55: max r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  56: add r4.xyzw, -r1.yyyy, cb2[3].xyzw
  57: mul r5.xyzw, r2.yyyy, r4.xyzw
  58: mul r4.xyzw, r4.xyzw, r4.xyzw
  59: add r6.xyzw, -r1.xxxx, cb2[2].xyzw
  60: add r1.xyzw, -r1.zzzz, cb2[4].xyzw
  61: mad r5.xyzw, r6.xyzw, r2.xxxx, r5.xyzw
  62: mad r2.xyzw, r1.xyzw, r2.zzzz, r5.xyzw
  63: mad r4.xyzw, r6.xyzw, r6.xyzw, r4.xyzw
  64: mad r1.xyzw, r1.xyzw, r1.xyzw, r4.xyzw
  65: rsq r4.xyzw, r1.xyzw
  66: mad r1.xyzw, r1.xyzw, cb2[5].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  67: div r1.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r1.xyzw
  68: mul r2.xyzw, r2.xyzw, r4.xyzw
  69: max r2.xyzw, r2.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  70: mul r1.xyzw, r1.xyzw, r2.xyzw
  71: mul r2.xyz, r1.yyyy, cb2[7].xyzx
  72: mad r2.xyz, cb2[6].xyzx, r1.xxxx, r2.xyzx
  73: mad r1.xyz, cb2[8].xyzx, r1.zzzz, r2.xyzx
  74: mad r1.xyz, cb2[9].xyzx, r1.wwww, r1.xyzx
  75: add o6.xyz, r3.xyzx, r1.xyzx
  76: mov o6.w, l(0)
  77: mul r0.y, r0.y, cb1[5].x
  78: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  79: mov o7.zw, r0.zzzw
  80: add o7.xy, r1.zzzz, r1.xwxx
  81: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "d3d11_9x " {
// Stats: 69 math
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "VERTEXLIGHT_ON" "_ALPHABLEND_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
ConstBuffer "$Globals" 240
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
Vector 80 [_ProjectionParams]
ConstBuffer "UnityLighting" 720
Vector 32 [unity_4LightPosX0]
Vector 48 [unity_4LightPosY0]
Vector 64 [unity_4LightPosZ0]
Vector 80 [unity_4LightAtten0]
Vector 96 [unity_LightColor0]
Vector 112 [unity_LightColor1]
Vector 128 [unity_LightColor2]
Vector 144 [unity_LightColor3]
Vector 160 [unity_LightColor4]
Vector 176 [unity_LightColor5]
Vector 192 [unity_LightColor6]
Vector 208 [unity_LightColor7]
Vector 608 [unity_SHAr]
Vector 624 [unity_SHAg]
Vector 640 [unity_SHAb]
Vector 656 [unity_SHBr]
Vector 672 [unity_SHBg]
Vector 688 [unity_SHBb]
Vector 704 [unity_SHC]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c1         cb0            10         2  ( FLT, FLT, FLT, FLT)
// c3         cb0            13         1  ( FLT, FLT, FLT, FLT)
// c4         cb1             4         2  ( FLT, FLT, FLT, FLT)
// c6         cb2             2         8  ( FLT, FLT, FLT, FLT)
// c14        cb2            38         7  ( FLT, FLT, FLT, FLT)
// c21        cb3             0         4  ( FLT, FLT, FLT, FLT)
// c25        cb3            12         7  ( FLT, FLT, FLT, FLT)
//
//
// Runtime generated constant mappings:
//
// Target Reg                               Constant Description
// ---------- --------------------------------------------------
// c0                              Vertex Shader position offset
//
//
// Level9 shader bytecode:
//
    vs_2_0
          def c32, 0.5, 0, 1, 0.416666657
          def c33, 1.05499995, -0.0549999997, 0, 0
          dcl_texcoord v0
          dcl_texcoord1 v1
          dcl_texcoord2 v2
          dcl_texcoord3 v3
   0:     mad oT0.xy, v2, c1, c1.zwzw
   1:     mul r0.x, c3.z, c3.z
   2:     sge r0.x, -r0.x, r0.x
   3:     mov r1.xy, v2
   4:     lrp r2.xy, r0.x, r1, v3
   5:     mad oT0.zw, r2.xyxy, c2.xyxy, c2
   6:     mul r0.xyz, v0.y, c26
   7:     mad r0.xyz, c25, v0.x, r0
   8:     mad r0.xyz, c27, v0.z, r0
   9:     mad r0.xyz, c28, v0.w, r0
  10:     add r1.xyz, r0, -c4
  11:     dp3 r0.w, r1, r1
  12:     rsq r0.w, r0.w
  13:     mul oT1.xyz, r0.w, r1
  14:     mul r1, v0.y, c22
  15:     mad r1, c21, v0.x, r1
  16:     mad r1, c23, v0.z, r1
  17:     mad r1, c24, v0.w, r1
  18:     mul r0.w, r1.y, c5.x
  19:     mul r2.w, r0.w, c32.x
  20:     mul r2.xz, r1.xyww, c32.x
  21:     add oT6.xy, r2.z, r2.xwzw
  22:     add r2, -r0.x, c6
  23:     add r3, -r0.y, c7
  24:     add r0, -r0.z, c8
  25:     mul r4.x, v1.x, c29.x
  26:     mul r4.y, v1.x, c30.x
  27:     mul r4.z, v1.x, c31.x
  28:     mul r5.x, v1.y, c29.y
  29:     mul r5.y, v1.y, c30.y
  30:     mul r5.z, v1.y, c31.y
  31:     add r4.xyz, r4, r5
  32:     mul r5.x, v1.z, c29.z
  33:     mul r5.y, v1.z, c30.z
  34:     mul r5.z, v1.z, c31.z
  35:     add r4.xyz, r4, r5
  36:     nrm r5.xyz, r4
  39:     mul r4, r3, r5.y
  40:     mul r3, r3, r3
  41:     mad r3, r2, r2, r3
  42:     mad r2, r2, r5.x, r4
  43:     mad r2, r0, r5.z, r2
  44:     mad r0, r0, r0, r3
  45:     rsq r3.x, r0.x
  46:     rsq r3.y, r0.y
  47:     rsq r3.z, r0.z
  48:     rsq r3.w, r0.w
  49:     mov r4.z, c32.z
  50:     mad r0, r0, c9, r4.z
  51:     mul r2, r2, r3
  52:     max r2, r2, c32.y
  53:     rcp r3.x, r0.x
  54:     rcp r3.y, r0.y
  55:     rcp r3.z, r0.z
  56:     rcp r3.w, r0.w
  57:     mul r0, r2, r3
  58:     mul r2.xyz, r0.y, c11
  59:     mad r2.xyz, c10, r0.x, r2
  60:     mad r0.xyz, c12, r0.z, r2
  61:     mad r0.xyz, c13, r0.w, r0
  62:     mul r0.w, r5.y, r5.y
  63:     mad r0.w, r5.x, r5.x, -r0.w
  64:     mul r2, r5.yzzx, r5.xyzz
  65:     dp4 r3.x, c17, r2
  66:     dp4 r3.y, c18, r2
  67:     dp4 r3.z, c19, r2
  68:     mad r2.xyz, c20, r0.w, r3
  69:     mov r5.w, c32.z
  70:     dp4 r3.x, c14, r5
  71:     dp4 r3.y, c15, r5
  72:     dp4 r3.z, c16, r5
  73:     mov oT4.xyz, r5
  74:     add r2.xyz, r2, r3
  75:     max r2.xyz, r2, c32.y
  76:     mov r2.w, c32.w
  77:     lit r3, r2.xxww
  78:     mov r3.x, r3.z
  79:     lit r4, r2.yyww
  80:     lit r2, r2.zzww
  81:     mov r3.z, r2.z
  82:     mov r3.y, r4.z
  83:     mad r2.xyz, r3, c33.x, c33.y
  84:     max r2.xyz, r2, c32.y
  85:     add oT5.xyz, r0, r2
  86:     mad oPos.xy, r1.w, c0, r1
  87:     mov oPos.zw, r1
  88:     mov oT6.zw, r1
  89:     mov oT2, c32.y
  90:     mov oT3, c32.y
  91:     mov oT4.w, c32.y
  92:     mov oT5.w, c32.y

// approximately 93 instruction slots used
      vs_4_0
      dcl_constantbuffer cb0[14], immediateIndexed
      dcl_constantbuffer cb1[6], immediateIndexed
      dcl_constantbuffer cb2[45], immediateIndexed
      dcl_constantbuffer cb3[19], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 7
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   4: mov o0.xyzw, r0.xyzw
   5: eq r1.x, cb0[13].z, l(0.000000)
   6: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
   7: mad o1.zw, r1.xxxy, cb0[11].xxxy, cb0[11].zzzw
   8: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   9: mul r1.xyz, v0.yyyy, cb3[13].xyzx
  10: mad r1.xyz, cb3[12].xyzx, v0.xxxx, r1.xyzx
  11: mad r1.xyz, cb3[14].xyzx, v0.zzzz, r1.xyzx
  12: mad r1.xyz, cb3[15].xyzx, v0.wwww, r1.xyzx
  13: add r2.xyz, r1.xyzx, -cb1[4].xyzx
  14: dp3 r1.w, r2.xyzx, r2.xyzx
  15: rsq r1.w, r1.w
  16: mul o2.xyz, r1.wwww, r2.xyzx
  17: mov o3.xyzw, l(0,0,0,0)
  18: mov o4.xyzw, l(0,0,0,0)
  19: mov o5.w, l(0)
  20: mul r2.x, v1.x, cb3[16].x
  21: mul r2.y, v1.x, cb3[17].x
  22: mul r2.z, v1.x, cb3[18].x
  23: mul r3.x, v1.y, cb3[16].y
  24: mul r3.y, v1.y, cb3[17].y
  25: mul r3.z, v1.y, cb3[18].y
  26: add r2.xyz, r2.xyzx, r3.xyzx
  27: mul r3.x, v1.z, cb3[16].z
  28: mul r3.y, v1.z, cb3[17].z
  29: mul r3.z, v1.z, cb3[18].z
  30: add r2.xyz, r2.xyzx, r3.xyzx
  31: dp3 r1.w, r2.xyzx, r2.xyzx
  32: rsq r1.w, r1.w
  33: mul r2.xyz, r1.wwww, r2.xyzx
  34: mov o5.xyz, r2.xyzx
  35: mul r1.w, r2.y, r2.y
  36: mad r1.w, r2.x, r2.x, -r1.w
  37: mul r3.xyzw, r2.yzzx, r2.xyzz
  38: dp4 r4.x, cb2[41].xyzw, r3.xyzw
  39: dp4 r4.y, cb2[42].xyzw, r3.xyzw
  40: dp4 r4.z, cb2[43].xyzw, r3.xyzw
  41: mad r3.xyz, cb2[44].xyzx, r1.wwww, r4.xyzx
  42: mov r2.w, l(1.000000)
  43: dp4 r4.x, cb2[38].xyzw, r2.xyzw
  44: dp4 r4.y, cb2[39].xyzw, r2.xyzw
  45: dp4 r4.z, cb2[40].xyzw, r2.xyzw
  46: add r3.xyz, r3.xyzx, r4.xyzx
  47: max r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  48: log r3.xyz, r3.xyzx
  49: mul r3.xyz, r3.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  50: exp r3.xyz, r3.xyzx
  51: mad r3.xyz, r3.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  52: max r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  53: add r4.xyzw, -r1.yyyy, cb2[3].xyzw
  54: mul r5.xyzw, r2.yyyy, r4.xyzw
  55: mul r4.xyzw, r4.xyzw, r4.xyzw
  56: add r6.xyzw, -r1.xxxx, cb2[2].xyzw
  57: add r1.xyzw, -r1.zzzz, cb2[4].xyzw
  58: mad r5.xyzw, r6.xyzw, r2.xxxx, r5.xyzw
  59: mad r2.xyzw, r1.xyzw, r2.zzzz, r5.xyzw
  60: mad r4.xyzw, r6.xyzw, r6.xyzw, r4.xyzw
  61: mad r1.xyzw, r1.xyzw, r1.xyzw, r4.xyzw
  62: rsq r4.xyzw, r1.xyzw
  63: mad r1.xyzw, r1.xyzw, cb2[5].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  64: div r1.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r1.xyzw
  65: mul r2.xyzw, r2.xyzw, r4.xyzw
  66: max r2.xyzw, r2.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  67: mul r1.xyzw, r1.xyzw, r2.xyzw
  68: mul r2.xyz, r1.yyyy, cb2[7].xyzx
  69: mad r2.xyz, cb2[6].xyzx, r1.xxxx, r2.xyzx
  70: mad r1.xyz, cb2[8].xyzx, r1.zzzz, r2.xyzx
  71: mad r1.xyz, cb2[9].xyzx, r1.wwww, r1.xyzx
  72: add o6.xyz, r3.xyzx, r1.xyzx
  73: mov o6.w, l(0)
  74: mul r0.y, r0.y, cb1[5].x
  75: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  76: mov o7.zw, r0.zzzw
  77: add o7.xy, r1.zzzz, r1.xwxx
  78: ret 
// Approximately 0 instruction slots used
"
}
}
Program "fp" {
SubProgram "opengl " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
"// shader disassembly not supported on opengl"
}
SubProgram "d3d9 " {
// Stats: 48 math, 4 textures
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
Vector 4 [_Color]
Float 6 [_Glossiness]
Vector 3 [_LightColor0]
Float 5 [_Metallic]
Vector 0 [_WorldSpaceLightPos0]
Vector 2 [unity_ColorSpaceDielectricSpec]
Vector 1 [unity_SpecCube0_HDR]
SetTexture 0 [unity_SpecCube0] CUBE 0
SetTexture 1 [unity_NHxRoughness] 2D 1
SetTexture 2 [_MainTex] 2D 2
SetTexture 3 [_OcclusionMap] 2D 3
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D _OcclusionMap;
//   float4 _WorldSpaceLightPos0;
//   float4 unity_ColorSpaceDielectricSpec;
//   sampler2D unity_NHxRoughness;
//   samplerCUBE unity_SpecCube0;
//   float4 unity_SpecCube0_HDR;
//
//
// Registers:
//
//   Name                           Reg   Size
//   ------------------------------ ----- ----
//   _WorldSpaceLightPos0           c0       1
//   unity_SpecCube0_HDR            c1       1
//   unity_ColorSpaceDielectricSpec c2       1
//   _LightColor0                   c3       1
//   _Color                         c4       1
//   _Metallic                      c5       1
//   _Glossiness                    c6       1
//   unity_SpecCube0                s0       1
//   unity_NHxRoughness             s1       1
//   _MainTex                       s2       1
//   _OcclusionMap                  s3       1
//

    ps_2_0
    def c7, 1, 0.699999988, 1.70000005, 6
    def c8, 16, 0, 0, 0
    dcl t0.xy
    dcl_pp t1.xyz
    dcl_pp t4.xyz
    dcl_pp t5.xyz
    dcl_cube s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    mov r0.w, c7.x
    add_pp r0.x, r0.w, -c6.x
    mad_pp r0.y, r0.x, -c7.y, c7.z
    mul_pp r0.x, r0.y, r0.x
    mul_pp r1.w, r0.x, c7.w
    nrm_pp r0.xyz, t4
    dp3_pp r2.w, t1, r0
    add_pp r2.x, r2.w, r2.w
    mad_pp r1.xyz, r0, -r2.x, t1
    dp3_pp r2.x, -t1, r0
    add_pp r2.y, r2.x, r2.x
    mov_sat_pp r2.x, r2.x
    add_pp r3.y, -r2.x, c7.x
    mad_pp r2.xyz, r0, -r2.y, -t1
    dp3_pp r3.x, r2, c0
    mul_pp r2.xy, r3, r3
    mul_pp r2.xy, r2, r2
    add_pp r2.z, r0.w, -c6.x
    mov_pp r3.x, r2.x
    mov_pp r3.y, r2.z
    texldb_pp r1, r1, s0
    texld_pp r4, t0, s3
    texld r5, t0, s2
    texld r3, r3, s1
    pow_pp r0.w, r1.w, c1.y
    mul_pp r0.w, r0.w, c1.x
    mul_pp r1.xyz, r1, r0.w
    mul_pp r1.xyz, r4.y, r1
    mul_pp r3.yzw, r4.y, t5.wzyx
    dp3_sat_pp r1.w, r0, c0
    mul_pp r0.xyz, r1.w, c3
    mov r4, c2
    mad_pp r0.w, c5.x, -r4.w, r4.w
    add_pp r1.w, -r0.w, c6.x
    add_sat_pp r1.w, r1.w, c7.x
    mad_pp r6.xyz, c4, r5, -r4
    mul_pp r5.xyz, r5, c4
    mul_pp r5.xyz, r0.w, r5
    mad_pp r4.xyz, c5.x, r6, r4
    lrp_pp r6.xyz, r2.y, r1.w, r4
    mul_pp r1.xyz, r1, r6
    mad_pp r1.xyz, r3.wzyx, r5, r1
    mul_pp r0.w, r3.x, c8.x
    mad_pp r2.xyz, r0.w, r4, r5
    mad_pp r0.xyz, r2, r0, r1
    mov_pp r0.w, c7.x
    mov_pp oC0, r0

// approximately 51 instruction slots used (4 texture, 47 arithmetic)
"
}
SubProgram "d3d11 " {
// Stats: 40 math, 3 textures
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
SetTexture 0 [_MainTex] 2D 2
SetTexture 1 [_OcclusionMap] 2D 3
SetTexture 2 [unity_NHxRoughness] 2D 1
SetTexture 3 [unity_SpecCube0] CUBE 0
ConstBuffer "$Globals" 240
Vector 32 [unity_ColorSpaceDielectricSpec]
Vector 96 [_LightColor0]
Vector 128 [_Color]
Float 200 [_Metallic]
Float 204 [_Glossiness]
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
ConstBuffer "UnityReflectionProbes" 128
Vector 48 [unity_SpecCube0_HDR]
BindCB  "$Globals" 0
BindCB  "UnityLighting" 1
BindCB  "UnityReflectionProbes" 2
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer cb0[13], immediateIndexed
      dcl_constantbuffer cb1[1], immediateIndexed
      dcl_constantbuffer cb2[4], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: add r0.xw, -cb0[12].wwww, l(1.000000, 0.000000, 0.000000, 1.000000)
   1: mad r1.x, -r0.x, l(0.700000), l(1.700000)
   2: mul r0.x, r0.x, r1.x
   3: mul r0.x, r0.x, l(6.000000)
   4: dp3 r1.x, v5.xyzx, v5.xyzx
   5: rsq r1.x, r1.x
   6: mul r1.xyz, r1.xxxx, v5.xyzx
   7: dp3 r1.w, v2.xyzx, r1.xyzx
   8: add r1.w, r1.w, r1.w
   9: mad r2.xyz, r1.xyzx, -r1.wwww, v2.xyzx
  10: sample_l r2.xyzw, r2.xyzx, t3.xyzw, s0, r0.x
  11: log r0.x, r2.w
  12: mul r0.x, r0.x, cb2[3].y
  13: exp r0.x, r0.x
  14: mul r0.x, r0.x, cb2[3].x
  15: mul r2.xyz, r2.xyzx, r0.xxxx
  16: sample r3.xyzw, v1.xyxx, t1.xyzw, s3
  17: mul r2.xyz, r2.xyzx, r3.yyyy
  18: mul r3.xyz, r3.yyyy, v6.xyzx
  19: dp3 r0.x, -v2.xyzx, r1.xyzx
  20: add r1.w, r0.x, r0.x
  21: mov_sat r0.x, r0.x
  22: add r4.y, -r0.x, l(1.000000)
  23: mad r5.xyz, r1.xyzx, -r1.wwww, -v2.xyzx
  24: dp3_sat r0.x, r1.xyzx, cb1[0].xyzx
  25: mul r1.xyz, r0.xxxx, cb0[6].xyzx
  26: dp3 r4.x, r5.xyzx, cb1[0].xyzx
  27: mul r4.xy, r4.xyxx, r4.xyxx
  28: mul r0.yz, r4.xxyx, r4.xxyx
  29: mad r0.x, -cb0[12].z, cb0[2].w, cb0[2].w
  30: add r1.w, -r0.x, cb0[12].w
  31: add_sat r1.w, r1.w, l(1.000000)
  32: sample r4.xyzw, v1.xyxx, t0.xyzw, s2
  33: mad r5.xyz, cb0[8].xyzx, r4.xyzx, -cb0[2].xyzx
  34: mul r4.xyz, r4.xyzx, cb0[8].xyzx
  35: mul r4.xyz, r0.xxxx, r4.xyzx
  36: mad r5.xyz, cb0[12].zzzz, r5.xyzx, cb0[2].xyzx
  37: add r6.xyz, r1.wwww, -r5.xyzx
  38: mad r6.xyz, r0.zzzz, r6.xyzx, r5.xyzx
  39: sample r0.xyzw, r0.ywyy, t2.xyzw, s1
  40: mul r0.x, r0.x, l(16.000000)
  41: mad r0.xyz, r0.xxxx, r5.xyzx, r4.xyzx
  42: mul r2.xyz, r2.xyzx, r6.xyzx
  43: mad r2.xyz, r3.xyzx, r4.xyzx, r2.xyzx
  44: mad o0.xyz, r0.xyzx, r1.xyzx, r2.xyzx
  45: mov o0.w, l(1.000000)
  46: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "d3d11_9x " {
// Stats: 37 math, 3 textures
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
SetTexture 0 [_MainTex] 2D 2
SetTexture 1 [_OcclusionMap] 2D 3
SetTexture 2 [unity_SpecCube0] CUBE 0
SetTexture 3 [unity_NHxRoughness] 2D 1
ConstBuffer "$Globals" 240
Vector 32 [unity_ColorSpaceDielectricSpec]
Vector 96 [_LightColor0]
Vector 128 [_Color]
Float 200 [_Metallic]
Float 204 [_Glossiness]
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
ConstBuffer "UnityReflectionProbes" 128
Vector 48 [unity_SpecCube0_HDR]
BindCB  "$Globals" 0
BindCB  "UnityLighting" 1
BindCB  "UnityReflectionProbes" 2
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c0         cb0             2         1  ( FLT, FLT, FLT, FLT)
// c1         cb0             6         1  ( FLT, FLT, FLT, FLT)
// c2         cb0             8         1  ( FLT, FLT, FLT, FLT)
// c3         cb0            12         1  ( FLT, FLT, FLT, FLT)
// c4         cb1             0         1  ( FLT, FLT, FLT, FLT)
// c5         cb2             3         1  ( FLT, FLT, FLT, FLT)
//
//
// Sampler/Resource to DX9 shader sampler mappings:
//
// Target Sampler Source Sampler  Source Resource
// -------------- --------------- ----------------
// s0             s0              t2               
// s1             s1              t3               
// s2             s2              t0               
// s3             s3              t1               
//
//
// Level9 shader bytecode:
//
    ps_2_0
          def c6, 1, 0.699999988, 1.70000005, 6
          def c7, 16, 0, 0, 0
          dcl t0
          dcl_pp t1.xyz
          dcl_pp t4
          dcl_pp t5
          dcl_cube s0
          dcl_2d s1
          dcl_2d s2
          dcl_2d s3
   0:     mov r0.w, c6.x
   1:     add_pp r0.x, r0.w, -c3.w
   2:     mad_pp r0.y, r0.x, -c6.y, c6.z
   3:     mul_pp r0.x, r0.y, r0.x
   4:     mul_pp r1.w, r0.x, c6.w
   5:     nrm_pp r0.xyz, t4
   8:     dp3_pp r2.w, t1, r0
   9:     add_pp r2.x, r2.w, r2.w
  10:     mad_pp r1.xyz, r0, -r2.x, t1
  11:     dp3_pp r2.x, -t1, r0
  12:     add_pp r2.y, r2.x, r2.x
  13:     mov_sat_pp r2.x, r2.x
  14:     add_pp r3.y, -r2.x, c6.x
  15:     mad_pp r2.xyz, r0, -r2.y, -t1
  16:     dp3_pp r3.x, r2, c4
  17:     mul_pp r2.xy, r3, r3
  18:     mul_pp r2.xy, r2, r2
  19:     add_pp r2.z, r0.w, -c3.w
  20:     mov_pp r3.x, r2.x
  21:     mov_pp r3.y, r2.z
  22:     texldb_pp r1, r1, s0
  22:     texld_pp r4, t0, s3
  22:     texld r5, t0, s2
  22:     texld r3, r3, s1
  22:     mul_pp r0.w, r1.w, c5.x
  23:     mul_pp r1.xyz, r1, r0.w
  24:     mul_pp r1.xyz, r4.y, r1
  25:     mul_pp r3.yzw, r4.y, t5.wzyx
  26:     dp3_sat_pp r1.w, r0, c4
  27:     mul_pp r0.xyz, r1.w, c1
  28:     mov r4, c0
  29:     mad_pp r0.w, c3.z, -r4.w, r4.w
  30:     add_pp r1.w, -r0.w, c3.w
  31:     add_sat_pp r1.w, r1.w, c6.x
  32:     mad_pp r6.xyz, c2, r5, -r4
  33:     mul_pp r5.xyz, r5, c2
  34:     mul_pp r5.xyz, r0.w, r5
  35:     mad_pp r4.xyz, c3.z, r6, r4
  36:     lrp_pp r6.xyz, r2.y, r1.w, r4
  37:     mul_pp r1.xyz, r1, r6
  38:     mad_pp r1.xyz, r3.wzyx, r5, r1
  39:     mul_pp r0.w, r3.x, c7.x
  40:     mad_pp r2.xyz, r0.w, r4, r5
  41:     mad_pp r0.xyz, r2, r0, r1
  42:     mov_pp r0.w, c6.x
  43:     mov_pp oC0, r0

// approximately 48 instruction slots used (4 texture, 44 arithmetic)
      ps_4_0
      dcl_constantbuffer cb0[13], immediateIndexed
      dcl_constantbuffer cb1[1], immediateIndexed
      dcl_constantbuffer cb2[4], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texturecube (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: add r0.xw, -cb0[12].wwww, l(1.000000, 0.000000, 0.000000, 1.000000)
   1: mad r1.x, -r0.x, l(0.700000), l(1.700000)
   2: mul r0.x, r0.x, r1.x
   3: mul r0.x, r0.x, l(6.000000)
   4: dp3 r1.x, v5.xyzx, v5.xyzx
   5: rsq r1.x, r1.x
   6: mul r1.xyz, r1.xxxx, v5.xyzx
   7: dp3 r1.w, v2.xyzx, r1.xyzx
   8: add r1.w, r1.w, r1.w
   9: mad r2.xyz, r1.xyzx, -r1.wwww, v2.xyzx
  10: sample_b r2.xyzw, r2.xyzx, t2.xyzw, s0, r0.x
  11: mul r0.x, r2.w, cb2[3].x
  12: mul r2.xyz, r2.xyzx, r0.xxxx
  13: sample r3.xyzw, v1.xyxx, t1.xyzw, s3
  14: mul r2.xyz, r2.xyzx, r3.yyyy
  15: mul r3.xyz, r3.yyyy, v6.xyzx
  16: dp3 r0.x, -v2.xyzx, r1.xyzx
  17: add r1.w, r0.x, r0.x
  18: mov_sat r0.x, r0.x
  19: add r4.y, -r0.x, l(1.000000)
  20: mad r5.xyz, r1.xyzx, -r1.wwww, -v2.xyzx
  21: dp3_sat r0.x, r1.xyzx, cb1[0].xyzx
  22: mul r1.xyz, r0.xxxx, cb0[6].xyzx
  23: dp3 r4.x, r5.xyzx, cb1[0].xyzx
  24: mul r4.xy, r4.xyxx, r4.xyxx
  25: mul r0.yz, r4.xxyx, r4.xxyx
  26: mad r0.x, -cb0[12].z, cb0[2].w, cb0[2].w
  27: add r1.w, -r0.x, cb0[12].w
  28: add_sat r1.w, r1.w, l(1.000000)
  29: sample r4.xyzw, v1.xyxx, t0.xyzw, s2
  30: mad r5.xyz, cb0[8].xyzx, r4.xyzx, -cb0[2].xyzx
  31: mul r4.xyz, r4.xyzx, cb0[8].xyzx
  32: mul r4.xyz, r0.xxxx, r4.xyzx
  33: mad r5.xyz, cb0[12].zzzz, r5.xyzx, cb0[2].xyzx
  34: add r6.xyz, r1.wwww, -r5.xyzx
  35: mad r6.xyz, r0.zzzz, r6.xyzx, r5.xyzx
  36: sample r0.xyzw, r0.ywyy, t3.xyzw, s1
  37: mul r0.x, r0.x, l(16.000000)
  38: mad r0.xyz, r0.xxxx, r5.xyzx, r4.xyzx
  39: mul r2.xyz, r2.xyzx, r6.xyzx
  40: mad r2.xyz, r3.xyzx, r4.xyzx, r2.xyzx
  41: mad o0.xyz, r0.xyzx, r1.xyzx, r2.xyzx
  42: mov o0.w, l(1.000000)
  43: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
"// shader disassembly not supported on opengl"
}
SubProgram "d3d9 " {
// Stats: 49 math, 5 textures
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
Vector 4 [_Color]
Float 6 [_Glossiness]
Vector 3 [_LightColor0]
Float 5 [_Metallic]
Vector 0 [_WorldSpaceLightPos0]
Vector 2 [unity_ColorSpaceDielectricSpec]
Vector 1 [unity_SpecCube0_HDR]
SetTexture 0 [unity_SpecCube0] CUBE 0
SetTexture 1 [unity_NHxRoughness] 2D 1
SetTexture 2 [_MainTex] 2D 2
SetTexture 3 [_OcclusionMap] 2D 3
SetTexture 4 [_ShadowMapTexture] 2D 4
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D _OcclusionMap;
//   sampler2D _ShadowMapTexture;
//   float4 _WorldSpaceLightPos0;
//   float4 unity_ColorSpaceDielectricSpec;
//   sampler2D unity_NHxRoughness;
//   samplerCUBE unity_SpecCube0;
//   float4 unity_SpecCube0_HDR;
//
//
// Registers:
//
//   Name                           Reg   Size
//   ------------------------------ ----- ----
//   _WorldSpaceLightPos0           c0       1
//   unity_SpecCube0_HDR            c1       1
//   unity_ColorSpaceDielectricSpec c2       1
//   _LightColor0                   c3       1
//   _Color                         c4       1
//   _Metallic                      c5       1
//   _Glossiness                    c6       1
//   unity_SpecCube0                s0       1
//   unity_NHxRoughness             s1       1
//   _MainTex                       s2       1
//   _OcclusionMap                  s3       1
//   _ShadowMapTexture              s4       1
//

    ps_2_0
    def c7, 1, 0.699999988, 1.70000005, 6
    def c8, 16, 0, 0, 0
    dcl t0.xy
    dcl_pp t1.xyz
    dcl_pp t4.xyz
    dcl_pp t5.xyz
    dcl_pp t6
    dcl_cube s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    mov r0.w, c7.x
    add_pp r0.x, r0.w, -c6.x
    mad_pp r0.y, r0.x, -c7.y, c7.z
    mul_pp r0.x, r0.y, r0.x
    mul_pp r1.w, r0.x, c7.w
    nrm_pp r0.xyz, t4
    dp3_pp r2.w, t1, r0
    add_pp r2.x, r2.w, r2.w
    mad_pp r1.xyz, r0, -r2.x, t1
    dp3_pp r2.x, -t1, r0
    add_pp r2.y, r2.x, r2.x
    mov_sat_pp r2.x, r2.x
    add_pp r3.y, -r2.x, c7.x
    mad_pp r2.xyz, r0, -r2.y, -t1
    dp3_pp r3.x, r2, c0
    mul_pp r2.xy, r3, r3
    mul_pp r2.xy, r2, r2
    add_pp r2.z, r0.w, -c6.x
    mov_pp r3.x, r2.x
    mov_pp r3.y, r2.z
    texldb_pp r1, r1, s0
    texld_pp r4, t0, s3
    texld r5, t0, s2
    texld r3, r3, s1
    texldp_pp r6, t6, s4
    pow_pp r0.w, r1.w, c1.y
    mul_pp r0.w, r0.w, c1.x
    mul_pp r1.xyz, r1, r0.w
    mul_pp r1.xyz, r4.y, r1
    mul_pp r3.yzw, r4.y, t5.wzyx
    dp3_sat_pp r1.w, r0, c0
    mov r0, c2
    mad_pp r0.w, c5.x, -r0.w, r0.w
    add_pp r5.w, -r0.w, c6.x
    add_sat_pp r5.w, r5.w, c7.x
    mad_pp r4.xyz, c4, r5, -r0
    mul_pp r5.xyz, r5, c4
    mul_pp r5.xyz, r0.w, r5
    mad_pp r0.xyz, c5.x, r4, r0
    lrp_pp r4.xyz, r2.y, r5.w, r0
    mul_pp r1.xyz, r1, r4
    mad_pp r1.xyz, r3.wzyx, r5, r1
    mul_pp r0.w, r3.x, c8.x
    mad_pp r0.xyz, r0.w, r0, r5
    mul_pp r2.xyz, r6.x, c3
    mul_pp r2.xyz, r1.w, r2
    mad_pp r0.xyz, r0, r2, r1
    mov_pp r0.w, c7.x
    mov_pp oC0, r0

// approximately 53 instruction slots used (5 texture, 48 arithmetic)
"
}
SubProgram "d3d11 " {
// Stats: 42 math, 4 textures
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
SetTexture 0 [_MainTex] 2D 2
SetTexture 1 [_ShadowMapTexture] 2D 4
SetTexture 2 [_OcclusionMap] 2D 3
SetTexture 3 [unity_NHxRoughness] 2D 1
SetTexture 4 [unity_SpecCube0] CUBE 0
ConstBuffer "$Globals" 240
Vector 32 [unity_ColorSpaceDielectricSpec]
Vector 96 [_LightColor0]
Vector 128 [_Color]
Float 200 [_Metallic]
Float 204 [_Glossiness]
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
ConstBuffer "UnityReflectionProbes" 128
Vector 48 [unity_SpecCube0_HDR]
BindCB  "$Globals" 0
BindCB  "UnityLighting" 1
BindCB  "UnityReflectionProbes" 2
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer cb0[13], immediateIndexed
      dcl_constantbuffer cb1[1], immediateIndexed
      dcl_constantbuffer cb2[4], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 7
   0: add r0.xw, -cb0[12].wwww, l(1.000000, 0.000000, 0.000000, 1.000000)
   1: mad r1.x, -r0.x, l(0.700000), l(1.700000)
   2: mul r0.x, r0.x, r1.x
   3: mul r0.x, r0.x, l(6.000000)
   4: dp3 r1.x, v5.xyzx, v5.xyzx
   5: rsq r1.x, r1.x
   6: mul r1.xyz, r1.xxxx, v5.xyzx
   7: dp3 r1.w, v2.xyzx, r1.xyzx
   8: add r1.w, r1.w, r1.w
   9: mad r2.xyz, r1.xyzx, -r1.wwww, v2.xyzx
  10: sample_l r2.xyzw, r2.xyzx, t4.xyzw, s0, r0.x
  11: log r0.x, r2.w
  12: mul r0.x, r0.x, cb2[3].y
  13: exp r0.x, r0.x
  14: mul r0.x, r0.x, cb2[3].x
  15: mul r2.xyz, r2.xyzx, r0.xxxx
  16: sample r3.xyzw, v1.xyxx, t2.xyzw, s3
  17: mul r2.xyz, r2.xyzx, r3.yyyy
  18: mul r3.xyz, r3.yyyy, v6.xyzx
  19: dp3 r0.x, -v2.xyzx, r1.xyzx
  20: add r1.w, r0.x, r0.x
  21: mov_sat r0.x, r0.x
  22: add r4.y, -r0.x, l(1.000000)
  23: mad r5.xyz, r1.xyzx, -r1.wwww, -v2.xyzx
  24: dp3_sat r0.x, r1.xyzx, cb1[0].xyzx
  25: dp3 r4.x, r5.xyzx, cb1[0].xyzx
  26: mul r1.xy, r4.xyxx, r4.xyxx
  27: mul r0.yz, r1.xxyx, r1.xxyx
  28: mad r1.x, -cb0[12].z, cb0[2].w, cb0[2].w
  29: add r1.y, -r1.x, cb0[12].w
  30: add_sat r1.y, r1.y, l(1.000000)
  31: sample r4.xyzw, v1.xyxx, t0.xyzw, s2
  32: mad r5.xyz, cb0[8].xyzx, r4.xyzx, -cb0[2].xyzx
  33: mul r4.xyz, r4.xyzx, cb0[8].xyzx
  34: mul r1.xzw, r1.xxxx, r4.xxyz
  35: mad r4.xyz, cb0[12].zzzz, r5.xyzx, cb0[2].xyzx
  36: add r5.xyz, r1.yyyy, -r4.xyzx
  37: mad r5.xyz, r0.zzzz, r5.xyzx, r4.xyzx
  38: sample r6.xyzw, r0.ywyy, t3.xyzw, s1
  39: mul r0.y, r6.x, l(16.000000)
  40: mad r0.yzw, r0.yyyy, r4.xxyz, r1.xxzw
  41: mul r2.xyz, r2.xyzx, r5.xyzx
  42: mad r1.xyz, r3.xyzx, r1.xzwx, r2.xyzx
  43: div r2.xy, v7.xyxx, v7.wwww
  44: sample r2.xyzw, r2.xyxx, t1.xyzw, s4
  45: mul r2.xyz, r2.xxxx, cb0[6].xyzx
  46: mul r2.xyz, r0.xxxx, r2.xyzx
  47: mad o0.xyz, r0.yzwy, r2.xyzx, r1.xyzx
  48: mov o0.w, l(1.000000)
  49: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "d3d11_9x " {
// Stats: 39 math, 4 textures
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
SetTexture 0 [_MainTex] 2D 2
SetTexture 1 [_ShadowMapTexture] 2D 4
SetTexture 2 [_OcclusionMap] 2D 3
SetTexture 3 [unity_SpecCube0] CUBE 0
SetTexture 4 [unity_NHxRoughness] 2D 1
ConstBuffer "$Globals" 240
Vector 32 [unity_ColorSpaceDielectricSpec]
Vector 96 [_LightColor0]
Vector 128 [_Color]
Float 200 [_Metallic]
Float 204 [_Glossiness]
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
ConstBuffer "UnityReflectionProbes" 128
Vector 48 [unity_SpecCube0_HDR]
BindCB  "$Globals" 0
BindCB  "UnityLighting" 1
BindCB  "UnityReflectionProbes" 2
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c0         cb0             2         1  ( FLT, FLT, FLT, FLT)
// c1         cb0             6         1  ( FLT, FLT, FLT, FLT)
// c2         cb0             8         1  ( FLT, FLT, FLT, FLT)
// c3         cb0            12         1  ( FLT, FLT, FLT, FLT)
// c4         cb1             0         1  ( FLT, FLT, FLT, FLT)
// c5         cb2             3         1  ( FLT, FLT, FLT, FLT)
//
//
// Sampler/Resource to DX9 shader sampler mappings:
//
// Target Sampler Source Sampler  Source Resource
// -------------- --------------- ----------------
// s0             s0              t3               
// s1             s1              t4               
// s2             s2              t0               
// s3             s3              t2               
// s4             s4              t1               
//
//
// Level9 shader bytecode:
//
    ps_2_0
          def c6, 1, 0.699999988, 1.70000005, 6
          def c7, 16, 0, 0, 0
          dcl t0
          dcl_pp t1.xyz
          dcl_pp t4
          dcl_pp t5
          dcl_pp t6
          dcl_cube s0
          dcl_2d s1
          dcl_2d s2
          dcl_2d s3
          dcl_2d s4
   0:     mov r0.w, c6.x
   1:     add_pp r0.x, r0.w, -c3.w
   2:     mad_pp r0.y, r0.x, -c6.y, c6.z
   3:     mul_pp r0.x, r0.y, r0.x
   4:     mul_pp r1.w, r0.x, c6.w
   5:     nrm_pp r0.xyz, t4
   8:     dp3_pp r2.w, t1, r0
   9:     add_pp r2.x, r2.w, r2.w
  10:     mad_pp r1.xyz, r0, -r2.x, t1
  11:     dp3_pp r2.x, -t1, r0
  12:     add_pp r2.y, r2.x, r2.x
  13:     mov_sat_pp r2.x, r2.x
  14:     add_pp r3.y, -r2.x, c6.x
  15:     mad_pp r2.xyz, r0, -r2.y, -t1
  16:     dp3_pp r3.x, r2, c4
  17:     mul_pp r2.xy, r3, r3
  18:     mul_pp r2.xy, r2, r2
  19:     add_pp r2.z, r0.w, -c3.w
  20:     mov_pp r3.x, r2.x
  21:     mov_pp r3.y, r2.z
  22:     rcp r0.w, t6.w
  23:     mul_pp r4.xy, r0.w, t6
  24:     texldb_pp r1, r1, s0
  24:     texld_pp r5, t0, s3
  24:     texld r6, t0, s2
  24:     texld r3, r3, s1
  24:     texld_pp r4, r4, s4
  24:     mul_pp r0.w, r1.w, c5.x
  25:     mul_pp r1.xyz, r1, r0.w
  26:     mul_pp r1.xyz, r5.y, r1
  27:     mul_pp r3.yzw, r5.y, t5.wzyx
  28:     dp3_sat_pp r1.w, r0, c4
  29:     mov r0, c0
  30:     mad_pp r0.w, c3.z, -r0.w, r0.w
  31:     add_pp r6.w, -r0.w, c3.w
  32:     add_sat_pp r6.w, r6.w, c6.x
  33:     mad_pp r4.yzw, c2.wzyx, r6.wzyx, -r0.wzyx
  34:     mul_pp r5.xyz, r6, c2
  35:     mul_pp r5.xyz, r0.w, r5
  36:     mad_pp r0.xyz, c3.z, r4.wzyx, r0
  37:     lrp_pp r4.yzw, r2.y, r6.w, r0.wzyx
  38:     mul_pp r1.xyz, r1, r4.wzyx
  39:     mad_pp r1.xyz, r3.wzyx, r5, r1
  40:     mul_pp r0.w, r3.x, c7.x
  41:     mad_pp r0.xyz, r0.w, r0, r5
  42:     mul_pp r2.xyz, r4.x, c1
  43:     mul_pp r2.xyz, r1.w, r2
  44:     mad_pp r0.xyz, r0, r2, r1
  45:     mov_pp r0.w, c6.x
  46:     mov_pp oC0, r0

// approximately 52 instruction slots used (5 texture, 47 arithmetic)
      ps_4_0
      dcl_constantbuffer cb0[13], immediateIndexed
      dcl_constantbuffer cb1[1], immediateIndexed
      dcl_constantbuffer cb2[4], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 7
   0: add r0.xw, -cb0[12].wwww, l(1.000000, 0.000000, 0.000000, 1.000000)
   1: mad r1.x, -r0.x, l(0.700000), l(1.700000)
   2: mul r0.x, r0.x, r1.x
   3: mul r0.x, r0.x, l(6.000000)
   4: dp3 r1.x, v5.xyzx, v5.xyzx
   5: rsq r1.x, r1.x
   6: mul r1.xyz, r1.xxxx, v5.xyzx
   7: dp3 r1.w, v2.xyzx, r1.xyzx
   8: add r1.w, r1.w, r1.w
   9: mad r2.xyz, r1.xyzx, -r1.wwww, v2.xyzx
  10: sample_b r2.xyzw, r2.xyzx, t3.xyzw, s0, r0.x
  11: mul r0.x, r2.w, cb2[3].x
  12: mul r2.xyz, r2.xyzx, r0.xxxx
  13: sample r3.xyzw, v1.xyxx, t2.xyzw, s3
  14: mul r2.xyz, r2.xyzx, r3.yyyy
  15: mul r3.xyz, r3.yyyy, v6.xyzx
  16: dp3 r0.x, -v2.xyzx, r1.xyzx
  17: add r1.w, r0.x, r0.x
  18: mov_sat r0.x, r0.x
  19: add r4.y, -r0.x, l(1.000000)
  20: mad r5.xyz, r1.xyzx, -r1.wwww, -v2.xyzx
  21: dp3_sat r0.x, r1.xyzx, cb1[0].xyzx
  22: dp3 r4.x, r5.xyzx, cb1[0].xyzx
  23: mul r1.xy, r4.xyxx, r4.xyxx
  24: mul r0.yz, r1.xxyx, r1.xxyx
  25: mad r1.x, -cb0[12].z, cb0[2].w, cb0[2].w
  26: add r1.y, -r1.x, cb0[12].w
  27: add_sat r1.y, r1.y, l(1.000000)
  28: sample r4.xyzw, v1.xyxx, t0.xyzw, s2
  29: mad r5.xyz, cb0[8].xyzx, r4.xyzx, -cb0[2].xyzx
  30: mul r4.xyz, r4.xyzx, cb0[8].xyzx
  31: mul r1.xzw, r1.xxxx, r4.xxyz
  32: mad r4.xyz, cb0[12].zzzz, r5.xyzx, cb0[2].xyzx
  33: add r5.xyz, r1.yyyy, -r4.xyzx
  34: mad r5.xyz, r0.zzzz, r5.xyzx, r4.xyzx
  35: sample r6.xyzw, r0.ywyy, t4.xyzw, s1
  36: mul r0.y, r6.x, l(16.000000)
  37: mad r0.yzw, r0.yyyy, r4.xxyz, r1.xxzw
  38: mul r2.xyz, r2.xyzx, r5.xyzx
  39: mad r1.xyz, r3.xyzx, r1.xzwx, r2.xyzx
  40: div r2.xy, v7.xyxx, v7.wwww
  41: sample r2.xyzw, r2.xyxx, t1.xyzw, s4
  42: mul r2.xyz, r2.xxxx, cb0[6].xyzx
  43: mul r2.xyz, r0.xxxx, r2.xyzx
  44: mad o0.xyz, r0.yzwy, r2.xyzx, r1.xyzx
  45: mov o0.w, l(1.000000)
  46: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" }
"// shader disassembly not supported on opengl"
}
SubProgram "d3d9 " {
// Stats: 49 math, 5 textures
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" }
Vector 4 [_Color]
Vector 7 [_EmissionColor]
Float 6 [_Glossiness]
Vector 3 [_LightColor0]
Float 5 [_Metallic]
Vector 0 [_WorldSpaceLightPos0]
Vector 2 [unity_ColorSpaceDielectricSpec]
Vector 1 [unity_SpecCube0_HDR]
SetTexture 0 [unity_SpecCube0] CUBE 0
SetTexture 1 [unity_NHxRoughness] 2D 1
SetTexture 2 [_MainTex] 2D 2
SetTexture 3 [_OcclusionMap] 2D 3
SetTexture 4 [_EmissionMap] 2D 4
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _Color;
//   float4 _EmissionColor;
//   sampler2D _EmissionMap;
//   float _Glossiness;
//   float4 _LightColor0;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D _OcclusionMap;
//   float4 _WorldSpaceLightPos0;
//   float4 unity_ColorSpaceDielectricSpec;
//   sampler2D unity_NHxRoughness;
//   samplerCUBE unity_SpecCube0;
//   float4 unity_SpecCube0_HDR;
//
//
// Registers:
//
//   Name                           Reg   Size
//   ------------------------------ ----- ----
//   _WorldSpaceLightPos0           c0       1
//   unity_SpecCube0_HDR            c1       1
//   unity_ColorSpaceDielectricSpec c2       1
//   _LightColor0                   c3       1
//   _Color                         c4       1
//   _Metallic                      c5       1
//   _Glossiness                    c6       1
//   _EmissionColor                 c7       1
//   unity_SpecCube0                s0       1
//   unity_NHxRoughness             s1       1
//   _MainTex                       s2       1
//   _OcclusionMap                  s3       1
//   _EmissionMap                   s4       1
//

    ps_2_0
    def c8, 1, 0.699999988, 1.70000005, 6
    def c9, 16, 0, 0, 0
    dcl t0.xy
    dcl_pp t1.xyz
    dcl_pp t4.xyz
    dcl_pp t5.xyz
    dcl_cube s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    mov r0.w, c8.x
    add_pp r0.x, r0.w, -c6.x
    mad_pp r0.y, r0.x, -c8.y, c8.z
    mul_pp r0.x, r0.y, r0.x
    mul_pp r1.w, r0.x, c8.w
    nrm_pp r0.xyz, t4
    dp3_pp r2.w, t1, r0
    add_pp r2.x, r2.w, r2.w
    mad_pp r1.xyz, r0, -r2.x, t1
    dp3_pp r2.x, -t1, r0
    add_pp r2.y, r2.x, r2.x
    mov_sat_pp r2.x, r2.x
    add_pp r3.y, -r2.x, c8.x
    mad_pp r2.xyz, r0, -r2.y, -t1
    dp3_pp r3.x, r2, c0
    mul_pp r2.xy, r3, r3
    mul_pp r2.xy, r2, r2
    add_pp r2.z, r0.w, -c6.x
    mov_pp r3.x, r2.x
    mov_pp r3.y, r2.z
    texldb_pp r1, r1, s0
    texld_pp r4, t0, s3
    texld r5, t0, s2
    texld r3, r3, s1
    texld r6, t0, s4
    pow_pp r0.w, r1.w, c1.y
    mul_pp r0.w, r0.w, c1.x
    mul_pp r1.xyz, r1, r0.w
    mul_pp r1.xyz, r4.y, r1
    mul_pp r3.yzw, r4.y, t5.wzyx
    dp3_sat_pp r1.w, r0, c0
    mul_pp r0.xyz, r1.w, c3
    mov r4, c2
    mad_pp r0.w, c5.x, -r4.w, r4.w
    add_pp r1.w, -r0.w, c6.x
    add_sat_pp r1.w, r1.w, c8.x
    mad_pp r7.xyz, c4, r5, -r4
    mul_pp r5.xyz, r5, c4
    mul_pp r5.xyz, r0.w, r5
    mad_pp r4.xyz, c5.x, r7, r4
    lrp_pp r7.xyz, r2.y, r1.w, r4
    mul_pp r1.xyz, r1, r7
    mad_pp r1.xyz, r3.wzyx, r5, r1
    mul_pp r0.w, r3.x, c9.x
    mad_pp r2.xyz, r0.w, r4, r5
    mad_pp r0.xyz, r2, r0, r1
    mad_pp r0.xyz, r6, c7, r0
    mov_pp r0.w, c8.x
    mov_pp oC0, r0

// approximately 53 instruction slots used (5 texture, 48 arithmetic)
"
}
SubProgram "d3d11 " {
// Stats: 41 math, 4 textures
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" }
SetTexture 0 [_MainTex] 2D 2
SetTexture 1 [_OcclusionMap] 2D 3
SetTexture 2 [unity_NHxRoughness] 2D 1
SetTexture 3 [_EmissionMap] 2D 4
SetTexture 4 [unity_SpecCube0] CUBE 0
ConstBuffer "$Globals" 240
Vector 32 [unity_ColorSpaceDielectricSpec]
Vector 96 [_LightColor0]
Vector 128 [_Color]
Float 200 [_Metallic]
Float 204 [_Glossiness]
Vector 224 [_EmissionColor]
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
ConstBuffer "UnityReflectionProbes" 128
Vector 48 [unity_SpecCube0_HDR]
BindCB  "$Globals" 0
BindCB  "UnityLighting" 1
BindCB  "UnityReflectionProbes" 2
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer cb0[15], immediateIndexed
      dcl_constantbuffer cb1[1], immediateIndexed
      dcl_constantbuffer cb2[4], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: add r0.xw, -cb0[12].wwww, l(1.000000, 0.000000, 0.000000, 1.000000)
   1: mad r1.x, -r0.x, l(0.700000), l(1.700000)
   2: mul r0.x, r0.x, r1.x
   3: mul r0.x, r0.x, l(6.000000)
   4: dp3 r1.x, v5.xyzx, v5.xyzx
   5: rsq r1.x, r1.x
   6: mul r1.xyz, r1.xxxx, v5.xyzx
   7: dp3 r1.w, v2.xyzx, r1.xyzx
   8: add r1.w, r1.w, r1.w
   9: mad r2.xyz, r1.xyzx, -r1.wwww, v2.xyzx
  10: sample_l r2.xyzw, r2.xyzx, t4.xyzw, s0, r0.x
  11: log r0.x, r2.w
  12: mul r0.x, r0.x, cb2[3].y
  13: exp r0.x, r0.x
  14: mul r0.x, r0.x, cb2[3].x
  15: mul r2.xyz, r2.xyzx, r0.xxxx
  16: sample r3.xyzw, v1.xyxx, t1.xyzw, s3
  17: mul r2.xyz, r2.xyzx, r3.yyyy
  18: mul r3.xyz, r3.yyyy, v6.xyzx
  19: dp3 r0.x, -v2.xyzx, r1.xyzx
  20: add r1.w, r0.x, r0.x
  21: mov_sat r0.x, r0.x
  22: add r4.y, -r0.x, l(1.000000)
  23: mad r5.xyz, r1.xyzx, -r1.wwww, -v2.xyzx
  24: dp3_sat r0.x, r1.xyzx, cb1[0].xyzx
  25: mul r1.xyz, r0.xxxx, cb0[6].xyzx
  26: dp3 r4.x, r5.xyzx, cb1[0].xyzx
  27: mul r4.xy, r4.xyxx, r4.xyxx
  28: mul r0.yz, r4.xxyx, r4.xxyx
  29: mad r0.x, -cb0[12].z, cb0[2].w, cb0[2].w
  30: add r1.w, -r0.x, cb0[12].w
  31: add_sat r1.w, r1.w, l(1.000000)
  32: sample r4.xyzw, v1.xyxx, t0.xyzw, s2
  33: mad r5.xyz, cb0[8].xyzx, r4.xyzx, -cb0[2].xyzx
  34: mul r4.xyz, r4.xyzx, cb0[8].xyzx
  35: mul r4.xyz, r0.xxxx, r4.xyzx
  36: mad r5.xyz, cb0[12].zzzz, r5.xyzx, cb0[2].xyzx
  37: add r6.xyz, r1.wwww, -r5.xyzx
  38: mad r6.xyz, r0.zzzz, r6.xyzx, r5.xyzx
  39: sample r0.xyzw, r0.ywyy, t2.xyzw, s1
  40: mul r0.x, r0.x, l(16.000000)
  41: mad r0.xyz, r0.xxxx, r5.xyzx, r4.xyzx
  42: mul r2.xyz, r2.xyzx, r6.xyzx
  43: mad r2.xyz, r3.xyzx, r4.xyzx, r2.xyzx
  44: mad r0.xyz, r0.xyzx, r1.xyzx, r2.xyzx
  45: sample r1.xyzw, v1.xyxx, t3.xyzw, s4
  46: mad o0.xyz, r1.xyzx, cb0[14].xyzx, r0.xyzx
  47: mov o0.w, l(1.000000)
  48: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "d3d11_9x " {
// Stats: 38 math, 4 textures
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" }
SetTexture 0 [_MainTex] 2D 2
SetTexture 1 [_OcclusionMap] 2D 3
SetTexture 2 [unity_SpecCube0] CUBE 0
SetTexture 3 [unity_NHxRoughness] 2D 1
SetTexture 4 [_EmissionMap] 2D 4
ConstBuffer "$Globals" 240
Vector 32 [unity_ColorSpaceDielectricSpec]
Vector 96 [_LightColor0]
Vector 128 [_Color]
Float 200 [_Metallic]
Float 204 [_Glossiness]
Vector 224 [_EmissionColor]
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
ConstBuffer "UnityReflectionProbes" 128
Vector 48 [unity_SpecCube0_HDR]
BindCB  "$Globals" 0
BindCB  "UnityLighting" 1
BindCB  "UnityReflectionProbes" 2
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c0         cb0             2         1  ( FLT, FLT, FLT, FLT)
// c1         cb0             6         1  ( FLT, FLT, FLT, FLT)
// c2         cb0             8         1  ( FLT, FLT, FLT, FLT)
// c3         cb0            12         1  ( FLT, FLT, FLT, FLT)
// c4         cb0            14         1  ( FLT, FLT, FLT, FLT)
// c5         cb1             0         1  ( FLT, FLT, FLT, FLT)
// c6         cb2             3         1  ( FLT, FLT, FLT, FLT)
//
//
// Sampler/Resource to DX9 shader sampler mappings:
//
// Target Sampler Source Sampler  Source Resource
// -------------- --------------- ----------------
// s0             s0              t2               
// s1             s1              t3               
// s2             s2              t0               
// s3             s3              t1               
// s4             s4              t4               
//
//
// Level9 shader bytecode:
//
    ps_2_0
          def c7, 1, 0.699999988, 1.70000005, 6
          def c8, 16, 0, 0, 0
          dcl t0
          dcl_pp t1.xyz
          dcl_pp t4
          dcl_pp t5
          dcl_cube s0
          dcl_2d s1
          dcl_2d s2
          dcl_2d s3
          dcl_2d s4
   0:     mov r0.w, c7.x
   1:     add_pp r0.x, r0.w, -c3.w
   2:     mad_pp r0.y, r0.x, -c7.y, c7.z
   3:     mul_pp r0.x, r0.y, r0.x
   4:     mul_pp r1.w, r0.x, c7.w
   5:     nrm_pp r0.xyz, t4
   8:     dp3_pp r2.w, t1, r0
   9:     add_pp r2.x, r2.w, r2.w
  10:     mad_pp r1.xyz, r0, -r2.x, t1
  11:     dp3_pp r2.x, -t1, r0
  12:     add_pp r2.y, r2.x, r2.x
  13:     mov_sat_pp r2.x, r2.x
  14:     add_pp r3.y, -r2.x, c7.x
  15:     mad_pp r2.xyz, r0, -r2.y, -t1
  16:     dp3_pp r3.x, r2, c5
  17:     mul_pp r2.xy, r3, r3
  18:     mul_pp r2.xy, r2, r2
  19:     add_pp r2.z, r0.w, -c3.w
  20:     mov_pp r3.x, r2.x
  21:     mov_pp r3.y, r2.z
  22:     texldb_pp r1, r1, s0
  22:     texld_pp r4, t0, s3
  22:     texld r5, t0, s2
  22:     texld r3, r3, s1
  22:     texld r6, t0, s4
  22:     mul_pp r0.w, r1.w, c6.x
  23:     mul_pp r1.xyz, r1, r0.w
  24:     mul_pp r1.xyz, r4.y, r1
  25:     mul_pp r3.yzw, r4.y, t5.wzyx
  26:     dp3_sat_pp r1.w, r0, c5
  27:     mul_pp r0.xyz, r1.w, c1
  28:     mov r4, c0
  29:     mad_pp r0.w, c3.z, -r4.w, r4.w
  30:     add_pp r1.w, -r0.w, c3.w
  31:     add_sat_pp r1.w, r1.w, c7.x
  32:     mad_pp r7.xyz, c2, r5, -r4
  33:     mul_pp r5.xyz, r5, c2
  34:     mul_pp r5.xyz, r0.w, r5
  35:     mad_pp r4.xyz, c3.z, r7, r4
  36:     lrp_pp r7.xyz, r2.y, r1.w, r4
  37:     mul_pp r1.xyz, r1, r7
  38:     mad_pp r1.xyz, r3.wzyx, r5, r1
  39:     mul_pp r0.w, r3.x, c8.x
  40:     mad_pp r2.xyz, r0.w, r4, r5
  41:     mad_pp r0.xyz, r2, r0, r1
  42:     mad_pp r0.xyz, r6, c4, r0
  43:     mov_pp r0.w, c7.x
  44:     mov_pp oC0, r0

// approximately 50 instruction slots used (5 texture, 45 arithmetic)
      ps_4_0
      dcl_constantbuffer cb0[15], immediateIndexed
      dcl_constantbuffer cb1[1], immediateIndexed
      dcl_constantbuffer cb2[4], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texturecube (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: add r0.xw, -cb0[12].wwww, l(1.000000, 0.000000, 0.000000, 1.000000)
   1: mad r1.x, -r0.x, l(0.700000), l(1.700000)
   2: mul r0.x, r0.x, r1.x
   3: mul r0.x, r0.x, l(6.000000)
   4: dp3 r1.x, v5.xyzx, v5.xyzx
   5: rsq r1.x, r1.x
   6: mul r1.xyz, r1.xxxx, v5.xyzx
   7: dp3 r1.w, v2.xyzx, r1.xyzx
   8: add r1.w, r1.w, r1.w
   9: mad r2.xyz, r1.xyzx, -r1.wwww, v2.xyzx
  10: sample_b r2.xyzw, r2.xyzx, t2.xyzw, s0, r0.x
  11: mul r0.x, r2.w, cb2[3].x
  12: mul r2.xyz, r2.xyzx, r0.xxxx
  13: sample r3.xyzw, v1.xyxx, t1.xyzw, s3
  14: mul r2.xyz, r2.xyzx, r3.yyyy
  15: mul r3.xyz, r3.yyyy, v6.xyzx
  16: dp3 r0.x, -v2.xyzx, r1.xyzx
  17: add r1.w, r0.x, r0.x
  18: mov_sat r0.x, r0.x
  19: add r4.y, -r0.x, l(1.000000)
  20: mad r5.xyz, r1.xyzx, -r1.wwww, -v2.xyzx
  21: dp3_sat r0.x, r1.xyzx, cb1[0].xyzx
  22: mul r1.xyz, r0.xxxx, cb0[6].xyzx
  23: dp3 r4.x, r5.xyzx, cb1[0].xyzx
  24: mul r4.xy, r4.xyxx, r4.xyxx
  25: mul r0.yz, r4.xxyx, r4.xxyx
  26: mad r0.x, -cb0[12].z, cb0[2].w, cb0[2].w
  27: add r1.w, -r0.x, cb0[12].w
  28: add_sat r1.w, r1.w, l(1.000000)
  29: sample r4.xyzw, v1.xyxx, t0.xyzw, s2
  30: mad r5.xyz, cb0[8].xyzx, r4.xyzx, -cb0[2].xyzx
  31: mul r4.xyz, r4.xyzx, cb0[8].xyzx
  32: mul r4.xyz, r0.xxxx, r4.xyzx
  33: mad r5.xyz, cb0[12].zzzz, r5.xyzx, cb0[2].xyzx
  34: add r6.xyz, r1.wwww, -r5.xyzx
  35: mad r6.xyz, r0.zzzz, r6.xyzx, r5.xyzx
  36: sample r0.xyzw, r0.ywyy, t3.xyzw, s1
  37: mul r0.x, r0.x, l(16.000000)
  38: mad r0.xyz, r0.xxxx, r5.xyzx, r4.xyzx
  39: mul r2.xyz, r2.xyzx, r6.xyzx
  40: mad r2.xyz, r3.xyzx, r4.xyzx, r2.xyzx
  41: mad r0.xyz, r0.xyzx, r1.xyzx, r2.xyzx
  42: sample r1.xyzw, v1.xyxx, t4.xyzw, s4
  43: mad o0.xyz, r1.xyzx, cb0[14].xyzx, r0.xyzx
  44: mov o0.w, l(1.000000)
  45: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" }
"// shader disassembly not supported on opengl"
}
SubProgram "d3d9 " {
// Stats: 50 math, 6 textures
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" }
Vector 4 [_Color]
Vector 7 [_EmissionColor]
Float 6 [_Glossiness]
Vector 3 [_LightColor0]
Float 5 [_Metallic]
Vector 0 [_WorldSpaceLightPos0]
Vector 2 [unity_ColorSpaceDielectricSpec]
Vector 1 [unity_SpecCube0_HDR]
SetTexture 0 [unity_SpecCube0] CUBE 0
SetTexture 1 [unity_NHxRoughness] 2D 1
SetTexture 2 [_MainTex] 2D 2
SetTexture 3 [_OcclusionMap] 2D 3
SetTexture 4 [_EmissionMap] 2D 4
SetTexture 5 [_ShadowMapTexture] 2D 5
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _Color;
//   float4 _EmissionColor;
//   sampler2D _EmissionMap;
//   float _Glossiness;
//   float4 _LightColor0;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D _OcclusionMap;
//   sampler2D _ShadowMapTexture;
//   float4 _WorldSpaceLightPos0;
//   float4 unity_ColorSpaceDielectricSpec;
//   sampler2D unity_NHxRoughness;
//   samplerCUBE unity_SpecCube0;
//   float4 unity_SpecCube0_HDR;
//
//
// Registers:
//
//   Name                           Reg   Size
//   ------------------------------ ----- ----
//   _WorldSpaceLightPos0           c0       1
//   unity_SpecCube0_HDR            c1       1
//   unity_ColorSpaceDielectricSpec c2       1
//   _LightColor0                   c3       1
//   _Color                         c4       1
//   _Metallic                      c5       1
//   _Glossiness                    c6       1
//   _EmissionColor                 c7       1
//   unity_SpecCube0                s0       1
//   unity_NHxRoughness             s1       1
//   _MainTex                       s2       1
//   _OcclusionMap                  s3       1
//   _EmissionMap                   s4       1
//   _ShadowMapTexture              s5       1
//

    ps_2_0
    def c8, 1, 0.699999988, 1.70000005, 6
    def c9, 16, 0, 0, 0
    dcl t0.xy
    dcl_pp t1.xyz
    dcl_pp t4.xyz
    dcl_pp t5.xyz
    dcl_pp t6
    dcl_cube s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    dcl_2d s5
    mov r0.w, c8.x
    add_pp r0.x, r0.w, -c6.x
    mad_pp r0.y, r0.x, -c8.y, c8.z
    mul_pp r0.x, r0.y, r0.x
    mul_pp r1.w, r0.x, c8.w
    nrm_pp r0.xyz, t4
    dp3_pp r2.w, t1, r0
    add_pp r2.x, r2.w, r2.w
    mad_pp r1.xyz, r0, -r2.x, t1
    dp3_pp r2.x, -t1, r0
    add_pp r2.y, r2.x, r2.x
    mov_sat_pp r2.x, r2.x
    add_pp r3.y, -r2.x, c8.x
    mad_pp r2.xyz, r0, -r2.y, -t1
    dp3_pp r3.x, r2, c0
    mul_pp r2.xy, r3, r3
    mul_pp r2.xy, r2, r2
    add_pp r2.z, r0.w, -c6.x
    mov_pp r3.x, r2.x
    mov_pp r3.y, r2.z
    texldb_pp r1, r1, s0
    texld_pp r4, t0, s3
    texld r5, t0, s2
    texld r3, r3, s1
    texldp_pp r6, t6, s5
    texld r7, t0, s4
    pow_pp r0.w, r1.w, c1.y
    mul_pp r0.w, r0.w, c1.x
    mul_pp r1.xyz, r1, r0.w
    mul_pp r1.xyz, r4.y, r1
    mul_pp r3.yzw, r4.y, t5.wzyx
    dp3_sat_pp r1.w, r0, c0
    mov r0, c2
    mad_pp r0.w, c5.x, -r0.w, r0.w
    add_pp r5.w, -r0.w, c6.x
    add_sat_pp r5.w, r5.w, c8.x
    mad_pp r4.xyz, c4, r5, -r0
    mul_pp r5.xyz, r5, c4
    mul_pp r5.xyz, r0.w, r5
    mad_pp r0.xyz, c5.x, r4, r0
    lrp_pp r4.xyz, r2.y, r5.w, r0
    mul_pp r1.xyz, r1, r4
    mad_pp r1.xyz, r3.wzyx, r5, r1
    mul_pp r0.w, r3.x, c9.x
    mad_pp r0.xyz, r0.w, r0, r5
    mul_pp r2.xyz, r6.x, c3
    mul_pp r2.xyz, r1.w, r2
    mad_pp r0.xyz, r0, r2, r1
    mad_pp r0.xyz, r7, c7, r0
    mov_pp r0.w, c8.x
    mov_pp oC0, r0

// approximately 55 instruction slots used (6 texture, 49 arithmetic)
"
}
SubProgram "d3d11 " {
// Stats: 43 math, 5 textures
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" }
SetTexture 0 [_MainTex] 2D 2
SetTexture 1 [_ShadowMapTexture] 2D 5
SetTexture 2 [_OcclusionMap] 2D 3
SetTexture 3 [unity_NHxRoughness] 2D 1
SetTexture 4 [_EmissionMap] 2D 4
SetTexture 5 [unity_SpecCube0] CUBE 0
ConstBuffer "$Globals" 240
Vector 32 [unity_ColorSpaceDielectricSpec]
Vector 96 [_LightColor0]
Vector 128 [_Color]
Float 200 [_Metallic]
Float 204 [_Glossiness]
Vector 224 [_EmissionColor]
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
ConstBuffer "UnityReflectionProbes" 128
Vector 48 [unity_SpecCube0_HDR]
BindCB  "$Globals" 0
BindCB  "UnityLighting" 1
BindCB  "UnityReflectionProbes" 2
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer cb0[15], immediateIndexed
      dcl_constantbuffer cb1[1], immediateIndexed
      dcl_constantbuffer cb2[4], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texturecube (float,float,float,float) t5
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 7
   0: add r0.xw, -cb0[12].wwww, l(1.000000, 0.000000, 0.000000, 1.000000)
   1: mad r1.x, -r0.x, l(0.700000), l(1.700000)
   2: mul r0.x, r0.x, r1.x
   3: mul r0.x, r0.x, l(6.000000)
   4: dp3 r1.x, v5.xyzx, v5.xyzx
   5: rsq r1.x, r1.x
   6: mul r1.xyz, r1.xxxx, v5.xyzx
   7: dp3 r1.w, v2.xyzx, r1.xyzx
   8: add r1.w, r1.w, r1.w
   9: mad r2.xyz, r1.xyzx, -r1.wwww, v2.xyzx
  10: sample_l r2.xyzw, r2.xyzx, t5.xyzw, s0, r0.x
  11: log r0.x, r2.w
  12: mul r0.x, r0.x, cb2[3].y
  13: exp r0.x, r0.x
  14: mul r0.x, r0.x, cb2[3].x
  15: mul r2.xyz, r2.xyzx, r0.xxxx
  16: sample r3.xyzw, v1.xyxx, t2.xyzw, s3
  17: mul r2.xyz, r2.xyzx, r3.yyyy
  18: mul r3.xyz, r3.yyyy, v6.xyzx
  19: dp3 r0.x, -v2.xyzx, r1.xyzx
  20: add r1.w, r0.x, r0.x
  21: mov_sat r0.x, r0.x
  22: add r4.y, -r0.x, l(1.000000)
  23: mad r5.xyz, r1.xyzx, -r1.wwww, -v2.xyzx
  24: dp3_sat r0.x, r1.xyzx, cb1[0].xyzx
  25: dp3 r4.x, r5.xyzx, cb1[0].xyzx
  26: mul r1.xy, r4.xyxx, r4.xyxx
  27: mul r0.yz, r1.xxyx, r1.xxyx
  28: mad r1.x, -cb0[12].z, cb0[2].w, cb0[2].w
  29: add r1.y, -r1.x, cb0[12].w
  30: add_sat r1.y, r1.y, l(1.000000)
  31: sample r4.xyzw, v1.xyxx, t0.xyzw, s2
  32: mad r5.xyz, cb0[8].xyzx, r4.xyzx, -cb0[2].xyzx
  33: mul r4.xyz, r4.xyzx, cb0[8].xyzx
  34: mul r1.xzw, r1.xxxx, r4.xxyz
  35: mad r4.xyz, cb0[12].zzzz, r5.xyzx, cb0[2].xyzx
  36: add r5.xyz, r1.yyyy, -r4.xyzx
  37: mad r5.xyz, r0.zzzz, r5.xyzx, r4.xyzx
  38: sample r6.xyzw, r0.ywyy, t3.xyzw, s1
  39: mul r0.y, r6.x, l(16.000000)
  40: mad r0.yzw, r0.yyyy, r4.xxyz, r1.xxzw
  41: mul r2.xyz, r2.xyzx, r5.xyzx
  42: mad r1.xyz, r3.xyzx, r1.xzwx, r2.xyzx
  43: div r2.xy, v7.xyxx, v7.wwww
  44: sample r2.xyzw, r2.xyxx, t1.xyzw, s5
  45: mul r2.xyz, r2.xxxx, cb0[6].xyzx
  46: mul r2.xyz, r0.xxxx, r2.xyzx
  47: mad r0.xyz, r0.yzwy, r2.xyzx, r1.xyzx
  48: sample r1.xyzw, v1.xyxx, t4.xyzw, s4
  49: mad o0.xyz, r1.xyzx, cb0[14].xyzx, r0.xyzx
  50: mov o0.w, l(1.000000)
  51: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "d3d11_9x " {
// Stats: 40 math, 5 textures
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" }
SetTexture 0 [_MainTex] 2D 2
SetTexture 1 [_ShadowMapTexture] 2D 5
SetTexture 2 [_OcclusionMap] 2D 3
SetTexture 3 [unity_SpecCube0] CUBE 0
SetTexture 4 [unity_NHxRoughness] 2D 1
SetTexture 5 [_EmissionMap] 2D 4
ConstBuffer "$Globals" 240
Vector 32 [unity_ColorSpaceDielectricSpec]
Vector 96 [_LightColor0]
Vector 128 [_Color]
Float 200 [_Metallic]
Float 204 [_Glossiness]
Vector 224 [_EmissionColor]
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
ConstBuffer "UnityReflectionProbes" 128
Vector 48 [unity_SpecCube0_HDR]
BindCB  "$Globals" 0
BindCB  "UnityLighting" 1
BindCB  "UnityReflectionProbes" 2
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c0         cb0             2         1  ( FLT, FLT, FLT, FLT)
// c1         cb0             6         1  ( FLT, FLT, FLT, FLT)
// c2         cb0             8         1  ( FLT, FLT, FLT, FLT)
// c3         cb0            12         1  ( FLT, FLT, FLT, FLT)
// c4         cb0            14         1  ( FLT, FLT, FLT, FLT)
// c5         cb1             0         1  ( FLT, FLT, FLT, FLT)
// c6         cb2             3         1  ( FLT, FLT, FLT, FLT)
//
//
// Sampler/Resource to DX9 shader sampler mappings:
//
// Target Sampler Source Sampler  Source Resource
// -------------- --------------- ----------------
// s0             s0              t3               
// s1             s1              t4               
// s2             s2              t0               
// s3             s3              t2               
// s4             s4              t5               
// s5             s5              t1               
//
//
// Level9 shader bytecode:
//
    ps_2_0
          def c7, 1, 0.699999988, 1.70000005, 6
          def c8, 16, 0, 0, 0
          dcl t0
          dcl_pp t1.xyz
          dcl_pp t4
          dcl_pp t5
          dcl_pp t6
          dcl_cube s0
          dcl_2d s1
          dcl_2d s2
          dcl_2d s3
          dcl_2d s4
          dcl_2d s5
   0:     mov r0.w, c7.x
   1:     add_pp r0.x, r0.w, -c3.w
   2:     mad_pp r0.y, r0.x, -c7.y, c7.z
   3:     mul_pp r0.x, r0.y, r0.x
   4:     mul_pp r1.w, r0.x, c7.w
   5:     nrm_pp r0.xyz, t4
   8:     dp3_pp r2.w, t1, r0
   9:     add_pp r2.x, r2.w, r2.w
  10:     mad_pp r1.xyz, r0, -r2.x, t1
  11:     dp3_pp r2.x, -t1, r0
  12:     add_pp r2.y, r2.x, r2.x
  13:     mov_sat_pp r2.x, r2.x
  14:     add_pp r3.y, -r2.x, c7.x
  15:     mad_pp r2.xyz, r0, -r2.y, -t1
  16:     dp3_pp r3.x, r2, c5
  17:     mul_pp r2.xy, r3, r3
  18:     mul_pp r2.xy, r2, r2
  19:     add_pp r2.z, r0.w, -c3.w
  20:     mov_pp r3.x, r2.x
  21:     mov_pp r3.y, r2.z
  22:     rcp r0.w, t6.w
  23:     mul_pp r4.xy, r0.w, t6
  24:     texldb_pp r1, r1, s0
  24:     texld_pp r5, t0, s3
  24:     texld r6, t0, s2
  24:     texld r3, r3, s1
  24:     texld_pp r4, r4, s5
  24:     texld r7, t0, s4
  24:     mul_pp r0.w, r1.w, c6.x
  25:     mul_pp r1.xyz, r1, r0.w
  26:     mul_pp r1.xyz, r5.y, r1
  27:     mul_pp r3.yzw, r5.y, t5.wzyx
  28:     dp3_sat_pp r1.w, r0, c5
  29:     mov r0, c0
  30:     mad_pp r0.w, c3.z, -r0.w, r0.w
  31:     add_pp r6.w, -r0.w, c3.w
  32:     add_sat_pp r6.w, r6.w, c7.x
  33:     mad_pp r4.yzw, c2.wzyx, r6.wzyx, -r0.wzyx
  34:     mul_pp r5.xyz, r6, c2
  35:     mul_pp r5.xyz, r0.w, r5
  36:     mad_pp r0.xyz, c3.z, r4.wzyx, r0
  37:     lrp_pp r4.yzw, r2.y, r6.w, r0.wzyx
  38:     mul_pp r1.xyz, r1, r4.wzyx
  39:     mad_pp r1.xyz, r3.wzyx, r5, r1
  40:     mul_pp r0.w, r3.x, c8.x
  41:     mad_pp r0.xyz, r0.w, r0, r5
  42:     mul_pp r2.xyz, r4.x, c1
  43:     mul_pp r2.xyz, r1.w, r2
  44:     mad_pp r0.xyz, r0, r2, r1
  45:     mad_pp r0.xyz, r7, c4, r0
  46:     mov_pp r0.w, c7.x
  47:     mov_pp oC0, r0

// approximately 54 instruction slots used (6 texture, 48 arithmetic)
      ps_4_0
      dcl_constantbuffer cb0[15], immediateIndexed
      dcl_constantbuffer cb1[1], immediateIndexed
      dcl_constantbuffer cb2[4], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 7
   0: add r0.xw, -cb0[12].wwww, l(1.000000, 0.000000, 0.000000, 1.000000)
   1: mad r1.x, -r0.x, l(0.700000), l(1.700000)
   2: mul r0.x, r0.x, r1.x
   3: mul r0.x, r0.x, l(6.000000)
   4: dp3 r1.x, v5.xyzx, v5.xyzx
   5: rsq r1.x, r1.x
   6: mul r1.xyz, r1.xxxx, v5.xyzx
   7: dp3 r1.w, v2.xyzx, r1.xyzx
   8: add r1.w, r1.w, r1.w
   9: mad r2.xyz, r1.xyzx, -r1.wwww, v2.xyzx
  10: sample_b r2.xyzw, r2.xyzx, t3.xyzw, s0, r0.x
  11: mul r0.x, r2.w, cb2[3].x
  12: mul r2.xyz, r2.xyzx, r0.xxxx
  13: sample r3.xyzw, v1.xyxx, t2.xyzw, s3
  14: mul r2.xyz, r2.xyzx, r3.yyyy
  15: mul r3.xyz, r3.yyyy, v6.xyzx
  16: dp3 r0.x, -v2.xyzx, r1.xyzx
  17: add r1.w, r0.x, r0.x
  18: mov_sat r0.x, r0.x
  19: add r4.y, -r0.x, l(1.000000)
  20: mad r5.xyz, r1.xyzx, -r1.wwww, -v2.xyzx
  21: dp3_sat r0.x, r1.xyzx, cb1[0].xyzx
  22: dp3 r4.x, r5.xyzx, cb1[0].xyzx
  23: mul r1.xy, r4.xyxx, r4.xyxx
  24: mul r0.yz, r1.xxyx, r1.xxyx
  25: mad r1.x, -cb0[12].z, cb0[2].w, cb0[2].w
  26: add r1.y, -r1.x, cb0[12].w
  27: add_sat r1.y, r1.y, l(1.000000)
  28: sample r4.xyzw, v1.xyxx, t0.xyzw, s2
  29: mad r5.xyz, cb0[8].xyzx, r4.xyzx, -cb0[2].xyzx
  30: mul r4.xyz, r4.xyzx, cb0[8].xyzx
  31: mul r1.xzw, r1.xxxx, r4.xxyz
  32: mad r4.xyz, cb0[12].zzzz, r5.xyzx, cb0[2].xyzx
  33: add r5.xyz, r1.yyyy, -r4.xyzx
  34: mad r5.xyz, r0.zzzz, r5.xyzx, r4.xyzx
  35: sample r6.xyzw, r0.ywyy, t4.xyzw, s1
  36: mul r0.y, r6.x, l(16.000000)
  37: mad r0.yzw, r0.yyyy, r4.xxyz, r1.xxzw
  38: mul r2.xyz, r2.xyzx, r5.xyzx
  39: mad r1.xyz, r3.xyzx, r1.xzwx, r2.xyzx
  40: div r2.xy, v7.xyxx, v7.wwww
  41: sample r2.xyzw, r2.xyxx, t1.xyzw, s5
  42: mul r2.xyz, r2.xxxx, cb0[6].xyzx
  43: mul r2.xyz, r0.xxxx, r2.xyzx
  44: mad r0.xyz, r0.yzwy, r2.xyzx, r1.xyzx
  45: sample r1.xyzw, v1.xyxx, t5.xyzw, s4
  46: mad o0.xyz, r1.xyzx, cb0[14].xyzx, r0.xyzx
  47: mov o0.w, l(1.000000)
  48: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_ALPHABLEND_ON" }
"// shader disassembly not supported on opengl"
}
SubProgram "d3d9 " {
// Stats: 48 math, 4 textures
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_ALPHABLEND_ON" }
Vector 4 [_Color]
Float 6 [_Glossiness]
Vector 3 [_LightColor0]
Float 5 [_Metallic]
Vector 0 [_WorldSpaceLightPos0]
Vector 2 [unity_ColorSpaceDielectricSpec]
Vector 1 [unity_SpecCube0_HDR]
SetTexture 0 [unity_SpecCube0] CUBE 0
SetTexture 1 [unity_NHxRoughness] 2D 1
SetTexture 2 [_MainTex] 2D 2
SetTexture 3 [_OcclusionMap] 2D 3
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D _OcclusionMap;
//   float4 _WorldSpaceLightPos0;
//   float4 unity_ColorSpaceDielectricSpec;
//   sampler2D unity_NHxRoughness;
//   samplerCUBE unity_SpecCube0;
//   float4 unity_SpecCube0_HDR;
//
//
// Registers:
//
//   Name                           Reg   Size
//   ------------------------------ ----- ----
//   _WorldSpaceLightPos0           c0       1
//   unity_SpecCube0_HDR            c1       1
//   unity_ColorSpaceDielectricSpec c2       1
//   _LightColor0                   c3       1
//   _Color                         c4       1
//   _Metallic                      c5       1
//   _Glossiness                    c6       1
//   unity_SpecCube0                s0       1
//   unity_NHxRoughness             s1       1
//   _MainTex                       s2       1
//   _OcclusionMap                  s3       1
//

    ps_2_0
    def c7, 1, 0.699999988, 1.70000005, 6
    def c8, 16, 0, 0, 0
    dcl t0.xy
    dcl_pp t1.xyz
    dcl_pp t4.xyz
    dcl_pp t5.xyz
    dcl_cube s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    mov r0.w, c7.x
    add_pp r0.x, r0.w, -c6.x
    mad_pp r0.y, r0.x, -c7.y, c7.z
    mul_pp r0.x, r0.y, r0.x
    mul_pp r1.w, r0.x, c7.w
    nrm_pp r0.xyz, t4
    dp3_pp r2.w, t1, r0
    add_pp r2.x, r2.w, r2.w
    mad_pp r1.xyz, r0, -r2.x, t1
    dp3_pp r2.x, -t1, r0
    add_pp r2.y, r2.x, r2.x
    mov_sat_pp r2.x, r2.x
    add_pp r3.y, -r2.x, c7.x
    mad_pp r2.xyz, r0, -r2.y, -t1
    dp3_pp r3.x, r2, c0
    mul_pp r2.xy, r3, r3
    mul_pp r2.xy, r2, r2
    add_pp r2.z, r0.w, -c6.x
    mov_pp r3.x, r2.x
    mov_pp r3.y, r2.z
    texldb_pp r1, r1, s0
    texld_pp r4, t0, s3
    texld r5, t0, s2
    texld r3, r3, s1
    pow_pp r0.w, r1.w, c1.y
    mul_pp r0.w, r0.w, c1.x
    mul_pp r1.xyz, r1, r0.w
    mul_pp r1.xyz, r4.y, r1
    mul_pp r3.yzw, r4.y, t5.wzyx
    dp3_sat_pp r1.w, r0, c0
    mul_pp r0.xyz, r1.w, c3
    mov r4, c2
    mad_pp r0.w, c5.x, -r4.w, r4.w
    add_pp r1.w, -r0.w, c6.x
    add_sat_pp r1.w, r1.w, c7.x
    mad_pp r6.xyz, c4, r5, -r4
    mad_pp r4.xyz, c5.x, r6, r4
    lrp_pp r6.xyz, r2.y, r1.w, r4
    mul_pp r1.xyz, r1, r6
    mul_pp r2.xyz, r5, c4
    mul_pp r5.w, r5.w, c4.w
    mul_pp r2.xyz, r0.w, r2
    mad_pp r1.xyz, r3.wzyx, r2, r1
    mul_pp r0.w, r3.x, c8.x
    mad_pp r2.xyz, r0.w, r4, r2
    mad_pp r5.xyz, r2, r0, r1
    mov_pp oC0, r5

// approximately 51 instruction slots used (4 texture, 47 arithmetic)
"
}
SubProgram "d3d11 " {
// Stats: 41 math, 3 textures
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_ALPHABLEND_ON" }
SetTexture 0 [_MainTex] 2D 2
SetTexture 1 [_OcclusionMap] 2D 3
SetTexture 2 [unity_NHxRoughness] 2D 1
SetTexture 3 [unity_SpecCube0] CUBE 0
ConstBuffer "$Globals" 240
Vector 32 [unity_ColorSpaceDielectricSpec]
Vector 96 [_LightColor0]
Vector 128 [_Color]
Float 200 [_Metallic]
Float 204 [_Glossiness]
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
ConstBuffer "UnityReflectionProbes" 128
Vector 48 [unity_SpecCube0_HDR]
BindCB  "$Globals" 0
BindCB  "UnityLighting" 1
BindCB  "UnityReflectionProbes" 2
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer cb0[13], immediateIndexed
      dcl_constantbuffer cb1[1], immediateIndexed
      dcl_constantbuffer cb2[4], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 8
   0: add r0.xw, -cb0[12].wwww, l(1.000000, 0.000000, 0.000000, 1.000000)
   1: mad r1.x, -r0.x, l(0.700000), l(1.700000)
   2: mul r0.x, r0.x, r1.x
   3: mul r0.x, r0.x, l(6.000000)
   4: dp3 r1.x, v5.xyzx, v5.xyzx
   5: rsq r1.x, r1.x
   6: mul r1.xyz, r1.xxxx, v5.xyzx
   7: dp3 r1.w, v2.xyzx, r1.xyzx
   8: add r1.w, r1.w, r1.w
   9: mad r2.xyz, r1.xyzx, -r1.wwww, v2.xyzx
  10: sample_l r2.xyzw, r2.xyzx, t3.xyzw, s0, r0.x
  11: log r0.x, r2.w
  12: mul r0.x, r0.x, cb2[3].y
  13: exp r0.x, r0.x
  14: mul r0.x, r0.x, cb2[3].x
  15: mul r2.xyz, r2.xyzx, r0.xxxx
  16: sample r3.xyzw, v1.xyxx, t1.xyzw, s3
  17: mul r2.xyz, r2.xyzx, r3.yyyy
  18: mul r3.xyz, r3.yyyy, v6.xyzx
  19: dp3 r0.x, -v2.xyzx, r1.xyzx
  20: add r1.w, r0.x, r0.x
  21: mov_sat r0.x, r0.x
  22: add r4.y, -r0.x, l(1.000000)
  23: mad r5.xyz, r1.xyzx, -r1.wwww, -v2.xyzx
  24: dp3_sat r0.x, r1.xyzx, cb1[0].xyzx
  25: mul r1.xyz, r0.xxxx, cb0[6].xyzx
  26: dp3 r4.x, r5.xyzx, cb1[0].xyzx
  27: mul r4.xy, r4.xyxx, r4.xyxx
  28: mul r0.yz, r4.xxyx, r4.xxyx
  29: mad r0.x, -cb0[12].z, cb0[2].w, cb0[2].w
  30: add r1.w, -r0.x, cb0[12].w
  31: add_sat r1.w, r1.w, l(1.000000)
  32: sample r4.xyzw, v1.xyxx, t0.xyzw, s2
  33: mad r5.xyz, cb0[8].xyzx, r4.xyzx, -cb0[2].xyzx
  34: mad r5.xyz, cb0[12].zzzz, r5.xyzx, cb0[2].xyzx
  35: add r6.xyz, r1.wwww, -r5.xyzx
  36: mad r6.xyz, r0.zzzz, r6.xyzx, r5.xyzx
  37: sample r7.xyzw, r0.ywyy, t2.xyzw, s1
  38: mul r0.y, r7.x, l(16.000000)
  39: mul r2.xyz, r2.xyzx, r6.xyzx
  40: mul r4.xyz, r4.xyzx, cb0[8].xyzx
  41: mul o0.w, r4.w, cb0[8].w
  42: mul r0.xzw, r0.xxxx, r4.xxyz
  43: mad r2.xyz, r3.xyzx, r0.xzwx, r2.xyzx
  44: mad r0.xyz, r0.yyyy, r5.xyzx, r0.xzwx
  45: mad o0.xyz, r0.xyzx, r1.xyzx, r2.xyzx
  46: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "d3d11_9x " {
// Stats: 38 math, 3 textures
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_ALPHABLEND_ON" }
SetTexture 0 [_MainTex] 2D 2
SetTexture 1 [_OcclusionMap] 2D 3
SetTexture 2 [unity_SpecCube0] CUBE 0
SetTexture 3 [unity_NHxRoughness] 2D 1
ConstBuffer "$Globals" 240
Vector 32 [unity_ColorSpaceDielectricSpec]
Vector 96 [_LightColor0]
Vector 128 [_Color]
Float 200 [_Metallic]
Float 204 [_Glossiness]
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
ConstBuffer "UnityReflectionProbes" 128
Vector 48 [unity_SpecCube0_HDR]
BindCB  "$Globals" 0
BindCB  "UnityLighting" 1
BindCB  "UnityReflectionProbes" 2
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c0         cb0             2         1  ( FLT, FLT, FLT, FLT)
// c1         cb0             6         1  ( FLT, FLT, FLT, FLT)
// c2         cb0             8         1  ( FLT, FLT, FLT, FLT)
// c3         cb0            12         1  ( FLT, FLT, FLT, FLT)
// c4         cb1             0         1  ( FLT, FLT, FLT, FLT)
// c5         cb2             3         1  ( FLT, FLT, FLT, FLT)
//
//
// Sampler/Resource to DX9 shader sampler mappings:
//
// Target Sampler Source Sampler  Source Resource
// -------------- --------------- ----------------
// s0             s0              t2               
// s1             s1              t3               
// s2             s2              t0               
// s3             s3              t1               
//
//
// Level9 shader bytecode:
//
    ps_2_0
          def c6, 1, 0.699999988, 1.70000005, 6
          def c7, 16, 0, 0, 0
          dcl t0
          dcl_pp t1.xyz
          dcl_pp t4
          dcl_pp t5
          dcl_cube s0
          dcl_2d s1
          dcl_2d s2
          dcl_2d s3
   0:     mov r0.w, c6.x
   1:     add_pp r0.x, r0.w, -c3.w
   2:     mad_pp r0.y, r0.x, -c6.y, c6.z
   3:     mul_pp r0.x, r0.y, r0.x
   4:     mul_pp r1.w, r0.x, c6.w
   5:     nrm_pp r0.xyz, t4
   8:     dp3_pp r2.w, t1, r0
   9:     add_pp r2.x, r2.w, r2.w
  10:     mad_pp r1.xyz, r0, -r2.x, t1
  11:     dp3_pp r2.x, -t1, r0
  12:     add_pp r2.y, r2.x, r2.x
  13:     mov_sat_pp r2.x, r2.x
  14:     add_pp r3.y, -r2.x, c6.x
  15:     mad_pp r2.xyz, r0, -r2.y, -t1
  16:     dp3_pp r3.x, r2, c4
  17:     mul_pp r2.xy, r3, r3
  18:     mul_pp r2.xy, r2, r2
  19:     add_pp r2.z, r0.w, -c3.w
  20:     mov_pp r3.x, r2.x
  21:     mov_pp r3.y, r2.z
  22:     texldb_pp r1, r1, s0
  22:     texld_pp r4, t0, s3
  22:     texld r5, t0, s2
  22:     texld r3, r3, s1
  22:     mul_pp r0.w, r1.w, c5.x
  23:     mul_pp r1.xyz, r1, r0.w
  24:     mul_pp r1.xyz, r4.y, r1
  25:     mul_pp r3.yzw, r4.y, t5.wzyx
  26:     dp3_sat_pp r1.w, r0, c4
  27:     mul_pp r0.xyz, r1.w, c1
  28:     mov r4, c0
  29:     mad_pp r0.w, c3.z, -r4.w, r4.w
  30:     add_pp r1.w, -r0.w, c3.w
  31:     add_sat_pp r1.w, r1.w, c6.x
  32:     mad_pp r6.xyz, c2, r5, -r4
  33:     mad_pp r4.xyz, c3.z, r6, r4
  34:     lrp_pp r6.xyz, r2.y, r1.w, r4
  35:     mul_pp r1.xyz, r1, r6
  36:     mul_pp r2.xyz, r5, c2
  37:     mul_pp r5.w, r5.w, c2.w
  38:     mul_pp r2.xyz, r0.w, r2
  39:     mad_pp r1.xyz, r3.wzyx, r2, r1
  40:     mul_pp r0.w, r3.x, c7.x
  41:     mad_pp r2.xyz, r0.w, r4, r2
  42:     mad_pp r5.xyz, r2, r0, r1
  43:     mov_pp oC0, r5

// approximately 48 instruction slots used (4 texture, 44 arithmetic)
      ps_4_0
      dcl_constantbuffer cb0[13], immediateIndexed
      dcl_constantbuffer cb1[1], immediateIndexed
      dcl_constantbuffer cb2[4], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texturecube (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 8
   0: add r0.xw, -cb0[12].wwww, l(1.000000, 0.000000, 0.000000, 1.000000)
   1: mad r1.x, -r0.x, l(0.700000), l(1.700000)
   2: mul r0.x, r0.x, r1.x
   3: mul r0.x, r0.x, l(6.000000)
   4: dp3 r1.x, v5.xyzx, v5.xyzx
   5: rsq r1.x, r1.x
   6: mul r1.xyz, r1.xxxx, v5.xyzx
   7: dp3 r1.w, v2.xyzx, r1.xyzx
   8: add r1.w, r1.w, r1.w
   9: mad r2.xyz, r1.xyzx, -r1.wwww, v2.xyzx
  10: sample_b r2.xyzw, r2.xyzx, t2.xyzw, s0, r0.x
  11: mul r0.x, r2.w, cb2[3].x
  12: mul r2.xyz, r2.xyzx, r0.xxxx
  13: sample r3.xyzw, v1.xyxx, t1.xyzw, s3
  14: mul r2.xyz, r2.xyzx, r3.yyyy
  15: mul r3.xyz, r3.yyyy, v6.xyzx
  16: dp3 r0.x, -v2.xyzx, r1.xyzx
  17: add r1.w, r0.x, r0.x
  18: mov_sat r0.x, r0.x
  19: add r4.y, -r0.x, l(1.000000)
  20: mad r5.xyz, r1.xyzx, -r1.wwww, -v2.xyzx
  21: dp3_sat r0.x, r1.xyzx, cb1[0].xyzx
  22: mul r1.xyz, r0.xxxx, cb0[6].xyzx
  23: dp3 r4.x, r5.xyzx, cb1[0].xyzx
  24: mul r4.xy, r4.xyxx, r4.xyxx
  25: mul r0.yz, r4.xxyx, r4.xxyx
  26: mad r0.x, -cb0[12].z, cb0[2].w, cb0[2].w
  27: add r1.w, -r0.x, cb0[12].w
  28: add_sat r1.w, r1.w, l(1.000000)
  29: sample r4.xyzw, v1.xyxx, t0.xyzw, s2
  30: mad r5.xyz, cb0[8].xyzx, r4.xyzx, -cb0[2].xyzx
  31: mad r5.xyz, cb0[12].zzzz, r5.xyzx, cb0[2].xyzx
  32: add r6.xyz, r1.wwww, -r5.xyzx
  33: mad r6.xyz, r0.zzzz, r6.xyzx, r5.xyzx
  34: sample r7.xyzw, r0.ywyy, t3.xyzw, s1
  35: mul r0.y, r7.x, l(16.000000)
  36: mul r2.xyz, r2.xyzx, r6.xyzx
  37: mul r4.xyz, r4.xyzx, cb0[8].xyzx
  38: mul o0.w, r4.w, cb0[8].w
  39: mul r0.xzw, r0.xxxx, r4.xxyz
  40: mad r2.xyz, r3.xyzx, r0.xzwx, r2.xyzx
  41: mad r0.xyz, r0.yyyy, r5.xyzx, r0.xzwx
  42: mad o0.xyz, r0.xyzx, r1.xyzx, r2.xyzx
  43: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_ALPHABLEND_ON" }
"// shader disassembly not supported on opengl"
}
SubProgram "d3d9 " {
// Stats: 49 math, 5 textures
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_ALPHABLEND_ON" }
Vector 4 [_Color]
Float 6 [_Glossiness]
Vector 3 [_LightColor0]
Float 5 [_Metallic]
Vector 0 [_WorldSpaceLightPos0]
Vector 2 [unity_ColorSpaceDielectricSpec]
Vector 1 [unity_SpecCube0_HDR]
SetTexture 0 [unity_SpecCube0] CUBE 0
SetTexture 1 [unity_NHxRoughness] 2D 1
SetTexture 2 [_MainTex] 2D 2
SetTexture 3 [_OcclusionMap] 2D 3
SetTexture 4 [_ShadowMapTexture] 2D 4
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D _OcclusionMap;
//   sampler2D _ShadowMapTexture;
//   float4 _WorldSpaceLightPos0;
//   float4 unity_ColorSpaceDielectricSpec;
//   sampler2D unity_NHxRoughness;
//   samplerCUBE unity_SpecCube0;
//   float4 unity_SpecCube0_HDR;
//
//
// Registers:
//
//   Name                           Reg   Size
//   ------------------------------ ----- ----
//   _WorldSpaceLightPos0           c0       1
//   unity_SpecCube0_HDR            c1       1
//   unity_ColorSpaceDielectricSpec c2       1
//   _LightColor0                   c3       1
//   _Color                         c4       1
//   _Metallic                      c5       1
//   _Glossiness                    c6       1
//   unity_SpecCube0                s0       1
//   unity_NHxRoughness             s1       1
//   _MainTex                       s2       1
//   _OcclusionMap                  s3       1
//   _ShadowMapTexture              s4       1
//

    ps_2_0
    def c7, 1, 0.699999988, 1.70000005, 6
    def c8, 16, 0, 0, 0
    dcl t0.xy
    dcl_pp t1.xyz
    dcl_pp t4.xyz
    dcl_pp t5.xyz
    dcl_pp t6
    dcl_cube s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    mov r0.w, c7.x
    add_pp r0.x, r0.w, -c6.x
    mad_pp r0.y, r0.x, -c7.y, c7.z
    mul_pp r0.x, r0.y, r0.x
    mul_pp r1.w, r0.x, c7.w
    nrm_pp r0.xyz, t4
    dp3_pp r2.w, t1, r0
    add_pp r2.x, r2.w, r2.w
    mad_pp r1.xyz, r0, -r2.x, t1
    dp3_pp r2.x, -t1, r0
    add_pp r2.y, r2.x, r2.x
    mov_sat_pp r2.x, r2.x
    add_pp r3.y, -r2.x, c7.x
    mad_pp r2.xyz, r0, -r2.y, -t1
    dp3_pp r3.x, r2, c0
    mul_pp r2.xy, r3, r3
    mul_pp r2.xy, r2, r2
    add_pp r2.z, r0.w, -c6.x
    mov_pp r3.x, r2.x
    mov_pp r3.y, r2.z
    texldb_pp r1, r1, s0
    texld_pp r4, t0, s3
    texld r5, t0, s2
    texld r3, r3, s1
    texldp_pp r6, t6, s4
    pow_pp r0.w, r1.w, c1.y
    mul_pp r0.w, r0.w, c1.x
    mul_pp r1.xyz, r1, r0.w
    mul_pp r1.xyz, r4.y, r1
    mul_pp r3.yzw, r4.y, t5.wzyx
    dp3_sat_pp r1.w, r0, c0
    mov r0, c2
    mad_pp r0.w, c5.x, -r0.w, r0.w
    add_pp r2.x, -r0.w, c6.x
    add_sat_pp r2.x, r2.x, c7.x
    mad_pp r4.xyz, c4, r5, -r0
    mad_pp r0.xyz, c5.x, r4, r0
    lrp_pp r4.xyz, r2.y, r2.x, r0
    mul_pp r1.xyz, r1, r4
    mul_pp r2.xyz, r5, c4
    mul_pp r4.w, r5.w, c4.w
    mul_pp r2.xyz, r0.w, r2
    mad_pp r1.xyz, r3.wzyx, r2, r1
    mul_pp r0.w, r3.x, c8.x
    mad_pp r0.xyz, r0.w, r0, r2
    mul_pp r2.xyz, r6.x, c3
    mul_pp r2.xyz, r1.w, r2
    mad_pp r4.xyz, r0, r2, r1
    mov_pp oC0, r4

// approximately 53 instruction slots used (5 texture, 48 arithmetic)
"
}
SubProgram "d3d11 " {
// Stats: 43 math, 4 textures
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_ALPHABLEND_ON" }
SetTexture 0 [_MainTex] 2D 2
SetTexture 1 [_ShadowMapTexture] 2D 4
SetTexture 2 [_OcclusionMap] 2D 3
SetTexture 3 [unity_NHxRoughness] 2D 1
SetTexture 4 [unity_SpecCube0] CUBE 0
ConstBuffer "$Globals" 240
Vector 32 [unity_ColorSpaceDielectricSpec]
Vector 96 [_LightColor0]
Vector 128 [_Color]
Float 200 [_Metallic]
Float 204 [_Glossiness]
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
ConstBuffer "UnityReflectionProbes" 128
Vector 48 [unity_SpecCube0_HDR]
BindCB  "$Globals" 0
BindCB  "UnityLighting" 1
BindCB  "UnityReflectionProbes" 2
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer cb0[13], immediateIndexed
      dcl_constantbuffer cb1[1], immediateIndexed
      dcl_constantbuffer cb2[4], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 7
   0: add r0.xw, -cb0[12].wwww, l(1.000000, 0.000000, 0.000000, 1.000000)
   1: mad r1.x, -r0.x, l(0.700000), l(1.700000)
   2: mul r0.x, r0.x, r1.x
   3: mul r0.x, r0.x, l(6.000000)
   4: dp3 r1.x, v5.xyzx, v5.xyzx
   5: rsq r1.x, r1.x
   6: mul r1.xyz, r1.xxxx, v5.xyzx
   7: dp3 r1.w, v2.xyzx, r1.xyzx
   8: add r1.w, r1.w, r1.w
   9: mad r2.xyz, r1.xyzx, -r1.wwww, v2.xyzx
  10: sample_l r2.xyzw, r2.xyzx, t4.xyzw, s0, r0.x
  11: log r0.x, r2.w
  12: mul r0.x, r0.x, cb2[3].y
  13: exp r0.x, r0.x
  14: mul r0.x, r0.x, cb2[3].x
  15: mul r2.xyz, r2.xyzx, r0.xxxx
  16: sample r3.xyzw, v1.xyxx, t2.xyzw, s3
  17: mul r2.xyz, r2.xyzx, r3.yyyy
  18: mul r3.xyz, r3.yyyy, v6.xyzx
  19: dp3 r0.x, -v2.xyzx, r1.xyzx
  20: add r1.w, r0.x, r0.x
  21: mov_sat r0.x, r0.x
  22: add r4.y, -r0.x, l(1.000000)
  23: mad r5.xyz, r1.xyzx, -r1.wwww, -v2.xyzx
  24: dp3_sat r0.x, r1.xyzx, cb1[0].xyzx
  25: dp3 r4.x, r5.xyzx, cb1[0].xyzx
  26: mul r1.xy, r4.xyxx, r4.xyxx
  27: mul r0.yz, r1.xxyx, r1.xxyx
  28: mad r1.x, -cb0[12].z, cb0[2].w, cb0[2].w
  29: add r1.y, -r1.x, cb0[12].w
  30: add_sat r1.y, r1.y, l(1.000000)
  31: sample r4.xyzw, v1.xyxx, t0.xyzw, s2
  32: mad r5.xyz, cb0[8].xyzx, r4.xyzx, -cb0[2].xyzx
  33: mad r5.xyz, cb0[12].zzzz, r5.xyzx, cb0[2].xyzx
  34: add r1.yzw, r1.yyyy, -r5.xxyz
  35: mad r1.yzw, r0.zzzz, r1.yyzw, r5.xxyz
  36: sample r6.xyzw, r0.ywyy, t3.xyzw, s1
  37: mul r0.y, r6.x, l(16.000000)
  38: mul r1.yzw, r1.yyzw, r2.xxyz
  39: mul r2.xyz, r4.xyzx, cb0[8].xyzx
  40: mul o0.w, r4.w, cb0[8].w
  41: mul r2.xyz, r1.xxxx, r2.xyzx
  42: mad r1.xyz, r3.xyzx, r2.xyzx, r1.yzwy
  43: mad r0.yzw, r0.yyyy, r5.xxyz, r2.xxyz
  44: div r2.xy, v7.xyxx, v7.wwww
  45: sample r2.xyzw, r2.xyxx, t1.xyzw, s4
  46: mul r2.xyz, r2.xxxx, cb0[6].xyzx
  47: mul r2.xyz, r0.xxxx, r2.xyzx
  48: mad o0.xyz, r0.yzwy, r2.xyzx, r1.xyzx
  49: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "d3d11_9x " {
// Stats: 40 math, 4 textures
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_ALPHABLEND_ON" }
SetTexture 0 [_MainTex] 2D 2
SetTexture 1 [_ShadowMapTexture] 2D 4
SetTexture 2 [_OcclusionMap] 2D 3
SetTexture 3 [unity_SpecCube0] CUBE 0
SetTexture 4 [unity_NHxRoughness] 2D 1
ConstBuffer "$Globals" 240
Vector 32 [unity_ColorSpaceDielectricSpec]
Vector 96 [_LightColor0]
Vector 128 [_Color]
Float 200 [_Metallic]
Float 204 [_Glossiness]
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
ConstBuffer "UnityReflectionProbes" 128
Vector 48 [unity_SpecCube0_HDR]
BindCB  "$Globals" 0
BindCB  "UnityLighting" 1
BindCB  "UnityReflectionProbes" 2
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c0         cb0             2         1  ( FLT, FLT, FLT, FLT)
// c1         cb0             6         1  ( FLT, FLT, FLT, FLT)
// c2         cb0             8         1  ( FLT, FLT, FLT, FLT)
// c3         cb0            12         1  ( FLT, FLT, FLT, FLT)
// c4         cb1             0         1  ( FLT, FLT, FLT, FLT)
// c5         cb2             3         1  ( FLT, FLT, FLT, FLT)
//
//
// Sampler/Resource to DX9 shader sampler mappings:
//
// Target Sampler Source Sampler  Source Resource
// -------------- --------------- ----------------
// s0             s0              t3               
// s1             s1              t4               
// s2             s2              t0               
// s3             s3              t2               
// s4             s4              t1               
//
//
// Level9 shader bytecode:
//
    ps_2_0
          def c6, 1, 0.699999988, 1.70000005, 6
          def c7, 16, 0, 0, 0
          dcl t0
          dcl_pp t1.xyz
          dcl_pp t4
          dcl_pp t5
          dcl_pp t6
          dcl_cube s0
          dcl_2d s1
          dcl_2d s2
          dcl_2d s3
          dcl_2d s4
   0:     mov r0.w, c6.x
   1:     add_pp r0.x, r0.w, -c3.w
   2:     mad_pp r0.y, r0.x, -c6.y, c6.z
   3:     mul_pp r0.x, r0.y, r0.x
   4:     mul_pp r1.w, r0.x, c6.w
   5:     nrm_pp r0.xyz, t4
   8:     dp3_pp r2.w, t1, r0
   9:     add_pp r2.x, r2.w, r2.w
  10:     mad_pp r1.xyz, r0, -r2.x, t1
  11:     dp3_pp r2.x, -t1, r0
  12:     add_pp r2.y, r2.x, r2.x
  13:     mov_sat_pp r2.x, r2.x
  14:     add_pp r3.y, -r2.x, c6.x
  15:     mad_pp r2.xyz, r0, -r2.y, -t1
  16:     dp3_pp r3.x, r2, c4
  17:     mul_pp r2.xy, r3, r3
  18:     mul_pp r2.xy, r2, r2
  19:     add_pp r2.z, r0.w, -c3.w
  20:     mov_pp r3.x, r2.x
  21:     mov_pp r3.y, r2.z
  22:     rcp r0.w, t6.w
  23:     mul_pp r4.xy, r0.w, t6
  24:     texldb_pp r1, r1, s0
  24:     texld_pp r5, t0, s3
  24:     texld r6, t0, s2
  24:     texld r3, r3, s1
  24:     texld_pp r4, r4, s4
  24:     mul_pp r0.w, r1.w, c5.x
  25:     mul_pp r1.xyz, r1, r0.w
  26:     mul_pp r1.xyz, r5.y, r1
  27:     mul_pp r3.yzw, r5.y, t5.wzyx
  28:     dp3_sat_pp r1.w, r0, c4
  29:     mov r0, c0
  30:     mad_pp r0.w, c3.z, -r0.w, r0.w
  31:     add_pp r2.x, -r0.w, c3.w
  32:     add_sat_pp r2.x, r2.x, c6.x
  33:     mad_pp r4.yzw, c2.wzyx, r6.wzyx, -r0.wzyx
  34:     mad_pp r0.xyz, c3.z, r4.wzyx, r0
  35:     lrp_pp r4.yzw, r2.y, r2.x, r0.wzyx
  36:     mul_pp r1.xyz, r1, r4.wzyx
  37:     mul_pp r2.xyz, r6, c2
  38:     mul_pp r5.w, r6.w, c2.w
  39:     mul_pp r2.xyz, r0.w, r2
  40:     mad_pp r1.xyz, r3.wzyx, r2, r1
  41:     mul_pp r0.w, r3.x, c7.x
  42:     mad_pp r0.xyz, r0.w, r0, r2
  43:     mul_pp r2.xyz, r4.x, c1
  44:     mul_pp r2.xyz, r1.w, r2
  45:     mad_pp r5.xyz, r0, r2, r1
  46:     mov_pp oC0, r5

// approximately 52 instruction slots used (5 texture, 47 arithmetic)
      ps_4_0
      dcl_constantbuffer cb0[13], immediateIndexed
      dcl_constantbuffer cb1[1], immediateIndexed
      dcl_constantbuffer cb2[4], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 7
   0: add r0.xw, -cb0[12].wwww, l(1.000000, 0.000000, 0.000000, 1.000000)
   1: mad r1.x, -r0.x, l(0.700000), l(1.700000)
   2: mul r0.x, r0.x, r1.x
   3: mul r0.x, r0.x, l(6.000000)
   4: dp3 r1.x, v5.xyzx, v5.xyzx
   5: rsq r1.x, r1.x
   6: mul r1.xyz, r1.xxxx, v5.xyzx
   7: dp3 r1.w, v2.xyzx, r1.xyzx
   8: add r1.w, r1.w, r1.w
   9: mad r2.xyz, r1.xyzx, -r1.wwww, v2.xyzx
  10: sample_b r2.xyzw, r2.xyzx, t3.xyzw, s0, r0.x
  11: mul r0.x, r2.w, cb2[3].x
  12: mul r2.xyz, r2.xyzx, r0.xxxx
  13: sample r3.xyzw, v1.xyxx, t2.xyzw, s3
  14: mul r2.xyz, r2.xyzx, r3.yyyy
  15: mul r3.xyz, r3.yyyy, v6.xyzx
  16: dp3 r0.x, -v2.xyzx, r1.xyzx
  17: add r1.w, r0.x, r0.x
  18: mov_sat r0.x, r0.x
  19: add r4.y, -r0.x, l(1.000000)
  20: mad r5.xyz, r1.xyzx, -r1.wwww, -v2.xyzx
  21: dp3_sat r0.x, r1.xyzx, cb1[0].xyzx
  22: dp3 r4.x, r5.xyzx, cb1[0].xyzx
  23: mul r1.xy, r4.xyxx, r4.xyxx
  24: mul r0.yz, r1.xxyx, r1.xxyx
  25: mad r1.x, -cb0[12].z, cb0[2].w, cb0[2].w
  26: add r1.y, -r1.x, cb0[12].w
  27: add_sat r1.y, r1.y, l(1.000000)
  28: sample r4.xyzw, v1.xyxx, t0.xyzw, s2
  29: mad r5.xyz, cb0[8].xyzx, r4.xyzx, -cb0[2].xyzx
  30: mad r5.xyz, cb0[12].zzzz, r5.xyzx, cb0[2].xyzx
  31: add r1.yzw, r1.yyyy, -r5.xxyz
  32: mad r1.yzw, r0.zzzz, r1.yyzw, r5.xxyz
  33: sample r6.xyzw, r0.ywyy, t4.xyzw, s1
  34: mul r0.y, r6.x, l(16.000000)
  35: mul r1.yzw, r1.yyzw, r2.xxyz
  36: mul r2.xyz, r4.xyzx, cb0[8].xyzx
  37: mul o0.w, r4.w, cb0[8].w
  38: mul r2.xyz, r1.xxxx, r2.xyzx
  39: mad r1.xyz, r3.xyzx, r2.xyzx, r1.yzwy
  40: mad r0.yzw, r0.yyyy, r5.xxyz, r2.xxyz
  41: div r2.xy, v7.xyxx, v7.wwww
  42: sample r2.xyzw, r2.xyxx, t1.xyzw, s4
  43: mul r2.xyz, r2.xxxx, cb0[6].xyzx
  44: mul r2.xyz, r0.xxxx, r2.xyzx
  45: mad o0.xyz, r0.yzwy, r2.xyzx, r1.xyzx
  46: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "_ALPHABLEND_ON" }
"// shader disassembly not supported on opengl"
}
SubProgram "d3d9 " {
// Stats: 49 math, 5 textures
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "_ALPHABLEND_ON" }
Vector 4 [_Color]
Vector 7 [_EmissionColor]
Float 6 [_Glossiness]
Vector 3 [_LightColor0]
Float 5 [_Metallic]
Vector 0 [_WorldSpaceLightPos0]
Vector 2 [unity_ColorSpaceDielectricSpec]
Vector 1 [unity_SpecCube0_HDR]
SetTexture 0 [unity_SpecCube0] CUBE 0
SetTexture 1 [unity_NHxRoughness] 2D 1
SetTexture 2 [_MainTex] 2D 2
SetTexture 3 [_OcclusionMap] 2D 3
SetTexture 4 [_EmissionMap] 2D 4
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _Color;
//   float4 _EmissionColor;
//   sampler2D _EmissionMap;
//   float _Glossiness;
//   float4 _LightColor0;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D _OcclusionMap;
//   float4 _WorldSpaceLightPos0;
//   float4 unity_ColorSpaceDielectricSpec;
//   sampler2D unity_NHxRoughness;
//   samplerCUBE unity_SpecCube0;
//   float4 unity_SpecCube0_HDR;
//
//
// Registers:
//
//   Name                           Reg   Size
//   ------------------------------ ----- ----
//   _WorldSpaceLightPos0           c0       1
//   unity_SpecCube0_HDR            c1       1
//   unity_ColorSpaceDielectricSpec c2       1
//   _LightColor0                   c3       1
//   _Color                         c4       1
//   _Metallic                      c5       1
//   _Glossiness                    c6       1
//   _EmissionColor                 c7       1
//   unity_SpecCube0                s0       1
//   unity_NHxRoughness             s1       1
//   _MainTex                       s2       1
//   _OcclusionMap                  s3       1
//   _EmissionMap                   s4       1
//

    ps_2_0
    def c8, 1, 0.699999988, 1.70000005, 6
    def c9, 16, 0, 0, 0
    dcl t0.xy
    dcl_pp t1.xyz
    dcl_pp t4.xyz
    dcl_pp t5.xyz
    dcl_cube s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    mov r0.w, c8.x
    add_pp r0.x, r0.w, -c6.x
    mad_pp r0.y, r0.x, -c8.y, c8.z
    mul_pp r0.x, r0.y, r0.x
    mul_pp r1.w, r0.x, c8.w
    nrm_pp r0.xyz, t4
    dp3_pp r2.w, t1, r0
    add_pp r2.x, r2.w, r2.w
    mad_pp r1.xyz, r0, -r2.x, t1
    dp3_pp r2.x, -t1, r0
    add_pp r2.y, r2.x, r2.x
    mov_sat_pp r2.x, r2.x
    add_pp r3.y, -r2.x, c8.x
    mad_pp r2.xyz, r0, -r2.y, -t1
    dp3_pp r3.x, r2, c0
    mul_pp r2.xy, r3, r3
    mul_pp r2.xy, r2, r2
    add_pp r2.z, r0.w, -c6.x
    mov_pp r3.x, r2.x
    mov_pp r3.y, r2.z
    texldb_pp r1, r1, s0
    texld_pp r4, t0, s3
    texld r5, t0, s2
    texld r3, r3, s1
    texld r6, t0, s4
    pow_pp r0.w, r1.w, c1.y
    mul_pp r0.w, r0.w, c1.x
    mul_pp r1.xyz, r1, r0.w
    mul_pp r1.xyz, r4.y, r1
    mul_pp r3.yzw, r4.y, t5.wzyx
    dp3_sat_pp r1.w, r0, c0
    mul_pp r0.xyz, r1.w, c3
    mov r4, c2
    mad_pp r0.w, c5.x, -r4.w, r4.w
    add_pp r1.w, -r0.w, c6.x
    add_sat_pp r1.w, r1.w, c8.x
    mad_pp r7.xyz, c4, r5, -r4
    mad_pp r4.xyz, c5.x, r7, r4
    lrp_pp r7.xyz, r2.y, r1.w, r4
    mul_pp r1.xyz, r1, r7
    mul_pp r2.xyz, r5, c4
    mul_pp r5.w, r5.w, c4.w
    mul_pp r2.xyz, r0.w, r2
    mad_pp r1.xyz, r3.wzyx, r2, r1
    mul_pp r0.w, r3.x, c9.x
    mad_pp r2.xyz, r0.w, r4, r2
    mad_pp r0.xyz, r2, r0, r1
    mad_pp r5.xyz, r6, c7, r0
    mov_pp oC0, r5

// approximately 53 instruction slots used (5 texture, 48 arithmetic)
"
}
SubProgram "d3d11 " {
// Stats: 42 math, 4 textures
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "_ALPHABLEND_ON" }
SetTexture 0 [_MainTex] 2D 2
SetTexture 1 [_OcclusionMap] 2D 3
SetTexture 2 [unity_NHxRoughness] 2D 1
SetTexture 3 [_EmissionMap] 2D 4
SetTexture 4 [unity_SpecCube0] CUBE 0
ConstBuffer "$Globals" 240
Vector 32 [unity_ColorSpaceDielectricSpec]
Vector 96 [_LightColor0]
Vector 128 [_Color]
Float 200 [_Metallic]
Float 204 [_Glossiness]
Vector 224 [_EmissionColor]
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
ConstBuffer "UnityReflectionProbes" 128
Vector 48 [unity_SpecCube0_HDR]
BindCB  "$Globals" 0
BindCB  "UnityLighting" 1
BindCB  "UnityReflectionProbes" 2
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer cb0[15], immediateIndexed
      dcl_constantbuffer cb1[1], immediateIndexed
      dcl_constantbuffer cb2[4], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 8
   0: add r0.xw, -cb0[12].wwww, l(1.000000, 0.000000, 0.000000, 1.000000)
   1: mad r1.x, -r0.x, l(0.700000), l(1.700000)
   2: mul r0.x, r0.x, r1.x
   3: mul r0.x, r0.x, l(6.000000)
   4: dp3 r1.x, v5.xyzx, v5.xyzx
   5: rsq r1.x, r1.x
   6: mul r1.xyz, r1.xxxx, v5.xyzx
   7: dp3 r1.w, v2.xyzx, r1.xyzx
   8: add r1.w, r1.w, r1.w
   9: mad r2.xyz, r1.xyzx, -r1.wwww, v2.xyzx
  10: sample_l r2.xyzw, r2.xyzx, t4.xyzw, s0, r0.x
  11: log r0.x, r2.w
  12: mul r0.x, r0.x, cb2[3].y
  13: exp r0.x, r0.x
  14: mul r0.x, r0.x, cb2[3].x
  15: mul r2.xyz, r2.xyzx, r0.xxxx
  16: sample r3.xyzw, v1.xyxx, t1.xyzw, s3
  17: mul r2.xyz, r2.xyzx, r3.yyyy
  18: mul r3.xyz, r3.yyyy, v6.xyzx
  19: dp3 r0.x, -v2.xyzx, r1.xyzx
  20: add r1.w, r0.x, r0.x
  21: mov_sat r0.x, r0.x
  22: add r4.y, -r0.x, l(1.000000)
  23: mad r5.xyz, r1.xyzx, -r1.wwww, -v2.xyzx
  24: dp3_sat r0.x, r1.xyzx, cb1[0].xyzx
  25: mul r1.xyz, r0.xxxx, cb0[6].xyzx
  26: dp3 r4.x, r5.xyzx, cb1[0].xyzx
  27: mul r4.xy, r4.xyxx, r4.xyxx
  28: mul r0.yz, r4.xxyx, r4.xxyx
  29: mad r0.x, -cb0[12].z, cb0[2].w, cb0[2].w
  30: add r1.w, -r0.x, cb0[12].w
  31: add_sat r1.w, r1.w, l(1.000000)
  32: sample r4.xyzw, v1.xyxx, t0.xyzw, s2
  33: mad r5.xyz, cb0[8].xyzx, r4.xyzx, -cb0[2].xyzx
  34: mad r5.xyz, cb0[12].zzzz, r5.xyzx, cb0[2].xyzx
  35: add r6.xyz, r1.wwww, -r5.xyzx
  36: mad r6.xyz, r0.zzzz, r6.xyzx, r5.xyzx
  37: sample r7.xyzw, r0.ywyy, t2.xyzw, s1
  38: mul r0.y, r7.x, l(16.000000)
  39: mul r2.xyz, r2.xyzx, r6.xyzx
  40: mul r4.xyz, r4.xyzx, cb0[8].xyzx
  41: mul o0.w, r4.w, cb0[8].w
  42: mul r0.xzw, r0.xxxx, r4.xxyz
  43: mad r2.xyz, r3.xyzx, r0.xzwx, r2.xyzx
  44: mad r0.xyz, r0.yyyy, r5.xyzx, r0.xzwx
  45: mad r0.xyz, r0.xyzx, r1.xyzx, r2.xyzx
  46: sample r1.xyzw, v1.xyxx, t3.xyzw, s4
  47: mad o0.xyz, r1.xyzx, cb0[14].xyzx, r0.xyzx
  48: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "d3d11_9x " {
// Stats: 39 math, 4 textures
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "_ALPHABLEND_ON" }
SetTexture 0 [_MainTex] 2D 2
SetTexture 1 [_OcclusionMap] 2D 3
SetTexture 2 [unity_SpecCube0] CUBE 0
SetTexture 3 [unity_NHxRoughness] 2D 1
SetTexture 4 [_EmissionMap] 2D 4
ConstBuffer "$Globals" 240
Vector 32 [unity_ColorSpaceDielectricSpec]
Vector 96 [_LightColor0]
Vector 128 [_Color]
Float 200 [_Metallic]
Float 204 [_Glossiness]
Vector 224 [_EmissionColor]
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
ConstBuffer "UnityReflectionProbes" 128
Vector 48 [unity_SpecCube0_HDR]
BindCB  "$Globals" 0
BindCB  "UnityLighting" 1
BindCB  "UnityReflectionProbes" 2
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c0         cb0             2         1  ( FLT, FLT, FLT, FLT)
// c1         cb0             6         1  ( FLT, FLT, FLT, FLT)
// c2         cb0             8         1  ( FLT, FLT, FLT, FLT)
// c3         cb0            12         1  ( FLT, FLT, FLT, FLT)
// c4         cb0            14         1  ( FLT, FLT, FLT, FLT)
// c5         cb1             0         1  ( FLT, FLT, FLT, FLT)
// c6         cb2             3         1  ( FLT, FLT, FLT, FLT)
//
//
// Sampler/Resource to DX9 shader sampler mappings:
//
// Target Sampler Source Sampler  Source Resource
// -------------- --------------- ----------------
// s0             s0              t2               
// s1             s1              t3               
// s2             s2              t0               
// s3             s3              t1               
// s4             s4              t4               
//
//
// Level9 shader bytecode:
//
    ps_2_0
          def c7, 1, 0.699999988, 1.70000005, 6
          def c8, 16, 0, 0, 0
          dcl t0
          dcl_pp t1.xyz
          dcl_pp t4
          dcl_pp t5
          dcl_cube s0
          dcl_2d s1
          dcl_2d s2
          dcl_2d s3
          dcl_2d s4
   0:     mov r0.w, c7.x
   1:     add_pp r0.x, r0.w, -c3.w
   2:     mad_pp r0.y, r0.x, -c7.y, c7.z
   3:     mul_pp r0.x, r0.y, r0.x
   4:     mul_pp r1.w, r0.x, c7.w
   5:     nrm_pp r0.xyz, t4
   8:     dp3_pp r2.w, t1, r0
   9:     add_pp r2.x, r2.w, r2.w
  10:     mad_pp r1.xyz, r0, -r2.x, t1
  11:     dp3_pp r2.x, -t1, r0
  12:     add_pp r2.y, r2.x, r2.x
  13:     mov_sat_pp r2.x, r2.x
  14:     add_pp r3.y, -r2.x, c7.x
  15:     mad_pp r2.xyz, r0, -r2.y, -t1
  16:     dp3_pp r3.x, r2, c5
  17:     mul_pp r2.xy, r3, r3
  18:     mul_pp r2.xy, r2, r2
  19:     add_pp r2.z, r0.w, -c3.w
  20:     mov_pp r3.x, r2.x
  21:     mov_pp r3.y, r2.z
  22:     texldb_pp r1, r1, s0
  22:     texld_pp r4, t0, s3
  22:     texld r5, t0, s2
  22:     texld r3, r3, s1
  22:     texld r6, t0, s4
  22:     mul_pp r0.w, r1.w, c6.x
  23:     mul_pp r1.xyz, r1, r0.w
  24:     mul_pp r1.xyz, r4.y, r1
  25:     mul_pp r3.yzw, r4.y, t5.wzyx
  26:     dp3_sat_pp r1.w, r0, c5
  27:     mul_pp r0.xyz, r1.w, c1
  28:     mov r4, c0
  29:     mad_pp r0.w, c3.z, -r4.w, r4.w
  30:     add_pp r1.w, -r0.w, c3.w
  31:     add_sat_pp r1.w, r1.w, c7.x
  32:     mad_pp r7.xyz, c2, r5, -r4
  33:     mad_pp r4.xyz, c3.z, r7, r4
  34:     lrp_pp r7.xyz, r2.y, r1.w, r4
  35:     mul_pp r1.xyz, r1, r7
  36:     mul_pp r2.xyz, r5, c2
  37:     mul_pp r5.w, r5.w, c2.w
  38:     mul_pp r2.xyz, r0.w, r2
  39:     mad_pp r1.xyz, r3.wzyx, r2, r1
  40:     mul_pp r0.w, r3.x, c8.x
  41:     mad_pp r2.xyz, r0.w, r4, r2
  42:     mad_pp r0.xyz, r2, r0, r1
  43:     mad_pp r5.xyz, r6, c4, r0
  44:     mov_pp oC0, r5

// approximately 50 instruction slots used (5 texture, 45 arithmetic)
      ps_4_0
      dcl_constantbuffer cb0[15], immediateIndexed
      dcl_constantbuffer cb1[1], immediateIndexed
      dcl_constantbuffer cb2[4], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texturecube (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 8
   0: add r0.xw, -cb0[12].wwww, l(1.000000, 0.000000, 0.000000, 1.000000)
   1: mad r1.x, -r0.x, l(0.700000), l(1.700000)
   2: mul r0.x, r0.x, r1.x
   3: mul r0.x, r0.x, l(6.000000)
   4: dp3 r1.x, v5.xyzx, v5.xyzx
   5: rsq r1.x, r1.x
   6: mul r1.xyz, r1.xxxx, v5.xyzx
   7: dp3 r1.w, v2.xyzx, r1.xyzx
   8: add r1.w, r1.w, r1.w
   9: mad r2.xyz, r1.xyzx, -r1.wwww, v2.xyzx
  10: sample_b r2.xyzw, r2.xyzx, t2.xyzw, s0, r0.x
  11: mul r0.x, r2.w, cb2[3].x
  12: mul r2.xyz, r2.xyzx, r0.xxxx
  13: sample r3.xyzw, v1.xyxx, t1.xyzw, s3
  14: mul r2.xyz, r2.xyzx, r3.yyyy
  15: mul r3.xyz, r3.yyyy, v6.xyzx
  16: dp3 r0.x, -v2.xyzx, r1.xyzx
  17: add r1.w, r0.x, r0.x
  18: mov_sat r0.x, r0.x
  19: add r4.y, -r0.x, l(1.000000)
  20: mad r5.xyz, r1.xyzx, -r1.wwww, -v2.xyzx
  21: dp3_sat r0.x, r1.xyzx, cb1[0].xyzx
  22: mul r1.xyz, r0.xxxx, cb0[6].xyzx
  23: dp3 r4.x, r5.xyzx, cb1[0].xyzx
  24: mul r4.xy, r4.xyxx, r4.xyxx
  25: mul r0.yz, r4.xxyx, r4.xxyx
  26: mad r0.x, -cb0[12].z, cb0[2].w, cb0[2].w
  27: add r1.w, -r0.x, cb0[12].w
  28: add_sat r1.w, r1.w, l(1.000000)
  29: sample r4.xyzw, v1.xyxx, t0.xyzw, s2
  30: mad r5.xyz, cb0[8].xyzx, r4.xyzx, -cb0[2].xyzx
  31: mad r5.xyz, cb0[12].zzzz, r5.xyzx, cb0[2].xyzx
  32: add r6.xyz, r1.wwww, -r5.xyzx
  33: mad r6.xyz, r0.zzzz, r6.xyzx, r5.xyzx
  34: sample r7.xyzw, r0.ywyy, t3.xyzw, s1
  35: mul r0.y, r7.x, l(16.000000)
  36: mul r2.xyz, r2.xyzx, r6.xyzx
  37: mul r4.xyz, r4.xyzx, cb0[8].xyzx
  38: mul o0.w, r4.w, cb0[8].w
  39: mul r0.xzw, r0.xxxx, r4.xxyz
  40: mad r2.xyz, r3.xyzx, r0.xzwx, r2.xyzx
  41: mad r0.xyz, r0.yyyy, r5.xyzx, r0.xzwx
  42: mad r0.xyz, r0.xyzx, r1.xyzx, r2.xyzx
  43: sample r1.xyzw, v1.xyxx, t4.xyzw, s4
  44: mad o0.xyz, r1.xyzx, cb0[14].xyzx, r0.xyzx
  45: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "_ALPHABLEND_ON" }
"// shader disassembly not supported on opengl"
}
SubProgram "d3d9 " {
// Stats: 50 math, 6 textures
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "_ALPHABLEND_ON" }
Vector 4 [_Color]
Vector 7 [_EmissionColor]
Float 6 [_Glossiness]
Vector 3 [_LightColor0]
Float 5 [_Metallic]
Vector 0 [_WorldSpaceLightPos0]
Vector 2 [unity_ColorSpaceDielectricSpec]
Vector 1 [unity_SpecCube0_HDR]
SetTexture 0 [unity_SpecCube0] CUBE 0
SetTexture 1 [unity_NHxRoughness] 2D 1
SetTexture 2 [_MainTex] 2D 2
SetTexture 3 [_OcclusionMap] 2D 3
SetTexture 4 [_EmissionMap] 2D 4
SetTexture 5 [_ShadowMapTexture] 2D 5
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _Color;
//   float4 _EmissionColor;
//   sampler2D _EmissionMap;
//   float _Glossiness;
//   float4 _LightColor0;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D _OcclusionMap;
//   sampler2D _ShadowMapTexture;
//   float4 _WorldSpaceLightPos0;
//   float4 unity_ColorSpaceDielectricSpec;
//   sampler2D unity_NHxRoughness;
//   samplerCUBE unity_SpecCube0;
//   float4 unity_SpecCube0_HDR;
//
//
// Registers:
//
//   Name                           Reg   Size
//   ------------------------------ ----- ----
//   _WorldSpaceLightPos0           c0       1
//   unity_SpecCube0_HDR            c1       1
//   unity_ColorSpaceDielectricSpec c2       1
//   _LightColor0                   c3       1
//   _Color                         c4       1
//   _Metallic                      c5       1
//   _Glossiness                    c6       1
//   _EmissionColor                 c7       1
//   unity_SpecCube0                s0       1
//   unity_NHxRoughness             s1       1
//   _MainTex                       s2       1
//   _OcclusionMap                  s3       1
//   _EmissionMap                   s4       1
//   _ShadowMapTexture              s5       1
//

    ps_2_0
    def c8, 1, 0.699999988, 1.70000005, 6
    def c9, 16, 0, 0, 0
    dcl t0.xy
    dcl_pp t1.xyz
    dcl_pp t4.xyz
    dcl_pp t5.xyz
    dcl_pp t6
    dcl_cube s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    dcl_2d s5
    mov r0.w, c8.x
    add_pp r0.x, r0.w, -c6.x
    mad_pp r0.y, r0.x, -c8.y, c8.z
    mul_pp r0.x, r0.y, r0.x
    mul_pp r1.w, r0.x, c8.w
    nrm_pp r0.xyz, t4
    dp3_pp r2.w, t1, r0
    add_pp r2.x, r2.w, r2.w
    mad_pp r1.xyz, r0, -r2.x, t1
    dp3_pp r2.x, -t1, r0
    add_pp r2.y, r2.x, r2.x
    mov_sat_pp r2.x, r2.x
    add_pp r3.y, -r2.x, c8.x
    mad_pp r2.xyz, r0, -r2.y, -t1
    dp3_pp r3.x, r2, c0
    mul_pp r2.xy, r3, r3
    mul_pp r2.xy, r2, r2
    add_pp r2.z, r0.w, -c6.x
    mov_pp r3.x, r2.x
    mov_pp r3.y, r2.z
    texldb_pp r1, r1, s0
    texld_pp r4, t0, s3
    texld r5, t0, s2
    texld r3, r3, s1
    texldp_pp r6, t6, s5
    texld r7, t0, s4
    pow_pp r0.w, r1.w, c1.y
    mul_pp r0.w, r0.w, c1.x
    mul_pp r1.xyz, r1, r0.w
    mul_pp r1.xyz, r4.y, r1
    mul_pp r3.yzw, r4.y, t5.wzyx
    dp3_sat_pp r1.w, r0, c0
    mov r0, c2
    mad_pp r0.w, c5.x, -r0.w, r0.w
    add_pp r7.w, -r0.w, c6.x
    add_sat_pp r7.w, r7.w, c8.x
    mad_pp r4.xyz, c4, r5, -r0
    mad_pp r0.xyz, c5.x, r4, r0
    lrp_pp r4.xyz, r2.y, r7.w, r0
    mul_pp r1.xyz, r1, r4
    mul_pp r2.xyz, r5, c4
    mul_pp r4.w, r5.w, c4.w
    mul_pp r2.xyz, r0.w, r2
    mad_pp r1.xyz, r3.wzyx, r2, r1
    mul_pp r0.w, r3.x, c9.x
    mad_pp r0.xyz, r0.w, r0, r2
    mul_pp r2.xyz, r6.x, c3
    mul_pp r2.xyz, r1.w, r2
    mad_pp r0.xyz, r0, r2, r1
    mad_pp r4.xyz, r7, c7, r0
    mov_pp oC0, r4

// approximately 55 instruction slots used (6 texture, 49 arithmetic)
"
}
SubProgram "d3d11 " {
// Stats: 44 math, 5 textures
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "_ALPHABLEND_ON" }
SetTexture 0 [_MainTex] 2D 2
SetTexture 1 [_ShadowMapTexture] 2D 5
SetTexture 2 [_OcclusionMap] 2D 3
SetTexture 3 [unity_NHxRoughness] 2D 1
SetTexture 4 [_EmissionMap] 2D 4
SetTexture 5 [unity_SpecCube0] CUBE 0
ConstBuffer "$Globals" 240
Vector 32 [unity_ColorSpaceDielectricSpec]
Vector 96 [_LightColor0]
Vector 128 [_Color]
Float 200 [_Metallic]
Float 204 [_Glossiness]
Vector 224 [_EmissionColor]
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
ConstBuffer "UnityReflectionProbes" 128
Vector 48 [unity_SpecCube0_HDR]
BindCB  "$Globals" 0
BindCB  "UnityLighting" 1
BindCB  "UnityReflectionProbes" 2
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer cb0[15], immediateIndexed
      dcl_constantbuffer cb1[1], immediateIndexed
      dcl_constantbuffer cb2[4], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texturecube (float,float,float,float) t5
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 7
   0: add r0.xw, -cb0[12].wwww, l(1.000000, 0.000000, 0.000000, 1.000000)
   1: mad r1.x, -r0.x, l(0.700000), l(1.700000)
   2: mul r0.x, r0.x, r1.x
   3: mul r0.x, r0.x, l(6.000000)
   4: dp3 r1.x, v5.xyzx, v5.xyzx
   5: rsq r1.x, r1.x
   6: mul r1.xyz, r1.xxxx, v5.xyzx
   7: dp3 r1.w, v2.xyzx, r1.xyzx
   8: add r1.w, r1.w, r1.w
   9: mad r2.xyz, r1.xyzx, -r1.wwww, v2.xyzx
  10: sample_l r2.xyzw, r2.xyzx, t5.xyzw, s0, r0.x
  11: log r0.x, r2.w
  12: mul r0.x, r0.x, cb2[3].y
  13: exp r0.x, r0.x
  14: mul r0.x, r0.x, cb2[3].x
  15: mul r2.xyz, r2.xyzx, r0.xxxx
  16: sample r3.xyzw, v1.xyxx, t2.xyzw, s3
  17: mul r2.xyz, r2.xyzx, r3.yyyy
  18: mul r3.xyz, r3.yyyy, v6.xyzx
  19: dp3 r0.x, -v2.xyzx, r1.xyzx
  20: add r1.w, r0.x, r0.x
  21: mov_sat r0.x, r0.x
  22: add r4.y, -r0.x, l(1.000000)
  23: mad r5.xyz, r1.xyzx, -r1.wwww, -v2.xyzx
  24: dp3_sat r0.x, r1.xyzx, cb1[0].xyzx
  25: dp3 r4.x, r5.xyzx, cb1[0].xyzx
  26: mul r1.xy, r4.xyxx, r4.xyxx
  27: mul r0.yz, r1.xxyx, r1.xxyx
  28: mad r1.x, -cb0[12].z, cb0[2].w, cb0[2].w
  29: add r1.y, -r1.x, cb0[12].w
  30: add_sat r1.y, r1.y, l(1.000000)
  31: sample r4.xyzw, v1.xyxx, t0.xyzw, s2
  32: mad r5.xyz, cb0[8].xyzx, r4.xyzx, -cb0[2].xyzx
  33: mad r5.xyz, cb0[12].zzzz, r5.xyzx, cb0[2].xyzx
  34: add r1.yzw, r1.yyyy, -r5.xxyz
  35: mad r1.yzw, r0.zzzz, r1.yyzw, r5.xxyz
  36: sample r6.xyzw, r0.ywyy, t3.xyzw, s1
  37: mul r0.y, r6.x, l(16.000000)
  38: mul r1.yzw, r1.yyzw, r2.xxyz
  39: mul r2.xyz, r4.xyzx, cb0[8].xyzx
  40: mul o0.w, r4.w, cb0[8].w
  41: mul r2.xyz, r1.xxxx, r2.xyzx
  42: mad r1.xyz, r3.xyzx, r2.xyzx, r1.yzwy
  43: mad r0.yzw, r0.yyyy, r5.xxyz, r2.xxyz
  44: div r2.xy, v7.xyxx, v7.wwww
  45: sample r2.xyzw, r2.xyxx, t1.xyzw, s5
  46: mul r2.xyz, r2.xxxx, cb0[6].xyzx
  47: mul r2.xyz, r0.xxxx, r2.xyzx
  48: mad r0.xyz, r0.yzwy, r2.xyzx, r1.xyzx
  49: sample r1.xyzw, v1.xyxx, t4.xyzw, s4
  50: mad o0.xyz, r1.xyzx, cb0[14].xyzx, r0.xyzx
  51: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "d3d11_9x " {
// Stats: 41 math, 5 textures
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "_ALPHABLEND_ON" }
SetTexture 0 [_MainTex] 2D 2
SetTexture 1 [_ShadowMapTexture] 2D 5
SetTexture 2 [_OcclusionMap] 2D 3
SetTexture 3 [unity_SpecCube0] CUBE 0
SetTexture 4 [unity_NHxRoughness] 2D 1
SetTexture 5 [_EmissionMap] 2D 4
ConstBuffer "$Globals" 240
Vector 32 [unity_ColorSpaceDielectricSpec]
Vector 96 [_LightColor0]
Vector 128 [_Color]
Float 200 [_Metallic]
Float 204 [_Glossiness]
Vector 224 [_EmissionColor]
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
ConstBuffer "UnityReflectionProbes" 128
Vector 48 [unity_SpecCube0_HDR]
BindCB  "$Globals" 0
BindCB  "UnityLighting" 1
BindCB  "UnityReflectionProbes" 2
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c0         cb0             2         1  ( FLT, FLT, FLT, FLT)
// c1         cb0             6         1  ( FLT, FLT, FLT, FLT)
// c2         cb0             8         1  ( FLT, FLT, FLT, FLT)
// c3         cb0            12         1  ( FLT, FLT, FLT, FLT)
// c4         cb0            14         1  ( FLT, FLT, FLT, FLT)
// c5         cb1             0         1  ( FLT, FLT, FLT, FLT)
// c6         cb2             3         1  ( FLT, FLT, FLT, FLT)
//
//
// Sampler/Resource to DX9 shader sampler mappings:
//
// Target Sampler Source Sampler  Source Resource
// -------------- --------------- ----------------
// s0             s0              t3               
// s1             s1              t4               
// s2             s2              t0               
// s3             s3              t2               
// s4             s4              t5               
// s5             s5              t1               
//
//
// Level9 shader bytecode:
//
    ps_2_0
          def c7, 1, 0.699999988, 1.70000005, 6
          def c8, 16, 0, 0, 0
          dcl t0
          dcl_pp t1.xyz
          dcl_pp t4
          dcl_pp t5
          dcl_pp t6
          dcl_cube s0
          dcl_2d s1
          dcl_2d s2
          dcl_2d s3
          dcl_2d s4
          dcl_2d s5
   0:     mov r0.w, c7.x
   1:     add_pp r0.x, r0.w, -c3.w
   2:     mad_pp r0.y, r0.x, -c7.y, c7.z
   3:     mul_pp r0.x, r0.y, r0.x
   4:     mul_pp r1.w, r0.x, c7.w
   5:     nrm_pp r0.xyz, t4
   8:     dp3_pp r2.w, t1, r0
   9:     add_pp r2.x, r2.w, r2.w
  10:     mad_pp r1.xyz, r0, -r2.x, t1
  11:     dp3_pp r2.x, -t1, r0
  12:     add_pp r2.y, r2.x, r2.x
  13:     mov_sat_pp r2.x, r2.x
  14:     add_pp r3.y, -r2.x, c7.x
  15:     mad_pp r2.xyz, r0, -r2.y, -t1
  16:     dp3_pp r3.x, r2, c5
  17:     mul_pp r2.xy, r3, r3
  18:     mul_pp r2.xy, r2, r2
  19:     add_pp r2.z, r0.w, -c3.w
  20:     mov_pp r3.x, r2.x
  21:     mov_pp r3.y, r2.z
  22:     rcp r0.w, t6.w
  23:     mul_pp r4.xy, r0.w, t6
  24:     texldb_pp r1, r1, s0
  24:     texld_pp r5, t0, s3
  24:     texld r6, t0, s2
  24:     texld r3, r3, s1
  24:     texld_pp r4, r4, s5
  24:     texld r7, t0, s4
  24:     mul_pp r0.w, r1.w, c6.x
  25:     mul_pp r1.xyz, r1, r0.w
  26:     mul_pp r1.xyz, r5.y, r1
  27:     mul_pp r3.yzw, r5.y, t5.wzyx
  28:     dp3_sat_pp r1.w, r0, c5
  29:     mov r0, c0
  30:     mad_pp r0.w, c3.z, -r0.w, r0.w
  31:     add_pp r7.w, -r0.w, c3.w
  32:     add_sat_pp r7.w, r7.w, c7.x
  33:     mad_pp r4.yzw, c2.wzyx, r6.wzyx, -r0.wzyx
  34:     mad_pp r0.xyz, c3.z, r4.wzyx, r0
  35:     lrp_pp r4.yzw, r2.y, r7.w, r0.wzyx
  36:     mul_pp r1.xyz, r1, r4.wzyx
  37:     mul_pp r2.xyz, r6, c2
  38:     mul_pp r5.w, r6.w, c2.w
  39:     mul_pp r2.xyz, r0.w, r2
  40:     mad_pp r1.xyz, r3.wzyx, r2, r1
  41:     mul_pp r0.w, r3.x, c8.x
  42:     mad_pp r0.xyz, r0.w, r0, r2
  43:     mul_pp r2.xyz, r4.x, c1
  44:     mul_pp r2.xyz, r1.w, r2
  45:     mad_pp r0.xyz, r0, r2, r1
  46:     mad_pp r5.xyz, r7, c4, r0
  47:     mov_pp oC0, r5

// approximately 54 instruction slots used (6 texture, 48 arithmetic)
      ps_4_0
      dcl_constantbuffer cb0[15], immediateIndexed
      dcl_constantbuffer cb1[1], immediateIndexed
      dcl_constantbuffer cb2[4], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 7
   0: add r0.xw, -cb0[12].wwww, l(1.000000, 0.000000, 0.000000, 1.000000)
   1: mad r1.x, -r0.x, l(0.700000), l(1.700000)
   2: mul r0.x, r0.x, r1.x
   3: mul r0.x, r0.x, l(6.000000)
   4: dp3 r1.x, v5.xyzx, v5.xyzx
   5: rsq r1.x, r1.x
   6: mul r1.xyz, r1.xxxx, v5.xyzx
   7: dp3 r1.w, v2.xyzx, r1.xyzx
   8: add r1.w, r1.w, r1.w
   9: mad r2.xyz, r1.xyzx, -r1.wwww, v2.xyzx
  10: sample_b r2.xyzw, r2.xyzx, t3.xyzw, s0, r0.x
  11: mul r0.x, r2.w, cb2[3].x
  12: mul r2.xyz, r2.xyzx, r0.xxxx
  13: sample r3.xyzw, v1.xyxx, t2.xyzw, s3
  14: mul r2.xyz, r2.xyzx, r3.yyyy
  15: mul r3.xyz, r3.yyyy, v6.xyzx
  16: dp3 r0.x, -v2.xyzx, r1.xyzx
  17: add r1.w, r0.x, r0.x
  18: mov_sat r0.x, r0.x
  19: add r4.y, -r0.x, l(1.000000)
  20: mad r5.xyz, r1.xyzx, -r1.wwww, -v2.xyzx
  21: dp3_sat r0.x, r1.xyzx, cb1[0].xyzx
  22: dp3 r4.x, r5.xyzx, cb1[0].xyzx
  23: mul r1.xy, r4.xyxx, r4.xyxx
  24: mul r0.yz, r1.xxyx, r1.xxyx
  25: mad r1.x, -cb0[12].z, cb0[2].w, cb0[2].w
  26: add r1.y, -r1.x, cb0[12].w
  27: add_sat r1.y, r1.y, l(1.000000)
  28: sample r4.xyzw, v1.xyxx, t0.xyzw, s2
  29: mad r5.xyz, cb0[8].xyzx, r4.xyzx, -cb0[2].xyzx
  30: mad r5.xyz, cb0[12].zzzz, r5.xyzx, cb0[2].xyzx
  31: add r1.yzw, r1.yyyy, -r5.xxyz
  32: mad r1.yzw, r0.zzzz, r1.yyzw, r5.xxyz
  33: sample r6.xyzw, r0.ywyy, t4.xyzw, s1
  34: mul r0.y, r6.x, l(16.000000)
  35: mul r1.yzw, r1.yyzw, r2.xxyz
  36: mul r2.xyz, r4.xyzx, cb0[8].xyzx
  37: mul o0.w, r4.w, cb0[8].w
  38: mul r2.xyz, r1.xxxx, r2.xyzx
  39: mad r1.xyz, r3.xyzx, r2.xyzx, r1.yzwy
  40: mad r0.yzw, r0.yyyy, r5.xxyz, r2.xxyz
  41: div r2.xy, v7.xyxx, v7.wwww
  42: sample r2.xyzw, r2.xyxx, t1.xyzw, s5
  43: mul r2.xyz, r2.xxxx, cb0[6].xyzx
  44: mul r2.xyz, r0.xxxx, r2.xyzx
  45: mad r0.xyz, r0.yzwy, r2.xyzx, r1.xyzx
  46: sample r1.xyzw, v1.xyxx, t5.xyzw, s4
  47: mad o0.xyz, r1.xyzx, cb0[14].xyzx, r0.xyzx
  48: ret 
// Approximately 0 instruction slots used
"
}
}
 }


 // Stats for Vertex shader:
 //       d3d11 : 49 avg math (40..55)
 //    d3d11_9x : 49 avg math (40..55)
 //        d3d9 : 46 avg math (40..52)
 //      opengl : 32 avg math (28..40), 3 avg texture (2..5), 0 avg branch (0..1)
 // Stats for Fragment shader:
 //       d3d11 : 25 avg math (20..33), 3 avg texture (2..5)
 //    d3d11_9x : 25 avg math (20..33), 3 avg texture (2..5)
 //        d3d9 : 31 avg math (27..37), 3 avg texture (2..5)
 Pass {
  Name "FORWARD_DELTA"
  Tags { "LIGHTMODE"="ForwardAdd" "SHADOWSUPPORT"="true" "RenderType"="Opaque" "PerformanceChecks"="False" }
  ZWrite Off
  Blend [_SrcBlend] One
  GpuProgramID 443686
Program "vp" {
SubProgram "opengl " {
// Stats: 30 math, 3 textures
Keywords { "POINT" "SHADOWS_OFF" }
"#version 120

#ifdef VERTEX
uniform vec3 _WorldSpaceCameraPos;
uniform vec4 _WorldSpaceLightPos0;

uniform mat4 _Object2World;
uniform mat4 _World2Object;
uniform vec4 unity_WorldTransformParams;
uniform vec4 _MainTex_ST;
uniform vec4 _DetailAlbedoMap_ST;
uniform float _UVSec;
uniform mat4 _LightMatrix0;
attribute vec4 TANGENT;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec3 xlv_TEXCOORD5;
void main ()
{
  vec2 tmpvar_1;
  tmpvar_1 = gl_MultiTexCoord0.xy;
  vec2 tmpvar_2;
  tmpvar_2 = gl_MultiTexCoord1.xy;
  vec4 tmpvar_3;
  vec4 tmpvar_4;
  vec4 tmpvar_5;
  vec4 tmpvar_6;
  vec4 tmpvar_7;
  tmpvar_7 = (_Object2World * gl_Vertex);
  tmpvar_3 = (gl_ModelViewProjectionMatrix * gl_Vertex);
  vec4 texcoord_8;
  texcoord_8.xy = ((gl_MultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  vec2 tmpvar_9;
  if ((_UVSec == 0.0)) {
    tmpvar_9 = tmpvar_1;
  } else {
    tmpvar_9 = tmpvar_2;
  };
  texcoord_8.zw = ((tmpvar_9 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  vec4 v_10;
  v_10.x = _World2Object[0].x;
  v_10.y = _World2Object[1].x;
  v_10.z = _World2Object[2].x;
  v_10.w = _World2Object[3].x;
  vec4 v_11;
  v_11.x = _World2Object[0].y;
  v_11.y = _World2Object[1].y;
  v_11.z = _World2Object[2].y;
  v_11.w = _World2Object[3].y;
  vec4 v_12;
  v_12.x = _World2Object[0].z;
  v_12.y = _World2Object[1].z;
  v_12.z = _World2Object[2].z;
  v_12.w = _World2Object[3].z;
  vec3 tmpvar_13;
  tmpvar_13 = normalize(((
    (v_10.xyz * gl_Normal.x)
   + 
    (v_11.xyz * gl_Normal.y)
  ) + (v_12.xyz * gl_Normal.z)));
  mat3 tmpvar_14;
  tmpvar_14[0] = _Object2World[0].xyz;
  tmpvar_14[1] = _Object2World[1].xyz;
  tmpvar_14[2] = _Object2World[2].xyz;
  vec4 tmpvar_15;
  tmpvar_15.xyz = normalize((tmpvar_14 * TANGENT.xyz));
  tmpvar_15.w = TANGENT.w;
  vec3 tmpvar_16;
  vec3 tmpvar_17;
  tmpvar_16 = tmpvar_15.xyz;
  tmpvar_17 = (((tmpvar_13.yzx * tmpvar_15.zxy) - (tmpvar_13.zxy * tmpvar_15.yzx)) * (TANGENT.w * unity_WorldTransformParams.w));
  vec3 tmpvar_18;
  vec3 tmpvar_19;
  vec3 tmpvar_20;
  tmpvar_18.x = tmpvar_16.x;
  tmpvar_18.y = tmpvar_17.x;
  tmpvar_18.z = tmpvar_13.x;
  tmpvar_19.x = tmpvar_16.y;
  tmpvar_19.y = tmpvar_17.y;
  tmpvar_19.z = tmpvar_13.y;
  tmpvar_20.x = tmpvar_16.z;
  tmpvar_20.y = tmpvar_17.z;
  tmpvar_20.z = tmpvar_13.z;
  vec3 v_21;
  v_21.x = tmpvar_18.x;
  v_21.y = tmpvar_19.x;
  v_21.z = tmpvar_20.x;
  tmpvar_4.xyz = v_21;
  vec3 v_22;
  v_22.x = tmpvar_18.y;
  v_22.y = tmpvar_19.y;
  v_22.z = tmpvar_20.y;
  tmpvar_5.xyz = v_22;
  vec3 v_23;
  v_23.x = tmpvar_18.z;
  v_23.y = tmpvar_19.z;
  v_23.z = tmpvar_20.z;
  tmpvar_6.xyz = v_23;
  vec3 tmpvar_24;
  tmpvar_24 = normalize((_WorldSpaceLightPos0.xyz - (tmpvar_7.xyz * _WorldSpaceLightPos0.w)));
  tmpvar_4.w = tmpvar_24.x;
  tmpvar_5.w = tmpvar_24.y;
  tmpvar_6.w = tmpvar_24.z;
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = texcoord_8;
  xlv_TEXCOORD1 = normalize((tmpvar_7.xyz - _WorldSpaceCameraPos));
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  xlv_TEXCOORD5 = (_LightMatrix0 * (_Object2World * gl_Vertex)).xyz;
}


#endif
#ifdef FRAGMENT
uniform vec4 unity_ColorSpaceDielectricSpec;
uniform vec4 _LightColor0;
uniform sampler2D unity_NHxRoughness;
uniform vec4 _Color;
uniform sampler2D _MainTex;
uniform float _Metallic;
uniform float _Glossiness;
uniform sampler2D _LightTexture0;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec3 xlv_TEXCOORD5;
void main ()
{
  vec3 tmpvar_1;
  tmpvar_1 = (_Color.xyz * texture2D (_MainTex, xlv_TEXCOORD0.xy).xyz);
  vec3 tmpvar_2;
  tmpvar_2 = normalize(xlv_TEXCOORD2_2.xyz);
  vec3 tmpvar_3;
  tmpvar_3.x = xlv_TEXCOORD2.w;
  tmpvar_3.y = xlv_TEXCOORD2_1.w;
  tmpvar_3.z = xlv_TEXCOORD2_2.w;
  vec3 viewDir_4;
  viewDir_4 = -(xlv_TEXCOORD1);
  vec2 tmpvar_5;
  tmpvar_5.x = dot ((viewDir_4 - (2.0 * 
    (dot (tmpvar_2, viewDir_4) * tmpvar_2)
  )), tmpvar_3);
  tmpvar_5.y = (1.0 - clamp (dot (tmpvar_2, viewDir_4), 0.0, 1.0));
  vec2 tmpvar_6;
  tmpvar_6.x = ((tmpvar_5 * tmpvar_5) * (tmpvar_5 * tmpvar_5)).x;
  tmpvar_6.y = (1.0 - _Glossiness);
  vec4 tmpvar_7;
  tmpvar_7.w = 1.0;
  tmpvar_7.xyz = (((tmpvar_1 * 
    (unity_ColorSpaceDielectricSpec.w - (_Metallic * unity_ColorSpaceDielectricSpec.w))
  ) + (
    (texture2D (unity_NHxRoughness, tmpvar_6).w * 16.0)
   * 
    mix (unity_ColorSpaceDielectricSpec.xyz, tmpvar_1, vec3(_Metallic))
  )) * ((_LightColor0.xyz * texture2D (_LightTexture0, vec2(
    dot (xlv_TEXCOORD5, xlv_TEXCOORD5)
  )).w) * clamp (
    dot (tmpvar_2, tmpvar_3)
  , 0.0, 1.0)));
  vec4 xlat_varoutput_8;
  xlat_varoutput_8.xyz = tmpvar_7.xyz;
  xlat_varoutput_8.w = 1.0;
  gl_FragData[0] = xlat_varoutput_8;
}


#endif
"
}
SubProgram "d3d9 " {
// Stats: 47 math
Keywords { "POINT" "SHADOWS_OFF" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
Matrix 11 [_LightMatrix0] 3
Matrix 4 [_Object2World]
Matrix 8 [_World2Object] 3
Matrix 0 [glstate_matrix_mvp]
Vector 18 [_DetailAlbedoMap_ST]
Vector 17 [_MainTex_ST]
Float 19 [_UVSec]
Vector 14 [_WorldSpaceCameraPos]
Vector 15 [_WorldSpaceLightPos0]
Vector 16 [unity_WorldTransformParams]
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   row_major float4x4 _LightMatrix0;
//   float4 _MainTex_ST;
//   row_major float4x4 _Object2World;
//   float _UVSec;
//   row_major float4x4 _World2Object;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 glstate_matrix_mvp;
//   float4 unity_WorldTransformParams;
//
//
// Registers:
//
//   Name                       Reg   Size
//   -------------------------- ----- ----
//   glstate_matrix_mvp         c0       4
//   _Object2World              c4       4
//   _World2Object              c8       3
//   _LightMatrix0              c11      3
//   _WorldSpaceCameraPos       c14      1
//   _WorldSpaceLightPos0       c15      1
//   unity_WorldTransformParams c16      1
//   _MainTex_ST                c17      1
//   _DetailAlbedoMap_ST        c18      1
//   _UVSec                     c19      1
//

    vs_2_0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_tangent v4
    dp4 oPos.x, c0, v0
    dp4 oPos.y, c1, v0
    dp4 oPos.z, c2, v0
    dp4 oPos.w, c3, v0
    mad oT0.xy, v2, c17, c17.zwzw
    mul r0.x, c19.x, c19.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad oT0.zw, r2.xyxy, c18.xyxy, c18
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add r1.xyz, r0, -c14
    dp3 r1.w, r1, r1
    rsq r1.w, r1.w
    mul oT1.xyz, r1.w, r1
    mul r1.xyz, v1.y, c9
    mad r1.xyz, c8, v1.x, r1
    mad r1.xyz, c10, v1.z, r1
    nrm r2.xyz, r1
    dp3 r1.x, c4, v4
    dp3 r1.y, c5, v4
    dp3 r1.z, c6, v4
    nrm r3.xyz, r1
    mul r1.xyz, r2.zxyw, r3.yzxw
    mad r1.xyz, r2.yzxw, r3.zxyw, -r1
    mov oT4.xyz, r2
    mov oT2.xyz, r3
    mul r1.w, v4.w, c16.w
    mul oT3.xyz, r1.w, r1
    dp4 r0.w, c7, v0
    dp4 oT5.x, c11, r0
    dp4 oT5.y, c12, r0
    dp4 oT5.z, c13, r0
    mad r0.xyz, r0, -c15.w, c15
    nrm r1.xyz, r0
    mov oT2.w, r1.x
    mov oT3.w, r1.y
    mov oT4.w, r1.z

// approximately 46 instruction slots used
"
}
SubProgram "d3d11 " {
// Stats: 51 math
Keywords { "POINT" "SHADOWS_OFF" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
ConstBuffer "$Globals" 304
Matrix 240 [_LightMatrix0]
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
Vector 336 [unity_WorldTransformParams]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer cb0[19], immediateIndexed
      dcl_constantbuffer cb1[5], immediateIndexed
      dcl_constantbuffer cb2[1], immediateIndexed
      dcl_constantbuffer cb3[22], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: mad o0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   4: eq r0.x, cb0[13].z, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[11].xxxy, cb0[11].zzzw
   7: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  13: mad r0.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  14: dp3 r0.w, r1.xyzx, r1.xyzx
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: dp3 r0.w, r0.xyzx, r0.xyzx
  18: rsq r0.w, r0.w
  19: mul r0.xyz, r0.wwww, r0.xyzx
  20: mov o3.w, r0.x
  21: mul r1.xyz, v4.yyyy, cb3[13].xyzx
  22: mad r1.xyz, cb3[12].xyzx, v4.xxxx, r1.xyzx
  23: mad r1.xyz, cb3[14].xyzx, v4.zzzz, r1.xyzx
  24: dp3 r0.x, r1.xyzx, r1.xyzx
  25: rsq r0.x, r0.x
  26: mul r1.xyz, r0.xxxx, r1.xyzx
  27: mov o3.xyz, r1.xyzx
  28: mul r2.x, v1.x, cb3[16].x
  29: mul r2.y, v1.x, cb3[17].x
  30: mul r2.z, v1.x, cb3[18].x
  31: mul r3.x, v1.y, cb3[16].y
  32: mul r3.y, v1.y, cb3[17].y
  33: mul r3.z, v1.y, cb3[18].y
  34: add r2.xyz, r2.xyzx, r3.xyzx
  35: mul r3.x, v1.z, cb3[16].z
  36: mul r3.y, v1.z, cb3[17].z
  37: mul r3.z, v1.z, cb3[18].z
  38: add r2.xyz, r2.xyzx, r3.xyzx
  39: dp3 r0.x, r2.xyzx, r2.xyzx
  40: rsq r0.x, r0.x
  41: mul r2.xyz, r0.xxxx, r2.xyzx
  42: mul r3.xyz, r1.yzxy, r2.zxyz
  43: mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
  44: mov o5.xyz, r2.xyzx
  45: mul r0.x, v4.w, cb3[21].w
  46: mul o4.xyz, r0.xxxx, r1.xyzx
  47: mov o4.w, r0.y
  48: mov o5.w, r0.z
  49: mul r0.xyzw, v0.yyyy, cb3[13].xyzw
  50: mad r0.xyzw, cb3[12].xyzw, v0.xxxx, r0.xyzw
  51: mad r0.xyzw, cb3[14].xyzw, v0.zzzz, r0.xyzw
  52: mad r0.xyzw, cb3[15].xyzw, v0.wwww, r0.xyzw
  53: mul r1.xyz, r0.yyyy, cb0[16].xyzx
  54: mad r1.xyz, cb0[15].xyzx, r0.xxxx, r1.xyzx
  55: mad r0.xyz, cb0[17].xyzx, r0.zzzz, r1.xyzx
  56: mad o6.xyz, cb0[18].xyzx, r0.wwww, r0.xyzx
  57: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "d3d11_9x " {
// Stats: 51 math
Keywords { "POINT" "SHADOWS_OFF" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
ConstBuffer "$Globals" 304
Matrix 240 [_LightMatrix0]
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
Vector 336 [unity_WorldTransformParams]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c1         cb0            10         2  ( FLT, FLT, FLT, FLT)
// c3         cb0            13         1  ( FLT, FLT, FLT, FLT)
// c4         cb0            15         4  ( FLT, FLT, FLT, FLT)
// c8         cb1             4         1  ( FLT, FLT, FLT, FLT)
// c9         cb2             0         1  ( FLT, FLT, FLT, FLT)
// c10        cb3             0         4  ( FLT, FLT, FLT, FLT)
// c14        cb3            12         7  ( FLT, FLT, FLT, FLT)
// c21        cb3            21         1  ( FLT, FLT, FLT, FLT)
//
//
// Runtime generated constant mappings:
//
// Target Reg                               Constant Description
// ---------- --------------------------------------------------
// c0                              Vertex Shader position offset
//
//
// Level9 shader bytecode:
//
    vs_2_0
          dcl_texcoord v0
          dcl_texcoord1 v1
          dcl_texcoord2 v2
          dcl_texcoord3 v3
          dcl_texcoord4 v4
   0:     mad oT0.xy, v2, c1, c1.zwzw
   1:     mul r0.x, c3.z, c3.z
   2:     sge r0.x, -r0.x, r0.x
   3:     mov r1.xy, v2
   4:     lrp r2.xy, r0.x, r1, v3
   5:     mad oT0.zw, r2.xyxy, c2.xyxy, c2
   6:     mul r0.xyz, v0.y, c15
   7:     mad r0.xyz, c14, v0.x, r0
   8:     mad r0.xyz, c16, v0.z, r0
   9:     mad r0.xyz, c17, v0.w, r0
  10:     add r1.xyz, r0, -c8
  11:     mad r0.xyz, r0, -c9.w, c9
  12:     nrm r2.xyz, r0
  15:     dp3 r0.x, r1, r1
  16:     rsq r0.x, r0.x
  17:     mul oT1.xyz, r0.x, r1
  18:     mul r0.x, v1.x, c18.x
  19:     mul r0.y, v1.x, c19.x
  20:     mul r0.z, v1.x, c20.x
  21:     mul r1.x, v1.y, c18.y
  22:     mul r1.y, v1.y, c19.y
  23:     mul r1.z, v1.y, c20.y
  24:     add r0.xyz, r0, r1
  25:     mul r1.x, v1.z, c18.z
  26:     mul r1.y, v1.z, c19.z
  27:     mul r1.z, v1.z, c20.z
  28:     add r0.xyz, r0, r1
  29:     nrm r1.xyz, r0
  32:     mul r0.xyz, v4.y, c15
  33:     mad r0.xyz, c14, v4.x, r0
  34:     mad r0.xyz, c16, v4.z, r0
  35:     nrm r3.xyz, r0
  38:     mul r0.xyz, r1.zxyw, r3.yzxw
  39:     mad r0.xyz, r1.yzxw, r3.zxyw, -r0
  40:     mov oT4.xyz, r1
  41:     mov oT2.xyz, r3
  42:     mul r0.w, v4.w, c21.w
  43:     mul oT3.xyz, r0.w, r0
  44:     mul r0, v0.y, c15
  45:     mad r0, c14, v0.x, r0
  46:     mad r0, c16, v0.z, r0
  47:     mad r0, c17, v0.w, r0
  48:     mul r1.xyz, r0.y, c5
  49:     mad r1.xyz, c4, r0.x, r1
  50:     mad r0.xyz, c6, r0.z, r1
  51:     mad oT5.xyz, c7, r0.w, r0
  52:     mul r0, v0.y, c11
  53:     mad r0, c10, v0.x, r0
  54:     mad r0, c12, v0.z, r0
  55:     mad r0, c13, v0.w, r0
  56:     mad oPos.xy, r0.w, c0, r0
  57:     mov oPos.zw, r0
  58:     mov oT2.w, r2.x
  59:     mov oT3.w, r2.y
  60:     mov oT4.w, r2.z

// approximately 61 instruction slots used
      vs_4_0
      dcl_constantbuffer cb0[19], immediateIndexed
      dcl_constantbuffer cb1[5], immediateIndexed
      dcl_constantbuffer cb2[1], immediateIndexed
      dcl_constantbuffer cb3[22], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: mad o0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   4: eq r0.x, cb0[13].z, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[11].xxxy, cb0[11].zzzw
   7: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  13: mad r0.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  14: dp3 r0.w, r1.xyzx, r1.xyzx
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: dp3 r0.w, r0.xyzx, r0.xyzx
  18: rsq r0.w, r0.w
  19: mul r0.xyz, r0.wwww, r0.xyzx
  20: mov o3.w, r0.x
  21: mul r1.xyz, v4.yyyy, cb3[13].xyzx
  22: mad r1.xyz, cb3[12].xyzx, v4.xxxx, r1.xyzx
  23: mad r1.xyz, cb3[14].xyzx, v4.zzzz, r1.xyzx
  24: dp3 r0.x, r1.xyzx, r1.xyzx
  25: rsq r0.x, r0.x
  26: mul r1.xyz, r0.xxxx, r1.xyzx
  27: mov o3.xyz, r1.xyzx
  28: mul r2.x, v1.x, cb3[16].x
  29: mul r2.y, v1.x, cb3[17].x
  30: mul r2.z, v1.x, cb3[18].x
  31: mul r3.x, v1.y, cb3[16].y
  32: mul r3.y, v1.y, cb3[17].y
  33: mul r3.z, v1.y, cb3[18].y
  34: add r2.xyz, r2.xyzx, r3.xyzx
  35: mul r3.x, v1.z, cb3[16].z
  36: mul r3.y, v1.z, cb3[17].z
  37: mul r3.z, v1.z, cb3[18].z
  38: add r2.xyz, r2.xyzx, r3.xyzx
  39: dp3 r0.x, r2.xyzx, r2.xyzx
  40: rsq r0.x, r0.x
  41: mul r2.xyz, r0.xxxx, r2.xyzx
  42: mul r3.xyz, r1.yzxy, r2.zxyz
  43: mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
  44: mov o5.xyz, r2.xyzx
  45: mul r0.x, v4.w, cb3[21].w
  46: mul o4.xyz, r0.xxxx, r1.xyzx
  47: mov o4.w, r0.y
  48: mov o5.w, r0.z
  49: mul r0.xyzw, v0.yyyy, cb3[13].xyzw
  50: mad r0.xyzw, cb3[12].xyzw, v0.xxxx, r0.xyzw
  51: mad r0.xyzw, cb3[14].xyzw, v0.zzzz, r0.xyzw
  52: mad r0.xyzw, cb3[15].xyzw, v0.wwww, r0.xyzw
  53: mul r1.xyz, r0.yyyy, cb0[16].xyzx
  54: mad r1.xyz, cb0[15].xyzx, r0.xxxx, r1.xyzx
  55: mad r0.xyz, cb0[17].xyzx, r0.zzzz, r1.xyzx
  56: mad o6.xyz, cb0[18].xyzx, r0.wwww, r0.xyzx
  57: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
// Stats: 28 math, 2 textures
Keywords { "DIRECTIONAL" "SHADOWS_OFF" }
"#version 120

#ifdef VERTEX
uniform vec3 _WorldSpaceCameraPos;
uniform vec4 _WorldSpaceLightPos0;

uniform mat4 _Object2World;
uniform mat4 _World2Object;
uniform vec4 unity_WorldTransformParams;
uniform vec4 _MainTex_ST;
uniform vec4 _DetailAlbedoMap_ST;
uniform float _UVSec;
attribute vec4 TANGENT;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
void main ()
{
  vec2 tmpvar_1;
  tmpvar_1 = gl_MultiTexCoord0.xy;
  vec2 tmpvar_2;
  tmpvar_2 = gl_MultiTexCoord1.xy;
  vec4 tmpvar_3;
  vec4 tmpvar_4;
  vec4 tmpvar_5;
  vec4 tmpvar_6;
  vec4 tmpvar_7;
  tmpvar_7 = (_Object2World * gl_Vertex);
  tmpvar_3 = (gl_ModelViewProjectionMatrix * gl_Vertex);
  vec4 texcoord_8;
  texcoord_8.xy = ((gl_MultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  vec2 tmpvar_9;
  if ((_UVSec == 0.0)) {
    tmpvar_9 = tmpvar_1;
  } else {
    tmpvar_9 = tmpvar_2;
  };
  texcoord_8.zw = ((tmpvar_9 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  vec4 v_10;
  v_10.x = _World2Object[0].x;
  v_10.y = _World2Object[1].x;
  v_10.z = _World2Object[2].x;
  v_10.w = _World2Object[3].x;
  vec4 v_11;
  v_11.x = _World2Object[0].y;
  v_11.y = _World2Object[1].y;
  v_11.z = _World2Object[2].y;
  v_11.w = _World2Object[3].y;
  vec4 v_12;
  v_12.x = _World2Object[0].z;
  v_12.y = _World2Object[1].z;
  v_12.z = _World2Object[2].z;
  v_12.w = _World2Object[3].z;
  vec3 tmpvar_13;
  tmpvar_13 = normalize(((
    (v_10.xyz * gl_Normal.x)
   + 
    (v_11.xyz * gl_Normal.y)
  ) + (v_12.xyz * gl_Normal.z)));
  mat3 tmpvar_14;
  tmpvar_14[0] = _Object2World[0].xyz;
  tmpvar_14[1] = _Object2World[1].xyz;
  tmpvar_14[2] = _Object2World[2].xyz;
  vec4 tmpvar_15;
  tmpvar_15.xyz = normalize((tmpvar_14 * TANGENT.xyz));
  tmpvar_15.w = TANGENT.w;
  vec3 tmpvar_16;
  vec3 tmpvar_17;
  tmpvar_16 = tmpvar_15.xyz;
  tmpvar_17 = (((tmpvar_13.yzx * tmpvar_15.zxy) - (tmpvar_13.zxy * tmpvar_15.yzx)) * (TANGENT.w * unity_WorldTransformParams.w));
  vec3 tmpvar_18;
  vec3 tmpvar_19;
  vec3 tmpvar_20;
  tmpvar_18.x = tmpvar_16.x;
  tmpvar_18.y = tmpvar_17.x;
  tmpvar_18.z = tmpvar_13.x;
  tmpvar_19.x = tmpvar_16.y;
  tmpvar_19.y = tmpvar_17.y;
  tmpvar_19.z = tmpvar_13.y;
  tmpvar_20.x = tmpvar_16.z;
  tmpvar_20.y = tmpvar_17.z;
  tmpvar_20.z = tmpvar_13.z;
  vec3 v_21;
  v_21.x = tmpvar_18.x;
  v_21.y = tmpvar_19.x;
  v_21.z = tmpvar_20.x;
  tmpvar_4.xyz = v_21;
  vec3 v_22;
  v_22.x = tmpvar_18.y;
  v_22.y = tmpvar_19.y;
  v_22.z = tmpvar_20.y;
  tmpvar_5.xyz = v_22;
  vec3 v_23;
  v_23.x = tmpvar_18.z;
  v_23.y = tmpvar_19.z;
  v_23.z = tmpvar_20.z;
  tmpvar_6.xyz = v_23;
  vec3 tmpvar_24;
  tmpvar_24 = (_WorldSpaceLightPos0.xyz - (tmpvar_7.xyz * _WorldSpaceLightPos0.w));
  tmpvar_4.w = tmpvar_24.x;
  tmpvar_5.w = tmpvar_24.y;
  tmpvar_6.w = tmpvar_24.z;
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = texcoord_8;
  xlv_TEXCOORD1 = normalize((tmpvar_7.xyz - _WorldSpaceCameraPos));
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
}


#endif
#ifdef FRAGMENT
uniform vec4 unity_ColorSpaceDielectricSpec;
uniform vec4 _LightColor0;
uniform sampler2D unity_NHxRoughness;
uniform vec4 _Color;
uniform sampler2D _MainTex;
uniform float _Metallic;
uniform float _Glossiness;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
void main ()
{
  vec3 tmpvar_1;
  tmpvar_1 = (_Color.xyz * texture2D (_MainTex, xlv_TEXCOORD0.xy).xyz);
  vec3 tmpvar_2;
  tmpvar_2 = normalize(xlv_TEXCOORD2_2.xyz);
  vec3 tmpvar_3;
  tmpvar_3.x = xlv_TEXCOORD2.w;
  tmpvar_3.y = xlv_TEXCOORD2_1.w;
  tmpvar_3.z = xlv_TEXCOORD2_2.w;
  vec3 viewDir_4;
  viewDir_4 = -(xlv_TEXCOORD1);
  vec2 tmpvar_5;
  tmpvar_5.x = dot ((viewDir_4 - (2.0 * 
    (dot (tmpvar_2, viewDir_4) * tmpvar_2)
  )), tmpvar_3);
  tmpvar_5.y = (1.0 - clamp (dot (tmpvar_2, viewDir_4), 0.0, 1.0));
  vec2 tmpvar_6;
  tmpvar_6.x = ((tmpvar_5 * tmpvar_5) * (tmpvar_5 * tmpvar_5)).x;
  tmpvar_6.y = (1.0 - _Glossiness);
  vec4 tmpvar_7;
  tmpvar_7.w = 1.0;
  tmpvar_7.xyz = (((tmpvar_1 * 
    (unity_ColorSpaceDielectricSpec.w - (_Metallic * unity_ColorSpaceDielectricSpec.w))
  ) + (
    (texture2D (unity_NHxRoughness, tmpvar_6).w * 16.0)
   * 
    mix (unity_ColorSpaceDielectricSpec.xyz, tmpvar_1, vec3(_Metallic))
  )) * (_LightColor0.xyz * clamp (
    dot (tmpvar_2, tmpvar_3)
  , 0.0, 1.0)));
  vec4 xlat_varoutput_8;
  xlat_varoutput_8.xyz = tmpvar_7.xyz;
  xlat_varoutput_8.w = 1.0;
  gl_FragData[0] = xlat_varoutput_8;
}


#endif
"
}
SubProgram "d3d9 " {
// Stats: 40 math
Keywords { "DIRECTIONAL" "SHADOWS_OFF" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
Matrix 4 [_Object2World] 3
Matrix 7 [_World2Object] 3
Matrix 0 [glstate_matrix_mvp]
Vector 14 [_DetailAlbedoMap_ST]
Vector 13 [_MainTex_ST]
Float 15 [_UVSec]
Vector 10 [_WorldSpaceCameraPos]
Vector 11 [_WorldSpaceLightPos0]
Vector 12 [unity_WorldTransformParams]
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   row_major float4x4 _Object2World;
//   float _UVSec;
//   row_major float4x4 _World2Object;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 glstate_matrix_mvp;
//   float4 unity_WorldTransformParams;
//
//
// Registers:
//
//   Name                       Reg   Size
//   -------------------------- ----- ----
//   glstate_matrix_mvp         c0       4
//   _Object2World              c4       3
//   _World2Object              c7       3
//   _WorldSpaceCameraPos       c10      1
//   _WorldSpaceLightPos0       c11      1
//   unity_WorldTransformParams c12      1
//   _MainTex_ST                c13      1
//   _DetailAlbedoMap_ST        c14      1
//   _UVSec                     c15      1
//

    vs_2_0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_tangent v4
    dp4 oPos.x, c0, v0
    dp4 oPos.y, c1, v0
    dp4 oPos.z, c2, v0
    dp4 oPos.w, c3, v0
    mad oT0.xy, v2, c13, c13.zwzw
    mul r0.x, c15.x, c15.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad oT0.zw, r2.xyxy, c14.xyxy, c14
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add r1.xyz, r0, -c10
    mad r0.xyz, r0, -c11.w, c11
    dp3 r0.w, r1, r1
    rsq r0.w, r0.w
    mul oT1.xyz, r0.w, r1
    mul r1.xyz, v1.y, c8
    mad r1.xyz, c7, v1.x, r1
    mad r1.xyz, c9, v1.z, r1
    nrm r2.xyz, r1
    dp3 r1.x, c4, v4
    dp3 r1.y, c5, v4
    dp3 r1.z, c6, v4
    nrm r3.xyz, r1
    mul r1.xyz, r2.zxyw, r3.yzxw
    mad r1.xyz, r2.yzxw, r3.zxyw, -r1
    mov oT4.xyz, r2
    mov oT2.xyz, r3
    mul r0.w, v4.w, c12.w
    mul oT3.xyz, r0.w, r1
    mov oT2.w, r0.x
    mov oT3.w, r0.y
    mov oT4.w, r0.z

// approximately 39 instruction slots used
"
}
SubProgram "d3d11 " {
// Stats: 40 math
Keywords { "DIRECTIONAL" "SHADOWS_OFF" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
ConstBuffer "$Globals" 240
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
Vector 336 [unity_WorldTransformParams]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer cb0[14], immediateIndexed
      dcl_constantbuffer cb1[5], immediateIndexed
      dcl_constantbuffer cb2[1], immediateIndexed
      dcl_constantbuffer cb3[22], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: mad o0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   4: eq r0.x, cb0[13].z, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[11].xxxy, cb0[11].zzzw
   7: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  13: mad r0.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  14: dp3 r0.w, r1.xyzx, r1.xyzx
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mov o3.w, r0.x
  18: mul r1.xyz, v4.yyyy, cb3[13].xyzx
  19: mad r1.xyz, cb3[12].xyzx, v4.xxxx, r1.xyzx
  20: mad r1.xyz, cb3[14].xyzx, v4.zzzz, r1.xyzx
  21: dp3 r0.x, r1.xyzx, r1.xyzx
  22: rsq r0.x, r0.x
  23: mul r1.xyz, r0.xxxx, r1.xyzx
  24: mov o3.xyz, r1.xyzx
  25: mul r2.x, v1.x, cb3[16].x
  26: mul r2.y, v1.x, cb3[17].x
  27: mul r2.z, v1.x, cb3[18].x
  28: mul r3.x, v1.y, cb3[16].y
  29: mul r3.y, v1.y, cb3[17].y
  30: mul r3.z, v1.y, cb3[18].y
  31: add r2.xyz, r2.xyzx, r3.xyzx
  32: mul r3.x, v1.z, cb3[16].z
  33: mul r3.y, v1.z, cb3[17].z
  34: mul r3.z, v1.z, cb3[18].z
  35: add r2.xyz, r2.xyzx, r3.xyzx
  36: dp3 r0.x, r2.xyzx, r2.xyzx
  37: rsq r0.x, r0.x
  38: mul r2.xyz, r0.xxxx, r2.xyzx
  39: mul r3.xyz, r1.yzxy, r2.zxyz
  40: mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
  41: mov o5.xyz, r2.xyzx
  42: mul r0.x, v4.w, cb3[21].w
  43: mul o4.xyz, r0.xxxx, r1.xyzx
  44: mov o4.w, r0.y
  45: mov o5.w, r0.z
  46: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "d3d11_9x " {
// Stats: 40 math
Keywords { "DIRECTIONAL" "SHADOWS_OFF" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
ConstBuffer "$Globals" 240
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
Vector 336 [unity_WorldTransformParams]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c1         cb0            10         2  ( FLT, FLT, FLT, FLT)
// c3         cb0            13         1  ( FLT, FLT, FLT, FLT)
// c4         cb1             4         1  ( FLT, FLT, FLT, FLT)
// c5         cb2             0         1  ( FLT, FLT, FLT, FLT)
// c6         cb3             0         4  ( FLT, FLT, FLT, FLT)
// c10        cb3            12         7  ( FLT, FLT, FLT, FLT)
// c17        cb3            21         1  ( FLT, FLT, FLT, FLT)
//
//
// Runtime generated constant mappings:
//
// Target Reg                               Constant Description
// ---------- --------------------------------------------------
// c0                              Vertex Shader position offset
//
//
// Level9 shader bytecode:
//
    vs_2_0
          dcl_texcoord v0
          dcl_texcoord1 v1
          dcl_texcoord2 v2
          dcl_texcoord3 v3
          dcl_texcoord4 v4
   0:     mad oT0.xy, v2, c1, c1.zwzw
   1:     mul r0.x, c3.z, c3.z
   2:     sge r0.x, -r0.x, r0.x
   3:     mov r1.xy, v2
   4:     lrp r2.xy, r0.x, r1, v3
   5:     mad oT0.zw, r2.xyxy, c2.xyxy, c2
   6:     mul r0.xyz, v0.y, c11
   7:     mad r0.xyz, c10, v0.x, r0
   8:     mad r0.xyz, c12, v0.z, r0
   9:     mad r0.xyz, c13, v0.w, r0
  10:     add r1.xyz, r0, -c4
  11:     mad r0.xyz, r0, -c5.w, c5
  12:     dp3 r0.w, r1, r1
  13:     rsq r0.w, r0.w
  14:     mul oT1.xyz, r0.w, r1
  15:     mul r1.x, v1.x, c14.x
  16:     mul r1.y, v1.x, c15.x
  17:     mul r1.z, v1.x, c16.x
  18:     mul r2.x, v1.y, c14.y
  19:     mul r2.y, v1.y, c15.y
  20:     mul r2.z, v1.y, c16.y
  21:     add r1.xyz, r1, r2
  22:     mul r2.x, v1.z, c14.z
  23:     mul r2.y, v1.z, c15.z
  24:     mul r2.z, v1.z, c16.z
  25:     add r1.xyz, r1, r2
  26:     nrm r2.xyz, r1
  29:     mul r1.xyz, v4.y, c11
  30:     mad r1.xyz, c10, v4.x, r1
  31:     mad r1.xyz, c12, v4.z, r1
  32:     nrm r3.xyz, r1
  35:     mul r1.xyz, r2.zxyw, r3.yzxw
  36:     mad r1.xyz, r2.yzxw, r3.zxyw, -r1
  37:     mov oT4.xyz, r2
  38:     mov oT2.xyz, r3
  39:     mul r0.w, v4.w, c17.w
  40:     mul oT3.xyz, r0.w, r1
  41:     mul r1, v0.y, c7
  42:     mad r1, c6, v0.x, r1
  43:     mad r1, c8, v0.z, r1
  44:     mad r1, c9, v0.w, r1
  45:     mad oPos.xy, r1.w, c0, r1
  46:     mov oPos.zw, r1
  47:     mov oT2.w, r0.x
  48:     mov oT3.w, r0.y
  49:     mov oT4.w, r0.z

// approximately 50 instruction slots used
      vs_4_0
      dcl_constantbuffer cb0[14], immediateIndexed
      dcl_constantbuffer cb1[5], immediateIndexed
      dcl_constantbuffer cb2[1], immediateIndexed
      dcl_constantbuffer cb3[22], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: mad o0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   4: eq r0.x, cb0[13].z, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[11].xxxy, cb0[11].zzzw
   7: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  13: mad r0.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  14: dp3 r0.w, r1.xyzx, r1.xyzx
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mov o3.w, r0.x
  18: mul r1.xyz, v4.yyyy, cb3[13].xyzx
  19: mad r1.xyz, cb3[12].xyzx, v4.xxxx, r1.xyzx
  20: mad r1.xyz, cb3[14].xyzx, v4.zzzz, r1.xyzx
  21: dp3 r0.x, r1.xyzx, r1.xyzx
  22: rsq r0.x, r0.x
  23: mul r1.xyz, r0.xxxx, r1.xyzx
  24: mov o3.xyz, r1.xyzx
  25: mul r2.x, v1.x, cb3[16].x
  26: mul r2.y, v1.x, cb3[17].x
  27: mul r2.z, v1.x, cb3[18].x
  28: mul r3.x, v1.y, cb3[16].y
  29: mul r3.y, v1.y, cb3[17].y
  30: mul r3.z, v1.y, cb3[18].y
  31: add r2.xyz, r2.xyzx, r3.xyzx
  32: mul r3.x, v1.z, cb3[16].z
  33: mul r3.y, v1.z, cb3[17].z
  34: mul r3.z, v1.z, cb3[18].z
  35: add r2.xyz, r2.xyzx, r3.xyzx
  36: dp3 r0.x, r2.xyzx, r2.xyzx
  37: rsq r0.x, r0.x
  38: mul r2.xyz, r0.xxxx, r2.xyzx
  39: mul r3.xyz, r1.yzxy, r2.zxyz
  40: mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
  41: mov o5.xyz, r2.xyzx
  42: mul r0.x, v4.w, cb3[21].w
  43: mul o4.xyz, r0.xxxx, r1.xyzx
  44: mov o4.w, r0.y
  45: mov o5.w, r0.z
  46: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
// Stats: 36 math, 4 textures
Keywords { "SPOT" "SHADOWS_OFF" }
"#version 120

#ifdef VERTEX
uniform vec3 _WorldSpaceCameraPos;
uniform vec4 _WorldSpaceLightPos0;

uniform mat4 _Object2World;
uniform mat4 _World2Object;
uniform vec4 unity_WorldTransformParams;
uniform vec4 _MainTex_ST;
uniform vec4 _DetailAlbedoMap_ST;
uniform float _UVSec;
uniform mat4 _LightMatrix0;
attribute vec4 TANGENT;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
void main ()
{
  vec2 tmpvar_1;
  tmpvar_1 = gl_MultiTexCoord0.xy;
  vec2 tmpvar_2;
  tmpvar_2 = gl_MultiTexCoord1.xy;
  vec4 tmpvar_3;
  vec4 tmpvar_4;
  vec4 tmpvar_5;
  vec4 tmpvar_6;
  vec4 tmpvar_7;
  tmpvar_7 = (_Object2World * gl_Vertex);
  tmpvar_3 = (gl_ModelViewProjectionMatrix * gl_Vertex);
  vec4 texcoord_8;
  texcoord_8.xy = ((gl_MultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  vec2 tmpvar_9;
  if ((_UVSec == 0.0)) {
    tmpvar_9 = tmpvar_1;
  } else {
    tmpvar_9 = tmpvar_2;
  };
  texcoord_8.zw = ((tmpvar_9 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  vec4 v_10;
  v_10.x = _World2Object[0].x;
  v_10.y = _World2Object[1].x;
  v_10.z = _World2Object[2].x;
  v_10.w = _World2Object[3].x;
  vec4 v_11;
  v_11.x = _World2Object[0].y;
  v_11.y = _World2Object[1].y;
  v_11.z = _World2Object[2].y;
  v_11.w = _World2Object[3].y;
  vec4 v_12;
  v_12.x = _World2Object[0].z;
  v_12.y = _World2Object[1].z;
  v_12.z = _World2Object[2].z;
  v_12.w = _World2Object[3].z;
  vec3 tmpvar_13;
  tmpvar_13 = normalize(((
    (v_10.xyz * gl_Normal.x)
   + 
    (v_11.xyz * gl_Normal.y)
  ) + (v_12.xyz * gl_Normal.z)));
  mat3 tmpvar_14;
  tmpvar_14[0] = _Object2World[0].xyz;
  tmpvar_14[1] = _Object2World[1].xyz;
  tmpvar_14[2] = _Object2World[2].xyz;
  vec4 tmpvar_15;
  tmpvar_15.xyz = normalize((tmpvar_14 * TANGENT.xyz));
  tmpvar_15.w = TANGENT.w;
  vec3 tmpvar_16;
  vec3 tmpvar_17;
  tmpvar_16 = tmpvar_15.xyz;
  tmpvar_17 = (((tmpvar_13.yzx * tmpvar_15.zxy) - (tmpvar_13.zxy * tmpvar_15.yzx)) * (TANGENT.w * unity_WorldTransformParams.w));
  vec3 tmpvar_18;
  vec3 tmpvar_19;
  vec3 tmpvar_20;
  tmpvar_18.x = tmpvar_16.x;
  tmpvar_18.y = tmpvar_17.x;
  tmpvar_18.z = tmpvar_13.x;
  tmpvar_19.x = tmpvar_16.y;
  tmpvar_19.y = tmpvar_17.y;
  tmpvar_19.z = tmpvar_13.y;
  tmpvar_20.x = tmpvar_16.z;
  tmpvar_20.y = tmpvar_17.z;
  tmpvar_20.z = tmpvar_13.z;
  vec3 v_21;
  v_21.x = tmpvar_18.x;
  v_21.y = tmpvar_19.x;
  v_21.z = tmpvar_20.x;
  tmpvar_4.xyz = v_21;
  vec3 v_22;
  v_22.x = tmpvar_18.y;
  v_22.y = tmpvar_19.y;
  v_22.z = tmpvar_20.y;
  tmpvar_5.xyz = v_22;
  vec3 v_23;
  v_23.x = tmpvar_18.z;
  v_23.y = tmpvar_19.z;
  v_23.z = tmpvar_20.z;
  tmpvar_6.xyz = v_23;
  vec3 tmpvar_24;
  tmpvar_24 = normalize((_WorldSpaceLightPos0.xyz - (tmpvar_7.xyz * _WorldSpaceLightPos0.w)));
  tmpvar_4.w = tmpvar_24.x;
  tmpvar_5.w = tmpvar_24.y;
  tmpvar_6.w = tmpvar_24.z;
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = texcoord_8;
  xlv_TEXCOORD1 = normalize((tmpvar_7.xyz - _WorldSpaceCameraPos));
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  xlv_TEXCOORD5 = (_LightMatrix0 * (_Object2World * gl_Vertex));
}


#endif
#ifdef FRAGMENT
uniform vec4 unity_ColorSpaceDielectricSpec;
uniform vec4 _LightColor0;
uniform sampler2D unity_NHxRoughness;
uniform vec4 _Color;
uniform sampler2D _MainTex;
uniform float _Metallic;
uniform float _Glossiness;
uniform sampler2D _LightTexture0;
uniform sampler2D _LightTextureB0;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
void main ()
{
  vec3 tmpvar_1;
  tmpvar_1 = (_Color.xyz * texture2D (_MainTex, xlv_TEXCOORD0.xy).xyz);
  vec3 tmpvar_2;
  tmpvar_2 = normalize(xlv_TEXCOORD2_2.xyz);
  vec3 tmpvar_3;
  tmpvar_3.x = xlv_TEXCOORD2.w;
  tmpvar_3.y = xlv_TEXCOORD2_1.w;
  tmpvar_3.z = xlv_TEXCOORD2_2.w;
  vec3 viewDir_4;
  viewDir_4 = -(xlv_TEXCOORD1);
  vec2 tmpvar_5;
  tmpvar_5.x = dot ((viewDir_4 - (2.0 * 
    (dot (tmpvar_2, viewDir_4) * tmpvar_2)
  )), tmpvar_3);
  tmpvar_5.y = (1.0 - clamp (dot (tmpvar_2, viewDir_4), 0.0, 1.0));
  vec2 tmpvar_6;
  tmpvar_6.x = ((tmpvar_5 * tmpvar_5) * (tmpvar_5 * tmpvar_5)).x;
  tmpvar_6.y = (1.0 - _Glossiness);
  vec4 tmpvar_7;
  tmpvar_7.w = 1.0;
  tmpvar_7.xyz = (((tmpvar_1 * 
    (unity_ColorSpaceDielectricSpec.w - (_Metallic * unity_ColorSpaceDielectricSpec.w))
  ) + (
    (texture2D (unity_NHxRoughness, tmpvar_6).w * 16.0)
   * 
    mix (unity_ColorSpaceDielectricSpec.xyz, tmpvar_1, vec3(_Metallic))
  )) * ((_LightColor0.xyz * 
    ((float((xlv_TEXCOORD5.z > 0.0)) * texture2D (_LightTexture0, ((xlv_TEXCOORD5.xy / xlv_TEXCOORD5.w) + 0.5)).w) * texture2D (_LightTextureB0, vec2(dot (xlv_TEXCOORD5.xyz, xlv_TEXCOORD5.xyz))).w)
  ) * clamp (
    dot (tmpvar_2, tmpvar_3)
  , 0.0, 1.0)));
  vec4 xlat_varoutput_8;
  xlat_varoutput_8.xyz = tmpvar_7.xyz;
  xlat_varoutput_8.w = 1.0;
  gl_FragData[0] = xlat_varoutput_8;
}


#endif
"
}
SubProgram "d3d9 " {
// Stats: 48 math
Keywords { "SPOT" "SHADOWS_OFF" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
Matrix 8 [_LightMatrix0]
Matrix 4 [_Object2World]
Matrix 12 [_World2Object] 3
Matrix 0 [glstate_matrix_mvp]
Vector 19 [_DetailAlbedoMap_ST]
Vector 18 [_MainTex_ST]
Float 20 [_UVSec]
Vector 15 [_WorldSpaceCameraPos]
Vector 16 [_WorldSpaceLightPos0]
Vector 17 [unity_WorldTransformParams]
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   row_major float4x4 _LightMatrix0;
//   float4 _MainTex_ST;
//   row_major float4x4 _Object2World;
//   float _UVSec;
//   row_major float4x4 _World2Object;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 glstate_matrix_mvp;
//   float4 unity_WorldTransformParams;
//
//
// Registers:
//
//   Name                       Reg   Size
//   -------------------------- ----- ----
//   glstate_matrix_mvp         c0       4
//   _Object2World              c4       4
//   _LightMatrix0              c8       4
//   _World2Object              c12      3
//   _WorldSpaceCameraPos       c15      1
//   _WorldSpaceLightPos0       c16      1
//   unity_WorldTransformParams c17      1
//   _MainTex_ST                c18      1
//   _DetailAlbedoMap_ST        c19      1
//   _UVSec                     c20      1
//

    vs_2_0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_tangent v4
    dp4 oPos.x, c0, v0
    dp4 oPos.y, c1, v0
    dp4 oPos.z, c2, v0
    dp4 oPos.w, c3, v0
    mad oT0.xy, v2, c18, c18.zwzw
    mul r0.x, c20.x, c20.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad oT0.zw, r2.xyxy, c19.xyxy, c19
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add r1.xyz, r0, -c15
    dp3 r1.w, r1, r1
    rsq r1.w, r1.w
    mul oT1.xyz, r1.w, r1
    mul r1.xyz, v1.y, c13
    mad r1.xyz, c12, v1.x, r1
    mad r1.xyz, c14, v1.z, r1
    nrm r2.xyz, r1
    dp3 r1.x, c4, v4
    dp3 r1.y, c5, v4
    dp3 r1.z, c6, v4
    nrm r3.xyz, r1
    mul r1.xyz, r2.zxyw, r3.yzxw
    mad r1.xyz, r2.yzxw, r3.zxyw, -r1
    mov oT4.xyz, r2
    mov oT2.xyz, r3
    mul r1.w, v4.w, c17.w
    mul oT3.xyz, r1.w, r1
    dp4 r0.w, c7, v0
    dp4 oT5.x, c8, r0
    dp4 oT5.y, c9, r0
    dp4 oT5.z, c10, r0
    dp4 oT5.w, c11, r0
    mad r0.xyz, r0, -c16.w, c16
    nrm r1.xyz, r0
    mov oT2.w, r1.x
    mov oT3.w, r1.y
    mov oT4.w, r1.z

// approximately 47 instruction slots used
"
}
SubProgram "d3d11 " {
// Stats: 51 math
Keywords { "SPOT" "SHADOWS_OFF" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
ConstBuffer "$Globals" 304
Matrix 240 [_LightMatrix0]
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
Vector 336 [unity_WorldTransformParams]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer cb0[19], immediateIndexed
      dcl_constantbuffer cb1[5], immediateIndexed
      dcl_constantbuffer cb2[1], immediateIndexed
      dcl_constantbuffer cb3[22], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: mad o0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   4: eq r0.x, cb0[13].z, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[11].xxxy, cb0[11].zzzw
   7: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  13: mad r0.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  14: dp3 r0.w, r1.xyzx, r1.xyzx
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: dp3 r0.w, r0.xyzx, r0.xyzx
  18: rsq r0.w, r0.w
  19: mul r0.xyz, r0.wwww, r0.xyzx
  20: mov o3.w, r0.x
  21: mul r1.xyz, v4.yyyy, cb3[13].xyzx
  22: mad r1.xyz, cb3[12].xyzx, v4.xxxx, r1.xyzx
  23: mad r1.xyz, cb3[14].xyzx, v4.zzzz, r1.xyzx
  24: dp3 r0.x, r1.xyzx, r1.xyzx
  25: rsq r0.x, r0.x
  26: mul r1.xyz, r0.xxxx, r1.xyzx
  27: mov o3.xyz, r1.xyzx
  28: mul r2.x, v1.x, cb3[16].x
  29: mul r2.y, v1.x, cb3[17].x
  30: mul r2.z, v1.x, cb3[18].x
  31: mul r3.x, v1.y, cb3[16].y
  32: mul r3.y, v1.y, cb3[17].y
  33: mul r3.z, v1.y, cb3[18].y
  34: add r2.xyz, r2.xyzx, r3.xyzx
  35: mul r3.x, v1.z, cb3[16].z
  36: mul r3.y, v1.z, cb3[17].z
  37: mul r3.z, v1.z, cb3[18].z
  38: add r2.xyz, r2.xyzx, r3.xyzx
  39: dp3 r0.x, r2.xyzx, r2.xyzx
  40: rsq r0.x, r0.x
  41: mul r2.xyz, r0.xxxx, r2.xyzx
  42: mul r3.xyz, r1.yzxy, r2.zxyz
  43: mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
  44: mov o5.xyz, r2.xyzx
  45: mul r0.x, v4.w, cb3[21].w
  46: mul o4.xyz, r0.xxxx, r1.xyzx
  47: mov o4.w, r0.y
  48: mov o5.w, r0.z
  49: mul r0.xyzw, v0.yyyy, cb3[13].xyzw
  50: mad r0.xyzw, cb3[12].xyzw, v0.xxxx, r0.xyzw
  51: mad r0.xyzw, cb3[14].xyzw, v0.zzzz, r0.xyzw
  52: mad r0.xyzw, cb3[15].xyzw, v0.wwww, r0.xyzw
  53: mul r1.xyzw, r0.yyyy, cb0[16].xyzw
  54: mad r1.xyzw, cb0[15].xyzw, r0.xxxx, r1.xyzw
  55: mad r1.xyzw, cb0[17].xyzw, r0.zzzz, r1.xyzw
  56: mad o6.xyzw, cb0[18].xyzw, r0.wwww, r1.xyzw
  57: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "d3d11_9x " {
// Stats: 51 math
Keywords { "SPOT" "SHADOWS_OFF" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
ConstBuffer "$Globals" 304
Matrix 240 [_LightMatrix0]
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
Vector 336 [unity_WorldTransformParams]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c1         cb0            10         2  ( FLT, FLT, FLT, FLT)
// c3         cb0            13         1  ( FLT, FLT, FLT, FLT)
// c4         cb0            15         4  ( FLT, FLT, FLT, FLT)
// c8         cb1             4         1  ( FLT, FLT, FLT, FLT)
// c9         cb2             0         1  ( FLT, FLT, FLT, FLT)
// c10        cb3             0         4  ( FLT, FLT, FLT, FLT)
// c14        cb3            12         7  ( FLT, FLT, FLT, FLT)
// c21        cb3            21         1  ( FLT, FLT, FLT, FLT)
//
//
// Runtime generated constant mappings:
//
// Target Reg                               Constant Description
// ---------- --------------------------------------------------
// c0                              Vertex Shader position offset
//
//
// Level9 shader bytecode:
//
    vs_2_0
          dcl_texcoord v0
          dcl_texcoord1 v1
          dcl_texcoord2 v2
          dcl_texcoord3 v3
          dcl_texcoord4 v4
   0:     mad oT0.xy, v2, c1, c1.zwzw
   1:     mul r0.x, c3.z, c3.z
   2:     sge r0.x, -r0.x, r0.x
   3:     mov r1.xy, v2
   4:     lrp r2.xy, r0.x, r1, v3
   5:     mad oT0.zw, r2.xyxy, c2.xyxy, c2
   6:     mul r0.xyz, v0.y, c15
   7:     mad r0.xyz, c14, v0.x, r0
   8:     mad r0.xyz, c16, v0.z, r0
   9:     mad r0.xyz, c17, v0.w, r0
  10:     add r1.xyz, r0, -c8
  11:     mad r0.xyz, r0, -c9.w, c9
  12:     nrm r2.xyz, r0
  15:     dp3 r0.x, r1, r1
  16:     rsq r0.x, r0.x
  17:     mul oT1.xyz, r0.x, r1
  18:     mul r0.x, v1.x, c18.x
  19:     mul r0.y, v1.x, c19.x
  20:     mul r0.z, v1.x, c20.x
  21:     mul r1.x, v1.y, c18.y
  22:     mul r1.y, v1.y, c19.y
  23:     mul r1.z, v1.y, c20.y
  24:     add r0.xyz, r0, r1
  25:     mul r1.x, v1.z, c18.z
  26:     mul r1.y, v1.z, c19.z
  27:     mul r1.z, v1.z, c20.z
  28:     add r0.xyz, r0, r1
  29:     nrm r1.xyz, r0
  32:     mul r0.xyz, v4.y, c15
  33:     mad r0.xyz, c14, v4.x, r0
  34:     mad r0.xyz, c16, v4.z, r0
  35:     nrm r3.xyz, r0
  38:     mul r0.xyz, r1.zxyw, r3.yzxw
  39:     mad r0.xyz, r1.yzxw, r3.zxyw, -r0
  40:     mov oT4.xyz, r1
  41:     mov oT2.xyz, r3
  42:     mul r0.w, v4.w, c21.w
  43:     mul oT3.xyz, r0.w, r0
  44:     mul r0, v0.y, c15
  45:     mad r0, c14, v0.x, r0
  46:     mad r0, c16, v0.z, r0
  47:     mad r0, c17, v0.w, r0
  48:     mul r1, r0.y, c5
  49:     mad r1, c4, r0.x, r1
  50:     mad r1, c6, r0.z, r1
  51:     mad oT5, c7, r0.w, r1
  52:     mul r0, v0.y, c11
  53:     mad r0, c10, v0.x, r0
  54:     mad r0, c12, v0.z, r0
  55:     mad r0, c13, v0.w, r0
  56:     mad oPos.xy, r0.w, c0, r0
  57:     mov oPos.zw, r0
  58:     mov oT2.w, r2.x
  59:     mov oT3.w, r2.y
  60:     mov oT4.w, r2.z

// approximately 61 instruction slots used
      vs_4_0
      dcl_constantbuffer cb0[19], immediateIndexed
      dcl_constantbuffer cb1[5], immediateIndexed
      dcl_constantbuffer cb2[1], immediateIndexed
      dcl_constantbuffer cb3[22], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: mad o0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   4: eq r0.x, cb0[13].z, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[11].xxxy, cb0[11].zzzw
   7: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  13: mad r0.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  14: dp3 r0.w, r1.xyzx, r1.xyzx
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: dp3 r0.w, r0.xyzx, r0.xyzx
  18: rsq r0.w, r0.w
  19: mul r0.xyz, r0.wwww, r0.xyzx
  20: mov o3.w, r0.x
  21: mul r1.xyz, v4.yyyy, cb3[13].xyzx
  22: mad r1.xyz, cb3[12].xyzx, v4.xxxx, r1.xyzx
  23: mad r1.xyz, cb3[14].xyzx, v4.zzzz, r1.xyzx
  24: dp3 r0.x, r1.xyzx, r1.xyzx
  25: rsq r0.x, r0.x
  26: mul r1.xyz, r0.xxxx, r1.xyzx
  27: mov o3.xyz, r1.xyzx
  28: mul r2.x, v1.x, cb3[16].x
  29: mul r2.y, v1.x, cb3[17].x
  30: mul r2.z, v1.x, cb3[18].x
  31: mul r3.x, v1.y, cb3[16].y
  32: mul r3.y, v1.y, cb3[17].y
  33: mul r3.z, v1.y, cb3[18].y
  34: add r2.xyz, r2.xyzx, r3.xyzx
  35: mul r3.x, v1.z, cb3[16].z
  36: mul r3.y, v1.z, cb3[17].z
  37: mul r3.z, v1.z, cb3[18].z
  38: add r2.xyz, r2.xyzx, r3.xyzx
  39: dp3 r0.x, r2.xyzx, r2.xyzx
  40: rsq r0.x, r0.x
  41: mul r2.xyz, r0.xxxx, r2.xyzx
  42: mul r3.xyz, r1.yzxy, r2.zxyz
  43: mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
  44: mov o5.xyz, r2.xyzx
  45: mul r0.x, v4.w, cb3[21].w
  46: mul o4.xyz, r0.xxxx, r1.xyzx
  47: mov o4.w, r0.y
  48: mov o5.w, r0.z
  49: mul r0.xyzw, v0.yyyy, cb3[13].xyzw
  50: mad r0.xyzw, cb3[12].xyzw, v0.xxxx, r0.xyzw
  51: mad r0.xyzw, cb3[14].xyzw, v0.zzzz, r0.xyzw
  52: mad r0.xyzw, cb3[15].xyzw, v0.wwww, r0.xyzw
  53: mul r1.xyzw, r0.yyyy, cb0[16].xyzw
  54: mad r1.xyzw, cb0[15].xyzw, r0.xxxx, r1.xyzw
  55: mad r1.xyzw, cb0[17].xyzw, r0.zzzz, r1.xyzw
  56: mad o6.xyzw, cb0[18].xyzw, r0.wwww, r1.xyzw
  57: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
// Stats: 31 math, 4 textures
Keywords { "POINT_COOKIE" "SHADOWS_OFF" }
"#version 120

#ifdef VERTEX
uniform vec3 _WorldSpaceCameraPos;
uniform vec4 _WorldSpaceLightPos0;

uniform mat4 _Object2World;
uniform mat4 _World2Object;
uniform vec4 unity_WorldTransformParams;
uniform vec4 _MainTex_ST;
uniform vec4 _DetailAlbedoMap_ST;
uniform float _UVSec;
uniform mat4 _LightMatrix0;
attribute vec4 TANGENT;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec3 xlv_TEXCOORD5;
void main ()
{
  vec2 tmpvar_1;
  tmpvar_1 = gl_MultiTexCoord0.xy;
  vec2 tmpvar_2;
  tmpvar_2 = gl_MultiTexCoord1.xy;
  vec4 tmpvar_3;
  vec4 tmpvar_4;
  vec4 tmpvar_5;
  vec4 tmpvar_6;
  vec4 tmpvar_7;
  tmpvar_7 = (_Object2World * gl_Vertex);
  tmpvar_3 = (gl_ModelViewProjectionMatrix * gl_Vertex);
  vec4 texcoord_8;
  texcoord_8.xy = ((gl_MultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  vec2 tmpvar_9;
  if ((_UVSec == 0.0)) {
    tmpvar_9 = tmpvar_1;
  } else {
    tmpvar_9 = tmpvar_2;
  };
  texcoord_8.zw = ((tmpvar_9 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  vec4 v_10;
  v_10.x = _World2Object[0].x;
  v_10.y = _World2Object[1].x;
  v_10.z = _World2Object[2].x;
  v_10.w = _World2Object[3].x;
  vec4 v_11;
  v_11.x = _World2Object[0].y;
  v_11.y = _World2Object[1].y;
  v_11.z = _World2Object[2].y;
  v_11.w = _World2Object[3].y;
  vec4 v_12;
  v_12.x = _World2Object[0].z;
  v_12.y = _World2Object[1].z;
  v_12.z = _World2Object[2].z;
  v_12.w = _World2Object[3].z;
  vec3 tmpvar_13;
  tmpvar_13 = normalize(((
    (v_10.xyz * gl_Normal.x)
   + 
    (v_11.xyz * gl_Normal.y)
  ) + (v_12.xyz * gl_Normal.z)));
  mat3 tmpvar_14;
  tmpvar_14[0] = _Object2World[0].xyz;
  tmpvar_14[1] = _Object2World[1].xyz;
  tmpvar_14[2] = _Object2World[2].xyz;
  vec4 tmpvar_15;
  tmpvar_15.xyz = normalize((tmpvar_14 * TANGENT.xyz));
  tmpvar_15.w = TANGENT.w;
  vec3 tmpvar_16;
  vec3 tmpvar_17;
  tmpvar_16 = tmpvar_15.xyz;
  tmpvar_17 = (((tmpvar_13.yzx * tmpvar_15.zxy) - (tmpvar_13.zxy * tmpvar_15.yzx)) * (TANGENT.w * unity_WorldTransformParams.w));
  vec3 tmpvar_18;
  vec3 tmpvar_19;
  vec3 tmpvar_20;
  tmpvar_18.x = tmpvar_16.x;
  tmpvar_18.y = tmpvar_17.x;
  tmpvar_18.z = tmpvar_13.x;
  tmpvar_19.x = tmpvar_16.y;
  tmpvar_19.y = tmpvar_17.y;
  tmpvar_19.z = tmpvar_13.y;
  tmpvar_20.x = tmpvar_16.z;
  tmpvar_20.y = tmpvar_17.z;
  tmpvar_20.z = tmpvar_13.z;
  vec3 v_21;
  v_21.x = tmpvar_18.x;
  v_21.y = tmpvar_19.x;
  v_21.z = tmpvar_20.x;
  tmpvar_4.xyz = v_21;
  vec3 v_22;
  v_22.x = tmpvar_18.y;
  v_22.y = tmpvar_19.y;
  v_22.z = tmpvar_20.y;
  tmpvar_5.xyz = v_22;
  vec3 v_23;
  v_23.x = tmpvar_18.z;
  v_23.y = tmpvar_19.z;
  v_23.z = tmpvar_20.z;
  tmpvar_6.xyz = v_23;
  vec3 tmpvar_24;
  tmpvar_24 = normalize((_WorldSpaceLightPos0.xyz - (tmpvar_7.xyz * _WorldSpaceLightPos0.w)));
  tmpvar_4.w = tmpvar_24.x;
  tmpvar_5.w = tmpvar_24.y;
  tmpvar_6.w = tmpvar_24.z;
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = texcoord_8;
  xlv_TEXCOORD1 = normalize((tmpvar_7.xyz - _WorldSpaceCameraPos));
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  xlv_TEXCOORD5 = (_LightMatrix0 * (_Object2World * gl_Vertex)).xyz;
}


#endif
#ifdef FRAGMENT
uniform vec4 unity_ColorSpaceDielectricSpec;
uniform vec4 _LightColor0;
uniform sampler2D unity_NHxRoughness;
uniform vec4 _Color;
uniform sampler2D _MainTex;
uniform float _Metallic;
uniform float _Glossiness;
uniform samplerCube _LightTexture0;
uniform sampler2D _LightTextureB0;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec3 xlv_TEXCOORD5;
void main ()
{
  vec3 tmpvar_1;
  tmpvar_1 = (_Color.xyz * texture2D (_MainTex, xlv_TEXCOORD0.xy).xyz);
  vec3 tmpvar_2;
  tmpvar_2 = normalize(xlv_TEXCOORD2_2.xyz);
  vec3 tmpvar_3;
  tmpvar_3.x = xlv_TEXCOORD2.w;
  tmpvar_3.y = xlv_TEXCOORD2_1.w;
  tmpvar_3.z = xlv_TEXCOORD2_2.w;
  vec3 viewDir_4;
  viewDir_4 = -(xlv_TEXCOORD1);
  vec2 tmpvar_5;
  tmpvar_5.x = dot ((viewDir_4 - (2.0 * 
    (dot (tmpvar_2, viewDir_4) * tmpvar_2)
  )), tmpvar_3);
  tmpvar_5.y = (1.0 - clamp (dot (tmpvar_2, viewDir_4), 0.0, 1.0));
  vec2 tmpvar_6;
  tmpvar_6.x = ((tmpvar_5 * tmpvar_5) * (tmpvar_5 * tmpvar_5)).x;
  tmpvar_6.y = (1.0 - _Glossiness);
  vec4 tmpvar_7;
  tmpvar_7.w = 1.0;
  tmpvar_7.xyz = (((tmpvar_1 * 
    (unity_ColorSpaceDielectricSpec.w - (_Metallic * unity_ColorSpaceDielectricSpec.w))
  ) + (
    (texture2D (unity_NHxRoughness, tmpvar_6).w * 16.0)
   * 
    mix (unity_ColorSpaceDielectricSpec.xyz, tmpvar_1, vec3(_Metallic))
  )) * ((_LightColor0.xyz * 
    (texture2D (_LightTextureB0, vec2(dot (xlv_TEXCOORD5, xlv_TEXCOORD5))).w * textureCube (_LightTexture0, xlv_TEXCOORD5).w)
  ) * clamp (
    dot (tmpvar_2, tmpvar_3)
  , 0.0, 1.0)));
  vec4 xlat_varoutput_8;
  xlat_varoutput_8.xyz = tmpvar_7.xyz;
  xlat_varoutput_8.w = 1.0;
  gl_FragData[0] = xlat_varoutput_8;
}


#endif
"
}
SubProgram "d3d9 " {
// Stats: 47 math
Keywords { "POINT_COOKIE" "SHADOWS_OFF" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
Matrix 11 [_LightMatrix0] 3
Matrix 4 [_Object2World]
Matrix 8 [_World2Object] 3
Matrix 0 [glstate_matrix_mvp]
Vector 18 [_DetailAlbedoMap_ST]
Vector 17 [_MainTex_ST]
Float 19 [_UVSec]
Vector 14 [_WorldSpaceCameraPos]
Vector 15 [_WorldSpaceLightPos0]
Vector 16 [unity_WorldTransformParams]
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   row_major float4x4 _LightMatrix0;
//   float4 _MainTex_ST;
//   row_major float4x4 _Object2World;
//   float _UVSec;
//   row_major float4x4 _World2Object;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 glstate_matrix_mvp;
//   float4 unity_WorldTransformParams;
//
//
// Registers:
//
//   Name                       Reg   Size
//   -------------------------- ----- ----
//   glstate_matrix_mvp         c0       4
//   _Object2World              c4       4
//   _World2Object              c8       3
//   _LightMatrix0              c11      3
//   _WorldSpaceCameraPos       c14      1
//   _WorldSpaceLightPos0       c15      1
//   unity_WorldTransformParams c16      1
//   _MainTex_ST                c17      1
//   _DetailAlbedoMap_ST        c18      1
//   _UVSec                     c19      1
//

    vs_2_0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_tangent v4
    dp4 oPos.x, c0, v0
    dp4 oPos.y, c1, v0
    dp4 oPos.z, c2, v0
    dp4 oPos.w, c3, v0
    mad oT0.xy, v2, c17, c17.zwzw
    mul r0.x, c19.x, c19.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad oT0.zw, r2.xyxy, c18.xyxy, c18
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add r1.xyz, r0, -c14
    dp3 r1.w, r1, r1
    rsq r1.w, r1.w
    mul oT1.xyz, r1.w, r1
    mul r1.xyz, v1.y, c9
    mad r1.xyz, c8, v1.x, r1
    mad r1.xyz, c10, v1.z, r1
    nrm r2.xyz, r1
    dp3 r1.x, c4, v4
    dp3 r1.y, c5, v4
    dp3 r1.z, c6, v4
    nrm r3.xyz, r1
    mul r1.xyz, r2.zxyw, r3.yzxw
    mad r1.xyz, r2.yzxw, r3.zxyw, -r1
    mov oT4.xyz, r2
    mov oT2.xyz, r3
    mul r1.w, v4.w, c16.w
    mul oT3.xyz, r1.w, r1
    dp4 r0.w, c7, v0
    dp4 oT5.x, c11, r0
    dp4 oT5.y, c12, r0
    dp4 oT5.z, c13, r0
    mad r0.xyz, r0, -c15.w, c15
    nrm r1.xyz, r0
    mov oT2.w, r1.x
    mov oT3.w, r1.y
    mov oT4.w, r1.z

// approximately 46 instruction slots used
"
}
SubProgram "d3d11 " {
// Stats: 51 math
Keywords { "POINT_COOKIE" "SHADOWS_OFF" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
ConstBuffer "$Globals" 304
Matrix 240 [_LightMatrix0]
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
Vector 336 [unity_WorldTransformParams]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer cb0[19], immediateIndexed
      dcl_constantbuffer cb1[5], immediateIndexed
      dcl_constantbuffer cb2[1], immediateIndexed
      dcl_constantbuffer cb3[22], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: mad o0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   4: eq r0.x, cb0[13].z, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[11].xxxy, cb0[11].zzzw
   7: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  13: mad r0.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  14: dp3 r0.w, r1.xyzx, r1.xyzx
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: dp3 r0.w, r0.xyzx, r0.xyzx
  18: rsq r0.w, r0.w
  19: mul r0.xyz, r0.wwww, r0.xyzx
  20: mov o3.w, r0.x
  21: mul r1.xyz, v4.yyyy, cb3[13].xyzx
  22: mad r1.xyz, cb3[12].xyzx, v4.xxxx, r1.xyzx
  23: mad r1.xyz, cb3[14].xyzx, v4.zzzz, r1.xyzx
  24: dp3 r0.x, r1.xyzx, r1.xyzx
  25: rsq r0.x, r0.x
  26: mul r1.xyz, r0.xxxx, r1.xyzx
  27: mov o3.xyz, r1.xyzx
  28: mul r2.x, v1.x, cb3[16].x
  29: mul r2.y, v1.x, cb3[17].x
  30: mul r2.z, v1.x, cb3[18].x
  31: mul r3.x, v1.y, cb3[16].y
  32: mul r3.y, v1.y, cb3[17].y
  33: mul r3.z, v1.y, cb3[18].y
  34: add r2.xyz, r2.xyzx, r3.xyzx
  35: mul r3.x, v1.z, cb3[16].z
  36: mul r3.y, v1.z, cb3[17].z
  37: mul r3.z, v1.z, cb3[18].z
  38: add r2.xyz, r2.xyzx, r3.xyzx
  39: dp3 r0.x, r2.xyzx, r2.xyzx
  40: rsq r0.x, r0.x
  41: mul r2.xyz, r0.xxxx, r2.xyzx
  42: mul r3.xyz, r1.yzxy, r2.zxyz
  43: mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
  44: mov o5.xyz, r2.xyzx
  45: mul r0.x, v4.w, cb3[21].w
  46: mul o4.xyz, r0.xxxx, r1.xyzx
  47: mov o4.w, r0.y
  48: mov o5.w, r0.z
  49: mul r0.xyzw, v0.yyyy, cb3[13].xyzw
  50: mad r0.xyzw, cb3[12].xyzw, v0.xxxx, r0.xyzw
  51: mad r0.xyzw, cb3[14].xyzw, v0.zzzz, r0.xyzw
  52: mad r0.xyzw, cb3[15].xyzw, v0.wwww, r0.xyzw
  53: mul r1.xyz, r0.yyyy, cb0[16].xyzx
  54: mad r1.xyz, cb0[15].xyzx, r0.xxxx, r1.xyzx
  55: mad r0.xyz, cb0[17].xyzx, r0.zzzz, r1.xyzx
  56: mad o6.xyz, cb0[18].xyzx, r0.wwww, r0.xyzx
  57: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "d3d11_9x " {
// Stats: 51 math
Keywords { "POINT_COOKIE" "SHADOWS_OFF" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
ConstBuffer "$Globals" 304
Matrix 240 [_LightMatrix0]
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
Vector 336 [unity_WorldTransformParams]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c1         cb0            10         2  ( FLT, FLT, FLT, FLT)
// c3         cb0            13         1  ( FLT, FLT, FLT, FLT)
// c4         cb0            15         4  ( FLT, FLT, FLT, FLT)
// c8         cb1             4         1  ( FLT, FLT, FLT, FLT)
// c9         cb2             0         1  ( FLT, FLT, FLT, FLT)
// c10        cb3             0         4  ( FLT, FLT, FLT, FLT)
// c14        cb3            12         7  ( FLT, FLT, FLT, FLT)
// c21        cb3            21         1  ( FLT, FLT, FLT, FLT)
//
//
// Runtime generated constant mappings:
//
// Target Reg                               Constant Description
// ---------- --------------------------------------------------
// c0                              Vertex Shader position offset
//
//
// Level9 shader bytecode:
//
    vs_2_0
          dcl_texcoord v0
          dcl_texcoord1 v1
          dcl_texcoord2 v2
          dcl_texcoord3 v3
          dcl_texcoord4 v4
   0:     mad oT0.xy, v2, c1, c1.zwzw
   1:     mul r0.x, c3.z, c3.z
   2:     sge r0.x, -r0.x, r0.x
   3:     mov r1.xy, v2
   4:     lrp r2.xy, r0.x, r1, v3
   5:     mad oT0.zw, r2.xyxy, c2.xyxy, c2
   6:     mul r0.xyz, v0.y, c15
   7:     mad r0.xyz, c14, v0.x, r0
   8:     mad r0.xyz, c16, v0.z, r0
   9:     mad r0.xyz, c17, v0.w, r0
  10:     add r1.xyz, r0, -c8
  11:     mad r0.xyz, r0, -c9.w, c9
  12:     nrm r2.xyz, r0
  15:     dp3 r0.x, r1, r1
  16:     rsq r0.x, r0.x
  17:     mul oT1.xyz, r0.x, r1
  18:     mul r0.x, v1.x, c18.x
  19:     mul r0.y, v1.x, c19.x
  20:     mul r0.z, v1.x, c20.x
  21:     mul r1.x, v1.y, c18.y
  22:     mul r1.y, v1.y, c19.y
  23:     mul r1.z, v1.y, c20.y
  24:     add r0.xyz, r0, r1
  25:     mul r1.x, v1.z, c18.z
  26:     mul r1.y, v1.z, c19.z
  27:     mul r1.z, v1.z, c20.z
  28:     add r0.xyz, r0, r1
  29:     nrm r1.xyz, r0
  32:     mul r0.xyz, v4.y, c15
  33:     mad r0.xyz, c14, v4.x, r0
  34:     mad r0.xyz, c16, v4.z, r0
  35:     nrm r3.xyz, r0
  38:     mul r0.xyz, r1.zxyw, r3.yzxw
  39:     mad r0.xyz, r1.yzxw, r3.zxyw, -r0
  40:     mov oT4.xyz, r1
  41:     mov oT2.xyz, r3
  42:     mul r0.w, v4.w, c21.w
  43:     mul oT3.xyz, r0.w, r0
  44:     mul r0, v0.y, c15
  45:     mad r0, c14, v0.x, r0
  46:     mad r0, c16, v0.z, r0
  47:     mad r0, c17, v0.w, r0
  48:     mul r1.xyz, r0.y, c5
  49:     mad r1.xyz, c4, r0.x, r1
  50:     mad r0.xyz, c6, r0.z, r1
  51:     mad oT5.xyz, c7, r0.w, r0
  52:     mul r0, v0.y, c11
  53:     mad r0, c10, v0.x, r0
  54:     mad r0, c12, v0.z, r0
  55:     mad r0, c13, v0.w, r0
  56:     mad oPos.xy, r0.w, c0, r0
  57:     mov oPos.zw, r0
  58:     mov oT2.w, r2.x
  59:     mov oT3.w, r2.y
  60:     mov oT4.w, r2.z

// approximately 61 instruction slots used
      vs_4_0
      dcl_constantbuffer cb0[19], immediateIndexed
      dcl_constantbuffer cb1[5], immediateIndexed
      dcl_constantbuffer cb2[1], immediateIndexed
      dcl_constantbuffer cb3[22], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: mad o0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   4: eq r0.x, cb0[13].z, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[11].xxxy, cb0[11].zzzw
   7: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  13: mad r0.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  14: dp3 r0.w, r1.xyzx, r1.xyzx
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: dp3 r0.w, r0.xyzx, r0.xyzx
  18: rsq r0.w, r0.w
  19: mul r0.xyz, r0.wwww, r0.xyzx
  20: mov o3.w, r0.x
  21: mul r1.xyz, v4.yyyy, cb3[13].xyzx
  22: mad r1.xyz, cb3[12].xyzx, v4.xxxx, r1.xyzx
  23: mad r1.xyz, cb3[14].xyzx, v4.zzzz, r1.xyzx
  24: dp3 r0.x, r1.xyzx, r1.xyzx
  25: rsq r0.x, r0.x
  26: mul r1.xyz, r0.xxxx, r1.xyzx
  27: mov o3.xyz, r1.xyzx
  28: mul r2.x, v1.x, cb3[16].x
  29: mul r2.y, v1.x, cb3[17].x
  30: mul r2.z, v1.x, cb3[18].x
  31: mul r3.x, v1.y, cb3[16].y
  32: mul r3.y, v1.y, cb3[17].y
  33: mul r3.z, v1.y, cb3[18].y
  34: add r2.xyz, r2.xyzx, r3.xyzx
  35: mul r3.x, v1.z, cb3[16].z
  36: mul r3.y, v1.z, cb3[17].z
  37: mul r3.z, v1.z, cb3[18].z
  38: add r2.xyz, r2.xyzx, r3.xyzx
  39: dp3 r0.x, r2.xyzx, r2.xyzx
  40: rsq r0.x, r0.x
  41: mul r2.xyz, r0.xxxx, r2.xyzx
  42: mul r3.xyz, r1.yzxy, r2.zxyz
  43: mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
  44: mov o5.xyz, r2.xyzx
  45: mul r0.x, v4.w, cb3[21].w
  46: mul o4.xyz, r0.xxxx, r1.xyzx
  47: mov o4.w, r0.y
  48: mov o5.w, r0.z
  49: mul r0.xyzw, v0.yyyy, cb3[13].xyzw
  50: mad r0.xyzw, cb3[12].xyzw, v0.xxxx, r0.xyzw
  51: mad r0.xyzw, cb3[14].xyzw, v0.zzzz, r0.xyzw
  52: mad r0.xyzw, cb3[15].xyzw, v0.wwww, r0.xyzw
  53: mul r1.xyz, r0.yyyy, cb0[16].xyzx
  54: mad r1.xyz, cb0[15].xyzx, r0.xxxx, r1.xyzx
  55: mad r0.xyz, cb0[17].xyzx, r0.zzzz, r1.xyzx
  56: mad o6.xyz, cb0[18].xyzx, r0.wwww, r0.xyzx
  57: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
// Stats: 29 math, 3 textures
Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_OFF" }
"#version 120

#ifdef VERTEX
uniform vec3 _WorldSpaceCameraPos;
uniform vec4 _WorldSpaceLightPos0;

uniform mat4 _Object2World;
uniform mat4 _World2Object;
uniform vec4 unity_WorldTransformParams;
uniform vec4 _MainTex_ST;
uniform vec4 _DetailAlbedoMap_ST;
uniform float _UVSec;
uniform mat4 _LightMatrix0;
attribute vec4 TANGENT;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec2 xlv_TEXCOORD5;
void main ()
{
  vec2 tmpvar_1;
  tmpvar_1 = gl_MultiTexCoord0.xy;
  vec2 tmpvar_2;
  tmpvar_2 = gl_MultiTexCoord1.xy;
  vec4 tmpvar_3;
  vec4 tmpvar_4;
  vec4 tmpvar_5;
  vec4 tmpvar_6;
  vec4 tmpvar_7;
  tmpvar_7 = (_Object2World * gl_Vertex);
  tmpvar_3 = (gl_ModelViewProjectionMatrix * gl_Vertex);
  vec4 texcoord_8;
  texcoord_8.xy = ((gl_MultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  vec2 tmpvar_9;
  if ((_UVSec == 0.0)) {
    tmpvar_9 = tmpvar_1;
  } else {
    tmpvar_9 = tmpvar_2;
  };
  texcoord_8.zw = ((tmpvar_9 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  vec4 v_10;
  v_10.x = _World2Object[0].x;
  v_10.y = _World2Object[1].x;
  v_10.z = _World2Object[2].x;
  v_10.w = _World2Object[3].x;
  vec4 v_11;
  v_11.x = _World2Object[0].y;
  v_11.y = _World2Object[1].y;
  v_11.z = _World2Object[2].y;
  v_11.w = _World2Object[3].y;
  vec4 v_12;
  v_12.x = _World2Object[0].z;
  v_12.y = _World2Object[1].z;
  v_12.z = _World2Object[2].z;
  v_12.w = _World2Object[3].z;
  vec3 tmpvar_13;
  tmpvar_13 = normalize(((
    (v_10.xyz * gl_Normal.x)
   + 
    (v_11.xyz * gl_Normal.y)
  ) + (v_12.xyz * gl_Normal.z)));
  mat3 tmpvar_14;
  tmpvar_14[0] = _Object2World[0].xyz;
  tmpvar_14[1] = _Object2World[1].xyz;
  tmpvar_14[2] = _Object2World[2].xyz;
  vec4 tmpvar_15;
  tmpvar_15.xyz = normalize((tmpvar_14 * TANGENT.xyz));
  tmpvar_15.w = TANGENT.w;
  vec3 tmpvar_16;
  vec3 tmpvar_17;
  tmpvar_16 = tmpvar_15.xyz;
  tmpvar_17 = (((tmpvar_13.yzx * tmpvar_15.zxy) - (tmpvar_13.zxy * tmpvar_15.yzx)) * (TANGENT.w * unity_WorldTransformParams.w));
  vec3 tmpvar_18;
  vec3 tmpvar_19;
  vec3 tmpvar_20;
  tmpvar_18.x = tmpvar_16.x;
  tmpvar_18.y = tmpvar_17.x;
  tmpvar_18.z = tmpvar_13.x;
  tmpvar_19.x = tmpvar_16.y;
  tmpvar_19.y = tmpvar_17.y;
  tmpvar_19.z = tmpvar_13.y;
  tmpvar_20.x = tmpvar_16.z;
  tmpvar_20.y = tmpvar_17.z;
  tmpvar_20.z = tmpvar_13.z;
  vec3 v_21;
  v_21.x = tmpvar_18.x;
  v_21.y = tmpvar_19.x;
  v_21.z = tmpvar_20.x;
  tmpvar_4.xyz = v_21;
  vec3 v_22;
  v_22.x = tmpvar_18.y;
  v_22.y = tmpvar_19.y;
  v_22.z = tmpvar_20.y;
  tmpvar_5.xyz = v_22;
  vec3 v_23;
  v_23.x = tmpvar_18.z;
  v_23.y = tmpvar_19.z;
  v_23.z = tmpvar_20.z;
  tmpvar_6.xyz = v_23;
  vec3 tmpvar_24;
  tmpvar_24 = (_WorldSpaceLightPos0.xyz - (tmpvar_7.xyz * _WorldSpaceLightPos0.w));
  tmpvar_4.w = tmpvar_24.x;
  tmpvar_5.w = tmpvar_24.y;
  tmpvar_6.w = tmpvar_24.z;
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = texcoord_8;
  xlv_TEXCOORD1 = normalize((tmpvar_7.xyz - _WorldSpaceCameraPos));
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  xlv_TEXCOORD5 = (_LightMatrix0 * (_Object2World * gl_Vertex)).xy;
}


#endif
#ifdef FRAGMENT
uniform vec4 unity_ColorSpaceDielectricSpec;
uniform vec4 _LightColor0;
uniform sampler2D unity_NHxRoughness;
uniform vec4 _Color;
uniform sampler2D _MainTex;
uniform float _Metallic;
uniform float _Glossiness;
uniform sampler2D _LightTexture0;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec2 xlv_TEXCOORD5;
void main ()
{
  vec3 tmpvar_1;
  tmpvar_1 = (_Color.xyz * texture2D (_MainTex, xlv_TEXCOORD0.xy).xyz);
  vec3 tmpvar_2;
  tmpvar_2 = normalize(xlv_TEXCOORD2_2.xyz);
  vec3 tmpvar_3;
  tmpvar_3.x = xlv_TEXCOORD2.w;
  tmpvar_3.y = xlv_TEXCOORD2_1.w;
  tmpvar_3.z = xlv_TEXCOORD2_2.w;
  vec3 viewDir_4;
  viewDir_4 = -(xlv_TEXCOORD1);
  vec2 tmpvar_5;
  tmpvar_5.x = dot ((viewDir_4 - (2.0 * 
    (dot (tmpvar_2, viewDir_4) * tmpvar_2)
  )), tmpvar_3);
  tmpvar_5.y = (1.0 - clamp (dot (tmpvar_2, viewDir_4), 0.0, 1.0));
  vec2 tmpvar_6;
  tmpvar_6.x = ((tmpvar_5 * tmpvar_5) * (tmpvar_5 * tmpvar_5)).x;
  tmpvar_6.y = (1.0 - _Glossiness);
  vec4 tmpvar_7;
  tmpvar_7.w = 1.0;
  tmpvar_7.xyz = (((tmpvar_1 * 
    (unity_ColorSpaceDielectricSpec.w - (_Metallic * unity_ColorSpaceDielectricSpec.w))
  ) + (
    (texture2D (unity_NHxRoughness, tmpvar_6).w * 16.0)
   * 
    mix (unity_ColorSpaceDielectricSpec.xyz, tmpvar_1, vec3(_Metallic))
  )) * ((_LightColor0.xyz * texture2D (_LightTexture0, xlv_TEXCOORD5).w) * clamp (
    dot (tmpvar_2, tmpvar_3)
  , 0.0, 1.0)));
  vec4 xlat_varoutput_8;
  xlat_varoutput_8.xyz = tmpvar_7.xyz;
  xlat_varoutput_8.w = 1.0;
  gl_FragData[0] = xlat_varoutput_8;
}


#endif
"
}
SubProgram "d3d9 " {
// Stats: 43 math
Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_OFF" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
Matrix 11 [_LightMatrix0] 2
Matrix 4 [_Object2World]
Matrix 8 [_World2Object] 3
Matrix 0 [glstate_matrix_mvp]
Vector 17 [_DetailAlbedoMap_ST]
Vector 16 [_MainTex_ST]
Float 18 [_UVSec]
Vector 13 [_WorldSpaceCameraPos]
Vector 14 [_WorldSpaceLightPos0]
Vector 15 [unity_WorldTransformParams]
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   row_major float4x4 _LightMatrix0;
//   float4 _MainTex_ST;
//   row_major float4x4 _Object2World;
//   float _UVSec;
//   row_major float4x4 _World2Object;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 glstate_matrix_mvp;
//   float4 unity_WorldTransformParams;
//
//
// Registers:
//
//   Name                       Reg   Size
//   -------------------------- ----- ----
//   glstate_matrix_mvp         c0       4
//   _Object2World              c4       4
//   _World2Object              c8       3
//   _LightMatrix0              c11      2
//   _WorldSpaceCameraPos       c13      1
//   _WorldSpaceLightPos0       c14      1
//   unity_WorldTransformParams c15      1
//   _MainTex_ST                c16      1
//   _DetailAlbedoMap_ST        c17      1
//   _UVSec                     c18      1
//

    vs_2_0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_tangent v4
    dp4 oPos.x, c0, v0
    dp4 oPos.y, c1, v0
    dp4 oPos.z, c2, v0
    dp4 oPos.w, c3, v0
    mad oT0.xy, v2, c16, c16.zwzw
    mul r0.x, c18.x, c18.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad oT0.zw, r2.xyxy, c17.xyxy, c17
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add r1.xyz, r0, -c13
    dp3 r1.w, r1, r1
    rsq r1.w, r1.w
    mul oT1.xyz, r1.w, r1
    mul r1.xyz, v1.y, c9
    mad r1.xyz, c8, v1.x, r1
    mad r1.xyz, c10, v1.z, r1
    nrm r2.xyz, r1
    dp3 r1.x, c4, v4
    dp3 r1.y, c5, v4
    dp3 r1.z, c6, v4
    nrm r3.xyz, r1
    mul r1.xyz, r2.zxyw, r3.yzxw
    mad r1.xyz, r2.yzxw, r3.zxyw, -r1
    mov oT4.xyz, r2
    mov oT2.xyz, r3
    mul r1.w, v4.w, c15.w
    mul oT3.xyz, r1.w, r1
    dp4 r0.w, c7, v0
    dp4 oT5.x, c11, r0
    dp4 oT5.y, c12, r0
    mad r0.xyz, r0, -c14.w, c14
    mov oT2.w, r0.x
    mov oT3.w, r0.y
    mov oT4.w, r0.z

// approximately 42 instruction slots used
"
}
SubProgram "d3d11 " {
// Stats: 48 math
Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_OFF" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
ConstBuffer "$Globals" 304
Matrix 240 [_LightMatrix0]
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
Vector 336 [unity_WorldTransformParams]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xy          6     NONE   float   xy  
//
      vs_4_0
      dcl_constantbuffer cb0[19], immediateIndexed
      dcl_constantbuffer cb1[5], immediateIndexed
      dcl_constantbuffer cb2[1], immediateIndexed
      dcl_constantbuffer cb3[22], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xy
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: mad o0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   4: eq r0.x, cb0[13].z, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[11].xxxy, cb0[11].zzzw
   7: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  13: mad r0.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  14: dp3 r0.w, r1.xyzx, r1.xyzx
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mov o3.w, r0.x
  18: mul r1.xyz, v4.yyyy, cb3[13].xyzx
  19: mad r1.xyz, cb3[12].xyzx, v4.xxxx, r1.xyzx
  20: mad r1.xyz, cb3[14].xyzx, v4.zzzz, r1.xyzx
  21: dp3 r0.x, r1.xyzx, r1.xyzx
  22: rsq r0.x, r0.x
  23: mul r1.xyz, r0.xxxx, r1.xyzx
  24: mov o3.xyz, r1.xyzx
  25: mul r2.x, v1.x, cb3[16].x
  26: mul r2.y, v1.x, cb3[17].x
  27: mul r2.z, v1.x, cb3[18].x
  28: mul r3.x, v1.y, cb3[16].y
  29: mul r3.y, v1.y, cb3[17].y
  30: mul r3.z, v1.y, cb3[18].y
  31: add r2.xyz, r2.xyzx, r3.xyzx
  32: mul r3.x, v1.z, cb3[16].z
  33: mul r3.y, v1.z, cb3[17].z
  34: mul r3.z, v1.z, cb3[18].z
  35: add r2.xyz, r2.xyzx, r3.xyzx
  36: dp3 r0.x, r2.xyzx, r2.xyzx
  37: rsq r0.x, r0.x
  38: mul r2.xyz, r0.xxxx, r2.xyzx
  39: mul r3.xyz, r1.yzxy, r2.zxyz
  40: mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
  41: mov o5.xyz, r2.xyzx
  42: mul r0.x, v4.w, cb3[21].w
  43: mul o4.xyz, r0.xxxx, r1.xyzx
  44: mov o4.w, r0.y
  45: mov o5.w, r0.z
  46: mul r0.xyzw, v0.yyyy, cb3[13].xyzw
  47: mad r0.xyzw, cb3[12].xyzw, v0.xxxx, r0.xyzw
  48: mad r0.xyzw, cb3[14].xyzw, v0.zzzz, r0.xyzw
  49: mad r0.xyzw, cb3[15].xyzw, v0.wwww, r0.xyzw
  50: mul r1.xy, r0.yyyy, cb0[16].xyxx
  51: mad r0.xy, cb0[15].xyxx, r0.xxxx, r1.xyxx
  52: mad r0.xy, cb0[17].xyxx, r0.zzzz, r0.xyxx
  53: mad o6.xy, cb0[18].xyxx, r0.wwww, r0.xyxx
  54: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "d3d11_9x " {
// Stats: 48 math
Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_OFF" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
ConstBuffer "$Globals" 304
Matrix 240 [_LightMatrix0]
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
Vector 336 [unity_WorldTransformParams]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xy          6     NONE   float   xy  
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c1         cb0            10         2  ( FLT, FLT, FLT, FLT)
// c3         cb0            13         1  ( FLT, FLT, FLT, FLT)
// c4         cb0            15         4  ( FLT, FLT, FLT, FLT)
// c8         cb1             4         1  ( FLT, FLT, FLT, FLT)
// c9         cb2             0         1  ( FLT, FLT, FLT, FLT)
// c10        cb3             0         4  ( FLT, FLT, FLT, FLT)
// c14        cb3            12         7  ( FLT, FLT, FLT, FLT)
// c21        cb3            21         1  ( FLT, FLT, FLT, FLT)
//
//
// Runtime generated constant mappings:
//
// Target Reg                               Constant Description
// ---------- --------------------------------------------------
// c0                              Vertex Shader position offset
//
//
// Level9 shader bytecode:
//
    vs_2_0
          dcl_texcoord v0
          dcl_texcoord1 v1
          dcl_texcoord2 v2
          dcl_texcoord3 v3
          dcl_texcoord4 v4
   0:     mad oT0.xy, v2, c1, c1.zwzw
   1:     mul r0.x, c3.z, c3.z
   2:     sge r0.x, -r0.x, r0.x
   3:     mov r1.xy, v2
   4:     lrp r2.xy, r0.x, r1, v3
   5:     mad oT0.zw, r2.xyxy, c2.xyxy, c2
   6:     mul r0.xyz, v0.y, c15
   7:     mad r0.xyz, c14, v0.x, r0
   8:     mad r0.xyz, c16, v0.z, r0
   9:     mad r0.xyz, c17, v0.w, r0
  10:     add r1.xyz, r0, -c8
  11:     mad r0.xyz, r0, -c9.w, c9
  12:     dp3 r0.w, r1, r1
  13:     rsq r0.w, r0.w
  14:     mul oT1.xyz, r0.w, r1
  15:     mul r1.x, v1.x, c18.x
  16:     mul r1.y, v1.x, c19.x
  17:     mul r1.z, v1.x, c20.x
  18:     mul r2.x, v1.y, c18.y
  19:     mul r2.y, v1.y, c19.y
  20:     mul r2.z, v1.y, c20.y
  21:     add r1.xyz, r1, r2
  22:     mul r2.x, v1.z, c18.z
  23:     mul r2.y, v1.z, c19.z
  24:     mul r2.z, v1.z, c20.z
  25:     add r1.xyz, r1, r2
  26:     nrm r2.xyz, r1
  29:     mul r1.xyz, v4.y, c15
  30:     mad r1.xyz, c14, v4.x, r1
  31:     mad r1.xyz, c16, v4.z, r1
  32:     nrm r3.xyz, r1
  35:     mul r1.xyz, r2.zxyw, r3.yzxw
  36:     mad r1.xyz, r2.yzxw, r3.zxyw, -r1
  37:     mov oT4.xyz, r2
  38:     mov oT2.xyz, r3
  39:     mul r0.w, v4.w, c21.w
  40:     mul oT3.xyz, r0.w, r1
  41:     mul r1, v0.y, c15
  42:     mad r1, c14, v0.x, r1
  43:     mad r1, c16, v0.z, r1
  44:     mad r1, c17, v0.w, r1
  45:     mul r2.xy, r1.y, c5
  46:     mad r1.xy, c4, r1.x, r2
  47:     mad r1.xy, c6, r1.z, r1
  48:     mad oT5.xy, c7, r1.w, r1
  49:     mul r1, v0.y, c11
  50:     mad r1, c10, v0.x, r1
  51:     mad r1, c12, v0.z, r1
  52:     mad r1, c13, v0.w, r1
  53:     mad oPos.xy, r1.w, c0, r1
  54:     mov oPos.zw, r1
  55:     mov oT2.w, r0.x
  56:     mov oT3.w, r0.y
  57:     mov oT4.w, r0.z

// approximately 58 instruction slots used
      vs_4_0
      dcl_constantbuffer cb0[19], immediateIndexed
      dcl_constantbuffer cb1[5], immediateIndexed
      dcl_constantbuffer cb2[1], immediateIndexed
      dcl_constantbuffer cb3[22], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xy
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: mad o0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   4: eq r0.x, cb0[13].z, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[11].xxxy, cb0[11].zzzw
   7: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  13: mad r0.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  14: dp3 r0.w, r1.xyzx, r1.xyzx
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mov o3.w, r0.x
  18: mul r1.xyz, v4.yyyy, cb3[13].xyzx
  19: mad r1.xyz, cb3[12].xyzx, v4.xxxx, r1.xyzx
  20: mad r1.xyz, cb3[14].xyzx, v4.zzzz, r1.xyzx
  21: dp3 r0.x, r1.xyzx, r1.xyzx
  22: rsq r0.x, r0.x
  23: mul r1.xyz, r0.xxxx, r1.xyzx
  24: mov o3.xyz, r1.xyzx
  25: mul r2.x, v1.x, cb3[16].x
  26: mul r2.y, v1.x, cb3[17].x
  27: mul r2.z, v1.x, cb3[18].x
  28: mul r3.x, v1.y, cb3[16].y
  29: mul r3.y, v1.y, cb3[17].y
  30: mul r3.z, v1.y, cb3[18].y
  31: add r2.xyz, r2.xyzx, r3.xyzx
  32: mul r3.x, v1.z, cb3[16].z
  33: mul r3.y, v1.z, cb3[17].z
  34: mul r3.z, v1.z, cb3[18].z
  35: add r2.xyz, r2.xyzx, r3.xyzx
  36: dp3 r0.x, r2.xyzx, r2.xyzx
  37: rsq r0.x, r0.x
  38: mul r2.xyz, r0.xxxx, r2.xyzx
  39: mul r3.xyz, r1.yzxy, r2.zxyz
  40: mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
  41: mov o5.xyz, r2.xyzx
  42: mul r0.x, v4.w, cb3[21].w
  43: mul o4.xyz, r0.xxxx, r1.xyzx
  44: mov o4.w, r0.y
  45: mov o5.w, r0.z
  46: mul r0.xyzw, v0.yyyy, cb3[13].xyzw
  47: mad r0.xyzw, cb3[12].xyzw, v0.xxxx, r0.xyzw
  48: mad r0.xyzw, cb3[14].xyzw, v0.zzzz, r0.xyzw
  49: mad r0.xyzw, cb3[15].xyzw, v0.wwww, r0.xyzw
  50: mul r1.xy, r0.yyyy, cb0[16].xyxx
  51: mad r0.xy, cb0[15].xyxx, r0.xxxx, r1.xyxx
  52: mad r0.xy, cb0[17].xyxx, r0.zzzz, r0.xyxx
  53: mad o6.xy, cb0[18].xyxx, r0.wwww, r0.xyxx
  54: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
// Stats: 40 math, 5 textures
Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_NATIVE" }
"#version 120

#ifdef VERTEX
uniform vec3 _WorldSpaceCameraPos;
uniform vec4 _WorldSpaceLightPos0;
uniform mat4 unity_World2Shadow[4];

uniform mat4 _Object2World;
uniform mat4 _World2Object;
uniform vec4 unity_WorldTransformParams;
uniform vec4 _MainTex_ST;
uniform vec4 _DetailAlbedoMap_ST;
uniform float _UVSec;
uniform mat4 _LightMatrix0;
attribute vec4 TANGENT;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
varying vec4 xlv_TEXCOORD6;
void main ()
{
  vec2 tmpvar_1;
  tmpvar_1 = gl_MultiTexCoord0.xy;
  vec2 tmpvar_2;
  tmpvar_2 = gl_MultiTexCoord1.xy;
  vec4 tmpvar_3;
  vec4 tmpvar_4;
  vec4 tmpvar_5;
  vec4 tmpvar_6;
  vec4 tmpvar_7;
  tmpvar_7 = (_Object2World * gl_Vertex);
  tmpvar_3 = (gl_ModelViewProjectionMatrix * gl_Vertex);
  vec4 texcoord_8;
  texcoord_8.xy = ((gl_MultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  vec2 tmpvar_9;
  if ((_UVSec == 0.0)) {
    tmpvar_9 = tmpvar_1;
  } else {
    tmpvar_9 = tmpvar_2;
  };
  texcoord_8.zw = ((tmpvar_9 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  vec4 v_10;
  v_10.x = _World2Object[0].x;
  v_10.y = _World2Object[1].x;
  v_10.z = _World2Object[2].x;
  v_10.w = _World2Object[3].x;
  vec4 v_11;
  v_11.x = _World2Object[0].y;
  v_11.y = _World2Object[1].y;
  v_11.z = _World2Object[2].y;
  v_11.w = _World2Object[3].y;
  vec4 v_12;
  v_12.x = _World2Object[0].z;
  v_12.y = _World2Object[1].z;
  v_12.z = _World2Object[2].z;
  v_12.w = _World2Object[3].z;
  vec3 tmpvar_13;
  tmpvar_13 = normalize(((
    (v_10.xyz * gl_Normal.x)
   + 
    (v_11.xyz * gl_Normal.y)
  ) + (v_12.xyz * gl_Normal.z)));
  mat3 tmpvar_14;
  tmpvar_14[0] = _Object2World[0].xyz;
  tmpvar_14[1] = _Object2World[1].xyz;
  tmpvar_14[2] = _Object2World[2].xyz;
  vec4 tmpvar_15;
  tmpvar_15.xyz = normalize((tmpvar_14 * TANGENT.xyz));
  tmpvar_15.w = TANGENT.w;
  vec3 tmpvar_16;
  vec3 tmpvar_17;
  tmpvar_16 = tmpvar_15.xyz;
  tmpvar_17 = (((tmpvar_13.yzx * tmpvar_15.zxy) - (tmpvar_13.zxy * tmpvar_15.yzx)) * (TANGENT.w * unity_WorldTransformParams.w));
  vec3 tmpvar_18;
  vec3 tmpvar_19;
  vec3 tmpvar_20;
  tmpvar_18.x = tmpvar_16.x;
  tmpvar_18.y = tmpvar_17.x;
  tmpvar_18.z = tmpvar_13.x;
  tmpvar_19.x = tmpvar_16.y;
  tmpvar_19.y = tmpvar_17.y;
  tmpvar_19.z = tmpvar_13.y;
  tmpvar_20.x = tmpvar_16.z;
  tmpvar_20.y = tmpvar_17.z;
  tmpvar_20.z = tmpvar_13.z;
  vec3 v_21;
  v_21.x = tmpvar_18.x;
  v_21.y = tmpvar_19.x;
  v_21.z = tmpvar_20.x;
  tmpvar_4.xyz = v_21;
  vec3 v_22;
  v_22.x = tmpvar_18.y;
  v_22.y = tmpvar_19.y;
  v_22.z = tmpvar_20.y;
  tmpvar_5.xyz = v_22;
  vec3 v_23;
  v_23.x = tmpvar_18.z;
  v_23.y = tmpvar_19.z;
  v_23.z = tmpvar_20.z;
  tmpvar_6.xyz = v_23;
  vec3 tmpvar_24;
  tmpvar_24 = normalize((_WorldSpaceLightPos0.xyz - (tmpvar_7.xyz * _WorldSpaceLightPos0.w)));
  tmpvar_4.w = tmpvar_24.x;
  tmpvar_5.w = tmpvar_24.y;
  tmpvar_6.w = tmpvar_24.z;
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = texcoord_8;
  xlv_TEXCOORD1 = normalize((tmpvar_7.xyz - _WorldSpaceCameraPos));
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  vec4 tmpvar_25;
  tmpvar_25 = (_Object2World * gl_Vertex);
  xlv_TEXCOORD5 = (_LightMatrix0 * tmpvar_25);
  xlv_TEXCOORD6 = (unity_World2Shadow[0] * tmpvar_25);
}


#endif
#ifdef FRAGMENT
uniform vec4 _LightShadowData;
uniform vec4 unity_ColorSpaceDielectricSpec;
uniform vec4 _LightColor0;
uniform sampler2D unity_NHxRoughness;
uniform vec4 _Color;
uniform sampler2D _MainTex;
uniform float _Metallic;
uniform float _Glossiness;
uniform sampler2DShadow _ShadowMapTexture;
uniform sampler2D _LightTexture0;
uniform sampler2D _LightTextureB0;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
varying vec4 xlv_TEXCOORD6;
void main ()
{
  vec3 tmpvar_1;
  tmpvar_1 = (_Color.xyz * texture2D (_MainTex, xlv_TEXCOORD0.xy).xyz);
  vec3 tmpvar_2;
  tmpvar_2 = normalize(xlv_TEXCOORD2_2.xyz);
  vec3 tmpvar_3;
  tmpvar_3.x = xlv_TEXCOORD2.w;
  tmpvar_3.y = xlv_TEXCOORD2_1.w;
  tmpvar_3.z = xlv_TEXCOORD2_2.w;
  vec3 viewDir_4;
  viewDir_4 = -(xlv_TEXCOORD1);
  vec2 tmpvar_5;
  tmpvar_5.x = dot ((viewDir_4 - (2.0 * 
    (dot (tmpvar_2, viewDir_4) * tmpvar_2)
  )), tmpvar_3);
  tmpvar_5.y = (1.0 - clamp (dot (tmpvar_2, viewDir_4), 0.0, 1.0));
  vec2 tmpvar_6;
  tmpvar_6.x = ((tmpvar_5 * tmpvar_5) * (tmpvar_5 * tmpvar_5)).x;
  tmpvar_6.y = (1.0 - _Glossiness);
  vec4 tmpvar_7;
  tmpvar_7.w = 1.0;
  tmpvar_7.xyz = (((tmpvar_1 * 
    (unity_ColorSpaceDielectricSpec.w - (_Metallic * unity_ColorSpaceDielectricSpec.w))
  ) + (
    (texture2D (unity_NHxRoughness, tmpvar_6).w * 16.0)
   * 
    mix (unity_ColorSpaceDielectricSpec.xyz, tmpvar_1, vec3(_Metallic))
  )) * ((_LightColor0.xyz * 
    (((float(
      (xlv_TEXCOORD5.z > 0.0)
    ) * texture2D (_LightTexture0, (
      (xlv_TEXCOORD5.xy / xlv_TEXCOORD5.w)
     + 0.5)).w) * texture2D (_LightTextureB0, vec2(dot (xlv_TEXCOORD5.xyz, xlv_TEXCOORD5.xyz))).w) * (_LightShadowData.x + (shadow2DProj (_ShadowMapTexture, xlv_TEXCOORD6).x * (1.0 - _LightShadowData.x))))
  ) * clamp (
    dot (tmpvar_2, tmpvar_3)
  , 0.0, 1.0)));
  vec4 xlat_varoutput_8;
  xlat_varoutput_8.xyz = tmpvar_7.xyz;
  xlat_varoutput_8.w = 1.0;
  gl_FragData[0] = xlat_varoutput_8;
}


#endif
"
}
SubProgram "d3d9 " {
// Stats: 52 math
Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_NATIVE" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
Matrix 12 [_LightMatrix0]
Matrix 8 [_Object2World]
Matrix 16 [_World2Object] 3
Matrix 4 [glstate_matrix_mvp]
Matrix 0 [unity_World2Shadow0]
Vector 23 [_DetailAlbedoMap_ST]
Vector 22 [_MainTex_ST]
Float 24 [_UVSec]
Vector 19 [_WorldSpaceCameraPos]
Vector 20 [_WorldSpaceLightPos0]
Vector 21 [unity_WorldTransformParams]
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   row_major float4x4 _LightMatrix0;
//   float4 _MainTex_ST;
//   row_major float4x4 _Object2World;
//   float _UVSec;
//   row_major float4x4 _World2Object;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 glstate_matrix_mvp;
//   row_major float4x4 unity_World2Shadow[4];
//   float4 unity_WorldTransformParams;
//
//
// Registers:
//
//   Name                       Reg   Size
//   -------------------------- ----- ----
//   unity_World2Shadow         c0       4
//   glstate_matrix_mvp         c4       4
//   _Object2World              c8       4
//   _LightMatrix0              c12      4
//   _World2Object              c16      3
//   _WorldSpaceCameraPos       c19      1
//   _WorldSpaceLightPos0       c20      1
//   unity_WorldTransformParams c21      1
//   _MainTex_ST                c22      1
//   _DetailAlbedoMap_ST        c23      1
//   _UVSec                     c24      1
//

    vs_2_0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_tangent v4
    dp4 oPos.x, c4, v0
    dp4 oPos.y, c5, v0
    dp4 oPos.z, c6, v0
    dp4 oPos.w, c7, v0
    mad oT0.xy, v2, c22, c22.zwzw
    mul r0.x, c24.x, c24.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad oT0.zw, r2.xyxy, c23.xyxy, c23
    dp4 r0.x, c8, v0
    dp4 r0.y, c9, v0
    dp4 r0.z, c10, v0
    add r1.xyz, r0, -c19
    dp3 r1.w, r1, r1
    rsq r1.w, r1.w
    mul oT1.xyz, r1.w, r1
    mul r1.xyz, v1.y, c17
    mad r1.xyz, c16, v1.x, r1
    mad r1.xyz, c18, v1.z, r1
    nrm r2.xyz, r1
    dp3 r1.x, c8, v4
    dp3 r1.y, c9, v4
    dp3 r1.z, c10, v4
    nrm r3.xyz, r1
    mul r1.xyz, r2.zxyw, r3.yzxw
    mad r1.xyz, r2.yzxw, r3.zxyw, -r1
    mov oT4.xyz, r2
    mov oT2.xyz, r3
    mul r1.w, v4.w, c21.w
    mul oT3.xyz, r1.w, r1
    dp4 r0.w, c11, v0
    dp4 oT5.x, c12, r0
    dp4 oT5.y, c13, r0
    dp4 oT5.z, c14, r0
    dp4 oT5.w, c15, r0
    dp4 oT6.x, c0, r0
    dp4 oT6.y, c1, r0
    dp4 oT6.z, c2, r0
    dp4 oT6.w, c3, r0
    mad r0.xyz, r0, -c20.w, c20
    nrm r1.xyz, r0
    mov oT2.w, r1.x
    mov oT3.w, r1.y
    mov oT4.w, r1.z

// approximately 51 instruction slots used
"
}
SubProgram "d3d11 " {
// Stats: 55 math
Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_NATIVE" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
ConstBuffer "$Globals" 304
Matrix 240 [_LightMatrix0]
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
ConstBuffer "UnityShadows" 416
Matrix 128 [unity_World2Shadow0]
Matrix 192 [unity_World2Shadow1]
Matrix 256 [unity_World2Shadow2]
Matrix 320 [unity_World2Shadow3]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
Vector 336 [unity_WorldTransformParams]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityShadows" 3
BindCB  "UnityPerDraw" 4
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer cb0[19], immediateIndexed
      dcl_constantbuffer cb1[5], immediateIndexed
      dcl_constantbuffer cb2[1], immediateIndexed
      dcl_constantbuffer cb3[12], immediateIndexed
      dcl_constantbuffer cb4[22], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb4[1].xyzw
   1: mad r0.xyzw, cb4[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb4[2].xyzw, v0.zzzz, r0.xyzw
   3: mad o0.xyzw, cb4[3].xyzw, v0.wwww, r0.xyzw
   4: eq r0.x, cb0[13].z, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[11].xxxy, cb0[11].zzzw
   7: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   8: mul r0.xyz, v0.yyyy, cb4[13].xyzx
   9: mad r0.xyz, cb4[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb4[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb4[15].xyzx, v0.wwww, r0.xyzx
  12: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  13: mad r0.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  14: dp3 r0.w, r1.xyzx, r1.xyzx
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: dp3 r0.w, r0.xyzx, r0.xyzx
  18: rsq r0.w, r0.w
  19: mul r0.xyz, r0.wwww, r0.xyzx
  20: mov o3.w, r0.x
  21: mul r1.xyz, v4.yyyy, cb4[13].xyzx
  22: mad r1.xyz, cb4[12].xyzx, v4.xxxx, r1.xyzx
  23: mad r1.xyz, cb4[14].xyzx, v4.zzzz, r1.xyzx
  24: dp3 r0.x, r1.xyzx, r1.xyzx
  25: rsq r0.x, r0.x
  26: mul r1.xyz, r0.xxxx, r1.xyzx
  27: mov o3.xyz, r1.xyzx
  28: mul r2.x, v1.x, cb4[16].x
  29: mul r2.y, v1.x, cb4[17].x
  30: mul r2.z, v1.x, cb4[18].x
  31: mul r3.x, v1.y, cb4[16].y
  32: mul r3.y, v1.y, cb4[17].y
  33: mul r3.z, v1.y, cb4[18].y
  34: add r2.xyz, r2.xyzx, r3.xyzx
  35: mul r3.x, v1.z, cb4[16].z
  36: mul r3.y, v1.z, cb4[17].z
  37: mul r3.z, v1.z, cb4[18].z
  38: add r2.xyz, r2.xyzx, r3.xyzx
  39: dp3 r0.x, r2.xyzx, r2.xyzx
  40: rsq r0.x, r0.x
  41: mul r2.xyz, r0.xxxx, r2.xyzx
  42: mul r3.xyz, r1.yzxy, r2.zxyz
  43: mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
  44: mov o5.xyz, r2.xyzx
  45: mul r0.x, v4.w, cb4[21].w
  46: mul o4.xyz, r0.xxxx, r1.xyzx
  47: mov o4.w, r0.y
  48: mov o5.w, r0.z
  49: mul r0.xyzw, v0.yyyy, cb4[13].xyzw
  50: mad r0.xyzw, cb4[12].xyzw, v0.xxxx, r0.xyzw
  51: mad r0.xyzw, cb4[14].xyzw, v0.zzzz, r0.xyzw
  52: mad r0.xyzw, cb4[15].xyzw, v0.wwww, r0.xyzw
  53: mul r1.xyzw, r0.yyyy, cb0[16].xyzw
  54: mad r1.xyzw, cb0[15].xyzw, r0.xxxx, r1.xyzw
  55: mad r1.xyzw, cb0[17].xyzw, r0.zzzz, r1.xyzw
  56: mad o6.xyzw, cb0[18].xyzw, r0.wwww, r1.xyzw
  57: mul r1.xyzw, r0.yyyy, cb3[9].xyzw
  58: mad r1.xyzw, cb3[8].xyzw, r0.xxxx, r1.xyzw
  59: mad r1.xyzw, cb3[10].xyzw, r0.zzzz, r1.xyzw
  60: mad o7.xyzw, cb3[11].xyzw, r0.wwww, r1.xyzw
  61: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "d3d11_9x " {
// Stats: 55 math
Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_NATIVE" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
ConstBuffer "$Globals" 304
Matrix 240 [_LightMatrix0]
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
ConstBuffer "UnityShadows" 416
Matrix 128 [unity_World2Shadow0]
Matrix 192 [unity_World2Shadow1]
Matrix 256 [unity_World2Shadow2]
Matrix 320 [unity_World2Shadow3]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
Vector 336 [unity_WorldTransformParams]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityShadows" 3
BindCB  "UnityPerDraw" 4
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c1         cb0            10         2  ( FLT, FLT, FLT, FLT)
// c3         cb0            13         1  ( FLT, FLT, FLT, FLT)
// c4         cb0            15         4  ( FLT, FLT, FLT, FLT)
// c8         cb1             4         1  ( FLT, FLT, FLT, FLT)
// c9         cb2             0         1  ( FLT, FLT, FLT, FLT)
// c10        cb3             8         4  ( FLT, FLT, FLT, FLT)
// c14        cb4             0         4  ( FLT, FLT, FLT, FLT)
// c18        cb4            12         7  ( FLT, FLT, FLT, FLT)
// c25        cb4            21         1  ( FLT, FLT, FLT, FLT)
//
//
// Runtime generated constant mappings:
//
// Target Reg                               Constant Description
// ---------- --------------------------------------------------
// c0                              Vertex Shader position offset
//
//
// Level9 shader bytecode:
//
    vs_2_0
          dcl_texcoord v0
          dcl_texcoord1 v1
          dcl_texcoord2 v2
          dcl_texcoord3 v3
          dcl_texcoord4 v4
   0:     mad oT0.xy, v2, c1, c1.zwzw
   1:     mul r0.x, c3.z, c3.z
   2:     sge r0.x, -r0.x, r0.x
   3:     mov r1.xy, v2
   4:     lrp r2.xy, r0.x, r1, v3
   5:     mad oT0.zw, r2.xyxy, c2.xyxy, c2
   6:     mul r0.xyz, v0.y, c19
   7:     mad r0.xyz, c18, v0.x, r0
   8:     mad r0.xyz, c20, v0.z, r0
   9:     mad r0.xyz, c21, v0.w, r0
  10:     add r1.xyz, r0, -c8
  11:     mad r0.xyz, r0, -c9.w, c9
  12:     nrm r2.xyz, r0
  15:     dp3 r0.x, r1, r1
  16:     rsq r0.x, r0.x
  17:     mul oT1.xyz, r0.x, r1
  18:     mul r0.x, v1.x, c22.x
  19:     mul r0.y, v1.x, c23.x
  20:     mul r0.z, v1.x, c24.x
  21:     mul r1.x, v1.y, c22.y
  22:     mul r1.y, v1.y, c23.y
  23:     mul r1.z, v1.y, c24.y
  24:     add r0.xyz, r0, r1
  25:     mul r1.x, v1.z, c22.z
  26:     mul r1.y, v1.z, c23.z
  27:     mul r1.z, v1.z, c24.z
  28:     add r0.xyz, r0, r1
  29:     nrm r1.xyz, r0
  32:     mul r0.xyz, v4.y, c19
  33:     mad r0.xyz, c18, v4.x, r0
  34:     mad r0.xyz, c20, v4.z, r0
  35:     nrm r3.xyz, r0
  38:     mul r0.xyz, r1.zxyw, r3.yzxw
  39:     mad r0.xyz, r1.yzxw, r3.zxyw, -r0
  40:     mov oT4.xyz, r1
  41:     mov oT2.xyz, r3
  42:     mul r0.w, v4.w, c25.w
  43:     mul oT3.xyz, r0.w, r0
  44:     mul r0, v0.y, c19
  45:     mad r0, c18, v0.x, r0
  46:     mad r0, c20, v0.z, r0
  47:     mad r0, c21, v0.w, r0
  48:     mul r1, r0.y, c5
  49:     mad r1, c4, r0.x, r1
  50:     mad r1, c6, r0.z, r1
  51:     mad oT5, c7, r0.w, r1
  52:     mul r1, r0.y, c11
  53:     mad r1, c10, r0.x, r1
  54:     mad r1, c12, r0.z, r1
  55:     mad oT6, c13, r0.w, r1
  56:     mul r0, v0.y, c15
  57:     mad r0, c14, v0.x, r0
  58:     mad r0, c16, v0.z, r0
  59:     mad r0, c17, v0.w, r0
  60:     mad oPos.xy, r0.w, c0, r0
  61:     mov oPos.zw, r0
  62:     mov oT2.w, r2.x
  63:     mov oT3.w, r2.y
  64:     mov oT4.w, r2.z

// approximately 65 instruction slots used
      vs_4_0
      dcl_constantbuffer cb0[19], immediateIndexed
      dcl_constantbuffer cb1[5], immediateIndexed
      dcl_constantbuffer cb2[1], immediateIndexed
      dcl_constantbuffer cb3[12], immediateIndexed
      dcl_constantbuffer cb4[22], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb4[1].xyzw
   1: mad r0.xyzw, cb4[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb4[2].xyzw, v0.zzzz, r0.xyzw
   3: mad o0.xyzw, cb4[3].xyzw, v0.wwww, r0.xyzw
   4: eq r0.x, cb0[13].z, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[11].xxxy, cb0[11].zzzw
   7: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   8: mul r0.xyz, v0.yyyy, cb4[13].xyzx
   9: mad r0.xyz, cb4[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb4[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb4[15].xyzx, v0.wwww, r0.xyzx
  12: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  13: mad r0.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  14: dp3 r0.w, r1.xyzx, r1.xyzx
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: dp3 r0.w, r0.xyzx, r0.xyzx
  18: rsq r0.w, r0.w
  19: mul r0.xyz, r0.wwww, r0.xyzx
  20: mov o3.w, r0.x
  21: mul r1.xyz, v4.yyyy, cb4[13].xyzx
  22: mad r1.xyz, cb4[12].xyzx, v4.xxxx, r1.xyzx
  23: mad r1.xyz, cb4[14].xyzx, v4.zzzz, r1.xyzx
  24: dp3 r0.x, r1.xyzx, r1.xyzx
  25: rsq r0.x, r0.x
  26: mul r1.xyz, r0.xxxx, r1.xyzx
  27: mov o3.xyz, r1.xyzx
  28: mul r2.x, v1.x, cb4[16].x
  29: mul r2.y, v1.x, cb4[17].x
  30: mul r2.z, v1.x, cb4[18].x
  31: mul r3.x, v1.y, cb4[16].y
  32: mul r3.y, v1.y, cb4[17].y
  33: mul r3.z, v1.y, cb4[18].y
  34: add r2.xyz, r2.xyzx, r3.xyzx
  35: mul r3.x, v1.z, cb4[16].z
  36: mul r3.y, v1.z, cb4[17].z
  37: mul r3.z, v1.z, cb4[18].z
  38: add r2.xyz, r2.xyzx, r3.xyzx
  39: dp3 r0.x, r2.xyzx, r2.xyzx
  40: rsq r0.x, r0.x
  41: mul r2.xyz, r0.xxxx, r2.xyzx
  42: mul r3.xyz, r1.yzxy, r2.zxyz
  43: mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
  44: mov o5.xyz, r2.xyzx
  45: mul r0.x, v4.w, cb4[21].w
  46: mul o4.xyz, r0.xxxx, r1.xyzx
  47: mov o4.w, r0.y
  48: mov o5.w, r0.z
  49: mul r0.xyzw, v0.yyyy, cb4[13].xyzw
  50: mad r0.xyzw, cb4[12].xyzw, v0.xxxx, r0.xyzw
  51: mad r0.xyzw, cb4[14].xyzw, v0.zzzz, r0.xyzw
  52: mad r0.xyzw, cb4[15].xyzw, v0.wwww, r0.xyzw
  53: mul r1.xyzw, r0.yyyy, cb0[16].xyzw
  54: mad r1.xyzw, cb0[15].xyzw, r0.xxxx, r1.xyzw
  55: mad r1.xyzw, cb0[17].xyzw, r0.zzzz, r1.xyzw
  56: mad o6.xyzw, cb0[18].xyzw, r0.wwww, r1.xyzw
  57: mul r1.xyzw, r0.yyyy, cb3[9].xyzw
  58: mad r1.xyzw, cb3[8].xyzw, r0.xxxx, r1.xyzw
  59: mad r1.xyzw, cb3[10].xyzw, r0.zzzz, r1.xyzw
  60: mad o7.xyzw, cb3[11].xyzw, r0.wwww, r1.xyzw
  61: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
// Stats: 29 math, 3 textures
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
"#version 120

#ifdef VERTEX
uniform vec3 _WorldSpaceCameraPos;
uniform vec4 _ProjectionParams;
uniform vec4 _WorldSpaceLightPos0;

uniform mat4 _Object2World;
uniform mat4 _World2Object;
uniform vec4 unity_WorldTransformParams;
uniform vec4 _MainTex_ST;
uniform vec4 _DetailAlbedoMap_ST;
uniform float _UVSec;
attribute vec4 TANGENT;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
void main ()
{
  vec2 tmpvar_1;
  tmpvar_1 = gl_MultiTexCoord0.xy;
  vec2 tmpvar_2;
  tmpvar_2 = gl_MultiTexCoord1.xy;
  vec4 tmpvar_3;
  vec4 tmpvar_4;
  vec4 tmpvar_5;
  vec4 tmpvar_6;
  vec4 tmpvar_7;
  tmpvar_7 = (_Object2World * gl_Vertex);
  tmpvar_3 = (gl_ModelViewProjectionMatrix * gl_Vertex);
  vec4 texcoord_8;
  texcoord_8.xy = ((gl_MultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  vec2 tmpvar_9;
  if ((_UVSec == 0.0)) {
    tmpvar_9 = tmpvar_1;
  } else {
    tmpvar_9 = tmpvar_2;
  };
  texcoord_8.zw = ((tmpvar_9 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  vec4 v_10;
  v_10.x = _World2Object[0].x;
  v_10.y = _World2Object[1].x;
  v_10.z = _World2Object[2].x;
  v_10.w = _World2Object[3].x;
  vec4 v_11;
  v_11.x = _World2Object[0].y;
  v_11.y = _World2Object[1].y;
  v_11.z = _World2Object[2].y;
  v_11.w = _World2Object[3].y;
  vec4 v_12;
  v_12.x = _World2Object[0].z;
  v_12.y = _World2Object[1].z;
  v_12.z = _World2Object[2].z;
  v_12.w = _World2Object[3].z;
  vec3 tmpvar_13;
  tmpvar_13 = normalize(((
    (v_10.xyz * gl_Normal.x)
   + 
    (v_11.xyz * gl_Normal.y)
  ) + (v_12.xyz * gl_Normal.z)));
  mat3 tmpvar_14;
  tmpvar_14[0] = _Object2World[0].xyz;
  tmpvar_14[1] = _Object2World[1].xyz;
  tmpvar_14[2] = _Object2World[2].xyz;
  vec4 tmpvar_15;
  tmpvar_15.xyz = normalize((tmpvar_14 * TANGENT.xyz));
  tmpvar_15.w = TANGENT.w;
  vec3 tmpvar_16;
  vec3 tmpvar_17;
  tmpvar_16 = tmpvar_15.xyz;
  tmpvar_17 = (((tmpvar_13.yzx * tmpvar_15.zxy) - (tmpvar_13.zxy * tmpvar_15.yzx)) * (TANGENT.w * unity_WorldTransformParams.w));
  vec3 tmpvar_18;
  vec3 tmpvar_19;
  vec3 tmpvar_20;
  tmpvar_18.x = tmpvar_16.x;
  tmpvar_18.y = tmpvar_17.x;
  tmpvar_18.z = tmpvar_13.x;
  tmpvar_19.x = tmpvar_16.y;
  tmpvar_19.y = tmpvar_17.y;
  tmpvar_19.z = tmpvar_13.y;
  tmpvar_20.x = tmpvar_16.z;
  tmpvar_20.y = tmpvar_17.z;
  tmpvar_20.z = tmpvar_13.z;
  vec3 v_21;
  v_21.x = tmpvar_18.x;
  v_21.y = tmpvar_19.x;
  v_21.z = tmpvar_20.x;
  tmpvar_4.xyz = v_21;
  vec3 v_22;
  v_22.x = tmpvar_18.y;
  v_22.y = tmpvar_19.y;
  v_22.z = tmpvar_20.y;
  tmpvar_5.xyz = v_22;
  vec3 v_23;
  v_23.x = tmpvar_18.z;
  v_23.y = tmpvar_19.z;
  v_23.z = tmpvar_20.z;
  tmpvar_6.xyz = v_23;
  vec4 o_24;
  vec4 tmpvar_25;
  tmpvar_25 = (tmpvar_3 * 0.5);
  vec2 tmpvar_26;
  tmpvar_26.x = tmpvar_25.x;
  tmpvar_26.y = (tmpvar_25.y * _ProjectionParams.x);
  o_24.xy = (tmpvar_26 + tmpvar_25.w);
  o_24.zw = tmpvar_3.zw;
  vec3 tmpvar_27;
  tmpvar_27 = (_WorldSpaceLightPos0.xyz - (tmpvar_7.xyz * _WorldSpaceLightPos0.w));
  tmpvar_4.w = tmpvar_27.x;
  tmpvar_5.w = tmpvar_27.y;
  tmpvar_6.w = tmpvar_27.z;
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = texcoord_8;
  xlv_TEXCOORD1 = normalize((tmpvar_7.xyz - _WorldSpaceCameraPos));
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  xlv_TEXCOORD5 = o_24;
}


#endif
#ifdef FRAGMENT
uniform vec4 unity_ColorSpaceDielectricSpec;
uniform vec4 _LightColor0;
uniform sampler2D unity_NHxRoughness;
uniform vec4 _Color;
uniform sampler2D _MainTex;
uniform float _Metallic;
uniform float _Glossiness;
uniform sampler2D _ShadowMapTexture;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
void main ()
{
  vec3 tmpvar_1;
  tmpvar_1 = (_Color.xyz * texture2D (_MainTex, xlv_TEXCOORD0.xy).xyz);
  vec3 tmpvar_2;
  tmpvar_2 = normalize(xlv_TEXCOORD2_2.xyz);
  vec3 tmpvar_3;
  tmpvar_3.x = xlv_TEXCOORD2.w;
  tmpvar_3.y = xlv_TEXCOORD2_1.w;
  tmpvar_3.z = xlv_TEXCOORD2_2.w;
  vec3 viewDir_4;
  viewDir_4 = -(xlv_TEXCOORD1);
  vec2 tmpvar_5;
  tmpvar_5.x = dot ((viewDir_4 - (2.0 * 
    (dot (tmpvar_2, viewDir_4) * tmpvar_2)
  )), tmpvar_3);
  tmpvar_5.y = (1.0 - clamp (dot (tmpvar_2, viewDir_4), 0.0, 1.0));
  vec2 tmpvar_6;
  tmpvar_6.x = ((tmpvar_5 * tmpvar_5) * (tmpvar_5 * tmpvar_5)).x;
  tmpvar_6.y = (1.0 - _Glossiness);
  vec4 tmpvar_7;
  tmpvar_7.w = 1.0;
  tmpvar_7.xyz = (((tmpvar_1 * 
    (unity_ColorSpaceDielectricSpec.w - (_Metallic * unity_ColorSpaceDielectricSpec.w))
  ) + (
    (texture2D (unity_NHxRoughness, tmpvar_6).w * 16.0)
   * 
    mix (unity_ColorSpaceDielectricSpec.xyz, tmpvar_1, vec3(_Metallic))
  )) * ((_LightColor0.xyz * texture2DProj (_ShadowMapTexture, xlv_TEXCOORD5).x) * clamp (
    dot (tmpvar_2, tmpvar_3)
  , 0.0, 1.0)));
  vec4 xlat_varoutput_8;
  xlat_varoutput_8.xyz = tmpvar_7.xyz;
  xlat_varoutput_8.w = 1.0;
  gl_FragData[0] = xlat_varoutput_8;
}


#endif
"
}
SubProgram "d3d9 " {
// Stats: 46 math
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
Matrix 4 [_Object2World] 3
Matrix 7 [_World2Object] 3
Matrix 0 [glstate_matrix_mvp]
Vector 16 [_DetailAlbedoMap_ST]
Vector 15 [_MainTex_ST]
Vector 11 [_ProjectionParams]
Vector 12 [_ScreenParams]
Float 17 [_UVSec]
Vector 10 [_WorldSpaceCameraPos]
Vector 13 [_WorldSpaceLightPos0]
Vector 14 [unity_WorldTransformParams]
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   row_major float4x4 _Object2World;
//   float4 _ProjectionParams;
//   float4 _ScreenParams;
//   float _UVSec;
//   row_major float4x4 _World2Object;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 glstate_matrix_mvp;
//   float4 unity_WorldTransformParams;
//
//
// Registers:
//
//   Name                       Reg   Size
//   -------------------------- ----- ----
//   glstate_matrix_mvp         c0       4
//   _Object2World              c4       3
//   _World2Object              c7       3
//   _WorldSpaceCameraPos       c10      1
//   _ProjectionParams          c11      1
//   _ScreenParams              c12      1
//   _WorldSpaceLightPos0       c13      1
//   unity_WorldTransformParams c14      1
//   _MainTex_ST                c15      1
//   _DetailAlbedoMap_ST        c16      1
//   _UVSec                     c17      1
//

    vs_2_0
    def c18, 0.5, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_tangent v4
    mad oT0.xy, v2, c15, c15.zwzw
    mul r0.x, c17.x, c17.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad oT0.zw, r2.xyxy, c16.xyxy, c16
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add r1.xyz, r0, -c10
    mad r0.xyz, r0, -c13.w, c13
    dp3 r0.w, r1, r1
    rsq r0.w, r0.w
    mul oT1.xyz, r0.w, r1
    mul r1.xyz, v1.y, c8
    mad r1.xyz, c7, v1.x, r1
    mad r1.xyz, c9, v1.z, r1
    nrm r2.xyz, r1
    dp3 r1.x, c4, v4
    dp3 r1.y, c5, v4
    dp3 r1.z, c6, v4
    nrm r3.xyz, r1
    mul r1.xyz, r2.zxyw, r3.yzxw
    mad r1.xyz, r2.yzxw, r3.zxyw, -r1
    mov oT4.xyz, r2
    mov oT2.xyz, r3
    mul r0.w, v4.w, c14.w
    mul oT3.xyz, r0.w, r1
    dp4 r1.y, c1, v0
    mul r0.w, r1.y, c11.x
    mul r2.w, r0.w, c18.x
    dp4 r1.x, c0, v0
    dp4 r1.w, c3, v0
    mul r2.xz, r1.xyww, c18.x
    mad oT5.xy, r2.z, c12.zwzw, r2.xwzw
    dp4 r1.z, c2, v0
    mov oPos, r1
    mov oT5.zw, r1
    mov oT2.w, r0.x
    mov oT3.w, r0.y
    mov oT4.w, r0.z

// approximately 45 instruction slots used
"
}
SubProgram "d3d11 " {
// Stats: 43 math
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
ConstBuffer "$Globals" 240
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
Vector 80 [_ProjectionParams]
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
Vector 336 [unity_WorldTransformParams]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer cb0[14], immediateIndexed
      dcl_constantbuffer cb1[6], immediateIndexed
      dcl_constantbuffer cb2[1], immediateIndexed
      dcl_constantbuffer cb3[22], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 5
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   4: mov o0.xyzw, r0.xyzw
   5: eq r1.x, cb0[13].z, l(0.000000)
   6: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
   7: mad o1.zw, r1.xxxy, cb0[11].xxxy, cb0[11].zzzw
   8: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   9: mul r1.xyz, v0.yyyy, cb3[13].xyzx
  10: mad r1.xyz, cb3[12].xyzx, v0.xxxx, r1.xyzx
  11: mad r1.xyz, cb3[14].xyzx, v0.zzzz, r1.xyzx
  12: mad r1.xyz, cb3[15].xyzx, v0.wwww, r1.xyzx
  13: add r2.xyz, r1.xyzx, -cb1[4].xyzx
  14: mad r1.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  15: dp3 r1.w, r2.xyzx, r2.xyzx
  16: rsq r1.w, r1.w
  17: mul o2.xyz, r1.wwww, r2.xyzx
  18: mov o3.w, r1.x
  19: mul r2.xyz, v4.yyyy, cb3[13].xyzx
  20: mad r2.xyz, cb3[12].xyzx, v4.xxxx, r2.xyzx
  21: mad r2.xyz, cb3[14].xyzx, v4.zzzz, r2.xyzx
  22: dp3 r1.x, r2.xyzx, r2.xyzx
  23: rsq r1.x, r1.x
  24: mul r2.xyz, r1.xxxx, r2.xyzx
  25: mov o3.xyz, r2.xyzx
  26: mul r3.x, v1.x, cb3[16].x
  27: mul r3.y, v1.x, cb3[17].x
  28: mul r3.z, v1.x, cb3[18].x
  29: mul r4.x, v1.y, cb3[16].y
  30: mul r4.y, v1.y, cb3[17].y
  31: mul r4.z, v1.y, cb3[18].y
  32: add r3.xyz, r3.xyzx, r4.xyzx
  33: mul r4.x, v1.z, cb3[16].z
  34: mul r4.y, v1.z, cb3[17].z
  35: mul r4.z, v1.z, cb3[18].z
  36: add r3.xyz, r3.xyzx, r4.xyzx
  37: dp3 r1.x, r3.xyzx, r3.xyzx
  38: rsq r1.x, r1.x
  39: mul r3.xyz, r1.xxxx, r3.xyzx
  40: mul r4.xyz, r2.yzxy, r3.zxyz
  41: mad r2.xyz, r3.yzxy, r2.zxyz, -r4.xyzx
  42: mov o5.xyz, r3.xyzx
  43: mul r1.x, v4.w, cb3[21].w
  44: mul o4.xyz, r1.xxxx, r2.xyzx
  45: mov o4.w, r1.y
  46: mov o5.w, r1.z
  47: mul r0.y, r0.y, cb1[5].x
  48: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  49: mov o6.zw, r0.zzzw
  50: add o6.xy, r1.zzzz, r1.xwxx
  51: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "d3d11_9x " {
// Stats: 43 math
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
ConstBuffer "$Globals" 240
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
Vector 80 [_ProjectionParams]
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
Vector 336 [unity_WorldTransformParams]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c1         cb0            10         2  ( FLT, FLT, FLT, FLT)
// c3         cb0            13         1  ( FLT, FLT, FLT, FLT)
// c4         cb1             4         2  ( FLT, FLT, FLT, FLT)
// c6         cb2             0         1  ( FLT, FLT, FLT, FLT)
// c7         cb3             0         4  ( FLT, FLT, FLT, FLT)
// c11        cb3            12         7  ( FLT, FLT, FLT, FLT)
// c18        cb3            21         1  ( FLT, FLT, FLT, FLT)
//
//
// Runtime generated constant mappings:
//
// Target Reg                               Constant Description
// ---------- --------------------------------------------------
// c0                              Vertex Shader position offset
//
//
// Level9 shader bytecode:
//
    vs_2_0
          def c19, 0.5, 0, 0, 0
          dcl_texcoord v0
          dcl_texcoord1 v1
          dcl_texcoord2 v2
          dcl_texcoord3 v3
          dcl_texcoord4 v4
   0:     mad oT0.xy, v2, c1, c1.zwzw
   1:     mul r0.x, c3.z, c3.z
   2:     sge r0.x, -r0.x, r0.x
   3:     mov r1.xy, v2
   4:     lrp r2.xy, r0.x, r1, v3
   5:     mad oT0.zw, r2.xyxy, c2.xyxy, c2
   6:     mul r0.xyz, v0.y, c12
   7:     mad r0.xyz, c11, v0.x, r0
   8:     mad r0.xyz, c13, v0.z, r0
   9:     mad r0.xyz, c14, v0.w, r0
  10:     add r1.xyz, r0, -c4
  11:     mad r0.xyz, r0, -c6.w, c6
  12:     dp3 r0.w, r1, r1
  13:     rsq r0.w, r0.w
  14:     mul oT1.xyz, r0.w, r1
  15:     mul r1.x, v1.x, c15.x
  16:     mul r1.y, v1.x, c16.x
  17:     mul r1.z, v1.x, c17.x
  18:     mul r2.x, v1.y, c15.y
  19:     mul r2.y, v1.y, c16.y
  20:     mul r2.z, v1.y, c17.y
  21:     add r1.xyz, r1, r2
  22:     mul r2.x, v1.z, c15.z
  23:     mul r2.y, v1.z, c16.z
  24:     mul r2.z, v1.z, c17.z
  25:     add r1.xyz, r1, r2
  26:     nrm r2.xyz, r1
  29:     mul r1.xyz, v4.y, c12
  30:     mad r1.xyz, c11, v4.x, r1
  31:     mad r1.xyz, c13, v4.z, r1
  32:     nrm r3.xyz, r1
  35:     mul r1.xyz, r2.zxyw, r3.yzxw
  36:     mad r1.xyz, r2.yzxw, r3.zxyw, -r1
  37:     mov oT4.xyz, r2
  38:     mov oT2.xyz, r3
  39:     mul r0.w, v4.w, c18.w
  40:     mul oT3.xyz, r0.w, r1
  41:     mul r1, v0.y, c8
  42:     mad r1, c7, v0.x, r1
  43:     mad r1, c9, v0.z, r1
  44:     mad r1, c10, v0.w, r1
  45:     mul r0.w, r1.y, c5.x
  46:     mul r2.w, r0.w, c19.x
  47:     mul r2.xz, r1.xyww, c19.x
  48:     add oT5.xy, r2.z, r2.xwzw
  49:     mad oPos.xy, r1.w, c0, r1
  50:     mov oPos.zw, r1
  51:     mov oT5.zw, r1
  52:     mov oT2.w, r0.x
  53:     mov oT3.w, r0.y
  54:     mov oT4.w, r0.z

// approximately 55 instruction slots used
      vs_4_0
      dcl_constantbuffer cb0[14], immediateIndexed
      dcl_constantbuffer cb1[6], immediateIndexed
      dcl_constantbuffer cb2[1], immediateIndexed
      dcl_constantbuffer cb3[22], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 5
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   4: mov o0.xyzw, r0.xyzw
   5: eq r1.x, cb0[13].z, l(0.000000)
   6: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
   7: mad o1.zw, r1.xxxy, cb0[11].xxxy, cb0[11].zzzw
   8: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   9: mul r1.xyz, v0.yyyy, cb3[13].xyzx
  10: mad r1.xyz, cb3[12].xyzx, v0.xxxx, r1.xyzx
  11: mad r1.xyz, cb3[14].xyzx, v0.zzzz, r1.xyzx
  12: mad r1.xyz, cb3[15].xyzx, v0.wwww, r1.xyzx
  13: add r2.xyz, r1.xyzx, -cb1[4].xyzx
  14: mad r1.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  15: dp3 r1.w, r2.xyzx, r2.xyzx
  16: rsq r1.w, r1.w
  17: mul o2.xyz, r1.wwww, r2.xyzx
  18: mov o3.w, r1.x
  19: mul r2.xyz, v4.yyyy, cb3[13].xyzx
  20: mad r2.xyz, cb3[12].xyzx, v4.xxxx, r2.xyzx
  21: mad r2.xyz, cb3[14].xyzx, v4.zzzz, r2.xyzx
  22: dp3 r1.x, r2.xyzx, r2.xyzx
  23: rsq r1.x, r1.x
  24: mul r2.xyz, r1.xxxx, r2.xyzx
  25: mov o3.xyz, r2.xyzx
  26: mul r3.x, v1.x, cb3[16].x
  27: mul r3.y, v1.x, cb3[17].x
  28: mul r3.z, v1.x, cb3[18].x
  29: mul r4.x, v1.y, cb3[16].y
  30: mul r4.y, v1.y, cb3[17].y
  31: mul r4.z, v1.y, cb3[18].y
  32: add r3.xyz, r3.xyzx, r4.xyzx
  33: mul r4.x, v1.z, cb3[16].z
  34: mul r4.y, v1.z, cb3[17].z
  35: mul r4.z, v1.z, cb3[18].z
  36: add r3.xyz, r3.xyzx, r4.xyzx
  37: dp3 r1.x, r3.xyzx, r3.xyzx
  38: rsq r1.x, r1.x
  39: mul r3.xyz, r1.xxxx, r3.xyzx
  40: mul r4.xyz, r2.yzxy, r3.zxyz
  41: mad r2.xyz, r3.yzxy, r2.zxyz, -r4.xyzx
  42: mov o5.xyz, r3.xyzx
  43: mul r1.x, v4.w, cb3[21].w
  44: mul o4.xyz, r1.xxxx, r2.xyzx
  45: mov o4.w, r1.y
  46: mov o5.w, r1.z
  47: mul r0.y, r0.y, cb1[5].x
  48: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  49: mov o6.zw, r0.zzzw
  50: add o6.xy, r1.zzzz, r1.xwxx
  51: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
// Stats: 30 math, 4 textures
Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" }
"#version 120

#ifdef VERTEX
uniform vec3 _WorldSpaceCameraPos;
uniform vec4 _ProjectionParams;
uniform vec4 _WorldSpaceLightPos0;

uniform mat4 _Object2World;
uniform mat4 _World2Object;
uniform vec4 unity_WorldTransformParams;
uniform vec4 _MainTex_ST;
uniform vec4 _DetailAlbedoMap_ST;
uniform float _UVSec;
uniform mat4 _LightMatrix0;
attribute vec4 TANGENT;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec2 xlv_TEXCOORD5;
varying vec4 xlv_TEXCOORD6;
void main ()
{
  vec2 tmpvar_1;
  tmpvar_1 = gl_MultiTexCoord0.xy;
  vec2 tmpvar_2;
  tmpvar_2 = gl_MultiTexCoord1.xy;
  vec4 tmpvar_3;
  vec4 tmpvar_4;
  vec4 tmpvar_5;
  vec4 tmpvar_6;
  vec4 tmpvar_7;
  tmpvar_7 = (_Object2World * gl_Vertex);
  tmpvar_3 = (gl_ModelViewProjectionMatrix * gl_Vertex);
  vec4 texcoord_8;
  texcoord_8.xy = ((gl_MultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  vec2 tmpvar_9;
  if ((_UVSec == 0.0)) {
    tmpvar_9 = tmpvar_1;
  } else {
    tmpvar_9 = tmpvar_2;
  };
  texcoord_8.zw = ((tmpvar_9 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  vec4 v_10;
  v_10.x = _World2Object[0].x;
  v_10.y = _World2Object[1].x;
  v_10.z = _World2Object[2].x;
  v_10.w = _World2Object[3].x;
  vec4 v_11;
  v_11.x = _World2Object[0].y;
  v_11.y = _World2Object[1].y;
  v_11.z = _World2Object[2].y;
  v_11.w = _World2Object[3].y;
  vec4 v_12;
  v_12.x = _World2Object[0].z;
  v_12.y = _World2Object[1].z;
  v_12.z = _World2Object[2].z;
  v_12.w = _World2Object[3].z;
  vec3 tmpvar_13;
  tmpvar_13 = normalize(((
    (v_10.xyz * gl_Normal.x)
   + 
    (v_11.xyz * gl_Normal.y)
  ) + (v_12.xyz * gl_Normal.z)));
  mat3 tmpvar_14;
  tmpvar_14[0] = _Object2World[0].xyz;
  tmpvar_14[1] = _Object2World[1].xyz;
  tmpvar_14[2] = _Object2World[2].xyz;
  vec4 tmpvar_15;
  tmpvar_15.xyz = normalize((tmpvar_14 * TANGENT.xyz));
  tmpvar_15.w = TANGENT.w;
  vec3 tmpvar_16;
  vec3 tmpvar_17;
  tmpvar_16 = tmpvar_15.xyz;
  tmpvar_17 = (((tmpvar_13.yzx * tmpvar_15.zxy) - (tmpvar_13.zxy * tmpvar_15.yzx)) * (TANGENT.w * unity_WorldTransformParams.w));
  vec3 tmpvar_18;
  vec3 tmpvar_19;
  vec3 tmpvar_20;
  tmpvar_18.x = tmpvar_16.x;
  tmpvar_18.y = tmpvar_17.x;
  tmpvar_18.z = tmpvar_13.x;
  tmpvar_19.x = tmpvar_16.y;
  tmpvar_19.y = tmpvar_17.y;
  tmpvar_19.z = tmpvar_13.y;
  tmpvar_20.x = tmpvar_16.z;
  tmpvar_20.y = tmpvar_17.z;
  tmpvar_20.z = tmpvar_13.z;
  vec3 v_21;
  v_21.x = tmpvar_18.x;
  v_21.y = tmpvar_19.x;
  v_21.z = tmpvar_20.x;
  tmpvar_4.xyz = v_21;
  vec3 v_22;
  v_22.x = tmpvar_18.y;
  v_22.y = tmpvar_19.y;
  v_22.z = tmpvar_20.y;
  tmpvar_5.xyz = v_22;
  vec3 v_23;
  v_23.x = tmpvar_18.z;
  v_23.y = tmpvar_19.z;
  v_23.z = tmpvar_20.z;
  tmpvar_6.xyz = v_23;
  vec4 o_24;
  vec4 tmpvar_25;
  tmpvar_25 = (tmpvar_3 * 0.5);
  vec2 tmpvar_26;
  tmpvar_26.x = tmpvar_25.x;
  tmpvar_26.y = (tmpvar_25.y * _ProjectionParams.x);
  o_24.xy = (tmpvar_26 + tmpvar_25.w);
  o_24.zw = tmpvar_3.zw;
  vec3 tmpvar_27;
  tmpvar_27 = (_WorldSpaceLightPos0.xyz - (tmpvar_7.xyz * _WorldSpaceLightPos0.w));
  tmpvar_4.w = tmpvar_27.x;
  tmpvar_5.w = tmpvar_27.y;
  tmpvar_6.w = tmpvar_27.z;
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = texcoord_8;
  xlv_TEXCOORD1 = normalize((tmpvar_7.xyz - _WorldSpaceCameraPos));
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  xlv_TEXCOORD5 = (_LightMatrix0 * (_Object2World * gl_Vertex)).xy;
  xlv_TEXCOORD6 = o_24;
}


#endif
#ifdef FRAGMENT
uniform vec4 unity_ColorSpaceDielectricSpec;
uniform vec4 _LightColor0;
uniform sampler2D unity_NHxRoughness;
uniform vec4 _Color;
uniform sampler2D _MainTex;
uniform float _Metallic;
uniform float _Glossiness;
uniform sampler2D _ShadowMapTexture;
uniform sampler2D _LightTexture0;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec2 xlv_TEXCOORD5;
varying vec4 xlv_TEXCOORD6;
void main ()
{
  vec3 tmpvar_1;
  tmpvar_1 = (_Color.xyz * texture2D (_MainTex, xlv_TEXCOORD0.xy).xyz);
  vec3 tmpvar_2;
  tmpvar_2 = normalize(xlv_TEXCOORD2_2.xyz);
  vec3 tmpvar_3;
  tmpvar_3.x = xlv_TEXCOORD2.w;
  tmpvar_3.y = xlv_TEXCOORD2_1.w;
  tmpvar_3.z = xlv_TEXCOORD2_2.w;
  vec3 viewDir_4;
  viewDir_4 = -(xlv_TEXCOORD1);
  vec2 tmpvar_5;
  tmpvar_5.x = dot ((viewDir_4 - (2.0 * 
    (dot (tmpvar_2, viewDir_4) * tmpvar_2)
  )), tmpvar_3);
  tmpvar_5.y = (1.0 - clamp (dot (tmpvar_2, viewDir_4), 0.0, 1.0));
  vec2 tmpvar_6;
  tmpvar_6.x = ((tmpvar_5 * tmpvar_5) * (tmpvar_5 * tmpvar_5)).x;
  tmpvar_6.y = (1.0 - _Glossiness);
  vec4 tmpvar_7;
  tmpvar_7.w = 1.0;
  tmpvar_7.xyz = (((tmpvar_1 * 
    (unity_ColorSpaceDielectricSpec.w - (_Metallic * unity_ColorSpaceDielectricSpec.w))
  ) + (
    (texture2D (unity_NHxRoughness, tmpvar_6).w * 16.0)
   * 
    mix (unity_ColorSpaceDielectricSpec.xyz, tmpvar_1, vec3(_Metallic))
  )) * ((_LightColor0.xyz * 
    (texture2D (_LightTexture0, xlv_TEXCOORD5).w * texture2DProj (_ShadowMapTexture, xlv_TEXCOORD6).x)
  ) * clamp (
    dot (tmpvar_2, tmpvar_3)
  , 0.0, 1.0)));
  vec4 xlat_varoutput_8;
  xlat_varoutput_8.xyz = tmpvar_7.xyz;
  xlat_varoutput_8.w = 1.0;
  gl_FragData[0] = xlat_varoutput_8;
}


#endif
"
}
SubProgram "d3d9 " {
// Stats: 49 math
Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
Matrix 11 [_LightMatrix0] 2
Matrix 4 [_Object2World]
Matrix 8 [_World2Object] 3
Matrix 0 [glstate_matrix_mvp]
Vector 19 [_DetailAlbedoMap_ST]
Vector 18 [_MainTex_ST]
Vector 14 [_ProjectionParams]
Vector 15 [_ScreenParams]
Float 20 [_UVSec]
Vector 13 [_WorldSpaceCameraPos]
Vector 16 [_WorldSpaceLightPos0]
Vector 17 [unity_WorldTransformParams]
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   row_major float4x4 _LightMatrix0;
//   float4 _MainTex_ST;
//   row_major float4x4 _Object2World;
//   float4 _ProjectionParams;
//   float4 _ScreenParams;
//   float _UVSec;
//   row_major float4x4 _World2Object;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 glstate_matrix_mvp;
//   float4 unity_WorldTransformParams;
//
//
// Registers:
//
//   Name                       Reg   Size
//   -------------------------- ----- ----
//   glstate_matrix_mvp         c0       4
//   _Object2World              c4       4
//   _World2Object              c8       3
//   _LightMatrix0              c11      2
//   _WorldSpaceCameraPos       c13      1
//   _ProjectionParams          c14      1
//   _ScreenParams              c15      1
//   _WorldSpaceLightPos0       c16      1
//   unity_WorldTransformParams c17      1
//   _MainTex_ST                c18      1
//   _DetailAlbedoMap_ST        c19      1
//   _UVSec                     c20      1
//

    vs_2_0
    def c21, 0.5, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_tangent v4
    mad oT0.xy, v2, c18, c18.zwzw
    mul r0.x, c20.x, c20.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad oT0.zw, r2.xyxy, c19.xyxy, c19
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add r1.xyz, r0, -c13
    dp3 r1.w, r1, r1
    rsq r1.w, r1.w
    mul oT1.xyz, r1.w, r1
    mul r1.xyz, v1.y, c9
    mad r1.xyz, c8, v1.x, r1
    mad r1.xyz, c10, v1.z, r1
    nrm r2.xyz, r1
    dp3 r1.x, c4, v4
    dp3 r1.y, c5, v4
    dp3 r1.z, c6, v4
    nrm r3.xyz, r1
    mul r1.xyz, r2.zxyw, r3.yzxw
    mad r1.xyz, r2.yzxw, r3.zxyw, -r1
    mov oT4.xyz, r2
    mov oT2.xyz, r3
    mul r1.w, v4.w, c17.w
    mul oT3.xyz, r1.w, r1
    dp4 r0.w, c7, v0
    dp4 oT5.x, c11, r0
    dp4 oT5.y, c12, r0
    mad r0.xyz, r0, -c16.w, c16
    dp4 r1.y, c1, v0
    mul r0.w, r1.y, c14.x
    mul r2.w, r0.w, c21.x
    dp4 r1.x, c0, v0
    dp4 r1.w, c3, v0
    mul r2.xz, r1.xyww, c21.x
    mad oT6.xy, r2.z, c15.zwzw, r2.xwzw
    dp4 r1.z, c2, v0
    mov oPos, r1
    mov oT6.zw, r1
    mov oT2.w, r0.x
    mov oT3.w, r0.y
    mov oT4.w, r0.z

// approximately 48 instruction slots used
"
}
SubProgram "d3d11 " {
// Stats: 51 math
Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
ConstBuffer "$Globals" 304
Matrix 240 [_LightMatrix0]
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
Vector 80 [_ProjectionParams]
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
Vector 336 [unity_WorldTransformParams]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer cb0[19], immediateIndexed
      dcl_constantbuffer cb1[6], immediateIndexed
      dcl_constantbuffer cb2[1], immediateIndexed
      dcl_constantbuffer cb3[22], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xy
      dcl_output o7.xyzw
      dcl_temps 5
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   4: mov o0.xyzw, r0.xyzw
   5: eq r1.x, cb0[13].z, l(0.000000)
   6: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
   7: mad o1.zw, r1.xxxy, cb0[11].xxxy, cb0[11].zzzw
   8: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   9: mul r1.xyz, v0.yyyy, cb3[13].xyzx
  10: mad r1.xyz, cb3[12].xyzx, v0.xxxx, r1.xyzx
  11: mad r1.xyz, cb3[14].xyzx, v0.zzzz, r1.xyzx
  12: mad r1.xyz, cb3[15].xyzx, v0.wwww, r1.xyzx
  13: add r2.xyz, r1.xyzx, -cb1[4].xyzx
  14: mad r1.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  15: dp3 r1.w, r2.xyzx, r2.xyzx
  16: rsq r1.w, r1.w
  17: mul o2.xyz, r1.wwww, r2.xyzx
  18: mov o3.w, r1.x
  19: mul r2.xyz, v4.yyyy, cb3[13].xyzx
  20: mad r2.xyz, cb3[12].xyzx, v4.xxxx, r2.xyzx
  21: mad r2.xyz, cb3[14].xyzx, v4.zzzz, r2.xyzx
  22: dp3 r1.x, r2.xyzx, r2.xyzx
  23: rsq r1.x, r1.x
  24: mul r2.xyz, r1.xxxx, r2.xyzx
  25: mov o3.xyz, r2.xyzx
  26: mul r3.x, v1.x, cb3[16].x
  27: mul r3.y, v1.x, cb3[17].x
  28: mul r3.z, v1.x, cb3[18].x
  29: mul r4.x, v1.y, cb3[16].y
  30: mul r4.y, v1.y, cb3[17].y
  31: mul r4.z, v1.y, cb3[18].y
  32: add r3.xyz, r3.xyzx, r4.xyzx
  33: mul r4.x, v1.z, cb3[16].z
  34: mul r4.y, v1.z, cb3[17].z
  35: mul r4.z, v1.z, cb3[18].z
  36: add r3.xyz, r3.xyzx, r4.xyzx
  37: dp3 r1.x, r3.xyzx, r3.xyzx
  38: rsq r1.x, r1.x
  39: mul r3.xyz, r1.xxxx, r3.xyzx
  40: mul r4.xyz, r2.yzxy, r3.zxyz
  41: mad r2.xyz, r3.yzxy, r2.zxyz, -r4.xyzx
  42: mov o5.xyz, r3.xyzx
  43: mul r1.x, v4.w, cb3[21].w
  44: mul o4.xyz, r1.xxxx, r2.xyzx
  45: mov o4.w, r1.y
  46: mov o5.w, r1.z
  47: mul r1.xyzw, v0.yyyy, cb3[13].xyzw
  48: mad r1.xyzw, cb3[12].xyzw, v0.xxxx, r1.xyzw
  49: mad r1.xyzw, cb3[14].xyzw, v0.zzzz, r1.xyzw
  50: mad r1.xyzw, cb3[15].xyzw, v0.wwww, r1.xyzw
  51: mul r2.xy, r1.yyyy, cb0[16].xyxx
  52: mad r1.xy, cb0[15].xyxx, r1.xxxx, r2.xyxx
  53: mad r1.xy, cb0[17].xyxx, r1.zzzz, r1.xyxx
  54: mad o6.xy, cb0[18].xyxx, r1.wwww, r1.xyxx
  55: mul r0.y, r0.y, cb1[5].x
  56: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  57: mov o7.zw, r0.zzzw
  58: add o7.xy, r1.zzzz, r1.xwxx
  59: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "d3d11_9x " {
// Stats: 51 math
Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
ConstBuffer "$Globals" 304
Matrix 240 [_LightMatrix0]
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
Vector 80 [_ProjectionParams]
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
Vector 336 [unity_WorldTransformParams]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c1         cb0            10         2  ( FLT, FLT, FLT, FLT)
// c3         cb0            13         1  ( FLT, FLT, FLT, FLT)
// c4         cb0            15         4  ( FLT, FLT, FLT, FLT)
// c8         cb1             4         2  ( FLT, FLT, FLT, FLT)
// c10        cb2             0         1  ( FLT, FLT, FLT, FLT)
// c11        cb3             0         4  ( FLT, FLT, FLT, FLT)
// c15        cb3            12         7  ( FLT, FLT, FLT, FLT)
// c22        cb3            21         1  ( FLT, FLT, FLT, FLT)
//
//
// Runtime generated constant mappings:
//
// Target Reg                               Constant Description
// ---------- --------------------------------------------------
// c0                              Vertex Shader position offset
//
//
// Level9 shader bytecode:
//
    vs_2_0
          def c23, 0.5, 0, 0, 0
          dcl_texcoord v0
          dcl_texcoord1 v1
          dcl_texcoord2 v2
          dcl_texcoord3 v3
          dcl_texcoord4 v4
   0:     mad oT0.xy, v2, c1, c1.zwzw
   1:     mul r0.x, c3.z, c3.z
   2:     sge r0.x, -r0.x, r0.x
   3:     mov r1.xy, v2
   4:     lrp r2.xy, r0.x, r1, v3
   5:     mad oT0.zw, r2.xyxy, c2.xyxy, c2
   6:     mul r0.xyz, v0.y, c16
   7:     mad r0.xyz, c15, v0.x, r0
   8:     mad r0.xyz, c17, v0.z, r0
   9:     mad r0.xyz, c18, v0.w, r0
  10:     add r1.xyz, r0, -c8
  11:     mad r0.xyz, r0, -c10.w, c10
  12:     dp3 r0.w, r1, r1
  13:     rsq r0.w, r0.w
  14:     mul oT1.xyz, r0.w, r1
  15:     mul r1.x, v1.x, c19.x
  16:     mul r1.y, v1.x, c20.x
  17:     mul r1.z, v1.x, c21.x
  18:     mul r2.x, v1.y, c19.y
  19:     mul r2.y, v1.y, c20.y
  20:     mul r2.z, v1.y, c21.y
  21:     add r1.xyz, r1, r2
  22:     mul r2.x, v1.z, c19.z
  23:     mul r2.y, v1.z, c20.z
  24:     mul r2.z, v1.z, c21.z
  25:     add r1.xyz, r1, r2
  26:     nrm r2.xyz, r1
  29:     mul r1.xyz, v4.y, c16
  30:     mad r1.xyz, c15, v4.x, r1
  31:     mad r1.xyz, c17, v4.z, r1
  32:     nrm r3.xyz, r1
  35:     mul r1.xyz, r2.zxyw, r3.yzxw
  36:     mad r1.xyz, r2.yzxw, r3.zxyw, -r1
  37:     mov oT4.xyz, r2
  38:     mov oT2.xyz, r3
  39:     mul r0.w, v4.w, c22.w
  40:     mul oT3.xyz, r0.w, r1
  41:     mul r1, v0.y, c16
  42:     mad r1, c15, v0.x, r1
  43:     mad r1, c17, v0.z, r1
  44:     mad r1, c18, v0.w, r1
  45:     mul r2.xy, r1.y, c5
  46:     mad r1.xy, c4, r1.x, r2
  47:     mad r1.xy, c6, r1.z, r1
  48:     mad oT5.xy, c7, r1.w, r1
  49:     mul r1, v0.y, c12
  50:     mad r1, c11, v0.x, r1
  51:     mad r1, c13, v0.z, r1
  52:     mad r1, c14, v0.w, r1
  53:     mul r0.w, r1.y, c9.x
  54:     mul r2.w, r0.w, c23.x
  55:     mul r2.xz, r1.xyww, c23.x
  56:     add oT6.xy, r2.z, r2.xwzw
  57:     mad oPos.xy, r1.w, c0, r1
  58:     mov oPos.zw, r1
  59:     mov oT6.zw, r1
  60:     mov oT2.w, r0.x
  61:     mov oT3.w, r0.y
  62:     mov oT4.w, r0.z

// approximately 63 instruction slots used
      vs_4_0
      dcl_constantbuffer cb0[19], immediateIndexed
      dcl_constantbuffer cb1[6], immediateIndexed
      dcl_constantbuffer cb2[1], immediateIndexed
      dcl_constantbuffer cb3[22], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xy
      dcl_output o7.xyzw
      dcl_temps 5
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   4: mov o0.xyzw, r0.xyzw
   5: eq r1.x, cb0[13].z, l(0.000000)
   6: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
   7: mad o1.zw, r1.xxxy, cb0[11].xxxy, cb0[11].zzzw
   8: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   9: mul r1.xyz, v0.yyyy, cb3[13].xyzx
  10: mad r1.xyz, cb3[12].xyzx, v0.xxxx, r1.xyzx
  11: mad r1.xyz, cb3[14].xyzx, v0.zzzz, r1.xyzx
  12: mad r1.xyz, cb3[15].xyzx, v0.wwww, r1.xyzx
  13: add r2.xyz, r1.xyzx, -cb1[4].xyzx
  14: mad r1.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  15: dp3 r1.w, r2.xyzx, r2.xyzx
  16: rsq r1.w, r1.w
  17: mul o2.xyz, r1.wwww, r2.xyzx
  18: mov o3.w, r1.x
  19: mul r2.xyz, v4.yyyy, cb3[13].xyzx
  20: mad r2.xyz, cb3[12].xyzx, v4.xxxx, r2.xyzx
  21: mad r2.xyz, cb3[14].xyzx, v4.zzzz, r2.xyzx
  22: dp3 r1.x, r2.xyzx, r2.xyzx
  23: rsq r1.x, r1.x
  24: mul r2.xyz, r1.xxxx, r2.xyzx
  25: mov o3.xyz, r2.xyzx
  26: mul r3.x, v1.x, cb3[16].x
  27: mul r3.y, v1.x, cb3[17].x
  28: mul r3.z, v1.x, cb3[18].x
  29: mul r4.x, v1.y, cb3[16].y
  30: mul r4.y, v1.y, cb3[17].y
  31: mul r4.z, v1.y, cb3[18].y
  32: add r3.xyz, r3.xyzx, r4.xyzx
  33: mul r4.x, v1.z, cb3[16].z
  34: mul r4.y, v1.z, cb3[17].z
  35: mul r4.z, v1.z, cb3[18].z
  36: add r3.xyz, r3.xyzx, r4.xyzx
  37: dp3 r1.x, r3.xyzx, r3.xyzx
  38: rsq r1.x, r1.x
  39: mul r3.xyz, r1.xxxx, r3.xyzx
  40: mul r4.xyz, r2.yzxy, r3.zxyz
  41: mad r2.xyz, r3.yzxy, r2.zxyz, -r4.xyzx
  42: mov o5.xyz, r3.xyzx
  43: mul r1.x, v4.w, cb3[21].w
  44: mul o4.xyz, r1.xxxx, r2.xyzx
  45: mov o4.w, r1.y
  46: mov o5.w, r1.z
  47: mul r1.xyzw, v0.yyyy, cb3[13].xyzw
  48: mad r1.xyzw, cb3[12].xyzw, v0.xxxx, r1.xyzw
  49: mad r1.xyzw, cb3[14].xyzw, v0.zzzz, r1.xyzw
  50: mad r1.xyzw, cb3[15].xyzw, v0.wwww, r1.xyzw
  51: mul r2.xy, r1.yyyy, cb0[16].xyxx
  52: mad r1.xy, cb0[15].xyxx, r1.xxxx, r2.xyxx
  53: mad r1.xy, cb0[17].xyxx, r1.zzzz, r1.xyxx
  54: mad o6.xy, cb0[18].xyxx, r1.wwww, r1.xyxx
  55: mul r0.y, r0.y, cb1[5].x
  56: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  57: mov o7.zw, r0.zzzw
  58: add o7.xy, r1.zzzz, r1.xwxx
  59: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
// Stats: 37 math, 4 textures, 1 branches
Keywords { "POINT" "SHADOWS_CUBE" }
"#version 120

#ifdef VERTEX
uniform vec3 _WorldSpaceCameraPos;
uniform vec4 _WorldSpaceLightPos0;
uniform vec4 _LightPositionRange;

uniform mat4 _Object2World;
uniform mat4 _World2Object;
uniform vec4 unity_WorldTransformParams;
uniform vec4 _MainTex_ST;
uniform vec4 _DetailAlbedoMap_ST;
uniform float _UVSec;
uniform mat4 _LightMatrix0;
attribute vec4 TANGENT;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec3 xlv_TEXCOORD5;
varying vec3 xlv_TEXCOORD6;
void main ()
{
  vec2 tmpvar_1;
  tmpvar_1 = gl_MultiTexCoord0.xy;
  vec2 tmpvar_2;
  tmpvar_2 = gl_MultiTexCoord1.xy;
  vec4 tmpvar_3;
  vec4 tmpvar_4;
  vec4 tmpvar_5;
  vec4 tmpvar_6;
  vec4 tmpvar_7;
  tmpvar_7 = (_Object2World * gl_Vertex);
  tmpvar_3 = (gl_ModelViewProjectionMatrix * gl_Vertex);
  vec4 texcoord_8;
  texcoord_8.xy = ((gl_MultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  vec2 tmpvar_9;
  if ((_UVSec == 0.0)) {
    tmpvar_9 = tmpvar_1;
  } else {
    tmpvar_9 = tmpvar_2;
  };
  texcoord_8.zw = ((tmpvar_9 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  vec4 v_10;
  v_10.x = _World2Object[0].x;
  v_10.y = _World2Object[1].x;
  v_10.z = _World2Object[2].x;
  v_10.w = _World2Object[3].x;
  vec4 v_11;
  v_11.x = _World2Object[0].y;
  v_11.y = _World2Object[1].y;
  v_11.z = _World2Object[2].y;
  v_11.w = _World2Object[3].y;
  vec4 v_12;
  v_12.x = _World2Object[0].z;
  v_12.y = _World2Object[1].z;
  v_12.z = _World2Object[2].z;
  v_12.w = _World2Object[3].z;
  vec3 tmpvar_13;
  tmpvar_13 = normalize(((
    (v_10.xyz * gl_Normal.x)
   + 
    (v_11.xyz * gl_Normal.y)
  ) + (v_12.xyz * gl_Normal.z)));
  mat3 tmpvar_14;
  tmpvar_14[0] = _Object2World[0].xyz;
  tmpvar_14[1] = _Object2World[1].xyz;
  tmpvar_14[2] = _Object2World[2].xyz;
  vec4 tmpvar_15;
  tmpvar_15.xyz = normalize((tmpvar_14 * TANGENT.xyz));
  tmpvar_15.w = TANGENT.w;
  vec3 tmpvar_16;
  vec3 tmpvar_17;
  tmpvar_16 = tmpvar_15.xyz;
  tmpvar_17 = (((tmpvar_13.yzx * tmpvar_15.zxy) - (tmpvar_13.zxy * tmpvar_15.yzx)) * (TANGENT.w * unity_WorldTransformParams.w));
  vec3 tmpvar_18;
  vec3 tmpvar_19;
  vec3 tmpvar_20;
  tmpvar_18.x = tmpvar_16.x;
  tmpvar_18.y = tmpvar_17.x;
  tmpvar_18.z = tmpvar_13.x;
  tmpvar_19.x = tmpvar_16.y;
  tmpvar_19.y = tmpvar_17.y;
  tmpvar_19.z = tmpvar_13.y;
  tmpvar_20.x = tmpvar_16.z;
  tmpvar_20.y = tmpvar_17.z;
  tmpvar_20.z = tmpvar_13.z;
  vec3 v_21;
  v_21.x = tmpvar_18.x;
  v_21.y = tmpvar_19.x;
  v_21.z = tmpvar_20.x;
  tmpvar_4.xyz = v_21;
  vec3 v_22;
  v_22.x = tmpvar_18.y;
  v_22.y = tmpvar_19.y;
  v_22.z = tmpvar_20.y;
  tmpvar_5.xyz = v_22;
  vec3 v_23;
  v_23.x = tmpvar_18.z;
  v_23.y = tmpvar_19.z;
  v_23.z = tmpvar_20.z;
  tmpvar_6.xyz = v_23;
  vec3 tmpvar_24;
  tmpvar_24 = normalize((_WorldSpaceLightPos0.xyz - (tmpvar_7.xyz * _WorldSpaceLightPos0.w)));
  tmpvar_4.w = tmpvar_24.x;
  tmpvar_5.w = tmpvar_24.y;
  tmpvar_6.w = tmpvar_24.z;
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = texcoord_8;
  xlv_TEXCOORD1 = normalize((tmpvar_7.xyz - _WorldSpaceCameraPos));
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  vec4 tmpvar_25;
  tmpvar_25 = (_Object2World * gl_Vertex);
  xlv_TEXCOORD5 = (_LightMatrix0 * tmpvar_25).xyz;
  xlv_TEXCOORD6 = (tmpvar_25.xyz - _LightPositionRange.xyz);
}


#endif
#ifdef FRAGMENT
uniform vec4 _LightPositionRange;
uniform vec4 _LightShadowData;
uniform vec4 unity_ColorSpaceDielectricSpec;
uniform vec4 _LightColor0;
uniform sampler2D unity_NHxRoughness;
uniform vec4 _Color;
uniform sampler2D _MainTex;
uniform float _Metallic;
uniform float _Glossiness;
uniform samplerCube _ShadowMapTexture;
uniform sampler2D _LightTexture0;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec3 xlv_TEXCOORD5;
varying vec3 xlv_TEXCOORD6;
void main ()
{
  vec3 tmpvar_1;
  tmpvar_1 = (_Color.xyz * texture2D (_MainTex, xlv_TEXCOORD0.xy).xyz);
  vec3 tmpvar_2;
  vec3 tmpvar_3;
  tmpvar_3 = mix (unity_ColorSpaceDielectricSpec.xyz, tmpvar_1, vec3(_Metallic));
  tmpvar_2 = (tmpvar_1 * (unity_ColorSpaceDielectricSpec.w - (_Metallic * unity_ColorSpaceDielectricSpec.w)));
  vec3 tmpvar_4;
  tmpvar_4 = normalize(xlv_TEXCOORD2_2.xyz);
  vec3 tmpvar_5;
  tmpvar_5.x = xlv_TEXCOORD2.w;
  tmpvar_5.y = xlv_TEXCOORD2_1.w;
  tmpvar_5.z = xlv_TEXCOORD2_2.w;
  vec4 tmpvar_6;
  tmpvar_6 = texture2D (_LightTexture0, vec2(dot (xlv_TEXCOORD5, xlv_TEXCOORD5)));
  float mydist_7;
  mydist_7 = ((sqrt(
    dot (xlv_TEXCOORD6, xlv_TEXCOORD6)
  ) * _LightPositionRange.w) * 0.97);
  vec4 tmpvar_8;
  tmpvar_8 = textureCube (_ShadowMapTexture, xlv_TEXCOORD6);
  float tmpvar_9;
  if ((tmpvar_8.x < mydist_7)) {
    tmpvar_9 = _LightShadowData.x;
  } else {
    tmpvar_9 = 1.0;
  };
  vec3 viewDir_10;
  viewDir_10 = -(xlv_TEXCOORD1);
  vec2 tmpvar_11;
  tmpvar_11.x = dot ((viewDir_10 - (2.0 * 
    (dot (tmpvar_4, viewDir_10) * tmpvar_4)
  )), tmpvar_5);
  tmpvar_11.y = (1.0 - clamp (dot (tmpvar_4, viewDir_10), 0.0, 1.0));
  vec2 tmpvar_12;
  tmpvar_12.x = ((tmpvar_11 * tmpvar_11) * (tmpvar_11 * tmpvar_11)).x;
  tmpvar_12.y = (1.0 - _Glossiness);
  vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = ((tmpvar_2 + (
    (texture2D (unity_NHxRoughness, tmpvar_12).w * 16.0)
   * tmpvar_3)) * ((_LightColor0.xyz * 
    (tmpvar_6.w * tmpvar_9)
  ) * clamp (
    dot (tmpvar_4, tmpvar_5)
  , 0.0, 1.0)));
  vec4 xlat_varoutput_14;
  xlat_varoutput_14.xyz = tmpvar_13.xyz;
  xlat_varoutput_14.w = 1.0;
  gl_FragData[0] = xlat_varoutput_14;
}


#endif
"
}
SubProgram "d3d9 " {
// Stats: 48 math
Keywords { "POINT" "SHADOWS_CUBE" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
Matrix 11 [_LightMatrix0] 3
Matrix 4 [_Object2World]
Matrix 8 [_World2Object] 3
Matrix 0 [glstate_matrix_mvp]
Vector 19 [_DetailAlbedoMap_ST]
Vector 16 [_LightPositionRange]
Vector 18 [_MainTex_ST]
Float 20 [_UVSec]
Vector 14 [_WorldSpaceCameraPos]
Vector 15 [_WorldSpaceLightPos0]
Vector 17 [unity_WorldTransformParams]
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   row_major float4x4 _LightMatrix0;
//   float4 _LightPositionRange;
//   float4 _MainTex_ST;
//   row_major float4x4 _Object2World;
//   float _UVSec;
//   row_major float4x4 _World2Object;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 glstate_matrix_mvp;
//   float4 unity_WorldTransformParams;
//
//
// Registers:
//
//   Name                       Reg   Size
//   -------------------------- ----- ----
//   glstate_matrix_mvp         c0       4
//   _Object2World              c4       4
//   _World2Object              c8       3
//   _LightMatrix0              c11      3
//   _WorldSpaceCameraPos       c14      1
//   _WorldSpaceLightPos0       c15      1
//   _LightPositionRange        c16      1
//   unity_WorldTransformParams c17      1
//   _MainTex_ST                c18      1
//   _DetailAlbedoMap_ST        c19      1
//   _UVSec                     c20      1
//

    vs_2_0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_tangent v4
    dp4 oPos.x, c0, v0
    dp4 oPos.y, c1, v0
    dp4 oPos.z, c2, v0
    dp4 oPos.w, c3, v0
    mad oT0.xy, v2, c18, c18.zwzw
    mul r0.x, c20.x, c20.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad oT0.zw, r2.xyxy, c19.xyxy, c19
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add r1.xyz, r0, -c14
    dp3 r1.w, r1, r1
    rsq r1.w, r1.w
    mul oT1.xyz, r1.w, r1
    mul r1.xyz, v1.y, c9
    mad r1.xyz, c8, v1.x, r1
    mad r1.xyz, c10, v1.z, r1
    nrm r2.xyz, r1
    dp3 r1.x, c4, v4
    dp3 r1.y, c5, v4
    dp3 r1.z, c6, v4
    nrm r3.xyz, r1
    mul r1.xyz, r2.zxyw, r3.yzxw
    mad r1.xyz, r2.yzxw, r3.zxyw, -r1
    mov oT4.xyz, r2
    mov oT2.xyz, r3
    mul r1.w, v4.w, c17.w
    mul oT3.xyz, r1.w, r1
    dp4 r0.w, c7, v0
    dp4 oT5.x, c11, r0
    dp4 oT5.y, c12, r0
    dp4 oT5.z, c13, r0
    add oT6.xyz, r0, -c16
    mad r0.xyz, r0, -c15.w, c15
    nrm r1.xyz, r0
    mov oT2.w, r1.x
    mov oT3.w, r1.y
    mov oT4.w, r1.z

// approximately 47 instruction slots used
"
}
SubProgram "d3d11 " {
// Stats: 52 math
Keywords { "POINT" "SHADOWS_CUBE" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
ConstBuffer "$Globals" 304
Matrix 240 [_LightMatrix0]
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
Vector 16 [_LightPositionRange]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
Vector 336 [unity_WorldTransformParams]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer cb0[19], immediateIndexed
      dcl_constantbuffer cb1[5], immediateIndexed
      dcl_constantbuffer cb2[2], immediateIndexed
      dcl_constantbuffer cb3[22], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyz
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: mad o0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   4: eq r0.x, cb0[13].z, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[11].xxxy, cb0[11].zzzw
   7: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: rsq r0.w, r0.w
  15: mul o2.xyz, r0.wwww, r1.xyzx
  16: mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  17: add o7.xyz, r0.xyzx, -cb2[1].xyzx
  18: dp3 r0.x, r1.xyzx, r1.xyzx
  19: rsq r0.x, r0.x
  20: mul r0.xyz, r0.xxxx, r1.xyzx
  21: mov o3.w, r0.x
  22: mul r1.xyz, v4.yyyy, cb3[13].xyzx
  23: mad r1.xyz, cb3[12].xyzx, v4.xxxx, r1.xyzx
  24: mad r1.xyz, cb3[14].xyzx, v4.zzzz, r1.xyzx
  25: dp3 r0.x, r1.xyzx, r1.xyzx
  26: rsq r0.x, r0.x
  27: mul r1.xyz, r0.xxxx, r1.xyzx
  28: mov o3.xyz, r1.xyzx
  29: mul r2.x, v1.x, cb3[16].x
  30: mul r2.y, v1.x, cb3[17].x
  31: mul r2.z, v1.x, cb3[18].x
  32: mul r3.x, v1.y, cb3[16].y
  33: mul r3.y, v1.y, cb3[17].y
  34: mul r3.z, v1.y, cb3[18].y
  35: add r2.xyz, r2.xyzx, r3.xyzx
  36: mul r3.x, v1.z, cb3[16].z
  37: mul r3.y, v1.z, cb3[17].z
  38: mul r3.z, v1.z, cb3[18].z
  39: add r2.xyz, r2.xyzx, r3.xyzx
  40: dp3 r0.x, r2.xyzx, r2.xyzx
  41: rsq r0.x, r0.x
  42: mul r2.xyz, r0.xxxx, r2.xyzx
  43: mul r3.xyz, r1.yzxy, r2.zxyz
  44: mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
  45: mov o5.xyz, r2.xyzx
  46: mul r0.x, v4.w, cb3[21].w
  47: mul o4.xyz, r0.xxxx, r1.xyzx
  48: mov o4.w, r0.y
  49: mov o5.w, r0.z
  50: mul r0.xyzw, v0.yyyy, cb3[13].xyzw
  51: mad r0.xyzw, cb3[12].xyzw, v0.xxxx, r0.xyzw
  52: mad r0.xyzw, cb3[14].xyzw, v0.zzzz, r0.xyzw
  53: mad r0.xyzw, cb3[15].xyzw, v0.wwww, r0.xyzw
  54: mul r1.xyz, r0.yyyy, cb0[16].xyzx
  55: mad r1.xyz, cb0[15].xyzx, r0.xxxx, r1.xyzx
  56: mad r0.xyz, cb0[17].xyzx, r0.zzzz, r1.xyzx
  57: mad o6.xyz, cb0[18].xyzx, r0.wwww, r0.xyzx
  58: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "d3d11_9x " {
// Stats: 52 math
Keywords { "POINT" "SHADOWS_CUBE" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
ConstBuffer "$Globals" 304
Matrix 240 [_LightMatrix0]
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
Vector 16 [_LightPositionRange]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
Vector 336 [unity_WorldTransformParams]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c1         cb0            10         2  ( FLT, FLT, FLT, FLT)
// c3         cb0            13         1  ( FLT, FLT, FLT, FLT)
// c4         cb0            15         4  ( FLT, FLT, FLT, FLT)
// c8         cb1             4         1  ( FLT, FLT, FLT, FLT)
// c9         cb2             0         2  ( FLT, FLT, FLT, FLT)
// c11        cb3             0         4  ( FLT, FLT, FLT, FLT)
// c15        cb3            12         7  ( FLT, FLT, FLT, FLT)
// c22        cb3            21         1  ( FLT, FLT, FLT, FLT)
//
//
// Runtime generated constant mappings:
//
// Target Reg                               Constant Description
// ---------- --------------------------------------------------
// c0                              Vertex Shader position offset
//
//
// Level9 shader bytecode:
//
    vs_2_0
          dcl_texcoord v0
          dcl_texcoord1 v1
          dcl_texcoord2 v2
          dcl_texcoord3 v3
          dcl_texcoord4 v4
   0:     mad oT0.xy, v2, c1, c1.zwzw
   1:     mul r0.x, c3.z, c3.z
   2:     sge r0.x, -r0.x, r0.x
   3:     mov r1.xy, v2
   4:     lrp r2.xy, r0.x, r1, v3
   5:     mad oT0.zw, r2.xyxy, c2.xyxy, c2
   6:     mul r0.xyz, v0.y, c16
   7:     mad r0.xyz, c15, v0.x, r0
   8:     mad r0.xyz, c17, v0.z, r0
   9:     mad r0.xyz, c18, v0.w, r0
  10:     add r1.xyz, r0, -c8
  11:     dp3 r0.w, r1, r1
  12:     rsq r0.w, r0.w
  13:     mul oT1.xyz, r0.w, r1
  14:     mul r1.x, v1.x, c19.x
  15:     mul r1.y, v1.x, c20.x
  16:     mul r1.z, v1.x, c21.x
  17:     mul r2.x, v1.y, c19.y
  18:     mul r2.y, v1.y, c20.y
  19:     mul r2.z, v1.y, c21.y
  20:     add r1.xyz, r1, r2
  21:     mul r2.x, v1.z, c19.z
  22:     mul r2.y, v1.z, c20.z
  23:     mul r2.z, v1.z, c21.z
  24:     add r1.xyz, r1, r2
  25:     nrm r2.xyz, r1
  28:     mul r1.xyz, v4.y, c16
  29:     mad r1.xyz, c15, v4.x, r1
  30:     mad r1.xyz, c17, v4.z, r1
  31:     nrm r3.xyz, r1
  34:     mul r1.xyz, r2.zxyw, r3.yzxw
  35:     mad r1.xyz, r2.yzxw, r3.zxyw, -r1
  36:     mov oT4.xyz, r2
  37:     mov oT2.xyz, r3
  38:     mul r0.w, v4.w, c22.w
  39:     mul oT3.xyz, r0.w, r1
  40:     mul r1, v0.y, c16
  41:     mad r1, c15, v0.x, r1
  42:     mad r1, c17, v0.z, r1
  43:     mad r1, c18, v0.w, r1
  44:     mul r2.xyz, r1.y, c5
  45:     mad r2.xyz, c4, r1.x, r2
  46:     mad r1.xyz, c6, r1.z, r2
  47:     mad oT5.xyz, c7, r1.w, r1
  48:     add oT6.xyz, r0, -c10
  49:     mad r0.xyz, r0, -c9.w, c9
  50:     nrm r1.xyz, r0
  53:     mul r0, v0.y, c12
  54:     mad r0, c11, v0.x, r0
  55:     mad r0, c13, v0.z, r0
  56:     mad r0, c14, v0.w, r0
  57:     mad oPos.xy, r0.w, c0, r0
  58:     mov oPos.zw, r0
  59:     mov oT2.w, r1.x
  60:     mov oT3.w, r1.y
  61:     mov oT4.w, r1.z

// approximately 62 instruction slots used
      vs_4_0
      dcl_constantbuffer cb0[19], immediateIndexed
      dcl_constantbuffer cb1[5], immediateIndexed
      dcl_constantbuffer cb2[2], immediateIndexed
      dcl_constantbuffer cb3[22], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyz
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: mad o0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   4: eq r0.x, cb0[13].z, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[11].xxxy, cb0[11].zzzw
   7: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: rsq r0.w, r0.w
  15: mul o2.xyz, r0.wwww, r1.xyzx
  16: mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  17: add o7.xyz, r0.xyzx, -cb2[1].xyzx
  18: dp3 r0.x, r1.xyzx, r1.xyzx
  19: rsq r0.x, r0.x
  20: mul r0.xyz, r0.xxxx, r1.xyzx
  21: mov o3.w, r0.x
  22: mul r1.xyz, v4.yyyy, cb3[13].xyzx
  23: mad r1.xyz, cb3[12].xyzx, v4.xxxx, r1.xyzx
  24: mad r1.xyz, cb3[14].xyzx, v4.zzzz, r1.xyzx
  25: dp3 r0.x, r1.xyzx, r1.xyzx
  26: rsq r0.x, r0.x
  27: mul r1.xyz, r0.xxxx, r1.xyzx
  28: mov o3.xyz, r1.xyzx
  29: mul r2.x, v1.x, cb3[16].x
  30: mul r2.y, v1.x, cb3[17].x
  31: mul r2.z, v1.x, cb3[18].x
  32: mul r3.x, v1.y, cb3[16].y
  33: mul r3.y, v1.y, cb3[17].y
  34: mul r3.z, v1.y, cb3[18].y
  35: add r2.xyz, r2.xyzx, r3.xyzx
  36: mul r3.x, v1.z, cb3[16].z
  37: mul r3.y, v1.z, cb3[17].z
  38: mul r3.z, v1.z, cb3[18].z
  39: add r2.xyz, r2.xyzx, r3.xyzx
  40: dp3 r0.x, r2.xyzx, r2.xyzx
  41: rsq r0.x, r0.x
  42: mul r2.xyz, r0.xxxx, r2.xyzx
  43: mul r3.xyz, r1.yzxy, r2.zxyz
  44: mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
  45: mov o5.xyz, r2.xyzx
  46: mul r0.x, v4.w, cb3[21].w
  47: mul o4.xyz, r0.xxxx, r1.xyzx
  48: mov o4.w, r0.y
  49: mov o5.w, r0.z
  50: mul r0.xyzw, v0.yyyy, cb3[13].xyzw
  51: mad r0.xyzw, cb3[12].xyzw, v0.xxxx, r0.xyzw
  52: mad r0.xyzw, cb3[14].xyzw, v0.zzzz, r0.xyzw
  53: mad r0.xyzw, cb3[15].xyzw, v0.wwww, r0.xyzw
  54: mul r1.xyz, r0.yyyy, cb0[16].xyzx
  55: mad r1.xyz, cb0[15].xyzx, r0.xxxx, r1.xyzx
  56: mad r0.xyz, cb0[17].xyzx, r0.zzzz, r1.xyzx
  57: mad o6.xyz, cb0[18].xyzx, r0.wwww, r0.xyzx
  58: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
// Stats: 38 math, 5 textures, 1 branches
Keywords { "POINT_COOKIE" "SHADOWS_CUBE" }
"#version 120

#ifdef VERTEX
uniform vec3 _WorldSpaceCameraPos;
uniform vec4 _WorldSpaceLightPos0;
uniform vec4 _LightPositionRange;

uniform mat4 _Object2World;
uniform mat4 _World2Object;
uniform vec4 unity_WorldTransformParams;
uniform vec4 _MainTex_ST;
uniform vec4 _DetailAlbedoMap_ST;
uniform float _UVSec;
uniform mat4 _LightMatrix0;
attribute vec4 TANGENT;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec3 xlv_TEXCOORD5;
varying vec3 xlv_TEXCOORD6;
void main ()
{
  vec2 tmpvar_1;
  tmpvar_1 = gl_MultiTexCoord0.xy;
  vec2 tmpvar_2;
  tmpvar_2 = gl_MultiTexCoord1.xy;
  vec4 tmpvar_3;
  vec4 tmpvar_4;
  vec4 tmpvar_5;
  vec4 tmpvar_6;
  vec4 tmpvar_7;
  tmpvar_7 = (_Object2World * gl_Vertex);
  tmpvar_3 = (gl_ModelViewProjectionMatrix * gl_Vertex);
  vec4 texcoord_8;
  texcoord_8.xy = ((gl_MultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  vec2 tmpvar_9;
  if ((_UVSec == 0.0)) {
    tmpvar_9 = tmpvar_1;
  } else {
    tmpvar_9 = tmpvar_2;
  };
  texcoord_8.zw = ((tmpvar_9 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  vec4 v_10;
  v_10.x = _World2Object[0].x;
  v_10.y = _World2Object[1].x;
  v_10.z = _World2Object[2].x;
  v_10.w = _World2Object[3].x;
  vec4 v_11;
  v_11.x = _World2Object[0].y;
  v_11.y = _World2Object[1].y;
  v_11.z = _World2Object[2].y;
  v_11.w = _World2Object[3].y;
  vec4 v_12;
  v_12.x = _World2Object[0].z;
  v_12.y = _World2Object[1].z;
  v_12.z = _World2Object[2].z;
  v_12.w = _World2Object[3].z;
  vec3 tmpvar_13;
  tmpvar_13 = normalize(((
    (v_10.xyz * gl_Normal.x)
   + 
    (v_11.xyz * gl_Normal.y)
  ) + (v_12.xyz * gl_Normal.z)));
  mat3 tmpvar_14;
  tmpvar_14[0] = _Object2World[0].xyz;
  tmpvar_14[1] = _Object2World[1].xyz;
  tmpvar_14[2] = _Object2World[2].xyz;
  vec4 tmpvar_15;
  tmpvar_15.xyz = normalize((tmpvar_14 * TANGENT.xyz));
  tmpvar_15.w = TANGENT.w;
  vec3 tmpvar_16;
  vec3 tmpvar_17;
  tmpvar_16 = tmpvar_15.xyz;
  tmpvar_17 = (((tmpvar_13.yzx * tmpvar_15.zxy) - (tmpvar_13.zxy * tmpvar_15.yzx)) * (TANGENT.w * unity_WorldTransformParams.w));
  vec3 tmpvar_18;
  vec3 tmpvar_19;
  vec3 tmpvar_20;
  tmpvar_18.x = tmpvar_16.x;
  tmpvar_18.y = tmpvar_17.x;
  tmpvar_18.z = tmpvar_13.x;
  tmpvar_19.x = tmpvar_16.y;
  tmpvar_19.y = tmpvar_17.y;
  tmpvar_19.z = tmpvar_13.y;
  tmpvar_20.x = tmpvar_16.z;
  tmpvar_20.y = tmpvar_17.z;
  tmpvar_20.z = tmpvar_13.z;
  vec3 v_21;
  v_21.x = tmpvar_18.x;
  v_21.y = tmpvar_19.x;
  v_21.z = tmpvar_20.x;
  tmpvar_4.xyz = v_21;
  vec3 v_22;
  v_22.x = tmpvar_18.y;
  v_22.y = tmpvar_19.y;
  v_22.z = tmpvar_20.y;
  tmpvar_5.xyz = v_22;
  vec3 v_23;
  v_23.x = tmpvar_18.z;
  v_23.y = tmpvar_19.z;
  v_23.z = tmpvar_20.z;
  tmpvar_6.xyz = v_23;
  vec3 tmpvar_24;
  tmpvar_24 = normalize((_WorldSpaceLightPos0.xyz - (tmpvar_7.xyz * _WorldSpaceLightPos0.w)));
  tmpvar_4.w = tmpvar_24.x;
  tmpvar_5.w = tmpvar_24.y;
  tmpvar_6.w = tmpvar_24.z;
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = texcoord_8;
  xlv_TEXCOORD1 = normalize((tmpvar_7.xyz - _WorldSpaceCameraPos));
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  vec4 tmpvar_25;
  tmpvar_25 = (_Object2World * gl_Vertex);
  xlv_TEXCOORD5 = (_LightMatrix0 * tmpvar_25).xyz;
  xlv_TEXCOORD6 = (tmpvar_25.xyz - _LightPositionRange.xyz);
}


#endif
#ifdef FRAGMENT
uniform vec4 _LightPositionRange;
uniform vec4 _LightShadowData;
uniform vec4 unity_ColorSpaceDielectricSpec;
uniform vec4 _LightColor0;
uniform sampler2D unity_NHxRoughness;
uniform vec4 _Color;
uniform sampler2D _MainTex;
uniform float _Metallic;
uniform float _Glossiness;
uniform samplerCube _ShadowMapTexture;
uniform samplerCube _LightTexture0;
uniform sampler2D _LightTextureB0;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec3 xlv_TEXCOORD5;
varying vec3 xlv_TEXCOORD6;
void main ()
{
  vec3 tmpvar_1;
  tmpvar_1 = (_Color.xyz * texture2D (_MainTex, xlv_TEXCOORD0.xy).xyz);
  vec3 tmpvar_2;
  vec3 tmpvar_3;
  tmpvar_3 = mix (unity_ColorSpaceDielectricSpec.xyz, tmpvar_1, vec3(_Metallic));
  tmpvar_2 = (tmpvar_1 * (unity_ColorSpaceDielectricSpec.w - (_Metallic * unity_ColorSpaceDielectricSpec.w)));
  vec3 tmpvar_4;
  tmpvar_4 = normalize(xlv_TEXCOORD2_2.xyz);
  vec3 tmpvar_5;
  tmpvar_5.x = xlv_TEXCOORD2.w;
  tmpvar_5.y = xlv_TEXCOORD2_1.w;
  tmpvar_5.z = xlv_TEXCOORD2_2.w;
  vec4 tmpvar_6;
  tmpvar_6 = texture2D (_LightTextureB0, vec2(dot (xlv_TEXCOORD5, xlv_TEXCOORD5)));
  vec4 tmpvar_7;
  tmpvar_7 = textureCube (_LightTexture0, xlv_TEXCOORD5);
  float mydist_8;
  mydist_8 = ((sqrt(
    dot (xlv_TEXCOORD6, xlv_TEXCOORD6)
  ) * _LightPositionRange.w) * 0.97);
  vec4 tmpvar_9;
  tmpvar_9 = textureCube (_ShadowMapTexture, xlv_TEXCOORD6);
  float tmpvar_10;
  if ((tmpvar_9.x < mydist_8)) {
    tmpvar_10 = _LightShadowData.x;
  } else {
    tmpvar_10 = 1.0;
  };
  vec3 viewDir_11;
  viewDir_11 = -(xlv_TEXCOORD1);
  vec2 tmpvar_12;
  tmpvar_12.x = dot ((viewDir_11 - (2.0 * 
    (dot (tmpvar_4, viewDir_11) * tmpvar_4)
  )), tmpvar_5);
  tmpvar_12.y = (1.0 - clamp (dot (tmpvar_4, viewDir_11), 0.0, 1.0));
  vec2 tmpvar_13;
  tmpvar_13.x = ((tmpvar_12 * tmpvar_12) * (tmpvar_12 * tmpvar_12)).x;
  tmpvar_13.y = (1.0 - _Glossiness);
  vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = ((tmpvar_2 + (
    (texture2D (unity_NHxRoughness, tmpvar_13).w * 16.0)
   * tmpvar_3)) * ((_LightColor0.xyz * 
    ((tmpvar_6.w * tmpvar_7.w) * tmpvar_10)
  ) * clamp (
    dot (tmpvar_4, tmpvar_5)
  , 0.0, 1.0)));
  vec4 xlat_varoutput_15;
  xlat_varoutput_15.xyz = tmpvar_14.xyz;
  xlat_varoutput_15.w = 1.0;
  gl_FragData[0] = xlat_varoutput_15;
}


#endif
"
}
SubProgram "d3d9 " {
// Stats: 48 math
Keywords { "POINT_COOKIE" "SHADOWS_CUBE" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
Matrix 11 [_LightMatrix0] 3
Matrix 4 [_Object2World]
Matrix 8 [_World2Object] 3
Matrix 0 [glstate_matrix_mvp]
Vector 19 [_DetailAlbedoMap_ST]
Vector 16 [_LightPositionRange]
Vector 18 [_MainTex_ST]
Float 20 [_UVSec]
Vector 14 [_WorldSpaceCameraPos]
Vector 15 [_WorldSpaceLightPos0]
Vector 17 [unity_WorldTransformParams]
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   row_major float4x4 _LightMatrix0;
//   float4 _LightPositionRange;
//   float4 _MainTex_ST;
//   row_major float4x4 _Object2World;
//   float _UVSec;
//   row_major float4x4 _World2Object;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 glstate_matrix_mvp;
//   float4 unity_WorldTransformParams;
//
//
// Registers:
//
//   Name                       Reg   Size
//   -------------------------- ----- ----
//   glstate_matrix_mvp         c0       4
//   _Object2World              c4       4
//   _World2Object              c8       3
//   _LightMatrix0              c11      3
//   _WorldSpaceCameraPos       c14      1
//   _WorldSpaceLightPos0       c15      1
//   _LightPositionRange        c16      1
//   unity_WorldTransformParams c17      1
//   _MainTex_ST                c18      1
//   _DetailAlbedoMap_ST        c19      1
//   _UVSec                     c20      1
//

    vs_2_0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_tangent v4
    dp4 oPos.x, c0, v0
    dp4 oPos.y, c1, v0
    dp4 oPos.z, c2, v0
    dp4 oPos.w, c3, v0
    mad oT0.xy, v2, c18, c18.zwzw
    mul r0.x, c20.x, c20.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad oT0.zw, r2.xyxy, c19.xyxy, c19
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add r1.xyz, r0, -c14
    dp3 r1.w, r1, r1
    rsq r1.w, r1.w
    mul oT1.xyz, r1.w, r1
    mul r1.xyz, v1.y, c9
    mad r1.xyz, c8, v1.x, r1
    mad r1.xyz, c10, v1.z, r1
    nrm r2.xyz, r1
    dp3 r1.x, c4, v4
    dp3 r1.y, c5, v4
    dp3 r1.z, c6, v4
    nrm r3.xyz, r1
    mul r1.xyz, r2.zxyw, r3.yzxw
    mad r1.xyz, r2.yzxw, r3.zxyw, -r1
    mov oT4.xyz, r2
    mov oT2.xyz, r3
    mul r1.w, v4.w, c17.w
    mul oT3.xyz, r1.w, r1
    dp4 r0.w, c7, v0
    dp4 oT5.x, c11, r0
    dp4 oT5.y, c12, r0
    dp4 oT5.z, c13, r0
    add oT6.xyz, r0, -c16
    mad r0.xyz, r0, -c15.w, c15
    nrm r1.xyz, r0
    mov oT2.w, r1.x
    mov oT3.w, r1.y
    mov oT4.w, r1.z

// approximately 47 instruction slots used
"
}
SubProgram "d3d11 " {
// Stats: 52 math
Keywords { "POINT_COOKIE" "SHADOWS_CUBE" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
ConstBuffer "$Globals" 304
Matrix 240 [_LightMatrix0]
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
Vector 16 [_LightPositionRange]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
Vector 336 [unity_WorldTransformParams]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer cb0[19], immediateIndexed
      dcl_constantbuffer cb1[5], immediateIndexed
      dcl_constantbuffer cb2[2], immediateIndexed
      dcl_constantbuffer cb3[22], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyz
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: mad o0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   4: eq r0.x, cb0[13].z, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[11].xxxy, cb0[11].zzzw
   7: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: rsq r0.w, r0.w
  15: mul o2.xyz, r0.wwww, r1.xyzx
  16: mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  17: add o7.xyz, r0.xyzx, -cb2[1].xyzx
  18: dp3 r0.x, r1.xyzx, r1.xyzx
  19: rsq r0.x, r0.x
  20: mul r0.xyz, r0.xxxx, r1.xyzx
  21: mov o3.w, r0.x
  22: mul r1.xyz, v4.yyyy, cb3[13].xyzx
  23: mad r1.xyz, cb3[12].xyzx, v4.xxxx, r1.xyzx
  24: mad r1.xyz, cb3[14].xyzx, v4.zzzz, r1.xyzx
  25: dp3 r0.x, r1.xyzx, r1.xyzx
  26: rsq r0.x, r0.x
  27: mul r1.xyz, r0.xxxx, r1.xyzx
  28: mov o3.xyz, r1.xyzx
  29: mul r2.x, v1.x, cb3[16].x
  30: mul r2.y, v1.x, cb3[17].x
  31: mul r2.z, v1.x, cb3[18].x
  32: mul r3.x, v1.y, cb3[16].y
  33: mul r3.y, v1.y, cb3[17].y
  34: mul r3.z, v1.y, cb3[18].y
  35: add r2.xyz, r2.xyzx, r3.xyzx
  36: mul r3.x, v1.z, cb3[16].z
  37: mul r3.y, v1.z, cb3[17].z
  38: mul r3.z, v1.z, cb3[18].z
  39: add r2.xyz, r2.xyzx, r3.xyzx
  40: dp3 r0.x, r2.xyzx, r2.xyzx
  41: rsq r0.x, r0.x
  42: mul r2.xyz, r0.xxxx, r2.xyzx
  43: mul r3.xyz, r1.yzxy, r2.zxyz
  44: mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
  45: mov o5.xyz, r2.xyzx
  46: mul r0.x, v4.w, cb3[21].w
  47: mul o4.xyz, r0.xxxx, r1.xyzx
  48: mov o4.w, r0.y
  49: mov o5.w, r0.z
  50: mul r0.xyzw, v0.yyyy, cb3[13].xyzw
  51: mad r0.xyzw, cb3[12].xyzw, v0.xxxx, r0.xyzw
  52: mad r0.xyzw, cb3[14].xyzw, v0.zzzz, r0.xyzw
  53: mad r0.xyzw, cb3[15].xyzw, v0.wwww, r0.xyzw
  54: mul r1.xyz, r0.yyyy, cb0[16].xyzx
  55: mad r1.xyz, cb0[15].xyzx, r0.xxxx, r1.xyzx
  56: mad r0.xyz, cb0[17].xyzx, r0.zzzz, r1.xyzx
  57: mad o6.xyz, cb0[18].xyzx, r0.wwww, r0.xyzx
  58: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "d3d11_9x " {
// Stats: 52 math
Keywords { "POINT_COOKIE" "SHADOWS_CUBE" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
ConstBuffer "$Globals" 304
Matrix 240 [_LightMatrix0]
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
Vector 16 [_LightPositionRange]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
Vector 336 [unity_WorldTransformParams]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c1         cb0            10         2  ( FLT, FLT, FLT, FLT)
// c3         cb0            13         1  ( FLT, FLT, FLT, FLT)
// c4         cb0            15         4  ( FLT, FLT, FLT, FLT)
// c8         cb1             4         1  ( FLT, FLT, FLT, FLT)
// c9         cb2             0         2  ( FLT, FLT, FLT, FLT)
// c11        cb3             0         4  ( FLT, FLT, FLT, FLT)
// c15        cb3            12         7  ( FLT, FLT, FLT, FLT)
// c22        cb3            21         1  ( FLT, FLT, FLT, FLT)
//
//
// Runtime generated constant mappings:
//
// Target Reg                               Constant Description
// ---------- --------------------------------------------------
// c0                              Vertex Shader position offset
//
//
// Level9 shader bytecode:
//
    vs_2_0
          dcl_texcoord v0
          dcl_texcoord1 v1
          dcl_texcoord2 v2
          dcl_texcoord3 v3
          dcl_texcoord4 v4
   0:     mad oT0.xy, v2, c1, c1.zwzw
   1:     mul r0.x, c3.z, c3.z
   2:     sge r0.x, -r0.x, r0.x
   3:     mov r1.xy, v2
   4:     lrp r2.xy, r0.x, r1, v3
   5:     mad oT0.zw, r2.xyxy, c2.xyxy, c2
   6:     mul r0.xyz, v0.y, c16
   7:     mad r0.xyz, c15, v0.x, r0
   8:     mad r0.xyz, c17, v0.z, r0
   9:     mad r0.xyz, c18, v0.w, r0
  10:     add r1.xyz, r0, -c8
  11:     dp3 r0.w, r1, r1
  12:     rsq r0.w, r0.w
  13:     mul oT1.xyz, r0.w, r1
  14:     mul r1.x, v1.x, c19.x
  15:     mul r1.y, v1.x, c20.x
  16:     mul r1.z, v1.x, c21.x
  17:     mul r2.x, v1.y, c19.y
  18:     mul r2.y, v1.y, c20.y
  19:     mul r2.z, v1.y, c21.y
  20:     add r1.xyz, r1, r2
  21:     mul r2.x, v1.z, c19.z
  22:     mul r2.y, v1.z, c20.z
  23:     mul r2.z, v1.z, c21.z
  24:     add r1.xyz, r1, r2
  25:     nrm r2.xyz, r1
  28:     mul r1.xyz, v4.y, c16
  29:     mad r1.xyz, c15, v4.x, r1
  30:     mad r1.xyz, c17, v4.z, r1
  31:     nrm r3.xyz, r1
  34:     mul r1.xyz, r2.zxyw, r3.yzxw
  35:     mad r1.xyz, r2.yzxw, r3.zxyw, -r1
  36:     mov oT4.xyz, r2
  37:     mov oT2.xyz, r3
  38:     mul r0.w, v4.w, c22.w
  39:     mul oT3.xyz, r0.w, r1
  40:     mul r1, v0.y, c16
  41:     mad r1, c15, v0.x, r1
  42:     mad r1, c17, v0.z, r1
  43:     mad r1, c18, v0.w, r1
  44:     mul r2.xyz, r1.y, c5
  45:     mad r2.xyz, c4, r1.x, r2
  46:     mad r1.xyz, c6, r1.z, r2
  47:     mad oT5.xyz, c7, r1.w, r1
  48:     add oT6.xyz, r0, -c10
  49:     mad r0.xyz, r0, -c9.w, c9
  50:     nrm r1.xyz, r0
  53:     mul r0, v0.y, c12
  54:     mad r0, c11, v0.x, r0
  55:     mad r0, c13, v0.z, r0
  56:     mad r0, c14, v0.w, r0
  57:     mad oPos.xy, r0.w, c0, r0
  58:     mov oPos.zw, r0
  59:     mov oT2.w, r1.x
  60:     mov oT3.w, r1.y
  61:     mov oT4.w, r1.z

// approximately 62 instruction slots used
      vs_4_0
      dcl_constantbuffer cb0[19], immediateIndexed
      dcl_constantbuffer cb1[5], immediateIndexed
      dcl_constantbuffer cb2[2], immediateIndexed
      dcl_constantbuffer cb3[22], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyz
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: mad o0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   4: eq r0.x, cb0[13].z, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[11].xxxy, cb0[11].zzzw
   7: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: rsq r0.w, r0.w
  15: mul o2.xyz, r0.wwww, r1.xyzx
  16: mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  17: add o7.xyz, r0.xyzx, -cb2[1].xyzx
  18: dp3 r0.x, r1.xyzx, r1.xyzx
  19: rsq r0.x, r0.x
  20: mul r0.xyz, r0.xxxx, r1.xyzx
  21: mov o3.w, r0.x
  22: mul r1.xyz, v4.yyyy, cb3[13].xyzx
  23: mad r1.xyz, cb3[12].xyzx, v4.xxxx, r1.xyzx
  24: mad r1.xyz, cb3[14].xyzx, v4.zzzz, r1.xyzx
  25: dp3 r0.x, r1.xyzx, r1.xyzx
  26: rsq r0.x, r0.x
  27: mul r1.xyz, r0.xxxx, r1.xyzx
  28: mov o3.xyz, r1.xyzx
  29: mul r2.x, v1.x, cb3[16].x
  30: mul r2.y, v1.x, cb3[17].x
  31: mul r2.z, v1.x, cb3[18].x
  32: mul r3.x, v1.y, cb3[16].y
  33: mul r3.y, v1.y, cb3[17].y
  34: mul r3.z, v1.y, cb3[18].y
  35: add r2.xyz, r2.xyzx, r3.xyzx
  36: mul r3.x, v1.z, cb3[16].z
  37: mul r3.y, v1.z, cb3[17].z
  38: mul r3.z, v1.z, cb3[18].z
  39: add r2.xyz, r2.xyzx, r3.xyzx
  40: dp3 r0.x, r2.xyzx, r2.xyzx
  41: rsq r0.x, r0.x
  42: mul r2.xyz, r0.xxxx, r2.xyzx
  43: mul r3.xyz, r1.yzxy, r2.zxyz
  44: mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
  45: mov o5.xyz, r2.xyzx
  46: mul r0.x, v4.w, cb3[21].w
  47: mul o4.xyz, r0.xxxx, r1.xyzx
  48: mov o4.w, r0.y
  49: mov o5.w, r0.z
  50: mul r0.xyzw, v0.yyyy, cb3[13].xyzw
  51: mad r0.xyzw, cb3[12].xyzw, v0.xxxx, r0.xyzw
  52: mad r0.xyzw, cb3[14].xyzw, v0.zzzz, r0.xyzw
  53: mad r0.xyzw, cb3[15].xyzw, v0.wwww, r0.xyzw
  54: mul r1.xyz, r0.yyyy, cb0[16].xyzx
  55: mad r1.xyz, cb0[15].xyzx, r0.xxxx, r1.xyzx
  56: mad r0.xyz, cb0[17].xyzx, r0.zzzz, r1.xyzx
  57: mad o6.xyz, cb0[18].xyzx, r0.wwww, r0.xyzx
  58: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
// Stats: 30 math, 3 textures
Keywords { "POINT" "SHADOWS_OFF" "_ALPHABLEND_ON" }
"#version 120

#ifdef VERTEX
uniform vec3 _WorldSpaceCameraPos;
uniform vec4 _WorldSpaceLightPos0;

uniform mat4 _Object2World;
uniform mat4 _World2Object;
uniform vec4 unity_WorldTransformParams;
uniform vec4 _MainTex_ST;
uniform vec4 _DetailAlbedoMap_ST;
uniform float _UVSec;
uniform mat4 _LightMatrix0;
attribute vec4 TANGENT;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec3 xlv_TEXCOORD5;
void main ()
{
  vec2 tmpvar_1;
  tmpvar_1 = gl_MultiTexCoord0.xy;
  vec2 tmpvar_2;
  tmpvar_2 = gl_MultiTexCoord1.xy;
  vec4 tmpvar_3;
  vec4 tmpvar_4;
  vec4 tmpvar_5;
  vec4 tmpvar_6;
  vec4 tmpvar_7;
  tmpvar_7 = (_Object2World * gl_Vertex);
  tmpvar_3 = (gl_ModelViewProjectionMatrix * gl_Vertex);
  vec4 texcoord_8;
  texcoord_8.xy = ((gl_MultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  vec2 tmpvar_9;
  if ((_UVSec == 0.0)) {
    tmpvar_9 = tmpvar_1;
  } else {
    tmpvar_9 = tmpvar_2;
  };
  texcoord_8.zw = ((tmpvar_9 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  vec4 v_10;
  v_10.x = _World2Object[0].x;
  v_10.y = _World2Object[1].x;
  v_10.z = _World2Object[2].x;
  v_10.w = _World2Object[3].x;
  vec4 v_11;
  v_11.x = _World2Object[0].y;
  v_11.y = _World2Object[1].y;
  v_11.z = _World2Object[2].y;
  v_11.w = _World2Object[3].y;
  vec4 v_12;
  v_12.x = _World2Object[0].z;
  v_12.y = _World2Object[1].z;
  v_12.z = _World2Object[2].z;
  v_12.w = _World2Object[3].z;
  vec3 tmpvar_13;
  tmpvar_13 = normalize(((
    (v_10.xyz * gl_Normal.x)
   + 
    (v_11.xyz * gl_Normal.y)
  ) + (v_12.xyz * gl_Normal.z)));
  mat3 tmpvar_14;
  tmpvar_14[0] = _Object2World[0].xyz;
  tmpvar_14[1] = _Object2World[1].xyz;
  tmpvar_14[2] = _Object2World[2].xyz;
  vec4 tmpvar_15;
  tmpvar_15.xyz = normalize((tmpvar_14 * TANGENT.xyz));
  tmpvar_15.w = TANGENT.w;
  vec3 tmpvar_16;
  vec3 tmpvar_17;
  tmpvar_16 = tmpvar_15.xyz;
  tmpvar_17 = (((tmpvar_13.yzx * tmpvar_15.zxy) - (tmpvar_13.zxy * tmpvar_15.yzx)) * (TANGENT.w * unity_WorldTransformParams.w));
  vec3 tmpvar_18;
  vec3 tmpvar_19;
  vec3 tmpvar_20;
  tmpvar_18.x = tmpvar_16.x;
  tmpvar_18.y = tmpvar_17.x;
  tmpvar_18.z = tmpvar_13.x;
  tmpvar_19.x = tmpvar_16.y;
  tmpvar_19.y = tmpvar_17.y;
  tmpvar_19.z = tmpvar_13.y;
  tmpvar_20.x = tmpvar_16.z;
  tmpvar_20.y = tmpvar_17.z;
  tmpvar_20.z = tmpvar_13.z;
  vec3 v_21;
  v_21.x = tmpvar_18.x;
  v_21.y = tmpvar_19.x;
  v_21.z = tmpvar_20.x;
  tmpvar_4.xyz = v_21;
  vec3 v_22;
  v_22.x = tmpvar_18.y;
  v_22.y = tmpvar_19.y;
  v_22.z = tmpvar_20.y;
  tmpvar_5.xyz = v_22;
  vec3 v_23;
  v_23.x = tmpvar_18.z;
  v_23.y = tmpvar_19.z;
  v_23.z = tmpvar_20.z;
  tmpvar_6.xyz = v_23;
  vec3 tmpvar_24;
  tmpvar_24 = normalize((_WorldSpaceLightPos0.xyz - (tmpvar_7.xyz * _WorldSpaceLightPos0.w)));
  tmpvar_4.w = tmpvar_24.x;
  tmpvar_5.w = tmpvar_24.y;
  tmpvar_6.w = tmpvar_24.z;
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = texcoord_8;
  xlv_TEXCOORD1 = normalize((tmpvar_7.xyz - _WorldSpaceCameraPos));
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  xlv_TEXCOORD5 = (_LightMatrix0 * (_Object2World * gl_Vertex)).xyz;
}


#endif
#ifdef FRAGMENT
uniform vec4 unity_ColorSpaceDielectricSpec;
uniform vec4 _LightColor0;
uniform sampler2D unity_NHxRoughness;
uniform vec4 _Color;
uniform sampler2D _MainTex;
uniform float _Metallic;
uniform float _Glossiness;
uniform sampler2D _LightTexture0;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec3 xlv_TEXCOORD5;
void main ()
{
  vec3 tmpvar_1;
  vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  tmpvar_1 = (_Color.xyz * tmpvar_2.xyz);
  vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD2_2.xyz);
  vec3 tmpvar_4;
  tmpvar_4.x = xlv_TEXCOORD2.w;
  tmpvar_4.y = xlv_TEXCOORD2_1.w;
  tmpvar_4.z = xlv_TEXCOORD2_2.w;
  vec3 viewDir_5;
  viewDir_5 = -(xlv_TEXCOORD1);
  vec2 tmpvar_6;
  tmpvar_6.x = dot ((viewDir_5 - (2.0 * 
    (dot (tmpvar_3, viewDir_5) * tmpvar_3)
  )), tmpvar_4);
  tmpvar_6.y = (1.0 - clamp (dot (tmpvar_3, viewDir_5), 0.0, 1.0));
  vec2 tmpvar_7;
  tmpvar_7.x = ((tmpvar_6 * tmpvar_6) * (tmpvar_6 * tmpvar_6)).x;
  tmpvar_7.y = (1.0 - _Glossiness);
  vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (((tmpvar_1 * 
    (unity_ColorSpaceDielectricSpec.w - (_Metallic * unity_ColorSpaceDielectricSpec.w))
  ) + (
    (texture2D (unity_NHxRoughness, tmpvar_7).w * 16.0)
   * 
    mix (unity_ColorSpaceDielectricSpec.xyz, tmpvar_1, vec3(_Metallic))
  )) * ((_LightColor0.xyz * texture2D (_LightTexture0, vec2(
    dot (xlv_TEXCOORD5, xlv_TEXCOORD5)
  )).w) * clamp (
    dot (tmpvar_3, tmpvar_4)
  , 0.0, 1.0)));
  vec4 xlat_varoutput_9;
  xlat_varoutput_9.xyz = tmpvar_8.xyz;
  xlat_varoutput_9.w = (tmpvar_2.w * _Color.w);
  gl_FragData[0] = xlat_varoutput_9;
}


#endif
"
}
SubProgram "d3d9 " {
// Stats: 47 math
Keywords { "POINT" "SHADOWS_OFF" "_ALPHABLEND_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
Matrix 11 [_LightMatrix0] 3
Matrix 4 [_Object2World]
Matrix 8 [_World2Object] 3
Matrix 0 [glstate_matrix_mvp]
Vector 18 [_DetailAlbedoMap_ST]
Vector 17 [_MainTex_ST]
Float 19 [_UVSec]
Vector 14 [_WorldSpaceCameraPos]
Vector 15 [_WorldSpaceLightPos0]
Vector 16 [unity_WorldTransformParams]
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   row_major float4x4 _LightMatrix0;
//   float4 _MainTex_ST;
//   row_major float4x4 _Object2World;
//   float _UVSec;
//   row_major float4x4 _World2Object;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 glstate_matrix_mvp;
//   float4 unity_WorldTransformParams;
//
//
// Registers:
//
//   Name                       Reg   Size
//   -------------------------- ----- ----
//   glstate_matrix_mvp         c0       4
//   _Object2World              c4       4
//   _World2Object              c8       3
//   _LightMatrix0              c11      3
//   _WorldSpaceCameraPos       c14      1
//   _WorldSpaceLightPos0       c15      1
//   unity_WorldTransformParams c16      1
//   _MainTex_ST                c17      1
//   _DetailAlbedoMap_ST        c18      1
//   _UVSec                     c19      1
//

    vs_2_0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_tangent v4
    dp4 oPos.x, c0, v0
    dp4 oPos.y, c1, v0
    dp4 oPos.z, c2, v0
    dp4 oPos.w, c3, v0
    mad oT0.xy, v2, c17, c17.zwzw
    mul r0.x, c19.x, c19.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad oT0.zw, r2.xyxy, c18.xyxy, c18
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add r1.xyz, r0, -c14
    dp3 r1.w, r1, r1
    rsq r1.w, r1.w
    mul oT1.xyz, r1.w, r1
    mul r1.xyz, v1.y, c9
    mad r1.xyz, c8, v1.x, r1
    mad r1.xyz, c10, v1.z, r1
    nrm r2.xyz, r1
    dp3 r1.x, c4, v4
    dp3 r1.y, c5, v4
    dp3 r1.z, c6, v4
    nrm r3.xyz, r1
    mul r1.xyz, r2.zxyw, r3.yzxw
    mad r1.xyz, r2.yzxw, r3.zxyw, -r1
    mov oT4.xyz, r2
    mov oT2.xyz, r3
    mul r1.w, v4.w, c16.w
    mul oT3.xyz, r1.w, r1
    dp4 r0.w, c7, v0
    dp4 oT5.x, c11, r0
    dp4 oT5.y, c12, r0
    dp4 oT5.z, c13, r0
    mad r0.xyz, r0, -c15.w, c15
    nrm r1.xyz, r0
    mov oT2.w, r1.x
    mov oT3.w, r1.y
    mov oT4.w, r1.z

// approximately 46 instruction slots used
"
}
SubProgram "d3d11 " {
// Stats: 51 math
Keywords { "POINT" "SHADOWS_OFF" "_ALPHABLEND_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
ConstBuffer "$Globals" 304
Matrix 240 [_LightMatrix0]
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
Vector 336 [unity_WorldTransformParams]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer cb0[19], immediateIndexed
      dcl_constantbuffer cb1[5], immediateIndexed
      dcl_constantbuffer cb2[1], immediateIndexed
      dcl_constantbuffer cb3[22], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: mad o0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   4: eq r0.x, cb0[13].z, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[11].xxxy, cb0[11].zzzw
   7: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  13: mad r0.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  14: dp3 r0.w, r1.xyzx, r1.xyzx
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: dp3 r0.w, r0.xyzx, r0.xyzx
  18: rsq r0.w, r0.w
  19: mul r0.xyz, r0.wwww, r0.xyzx
  20: mov o3.w, r0.x
  21: mul r1.xyz, v4.yyyy, cb3[13].xyzx
  22: mad r1.xyz, cb3[12].xyzx, v4.xxxx, r1.xyzx
  23: mad r1.xyz, cb3[14].xyzx, v4.zzzz, r1.xyzx
  24: dp3 r0.x, r1.xyzx, r1.xyzx
  25: rsq r0.x, r0.x
  26: mul r1.xyz, r0.xxxx, r1.xyzx
  27: mov o3.xyz, r1.xyzx
  28: mul r2.x, v1.x, cb3[16].x
  29: mul r2.y, v1.x, cb3[17].x
  30: mul r2.z, v1.x, cb3[18].x
  31: mul r3.x, v1.y, cb3[16].y
  32: mul r3.y, v1.y, cb3[17].y
  33: mul r3.z, v1.y, cb3[18].y
  34: add r2.xyz, r2.xyzx, r3.xyzx
  35: mul r3.x, v1.z, cb3[16].z
  36: mul r3.y, v1.z, cb3[17].z
  37: mul r3.z, v1.z, cb3[18].z
  38: add r2.xyz, r2.xyzx, r3.xyzx
  39: dp3 r0.x, r2.xyzx, r2.xyzx
  40: rsq r0.x, r0.x
  41: mul r2.xyz, r0.xxxx, r2.xyzx
  42: mul r3.xyz, r1.yzxy, r2.zxyz
  43: mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
  44: mov o5.xyz, r2.xyzx
  45: mul r0.x, v4.w, cb3[21].w
  46: mul o4.xyz, r0.xxxx, r1.xyzx
  47: mov o4.w, r0.y
  48: mov o5.w, r0.z
  49: mul r0.xyzw, v0.yyyy, cb3[13].xyzw
  50: mad r0.xyzw, cb3[12].xyzw, v0.xxxx, r0.xyzw
  51: mad r0.xyzw, cb3[14].xyzw, v0.zzzz, r0.xyzw
  52: mad r0.xyzw, cb3[15].xyzw, v0.wwww, r0.xyzw
  53: mul r1.xyz, r0.yyyy, cb0[16].xyzx
  54: mad r1.xyz, cb0[15].xyzx, r0.xxxx, r1.xyzx
  55: mad r0.xyz, cb0[17].xyzx, r0.zzzz, r1.xyzx
  56: mad o6.xyz, cb0[18].xyzx, r0.wwww, r0.xyzx
  57: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "d3d11_9x " {
// Stats: 51 math
Keywords { "POINT" "SHADOWS_OFF" "_ALPHABLEND_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
ConstBuffer "$Globals" 304
Matrix 240 [_LightMatrix0]
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
Vector 336 [unity_WorldTransformParams]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c1         cb0            10         2  ( FLT, FLT, FLT, FLT)
// c3         cb0            13         1  ( FLT, FLT, FLT, FLT)
// c4         cb0            15         4  ( FLT, FLT, FLT, FLT)
// c8         cb1             4         1  ( FLT, FLT, FLT, FLT)
// c9         cb2             0         1  ( FLT, FLT, FLT, FLT)
// c10        cb3             0         4  ( FLT, FLT, FLT, FLT)
// c14        cb3            12         7  ( FLT, FLT, FLT, FLT)
// c21        cb3            21         1  ( FLT, FLT, FLT, FLT)
//
//
// Runtime generated constant mappings:
//
// Target Reg                               Constant Description
// ---------- --------------------------------------------------
// c0                              Vertex Shader position offset
//
//
// Level9 shader bytecode:
//
    vs_2_0
          dcl_texcoord v0
          dcl_texcoord1 v1
          dcl_texcoord2 v2
          dcl_texcoord3 v3
          dcl_texcoord4 v4
   0:     mad oT0.xy, v2, c1, c1.zwzw
   1:     mul r0.x, c3.z, c3.z
   2:     sge r0.x, -r0.x, r0.x
   3:     mov r1.xy, v2
   4:     lrp r2.xy, r0.x, r1, v3
   5:     mad oT0.zw, r2.xyxy, c2.xyxy, c2
   6:     mul r0.xyz, v0.y, c15
   7:     mad r0.xyz, c14, v0.x, r0
   8:     mad r0.xyz, c16, v0.z, r0
   9:     mad r0.xyz, c17, v0.w, r0
  10:     add r1.xyz, r0, -c8
  11:     mad r0.xyz, r0, -c9.w, c9
  12:     nrm r2.xyz, r0
  15:     dp3 r0.x, r1, r1
  16:     rsq r0.x, r0.x
  17:     mul oT1.xyz, r0.x, r1
  18:     mul r0.x, v1.x, c18.x
  19:     mul r0.y, v1.x, c19.x
  20:     mul r0.z, v1.x, c20.x
  21:     mul r1.x, v1.y, c18.y
  22:     mul r1.y, v1.y, c19.y
  23:     mul r1.z, v1.y, c20.y
  24:     add r0.xyz, r0, r1
  25:     mul r1.x, v1.z, c18.z
  26:     mul r1.y, v1.z, c19.z
  27:     mul r1.z, v1.z, c20.z
  28:     add r0.xyz, r0, r1
  29:     nrm r1.xyz, r0
  32:     mul r0.xyz, v4.y, c15
  33:     mad r0.xyz, c14, v4.x, r0
  34:     mad r0.xyz, c16, v4.z, r0
  35:     nrm r3.xyz, r0
  38:     mul r0.xyz, r1.zxyw, r3.yzxw
  39:     mad r0.xyz, r1.yzxw, r3.zxyw, -r0
  40:     mov oT4.xyz, r1
  41:     mov oT2.xyz, r3
  42:     mul r0.w, v4.w, c21.w
  43:     mul oT3.xyz, r0.w, r0
  44:     mul r0, v0.y, c15
  45:     mad r0, c14, v0.x, r0
  46:     mad r0, c16, v0.z, r0
  47:     mad r0, c17, v0.w, r0
  48:     mul r1.xyz, r0.y, c5
  49:     mad r1.xyz, c4, r0.x, r1
  50:     mad r0.xyz, c6, r0.z, r1
  51:     mad oT5.xyz, c7, r0.w, r0
  52:     mul r0, v0.y, c11
  53:     mad r0, c10, v0.x, r0
  54:     mad r0, c12, v0.z, r0
  55:     mad r0, c13, v0.w, r0
  56:     mad oPos.xy, r0.w, c0, r0
  57:     mov oPos.zw, r0
  58:     mov oT2.w, r2.x
  59:     mov oT3.w, r2.y
  60:     mov oT4.w, r2.z

// approximately 61 instruction slots used
      vs_4_0
      dcl_constantbuffer cb0[19], immediateIndexed
      dcl_constantbuffer cb1[5], immediateIndexed
      dcl_constantbuffer cb2[1], immediateIndexed
      dcl_constantbuffer cb3[22], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: mad o0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   4: eq r0.x, cb0[13].z, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[11].xxxy, cb0[11].zzzw
   7: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  13: mad r0.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  14: dp3 r0.w, r1.xyzx, r1.xyzx
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: dp3 r0.w, r0.xyzx, r0.xyzx
  18: rsq r0.w, r0.w
  19: mul r0.xyz, r0.wwww, r0.xyzx
  20: mov o3.w, r0.x
  21: mul r1.xyz, v4.yyyy, cb3[13].xyzx
  22: mad r1.xyz, cb3[12].xyzx, v4.xxxx, r1.xyzx
  23: mad r1.xyz, cb3[14].xyzx, v4.zzzz, r1.xyzx
  24: dp3 r0.x, r1.xyzx, r1.xyzx
  25: rsq r0.x, r0.x
  26: mul r1.xyz, r0.xxxx, r1.xyzx
  27: mov o3.xyz, r1.xyzx
  28: mul r2.x, v1.x, cb3[16].x
  29: mul r2.y, v1.x, cb3[17].x
  30: mul r2.z, v1.x, cb3[18].x
  31: mul r3.x, v1.y, cb3[16].y
  32: mul r3.y, v1.y, cb3[17].y
  33: mul r3.z, v1.y, cb3[18].y
  34: add r2.xyz, r2.xyzx, r3.xyzx
  35: mul r3.x, v1.z, cb3[16].z
  36: mul r3.y, v1.z, cb3[17].z
  37: mul r3.z, v1.z, cb3[18].z
  38: add r2.xyz, r2.xyzx, r3.xyzx
  39: dp3 r0.x, r2.xyzx, r2.xyzx
  40: rsq r0.x, r0.x
  41: mul r2.xyz, r0.xxxx, r2.xyzx
  42: mul r3.xyz, r1.yzxy, r2.zxyz
  43: mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
  44: mov o5.xyz, r2.xyzx
  45: mul r0.x, v4.w, cb3[21].w
  46: mul o4.xyz, r0.xxxx, r1.xyzx
  47: mov o4.w, r0.y
  48: mov o5.w, r0.z
  49: mul r0.xyzw, v0.yyyy, cb3[13].xyzw
  50: mad r0.xyzw, cb3[12].xyzw, v0.xxxx, r0.xyzw
  51: mad r0.xyzw, cb3[14].xyzw, v0.zzzz, r0.xyzw
  52: mad r0.xyzw, cb3[15].xyzw, v0.wwww, r0.xyzw
  53: mul r1.xyz, r0.yyyy, cb0[16].xyzx
  54: mad r1.xyz, cb0[15].xyzx, r0.xxxx, r1.xyzx
  55: mad r0.xyz, cb0[17].xyzx, r0.zzzz, r1.xyzx
  56: mad o6.xyz, cb0[18].xyzx, r0.wwww, r0.xyzx
  57: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
// Stats: 28 math, 2 textures
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "_ALPHABLEND_ON" }
"#version 120

#ifdef VERTEX
uniform vec3 _WorldSpaceCameraPos;
uniform vec4 _WorldSpaceLightPos0;

uniform mat4 _Object2World;
uniform mat4 _World2Object;
uniform vec4 unity_WorldTransformParams;
uniform vec4 _MainTex_ST;
uniform vec4 _DetailAlbedoMap_ST;
uniform float _UVSec;
attribute vec4 TANGENT;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
void main ()
{
  vec2 tmpvar_1;
  tmpvar_1 = gl_MultiTexCoord0.xy;
  vec2 tmpvar_2;
  tmpvar_2 = gl_MultiTexCoord1.xy;
  vec4 tmpvar_3;
  vec4 tmpvar_4;
  vec4 tmpvar_5;
  vec4 tmpvar_6;
  vec4 tmpvar_7;
  tmpvar_7 = (_Object2World * gl_Vertex);
  tmpvar_3 = (gl_ModelViewProjectionMatrix * gl_Vertex);
  vec4 texcoord_8;
  texcoord_8.xy = ((gl_MultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  vec2 tmpvar_9;
  if ((_UVSec == 0.0)) {
    tmpvar_9 = tmpvar_1;
  } else {
    tmpvar_9 = tmpvar_2;
  };
  texcoord_8.zw = ((tmpvar_9 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  vec4 v_10;
  v_10.x = _World2Object[0].x;
  v_10.y = _World2Object[1].x;
  v_10.z = _World2Object[2].x;
  v_10.w = _World2Object[3].x;
  vec4 v_11;
  v_11.x = _World2Object[0].y;
  v_11.y = _World2Object[1].y;
  v_11.z = _World2Object[2].y;
  v_11.w = _World2Object[3].y;
  vec4 v_12;
  v_12.x = _World2Object[0].z;
  v_12.y = _World2Object[1].z;
  v_12.z = _World2Object[2].z;
  v_12.w = _World2Object[3].z;
  vec3 tmpvar_13;
  tmpvar_13 = normalize(((
    (v_10.xyz * gl_Normal.x)
   + 
    (v_11.xyz * gl_Normal.y)
  ) + (v_12.xyz * gl_Normal.z)));
  mat3 tmpvar_14;
  tmpvar_14[0] = _Object2World[0].xyz;
  tmpvar_14[1] = _Object2World[1].xyz;
  tmpvar_14[2] = _Object2World[2].xyz;
  vec4 tmpvar_15;
  tmpvar_15.xyz = normalize((tmpvar_14 * TANGENT.xyz));
  tmpvar_15.w = TANGENT.w;
  vec3 tmpvar_16;
  vec3 tmpvar_17;
  tmpvar_16 = tmpvar_15.xyz;
  tmpvar_17 = (((tmpvar_13.yzx * tmpvar_15.zxy) - (tmpvar_13.zxy * tmpvar_15.yzx)) * (TANGENT.w * unity_WorldTransformParams.w));
  vec3 tmpvar_18;
  vec3 tmpvar_19;
  vec3 tmpvar_20;
  tmpvar_18.x = tmpvar_16.x;
  tmpvar_18.y = tmpvar_17.x;
  tmpvar_18.z = tmpvar_13.x;
  tmpvar_19.x = tmpvar_16.y;
  tmpvar_19.y = tmpvar_17.y;
  tmpvar_19.z = tmpvar_13.y;
  tmpvar_20.x = tmpvar_16.z;
  tmpvar_20.y = tmpvar_17.z;
  tmpvar_20.z = tmpvar_13.z;
  vec3 v_21;
  v_21.x = tmpvar_18.x;
  v_21.y = tmpvar_19.x;
  v_21.z = tmpvar_20.x;
  tmpvar_4.xyz = v_21;
  vec3 v_22;
  v_22.x = tmpvar_18.y;
  v_22.y = tmpvar_19.y;
  v_22.z = tmpvar_20.y;
  tmpvar_5.xyz = v_22;
  vec3 v_23;
  v_23.x = tmpvar_18.z;
  v_23.y = tmpvar_19.z;
  v_23.z = tmpvar_20.z;
  tmpvar_6.xyz = v_23;
  vec3 tmpvar_24;
  tmpvar_24 = (_WorldSpaceLightPos0.xyz - (tmpvar_7.xyz * _WorldSpaceLightPos0.w));
  tmpvar_4.w = tmpvar_24.x;
  tmpvar_5.w = tmpvar_24.y;
  tmpvar_6.w = tmpvar_24.z;
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = texcoord_8;
  xlv_TEXCOORD1 = normalize((tmpvar_7.xyz - _WorldSpaceCameraPos));
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
}


#endif
#ifdef FRAGMENT
uniform vec4 unity_ColorSpaceDielectricSpec;
uniform vec4 _LightColor0;
uniform sampler2D unity_NHxRoughness;
uniform vec4 _Color;
uniform sampler2D _MainTex;
uniform float _Metallic;
uniform float _Glossiness;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
void main ()
{
  vec3 tmpvar_1;
  vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  tmpvar_1 = (_Color.xyz * tmpvar_2.xyz);
  vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD2_2.xyz);
  vec3 tmpvar_4;
  tmpvar_4.x = xlv_TEXCOORD2.w;
  tmpvar_4.y = xlv_TEXCOORD2_1.w;
  tmpvar_4.z = xlv_TEXCOORD2_2.w;
  vec3 viewDir_5;
  viewDir_5 = -(xlv_TEXCOORD1);
  vec2 tmpvar_6;
  tmpvar_6.x = dot ((viewDir_5 - (2.0 * 
    (dot (tmpvar_3, viewDir_5) * tmpvar_3)
  )), tmpvar_4);
  tmpvar_6.y = (1.0 - clamp (dot (tmpvar_3, viewDir_5), 0.0, 1.0));
  vec2 tmpvar_7;
  tmpvar_7.x = ((tmpvar_6 * tmpvar_6) * (tmpvar_6 * tmpvar_6)).x;
  tmpvar_7.y = (1.0 - _Glossiness);
  vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (((tmpvar_1 * 
    (unity_ColorSpaceDielectricSpec.w - (_Metallic * unity_ColorSpaceDielectricSpec.w))
  ) + (
    (texture2D (unity_NHxRoughness, tmpvar_7).w * 16.0)
   * 
    mix (unity_ColorSpaceDielectricSpec.xyz, tmpvar_1, vec3(_Metallic))
  )) * (_LightColor0.xyz * clamp (
    dot (tmpvar_3, tmpvar_4)
  , 0.0, 1.0)));
  vec4 xlat_varoutput_9;
  xlat_varoutput_9.xyz = tmpvar_8.xyz;
  xlat_varoutput_9.w = (tmpvar_2.w * _Color.w);
  gl_FragData[0] = xlat_varoutput_9;
}


#endif
"
}
SubProgram "d3d9 " {
// Stats: 40 math
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "_ALPHABLEND_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
Matrix 4 [_Object2World] 3
Matrix 7 [_World2Object] 3
Matrix 0 [glstate_matrix_mvp]
Vector 14 [_DetailAlbedoMap_ST]
Vector 13 [_MainTex_ST]
Float 15 [_UVSec]
Vector 10 [_WorldSpaceCameraPos]
Vector 11 [_WorldSpaceLightPos0]
Vector 12 [unity_WorldTransformParams]
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   row_major float4x4 _Object2World;
//   float _UVSec;
//   row_major float4x4 _World2Object;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 glstate_matrix_mvp;
//   float4 unity_WorldTransformParams;
//
//
// Registers:
//
//   Name                       Reg   Size
//   -------------------------- ----- ----
//   glstate_matrix_mvp         c0       4
//   _Object2World              c4       3
//   _World2Object              c7       3
//   _WorldSpaceCameraPos       c10      1
//   _WorldSpaceLightPos0       c11      1
//   unity_WorldTransformParams c12      1
//   _MainTex_ST                c13      1
//   _DetailAlbedoMap_ST        c14      1
//   _UVSec                     c15      1
//

    vs_2_0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_tangent v4
    dp4 oPos.x, c0, v0
    dp4 oPos.y, c1, v0
    dp4 oPos.z, c2, v0
    dp4 oPos.w, c3, v0
    mad oT0.xy, v2, c13, c13.zwzw
    mul r0.x, c15.x, c15.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad oT0.zw, r2.xyxy, c14.xyxy, c14
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add r1.xyz, r0, -c10
    mad r0.xyz, r0, -c11.w, c11
    dp3 r0.w, r1, r1
    rsq r0.w, r0.w
    mul oT1.xyz, r0.w, r1
    mul r1.xyz, v1.y, c8
    mad r1.xyz, c7, v1.x, r1
    mad r1.xyz, c9, v1.z, r1
    nrm r2.xyz, r1
    dp3 r1.x, c4, v4
    dp3 r1.y, c5, v4
    dp3 r1.z, c6, v4
    nrm r3.xyz, r1
    mul r1.xyz, r2.zxyw, r3.yzxw
    mad r1.xyz, r2.yzxw, r3.zxyw, -r1
    mov oT4.xyz, r2
    mov oT2.xyz, r3
    mul r0.w, v4.w, c12.w
    mul oT3.xyz, r0.w, r1
    mov oT2.w, r0.x
    mov oT3.w, r0.y
    mov oT4.w, r0.z

// approximately 39 instruction slots used
"
}
SubProgram "d3d11 " {
// Stats: 40 math
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "_ALPHABLEND_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
ConstBuffer "$Globals" 240
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
Vector 336 [unity_WorldTransformParams]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer cb0[14], immediateIndexed
      dcl_constantbuffer cb1[5], immediateIndexed
      dcl_constantbuffer cb2[1], immediateIndexed
      dcl_constantbuffer cb3[22], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: mad o0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   4: eq r0.x, cb0[13].z, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[11].xxxy, cb0[11].zzzw
   7: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  13: mad r0.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  14: dp3 r0.w, r1.xyzx, r1.xyzx
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mov o3.w, r0.x
  18: mul r1.xyz, v4.yyyy, cb3[13].xyzx
  19: mad r1.xyz, cb3[12].xyzx, v4.xxxx, r1.xyzx
  20: mad r1.xyz, cb3[14].xyzx, v4.zzzz, r1.xyzx
  21: dp3 r0.x, r1.xyzx, r1.xyzx
  22: rsq r0.x, r0.x
  23: mul r1.xyz, r0.xxxx, r1.xyzx
  24: mov o3.xyz, r1.xyzx
  25: mul r2.x, v1.x, cb3[16].x
  26: mul r2.y, v1.x, cb3[17].x
  27: mul r2.z, v1.x, cb3[18].x
  28: mul r3.x, v1.y, cb3[16].y
  29: mul r3.y, v1.y, cb3[17].y
  30: mul r3.z, v1.y, cb3[18].y
  31: add r2.xyz, r2.xyzx, r3.xyzx
  32: mul r3.x, v1.z, cb3[16].z
  33: mul r3.y, v1.z, cb3[17].z
  34: mul r3.z, v1.z, cb3[18].z
  35: add r2.xyz, r2.xyzx, r3.xyzx
  36: dp3 r0.x, r2.xyzx, r2.xyzx
  37: rsq r0.x, r0.x
  38: mul r2.xyz, r0.xxxx, r2.xyzx
  39: mul r3.xyz, r1.yzxy, r2.zxyz
  40: mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
  41: mov o5.xyz, r2.xyzx
  42: mul r0.x, v4.w, cb3[21].w
  43: mul o4.xyz, r0.xxxx, r1.xyzx
  44: mov o4.w, r0.y
  45: mov o5.w, r0.z
  46: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "d3d11_9x " {
// Stats: 40 math
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "_ALPHABLEND_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
ConstBuffer "$Globals" 240
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
Vector 336 [unity_WorldTransformParams]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c1         cb0            10         2  ( FLT, FLT, FLT, FLT)
// c3         cb0            13         1  ( FLT, FLT, FLT, FLT)
// c4         cb1             4         1  ( FLT, FLT, FLT, FLT)
// c5         cb2             0         1  ( FLT, FLT, FLT, FLT)
// c6         cb3             0         4  ( FLT, FLT, FLT, FLT)
// c10        cb3            12         7  ( FLT, FLT, FLT, FLT)
// c17        cb3            21         1  ( FLT, FLT, FLT, FLT)
//
//
// Runtime generated constant mappings:
//
// Target Reg                               Constant Description
// ---------- --------------------------------------------------
// c0                              Vertex Shader position offset
//
//
// Level9 shader bytecode:
//
    vs_2_0
          dcl_texcoord v0
          dcl_texcoord1 v1
          dcl_texcoord2 v2
          dcl_texcoord3 v3
          dcl_texcoord4 v4
   0:     mad oT0.xy, v2, c1, c1.zwzw
   1:     mul r0.x, c3.z, c3.z
   2:     sge r0.x, -r0.x, r0.x
   3:     mov r1.xy, v2
   4:     lrp r2.xy, r0.x, r1, v3
   5:     mad oT0.zw, r2.xyxy, c2.xyxy, c2
   6:     mul r0.xyz, v0.y, c11
   7:     mad r0.xyz, c10, v0.x, r0
   8:     mad r0.xyz, c12, v0.z, r0
   9:     mad r0.xyz, c13, v0.w, r0
  10:     add r1.xyz, r0, -c4
  11:     mad r0.xyz, r0, -c5.w, c5
  12:     dp3 r0.w, r1, r1
  13:     rsq r0.w, r0.w
  14:     mul oT1.xyz, r0.w, r1
  15:     mul r1.x, v1.x, c14.x
  16:     mul r1.y, v1.x, c15.x
  17:     mul r1.z, v1.x, c16.x
  18:     mul r2.x, v1.y, c14.y
  19:     mul r2.y, v1.y, c15.y
  20:     mul r2.z, v1.y, c16.y
  21:     add r1.xyz, r1, r2
  22:     mul r2.x, v1.z, c14.z
  23:     mul r2.y, v1.z, c15.z
  24:     mul r2.z, v1.z, c16.z
  25:     add r1.xyz, r1, r2
  26:     nrm r2.xyz, r1
  29:     mul r1.xyz, v4.y, c11
  30:     mad r1.xyz, c10, v4.x, r1
  31:     mad r1.xyz, c12, v4.z, r1
  32:     nrm r3.xyz, r1
  35:     mul r1.xyz, r2.zxyw, r3.yzxw
  36:     mad r1.xyz, r2.yzxw, r3.zxyw, -r1
  37:     mov oT4.xyz, r2
  38:     mov oT2.xyz, r3
  39:     mul r0.w, v4.w, c17.w
  40:     mul oT3.xyz, r0.w, r1
  41:     mul r1, v0.y, c7
  42:     mad r1, c6, v0.x, r1
  43:     mad r1, c8, v0.z, r1
  44:     mad r1, c9, v0.w, r1
  45:     mad oPos.xy, r1.w, c0, r1
  46:     mov oPos.zw, r1
  47:     mov oT2.w, r0.x
  48:     mov oT3.w, r0.y
  49:     mov oT4.w, r0.z

// approximately 50 instruction slots used
      vs_4_0
      dcl_constantbuffer cb0[14], immediateIndexed
      dcl_constantbuffer cb1[5], immediateIndexed
      dcl_constantbuffer cb2[1], immediateIndexed
      dcl_constantbuffer cb3[22], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: mad o0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   4: eq r0.x, cb0[13].z, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[11].xxxy, cb0[11].zzzw
   7: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  13: mad r0.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  14: dp3 r0.w, r1.xyzx, r1.xyzx
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mov o3.w, r0.x
  18: mul r1.xyz, v4.yyyy, cb3[13].xyzx
  19: mad r1.xyz, cb3[12].xyzx, v4.xxxx, r1.xyzx
  20: mad r1.xyz, cb3[14].xyzx, v4.zzzz, r1.xyzx
  21: dp3 r0.x, r1.xyzx, r1.xyzx
  22: rsq r0.x, r0.x
  23: mul r1.xyz, r0.xxxx, r1.xyzx
  24: mov o3.xyz, r1.xyzx
  25: mul r2.x, v1.x, cb3[16].x
  26: mul r2.y, v1.x, cb3[17].x
  27: mul r2.z, v1.x, cb3[18].x
  28: mul r3.x, v1.y, cb3[16].y
  29: mul r3.y, v1.y, cb3[17].y
  30: mul r3.z, v1.y, cb3[18].y
  31: add r2.xyz, r2.xyzx, r3.xyzx
  32: mul r3.x, v1.z, cb3[16].z
  33: mul r3.y, v1.z, cb3[17].z
  34: mul r3.z, v1.z, cb3[18].z
  35: add r2.xyz, r2.xyzx, r3.xyzx
  36: dp3 r0.x, r2.xyzx, r2.xyzx
  37: rsq r0.x, r0.x
  38: mul r2.xyz, r0.xxxx, r2.xyzx
  39: mul r3.xyz, r1.yzxy, r2.zxyz
  40: mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
  41: mov o5.xyz, r2.xyzx
  42: mul r0.x, v4.w, cb3[21].w
  43: mul o4.xyz, r0.xxxx, r1.xyzx
  44: mov o4.w, r0.y
  45: mov o5.w, r0.z
  46: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
// Stats: 36 math, 4 textures
Keywords { "SPOT" "SHADOWS_OFF" "_ALPHABLEND_ON" }
"#version 120

#ifdef VERTEX
uniform vec3 _WorldSpaceCameraPos;
uniform vec4 _WorldSpaceLightPos0;

uniform mat4 _Object2World;
uniform mat4 _World2Object;
uniform vec4 unity_WorldTransformParams;
uniform vec4 _MainTex_ST;
uniform vec4 _DetailAlbedoMap_ST;
uniform float _UVSec;
uniform mat4 _LightMatrix0;
attribute vec4 TANGENT;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
void main ()
{
  vec2 tmpvar_1;
  tmpvar_1 = gl_MultiTexCoord0.xy;
  vec2 tmpvar_2;
  tmpvar_2 = gl_MultiTexCoord1.xy;
  vec4 tmpvar_3;
  vec4 tmpvar_4;
  vec4 tmpvar_5;
  vec4 tmpvar_6;
  vec4 tmpvar_7;
  tmpvar_7 = (_Object2World * gl_Vertex);
  tmpvar_3 = (gl_ModelViewProjectionMatrix * gl_Vertex);
  vec4 texcoord_8;
  texcoord_8.xy = ((gl_MultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  vec2 tmpvar_9;
  if ((_UVSec == 0.0)) {
    tmpvar_9 = tmpvar_1;
  } else {
    tmpvar_9 = tmpvar_2;
  };
  texcoord_8.zw = ((tmpvar_9 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  vec4 v_10;
  v_10.x = _World2Object[0].x;
  v_10.y = _World2Object[1].x;
  v_10.z = _World2Object[2].x;
  v_10.w = _World2Object[3].x;
  vec4 v_11;
  v_11.x = _World2Object[0].y;
  v_11.y = _World2Object[1].y;
  v_11.z = _World2Object[2].y;
  v_11.w = _World2Object[3].y;
  vec4 v_12;
  v_12.x = _World2Object[0].z;
  v_12.y = _World2Object[1].z;
  v_12.z = _World2Object[2].z;
  v_12.w = _World2Object[3].z;
  vec3 tmpvar_13;
  tmpvar_13 = normalize(((
    (v_10.xyz * gl_Normal.x)
   + 
    (v_11.xyz * gl_Normal.y)
  ) + (v_12.xyz * gl_Normal.z)));
  mat3 tmpvar_14;
  tmpvar_14[0] = _Object2World[0].xyz;
  tmpvar_14[1] = _Object2World[1].xyz;
  tmpvar_14[2] = _Object2World[2].xyz;
  vec4 tmpvar_15;
  tmpvar_15.xyz = normalize((tmpvar_14 * TANGENT.xyz));
  tmpvar_15.w = TANGENT.w;
  vec3 tmpvar_16;
  vec3 tmpvar_17;
  tmpvar_16 = tmpvar_15.xyz;
  tmpvar_17 = (((tmpvar_13.yzx * tmpvar_15.zxy) - (tmpvar_13.zxy * tmpvar_15.yzx)) * (TANGENT.w * unity_WorldTransformParams.w));
  vec3 tmpvar_18;
  vec3 tmpvar_19;
  vec3 tmpvar_20;
  tmpvar_18.x = tmpvar_16.x;
  tmpvar_18.y = tmpvar_17.x;
  tmpvar_18.z = tmpvar_13.x;
  tmpvar_19.x = tmpvar_16.y;
  tmpvar_19.y = tmpvar_17.y;
  tmpvar_19.z = tmpvar_13.y;
  tmpvar_20.x = tmpvar_16.z;
  tmpvar_20.y = tmpvar_17.z;
  tmpvar_20.z = tmpvar_13.z;
  vec3 v_21;
  v_21.x = tmpvar_18.x;
  v_21.y = tmpvar_19.x;
  v_21.z = tmpvar_20.x;
  tmpvar_4.xyz = v_21;
  vec3 v_22;
  v_22.x = tmpvar_18.y;
  v_22.y = tmpvar_19.y;
  v_22.z = tmpvar_20.y;
  tmpvar_5.xyz = v_22;
  vec3 v_23;
  v_23.x = tmpvar_18.z;
  v_23.y = tmpvar_19.z;
  v_23.z = tmpvar_20.z;
  tmpvar_6.xyz = v_23;
  vec3 tmpvar_24;
  tmpvar_24 = normalize((_WorldSpaceLightPos0.xyz - (tmpvar_7.xyz * _WorldSpaceLightPos0.w)));
  tmpvar_4.w = tmpvar_24.x;
  tmpvar_5.w = tmpvar_24.y;
  tmpvar_6.w = tmpvar_24.z;
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = texcoord_8;
  xlv_TEXCOORD1 = normalize((tmpvar_7.xyz - _WorldSpaceCameraPos));
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  xlv_TEXCOORD5 = (_LightMatrix0 * (_Object2World * gl_Vertex));
}


#endif
#ifdef FRAGMENT
uniform vec4 unity_ColorSpaceDielectricSpec;
uniform vec4 _LightColor0;
uniform sampler2D unity_NHxRoughness;
uniform vec4 _Color;
uniform sampler2D _MainTex;
uniform float _Metallic;
uniform float _Glossiness;
uniform sampler2D _LightTexture0;
uniform sampler2D _LightTextureB0;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
void main ()
{
  vec3 tmpvar_1;
  vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  tmpvar_1 = (_Color.xyz * tmpvar_2.xyz);
  vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD2_2.xyz);
  vec3 tmpvar_4;
  tmpvar_4.x = xlv_TEXCOORD2.w;
  tmpvar_4.y = xlv_TEXCOORD2_1.w;
  tmpvar_4.z = xlv_TEXCOORD2_2.w;
  vec3 viewDir_5;
  viewDir_5 = -(xlv_TEXCOORD1);
  vec2 tmpvar_6;
  tmpvar_6.x = dot ((viewDir_5 - (2.0 * 
    (dot (tmpvar_3, viewDir_5) * tmpvar_3)
  )), tmpvar_4);
  tmpvar_6.y = (1.0 - clamp (dot (tmpvar_3, viewDir_5), 0.0, 1.0));
  vec2 tmpvar_7;
  tmpvar_7.x = ((tmpvar_6 * tmpvar_6) * (tmpvar_6 * tmpvar_6)).x;
  tmpvar_7.y = (1.0 - _Glossiness);
  vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (((tmpvar_1 * 
    (unity_ColorSpaceDielectricSpec.w - (_Metallic * unity_ColorSpaceDielectricSpec.w))
  ) + (
    (texture2D (unity_NHxRoughness, tmpvar_7).w * 16.0)
   * 
    mix (unity_ColorSpaceDielectricSpec.xyz, tmpvar_1, vec3(_Metallic))
  )) * ((_LightColor0.xyz * 
    ((float((xlv_TEXCOORD5.z > 0.0)) * texture2D (_LightTexture0, ((xlv_TEXCOORD5.xy / xlv_TEXCOORD5.w) + 0.5)).w) * texture2D (_LightTextureB0, vec2(dot (xlv_TEXCOORD5.xyz, xlv_TEXCOORD5.xyz))).w)
  ) * clamp (
    dot (tmpvar_3, tmpvar_4)
  , 0.0, 1.0)));
  vec4 xlat_varoutput_9;
  xlat_varoutput_9.xyz = tmpvar_8.xyz;
  xlat_varoutput_9.w = (tmpvar_2.w * _Color.w);
  gl_FragData[0] = xlat_varoutput_9;
}


#endif
"
}
SubProgram "d3d9 " {
// Stats: 48 math
Keywords { "SPOT" "SHADOWS_OFF" "_ALPHABLEND_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
Matrix 8 [_LightMatrix0]
Matrix 4 [_Object2World]
Matrix 12 [_World2Object] 3
Matrix 0 [glstate_matrix_mvp]
Vector 19 [_DetailAlbedoMap_ST]
Vector 18 [_MainTex_ST]
Float 20 [_UVSec]
Vector 15 [_WorldSpaceCameraPos]
Vector 16 [_WorldSpaceLightPos0]
Vector 17 [unity_WorldTransformParams]
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   row_major float4x4 _LightMatrix0;
//   float4 _MainTex_ST;
//   row_major float4x4 _Object2World;
//   float _UVSec;
//   row_major float4x4 _World2Object;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 glstate_matrix_mvp;
//   float4 unity_WorldTransformParams;
//
//
// Registers:
//
//   Name                       Reg   Size
//   -------------------------- ----- ----
//   glstate_matrix_mvp         c0       4
//   _Object2World              c4       4
//   _LightMatrix0              c8       4
//   _World2Object              c12      3
//   _WorldSpaceCameraPos       c15      1
//   _WorldSpaceLightPos0       c16      1
//   unity_WorldTransformParams c17      1
//   _MainTex_ST                c18      1
//   _DetailAlbedoMap_ST        c19      1
//   _UVSec                     c20      1
//

    vs_2_0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_tangent v4
    dp4 oPos.x, c0, v0
    dp4 oPos.y, c1, v0
    dp4 oPos.z, c2, v0
    dp4 oPos.w, c3, v0
    mad oT0.xy, v2, c18, c18.zwzw
    mul r0.x, c20.x, c20.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad oT0.zw, r2.xyxy, c19.xyxy, c19
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add r1.xyz, r0, -c15
    dp3 r1.w, r1, r1
    rsq r1.w, r1.w
    mul oT1.xyz, r1.w, r1
    mul r1.xyz, v1.y, c13
    mad r1.xyz, c12, v1.x, r1
    mad r1.xyz, c14, v1.z, r1
    nrm r2.xyz, r1
    dp3 r1.x, c4, v4
    dp3 r1.y, c5, v4
    dp3 r1.z, c6, v4
    nrm r3.xyz, r1
    mul r1.xyz, r2.zxyw, r3.yzxw
    mad r1.xyz, r2.yzxw, r3.zxyw, -r1
    mov oT4.xyz, r2
    mov oT2.xyz, r3
    mul r1.w, v4.w, c17.w
    mul oT3.xyz, r1.w, r1
    dp4 r0.w, c7, v0
    dp4 oT5.x, c8, r0
    dp4 oT5.y, c9, r0
    dp4 oT5.z, c10, r0
    dp4 oT5.w, c11, r0
    mad r0.xyz, r0, -c16.w, c16
    nrm r1.xyz, r0
    mov oT2.w, r1.x
    mov oT3.w, r1.y
    mov oT4.w, r1.z

// approximately 47 instruction slots used
"
}
SubProgram "d3d11 " {
// Stats: 51 math
Keywords { "SPOT" "SHADOWS_OFF" "_ALPHABLEND_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
ConstBuffer "$Globals" 304
Matrix 240 [_LightMatrix0]
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
Vector 336 [unity_WorldTransformParams]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer cb0[19], immediateIndexed
      dcl_constantbuffer cb1[5], immediateIndexed
      dcl_constantbuffer cb2[1], immediateIndexed
      dcl_constantbuffer cb3[22], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: mad o0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   4: eq r0.x, cb0[13].z, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[11].xxxy, cb0[11].zzzw
   7: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  13: mad r0.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  14: dp3 r0.w, r1.xyzx, r1.xyzx
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: dp3 r0.w, r0.xyzx, r0.xyzx
  18: rsq r0.w, r0.w
  19: mul r0.xyz, r0.wwww, r0.xyzx
  20: mov o3.w, r0.x
  21: mul r1.xyz, v4.yyyy, cb3[13].xyzx
  22: mad r1.xyz, cb3[12].xyzx, v4.xxxx, r1.xyzx
  23: mad r1.xyz, cb3[14].xyzx, v4.zzzz, r1.xyzx
  24: dp3 r0.x, r1.xyzx, r1.xyzx
  25: rsq r0.x, r0.x
  26: mul r1.xyz, r0.xxxx, r1.xyzx
  27: mov o3.xyz, r1.xyzx
  28: mul r2.x, v1.x, cb3[16].x
  29: mul r2.y, v1.x, cb3[17].x
  30: mul r2.z, v1.x, cb3[18].x
  31: mul r3.x, v1.y, cb3[16].y
  32: mul r3.y, v1.y, cb3[17].y
  33: mul r3.z, v1.y, cb3[18].y
  34: add r2.xyz, r2.xyzx, r3.xyzx
  35: mul r3.x, v1.z, cb3[16].z
  36: mul r3.y, v1.z, cb3[17].z
  37: mul r3.z, v1.z, cb3[18].z
  38: add r2.xyz, r2.xyzx, r3.xyzx
  39: dp3 r0.x, r2.xyzx, r2.xyzx
  40: rsq r0.x, r0.x
  41: mul r2.xyz, r0.xxxx, r2.xyzx
  42: mul r3.xyz, r1.yzxy, r2.zxyz
  43: mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
  44: mov o5.xyz, r2.xyzx
  45: mul r0.x, v4.w, cb3[21].w
  46: mul o4.xyz, r0.xxxx, r1.xyzx
  47: mov o4.w, r0.y
  48: mov o5.w, r0.z
  49: mul r0.xyzw, v0.yyyy, cb3[13].xyzw
  50: mad r0.xyzw, cb3[12].xyzw, v0.xxxx, r0.xyzw
  51: mad r0.xyzw, cb3[14].xyzw, v0.zzzz, r0.xyzw
  52: mad r0.xyzw, cb3[15].xyzw, v0.wwww, r0.xyzw
  53: mul r1.xyzw, r0.yyyy, cb0[16].xyzw
  54: mad r1.xyzw, cb0[15].xyzw, r0.xxxx, r1.xyzw
  55: mad r1.xyzw, cb0[17].xyzw, r0.zzzz, r1.xyzw
  56: mad o6.xyzw, cb0[18].xyzw, r0.wwww, r1.xyzw
  57: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "d3d11_9x " {
// Stats: 51 math
Keywords { "SPOT" "SHADOWS_OFF" "_ALPHABLEND_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
ConstBuffer "$Globals" 304
Matrix 240 [_LightMatrix0]
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
Vector 336 [unity_WorldTransformParams]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c1         cb0            10         2  ( FLT, FLT, FLT, FLT)
// c3         cb0            13         1  ( FLT, FLT, FLT, FLT)
// c4         cb0            15         4  ( FLT, FLT, FLT, FLT)
// c8         cb1             4         1  ( FLT, FLT, FLT, FLT)
// c9         cb2             0         1  ( FLT, FLT, FLT, FLT)
// c10        cb3             0         4  ( FLT, FLT, FLT, FLT)
// c14        cb3            12         7  ( FLT, FLT, FLT, FLT)
// c21        cb3            21         1  ( FLT, FLT, FLT, FLT)
//
//
// Runtime generated constant mappings:
//
// Target Reg                               Constant Description
// ---------- --------------------------------------------------
// c0                              Vertex Shader position offset
//
//
// Level9 shader bytecode:
//
    vs_2_0
          dcl_texcoord v0
          dcl_texcoord1 v1
          dcl_texcoord2 v2
          dcl_texcoord3 v3
          dcl_texcoord4 v4
   0:     mad oT0.xy, v2, c1, c1.zwzw
   1:     mul r0.x, c3.z, c3.z
   2:     sge r0.x, -r0.x, r0.x
   3:     mov r1.xy, v2
   4:     lrp r2.xy, r0.x, r1, v3
   5:     mad oT0.zw, r2.xyxy, c2.xyxy, c2
   6:     mul r0.xyz, v0.y, c15
   7:     mad r0.xyz, c14, v0.x, r0
   8:     mad r0.xyz, c16, v0.z, r0
   9:     mad r0.xyz, c17, v0.w, r0
  10:     add r1.xyz, r0, -c8
  11:     mad r0.xyz, r0, -c9.w, c9
  12:     nrm r2.xyz, r0
  15:     dp3 r0.x, r1, r1
  16:     rsq r0.x, r0.x
  17:     mul oT1.xyz, r0.x, r1
  18:     mul r0.x, v1.x, c18.x
  19:     mul r0.y, v1.x, c19.x
  20:     mul r0.z, v1.x, c20.x
  21:     mul r1.x, v1.y, c18.y
  22:     mul r1.y, v1.y, c19.y
  23:     mul r1.z, v1.y, c20.y
  24:     add r0.xyz, r0, r1
  25:     mul r1.x, v1.z, c18.z
  26:     mul r1.y, v1.z, c19.z
  27:     mul r1.z, v1.z, c20.z
  28:     add r0.xyz, r0, r1
  29:     nrm r1.xyz, r0
  32:     mul r0.xyz, v4.y, c15
  33:     mad r0.xyz, c14, v4.x, r0
  34:     mad r0.xyz, c16, v4.z, r0
  35:     nrm r3.xyz, r0
  38:     mul r0.xyz, r1.zxyw, r3.yzxw
  39:     mad r0.xyz, r1.yzxw, r3.zxyw, -r0
  40:     mov oT4.xyz, r1
  41:     mov oT2.xyz, r3
  42:     mul r0.w, v4.w, c21.w
  43:     mul oT3.xyz, r0.w, r0
  44:     mul r0, v0.y, c15
  45:     mad r0, c14, v0.x, r0
  46:     mad r0, c16, v0.z, r0
  47:     mad r0, c17, v0.w, r0
  48:     mul r1, r0.y, c5
  49:     mad r1, c4, r0.x, r1
  50:     mad r1, c6, r0.z, r1
  51:     mad oT5, c7, r0.w, r1
  52:     mul r0, v0.y, c11
  53:     mad r0, c10, v0.x, r0
  54:     mad r0, c12, v0.z, r0
  55:     mad r0, c13, v0.w, r0
  56:     mad oPos.xy, r0.w, c0, r0
  57:     mov oPos.zw, r0
  58:     mov oT2.w, r2.x
  59:     mov oT3.w, r2.y
  60:     mov oT4.w, r2.z

// approximately 61 instruction slots used
      vs_4_0
      dcl_constantbuffer cb0[19], immediateIndexed
      dcl_constantbuffer cb1[5], immediateIndexed
      dcl_constantbuffer cb2[1], immediateIndexed
      dcl_constantbuffer cb3[22], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: mad o0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   4: eq r0.x, cb0[13].z, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[11].xxxy, cb0[11].zzzw
   7: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  13: mad r0.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  14: dp3 r0.w, r1.xyzx, r1.xyzx
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: dp3 r0.w, r0.xyzx, r0.xyzx
  18: rsq r0.w, r0.w
  19: mul r0.xyz, r0.wwww, r0.xyzx
  20: mov o3.w, r0.x
  21: mul r1.xyz, v4.yyyy, cb3[13].xyzx
  22: mad r1.xyz, cb3[12].xyzx, v4.xxxx, r1.xyzx
  23: mad r1.xyz, cb3[14].xyzx, v4.zzzz, r1.xyzx
  24: dp3 r0.x, r1.xyzx, r1.xyzx
  25: rsq r0.x, r0.x
  26: mul r1.xyz, r0.xxxx, r1.xyzx
  27: mov o3.xyz, r1.xyzx
  28: mul r2.x, v1.x, cb3[16].x
  29: mul r2.y, v1.x, cb3[17].x
  30: mul r2.z, v1.x, cb3[18].x
  31: mul r3.x, v1.y, cb3[16].y
  32: mul r3.y, v1.y, cb3[17].y
  33: mul r3.z, v1.y, cb3[18].y
  34: add r2.xyz, r2.xyzx, r3.xyzx
  35: mul r3.x, v1.z, cb3[16].z
  36: mul r3.y, v1.z, cb3[17].z
  37: mul r3.z, v1.z, cb3[18].z
  38: add r2.xyz, r2.xyzx, r3.xyzx
  39: dp3 r0.x, r2.xyzx, r2.xyzx
  40: rsq r0.x, r0.x
  41: mul r2.xyz, r0.xxxx, r2.xyzx
  42: mul r3.xyz, r1.yzxy, r2.zxyz
  43: mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
  44: mov o5.xyz, r2.xyzx
  45: mul r0.x, v4.w, cb3[21].w
  46: mul o4.xyz, r0.xxxx, r1.xyzx
  47: mov o4.w, r0.y
  48: mov o5.w, r0.z
  49: mul r0.xyzw, v0.yyyy, cb3[13].xyzw
  50: mad r0.xyzw, cb3[12].xyzw, v0.xxxx, r0.xyzw
  51: mad r0.xyzw, cb3[14].xyzw, v0.zzzz, r0.xyzw
  52: mad r0.xyzw, cb3[15].xyzw, v0.wwww, r0.xyzw
  53: mul r1.xyzw, r0.yyyy, cb0[16].xyzw
  54: mad r1.xyzw, cb0[15].xyzw, r0.xxxx, r1.xyzw
  55: mad r1.xyzw, cb0[17].xyzw, r0.zzzz, r1.xyzw
  56: mad o6.xyzw, cb0[18].xyzw, r0.wwww, r1.xyzw
  57: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
// Stats: 31 math, 4 textures
Keywords { "POINT_COOKIE" "SHADOWS_OFF" "_ALPHABLEND_ON" }
"#version 120

#ifdef VERTEX
uniform vec3 _WorldSpaceCameraPos;
uniform vec4 _WorldSpaceLightPos0;

uniform mat4 _Object2World;
uniform mat4 _World2Object;
uniform vec4 unity_WorldTransformParams;
uniform vec4 _MainTex_ST;
uniform vec4 _DetailAlbedoMap_ST;
uniform float _UVSec;
uniform mat4 _LightMatrix0;
attribute vec4 TANGENT;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec3 xlv_TEXCOORD5;
void main ()
{
  vec2 tmpvar_1;
  tmpvar_1 = gl_MultiTexCoord0.xy;
  vec2 tmpvar_2;
  tmpvar_2 = gl_MultiTexCoord1.xy;
  vec4 tmpvar_3;
  vec4 tmpvar_4;
  vec4 tmpvar_5;
  vec4 tmpvar_6;
  vec4 tmpvar_7;
  tmpvar_7 = (_Object2World * gl_Vertex);
  tmpvar_3 = (gl_ModelViewProjectionMatrix * gl_Vertex);
  vec4 texcoord_8;
  texcoord_8.xy = ((gl_MultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  vec2 tmpvar_9;
  if ((_UVSec == 0.0)) {
    tmpvar_9 = tmpvar_1;
  } else {
    tmpvar_9 = tmpvar_2;
  };
  texcoord_8.zw = ((tmpvar_9 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  vec4 v_10;
  v_10.x = _World2Object[0].x;
  v_10.y = _World2Object[1].x;
  v_10.z = _World2Object[2].x;
  v_10.w = _World2Object[3].x;
  vec4 v_11;
  v_11.x = _World2Object[0].y;
  v_11.y = _World2Object[1].y;
  v_11.z = _World2Object[2].y;
  v_11.w = _World2Object[3].y;
  vec4 v_12;
  v_12.x = _World2Object[0].z;
  v_12.y = _World2Object[1].z;
  v_12.z = _World2Object[2].z;
  v_12.w = _World2Object[3].z;
  vec3 tmpvar_13;
  tmpvar_13 = normalize(((
    (v_10.xyz * gl_Normal.x)
   + 
    (v_11.xyz * gl_Normal.y)
  ) + (v_12.xyz * gl_Normal.z)));
  mat3 tmpvar_14;
  tmpvar_14[0] = _Object2World[0].xyz;
  tmpvar_14[1] = _Object2World[1].xyz;
  tmpvar_14[2] = _Object2World[2].xyz;
  vec4 tmpvar_15;
  tmpvar_15.xyz = normalize((tmpvar_14 * TANGENT.xyz));
  tmpvar_15.w = TANGENT.w;
  vec3 tmpvar_16;
  vec3 tmpvar_17;
  tmpvar_16 = tmpvar_15.xyz;
  tmpvar_17 = (((tmpvar_13.yzx * tmpvar_15.zxy) - (tmpvar_13.zxy * tmpvar_15.yzx)) * (TANGENT.w * unity_WorldTransformParams.w));
  vec3 tmpvar_18;
  vec3 tmpvar_19;
  vec3 tmpvar_20;
  tmpvar_18.x = tmpvar_16.x;
  tmpvar_18.y = tmpvar_17.x;
  tmpvar_18.z = tmpvar_13.x;
  tmpvar_19.x = tmpvar_16.y;
  tmpvar_19.y = tmpvar_17.y;
  tmpvar_19.z = tmpvar_13.y;
  tmpvar_20.x = tmpvar_16.z;
  tmpvar_20.y = tmpvar_17.z;
  tmpvar_20.z = tmpvar_13.z;
  vec3 v_21;
  v_21.x = tmpvar_18.x;
  v_21.y = tmpvar_19.x;
  v_21.z = tmpvar_20.x;
  tmpvar_4.xyz = v_21;
  vec3 v_22;
  v_22.x = tmpvar_18.y;
  v_22.y = tmpvar_19.y;
  v_22.z = tmpvar_20.y;
  tmpvar_5.xyz = v_22;
  vec3 v_23;
  v_23.x = tmpvar_18.z;
  v_23.y = tmpvar_19.z;
  v_23.z = tmpvar_20.z;
  tmpvar_6.xyz = v_23;
  vec3 tmpvar_24;
  tmpvar_24 = normalize((_WorldSpaceLightPos0.xyz - (tmpvar_7.xyz * _WorldSpaceLightPos0.w)));
  tmpvar_4.w = tmpvar_24.x;
  tmpvar_5.w = tmpvar_24.y;
  tmpvar_6.w = tmpvar_24.z;
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = texcoord_8;
  xlv_TEXCOORD1 = normalize((tmpvar_7.xyz - _WorldSpaceCameraPos));
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  xlv_TEXCOORD5 = (_LightMatrix0 * (_Object2World * gl_Vertex)).xyz;
}


#endif
#ifdef FRAGMENT
uniform vec4 unity_ColorSpaceDielectricSpec;
uniform vec4 _LightColor0;
uniform sampler2D unity_NHxRoughness;
uniform vec4 _Color;
uniform sampler2D _MainTex;
uniform float _Metallic;
uniform float _Glossiness;
uniform samplerCube _LightTexture0;
uniform sampler2D _LightTextureB0;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec3 xlv_TEXCOORD5;
void main ()
{
  vec3 tmpvar_1;
  vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  tmpvar_1 = (_Color.xyz * tmpvar_2.xyz);
  vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD2_2.xyz);
  vec3 tmpvar_4;
  tmpvar_4.x = xlv_TEXCOORD2.w;
  tmpvar_4.y = xlv_TEXCOORD2_1.w;
  tmpvar_4.z = xlv_TEXCOORD2_2.w;
  vec3 viewDir_5;
  viewDir_5 = -(xlv_TEXCOORD1);
  vec2 tmpvar_6;
  tmpvar_6.x = dot ((viewDir_5 - (2.0 * 
    (dot (tmpvar_3, viewDir_5) * tmpvar_3)
  )), tmpvar_4);
  tmpvar_6.y = (1.0 - clamp (dot (tmpvar_3, viewDir_5), 0.0, 1.0));
  vec2 tmpvar_7;
  tmpvar_7.x = ((tmpvar_6 * tmpvar_6) * (tmpvar_6 * tmpvar_6)).x;
  tmpvar_7.y = (1.0 - _Glossiness);
  vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (((tmpvar_1 * 
    (unity_ColorSpaceDielectricSpec.w - (_Metallic * unity_ColorSpaceDielectricSpec.w))
  ) + (
    (texture2D (unity_NHxRoughness, tmpvar_7).w * 16.0)
   * 
    mix (unity_ColorSpaceDielectricSpec.xyz, tmpvar_1, vec3(_Metallic))
  )) * ((_LightColor0.xyz * 
    (texture2D (_LightTextureB0, vec2(dot (xlv_TEXCOORD5, xlv_TEXCOORD5))).w * textureCube (_LightTexture0, xlv_TEXCOORD5).w)
  ) * clamp (
    dot (tmpvar_3, tmpvar_4)
  , 0.0, 1.0)));
  vec4 xlat_varoutput_9;
  xlat_varoutput_9.xyz = tmpvar_8.xyz;
  xlat_varoutput_9.w = (tmpvar_2.w * _Color.w);
  gl_FragData[0] = xlat_varoutput_9;
}


#endif
"
}
SubProgram "d3d9 " {
// Stats: 47 math
Keywords { "POINT_COOKIE" "SHADOWS_OFF" "_ALPHABLEND_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
Matrix 11 [_LightMatrix0] 3
Matrix 4 [_Object2World]
Matrix 8 [_World2Object] 3
Matrix 0 [glstate_matrix_mvp]
Vector 18 [_DetailAlbedoMap_ST]
Vector 17 [_MainTex_ST]
Float 19 [_UVSec]
Vector 14 [_WorldSpaceCameraPos]
Vector 15 [_WorldSpaceLightPos0]
Vector 16 [unity_WorldTransformParams]
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   row_major float4x4 _LightMatrix0;
//   float4 _MainTex_ST;
//   row_major float4x4 _Object2World;
//   float _UVSec;
//   row_major float4x4 _World2Object;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 glstate_matrix_mvp;
//   float4 unity_WorldTransformParams;
//
//
// Registers:
//
//   Name                       Reg   Size
//   -------------------------- ----- ----
//   glstate_matrix_mvp         c0       4
//   _Object2World              c4       4
//   _World2Object              c8       3
//   _LightMatrix0              c11      3
//   _WorldSpaceCameraPos       c14      1
//   _WorldSpaceLightPos0       c15      1
//   unity_WorldTransformParams c16      1
//   _MainTex_ST                c17      1
//   _DetailAlbedoMap_ST        c18      1
//   _UVSec                     c19      1
//

    vs_2_0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_tangent v4
    dp4 oPos.x, c0, v0
    dp4 oPos.y, c1, v0
    dp4 oPos.z, c2, v0
    dp4 oPos.w, c3, v0
    mad oT0.xy, v2, c17, c17.zwzw
    mul r0.x, c19.x, c19.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad oT0.zw, r2.xyxy, c18.xyxy, c18
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add r1.xyz, r0, -c14
    dp3 r1.w, r1, r1
    rsq r1.w, r1.w
    mul oT1.xyz, r1.w, r1
    mul r1.xyz, v1.y, c9
    mad r1.xyz, c8, v1.x, r1
    mad r1.xyz, c10, v1.z, r1
    nrm r2.xyz, r1
    dp3 r1.x, c4, v4
    dp3 r1.y, c5, v4
    dp3 r1.z, c6, v4
    nrm r3.xyz, r1
    mul r1.xyz, r2.zxyw, r3.yzxw
    mad r1.xyz, r2.yzxw, r3.zxyw, -r1
    mov oT4.xyz, r2
    mov oT2.xyz, r3
    mul r1.w, v4.w, c16.w
    mul oT3.xyz, r1.w, r1
    dp4 r0.w, c7, v0
    dp4 oT5.x, c11, r0
    dp4 oT5.y, c12, r0
    dp4 oT5.z, c13, r0
    mad r0.xyz, r0, -c15.w, c15
    nrm r1.xyz, r0
    mov oT2.w, r1.x
    mov oT3.w, r1.y
    mov oT4.w, r1.z

// approximately 46 instruction slots used
"
}
SubProgram "d3d11 " {
// Stats: 51 math
Keywords { "POINT_COOKIE" "SHADOWS_OFF" "_ALPHABLEND_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
ConstBuffer "$Globals" 304
Matrix 240 [_LightMatrix0]
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
Vector 336 [unity_WorldTransformParams]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer cb0[19], immediateIndexed
      dcl_constantbuffer cb1[5], immediateIndexed
      dcl_constantbuffer cb2[1], immediateIndexed
      dcl_constantbuffer cb3[22], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: mad o0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   4: eq r0.x, cb0[13].z, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[11].xxxy, cb0[11].zzzw
   7: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  13: mad r0.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  14: dp3 r0.w, r1.xyzx, r1.xyzx
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: dp3 r0.w, r0.xyzx, r0.xyzx
  18: rsq r0.w, r0.w
  19: mul r0.xyz, r0.wwww, r0.xyzx
  20: mov o3.w, r0.x
  21: mul r1.xyz, v4.yyyy, cb3[13].xyzx
  22: mad r1.xyz, cb3[12].xyzx, v4.xxxx, r1.xyzx
  23: mad r1.xyz, cb3[14].xyzx, v4.zzzz, r1.xyzx
  24: dp3 r0.x, r1.xyzx, r1.xyzx
  25: rsq r0.x, r0.x
  26: mul r1.xyz, r0.xxxx, r1.xyzx
  27: mov o3.xyz, r1.xyzx
  28: mul r2.x, v1.x, cb3[16].x
  29: mul r2.y, v1.x, cb3[17].x
  30: mul r2.z, v1.x, cb3[18].x
  31: mul r3.x, v1.y, cb3[16].y
  32: mul r3.y, v1.y, cb3[17].y
  33: mul r3.z, v1.y, cb3[18].y
  34: add r2.xyz, r2.xyzx, r3.xyzx
  35: mul r3.x, v1.z, cb3[16].z
  36: mul r3.y, v1.z, cb3[17].z
  37: mul r3.z, v1.z, cb3[18].z
  38: add r2.xyz, r2.xyzx, r3.xyzx
  39: dp3 r0.x, r2.xyzx, r2.xyzx
  40: rsq r0.x, r0.x
  41: mul r2.xyz, r0.xxxx, r2.xyzx
  42: mul r3.xyz, r1.yzxy, r2.zxyz
  43: mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
  44: mov o5.xyz, r2.xyzx
  45: mul r0.x, v4.w, cb3[21].w
  46: mul o4.xyz, r0.xxxx, r1.xyzx
  47: mov o4.w, r0.y
  48: mov o5.w, r0.z
  49: mul r0.xyzw, v0.yyyy, cb3[13].xyzw
  50: mad r0.xyzw, cb3[12].xyzw, v0.xxxx, r0.xyzw
  51: mad r0.xyzw, cb3[14].xyzw, v0.zzzz, r0.xyzw
  52: mad r0.xyzw, cb3[15].xyzw, v0.wwww, r0.xyzw
  53: mul r1.xyz, r0.yyyy, cb0[16].xyzx
  54: mad r1.xyz, cb0[15].xyzx, r0.xxxx, r1.xyzx
  55: mad r0.xyz, cb0[17].xyzx, r0.zzzz, r1.xyzx
  56: mad o6.xyz, cb0[18].xyzx, r0.wwww, r0.xyzx
  57: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "d3d11_9x " {
// Stats: 51 math
Keywords { "POINT_COOKIE" "SHADOWS_OFF" "_ALPHABLEND_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
ConstBuffer "$Globals" 304
Matrix 240 [_LightMatrix0]
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
Vector 336 [unity_WorldTransformParams]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c1         cb0            10         2  ( FLT, FLT, FLT, FLT)
// c3         cb0            13         1  ( FLT, FLT, FLT, FLT)
// c4         cb0            15         4  ( FLT, FLT, FLT, FLT)
// c8         cb1             4         1  ( FLT, FLT, FLT, FLT)
// c9         cb2             0         1  ( FLT, FLT, FLT, FLT)
// c10        cb3             0         4  ( FLT, FLT, FLT, FLT)
// c14        cb3            12         7  ( FLT, FLT, FLT, FLT)
// c21        cb3            21         1  ( FLT, FLT, FLT, FLT)
//
//
// Runtime generated constant mappings:
//
// Target Reg                               Constant Description
// ---------- --------------------------------------------------
// c0                              Vertex Shader position offset
//
//
// Level9 shader bytecode:
//
    vs_2_0
          dcl_texcoord v0
          dcl_texcoord1 v1
          dcl_texcoord2 v2
          dcl_texcoord3 v3
          dcl_texcoord4 v4
   0:     mad oT0.xy, v2, c1, c1.zwzw
   1:     mul r0.x, c3.z, c3.z
   2:     sge r0.x, -r0.x, r0.x
   3:     mov r1.xy, v2
   4:     lrp r2.xy, r0.x, r1, v3
   5:     mad oT0.zw, r2.xyxy, c2.xyxy, c2
   6:     mul r0.xyz, v0.y, c15
   7:     mad r0.xyz, c14, v0.x, r0
   8:     mad r0.xyz, c16, v0.z, r0
   9:     mad r0.xyz, c17, v0.w, r0
  10:     add r1.xyz, r0, -c8
  11:     mad r0.xyz, r0, -c9.w, c9
  12:     nrm r2.xyz, r0
  15:     dp3 r0.x, r1, r1
  16:     rsq r0.x, r0.x
  17:     mul oT1.xyz, r0.x, r1
  18:     mul r0.x, v1.x, c18.x
  19:     mul r0.y, v1.x, c19.x
  20:     mul r0.z, v1.x, c20.x
  21:     mul r1.x, v1.y, c18.y
  22:     mul r1.y, v1.y, c19.y
  23:     mul r1.z, v1.y, c20.y
  24:     add r0.xyz, r0, r1
  25:     mul r1.x, v1.z, c18.z
  26:     mul r1.y, v1.z, c19.z
  27:     mul r1.z, v1.z, c20.z
  28:     add r0.xyz, r0, r1
  29:     nrm r1.xyz, r0
  32:     mul r0.xyz, v4.y, c15
  33:     mad r0.xyz, c14, v4.x, r0
  34:     mad r0.xyz, c16, v4.z, r0
  35:     nrm r3.xyz, r0
  38:     mul r0.xyz, r1.zxyw, r3.yzxw
  39:     mad r0.xyz, r1.yzxw, r3.zxyw, -r0
  40:     mov oT4.xyz, r1
  41:     mov oT2.xyz, r3
  42:     mul r0.w, v4.w, c21.w
  43:     mul oT3.xyz, r0.w, r0
  44:     mul r0, v0.y, c15
  45:     mad r0, c14, v0.x, r0
  46:     mad r0, c16, v0.z, r0
  47:     mad r0, c17, v0.w, r0
  48:     mul r1.xyz, r0.y, c5
  49:     mad r1.xyz, c4, r0.x, r1
  50:     mad r0.xyz, c6, r0.z, r1
  51:     mad oT5.xyz, c7, r0.w, r0
  52:     mul r0, v0.y, c11
  53:     mad r0, c10, v0.x, r0
  54:     mad r0, c12, v0.z, r0
  55:     mad r0, c13, v0.w, r0
  56:     mad oPos.xy, r0.w, c0, r0
  57:     mov oPos.zw, r0
  58:     mov oT2.w, r2.x
  59:     mov oT3.w, r2.y
  60:     mov oT4.w, r2.z

// approximately 61 instruction slots used
      vs_4_0
      dcl_constantbuffer cb0[19], immediateIndexed
      dcl_constantbuffer cb1[5], immediateIndexed
      dcl_constantbuffer cb2[1], immediateIndexed
      dcl_constantbuffer cb3[22], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: mad o0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   4: eq r0.x, cb0[13].z, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[11].xxxy, cb0[11].zzzw
   7: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  13: mad r0.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  14: dp3 r0.w, r1.xyzx, r1.xyzx
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: dp3 r0.w, r0.xyzx, r0.xyzx
  18: rsq r0.w, r0.w
  19: mul r0.xyz, r0.wwww, r0.xyzx
  20: mov o3.w, r0.x
  21: mul r1.xyz, v4.yyyy, cb3[13].xyzx
  22: mad r1.xyz, cb3[12].xyzx, v4.xxxx, r1.xyzx
  23: mad r1.xyz, cb3[14].xyzx, v4.zzzz, r1.xyzx
  24: dp3 r0.x, r1.xyzx, r1.xyzx
  25: rsq r0.x, r0.x
  26: mul r1.xyz, r0.xxxx, r1.xyzx
  27: mov o3.xyz, r1.xyzx
  28: mul r2.x, v1.x, cb3[16].x
  29: mul r2.y, v1.x, cb3[17].x
  30: mul r2.z, v1.x, cb3[18].x
  31: mul r3.x, v1.y, cb3[16].y
  32: mul r3.y, v1.y, cb3[17].y
  33: mul r3.z, v1.y, cb3[18].y
  34: add r2.xyz, r2.xyzx, r3.xyzx
  35: mul r3.x, v1.z, cb3[16].z
  36: mul r3.y, v1.z, cb3[17].z
  37: mul r3.z, v1.z, cb3[18].z
  38: add r2.xyz, r2.xyzx, r3.xyzx
  39: dp3 r0.x, r2.xyzx, r2.xyzx
  40: rsq r0.x, r0.x
  41: mul r2.xyz, r0.xxxx, r2.xyzx
  42: mul r3.xyz, r1.yzxy, r2.zxyz
  43: mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
  44: mov o5.xyz, r2.xyzx
  45: mul r0.x, v4.w, cb3[21].w
  46: mul o4.xyz, r0.xxxx, r1.xyzx
  47: mov o4.w, r0.y
  48: mov o5.w, r0.z
  49: mul r0.xyzw, v0.yyyy, cb3[13].xyzw
  50: mad r0.xyzw, cb3[12].xyzw, v0.xxxx, r0.xyzw
  51: mad r0.xyzw, cb3[14].xyzw, v0.zzzz, r0.xyzw
  52: mad r0.xyzw, cb3[15].xyzw, v0.wwww, r0.xyzw
  53: mul r1.xyz, r0.yyyy, cb0[16].xyzx
  54: mad r1.xyz, cb0[15].xyzx, r0.xxxx, r1.xyzx
  55: mad r0.xyz, cb0[17].xyzx, r0.zzzz, r1.xyzx
  56: mad o6.xyz, cb0[18].xyzx, r0.wwww, r0.xyzx
  57: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
// Stats: 29 math, 3 textures
Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_OFF" "_ALPHABLEND_ON" }
"#version 120

#ifdef VERTEX
uniform vec3 _WorldSpaceCameraPos;
uniform vec4 _WorldSpaceLightPos0;

uniform mat4 _Object2World;
uniform mat4 _World2Object;
uniform vec4 unity_WorldTransformParams;
uniform vec4 _MainTex_ST;
uniform vec4 _DetailAlbedoMap_ST;
uniform float _UVSec;
uniform mat4 _LightMatrix0;
attribute vec4 TANGENT;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec2 xlv_TEXCOORD5;
void main ()
{
  vec2 tmpvar_1;
  tmpvar_1 = gl_MultiTexCoord0.xy;
  vec2 tmpvar_2;
  tmpvar_2 = gl_MultiTexCoord1.xy;
  vec4 tmpvar_3;
  vec4 tmpvar_4;
  vec4 tmpvar_5;
  vec4 tmpvar_6;
  vec4 tmpvar_7;
  tmpvar_7 = (_Object2World * gl_Vertex);
  tmpvar_3 = (gl_ModelViewProjectionMatrix * gl_Vertex);
  vec4 texcoord_8;
  texcoord_8.xy = ((gl_MultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  vec2 tmpvar_9;
  if ((_UVSec == 0.0)) {
    tmpvar_9 = tmpvar_1;
  } else {
    tmpvar_9 = tmpvar_2;
  };
  texcoord_8.zw = ((tmpvar_9 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  vec4 v_10;
  v_10.x = _World2Object[0].x;
  v_10.y = _World2Object[1].x;
  v_10.z = _World2Object[2].x;
  v_10.w = _World2Object[3].x;
  vec4 v_11;
  v_11.x = _World2Object[0].y;
  v_11.y = _World2Object[1].y;
  v_11.z = _World2Object[2].y;
  v_11.w = _World2Object[3].y;
  vec4 v_12;
  v_12.x = _World2Object[0].z;
  v_12.y = _World2Object[1].z;
  v_12.z = _World2Object[2].z;
  v_12.w = _World2Object[3].z;
  vec3 tmpvar_13;
  tmpvar_13 = normalize(((
    (v_10.xyz * gl_Normal.x)
   + 
    (v_11.xyz * gl_Normal.y)
  ) + (v_12.xyz * gl_Normal.z)));
  mat3 tmpvar_14;
  tmpvar_14[0] = _Object2World[0].xyz;
  tmpvar_14[1] = _Object2World[1].xyz;
  tmpvar_14[2] = _Object2World[2].xyz;
  vec4 tmpvar_15;
  tmpvar_15.xyz = normalize((tmpvar_14 * TANGENT.xyz));
  tmpvar_15.w = TANGENT.w;
  vec3 tmpvar_16;
  vec3 tmpvar_17;
  tmpvar_16 = tmpvar_15.xyz;
  tmpvar_17 = (((tmpvar_13.yzx * tmpvar_15.zxy) - (tmpvar_13.zxy * tmpvar_15.yzx)) * (TANGENT.w * unity_WorldTransformParams.w));
  vec3 tmpvar_18;
  vec3 tmpvar_19;
  vec3 tmpvar_20;
  tmpvar_18.x = tmpvar_16.x;
  tmpvar_18.y = tmpvar_17.x;
  tmpvar_18.z = tmpvar_13.x;
  tmpvar_19.x = tmpvar_16.y;
  tmpvar_19.y = tmpvar_17.y;
  tmpvar_19.z = tmpvar_13.y;
  tmpvar_20.x = tmpvar_16.z;
  tmpvar_20.y = tmpvar_17.z;
  tmpvar_20.z = tmpvar_13.z;
  vec3 v_21;
  v_21.x = tmpvar_18.x;
  v_21.y = tmpvar_19.x;
  v_21.z = tmpvar_20.x;
  tmpvar_4.xyz = v_21;
  vec3 v_22;
  v_22.x = tmpvar_18.y;
  v_22.y = tmpvar_19.y;
  v_22.z = tmpvar_20.y;
  tmpvar_5.xyz = v_22;
  vec3 v_23;
  v_23.x = tmpvar_18.z;
  v_23.y = tmpvar_19.z;
  v_23.z = tmpvar_20.z;
  tmpvar_6.xyz = v_23;
  vec3 tmpvar_24;
  tmpvar_24 = (_WorldSpaceLightPos0.xyz - (tmpvar_7.xyz * _WorldSpaceLightPos0.w));
  tmpvar_4.w = tmpvar_24.x;
  tmpvar_5.w = tmpvar_24.y;
  tmpvar_6.w = tmpvar_24.z;
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = texcoord_8;
  xlv_TEXCOORD1 = normalize((tmpvar_7.xyz - _WorldSpaceCameraPos));
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  xlv_TEXCOORD5 = (_LightMatrix0 * (_Object2World * gl_Vertex)).xy;
}


#endif
#ifdef FRAGMENT
uniform vec4 unity_ColorSpaceDielectricSpec;
uniform vec4 _LightColor0;
uniform sampler2D unity_NHxRoughness;
uniform vec4 _Color;
uniform sampler2D _MainTex;
uniform float _Metallic;
uniform float _Glossiness;
uniform sampler2D _LightTexture0;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec2 xlv_TEXCOORD5;
void main ()
{
  vec3 tmpvar_1;
  vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  tmpvar_1 = (_Color.xyz * tmpvar_2.xyz);
  vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD2_2.xyz);
  vec3 tmpvar_4;
  tmpvar_4.x = xlv_TEXCOORD2.w;
  tmpvar_4.y = xlv_TEXCOORD2_1.w;
  tmpvar_4.z = xlv_TEXCOORD2_2.w;
  vec3 viewDir_5;
  viewDir_5 = -(xlv_TEXCOORD1);
  vec2 tmpvar_6;
  tmpvar_6.x = dot ((viewDir_5 - (2.0 * 
    (dot (tmpvar_3, viewDir_5) * tmpvar_3)
  )), tmpvar_4);
  tmpvar_6.y = (1.0 - clamp (dot (tmpvar_3, viewDir_5), 0.0, 1.0));
  vec2 tmpvar_7;
  tmpvar_7.x = ((tmpvar_6 * tmpvar_6) * (tmpvar_6 * tmpvar_6)).x;
  tmpvar_7.y = (1.0 - _Glossiness);
  vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (((tmpvar_1 * 
    (unity_ColorSpaceDielectricSpec.w - (_Metallic * unity_ColorSpaceDielectricSpec.w))
  ) + (
    (texture2D (unity_NHxRoughness, tmpvar_7).w * 16.0)
   * 
    mix (unity_ColorSpaceDielectricSpec.xyz, tmpvar_1, vec3(_Metallic))
  )) * ((_LightColor0.xyz * texture2D (_LightTexture0, xlv_TEXCOORD5).w) * clamp (
    dot (tmpvar_3, tmpvar_4)
  , 0.0, 1.0)));
  vec4 xlat_varoutput_9;
  xlat_varoutput_9.xyz = tmpvar_8.xyz;
  xlat_varoutput_9.w = (tmpvar_2.w * _Color.w);
  gl_FragData[0] = xlat_varoutput_9;
}


#endif
"
}
SubProgram "d3d9 " {
// Stats: 43 math
Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_OFF" "_ALPHABLEND_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
Matrix 11 [_LightMatrix0] 2
Matrix 4 [_Object2World]
Matrix 8 [_World2Object] 3
Matrix 0 [glstate_matrix_mvp]
Vector 17 [_DetailAlbedoMap_ST]
Vector 16 [_MainTex_ST]
Float 18 [_UVSec]
Vector 13 [_WorldSpaceCameraPos]
Vector 14 [_WorldSpaceLightPos0]
Vector 15 [unity_WorldTransformParams]
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   row_major float4x4 _LightMatrix0;
//   float4 _MainTex_ST;
//   row_major float4x4 _Object2World;
//   float _UVSec;
//   row_major float4x4 _World2Object;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 glstate_matrix_mvp;
//   float4 unity_WorldTransformParams;
//
//
// Registers:
//
//   Name                       Reg   Size
//   -------------------------- ----- ----
//   glstate_matrix_mvp         c0       4
//   _Object2World              c4       4
//   _World2Object              c8       3
//   _LightMatrix0              c11      2
//   _WorldSpaceCameraPos       c13      1
//   _WorldSpaceLightPos0       c14      1
//   unity_WorldTransformParams c15      1
//   _MainTex_ST                c16      1
//   _DetailAlbedoMap_ST        c17      1
//   _UVSec                     c18      1
//

    vs_2_0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_tangent v4
    dp4 oPos.x, c0, v0
    dp4 oPos.y, c1, v0
    dp4 oPos.z, c2, v0
    dp4 oPos.w, c3, v0
    mad oT0.xy, v2, c16, c16.zwzw
    mul r0.x, c18.x, c18.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad oT0.zw, r2.xyxy, c17.xyxy, c17
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add r1.xyz, r0, -c13
    dp3 r1.w, r1, r1
    rsq r1.w, r1.w
    mul oT1.xyz, r1.w, r1
    mul r1.xyz, v1.y, c9
    mad r1.xyz, c8, v1.x, r1
    mad r1.xyz, c10, v1.z, r1
    nrm r2.xyz, r1
    dp3 r1.x, c4, v4
    dp3 r1.y, c5, v4
    dp3 r1.z, c6, v4
    nrm r3.xyz, r1
    mul r1.xyz, r2.zxyw, r3.yzxw
    mad r1.xyz, r2.yzxw, r3.zxyw, -r1
    mov oT4.xyz, r2
    mov oT2.xyz, r3
    mul r1.w, v4.w, c15.w
    mul oT3.xyz, r1.w, r1
    dp4 r0.w, c7, v0
    dp4 oT5.x, c11, r0
    dp4 oT5.y, c12, r0
    mad r0.xyz, r0, -c14.w, c14
    mov oT2.w, r0.x
    mov oT3.w, r0.y
    mov oT4.w, r0.z

// approximately 42 instruction slots used
"
}
SubProgram "d3d11 " {
// Stats: 48 math
Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_OFF" "_ALPHABLEND_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
ConstBuffer "$Globals" 304
Matrix 240 [_LightMatrix0]
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
Vector 336 [unity_WorldTransformParams]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xy          6     NONE   float   xy  
//
      vs_4_0
      dcl_constantbuffer cb0[19], immediateIndexed
      dcl_constantbuffer cb1[5], immediateIndexed
      dcl_constantbuffer cb2[1], immediateIndexed
      dcl_constantbuffer cb3[22], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xy
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: mad o0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   4: eq r0.x, cb0[13].z, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[11].xxxy, cb0[11].zzzw
   7: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  13: mad r0.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  14: dp3 r0.w, r1.xyzx, r1.xyzx
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mov o3.w, r0.x
  18: mul r1.xyz, v4.yyyy, cb3[13].xyzx
  19: mad r1.xyz, cb3[12].xyzx, v4.xxxx, r1.xyzx
  20: mad r1.xyz, cb3[14].xyzx, v4.zzzz, r1.xyzx
  21: dp3 r0.x, r1.xyzx, r1.xyzx
  22: rsq r0.x, r0.x
  23: mul r1.xyz, r0.xxxx, r1.xyzx
  24: mov o3.xyz, r1.xyzx
  25: mul r2.x, v1.x, cb3[16].x
  26: mul r2.y, v1.x, cb3[17].x
  27: mul r2.z, v1.x, cb3[18].x
  28: mul r3.x, v1.y, cb3[16].y
  29: mul r3.y, v1.y, cb3[17].y
  30: mul r3.z, v1.y, cb3[18].y
  31: add r2.xyz, r2.xyzx, r3.xyzx
  32: mul r3.x, v1.z, cb3[16].z
  33: mul r3.y, v1.z, cb3[17].z
  34: mul r3.z, v1.z, cb3[18].z
  35: add r2.xyz, r2.xyzx, r3.xyzx
  36: dp3 r0.x, r2.xyzx, r2.xyzx
  37: rsq r0.x, r0.x
  38: mul r2.xyz, r0.xxxx, r2.xyzx
  39: mul r3.xyz, r1.yzxy, r2.zxyz
  40: mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
  41: mov o5.xyz, r2.xyzx
  42: mul r0.x, v4.w, cb3[21].w
  43: mul o4.xyz, r0.xxxx, r1.xyzx
  44: mov o4.w, r0.y
  45: mov o5.w, r0.z
  46: mul r0.xyzw, v0.yyyy, cb3[13].xyzw
  47: mad r0.xyzw, cb3[12].xyzw, v0.xxxx, r0.xyzw
  48: mad r0.xyzw, cb3[14].xyzw, v0.zzzz, r0.xyzw
  49: mad r0.xyzw, cb3[15].xyzw, v0.wwww, r0.xyzw
  50: mul r1.xy, r0.yyyy, cb0[16].xyxx
  51: mad r0.xy, cb0[15].xyxx, r0.xxxx, r1.xyxx
  52: mad r0.xy, cb0[17].xyxx, r0.zzzz, r0.xyxx
  53: mad o6.xy, cb0[18].xyxx, r0.wwww, r0.xyxx
  54: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "d3d11_9x " {
// Stats: 48 math
Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_OFF" "_ALPHABLEND_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
ConstBuffer "$Globals" 304
Matrix 240 [_LightMatrix0]
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
Vector 336 [unity_WorldTransformParams]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xy          6     NONE   float   xy  
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c1         cb0            10         2  ( FLT, FLT, FLT, FLT)
// c3         cb0            13         1  ( FLT, FLT, FLT, FLT)
// c4         cb0            15         4  ( FLT, FLT, FLT, FLT)
// c8         cb1             4         1  ( FLT, FLT, FLT, FLT)
// c9         cb2             0         1  ( FLT, FLT, FLT, FLT)
// c10        cb3             0         4  ( FLT, FLT, FLT, FLT)
// c14        cb3            12         7  ( FLT, FLT, FLT, FLT)
// c21        cb3            21         1  ( FLT, FLT, FLT, FLT)
//
//
// Runtime generated constant mappings:
//
// Target Reg                               Constant Description
// ---------- --------------------------------------------------
// c0                              Vertex Shader position offset
//
//
// Level9 shader bytecode:
//
    vs_2_0
          dcl_texcoord v0
          dcl_texcoord1 v1
          dcl_texcoord2 v2
          dcl_texcoord3 v3
          dcl_texcoord4 v4
   0:     mad oT0.xy, v2, c1, c1.zwzw
   1:     mul r0.x, c3.z, c3.z
   2:     sge r0.x, -r0.x, r0.x
   3:     mov r1.xy, v2
   4:     lrp r2.xy, r0.x, r1, v3
   5:     mad oT0.zw, r2.xyxy, c2.xyxy, c2
   6:     mul r0.xyz, v0.y, c15
   7:     mad r0.xyz, c14, v0.x, r0
   8:     mad r0.xyz, c16, v0.z, r0
   9:     mad r0.xyz, c17, v0.w, r0
  10:     add r1.xyz, r0, -c8
  11:     mad r0.xyz, r0, -c9.w, c9
  12:     dp3 r0.w, r1, r1
  13:     rsq r0.w, r0.w
  14:     mul oT1.xyz, r0.w, r1
  15:     mul r1.x, v1.x, c18.x
  16:     mul r1.y, v1.x, c19.x
  17:     mul r1.z, v1.x, c20.x
  18:     mul r2.x, v1.y, c18.y
  19:     mul r2.y, v1.y, c19.y
  20:     mul r2.z, v1.y, c20.y
  21:     add r1.xyz, r1, r2
  22:     mul r2.x, v1.z, c18.z
  23:     mul r2.y, v1.z, c19.z
  24:     mul r2.z, v1.z, c20.z
  25:     add r1.xyz, r1, r2
  26:     nrm r2.xyz, r1
  29:     mul r1.xyz, v4.y, c15
  30:     mad r1.xyz, c14, v4.x, r1
  31:     mad r1.xyz, c16, v4.z, r1
  32:     nrm r3.xyz, r1
  35:     mul r1.xyz, r2.zxyw, r3.yzxw
  36:     mad r1.xyz, r2.yzxw, r3.zxyw, -r1
  37:     mov oT4.xyz, r2
  38:     mov oT2.xyz, r3
  39:     mul r0.w, v4.w, c21.w
  40:     mul oT3.xyz, r0.w, r1
  41:     mul r1, v0.y, c15
  42:     mad r1, c14, v0.x, r1
  43:     mad r1, c16, v0.z, r1
  44:     mad r1, c17, v0.w, r1
  45:     mul r2.xy, r1.y, c5
  46:     mad r1.xy, c4, r1.x, r2
  47:     mad r1.xy, c6, r1.z, r1
  48:     mad oT5.xy, c7, r1.w, r1
  49:     mul r1, v0.y, c11
  50:     mad r1, c10, v0.x, r1
  51:     mad r1, c12, v0.z, r1
  52:     mad r1, c13, v0.w, r1
  53:     mad oPos.xy, r1.w, c0, r1
  54:     mov oPos.zw, r1
  55:     mov oT2.w, r0.x
  56:     mov oT3.w, r0.y
  57:     mov oT4.w, r0.z

// approximately 58 instruction slots used
      vs_4_0
      dcl_constantbuffer cb0[19], immediateIndexed
      dcl_constantbuffer cb1[5], immediateIndexed
      dcl_constantbuffer cb2[1], immediateIndexed
      dcl_constantbuffer cb3[22], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xy
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: mad o0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   4: eq r0.x, cb0[13].z, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[11].xxxy, cb0[11].zzzw
   7: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  13: mad r0.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  14: dp3 r0.w, r1.xyzx, r1.xyzx
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mov o3.w, r0.x
  18: mul r1.xyz, v4.yyyy, cb3[13].xyzx
  19: mad r1.xyz, cb3[12].xyzx, v4.xxxx, r1.xyzx
  20: mad r1.xyz, cb3[14].xyzx, v4.zzzz, r1.xyzx
  21: dp3 r0.x, r1.xyzx, r1.xyzx
  22: rsq r0.x, r0.x
  23: mul r1.xyz, r0.xxxx, r1.xyzx
  24: mov o3.xyz, r1.xyzx
  25: mul r2.x, v1.x, cb3[16].x
  26: mul r2.y, v1.x, cb3[17].x
  27: mul r2.z, v1.x, cb3[18].x
  28: mul r3.x, v1.y, cb3[16].y
  29: mul r3.y, v1.y, cb3[17].y
  30: mul r3.z, v1.y, cb3[18].y
  31: add r2.xyz, r2.xyzx, r3.xyzx
  32: mul r3.x, v1.z, cb3[16].z
  33: mul r3.y, v1.z, cb3[17].z
  34: mul r3.z, v1.z, cb3[18].z
  35: add r2.xyz, r2.xyzx, r3.xyzx
  36: dp3 r0.x, r2.xyzx, r2.xyzx
  37: rsq r0.x, r0.x
  38: mul r2.xyz, r0.xxxx, r2.xyzx
  39: mul r3.xyz, r1.yzxy, r2.zxyz
  40: mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
  41: mov o5.xyz, r2.xyzx
  42: mul r0.x, v4.w, cb3[21].w
  43: mul o4.xyz, r0.xxxx, r1.xyzx
  44: mov o4.w, r0.y
  45: mov o5.w, r0.z
  46: mul r0.xyzw, v0.yyyy, cb3[13].xyzw
  47: mad r0.xyzw, cb3[12].xyzw, v0.xxxx, r0.xyzw
  48: mad r0.xyzw, cb3[14].xyzw, v0.zzzz, r0.xyzw
  49: mad r0.xyzw, cb3[15].xyzw, v0.wwww, r0.xyzw
  50: mul r1.xy, r0.yyyy, cb0[16].xyxx
  51: mad r0.xy, cb0[15].xyxx, r0.xxxx, r1.xyxx
  52: mad r0.xy, cb0[17].xyxx, r0.zzzz, r0.xyxx
  53: mad o6.xy, cb0[18].xyxx, r0.wwww, r0.xyxx
  54: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
// Stats: 40 math, 5 textures
Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_NATIVE" "_ALPHABLEND_ON" }
"#version 120

#ifdef VERTEX
uniform vec3 _WorldSpaceCameraPos;
uniform vec4 _WorldSpaceLightPos0;
uniform mat4 unity_World2Shadow[4];

uniform mat4 _Object2World;
uniform mat4 _World2Object;
uniform vec4 unity_WorldTransformParams;
uniform vec4 _MainTex_ST;
uniform vec4 _DetailAlbedoMap_ST;
uniform float _UVSec;
uniform mat4 _LightMatrix0;
attribute vec4 TANGENT;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
varying vec4 xlv_TEXCOORD6;
void main ()
{
  vec2 tmpvar_1;
  tmpvar_1 = gl_MultiTexCoord0.xy;
  vec2 tmpvar_2;
  tmpvar_2 = gl_MultiTexCoord1.xy;
  vec4 tmpvar_3;
  vec4 tmpvar_4;
  vec4 tmpvar_5;
  vec4 tmpvar_6;
  vec4 tmpvar_7;
  tmpvar_7 = (_Object2World * gl_Vertex);
  tmpvar_3 = (gl_ModelViewProjectionMatrix * gl_Vertex);
  vec4 texcoord_8;
  texcoord_8.xy = ((gl_MultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  vec2 tmpvar_9;
  if ((_UVSec == 0.0)) {
    tmpvar_9 = tmpvar_1;
  } else {
    tmpvar_9 = tmpvar_2;
  };
  texcoord_8.zw = ((tmpvar_9 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  vec4 v_10;
  v_10.x = _World2Object[0].x;
  v_10.y = _World2Object[1].x;
  v_10.z = _World2Object[2].x;
  v_10.w = _World2Object[3].x;
  vec4 v_11;
  v_11.x = _World2Object[0].y;
  v_11.y = _World2Object[1].y;
  v_11.z = _World2Object[2].y;
  v_11.w = _World2Object[3].y;
  vec4 v_12;
  v_12.x = _World2Object[0].z;
  v_12.y = _World2Object[1].z;
  v_12.z = _World2Object[2].z;
  v_12.w = _World2Object[3].z;
  vec3 tmpvar_13;
  tmpvar_13 = normalize(((
    (v_10.xyz * gl_Normal.x)
   + 
    (v_11.xyz * gl_Normal.y)
  ) + (v_12.xyz * gl_Normal.z)));
  mat3 tmpvar_14;
  tmpvar_14[0] = _Object2World[0].xyz;
  tmpvar_14[1] = _Object2World[1].xyz;
  tmpvar_14[2] = _Object2World[2].xyz;
  vec4 tmpvar_15;
  tmpvar_15.xyz = normalize((tmpvar_14 * TANGENT.xyz));
  tmpvar_15.w = TANGENT.w;
  vec3 tmpvar_16;
  vec3 tmpvar_17;
  tmpvar_16 = tmpvar_15.xyz;
  tmpvar_17 = (((tmpvar_13.yzx * tmpvar_15.zxy) - (tmpvar_13.zxy * tmpvar_15.yzx)) * (TANGENT.w * unity_WorldTransformParams.w));
  vec3 tmpvar_18;
  vec3 tmpvar_19;
  vec3 tmpvar_20;
  tmpvar_18.x = tmpvar_16.x;
  tmpvar_18.y = tmpvar_17.x;
  tmpvar_18.z = tmpvar_13.x;
  tmpvar_19.x = tmpvar_16.y;
  tmpvar_19.y = tmpvar_17.y;
  tmpvar_19.z = tmpvar_13.y;
  tmpvar_20.x = tmpvar_16.z;
  tmpvar_20.y = tmpvar_17.z;
  tmpvar_20.z = tmpvar_13.z;
  vec3 v_21;
  v_21.x = tmpvar_18.x;
  v_21.y = tmpvar_19.x;
  v_21.z = tmpvar_20.x;
  tmpvar_4.xyz = v_21;
  vec3 v_22;
  v_22.x = tmpvar_18.y;
  v_22.y = tmpvar_19.y;
  v_22.z = tmpvar_20.y;
  tmpvar_5.xyz = v_22;
  vec3 v_23;
  v_23.x = tmpvar_18.z;
  v_23.y = tmpvar_19.z;
  v_23.z = tmpvar_20.z;
  tmpvar_6.xyz = v_23;
  vec3 tmpvar_24;
  tmpvar_24 = normalize((_WorldSpaceLightPos0.xyz - (tmpvar_7.xyz * _WorldSpaceLightPos0.w)));
  tmpvar_4.w = tmpvar_24.x;
  tmpvar_5.w = tmpvar_24.y;
  tmpvar_6.w = tmpvar_24.z;
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = texcoord_8;
  xlv_TEXCOORD1 = normalize((tmpvar_7.xyz - _WorldSpaceCameraPos));
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  vec4 tmpvar_25;
  tmpvar_25 = (_Object2World * gl_Vertex);
  xlv_TEXCOORD5 = (_LightMatrix0 * tmpvar_25);
  xlv_TEXCOORD6 = (unity_World2Shadow[0] * tmpvar_25);
}


#endif
#ifdef FRAGMENT
uniform vec4 _LightShadowData;
uniform vec4 unity_ColorSpaceDielectricSpec;
uniform vec4 _LightColor0;
uniform sampler2D unity_NHxRoughness;
uniform vec4 _Color;
uniform sampler2D _MainTex;
uniform float _Metallic;
uniform float _Glossiness;
uniform sampler2DShadow _ShadowMapTexture;
uniform sampler2D _LightTexture0;
uniform sampler2D _LightTextureB0;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
varying vec4 xlv_TEXCOORD6;
void main ()
{
  vec3 tmpvar_1;
  vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  tmpvar_1 = (_Color.xyz * tmpvar_2.xyz);
  vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD2_2.xyz);
  vec3 tmpvar_4;
  tmpvar_4.x = xlv_TEXCOORD2.w;
  tmpvar_4.y = xlv_TEXCOORD2_1.w;
  tmpvar_4.z = xlv_TEXCOORD2_2.w;
  vec3 viewDir_5;
  viewDir_5 = -(xlv_TEXCOORD1);
  vec2 tmpvar_6;
  tmpvar_6.x = dot ((viewDir_5 - (2.0 * 
    (dot (tmpvar_3, viewDir_5) * tmpvar_3)
  )), tmpvar_4);
  tmpvar_6.y = (1.0 - clamp (dot (tmpvar_3, viewDir_5), 0.0, 1.0));
  vec2 tmpvar_7;
  tmpvar_7.x = ((tmpvar_6 * tmpvar_6) * (tmpvar_6 * tmpvar_6)).x;
  tmpvar_7.y = (1.0 - _Glossiness);
  vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (((tmpvar_1 * 
    (unity_ColorSpaceDielectricSpec.w - (_Metallic * unity_ColorSpaceDielectricSpec.w))
  ) + (
    (texture2D (unity_NHxRoughness, tmpvar_7).w * 16.0)
   * 
    mix (unity_ColorSpaceDielectricSpec.xyz, tmpvar_1, vec3(_Metallic))
  )) * ((_LightColor0.xyz * 
    (((float(
      (xlv_TEXCOORD5.z > 0.0)
    ) * texture2D (_LightTexture0, (
      (xlv_TEXCOORD5.xy / xlv_TEXCOORD5.w)
     + 0.5)).w) * texture2D (_LightTextureB0, vec2(dot (xlv_TEXCOORD5.xyz, xlv_TEXCOORD5.xyz))).w) * (_LightShadowData.x + (shadow2DProj (_ShadowMapTexture, xlv_TEXCOORD6).x * (1.0 - _LightShadowData.x))))
  ) * clamp (
    dot (tmpvar_3, tmpvar_4)
  , 0.0, 1.0)));
  vec4 xlat_varoutput_9;
  xlat_varoutput_9.xyz = tmpvar_8.xyz;
  xlat_varoutput_9.w = (tmpvar_2.w * _Color.w);
  gl_FragData[0] = xlat_varoutput_9;
}


#endif
"
}
SubProgram "d3d9 " {
// Stats: 52 math
Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_NATIVE" "_ALPHABLEND_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
Matrix 12 [_LightMatrix0]
Matrix 8 [_Object2World]
Matrix 16 [_World2Object] 3
Matrix 4 [glstate_matrix_mvp]
Matrix 0 [unity_World2Shadow0]
Vector 23 [_DetailAlbedoMap_ST]
Vector 22 [_MainTex_ST]
Float 24 [_UVSec]
Vector 19 [_WorldSpaceCameraPos]
Vector 20 [_WorldSpaceLightPos0]
Vector 21 [unity_WorldTransformParams]
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   row_major float4x4 _LightMatrix0;
//   float4 _MainTex_ST;
//   row_major float4x4 _Object2World;
//   float _UVSec;
//   row_major float4x4 _World2Object;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 glstate_matrix_mvp;
//   row_major float4x4 unity_World2Shadow[4];
//   float4 unity_WorldTransformParams;
//
//
// Registers:
//
//   Name                       Reg   Size
//   -------------------------- ----- ----
//   unity_World2Shadow         c0       4
//   glstate_matrix_mvp         c4       4
//   _Object2World              c8       4
//   _LightMatrix0              c12      4
//   _World2Object              c16      3
//   _WorldSpaceCameraPos       c19      1
//   _WorldSpaceLightPos0       c20      1
//   unity_WorldTransformParams c21      1
//   _MainTex_ST                c22      1
//   _DetailAlbedoMap_ST        c23      1
//   _UVSec                     c24      1
//

    vs_2_0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_tangent v4
    dp4 oPos.x, c4, v0
    dp4 oPos.y, c5, v0
    dp4 oPos.z, c6, v0
    dp4 oPos.w, c7, v0
    mad oT0.xy, v2, c22, c22.zwzw
    mul r0.x, c24.x, c24.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad oT0.zw, r2.xyxy, c23.xyxy, c23
    dp4 r0.x, c8, v0
    dp4 r0.y, c9, v0
    dp4 r0.z, c10, v0
    add r1.xyz, r0, -c19
    dp3 r1.w, r1, r1
    rsq r1.w, r1.w
    mul oT1.xyz, r1.w, r1
    mul r1.xyz, v1.y, c17
    mad r1.xyz, c16, v1.x, r1
    mad r1.xyz, c18, v1.z, r1
    nrm r2.xyz, r1
    dp3 r1.x, c8, v4
    dp3 r1.y, c9, v4
    dp3 r1.z, c10, v4
    nrm r3.xyz, r1
    mul r1.xyz, r2.zxyw, r3.yzxw
    mad r1.xyz, r2.yzxw, r3.zxyw, -r1
    mov oT4.xyz, r2
    mov oT2.xyz, r3
    mul r1.w, v4.w, c21.w
    mul oT3.xyz, r1.w, r1
    dp4 r0.w, c11, v0
    dp4 oT5.x, c12, r0
    dp4 oT5.y, c13, r0
    dp4 oT5.z, c14, r0
    dp4 oT5.w, c15, r0
    dp4 oT6.x, c0, r0
    dp4 oT6.y, c1, r0
    dp4 oT6.z, c2, r0
    dp4 oT6.w, c3, r0
    mad r0.xyz, r0, -c20.w, c20
    nrm r1.xyz, r0
    mov oT2.w, r1.x
    mov oT3.w, r1.y
    mov oT4.w, r1.z

// approximately 51 instruction slots used
"
}
SubProgram "d3d11 " {
// Stats: 55 math
Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_NATIVE" "_ALPHABLEND_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
ConstBuffer "$Globals" 304
Matrix 240 [_LightMatrix0]
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
ConstBuffer "UnityShadows" 416
Matrix 128 [unity_World2Shadow0]
Matrix 192 [unity_World2Shadow1]
Matrix 256 [unity_World2Shadow2]
Matrix 320 [unity_World2Shadow3]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
Vector 336 [unity_WorldTransformParams]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityShadows" 3
BindCB  "UnityPerDraw" 4
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer cb0[19], immediateIndexed
      dcl_constantbuffer cb1[5], immediateIndexed
      dcl_constantbuffer cb2[1], immediateIndexed
      dcl_constantbuffer cb3[12], immediateIndexed
      dcl_constantbuffer cb4[22], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb4[1].xyzw
   1: mad r0.xyzw, cb4[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb4[2].xyzw, v0.zzzz, r0.xyzw
   3: mad o0.xyzw, cb4[3].xyzw, v0.wwww, r0.xyzw
   4: eq r0.x, cb0[13].z, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[11].xxxy, cb0[11].zzzw
   7: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   8: mul r0.xyz, v0.yyyy, cb4[13].xyzx
   9: mad r0.xyz, cb4[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb4[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb4[15].xyzx, v0.wwww, r0.xyzx
  12: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  13: mad r0.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  14: dp3 r0.w, r1.xyzx, r1.xyzx
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: dp3 r0.w, r0.xyzx, r0.xyzx
  18: rsq r0.w, r0.w
  19: mul r0.xyz, r0.wwww, r0.xyzx
  20: mov o3.w, r0.x
  21: mul r1.xyz, v4.yyyy, cb4[13].xyzx
  22: mad r1.xyz, cb4[12].xyzx, v4.xxxx, r1.xyzx
  23: mad r1.xyz, cb4[14].xyzx, v4.zzzz, r1.xyzx
  24: dp3 r0.x, r1.xyzx, r1.xyzx
  25: rsq r0.x, r0.x
  26: mul r1.xyz, r0.xxxx, r1.xyzx
  27: mov o3.xyz, r1.xyzx
  28: mul r2.x, v1.x, cb4[16].x
  29: mul r2.y, v1.x, cb4[17].x
  30: mul r2.z, v1.x, cb4[18].x
  31: mul r3.x, v1.y, cb4[16].y
  32: mul r3.y, v1.y, cb4[17].y
  33: mul r3.z, v1.y, cb4[18].y
  34: add r2.xyz, r2.xyzx, r3.xyzx
  35: mul r3.x, v1.z, cb4[16].z
  36: mul r3.y, v1.z, cb4[17].z
  37: mul r3.z, v1.z, cb4[18].z
  38: add r2.xyz, r2.xyzx, r3.xyzx
  39: dp3 r0.x, r2.xyzx, r2.xyzx
  40: rsq r0.x, r0.x
  41: mul r2.xyz, r0.xxxx, r2.xyzx
  42: mul r3.xyz, r1.yzxy, r2.zxyz
  43: mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
  44: mov o5.xyz, r2.xyzx
  45: mul r0.x, v4.w, cb4[21].w
  46: mul o4.xyz, r0.xxxx, r1.xyzx
  47: mov o4.w, r0.y
  48: mov o5.w, r0.z
  49: mul r0.xyzw, v0.yyyy, cb4[13].xyzw
  50: mad r0.xyzw, cb4[12].xyzw, v0.xxxx, r0.xyzw
  51: mad r0.xyzw, cb4[14].xyzw, v0.zzzz, r0.xyzw
  52: mad r0.xyzw, cb4[15].xyzw, v0.wwww, r0.xyzw
  53: mul r1.xyzw, r0.yyyy, cb0[16].xyzw
  54: mad r1.xyzw, cb0[15].xyzw, r0.xxxx, r1.xyzw
  55: mad r1.xyzw, cb0[17].xyzw, r0.zzzz, r1.xyzw
  56: mad o6.xyzw, cb0[18].xyzw, r0.wwww, r1.xyzw
  57: mul r1.xyzw, r0.yyyy, cb3[9].xyzw
  58: mad r1.xyzw, cb3[8].xyzw, r0.xxxx, r1.xyzw
  59: mad r1.xyzw, cb3[10].xyzw, r0.zzzz, r1.xyzw
  60: mad o7.xyzw, cb3[11].xyzw, r0.wwww, r1.xyzw
  61: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "d3d11_9x " {
// Stats: 55 math
Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_NATIVE" "_ALPHABLEND_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
ConstBuffer "$Globals" 304
Matrix 240 [_LightMatrix0]
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
ConstBuffer "UnityShadows" 416
Matrix 128 [unity_World2Shadow0]
Matrix 192 [unity_World2Shadow1]
Matrix 256 [unity_World2Shadow2]
Matrix 320 [unity_World2Shadow3]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
Vector 336 [unity_WorldTransformParams]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityShadows" 3
BindCB  "UnityPerDraw" 4
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c1         cb0            10         2  ( FLT, FLT, FLT, FLT)
// c3         cb0            13         1  ( FLT, FLT, FLT, FLT)
// c4         cb0            15         4  ( FLT, FLT, FLT, FLT)
// c8         cb1             4         1  ( FLT, FLT, FLT, FLT)
// c9         cb2             0         1  ( FLT, FLT, FLT, FLT)
// c10        cb3             8         4  ( FLT, FLT, FLT, FLT)
// c14        cb4             0         4  ( FLT, FLT, FLT, FLT)
// c18        cb4            12         7  ( FLT, FLT, FLT, FLT)
// c25        cb4            21         1  ( FLT, FLT, FLT, FLT)
//
//
// Runtime generated constant mappings:
//
// Target Reg                               Constant Description
// ---------- --------------------------------------------------
// c0                              Vertex Shader position offset
//
//
// Level9 shader bytecode:
//
    vs_2_0
          dcl_texcoord v0
          dcl_texcoord1 v1
          dcl_texcoord2 v2
          dcl_texcoord3 v3
          dcl_texcoord4 v4
   0:     mad oT0.xy, v2, c1, c1.zwzw
   1:     mul r0.x, c3.z, c3.z
   2:     sge r0.x, -r0.x, r0.x
   3:     mov r1.xy, v2
   4:     lrp r2.xy, r0.x, r1, v3
   5:     mad oT0.zw, r2.xyxy, c2.xyxy, c2
   6:     mul r0.xyz, v0.y, c19
   7:     mad r0.xyz, c18, v0.x, r0
   8:     mad r0.xyz, c20, v0.z, r0
   9:     mad r0.xyz, c21, v0.w, r0
  10:     add r1.xyz, r0, -c8
  11:     mad r0.xyz, r0, -c9.w, c9
  12:     nrm r2.xyz, r0
  15:     dp3 r0.x, r1, r1
  16:     rsq r0.x, r0.x
  17:     mul oT1.xyz, r0.x, r1
  18:     mul r0.x, v1.x, c22.x
  19:     mul r0.y, v1.x, c23.x
  20:     mul r0.z, v1.x, c24.x
  21:     mul r1.x, v1.y, c22.y
  22:     mul r1.y, v1.y, c23.y
  23:     mul r1.z, v1.y, c24.y
  24:     add r0.xyz, r0, r1
  25:     mul r1.x, v1.z, c22.z
  26:     mul r1.y, v1.z, c23.z
  27:     mul r1.z, v1.z, c24.z
  28:     add r0.xyz, r0, r1
  29:     nrm r1.xyz, r0
  32:     mul r0.xyz, v4.y, c19
  33:     mad r0.xyz, c18, v4.x, r0
  34:     mad r0.xyz, c20, v4.z, r0
  35:     nrm r3.xyz, r0
  38:     mul r0.xyz, r1.zxyw, r3.yzxw
  39:     mad r0.xyz, r1.yzxw, r3.zxyw, -r0
  40:     mov oT4.xyz, r1
  41:     mov oT2.xyz, r3
  42:     mul r0.w, v4.w, c25.w
  43:     mul oT3.xyz, r0.w, r0
  44:     mul r0, v0.y, c19
  45:     mad r0, c18, v0.x, r0
  46:     mad r0, c20, v0.z, r0
  47:     mad r0, c21, v0.w, r0
  48:     mul r1, r0.y, c5
  49:     mad r1, c4, r0.x, r1
  50:     mad r1, c6, r0.z, r1
  51:     mad oT5, c7, r0.w, r1
  52:     mul r1, r0.y, c11
  53:     mad r1, c10, r0.x, r1
  54:     mad r1, c12, r0.z, r1
  55:     mad oT6, c13, r0.w, r1
  56:     mul r0, v0.y, c15
  57:     mad r0, c14, v0.x, r0
  58:     mad r0, c16, v0.z, r0
  59:     mad r0, c17, v0.w, r0
  60:     mad oPos.xy, r0.w, c0, r0
  61:     mov oPos.zw, r0
  62:     mov oT2.w, r2.x
  63:     mov oT3.w, r2.y
  64:     mov oT4.w, r2.z

// approximately 65 instruction slots used
      vs_4_0
      dcl_constantbuffer cb0[19], immediateIndexed
      dcl_constantbuffer cb1[5], immediateIndexed
      dcl_constantbuffer cb2[1], immediateIndexed
      dcl_constantbuffer cb3[12], immediateIndexed
      dcl_constantbuffer cb4[22], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb4[1].xyzw
   1: mad r0.xyzw, cb4[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb4[2].xyzw, v0.zzzz, r0.xyzw
   3: mad o0.xyzw, cb4[3].xyzw, v0.wwww, r0.xyzw
   4: eq r0.x, cb0[13].z, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[11].xxxy, cb0[11].zzzw
   7: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   8: mul r0.xyz, v0.yyyy, cb4[13].xyzx
   9: mad r0.xyz, cb4[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb4[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb4[15].xyzx, v0.wwww, r0.xyzx
  12: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  13: mad r0.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  14: dp3 r0.w, r1.xyzx, r1.xyzx
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: dp3 r0.w, r0.xyzx, r0.xyzx
  18: rsq r0.w, r0.w
  19: mul r0.xyz, r0.wwww, r0.xyzx
  20: mov o3.w, r0.x
  21: mul r1.xyz, v4.yyyy, cb4[13].xyzx
  22: mad r1.xyz, cb4[12].xyzx, v4.xxxx, r1.xyzx
  23: mad r1.xyz, cb4[14].xyzx, v4.zzzz, r1.xyzx
  24: dp3 r0.x, r1.xyzx, r1.xyzx
  25: rsq r0.x, r0.x
  26: mul r1.xyz, r0.xxxx, r1.xyzx
  27: mov o3.xyz, r1.xyzx
  28: mul r2.x, v1.x, cb4[16].x
  29: mul r2.y, v1.x, cb4[17].x
  30: mul r2.z, v1.x, cb4[18].x
  31: mul r3.x, v1.y, cb4[16].y
  32: mul r3.y, v1.y, cb4[17].y
  33: mul r3.z, v1.y, cb4[18].y
  34: add r2.xyz, r2.xyzx, r3.xyzx
  35: mul r3.x, v1.z, cb4[16].z
  36: mul r3.y, v1.z, cb4[17].z
  37: mul r3.z, v1.z, cb4[18].z
  38: add r2.xyz, r2.xyzx, r3.xyzx
  39: dp3 r0.x, r2.xyzx, r2.xyzx
  40: rsq r0.x, r0.x
  41: mul r2.xyz, r0.xxxx, r2.xyzx
  42: mul r3.xyz, r1.yzxy, r2.zxyz
  43: mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
  44: mov o5.xyz, r2.xyzx
  45: mul r0.x, v4.w, cb4[21].w
  46: mul o4.xyz, r0.xxxx, r1.xyzx
  47: mov o4.w, r0.y
  48: mov o5.w, r0.z
  49: mul r0.xyzw, v0.yyyy, cb4[13].xyzw
  50: mad r0.xyzw, cb4[12].xyzw, v0.xxxx, r0.xyzw
  51: mad r0.xyzw, cb4[14].xyzw, v0.zzzz, r0.xyzw
  52: mad r0.xyzw, cb4[15].xyzw, v0.wwww, r0.xyzw
  53: mul r1.xyzw, r0.yyyy, cb0[16].xyzw
  54: mad r1.xyzw, cb0[15].xyzw, r0.xxxx, r1.xyzw
  55: mad r1.xyzw, cb0[17].xyzw, r0.zzzz, r1.xyzw
  56: mad o6.xyzw, cb0[18].xyzw, r0.wwww, r1.xyzw
  57: mul r1.xyzw, r0.yyyy, cb3[9].xyzw
  58: mad r1.xyzw, cb3[8].xyzw, r0.xxxx, r1.xyzw
  59: mad r1.xyzw, cb3[10].xyzw, r0.zzzz, r1.xyzw
  60: mad o7.xyzw, cb3[11].xyzw, r0.wwww, r1.xyzw
  61: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
// Stats: 29 math, 3 textures
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "_ALPHABLEND_ON" }
"#version 120

#ifdef VERTEX
uniform vec3 _WorldSpaceCameraPos;
uniform vec4 _ProjectionParams;
uniform vec4 _WorldSpaceLightPos0;

uniform mat4 _Object2World;
uniform mat4 _World2Object;
uniform vec4 unity_WorldTransformParams;
uniform vec4 _MainTex_ST;
uniform vec4 _DetailAlbedoMap_ST;
uniform float _UVSec;
attribute vec4 TANGENT;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
void main ()
{
  vec2 tmpvar_1;
  tmpvar_1 = gl_MultiTexCoord0.xy;
  vec2 tmpvar_2;
  tmpvar_2 = gl_MultiTexCoord1.xy;
  vec4 tmpvar_3;
  vec4 tmpvar_4;
  vec4 tmpvar_5;
  vec4 tmpvar_6;
  vec4 tmpvar_7;
  tmpvar_7 = (_Object2World * gl_Vertex);
  tmpvar_3 = (gl_ModelViewProjectionMatrix * gl_Vertex);
  vec4 texcoord_8;
  texcoord_8.xy = ((gl_MultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  vec2 tmpvar_9;
  if ((_UVSec == 0.0)) {
    tmpvar_9 = tmpvar_1;
  } else {
    tmpvar_9 = tmpvar_2;
  };
  texcoord_8.zw = ((tmpvar_9 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  vec4 v_10;
  v_10.x = _World2Object[0].x;
  v_10.y = _World2Object[1].x;
  v_10.z = _World2Object[2].x;
  v_10.w = _World2Object[3].x;
  vec4 v_11;
  v_11.x = _World2Object[0].y;
  v_11.y = _World2Object[1].y;
  v_11.z = _World2Object[2].y;
  v_11.w = _World2Object[3].y;
  vec4 v_12;
  v_12.x = _World2Object[0].z;
  v_12.y = _World2Object[1].z;
  v_12.z = _World2Object[2].z;
  v_12.w = _World2Object[3].z;
  vec3 tmpvar_13;
  tmpvar_13 = normalize(((
    (v_10.xyz * gl_Normal.x)
   + 
    (v_11.xyz * gl_Normal.y)
  ) + (v_12.xyz * gl_Normal.z)));
  mat3 tmpvar_14;
  tmpvar_14[0] = _Object2World[0].xyz;
  tmpvar_14[1] = _Object2World[1].xyz;
  tmpvar_14[2] = _Object2World[2].xyz;
  vec4 tmpvar_15;
  tmpvar_15.xyz = normalize((tmpvar_14 * TANGENT.xyz));
  tmpvar_15.w = TANGENT.w;
  vec3 tmpvar_16;
  vec3 tmpvar_17;
  tmpvar_16 = tmpvar_15.xyz;
  tmpvar_17 = (((tmpvar_13.yzx * tmpvar_15.zxy) - (tmpvar_13.zxy * tmpvar_15.yzx)) * (TANGENT.w * unity_WorldTransformParams.w));
  vec3 tmpvar_18;
  vec3 tmpvar_19;
  vec3 tmpvar_20;
  tmpvar_18.x = tmpvar_16.x;
  tmpvar_18.y = tmpvar_17.x;
  tmpvar_18.z = tmpvar_13.x;
  tmpvar_19.x = tmpvar_16.y;
  tmpvar_19.y = tmpvar_17.y;
  tmpvar_19.z = tmpvar_13.y;
  tmpvar_20.x = tmpvar_16.z;
  tmpvar_20.y = tmpvar_17.z;
  tmpvar_20.z = tmpvar_13.z;
  vec3 v_21;
  v_21.x = tmpvar_18.x;
  v_21.y = tmpvar_19.x;
  v_21.z = tmpvar_20.x;
  tmpvar_4.xyz = v_21;
  vec3 v_22;
  v_22.x = tmpvar_18.y;
  v_22.y = tmpvar_19.y;
  v_22.z = tmpvar_20.y;
  tmpvar_5.xyz = v_22;
  vec3 v_23;
  v_23.x = tmpvar_18.z;
  v_23.y = tmpvar_19.z;
  v_23.z = tmpvar_20.z;
  tmpvar_6.xyz = v_23;
  vec4 o_24;
  vec4 tmpvar_25;
  tmpvar_25 = (tmpvar_3 * 0.5);
  vec2 tmpvar_26;
  tmpvar_26.x = tmpvar_25.x;
  tmpvar_26.y = (tmpvar_25.y * _ProjectionParams.x);
  o_24.xy = (tmpvar_26 + tmpvar_25.w);
  o_24.zw = tmpvar_3.zw;
  vec3 tmpvar_27;
  tmpvar_27 = (_WorldSpaceLightPos0.xyz - (tmpvar_7.xyz * _WorldSpaceLightPos0.w));
  tmpvar_4.w = tmpvar_27.x;
  tmpvar_5.w = tmpvar_27.y;
  tmpvar_6.w = tmpvar_27.z;
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = texcoord_8;
  xlv_TEXCOORD1 = normalize((tmpvar_7.xyz - _WorldSpaceCameraPos));
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  xlv_TEXCOORD5 = o_24;
}


#endif
#ifdef FRAGMENT
uniform vec4 unity_ColorSpaceDielectricSpec;
uniform vec4 _LightColor0;
uniform sampler2D unity_NHxRoughness;
uniform vec4 _Color;
uniform sampler2D _MainTex;
uniform float _Metallic;
uniform float _Glossiness;
uniform sampler2D _ShadowMapTexture;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec4 xlv_TEXCOORD5;
void main ()
{
  vec3 tmpvar_1;
  vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  tmpvar_1 = (_Color.xyz * tmpvar_2.xyz);
  vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD2_2.xyz);
  vec3 tmpvar_4;
  tmpvar_4.x = xlv_TEXCOORD2.w;
  tmpvar_4.y = xlv_TEXCOORD2_1.w;
  tmpvar_4.z = xlv_TEXCOORD2_2.w;
  vec3 viewDir_5;
  viewDir_5 = -(xlv_TEXCOORD1);
  vec2 tmpvar_6;
  tmpvar_6.x = dot ((viewDir_5 - (2.0 * 
    (dot (tmpvar_3, viewDir_5) * tmpvar_3)
  )), tmpvar_4);
  tmpvar_6.y = (1.0 - clamp (dot (tmpvar_3, viewDir_5), 0.0, 1.0));
  vec2 tmpvar_7;
  tmpvar_7.x = ((tmpvar_6 * tmpvar_6) * (tmpvar_6 * tmpvar_6)).x;
  tmpvar_7.y = (1.0 - _Glossiness);
  vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (((tmpvar_1 * 
    (unity_ColorSpaceDielectricSpec.w - (_Metallic * unity_ColorSpaceDielectricSpec.w))
  ) + (
    (texture2D (unity_NHxRoughness, tmpvar_7).w * 16.0)
   * 
    mix (unity_ColorSpaceDielectricSpec.xyz, tmpvar_1, vec3(_Metallic))
  )) * ((_LightColor0.xyz * texture2DProj (_ShadowMapTexture, xlv_TEXCOORD5).x) * clamp (
    dot (tmpvar_3, tmpvar_4)
  , 0.0, 1.0)));
  vec4 xlat_varoutput_9;
  xlat_varoutput_9.xyz = tmpvar_8.xyz;
  xlat_varoutput_9.w = (tmpvar_2.w * _Color.w);
  gl_FragData[0] = xlat_varoutput_9;
}


#endif
"
}
SubProgram "d3d9 " {
// Stats: 46 math
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "_ALPHABLEND_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
Matrix 4 [_Object2World] 3
Matrix 7 [_World2Object] 3
Matrix 0 [glstate_matrix_mvp]
Vector 16 [_DetailAlbedoMap_ST]
Vector 15 [_MainTex_ST]
Vector 11 [_ProjectionParams]
Vector 12 [_ScreenParams]
Float 17 [_UVSec]
Vector 10 [_WorldSpaceCameraPos]
Vector 13 [_WorldSpaceLightPos0]
Vector 14 [unity_WorldTransformParams]
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   row_major float4x4 _Object2World;
//   float4 _ProjectionParams;
//   float4 _ScreenParams;
//   float _UVSec;
//   row_major float4x4 _World2Object;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 glstate_matrix_mvp;
//   float4 unity_WorldTransformParams;
//
//
// Registers:
//
//   Name                       Reg   Size
//   -------------------------- ----- ----
//   glstate_matrix_mvp         c0       4
//   _Object2World              c4       3
//   _World2Object              c7       3
//   _WorldSpaceCameraPos       c10      1
//   _ProjectionParams          c11      1
//   _ScreenParams              c12      1
//   _WorldSpaceLightPos0       c13      1
//   unity_WorldTransformParams c14      1
//   _MainTex_ST                c15      1
//   _DetailAlbedoMap_ST        c16      1
//   _UVSec                     c17      1
//

    vs_2_0
    def c18, 0.5, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_tangent v4
    mad oT0.xy, v2, c15, c15.zwzw
    mul r0.x, c17.x, c17.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad oT0.zw, r2.xyxy, c16.xyxy, c16
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add r1.xyz, r0, -c10
    mad r0.xyz, r0, -c13.w, c13
    dp3 r0.w, r1, r1
    rsq r0.w, r0.w
    mul oT1.xyz, r0.w, r1
    mul r1.xyz, v1.y, c8
    mad r1.xyz, c7, v1.x, r1
    mad r1.xyz, c9, v1.z, r1
    nrm r2.xyz, r1
    dp3 r1.x, c4, v4
    dp3 r1.y, c5, v4
    dp3 r1.z, c6, v4
    nrm r3.xyz, r1
    mul r1.xyz, r2.zxyw, r3.yzxw
    mad r1.xyz, r2.yzxw, r3.zxyw, -r1
    mov oT4.xyz, r2
    mov oT2.xyz, r3
    mul r0.w, v4.w, c14.w
    mul oT3.xyz, r0.w, r1
    dp4 r1.y, c1, v0
    mul r0.w, r1.y, c11.x
    mul r2.w, r0.w, c18.x
    dp4 r1.x, c0, v0
    dp4 r1.w, c3, v0
    mul r2.xz, r1.xyww, c18.x
    mad oT5.xy, r2.z, c12.zwzw, r2.xwzw
    dp4 r1.z, c2, v0
    mov oPos, r1
    mov oT5.zw, r1
    mov oT2.w, r0.x
    mov oT3.w, r0.y
    mov oT4.w, r0.z

// approximately 45 instruction slots used
"
}
SubProgram "d3d11 " {
// Stats: 43 math
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "_ALPHABLEND_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
ConstBuffer "$Globals" 240
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
Vector 80 [_ProjectionParams]
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
Vector 336 [unity_WorldTransformParams]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer cb0[14], immediateIndexed
      dcl_constantbuffer cb1[6], immediateIndexed
      dcl_constantbuffer cb2[1], immediateIndexed
      dcl_constantbuffer cb3[22], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 5
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   4: mov o0.xyzw, r0.xyzw
   5: eq r1.x, cb0[13].z, l(0.000000)
   6: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
   7: mad o1.zw, r1.xxxy, cb0[11].xxxy, cb0[11].zzzw
   8: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   9: mul r1.xyz, v0.yyyy, cb3[13].xyzx
  10: mad r1.xyz, cb3[12].xyzx, v0.xxxx, r1.xyzx
  11: mad r1.xyz, cb3[14].xyzx, v0.zzzz, r1.xyzx
  12: mad r1.xyz, cb3[15].xyzx, v0.wwww, r1.xyzx
  13: add r2.xyz, r1.xyzx, -cb1[4].xyzx
  14: mad r1.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  15: dp3 r1.w, r2.xyzx, r2.xyzx
  16: rsq r1.w, r1.w
  17: mul o2.xyz, r1.wwww, r2.xyzx
  18: mov o3.w, r1.x
  19: mul r2.xyz, v4.yyyy, cb3[13].xyzx
  20: mad r2.xyz, cb3[12].xyzx, v4.xxxx, r2.xyzx
  21: mad r2.xyz, cb3[14].xyzx, v4.zzzz, r2.xyzx
  22: dp3 r1.x, r2.xyzx, r2.xyzx
  23: rsq r1.x, r1.x
  24: mul r2.xyz, r1.xxxx, r2.xyzx
  25: mov o3.xyz, r2.xyzx
  26: mul r3.x, v1.x, cb3[16].x
  27: mul r3.y, v1.x, cb3[17].x
  28: mul r3.z, v1.x, cb3[18].x
  29: mul r4.x, v1.y, cb3[16].y
  30: mul r4.y, v1.y, cb3[17].y
  31: mul r4.z, v1.y, cb3[18].y
  32: add r3.xyz, r3.xyzx, r4.xyzx
  33: mul r4.x, v1.z, cb3[16].z
  34: mul r4.y, v1.z, cb3[17].z
  35: mul r4.z, v1.z, cb3[18].z
  36: add r3.xyz, r3.xyzx, r4.xyzx
  37: dp3 r1.x, r3.xyzx, r3.xyzx
  38: rsq r1.x, r1.x
  39: mul r3.xyz, r1.xxxx, r3.xyzx
  40: mul r4.xyz, r2.yzxy, r3.zxyz
  41: mad r2.xyz, r3.yzxy, r2.zxyz, -r4.xyzx
  42: mov o5.xyz, r3.xyzx
  43: mul r1.x, v4.w, cb3[21].w
  44: mul o4.xyz, r1.xxxx, r2.xyzx
  45: mov o4.w, r1.y
  46: mov o5.w, r1.z
  47: mul r0.y, r0.y, cb1[5].x
  48: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  49: mov o6.zw, r0.zzzw
  50: add o6.xy, r1.zzzz, r1.xwxx
  51: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "d3d11_9x " {
// Stats: 43 math
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "_ALPHABLEND_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
ConstBuffer "$Globals" 240
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
Vector 80 [_ProjectionParams]
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
Vector 336 [unity_WorldTransformParams]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c1         cb0            10         2  ( FLT, FLT, FLT, FLT)
// c3         cb0            13         1  ( FLT, FLT, FLT, FLT)
// c4         cb1             4         2  ( FLT, FLT, FLT, FLT)
// c6         cb2             0         1  ( FLT, FLT, FLT, FLT)
// c7         cb3             0         4  ( FLT, FLT, FLT, FLT)
// c11        cb3            12         7  ( FLT, FLT, FLT, FLT)
// c18        cb3            21         1  ( FLT, FLT, FLT, FLT)
//
//
// Runtime generated constant mappings:
//
// Target Reg                               Constant Description
// ---------- --------------------------------------------------
// c0                              Vertex Shader position offset
//
//
// Level9 shader bytecode:
//
    vs_2_0
          def c19, 0.5, 0, 0, 0
          dcl_texcoord v0
          dcl_texcoord1 v1
          dcl_texcoord2 v2
          dcl_texcoord3 v3
          dcl_texcoord4 v4
   0:     mad oT0.xy, v2, c1, c1.zwzw
   1:     mul r0.x, c3.z, c3.z
   2:     sge r0.x, -r0.x, r0.x
   3:     mov r1.xy, v2
   4:     lrp r2.xy, r0.x, r1, v3
   5:     mad oT0.zw, r2.xyxy, c2.xyxy, c2
   6:     mul r0.xyz, v0.y, c12
   7:     mad r0.xyz, c11, v0.x, r0
   8:     mad r0.xyz, c13, v0.z, r0
   9:     mad r0.xyz, c14, v0.w, r0
  10:     add r1.xyz, r0, -c4
  11:     mad r0.xyz, r0, -c6.w, c6
  12:     dp3 r0.w, r1, r1
  13:     rsq r0.w, r0.w
  14:     mul oT1.xyz, r0.w, r1
  15:     mul r1.x, v1.x, c15.x
  16:     mul r1.y, v1.x, c16.x
  17:     mul r1.z, v1.x, c17.x
  18:     mul r2.x, v1.y, c15.y
  19:     mul r2.y, v1.y, c16.y
  20:     mul r2.z, v1.y, c17.y
  21:     add r1.xyz, r1, r2
  22:     mul r2.x, v1.z, c15.z
  23:     mul r2.y, v1.z, c16.z
  24:     mul r2.z, v1.z, c17.z
  25:     add r1.xyz, r1, r2
  26:     nrm r2.xyz, r1
  29:     mul r1.xyz, v4.y, c12
  30:     mad r1.xyz, c11, v4.x, r1
  31:     mad r1.xyz, c13, v4.z, r1
  32:     nrm r3.xyz, r1
  35:     mul r1.xyz, r2.zxyw, r3.yzxw
  36:     mad r1.xyz, r2.yzxw, r3.zxyw, -r1
  37:     mov oT4.xyz, r2
  38:     mov oT2.xyz, r3
  39:     mul r0.w, v4.w, c18.w
  40:     mul oT3.xyz, r0.w, r1
  41:     mul r1, v0.y, c8
  42:     mad r1, c7, v0.x, r1
  43:     mad r1, c9, v0.z, r1
  44:     mad r1, c10, v0.w, r1
  45:     mul r0.w, r1.y, c5.x
  46:     mul r2.w, r0.w, c19.x
  47:     mul r2.xz, r1.xyww, c19.x
  48:     add oT5.xy, r2.z, r2.xwzw
  49:     mad oPos.xy, r1.w, c0, r1
  50:     mov oPos.zw, r1
  51:     mov oT5.zw, r1
  52:     mov oT2.w, r0.x
  53:     mov oT3.w, r0.y
  54:     mov oT4.w, r0.z

// approximately 55 instruction slots used
      vs_4_0
      dcl_constantbuffer cb0[14], immediateIndexed
      dcl_constantbuffer cb1[6], immediateIndexed
      dcl_constantbuffer cb2[1], immediateIndexed
      dcl_constantbuffer cb3[22], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 5
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   4: mov o0.xyzw, r0.xyzw
   5: eq r1.x, cb0[13].z, l(0.000000)
   6: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
   7: mad o1.zw, r1.xxxy, cb0[11].xxxy, cb0[11].zzzw
   8: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   9: mul r1.xyz, v0.yyyy, cb3[13].xyzx
  10: mad r1.xyz, cb3[12].xyzx, v0.xxxx, r1.xyzx
  11: mad r1.xyz, cb3[14].xyzx, v0.zzzz, r1.xyzx
  12: mad r1.xyz, cb3[15].xyzx, v0.wwww, r1.xyzx
  13: add r2.xyz, r1.xyzx, -cb1[4].xyzx
  14: mad r1.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  15: dp3 r1.w, r2.xyzx, r2.xyzx
  16: rsq r1.w, r1.w
  17: mul o2.xyz, r1.wwww, r2.xyzx
  18: mov o3.w, r1.x
  19: mul r2.xyz, v4.yyyy, cb3[13].xyzx
  20: mad r2.xyz, cb3[12].xyzx, v4.xxxx, r2.xyzx
  21: mad r2.xyz, cb3[14].xyzx, v4.zzzz, r2.xyzx
  22: dp3 r1.x, r2.xyzx, r2.xyzx
  23: rsq r1.x, r1.x
  24: mul r2.xyz, r1.xxxx, r2.xyzx
  25: mov o3.xyz, r2.xyzx
  26: mul r3.x, v1.x, cb3[16].x
  27: mul r3.y, v1.x, cb3[17].x
  28: mul r3.z, v1.x, cb3[18].x
  29: mul r4.x, v1.y, cb3[16].y
  30: mul r4.y, v1.y, cb3[17].y
  31: mul r4.z, v1.y, cb3[18].y
  32: add r3.xyz, r3.xyzx, r4.xyzx
  33: mul r4.x, v1.z, cb3[16].z
  34: mul r4.y, v1.z, cb3[17].z
  35: mul r4.z, v1.z, cb3[18].z
  36: add r3.xyz, r3.xyzx, r4.xyzx
  37: dp3 r1.x, r3.xyzx, r3.xyzx
  38: rsq r1.x, r1.x
  39: mul r3.xyz, r1.xxxx, r3.xyzx
  40: mul r4.xyz, r2.yzxy, r3.zxyz
  41: mad r2.xyz, r3.yzxy, r2.zxyz, -r4.xyzx
  42: mov o5.xyz, r3.xyzx
  43: mul r1.x, v4.w, cb3[21].w
  44: mul o4.xyz, r1.xxxx, r2.xyzx
  45: mov o4.w, r1.y
  46: mov o5.w, r1.z
  47: mul r0.y, r0.y, cb1[5].x
  48: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  49: mov o6.zw, r0.zzzw
  50: add o6.xy, r1.zzzz, r1.xwxx
  51: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
// Stats: 30 math, 4 textures
Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" "_ALPHABLEND_ON" }
"#version 120

#ifdef VERTEX
uniform vec3 _WorldSpaceCameraPos;
uniform vec4 _ProjectionParams;
uniform vec4 _WorldSpaceLightPos0;

uniform mat4 _Object2World;
uniform mat4 _World2Object;
uniform vec4 unity_WorldTransformParams;
uniform vec4 _MainTex_ST;
uniform vec4 _DetailAlbedoMap_ST;
uniform float _UVSec;
uniform mat4 _LightMatrix0;
attribute vec4 TANGENT;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec2 xlv_TEXCOORD5;
varying vec4 xlv_TEXCOORD6;
void main ()
{
  vec2 tmpvar_1;
  tmpvar_1 = gl_MultiTexCoord0.xy;
  vec2 tmpvar_2;
  tmpvar_2 = gl_MultiTexCoord1.xy;
  vec4 tmpvar_3;
  vec4 tmpvar_4;
  vec4 tmpvar_5;
  vec4 tmpvar_6;
  vec4 tmpvar_7;
  tmpvar_7 = (_Object2World * gl_Vertex);
  tmpvar_3 = (gl_ModelViewProjectionMatrix * gl_Vertex);
  vec4 texcoord_8;
  texcoord_8.xy = ((gl_MultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  vec2 tmpvar_9;
  if ((_UVSec == 0.0)) {
    tmpvar_9 = tmpvar_1;
  } else {
    tmpvar_9 = tmpvar_2;
  };
  texcoord_8.zw = ((tmpvar_9 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  vec4 v_10;
  v_10.x = _World2Object[0].x;
  v_10.y = _World2Object[1].x;
  v_10.z = _World2Object[2].x;
  v_10.w = _World2Object[3].x;
  vec4 v_11;
  v_11.x = _World2Object[0].y;
  v_11.y = _World2Object[1].y;
  v_11.z = _World2Object[2].y;
  v_11.w = _World2Object[3].y;
  vec4 v_12;
  v_12.x = _World2Object[0].z;
  v_12.y = _World2Object[1].z;
  v_12.z = _World2Object[2].z;
  v_12.w = _World2Object[3].z;
  vec3 tmpvar_13;
  tmpvar_13 = normalize(((
    (v_10.xyz * gl_Normal.x)
   + 
    (v_11.xyz * gl_Normal.y)
  ) + (v_12.xyz * gl_Normal.z)));
  mat3 tmpvar_14;
  tmpvar_14[0] = _Object2World[0].xyz;
  tmpvar_14[1] = _Object2World[1].xyz;
  tmpvar_14[2] = _Object2World[2].xyz;
  vec4 tmpvar_15;
  tmpvar_15.xyz = normalize((tmpvar_14 * TANGENT.xyz));
  tmpvar_15.w = TANGENT.w;
  vec3 tmpvar_16;
  vec3 tmpvar_17;
  tmpvar_16 = tmpvar_15.xyz;
  tmpvar_17 = (((tmpvar_13.yzx * tmpvar_15.zxy) - (tmpvar_13.zxy * tmpvar_15.yzx)) * (TANGENT.w * unity_WorldTransformParams.w));
  vec3 tmpvar_18;
  vec3 tmpvar_19;
  vec3 tmpvar_20;
  tmpvar_18.x = tmpvar_16.x;
  tmpvar_18.y = tmpvar_17.x;
  tmpvar_18.z = tmpvar_13.x;
  tmpvar_19.x = tmpvar_16.y;
  tmpvar_19.y = tmpvar_17.y;
  tmpvar_19.z = tmpvar_13.y;
  tmpvar_20.x = tmpvar_16.z;
  tmpvar_20.y = tmpvar_17.z;
  tmpvar_20.z = tmpvar_13.z;
  vec3 v_21;
  v_21.x = tmpvar_18.x;
  v_21.y = tmpvar_19.x;
  v_21.z = tmpvar_20.x;
  tmpvar_4.xyz = v_21;
  vec3 v_22;
  v_22.x = tmpvar_18.y;
  v_22.y = tmpvar_19.y;
  v_22.z = tmpvar_20.y;
  tmpvar_5.xyz = v_22;
  vec3 v_23;
  v_23.x = tmpvar_18.z;
  v_23.y = tmpvar_19.z;
  v_23.z = tmpvar_20.z;
  tmpvar_6.xyz = v_23;
  vec4 o_24;
  vec4 tmpvar_25;
  tmpvar_25 = (tmpvar_3 * 0.5);
  vec2 tmpvar_26;
  tmpvar_26.x = tmpvar_25.x;
  tmpvar_26.y = (tmpvar_25.y * _ProjectionParams.x);
  o_24.xy = (tmpvar_26 + tmpvar_25.w);
  o_24.zw = tmpvar_3.zw;
  vec3 tmpvar_27;
  tmpvar_27 = (_WorldSpaceLightPos0.xyz - (tmpvar_7.xyz * _WorldSpaceLightPos0.w));
  tmpvar_4.w = tmpvar_27.x;
  tmpvar_5.w = tmpvar_27.y;
  tmpvar_6.w = tmpvar_27.z;
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = texcoord_8;
  xlv_TEXCOORD1 = normalize((tmpvar_7.xyz - _WorldSpaceCameraPos));
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  xlv_TEXCOORD5 = (_LightMatrix0 * (_Object2World * gl_Vertex)).xy;
  xlv_TEXCOORD6 = o_24;
}


#endif
#ifdef FRAGMENT
uniform vec4 unity_ColorSpaceDielectricSpec;
uniform vec4 _LightColor0;
uniform sampler2D unity_NHxRoughness;
uniform vec4 _Color;
uniform sampler2D _MainTex;
uniform float _Metallic;
uniform float _Glossiness;
uniform sampler2D _ShadowMapTexture;
uniform sampler2D _LightTexture0;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec2 xlv_TEXCOORD5;
varying vec4 xlv_TEXCOORD6;
void main ()
{
  vec3 tmpvar_1;
  vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  tmpvar_1 = (_Color.xyz * tmpvar_2.xyz);
  vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD2_2.xyz);
  vec3 tmpvar_4;
  tmpvar_4.x = xlv_TEXCOORD2.w;
  tmpvar_4.y = xlv_TEXCOORD2_1.w;
  tmpvar_4.z = xlv_TEXCOORD2_2.w;
  vec3 viewDir_5;
  viewDir_5 = -(xlv_TEXCOORD1);
  vec2 tmpvar_6;
  tmpvar_6.x = dot ((viewDir_5 - (2.0 * 
    (dot (tmpvar_3, viewDir_5) * tmpvar_3)
  )), tmpvar_4);
  tmpvar_6.y = (1.0 - clamp (dot (tmpvar_3, viewDir_5), 0.0, 1.0));
  vec2 tmpvar_7;
  tmpvar_7.x = ((tmpvar_6 * tmpvar_6) * (tmpvar_6 * tmpvar_6)).x;
  tmpvar_7.y = (1.0 - _Glossiness);
  vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (((tmpvar_1 * 
    (unity_ColorSpaceDielectricSpec.w - (_Metallic * unity_ColorSpaceDielectricSpec.w))
  ) + (
    (texture2D (unity_NHxRoughness, tmpvar_7).w * 16.0)
   * 
    mix (unity_ColorSpaceDielectricSpec.xyz, tmpvar_1, vec3(_Metallic))
  )) * ((_LightColor0.xyz * 
    (texture2D (_LightTexture0, xlv_TEXCOORD5).w * texture2DProj (_ShadowMapTexture, xlv_TEXCOORD6).x)
  ) * clamp (
    dot (tmpvar_3, tmpvar_4)
  , 0.0, 1.0)));
  vec4 xlat_varoutput_9;
  xlat_varoutput_9.xyz = tmpvar_8.xyz;
  xlat_varoutput_9.w = (tmpvar_2.w * _Color.w);
  gl_FragData[0] = xlat_varoutput_9;
}


#endif
"
}
SubProgram "d3d9 " {
// Stats: 49 math
Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" "_ALPHABLEND_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
Matrix 11 [_LightMatrix0] 2
Matrix 4 [_Object2World]
Matrix 8 [_World2Object] 3
Matrix 0 [glstate_matrix_mvp]
Vector 19 [_DetailAlbedoMap_ST]
Vector 18 [_MainTex_ST]
Vector 14 [_ProjectionParams]
Vector 15 [_ScreenParams]
Float 20 [_UVSec]
Vector 13 [_WorldSpaceCameraPos]
Vector 16 [_WorldSpaceLightPos0]
Vector 17 [unity_WorldTransformParams]
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   row_major float4x4 _LightMatrix0;
//   float4 _MainTex_ST;
//   row_major float4x4 _Object2World;
//   float4 _ProjectionParams;
//   float4 _ScreenParams;
//   float _UVSec;
//   row_major float4x4 _World2Object;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 glstate_matrix_mvp;
//   float4 unity_WorldTransformParams;
//
//
// Registers:
//
//   Name                       Reg   Size
//   -------------------------- ----- ----
//   glstate_matrix_mvp         c0       4
//   _Object2World              c4       4
//   _World2Object              c8       3
//   _LightMatrix0              c11      2
//   _WorldSpaceCameraPos       c13      1
//   _ProjectionParams          c14      1
//   _ScreenParams              c15      1
//   _WorldSpaceLightPos0       c16      1
//   unity_WorldTransformParams c17      1
//   _MainTex_ST                c18      1
//   _DetailAlbedoMap_ST        c19      1
//   _UVSec                     c20      1
//

    vs_2_0
    def c21, 0.5, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_tangent v4
    mad oT0.xy, v2, c18, c18.zwzw
    mul r0.x, c20.x, c20.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad oT0.zw, r2.xyxy, c19.xyxy, c19
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add r1.xyz, r0, -c13
    dp3 r1.w, r1, r1
    rsq r1.w, r1.w
    mul oT1.xyz, r1.w, r1
    mul r1.xyz, v1.y, c9
    mad r1.xyz, c8, v1.x, r1
    mad r1.xyz, c10, v1.z, r1
    nrm r2.xyz, r1
    dp3 r1.x, c4, v4
    dp3 r1.y, c5, v4
    dp3 r1.z, c6, v4
    nrm r3.xyz, r1
    mul r1.xyz, r2.zxyw, r3.yzxw
    mad r1.xyz, r2.yzxw, r3.zxyw, -r1
    mov oT4.xyz, r2
    mov oT2.xyz, r3
    mul r1.w, v4.w, c17.w
    mul oT3.xyz, r1.w, r1
    dp4 r0.w, c7, v0
    dp4 oT5.x, c11, r0
    dp4 oT5.y, c12, r0
    mad r0.xyz, r0, -c16.w, c16
    dp4 r1.y, c1, v0
    mul r0.w, r1.y, c14.x
    mul r2.w, r0.w, c21.x
    dp4 r1.x, c0, v0
    dp4 r1.w, c3, v0
    mul r2.xz, r1.xyww, c21.x
    mad oT6.xy, r2.z, c15.zwzw, r2.xwzw
    dp4 r1.z, c2, v0
    mov oPos, r1
    mov oT6.zw, r1
    mov oT2.w, r0.x
    mov oT3.w, r0.y
    mov oT4.w, r0.z

// approximately 48 instruction slots used
"
}
SubProgram "d3d11 " {
// Stats: 51 math
Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" "_ALPHABLEND_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
ConstBuffer "$Globals" 304
Matrix 240 [_LightMatrix0]
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
Vector 80 [_ProjectionParams]
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
Vector 336 [unity_WorldTransformParams]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer cb0[19], immediateIndexed
      dcl_constantbuffer cb1[6], immediateIndexed
      dcl_constantbuffer cb2[1], immediateIndexed
      dcl_constantbuffer cb3[22], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xy
      dcl_output o7.xyzw
      dcl_temps 5
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   4: mov o0.xyzw, r0.xyzw
   5: eq r1.x, cb0[13].z, l(0.000000)
   6: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
   7: mad o1.zw, r1.xxxy, cb0[11].xxxy, cb0[11].zzzw
   8: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   9: mul r1.xyz, v0.yyyy, cb3[13].xyzx
  10: mad r1.xyz, cb3[12].xyzx, v0.xxxx, r1.xyzx
  11: mad r1.xyz, cb3[14].xyzx, v0.zzzz, r1.xyzx
  12: mad r1.xyz, cb3[15].xyzx, v0.wwww, r1.xyzx
  13: add r2.xyz, r1.xyzx, -cb1[4].xyzx
  14: mad r1.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  15: dp3 r1.w, r2.xyzx, r2.xyzx
  16: rsq r1.w, r1.w
  17: mul o2.xyz, r1.wwww, r2.xyzx
  18: mov o3.w, r1.x
  19: mul r2.xyz, v4.yyyy, cb3[13].xyzx
  20: mad r2.xyz, cb3[12].xyzx, v4.xxxx, r2.xyzx
  21: mad r2.xyz, cb3[14].xyzx, v4.zzzz, r2.xyzx
  22: dp3 r1.x, r2.xyzx, r2.xyzx
  23: rsq r1.x, r1.x
  24: mul r2.xyz, r1.xxxx, r2.xyzx
  25: mov o3.xyz, r2.xyzx
  26: mul r3.x, v1.x, cb3[16].x
  27: mul r3.y, v1.x, cb3[17].x
  28: mul r3.z, v1.x, cb3[18].x
  29: mul r4.x, v1.y, cb3[16].y
  30: mul r4.y, v1.y, cb3[17].y
  31: mul r4.z, v1.y, cb3[18].y
  32: add r3.xyz, r3.xyzx, r4.xyzx
  33: mul r4.x, v1.z, cb3[16].z
  34: mul r4.y, v1.z, cb3[17].z
  35: mul r4.z, v1.z, cb3[18].z
  36: add r3.xyz, r3.xyzx, r4.xyzx
  37: dp3 r1.x, r3.xyzx, r3.xyzx
  38: rsq r1.x, r1.x
  39: mul r3.xyz, r1.xxxx, r3.xyzx
  40: mul r4.xyz, r2.yzxy, r3.zxyz
  41: mad r2.xyz, r3.yzxy, r2.zxyz, -r4.xyzx
  42: mov o5.xyz, r3.xyzx
  43: mul r1.x, v4.w, cb3[21].w
  44: mul o4.xyz, r1.xxxx, r2.xyzx
  45: mov o4.w, r1.y
  46: mov o5.w, r1.z
  47: mul r1.xyzw, v0.yyyy, cb3[13].xyzw
  48: mad r1.xyzw, cb3[12].xyzw, v0.xxxx, r1.xyzw
  49: mad r1.xyzw, cb3[14].xyzw, v0.zzzz, r1.xyzw
  50: mad r1.xyzw, cb3[15].xyzw, v0.wwww, r1.xyzw
  51: mul r2.xy, r1.yyyy, cb0[16].xyxx
  52: mad r1.xy, cb0[15].xyxx, r1.xxxx, r2.xyxx
  53: mad r1.xy, cb0[17].xyxx, r1.zzzz, r1.xyxx
  54: mad o6.xy, cb0[18].xyxx, r1.wwww, r1.xyxx
  55: mul r0.y, r0.y, cb1[5].x
  56: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  57: mov o7.zw, r0.zzzw
  58: add o7.xy, r1.zzzz, r1.xwxx
  59: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "d3d11_9x " {
// Stats: 51 math
Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" "_ALPHABLEND_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
ConstBuffer "$Globals" 304
Matrix 240 [_LightMatrix0]
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
Vector 80 [_ProjectionParams]
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
Vector 336 [unity_WorldTransformParams]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c1         cb0            10         2  ( FLT, FLT, FLT, FLT)
// c3         cb0            13         1  ( FLT, FLT, FLT, FLT)
// c4         cb0            15         4  ( FLT, FLT, FLT, FLT)
// c8         cb1             4         2  ( FLT, FLT, FLT, FLT)
// c10        cb2             0         1  ( FLT, FLT, FLT, FLT)
// c11        cb3             0         4  ( FLT, FLT, FLT, FLT)
// c15        cb3            12         7  ( FLT, FLT, FLT, FLT)
// c22        cb3            21         1  ( FLT, FLT, FLT, FLT)
//
//
// Runtime generated constant mappings:
//
// Target Reg                               Constant Description
// ---------- --------------------------------------------------
// c0                              Vertex Shader position offset
//
//
// Level9 shader bytecode:
//
    vs_2_0
          def c23, 0.5, 0, 0, 0
          dcl_texcoord v0
          dcl_texcoord1 v1
          dcl_texcoord2 v2
          dcl_texcoord3 v3
          dcl_texcoord4 v4
   0:     mad oT0.xy, v2, c1, c1.zwzw
   1:     mul r0.x, c3.z, c3.z
   2:     sge r0.x, -r0.x, r0.x
   3:     mov r1.xy, v2
   4:     lrp r2.xy, r0.x, r1, v3
   5:     mad oT0.zw, r2.xyxy, c2.xyxy, c2
   6:     mul r0.xyz, v0.y, c16
   7:     mad r0.xyz, c15, v0.x, r0
   8:     mad r0.xyz, c17, v0.z, r0
   9:     mad r0.xyz, c18, v0.w, r0
  10:     add r1.xyz, r0, -c8
  11:     mad r0.xyz, r0, -c10.w, c10
  12:     dp3 r0.w, r1, r1
  13:     rsq r0.w, r0.w
  14:     mul oT1.xyz, r0.w, r1
  15:     mul r1.x, v1.x, c19.x
  16:     mul r1.y, v1.x, c20.x
  17:     mul r1.z, v1.x, c21.x
  18:     mul r2.x, v1.y, c19.y
  19:     mul r2.y, v1.y, c20.y
  20:     mul r2.z, v1.y, c21.y
  21:     add r1.xyz, r1, r2
  22:     mul r2.x, v1.z, c19.z
  23:     mul r2.y, v1.z, c20.z
  24:     mul r2.z, v1.z, c21.z
  25:     add r1.xyz, r1, r2
  26:     nrm r2.xyz, r1
  29:     mul r1.xyz, v4.y, c16
  30:     mad r1.xyz, c15, v4.x, r1
  31:     mad r1.xyz, c17, v4.z, r1
  32:     nrm r3.xyz, r1
  35:     mul r1.xyz, r2.zxyw, r3.yzxw
  36:     mad r1.xyz, r2.yzxw, r3.zxyw, -r1
  37:     mov oT4.xyz, r2
  38:     mov oT2.xyz, r3
  39:     mul r0.w, v4.w, c22.w
  40:     mul oT3.xyz, r0.w, r1
  41:     mul r1, v0.y, c16
  42:     mad r1, c15, v0.x, r1
  43:     mad r1, c17, v0.z, r1
  44:     mad r1, c18, v0.w, r1
  45:     mul r2.xy, r1.y, c5
  46:     mad r1.xy, c4, r1.x, r2
  47:     mad r1.xy, c6, r1.z, r1
  48:     mad oT5.xy, c7, r1.w, r1
  49:     mul r1, v0.y, c12
  50:     mad r1, c11, v0.x, r1
  51:     mad r1, c13, v0.z, r1
  52:     mad r1, c14, v0.w, r1
  53:     mul r0.w, r1.y, c9.x
  54:     mul r2.w, r0.w, c23.x
  55:     mul r2.xz, r1.xyww, c23.x
  56:     add oT6.xy, r2.z, r2.xwzw
  57:     mad oPos.xy, r1.w, c0, r1
  58:     mov oPos.zw, r1
  59:     mov oT6.zw, r1
  60:     mov oT2.w, r0.x
  61:     mov oT3.w, r0.y
  62:     mov oT4.w, r0.z

// approximately 63 instruction slots used
      vs_4_0
      dcl_constantbuffer cb0[19], immediateIndexed
      dcl_constantbuffer cb1[6], immediateIndexed
      dcl_constantbuffer cb2[1], immediateIndexed
      dcl_constantbuffer cb3[22], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xy
      dcl_output o7.xyzw
      dcl_temps 5
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   4: mov o0.xyzw, r0.xyzw
   5: eq r1.x, cb0[13].z, l(0.000000)
   6: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
   7: mad o1.zw, r1.xxxy, cb0[11].xxxy, cb0[11].zzzw
   8: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   9: mul r1.xyz, v0.yyyy, cb3[13].xyzx
  10: mad r1.xyz, cb3[12].xyzx, v0.xxxx, r1.xyzx
  11: mad r1.xyz, cb3[14].xyzx, v0.zzzz, r1.xyzx
  12: mad r1.xyz, cb3[15].xyzx, v0.wwww, r1.xyzx
  13: add r2.xyz, r1.xyzx, -cb1[4].xyzx
  14: mad r1.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  15: dp3 r1.w, r2.xyzx, r2.xyzx
  16: rsq r1.w, r1.w
  17: mul o2.xyz, r1.wwww, r2.xyzx
  18: mov o3.w, r1.x
  19: mul r2.xyz, v4.yyyy, cb3[13].xyzx
  20: mad r2.xyz, cb3[12].xyzx, v4.xxxx, r2.xyzx
  21: mad r2.xyz, cb3[14].xyzx, v4.zzzz, r2.xyzx
  22: dp3 r1.x, r2.xyzx, r2.xyzx
  23: rsq r1.x, r1.x
  24: mul r2.xyz, r1.xxxx, r2.xyzx
  25: mov o3.xyz, r2.xyzx
  26: mul r3.x, v1.x, cb3[16].x
  27: mul r3.y, v1.x, cb3[17].x
  28: mul r3.z, v1.x, cb3[18].x
  29: mul r4.x, v1.y, cb3[16].y
  30: mul r4.y, v1.y, cb3[17].y
  31: mul r4.z, v1.y, cb3[18].y
  32: add r3.xyz, r3.xyzx, r4.xyzx
  33: mul r4.x, v1.z, cb3[16].z
  34: mul r4.y, v1.z, cb3[17].z
  35: mul r4.z, v1.z, cb3[18].z
  36: add r3.xyz, r3.xyzx, r4.xyzx
  37: dp3 r1.x, r3.xyzx, r3.xyzx
  38: rsq r1.x, r1.x
  39: mul r3.xyz, r1.xxxx, r3.xyzx
  40: mul r4.xyz, r2.yzxy, r3.zxyz
  41: mad r2.xyz, r3.yzxy, r2.zxyz, -r4.xyzx
  42: mov o5.xyz, r3.xyzx
  43: mul r1.x, v4.w, cb3[21].w
  44: mul o4.xyz, r1.xxxx, r2.xyzx
  45: mov o4.w, r1.y
  46: mov o5.w, r1.z
  47: mul r1.xyzw, v0.yyyy, cb3[13].xyzw
  48: mad r1.xyzw, cb3[12].xyzw, v0.xxxx, r1.xyzw
  49: mad r1.xyzw, cb3[14].xyzw, v0.zzzz, r1.xyzw
  50: mad r1.xyzw, cb3[15].xyzw, v0.wwww, r1.xyzw
  51: mul r2.xy, r1.yyyy, cb0[16].xyxx
  52: mad r1.xy, cb0[15].xyxx, r1.xxxx, r2.xyxx
  53: mad r1.xy, cb0[17].xyxx, r1.zzzz, r1.xyxx
  54: mad o6.xy, cb0[18].xyxx, r1.wwww, r1.xyxx
  55: mul r0.y, r0.y, cb1[5].x
  56: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  57: mov o7.zw, r0.zzzw
  58: add o7.xy, r1.zzzz, r1.xwxx
  59: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
// Stats: 37 math, 4 textures, 1 branches
Keywords { "POINT" "SHADOWS_CUBE" "_ALPHABLEND_ON" }
"#version 120

#ifdef VERTEX
uniform vec3 _WorldSpaceCameraPos;
uniform vec4 _WorldSpaceLightPos0;
uniform vec4 _LightPositionRange;

uniform mat4 _Object2World;
uniform mat4 _World2Object;
uniform vec4 unity_WorldTransformParams;
uniform vec4 _MainTex_ST;
uniform vec4 _DetailAlbedoMap_ST;
uniform float _UVSec;
uniform mat4 _LightMatrix0;
attribute vec4 TANGENT;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec3 xlv_TEXCOORD5;
varying vec3 xlv_TEXCOORD6;
void main ()
{
  vec2 tmpvar_1;
  tmpvar_1 = gl_MultiTexCoord0.xy;
  vec2 tmpvar_2;
  tmpvar_2 = gl_MultiTexCoord1.xy;
  vec4 tmpvar_3;
  vec4 tmpvar_4;
  vec4 tmpvar_5;
  vec4 tmpvar_6;
  vec4 tmpvar_7;
  tmpvar_7 = (_Object2World * gl_Vertex);
  tmpvar_3 = (gl_ModelViewProjectionMatrix * gl_Vertex);
  vec4 texcoord_8;
  texcoord_8.xy = ((gl_MultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  vec2 tmpvar_9;
  if ((_UVSec == 0.0)) {
    tmpvar_9 = tmpvar_1;
  } else {
    tmpvar_9 = tmpvar_2;
  };
  texcoord_8.zw = ((tmpvar_9 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  vec4 v_10;
  v_10.x = _World2Object[0].x;
  v_10.y = _World2Object[1].x;
  v_10.z = _World2Object[2].x;
  v_10.w = _World2Object[3].x;
  vec4 v_11;
  v_11.x = _World2Object[0].y;
  v_11.y = _World2Object[1].y;
  v_11.z = _World2Object[2].y;
  v_11.w = _World2Object[3].y;
  vec4 v_12;
  v_12.x = _World2Object[0].z;
  v_12.y = _World2Object[1].z;
  v_12.z = _World2Object[2].z;
  v_12.w = _World2Object[3].z;
  vec3 tmpvar_13;
  tmpvar_13 = normalize(((
    (v_10.xyz * gl_Normal.x)
   + 
    (v_11.xyz * gl_Normal.y)
  ) + (v_12.xyz * gl_Normal.z)));
  mat3 tmpvar_14;
  tmpvar_14[0] = _Object2World[0].xyz;
  tmpvar_14[1] = _Object2World[1].xyz;
  tmpvar_14[2] = _Object2World[2].xyz;
  vec4 tmpvar_15;
  tmpvar_15.xyz = normalize((tmpvar_14 * TANGENT.xyz));
  tmpvar_15.w = TANGENT.w;
  vec3 tmpvar_16;
  vec3 tmpvar_17;
  tmpvar_16 = tmpvar_15.xyz;
  tmpvar_17 = (((tmpvar_13.yzx * tmpvar_15.zxy) - (tmpvar_13.zxy * tmpvar_15.yzx)) * (TANGENT.w * unity_WorldTransformParams.w));
  vec3 tmpvar_18;
  vec3 tmpvar_19;
  vec3 tmpvar_20;
  tmpvar_18.x = tmpvar_16.x;
  tmpvar_18.y = tmpvar_17.x;
  tmpvar_18.z = tmpvar_13.x;
  tmpvar_19.x = tmpvar_16.y;
  tmpvar_19.y = tmpvar_17.y;
  tmpvar_19.z = tmpvar_13.y;
  tmpvar_20.x = tmpvar_16.z;
  tmpvar_20.y = tmpvar_17.z;
  tmpvar_20.z = tmpvar_13.z;
  vec3 v_21;
  v_21.x = tmpvar_18.x;
  v_21.y = tmpvar_19.x;
  v_21.z = tmpvar_20.x;
  tmpvar_4.xyz = v_21;
  vec3 v_22;
  v_22.x = tmpvar_18.y;
  v_22.y = tmpvar_19.y;
  v_22.z = tmpvar_20.y;
  tmpvar_5.xyz = v_22;
  vec3 v_23;
  v_23.x = tmpvar_18.z;
  v_23.y = tmpvar_19.z;
  v_23.z = tmpvar_20.z;
  tmpvar_6.xyz = v_23;
  vec3 tmpvar_24;
  tmpvar_24 = normalize((_WorldSpaceLightPos0.xyz - (tmpvar_7.xyz * _WorldSpaceLightPos0.w)));
  tmpvar_4.w = tmpvar_24.x;
  tmpvar_5.w = tmpvar_24.y;
  tmpvar_6.w = tmpvar_24.z;
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = texcoord_8;
  xlv_TEXCOORD1 = normalize((tmpvar_7.xyz - _WorldSpaceCameraPos));
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  vec4 tmpvar_25;
  tmpvar_25 = (_Object2World * gl_Vertex);
  xlv_TEXCOORD5 = (_LightMatrix0 * tmpvar_25).xyz;
  xlv_TEXCOORD6 = (tmpvar_25.xyz - _LightPositionRange.xyz);
}


#endif
#ifdef FRAGMENT
uniform vec4 _LightPositionRange;
uniform vec4 _LightShadowData;
uniform vec4 unity_ColorSpaceDielectricSpec;
uniform vec4 _LightColor0;
uniform sampler2D unity_NHxRoughness;
uniform vec4 _Color;
uniform sampler2D _MainTex;
uniform float _Metallic;
uniform float _Glossiness;
uniform samplerCube _ShadowMapTexture;
uniform sampler2D _LightTexture0;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec3 xlv_TEXCOORD5;
varying vec3 xlv_TEXCOORD6;
void main ()
{
  float tmpvar_1;
  vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  tmpvar_1 = (tmpvar_2.w * _Color.w);
  vec3 tmpvar_3;
  tmpvar_3 = (_Color.xyz * tmpvar_2.xyz);
  vec3 tmpvar_4;
  vec3 tmpvar_5;
  tmpvar_5 = mix (unity_ColorSpaceDielectricSpec.xyz, tmpvar_3, vec3(_Metallic));
  tmpvar_4 = (tmpvar_3 * (unity_ColorSpaceDielectricSpec.w - (_Metallic * unity_ColorSpaceDielectricSpec.w)));
  vec3 tmpvar_6;
  tmpvar_6 = normalize(xlv_TEXCOORD2_2.xyz);
  vec3 tmpvar_7;
  tmpvar_7.x = xlv_TEXCOORD2.w;
  tmpvar_7.y = xlv_TEXCOORD2_1.w;
  tmpvar_7.z = xlv_TEXCOORD2_2.w;
  vec4 tmpvar_8;
  tmpvar_8 = texture2D (_LightTexture0, vec2(dot (xlv_TEXCOORD5, xlv_TEXCOORD5)));
  float mydist_9;
  mydist_9 = ((sqrt(
    dot (xlv_TEXCOORD6, xlv_TEXCOORD6)
  ) * _LightPositionRange.w) * 0.97);
  vec4 tmpvar_10;
  tmpvar_10 = textureCube (_ShadowMapTexture, xlv_TEXCOORD6);
  float tmpvar_11;
  if ((tmpvar_10.x < mydist_9)) {
    tmpvar_11 = _LightShadowData.x;
  } else {
    tmpvar_11 = 1.0;
  };
  vec3 viewDir_12;
  viewDir_12 = -(xlv_TEXCOORD1);
  vec2 tmpvar_13;
  tmpvar_13.x = dot ((viewDir_12 - (2.0 * 
    (dot (tmpvar_6, viewDir_12) * tmpvar_6)
  )), tmpvar_7);
  tmpvar_13.y = (1.0 - clamp (dot (tmpvar_6, viewDir_12), 0.0, 1.0));
  vec2 tmpvar_14;
  tmpvar_14.x = ((tmpvar_13 * tmpvar_13) * (tmpvar_13 * tmpvar_13)).x;
  tmpvar_14.y = (1.0 - _Glossiness);
  vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = ((tmpvar_4 + (
    (texture2D (unity_NHxRoughness, tmpvar_14).w * 16.0)
   * tmpvar_5)) * ((_LightColor0.xyz * 
    (tmpvar_8.w * tmpvar_11)
  ) * clamp (
    dot (tmpvar_6, tmpvar_7)
  , 0.0, 1.0)));
  vec4 xlat_varoutput_16;
  xlat_varoutput_16.xyz = tmpvar_15.xyz;
  xlat_varoutput_16.w = tmpvar_1;
  gl_FragData[0] = xlat_varoutput_16;
}


#endif
"
}
SubProgram "d3d9 " {
// Stats: 48 math
Keywords { "POINT" "SHADOWS_CUBE" "_ALPHABLEND_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
Matrix 11 [_LightMatrix0] 3
Matrix 4 [_Object2World]
Matrix 8 [_World2Object] 3
Matrix 0 [glstate_matrix_mvp]
Vector 19 [_DetailAlbedoMap_ST]
Vector 16 [_LightPositionRange]
Vector 18 [_MainTex_ST]
Float 20 [_UVSec]
Vector 14 [_WorldSpaceCameraPos]
Vector 15 [_WorldSpaceLightPos0]
Vector 17 [unity_WorldTransformParams]
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   row_major float4x4 _LightMatrix0;
//   float4 _LightPositionRange;
//   float4 _MainTex_ST;
//   row_major float4x4 _Object2World;
//   float _UVSec;
//   row_major float4x4 _World2Object;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 glstate_matrix_mvp;
//   float4 unity_WorldTransformParams;
//
//
// Registers:
//
//   Name                       Reg   Size
//   -------------------------- ----- ----
//   glstate_matrix_mvp         c0       4
//   _Object2World              c4       4
//   _World2Object              c8       3
//   _LightMatrix0              c11      3
//   _WorldSpaceCameraPos       c14      1
//   _WorldSpaceLightPos0       c15      1
//   _LightPositionRange        c16      1
//   unity_WorldTransformParams c17      1
//   _MainTex_ST                c18      1
//   _DetailAlbedoMap_ST        c19      1
//   _UVSec                     c20      1
//

    vs_2_0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_tangent v4
    dp4 oPos.x, c0, v0
    dp4 oPos.y, c1, v0
    dp4 oPos.z, c2, v0
    dp4 oPos.w, c3, v0
    mad oT0.xy, v2, c18, c18.zwzw
    mul r0.x, c20.x, c20.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad oT0.zw, r2.xyxy, c19.xyxy, c19
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add r1.xyz, r0, -c14
    dp3 r1.w, r1, r1
    rsq r1.w, r1.w
    mul oT1.xyz, r1.w, r1
    mul r1.xyz, v1.y, c9
    mad r1.xyz, c8, v1.x, r1
    mad r1.xyz, c10, v1.z, r1
    nrm r2.xyz, r1
    dp3 r1.x, c4, v4
    dp3 r1.y, c5, v4
    dp3 r1.z, c6, v4
    nrm r3.xyz, r1
    mul r1.xyz, r2.zxyw, r3.yzxw
    mad r1.xyz, r2.yzxw, r3.zxyw, -r1
    mov oT4.xyz, r2
    mov oT2.xyz, r3
    mul r1.w, v4.w, c17.w
    mul oT3.xyz, r1.w, r1
    dp4 r0.w, c7, v0
    dp4 oT5.x, c11, r0
    dp4 oT5.y, c12, r0
    dp4 oT5.z, c13, r0
    add oT6.xyz, r0, -c16
    mad r0.xyz, r0, -c15.w, c15
    nrm r1.xyz, r0
    mov oT2.w, r1.x
    mov oT3.w, r1.y
    mov oT4.w, r1.z

// approximately 47 instruction slots used
"
}
SubProgram "d3d11 " {
// Stats: 52 math
Keywords { "POINT" "SHADOWS_CUBE" "_ALPHABLEND_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
ConstBuffer "$Globals" 304
Matrix 240 [_LightMatrix0]
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
Vector 16 [_LightPositionRange]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
Vector 336 [unity_WorldTransformParams]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer cb0[19], immediateIndexed
      dcl_constantbuffer cb1[5], immediateIndexed
      dcl_constantbuffer cb2[2], immediateIndexed
      dcl_constantbuffer cb3[22], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyz
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: mad o0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   4: eq r0.x, cb0[13].z, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[11].xxxy, cb0[11].zzzw
   7: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: rsq r0.w, r0.w
  15: mul o2.xyz, r0.wwww, r1.xyzx
  16: mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  17: add o7.xyz, r0.xyzx, -cb2[1].xyzx
  18: dp3 r0.x, r1.xyzx, r1.xyzx
  19: rsq r0.x, r0.x
  20: mul r0.xyz, r0.xxxx, r1.xyzx
  21: mov o3.w, r0.x
  22: mul r1.xyz, v4.yyyy, cb3[13].xyzx
  23: mad r1.xyz, cb3[12].xyzx, v4.xxxx, r1.xyzx
  24: mad r1.xyz, cb3[14].xyzx, v4.zzzz, r1.xyzx
  25: dp3 r0.x, r1.xyzx, r1.xyzx
  26: rsq r0.x, r0.x
  27: mul r1.xyz, r0.xxxx, r1.xyzx
  28: mov o3.xyz, r1.xyzx
  29: mul r2.x, v1.x, cb3[16].x
  30: mul r2.y, v1.x, cb3[17].x
  31: mul r2.z, v1.x, cb3[18].x
  32: mul r3.x, v1.y, cb3[16].y
  33: mul r3.y, v1.y, cb3[17].y
  34: mul r3.z, v1.y, cb3[18].y
  35: add r2.xyz, r2.xyzx, r3.xyzx
  36: mul r3.x, v1.z, cb3[16].z
  37: mul r3.y, v1.z, cb3[17].z
  38: mul r3.z, v1.z, cb3[18].z
  39: add r2.xyz, r2.xyzx, r3.xyzx
  40: dp3 r0.x, r2.xyzx, r2.xyzx
  41: rsq r0.x, r0.x
  42: mul r2.xyz, r0.xxxx, r2.xyzx
  43: mul r3.xyz, r1.yzxy, r2.zxyz
  44: mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
  45: mov o5.xyz, r2.xyzx
  46: mul r0.x, v4.w, cb3[21].w
  47: mul o4.xyz, r0.xxxx, r1.xyzx
  48: mov o4.w, r0.y
  49: mov o5.w, r0.z
  50: mul r0.xyzw, v0.yyyy, cb3[13].xyzw
  51: mad r0.xyzw, cb3[12].xyzw, v0.xxxx, r0.xyzw
  52: mad r0.xyzw, cb3[14].xyzw, v0.zzzz, r0.xyzw
  53: mad r0.xyzw, cb3[15].xyzw, v0.wwww, r0.xyzw
  54: mul r1.xyz, r0.yyyy, cb0[16].xyzx
  55: mad r1.xyz, cb0[15].xyzx, r0.xxxx, r1.xyzx
  56: mad r0.xyz, cb0[17].xyzx, r0.zzzz, r1.xyzx
  57: mad o6.xyz, cb0[18].xyzx, r0.wwww, r0.xyzx
  58: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "d3d11_9x " {
// Stats: 52 math
Keywords { "POINT" "SHADOWS_CUBE" "_ALPHABLEND_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
ConstBuffer "$Globals" 304
Matrix 240 [_LightMatrix0]
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
Vector 16 [_LightPositionRange]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
Vector 336 [unity_WorldTransformParams]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c1         cb0            10         2  ( FLT, FLT, FLT, FLT)
// c3         cb0            13         1  ( FLT, FLT, FLT, FLT)
// c4         cb0            15         4  ( FLT, FLT, FLT, FLT)
// c8         cb1             4         1  ( FLT, FLT, FLT, FLT)
// c9         cb2             0         2  ( FLT, FLT, FLT, FLT)
// c11        cb3             0         4  ( FLT, FLT, FLT, FLT)
// c15        cb3            12         7  ( FLT, FLT, FLT, FLT)
// c22        cb3            21         1  ( FLT, FLT, FLT, FLT)
//
//
// Runtime generated constant mappings:
//
// Target Reg                               Constant Description
// ---------- --------------------------------------------------
// c0                              Vertex Shader position offset
//
//
// Level9 shader bytecode:
//
    vs_2_0
          dcl_texcoord v0
          dcl_texcoord1 v1
          dcl_texcoord2 v2
          dcl_texcoord3 v3
          dcl_texcoord4 v4
   0:     mad oT0.xy, v2, c1, c1.zwzw
   1:     mul r0.x, c3.z, c3.z
   2:     sge r0.x, -r0.x, r0.x
   3:     mov r1.xy, v2
   4:     lrp r2.xy, r0.x, r1, v3
   5:     mad oT0.zw, r2.xyxy, c2.xyxy, c2
   6:     mul r0.xyz, v0.y, c16
   7:     mad r0.xyz, c15, v0.x, r0
   8:     mad r0.xyz, c17, v0.z, r0
   9:     mad r0.xyz, c18, v0.w, r0
  10:     add r1.xyz, r0, -c8
  11:     dp3 r0.w, r1, r1
  12:     rsq r0.w, r0.w
  13:     mul oT1.xyz, r0.w, r1
  14:     mul r1.x, v1.x, c19.x
  15:     mul r1.y, v1.x, c20.x
  16:     mul r1.z, v1.x, c21.x
  17:     mul r2.x, v1.y, c19.y
  18:     mul r2.y, v1.y, c20.y
  19:     mul r2.z, v1.y, c21.y
  20:     add r1.xyz, r1, r2
  21:     mul r2.x, v1.z, c19.z
  22:     mul r2.y, v1.z, c20.z
  23:     mul r2.z, v1.z, c21.z
  24:     add r1.xyz, r1, r2
  25:     nrm r2.xyz, r1
  28:     mul r1.xyz, v4.y, c16
  29:     mad r1.xyz, c15, v4.x, r1
  30:     mad r1.xyz, c17, v4.z, r1
  31:     nrm r3.xyz, r1
  34:     mul r1.xyz, r2.zxyw, r3.yzxw
  35:     mad r1.xyz, r2.yzxw, r3.zxyw, -r1
  36:     mov oT4.xyz, r2
  37:     mov oT2.xyz, r3
  38:     mul r0.w, v4.w, c22.w
  39:     mul oT3.xyz, r0.w, r1
  40:     mul r1, v0.y, c16
  41:     mad r1, c15, v0.x, r1
  42:     mad r1, c17, v0.z, r1
  43:     mad r1, c18, v0.w, r1
  44:     mul r2.xyz, r1.y, c5
  45:     mad r2.xyz, c4, r1.x, r2
  46:     mad r1.xyz, c6, r1.z, r2
  47:     mad oT5.xyz, c7, r1.w, r1
  48:     add oT6.xyz, r0, -c10
  49:     mad r0.xyz, r0, -c9.w, c9
  50:     nrm r1.xyz, r0
  53:     mul r0, v0.y, c12
  54:     mad r0, c11, v0.x, r0
  55:     mad r0, c13, v0.z, r0
  56:     mad r0, c14, v0.w, r0
  57:     mad oPos.xy, r0.w, c0, r0
  58:     mov oPos.zw, r0
  59:     mov oT2.w, r1.x
  60:     mov oT3.w, r1.y
  61:     mov oT4.w, r1.z

// approximately 62 instruction slots used
      vs_4_0
      dcl_constantbuffer cb0[19], immediateIndexed
      dcl_constantbuffer cb1[5], immediateIndexed
      dcl_constantbuffer cb2[2], immediateIndexed
      dcl_constantbuffer cb3[22], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyz
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: mad o0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   4: eq r0.x, cb0[13].z, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[11].xxxy, cb0[11].zzzw
   7: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: rsq r0.w, r0.w
  15: mul o2.xyz, r0.wwww, r1.xyzx
  16: mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  17: add o7.xyz, r0.xyzx, -cb2[1].xyzx
  18: dp3 r0.x, r1.xyzx, r1.xyzx
  19: rsq r0.x, r0.x
  20: mul r0.xyz, r0.xxxx, r1.xyzx
  21: mov o3.w, r0.x
  22: mul r1.xyz, v4.yyyy, cb3[13].xyzx
  23: mad r1.xyz, cb3[12].xyzx, v4.xxxx, r1.xyzx
  24: mad r1.xyz, cb3[14].xyzx, v4.zzzz, r1.xyzx
  25: dp3 r0.x, r1.xyzx, r1.xyzx
  26: rsq r0.x, r0.x
  27: mul r1.xyz, r0.xxxx, r1.xyzx
  28: mov o3.xyz, r1.xyzx
  29: mul r2.x, v1.x, cb3[16].x
  30: mul r2.y, v1.x, cb3[17].x
  31: mul r2.z, v1.x, cb3[18].x
  32: mul r3.x, v1.y, cb3[16].y
  33: mul r3.y, v1.y, cb3[17].y
  34: mul r3.z, v1.y, cb3[18].y
  35: add r2.xyz, r2.xyzx, r3.xyzx
  36: mul r3.x, v1.z, cb3[16].z
  37: mul r3.y, v1.z, cb3[17].z
  38: mul r3.z, v1.z, cb3[18].z
  39: add r2.xyz, r2.xyzx, r3.xyzx
  40: dp3 r0.x, r2.xyzx, r2.xyzx
  41: rsq r0.x, r0.x
  42: mul r2.xyz, r0.xxxx, r2.xyzx
  43: mul r3.xyz, r1.yzxy, r2.zxyz
  44: mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
  45: mov o5.xyz, r2.xyzx
  46: mul r0.x, v4.w, cb3[21].w
  47: mul o4.xyz, r0.xxxx, r1.xyzx
  48: mov o4.w, r0.y
  49: mov o5.w, r0.z
  50: mul r0.xyzw, v0.yyyy, cb3[13].xyzw
  51: mad r0.xyzw, cb3[12].xyzw, v0.xxxx, r0.xyzw
  52: mad r0.xyzw, cb3[14].xyzw, v0.zzzz, r0.xyzw
  53: mad r0.xyzw, cb3[15].xyzw, v0.wwww, r0.xyzw
  54: mul r1.xyz, r0.yyyy, cb0[16].xyzx
  55: mad r1.xyz, cb0[15].xyzx, r0.xxxx, r1.xyzx
  56: mad r0.xyz, cb0[17].xyzx, r0.zzzz, r1.xyzx
  57: mad o6.xyz, cb0[18].xyzx, r0.wwww, r0.xyzx
  58: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
// Stats: 38 math, 5 textures, 1 branches
Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "_ALPHABLEND_ON" }
"#version 120

#ifdef VERTEX
uniform vec3 _WorldSpaceCameraPos;
uniform vec4 _WorldSpaceLightPos0;
uniform vec4 _LightPositionRange;

uniform mat4 _Object2World;
uniform mat4 _World2Object;
uniform vec4 unity_WorldTransformParams;
uniform vec4 _MainTex_ST;
uniform vec4 _DetailAlbedoMap_ST;
uniform float _UVSec;
uniform mat4 _LightMatrix0;
attribute vec4 TANGENT;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec3 xlv_TEXCOORD5;
varying vec3 xlv_TEXCOORD6;
void main ()
{
  vec2 tmpvar_1;
  tmpvar_1 = gl_MultiTexCoord0.xy;
  vec2 tmpvar_2;
  tmpvar_2 = gl_MultiTexCoord1.xy;
  vec4 tmpvar_3;
  vec4 tmpvar_4;
  vec4 tmpvar_5;
  vec4 tmpvar_6;
  vec4 tmpvar_7;
  tmpvar_7 = (_Object2World * gl_Vertex);
  tmpvar_3 = (gl_ModelViewProjectionMatrix * gl_Vertex);
  vec4 texcoord_8;
  texcoord_8.xy = ((gl_MultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  vec2 tmpvar_9;
  if ((_UVSec == 0.0)) {
    tmpvar_9 = tmpvar_1;
  } else {
    tmpvar_9 = tmpvar_2;
  };
  texcoord_8.zw = ((tmpvar_9 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  vec4 v_10;
  v_10.x = _World2Object[0].x;
  v_10.y = _World2Object[1].x;
  v_10.z = _World2Object[2].x;
  v_10.w = _World2Object[3].x;
  vec4 v_11;
  v_11.x = _World2Object[0].y;
  v_11.y = _World2Object[1].y;
  v_11.z = _World2Object[2].y;
  v_11.w = _World2Object[3].y;
  vec4 v_12;
  v_12.x = _World2Object[0].z;
  v_12.y = _World2Object[1].z;
  v_12.z = _World2Object[2].z;
  v_12.w = _World2Object[3].z;
  vec3 tmpvar_13;
  tmpvar_13 = normalize(((
    (v_10.xyz * gl_Normal.x)
   + 
    (v_11.xyz * gl_Normal.y)
  ) + (v_12.xyz * gl_Normal.z)));
  mat3 tmpvar_14;
  tmpvar_14[0] = _Object2World[0].xyz;
  tmpvar_14[1] = _Object2World[1].xyz;
  tmpvar_14[2] = _Object2World[2].xyz;
  vec4 tmpvar_15;
  tmpvar_15.xyz = normalize((tmpvar_14 * TANGENT.xyz));
  tmpvar_15.w = TANGENT.w;
  vec3 tmpvar_16;
  vec3 tmpvar_17;
  tmpvar_16 = tmpvar_15.xyz;
  tmpvar_17 = (((tmpvar_13.yzx * tmpvar_15.zxy) - (tmpvar_13.zxy * tmpvar_15.yzx)) * (TANGENT.w * unity_WorldTransformParams.w));
  vec3 tmpvar_18;
  vec3 tmpvar_19;
  vec3 tmpvar_20;
  tmpvar_18.x = tmpvar_16.x;
  tmpvar_18.y = tmpvar_17.x;
  tmpvar_18.z = tmpvar_13.x;
  tmpvar_19.x = tmpvar_16.y;
  tmpvar_19.y = tmpvar_17.y;
  tmpvar_19.z = tmpvar_13.y;
  tmpvar_20.x = tmpvar_16.z;
  tmpvar_20.y = tmpvar_17.z;
  tmpvar_20.z = tmpvar_13.z;
  vec3 v_21;
  v_21.x = tmpvar_18.x;
  v_21.y = tmpvar_19.x;
  v_21.z = tmpvar_20.x;
  tmpvar_4.xyz = v_21;
  vec3 v_22;
  v_22.x = tmpvar_18.y;
  v_22.y = tmpvar_19.y;
  v_22.z = tmpvar_20.y;
  tmpvar_5.xyz = v_22;
  vec3 v_23;
  v_23.x = tmpvar_18.z;
  v_23.y = tmpvar_19.z;
  v_23.z = tmpvar_20.z;
  tmpvar_6.xyz = v_23;
  vec3 tmpvar_24;
  tmpvar_24 = normalize((_WorldSpaceLightPos0.xyz - (tmpvar_7.xyz * _WorldSpaceLightPos0.w)));
  tmpvar_4.w = tmpvar_24.x;
  tmpvar_5.w = tmpvar_24.y;
  tmpvar_6.w = tmpvar_24.z;
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = texcoord_8;
  xlv_TEXCOORD1 = normalize((tmpvar_7.xyz - _WorldSpaceCameraPos));
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  vec4 tmpvar_25;
  tmpvar_25 = (_Object2World * gl_Vertex);
  xlv_TEXCOORD5 = (_LightMatrix0 * tmpvar_25).xyz;
  xlv_TEXCOORD6 = (tmpvar_25.xyz - _LightPositionRange.xyz);
}


#endif
#ifdef FRAGMENT
uniform vec4 _LightPositionRange;
uniform vec4 _LightShadowData;
uniform vec4 unity_ColorSpaceDielectricSpec;
uniform vec4 _LightColor0;
uniform sampler2D unity_NHxRoughness;
uniform vec4 _Color;
uniform sampler2D _MainTex;
uniform float _Metallic;
uniform float _Glossiness;
uniform samplerCube _ShadowMapTexture;
uniform samplerCube _LightTexture0;
uniform sampler2D _LightTextureB0;
varying vec4 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_TEXCOORD2_1;
varying vec4 xlv_TEXCOORD2_2;
varying vec3 xlv_TEXCOORD5;
varying vec3 xlv_TEXCOORD6;
void main ()
{
  float tmpvar_1;
  vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  tmpvar_1 = (tmpvar_2.w * _Color.w);
  vec3 tmpvar_3;
  tmpvar_3 = (_Color.xyz * tmpvar_2.xyz);
  vec3 tmpvar_4;
  vec3 tmpvar_5;
  tmpvar_5 = mix (unity_ColorSpaceDielectricSpec.xyz, tmpvar_3, vec3(_Metallic));
  tmpvar_4 = (tmpvar_3 * (unity_ColorSpaceDielectricSpec.w - (_Metallic * unity_ColorSpaceDielectricSpec.w)));
  vec3 tmpvar_6;
  tmpvar_6 = normalize(xlv_TEXCOORD2_2.xyz);
  vec3 tmpvar_7;
  tmpvar_7.x = xlv_TEXCOORD2.w;
  tmpvar_7.y = xlv_TEXCOORD2_1.w;
  tmpvar_7.z = xlv_TEXCOORD2_2.w;
  vec4 tmpvar_8;
  tmpvar_8 = texture2D (_LightTextureB0, vec2(dot (xlv_TEXCOORD5, xlv_TEXCOORD5)));
  vec4 tmpvar_9;
  tmpvar_9 = textureCube (_LightTexture0, xlv_TEXCOORD5);
  float mydist_10;
  mydist_10 = ((sqrt(
    dot (xlv_TEXCOORD6, xlv_TEXCOORD6)
  ) * _LightPositionRange.w) * 0.97);
  vec4 tmpvar_11;
  tmpvar_11 = textureCube (_ShadowMapTexture, xlv_TEXCOORD6);
  float tmpvar_12;
  if ((tmpvar_11.x < mydist_10)) {
    tmpvar_12 = _LightShadowData.x;
  } else {
    tmpvar_12 = 1.0;
  };
  vec3 viewDir_13;
  viewDir_13 = -(xlv_TEXCOORD1);
  vec2 tmpvar_14;
  tmpvar_14.x = dot ((viewDir_13 - (2.0 * 
    (dot (tmpvar_6, viewDir_13) * tmpvar_6)
  )), tmpvar_7);
  tmpvar_14.y = (1.0 - clamp (dot (tmpvar_6, viewDir_13), 0.0, 1.0));
  vec2 tmpvar_15;
  tmpvar_15.x = ((tmpvar_14 * tmpvar_14) * (tmpvar_14 * tmpvar_14)).x;
  tmpvar_15.y = (1.0 - _Glossiness);
  vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = ((tmpvar_4 + (
    (texture2D (unity_NHxRoughness, tmpvar_15).w * 16.0)
   * tmpvar_5)) * ((_LightColor0.xyz * 
    ((tmpvar_8.w * tmpvar_9.w) * tmpvar_12)
  ) * clamp (
    dot (tmpvar_6, tmpvar_7)
  , 0.0, 1.0)));
  vec4 xlat_varoutput_17;
  xlat_varoutput_17.xyz = tmpvar_16.xyz;
  xlat_varoutput_17.w = tmpvar_1;
  gl_FragData[0] = xlat_varoutput_17;
}


#endif
"
}
SubProgram "d3d9 " {
// Stats: 48 math
Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "_ALPHABLEND_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
Matrix 11 [_LightMatrix0] 3
Matrix 4 [_Object2World]
Matrix 8 [_World2Object] 3
Matrix 0 [glstate_matrix_mvp]
Vector 19 [_DetailAlbedoMap_ST]
Vector 16 [_LightPositionRange]
Vector 18 [_MainTex_ST]
Float 20 [_UVSec]
Vector 14 [_WorldSpaceCameraPos]
Vector 15 [_WorldSpaceLightPos0]
Vector 17 [unity_WorldTransformParams]
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   row_major float4x4 _LightMatrix0;
//   float4 _LightPositionRange;
//   float4 _MainTex_ST;
//   row_major float4x4 _Object2World;
//   float _UVSec;
//   row_major float4x4 _World2Object;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 glstate_matrix_mvp;
//   float4 unity_WorldTransformParams;
//
//
// Registers:
//
//   Name                       Reg   Size
//   -------------------------- ----- ----
//   glstate_matrix_mvp         c0       4
//   _Object2World              c4       4
//   _World2Object              c8       3
//   _LightMatrix0              c11      3
//   _WorldSpaceCameraPos       c14      1
//   _WorldSpaceLightPos0       c15      1
//   _LightPositionRange        c16      1
//   unity_WorldTransformParams c17      1
//   _MainTex_ST                c18      1
//   _DetailAlbedoMap_ST        c19      1
//   _UVSec                     c20      1
//

    vs_2_0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_tangent v4
    dp4 oPos.x, c0, v0
    dp4 oPos.y, c1, v0
    dp4 oPos.z, c2, v0
    dp4 oPos.w, c3, v0
    mad oT0.xy, v2, c18, c18.zwzw
    mul r0.x, c20.x, c20.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad oT0.zw, r2.xyxy, c19.xyxy, c19
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add r1.xyz, r0, -c14
    dp3 r1.w, r1, r1
    rsq r1.w, r1.w
    mul oT1.xyz, r1.w, r1
    mul r1.xyz, v1.y, c9
    mad r1.xyz, c8, v1.x, r1
    mad r1.xyz, c10, v1.z, r1
    nrm r2.xyz, r1
    dp3 r1.x, c4, v4
    dp3 r1.y, c5, v4
    dp3 r1.z, c6, v4
    nrm r3.xyz, r1
    mul r1.xyz, r2.zxyw, r3.yzxw
    mad r1.xyz, r2.yzxw, r3.zxyw, -r1
    mov oT4.xyz, r2
    mov oT2.xyz, r3
    mul r1.w, v4.w, c17.w
    mul oT3.xyz, r1.w, r1
    dp4 r0.w, c7, v0
    dp4 oT5.x, c11, r0
    dp4 oT5.y, c12, r0
    dp4 oT5.z, c13, r0
    add oT6.xyz, r0, -c16
    mad r0.xyz, r0, -c15.w, c15
    nrm r1.xyz, r0
    mov oT2.w, r1.x
    mov oT3.w, r1.y
    mov oT4.w, r1.z

// approximately 47 instruction slots used
"
}
SubProgram "d3d11 " {
// Stats: 52 math
Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "_ALPHABLEND_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
ConstBuffer "$Globals" 304
Matrix 240 [_LightMatrix0]
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
Vector 16 [_LightPositionRange]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
Vector 336 [unity_WorldTransformParams]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer cb0[19], immediateIndexed
      dcl_constantbuffer cb1[5], immediateIndexed
      dcl_constantbuffer cb2[2], immediateIndexed
      dcl_constantbuffer cb3[22], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyz
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: mad o0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   4: eq r0.x, cb0[13].z, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[11].xxxy, cb0[11].zzzw
   7: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: rsq r0.w, r0.w
  15: mul o2.xyz, r0.wwww, r1.xyzx
  16: mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  17: add o7.xyz, r0.xyzx, -cb2[1].xyzx
  18: dp3 r0.x, r1.xyzx, r1.xyzx
  19: rsq r0.x, r0.x
  20: mul r0.xyz, r0.xxxx, r1.xyzx
  21: mov o3.w, r0.x
  22: mul r1.xyz, v4.yyyy, cb3[13].xyzx
  23: mad r1.xyz, cb3[12].xyzx, v4.xxxx, r1.xyzx
  24: mad r1.xyz, cb3[14].xyzx, v4.zzzz, r1.xyzx
  25: dp3 r0.x, r1.xyzx, r1.xyzx
  26: rsq r0.x, r0.x
  27: mul r1.xyz, r0.xxxx, r1.xyzx
  28: mov o3.xyz, r1.xyzx
  29: mul r2.x, v1.x, cb3[16].x
  30: mul r2.y, v1.x, cb3[17].x
  31: mul r2.z, v1.x, cb3[18].x
  32: mul r3.x, v1.y, cb3[16].y
  33: mul r3.y, v1.y, cb3[17].y
  34: mul r3.z, v1.y, cb3[18].y
  35: add r2.xyz, r2.xyzx, r3.xyzx
  36: mul r3.x, v1.z, cb3[16].z
  37: mul r3.y, v1.z, cb3[17].z
  38: mul r3.z, v1.z, cb3[18].z
  39: add r2.xyz, r2.xyzx, r3.xyzx
  40: dp3 r0.x, r2.xyzx, r2.xyzx
  41: rsq r0.x, r0.x
  42: mul r2.xyz, r0.xxxx, r2.xyzx
  43: mul r3.xyz, r1.yzxy, r2.zxyz
  44: mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
  45: mov o5.xyz, r2.xyzx
  46: mul r0.x, v4.w, cb3[21].w
  47: mul o4.xyz, r0.xxxx, r1.xyzx
  48: mov o4.w, r0.y
  49: mov o5.w, r0.z
  50: mul r0.xyzw, v0.yyyy, cb3[13].xyzw
  51: mad r0.xyzw, cb3[12].xyzw, v0.xxxx, r0.xyzw
  52: mad r0.xyzw, cb3[14].xyzw, v0.zzzz, r0.xyzw
  53: mad r0.xyzw, cb3[15].xyzw, v0.wwww, r0.xyzw
  54: mul r1.xyz, r0.yyyy, cb0[16].xyzx
  55: mad r1.xyz, cb0[15].xyzx, r0.xxxx, r1.xyzx
  56: mad r0.xyz, cb0[17].xyzx, r0.zzzz, r1.xyzx
  57: mad o6.xyz, cb0[18].xyzx, r0.wwww, r0.xyzx
  58: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "d3d11_9x " {
// Stats: 52 math
Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "_ALPHABLEND_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord4
ConstBuffer "$Globals" 304
Matrix 240 [_LightMatrix0]
Vector 160 [_MainTex_ST]
Vector 176 [_DetailAlbedoMap_ST]
Float 216 [_UVSec]
ConstBuffer "UnityPerCamera" 144
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
Vector 16 [_LightPositionRange]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
Vector 336 [unity_WorldTransformParams]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c1         cb0            10         2  ( FLT, FLT, FLT, FLT)
// c3         cb0            13         1  ( FLT, FLT, FLT, FLT)
// c4         cb0            15         4  ( FLT, FLT, FLT, FLT)
// c8         cb1             4         1  ( FLT, FLT, FLT, FLT)
// c9         cb2             0         2  ( FLT, FLT, FLT, FLT)
// c11        cb3             0         4  ( FLT, FLT, FLT, FLT)
// c15        cb3            12         7  ( FLT, FLT, FLT, FLT)
// c22        cb3            21         1  ( FLT, FLT, FLT, FLT)
//
//
// Runtime generated constant mappings:
//
// Target Reg                               Constant Description
// ---------- --------------------------------------------------
// c0                              Vertex Shader position offset
//
//
// Level9 shader bytecode:
//
    vs_2_0
          dcl_texcoord v0
          dcl_texcoord1 v1
          dcl_texcoord2 v2
          dcl_texcoord3 v3
          dcl_texcoord4 v4
   0:     mad oT0.xy, v2, c1, c1.zwzw
   1:     mul r0.x, c3.z, c3.z
   2:     sge r0.x, -r0.x, r0.x
   3:     mov r1.xy, v2
   4:     lrp r2.xy, r0.x, r1, v3
   5:     mad oT0.zw, r2.xyxy, c2.xyxy, c2
   6:     mul r0.xyz, v0.y, c16
   7:     mad r0.xyz, c15, v0.x, r0
   8:     mad r0.xyz, c17, v0.z, r0
   9:     mad r0.xyz, c18, v0.w, r0
  10:     add r1.xyz, r0, -c8
  11:     dp3 r0.w, r1, r1
  12:     rsq r0.w, r0.w
  13:     mul oT1.xyz, r0.w, r1
  14:     mul r1.x, v1.x, c19.x
  15:     mul r1.y, v1.x, c20.x
  16:     mul r1.z, v1.x, c21.x
  17:     mul r2.x, v1.y, c19.y
  18:     mul r2.y, v1.y, c20.y
  19:     mul r2.z, v1.y, c21.y
  20:     add r1.xyz, r1, r2
  21:     mul r2.x, v1.z, c19.z
  22:     mul r2.y, v1.z, c20.z
  23:     mul r2.z, v1.z, c21.z
  24:     add r1.xyz, r1, r2
  25:     nrm r2.xyz, r1
  28:     mul r1.xyz, v4.y, c16
  29:     mad r1.xyz, c15, v4.x, r1
  30:     mad r1.xyz, c17, v4.z, r1
  31:     nrm r3.xyz, r1
  34:     mul r1.xyz, r2.zxyw, r3.yzxw
  35:     mad r1.xyz, r2.yzxw, r3.zxyw, -r1
  36:     mov oT4.xyz, r2
  37:     mov oT2.xyz, r3
  38:     mul r0.w, v4.w, c22.w
  39:     mul oT3.xyz, r0.w, r1
  40:     mul r1, v0.y, c16
  41:     mad r1, c15, v0.x, r1
  42:     mad r1, c17, v0.z, r1
  43:     mad r1, c18, v0.w, r1
  44:     mul r2.xyz, r1.y, c5
  45:     mad r2.xyz, c4, r1.x, r2
  46:     mad r1.xyz, c6, r1.z, r2
  47:     mad oT5.xyz, c7, r1.w, r1
  48:     add oT6.xyz, r0, -c10
  49:     mad r0.xyz, r0, -c9.w, c9
  50:     nrm r1.xyz, r0
  53:     mul r0, v0.y, c12
  54:     mad r0, c11, v0.x, r0
  55:     mad r0, c13, v0.z, r0
  56:     mad r0, c14, v0.w, r0
  57:     mad oPos.xy, r0.w, c0, r0
  58:     mov oPos.zw, r0
  59:     mov oT2.w, r1.x
  60:     mov oT3.w, r1.y
  61:     mov oT4.w, r1.z

// approximately 62 instruction slots used
      vs_4_0
      dcl_constantbuffer cb0[19], immediateIndexed
      dcl_constantbuffer cb1[5], immediateIndexed
      dcl_constantbuffer cb2[2], immediateIndexed
      dcl_constantbuffer cb3[22], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyz
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: mad o0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   4: eq r0.x, cb0[13].z, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[11].xxxy, cb0[11].zzzw
   7: mad o1.xy, v2.xyxx, cb0[10].xyxx, cb0[10].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: rsq r0.w, r0.w
  15: mul o2.xyz, r0.wwww, r1.xyzx
  16: mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  17: add o7.xyz, r0.xyzx, -cb2[1].xyzx
  18: dp3 r0.x, r1.xyzx, r1.xyzx
  19: rsq r0.x, r0.x
  20: mul r0.xyz, r0.xxxx, r1.xyzx
  21: mov o3.w, r0.x
  22: mul r1.xyz, v4.yyyy, cb3[13].xyzx
  23: mad r1.xyz, cb3[12].xyzx, v4.xxxx, r1.xyzx
  24: mad r1.xyz, cb3[14].xyzx, v4.zzzz, r1.xyzx
  25: dp3 r0.x, r1.xyzx, r1.xyzx
  26: rsq r0.x, r0.x
  27: mul r1.xyz, r0.xxxx, r1.xyzx
  28: mov o3.xyz, r1.xyzx
  29: mul r2.x, v1.x, cb3[16].x
  30: mul r2.y, v1.x, cb3[17].x
  31: mul r2.z, v1.x, cb3[18].x
  32: mul r3.x, v1.y, cb3[16].y
  33: mul r3.y, v1.y, cb3[17].y
  34: mul r3.z, v1.y, cb3[18].y
  35: add r2.xyz, r2.xyzx, r3.xyzx
  36: mul r3.x, v1.z, cb3[16].z
  37: mul r3.y, v1.z, cb3[17].z
  38: mul r3.z, v1.z, cb3[18].z
  39: add r2.xyz, r2.xyzx, r3.xyzx
  40: dp3 r0.x, r2.xyzx, r2.xyzx
  41: rsq r0.x, r0.x
  42: mul r2.xyz, r0.xxxx, r2.xyzx
  43: mul r3.xyz, r1.yzxy, r2.zxyz
  44: mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
  45: mov o5.xyz, r2.xyzx
  46: mul r0.x, v4.w, cb3[21].w
  47: mul o4.xyz, r0.xxxx, r1.xyzx
  48: mov o4.w, r0.y
  49: mov o5.w, r0.z
  50: mul r0.xyzw, v0.yyyy, cb3[13].xyzw
  51: mad r0.xyzw, cb3[12].xyzw, v0.xxxx, r0.xyzw
  52: mad r0.xyzw, cb3[14].xyzw, v0.zzzz, r0.xyzw
  53: mad r0.xyzw, cb3[15].xyzw, v0.wwww, r0.xyzw
  54: mul r1.xyz, r0.yyyy, cb0[16].xyzx
  55: mad r1.xyz, cb0[15].xyzx, r0.xxxx, r1.xyzx
  56: mad r0.xyz, cb0[17].xyzx, r0.zzzz, r1.xyzx
  57: mad o6.xyz, cb0[18].xyzx, r0.wwww, r0.xyzx
  58: ret 
// Approximately 0 instruction slots used
"
}
}
Program "fp" {
SubProgram "opengl " {
Keywords { "POINT" "SHADOWS_OFF" }
"// shader disassembly not supported on opengl"
}
SubProgram "d3d9 " {
// Stats: 29 math, 3 textures
Keywords { "POINT" "SHADOWS_OFF" }
Vector 2 [_Color]
Float 4 [_Glossiness]
Vector 1 [_LightColor0]
Float 3 [_Metallic]
Vector 0 [unity_ColorSpaceDielectricSpec]
SetTexture 0 [unity_NHxRoughness] 2D 0
SetTexture 1 [_MainTex] 2D 1
SetTexture 2 [_LightTexture0] 2D 2
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   sampler2D _LightTexture0;
//   sampler2D _MainTex;
//   float _Metallic;
//   float4 unity_ColorSpaceDielectricSpec;
//   sampler2D unity_NHxRoughness;
//
//
// Registers:
//
//   Name                           Reg   Size
//   ------------------------------ ----- ----
//   unity_ColorSpaceDielectricSpec c0       1
//   _LightColor0                   c1       1
//   _Color                         c2       1
//   _Metallic                      c3       1
//   _Glossiness                    c4       1
//   unity_NHxRoughness             s0       1
//   _MainTex                       s1       1
//   _LightTexture0                 s2       1
//

    ps_2_0
    def c5, 1, 16, 0, 0
    dcl t0.xy
    dcl_pp t1.xyz
    dcl_pp t2
    dcl_pp t3
    dcl_pp t4
    dcl t5.xyz
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    nrm_pp r0.xyz, t4
    dp3_pp r0.w, -t1, r0
    add_pp r0.w, r0.w, r0.w
    mad_pp r1.xyz, r0, -r0.w, -t1
    mov_pp r2.x, t2.w
    mov_pp r2.y, t3.w
    mov_pp r2.z, t4.w
    dp3_pp r0.w, r1, r2
    dp3_sat_pp r0.x, r0, r2
    mul_pp r0.y, r0.w, r0.w
    mul_pp r1.x, r0.y, r0.y
    mov r2.x, c5.x
    add_pp r1.y, r2.x, -c4.x
    dp3 r2.xy, t5, t5
    texld r1, r1, s0
    texld r3, t0, s1
    texld_pp r2, r2, s2
    mul_pp r3.w, r1.x, c5.y
    mov r1, c0
    mad_pp r0.yzw, c2.wzyx, r3.wzyx, -r1.wzyx
    mul_pp r2.yzw, r3.wzyx, c2.wzyx
    mad_pp r0.yzw, c3.x, r0, r1.wzyx
    mul_pp r0.yzw, r0, r3.w
    mad_pp r1.x, c3.x, -r1.w, r1.w
    mad_pp r0.yzw, r2, r1.x, r0
    mul_pp r1.xyz, r2.x, c1
    mul_pp r1.xyz, r0.x, r1
    mul_pp r0.xyz, r0.wzyx, r1
    mov_pp r0.w, c5.x
    mov_pp oC0, r0

// approximately 32 instruction slots used (3 texture, 29 arithmetic)
"
}
SubProgram "d3d11 " {
// Stats: 22 math, 3 textures
Keywords { "POINT" "SHADOWS_OFF" }
SetTexture 0 [_MainTex] 2D 1
SetTexture 1 [_LightTexture0] 2D 2
SetTexture 2 [unity_NHxRoughness] 2D 0
ConstBuffer "$Globals" 304
Vector 32 [unity_ColorSpaceDielectricSpec]
Vector 96 [_LightColor0]
Vector 128 [_Color]
Float 200 [_Metallic]
Float 204 [_Glossiness]
BindCB  "$Globals" 0
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer cb0[13], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 3
   0: dp3 r0.x, v5.xyzx, v5.xyzx
   1: rsq r0.x, r0.x
   2: mul r0.xyz, r0.xxxx, v5.xyzx
   3: dp3 r0.w, -v2.xyzx, r0.xyzx
   4: add r0.w, r0.w, r0.w
   5: mad r1.xyz, r0.xyzx, -r0.wwww, -v2.xyzx
   6: mov r2.x, v3.w
   7: mov r2.y, v4.w
   8: mov r2.z, v5.w
   9: dp3 r0.w, r1.xyzx, r2.xyzx
  10: dp3_sat r0.x, r0.xyzx, r2.xyzx
  11: mul r0.y, r0.w, r0.w
  12: mul r1.x, r0.y, r0.y
  13: add r1.y, -cb0[12].w, l(1.000000)
  14: sample r1.xyzw, r1.xyxx, t2.xyzw, s0
  15: mul r0.y, r1.x, l(16.000000)
  16: sample r1.xyzw, v1.xyxx, t0.xyzw, s1
  17: mad r2.xyz, cb0[8].xyzx, r1.xyzx, -cb0[2].xyzx
  18: mul r1.xyz, r1.xyzx, cb0[8].xyzx
  19: mad r2.xyz, cb0[12].zzzz, r2.xyzx, cb0[2].xyzx
  20: mul r0.yzw, r0.yyyy, r2.xxyz
  21: mad r1.w, -cb0[12].z, cb0[2].w, cb0[2].w
  22: mad r0.yzw, r1.xxyz, r1.wwww, r0.yyzw
  23: dp3 r1.x, v6.xyzx, v6.xyzx
  24: sample r1.xyzw, r1.xxxx, t1.xyzw, s2
  25: mul r1.xyz, r1.xxxx, cb0[6].xyzx
  26: mul r1.xyz, r0.xxxx, r1.xyzx
  27: mul o0.xyz, r0.yzwy, r1.xyzx
  28: mov o0.w, l(1.000000)
  29: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "d3d11_9x " {
// Stats: 22 math, 3 textures
Keywords { "POINT" "SHADOWS_OFF" }
SetTexture 0 [_MainTex] 2D 1
SetTexture 1 [_LightTexture0] 2D 2
SetTexture 2 [unity_NHxRoughness] 2D 0
ConstBuffer "$Globals" 304
Vector 32 [unity_ColorSpaceDielectricSpec]
Vector 96 [_LightColor0]
Vector 128 [_Color]
Float 200 [_Metallic]
Float 204 [_Glossiness]
BindCB  "$Globals" 0
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c0         cb0             2         1  ( FLT, FLT, FLT, FLT)
// c1         cb0             6         1  ( FLT, FLT, FLT, FLT)
// c2         cb0             8         1  ( FLT, FLT, FLT, FLT)
// c3         cb0            12         1  ( FLT, FLT, FLT, FLT)
//
//
// Sampler/Resource to DX9 shader sampler mappings:
//
// Target Sampler Source Sampler  Source Resource
// -------------- --------------- ----------------
// s0             s0              t2               
// s1             s1              t0               
// s2             s2              t1               
//
//
// Level9 shader bytecode:
//
    ps_2_0
          def c4, 1, 16, 0, 0
          dcl t0
          dcl_pp t1.xyz
          dcl_pp t2
          dcl_pp t3
          dcl_pp t4
          dcl t5.xyz
          dcl_2d s0
          dcl_2d s1
          dcl_2d s2
   0:     nrm_pp r0.xyz, t4
   3:     dp3_pp r0.w, -t1, r0
   4:     add_pp r0.w, r0.w, r0.w
   5:     mad_pp r1.xyz, r0, -r0.w, -t1
   6:     mov_pp r2.x, t2.w
   7:     mov_pp r2.y, t3.w
   8:     mov_pp r2.z, t4.w
   9:     dp3_pp r0.w, r1, r2
  10:     dp3_sat_pp r0.x, r0, r2
  11:     mul_pp r0.y, r0.w, r0.w
  12:     mul_pp r1.x, r0.y, r0.y
  13:     mov r0.zw, c3
  14:     add_pp r1.y, -r0.w, c4.x
  15:     dp3 r2.xy, t5, t5
  16:     texld r1, r1, s0
  16:     texld r3, t0, s1
  16:     texld_pp r2, r2, s2
  16:     mul_pp r3.w, r1.x, c4.y
  17:     mov r1.xyz, c0
  18:     mad_pp r1.xyz, c2, r3, -r1
  19:     mul_pp r2.yzw, r3.wzyx, c2.wzyx
  20:     mad_pp r1.xyz, r0.z, r1, c0
  21:     mul_pp r1.xyz, r1, r3.w
  22:     mad_pp r1.w, r0.z, -c0.w, c0.w
  23:     mad_pp r0.yzw, r2, r1.w, r1.wzyx
  24:     mul_pp r1.xyz, r2.x, c1
  25:     mul_pp r1.xyz, r0.x, r1
  26:     mul_pp r0.xyz, r0.wzyx, r1
  27:     mov_pp r0.w, c4.x
  28:     mov_pp oC0, r0

// approximately 32 instruction slots used (3 texture, 29 arithmetic)
      ps_4_0
      dcl_constantbuffer cb0[13], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 3
   0: dp3 r0.x, v5.xyzx, v5.xyzx
   1: rsq r0.x, r0.x
   2: mul r0.xyz, r0.xxxx, v5.xyzx
   3: dp3 r0.w, -v2.xyzx, r0.xyzx
   4: add r0.w, r0.w, r0.w
   5: mad r1.xyz, r0.xyzx, -r0.wwww, -v2.xyzx
   6: mov r2.x, v3.w
   7: mov r2.y, v4.w
   8: mov r2.z, v5.w
   9: dp3 r0.w, r1.xyzx, r2.xyzx
  10: dp3_sat r0.x, r0.xyzx, r2.xyzx
  11: mul r0.y, r0.w, r0.w
  12: mul r1.x, r0.y, r0.y
  13: add r1.y, -cb0[12].w, l(1.000000)
  14: sample r1.xyzw, r1.xyxx, t2.xyzw, s0
  15: mul r0.y, r1.x, l(16.000000)
  16: sample r1.xyzw, v1.xyxx, t0.xyzw, s1
  17: mad r2.xyz, cb0[8].xyzx, r1.xyzx, -cb0[2].xyzx
  18: mul r1.xyz, r1.xyzx, cb0[8].xyzx
  19: mad r2.xyz, cb0[12].zzzz, r2.xyzx, cb0[2].xyzx
  20: mul r0.yzw, r0.yyyy, r2.xxyz
  21: mad r1.w, -cb0[12].z, cb0[2].w, cb0[2].w
  22: mad r0.yzw, r1.xxyz, r1.wwww, r0.yyzw
  23: dp3 r1.x, v6.xyzx, v6.xyzx
  24: sample r1.xyzw, r1.xxxx, t1.xyzw, s2
  25: mul r1.xyz, r1.xxxx, cb0[6].xyzx
  26: mul r1.xyz, r0.xxxx, r1.xyzx
  27: mul o0.xyz, r0.yzwy, r1.xyzx
  28: mov o0.w, l(1.000000)
  29: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" }
"// shader disassembly not supported on opengl"
}
SubProgram "d3d9 " {
// Stats: 27 math, 2 textures
Keywords { "DIRECTIONAL" "SHADOWS_OFF" }
Vector 2 [_Color]
Float 4 [_Glossiness]
Vector 1 [_LightColor0]
Float 3 [_Metallic]
Vector 0 [unity_ColorSpaceDielectricSpec]
SetTexture 0 [unity_NHxRoughness] 2D 0
SetTexture 1 [_MainTex] 2D 1
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   sampler2D _MainTex;
//   float _Metallic;
//   float4 unity_ColorSpaceDielectricSpec;
//   sampler2D unity_NHxRoughness;
//
//
// Registers:
//
//   Name                           Reg   Size
//   ------------------------------ ----- ----
//   unity_ColorSpaceDielectricSpec c0       1
//   _LightColor0                   c1       1
//   _Color                         c2       1
//   _Metallic                      c3       1
//   _Glossiness                    c4       1
//   unity_NHxRoughness             s0       1
//   _MainTex                       s1       1
//

    ps_2_0
    def c5, 1, 16, 0, 0
    dcl t0.xy
    dcl_pp t1.xyz
    dcl_pp t2
    dcl_pp t3
    dcl_pp t4
    dcl_2d s0
    dcl_2d s1
    nrm_pp r0.xyz, t4
    dp3_pp r0.w, -t1, r0
    add_pp r0.w, r0.w, r0.w
    mad_pp r1.xyz, r0, -r0.w, -t1
    mov_pp r2.x, t2.w
    mov_pp r2.y, t3.w
    mov_pp r2.z, t4.w
    dp3_pp r0.w, r1, r2
    dp3_sat_pp r0.x, r0, r2
    mul_pp r0.xyz, r0.x, c1
    mul_pp r0.w, r0.w, r0.w
    mul_pp r1.x, r0.w, r0.w
    mov r0.w, c5.x
    add_pp r1.y, r0.w, -c4.x
    texld r1, r1, s0
    texld r2, t0, s1
    mul_pp r0.w, r1.x, c5.y
    mov r1, c0
    mad_pp r3.xyz, c2, r2, -r1
    mul_pp r2.xyz, r2, c2
    mad_pp r1.xyz, c3.x, r3, r1
    mul_pp r1.xyz, r0.w, r1
    mad_pp r0.w, c3.x, -r1.w, r1.w
    mad_pp r1.xyz, r2, r0.w, r1
    mul_pp r0.xyz, r0, r1
    mov_pp r0.w, c5.x
    mov_pp oC0, r0

// approximately 29 instruction slots used (2 texture, 27 arithmetic)
"
}
SubProgram "d3d11 " {
// Stats: 20 math, 2 textures
Keywords { "DIRECTIONAL" "SHADOWS_OFF" }
SetTexture 0 [_MainTex] 2D 1
SetTexture 1 [unity_NHxRoughness] 2D 0
ConstBuffer "$Globals" 240
Vector 32 [unity_ColorSpaceDielectricSpec]
Vector 96 [_LightColor0]
Vector 128 [_Color]
Float 200 [_Metallic]
Float 204 [_Glossiness]
BindCB  "$Globals" 0
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer cb0[13], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_output o0.xyzw
      dcl_temps 3
   0: dp3 r0.x, v5.xyzx, v5.xyzx
   1: rsq r0.x, r0.x
   2: mul r0.xyz, r0.xxxx, v5.xyzx
   3: dp3 r0.w, -v2.xyzx, r0.xyzx
   4: add r0.w, r0.w, r0.w
   5: mad r1.xyz, r0.xyzx, -r0.wwww, -v2.xyzx
   6: mov r2.x, v3.w
   7: mov r2.y, v4.w
   8: mov r2.z, v5.w
   9: dp3 r0.w, r1.xyzx, r2.xyzx
  10: dp3_sat r0.x, r0.xyzx, r2.xyzx
  11: mul r0.xyz, r0.xxxx, cb0[6].xyzx
  12: mul r0.w, r0.w, r0.w
  13: mul r1.x, r0.w, r0.w
  14: add r1.y, -cb0[12].w, l(1.000000)
  15: sample r1.xyzw, r1.xyxx, t1.xyzw, s0
  16: mul r0.w, r1.x, l(16.000000)
  17: sample r1.xyzw, v1.xyxx, t0.xyzw, s1
  18: mad r2.xyz, cb0[8].xyzx, r1.xyzx, -cb0[2].xyzx
  19: mul r1.xyz, r1.xyzx, cb0[8].xyzx
  20: mad r2.xyz, cb0[12].zzzz, r2.xyzx, cb0[2].xyzx
  21: mul r2.xyz, r0.wwww, r2.xyzx
  22: mad r0.w, -cb0[12].z, cb0[2].w, cb0[2].w
  23: mad r1.xyz, r1.xyzx, r0.wwww, r2.xyzx
  24: mul o0.xyz, r0.xyzx, r1.xyzx
  25: mov o0.w, l(1.000000)
  26: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "d3d11_9x " {
// Stats: 20 math, 2 textures
Keywords { "DIRECTIONAL" "SHADOWS_OFF" }
SetTexture 0 [_MainTex] 2D 1
SetTexture 1 [unity_NHxRoughness] 2D 0
ConstBuffer "$Globals" 240
Vector 32 [unity_ColorSpaceDielectricSpec]
Vector 96 [_LightColor0]
Vector 128 [_Color]
Float 200 [_Metallic]
Float 204 [_Glossiness]
BindCB  "$Globals" 0
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c0         cb0             2         1  ( FLT, FLT, FLT, FLT)
// c1         cb0             6         1  ( FLT, FLT, FLT, FLT)
// c2         cb0             8         1  ( FLT, FLT, FLT, FLT)
// c3         cb0            12         1  ( FLT, FLT, FLT, FLT)
//
//
// Sampler/Resource to DX9 shader sampler mappings:
//
// Target Sampler Source Sampler  Source Resource
// -------------- --------------- ----------------
// s0             s0              t1               
// s1             s1              t0               
//
//
// Level9 shader bytecode:
//
    ps_2_0
          def c4, 1, 16, 0, 0
          dcl t0
          dcl_pp t1.xyz
          dcl_pp t2
          dcl_pp t3
          dcl_pp t4
          dcl_2d s0
          dcl_2d s1
   0:     nrm_pp r0.xyz, t4
   3:     dp3_pp r0.w, -t1, r0
   4:     add_pp r0.w, r0.w, r0.w
   5:     mad_pp r1.xyz, r0, -r0.w, -t1
   6:     mov_pp r2.x, t2.w
   7:     mov_pp r2.y, t3.w
   8:     mov_pp r2.z, t4.w
   9:     dp3_pp r0.w, r1, r2
  10:     dp3_sat_pp r0.x, r0, r2
  11:     mul_pp r0.xyz, r0.x, c1
  12:     mul_pp r0.w, r0.w, r0.w
  13:     mul_pp r1.x, r0.w, r0.w
  14:     mov r1.zw, c3
  15:     add_pp r1.y, -r1.w, c4.x
  16:     texld r2, r1, s0
  16:     texld r3, t0, s1
  16:     mul_pp r0.w, r2.x, c4.y
  17:     mov r2.xyz, c0
  18:     mad_pp r2.xyz, c2, r3, -r2
  19:     mul_pp r3.xyz, r3, c2
  20:     mad_pp r2.xyz, r1.z, r2, c0
  21:     mul_pp r2.xyz, r0.w, r2
  22:     mad_pp r0.w, r1.z, -c0.w, c0.w
  23:     mad_pp r1.xyz, r3, r0.w, r2
  24:     mul_pp r0.xyz, r0, r1
  25:     mov_pp r0.w, c4.x
  26:     mov_pp oC0, r0

// approximately 29 instruction slots used (2 texture, 27 arithmetic)
      ps_4_0
      dcl_constantbuffer cb0[13], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_output o0.xyzw
      dcl_temps 3
   0: dp3 r0.x, v5.xyzx, v5.xyzx
   1: rsq r0.x, r0.x
   2: mul r0.xyz, r0.xxxx, v5.xyzx
   3: dp3 r0.w, -v2.xyzx, r0.xyzx
   4: add r0.w, r0.w, r0.w
   5: mad r1.xyz, r0.xyzx, -r0.wwww, -v2.xyzx
   6: mov r2.x, v3.w
   7: mov r2.y, v4.w
   8: mov r2.z, v5.w
   9: dp3 r0.w, r1.xyzx, r2.xyzx
  10: dp3_sat r0.x, r0.xyzx, r2.xyzx
  11: mul r0.xyz, r0.xxxx, cb0[6].xyzx
  12: mul r0.w, r0.w, r0.w
  13: mul r1.x, r0.w, r0.w
  14: add r1.y, -cb0[12].w, l(1.000000)
  15: sample r1.xyzw, r1.xyxx, t1.xyzw, s0
  16: mul r0.w, r1.x, l(16.000000)
  17: sample r1.xyzw, v1.xyxx, t0.xyzw, s1
  18: mad r2.xyz, cb0[8].xyzx, r1.xyzx, -cb0[2].xyzx
  19: mul r1.xyz, r1.xyzx, cb0[8].xyzx
  20: mad r2.xyz, cb0[12].zzzz, r2.xyzx, cb0[2].xyzx
  21: mul r2.xyz, r0.wwww, r2.xyzx
  22: mad r0.w, -cb0[12].z, cb0[2].w, cb0[2].w
  23: mad r1.xyz, r1.xyzx, r0.wwww, r2.xyzx
  24: mul o0.xyz, r0.xyzx, r1.xyzx
  25: mov o0.w, l(1.000000)
  26: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
Keywords { "SPOT" "SHADOWS_OFF" }
"// shader disassembly not supported on opengl"
}
SubProgram "d3d9 " {
// Stats: 34 math, 4 textures
Keywords { "SPOT" "SHADOWS_OFF" }
Vector 2 [_Color]
Float 4 [_Glossiness]
Vector 1 [_LightColor0]
Float 3 [_Metallic]
Vector 0 [unity_ColorSpaceDielectricSpec]
SetTexture 0 [unity_NHxRoughness] 2D 0
SetTexture 1 [_MainTex] 2D 1
SetTexture 2 [_LightTexture0] 2D 2
SetTexture 3 [_LightTextureB0] 2D 3
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   sampler2D _LightTexture0;
//   sampler2D _LightTextureB0;
//   sampler2D _MainTex;
//   float _Metallic;
//   float4 unity_ColorSpaceDielectricSpec;
//   sampler2D unity_NHxRoughness;
//
//
// Registers:
//
//   Name                           Reg   Size
//   ------------------------------ ----- ----
//   unity_ColorSpaceDielectricSpec c0       1
//   _LightColor0                   c1       1
//   _Color                         c2       1
//   _Metallic                      c3       1
//   _Glossiness                    c4       1
//   unity_NHxRoughness             s0       1
//   _MainTex                       s1       1
//   _LightTexture0                 s2       1
//   _LightTextureB0                s3       1
//

    ps_2_0
    def c5, 0.5, 1, 16, 0
    dcl t0.xy
    dcl_pp t1.xyz
    dcl_pp t2
    dcl_pp t3
    dcl_pp t4
    dcl_pp t5
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    nrm_pp r0.xyz, t4
    dp3_pp r0.w, -t1, r0
    add_pp r0.w, r0.w, r0.w
    mad_pp r1.xyz, r0, -r0.w, -t1
    mov_pp r2.x, t2.w
    mov_pp r2.y, t3.w
    mov_pp r2.z, t4.w
    dp3_pp r0.w, r1, r2
    dp3_sat_pp r0.x, r0, r2
    mul_pp r0.y, r0.w, r0.w
    mul_pp r1.x, r0.y, r0.y
    mov r0.y, c5.y
    add_pp r1.y, r0.y, -c4.x
    rcp r0.y, t5.w
    mad_pp r2.xy, t5, r0.y, c5.x
    dp3 r3.w, t5, t5
    mov r3.xy, r3.w
    texld r1, r1, s0
    texld r4, t0, s1
    texld_pp r2, r2, s2
    texld_pp r3, r3, s3
    mul_pp r4.w, r1.x, c5.z
    mov r1, c0
    mad_pp r0.yzw, c2.wzyx, r4.wzyx, -r1.wzyx
    mul_pp r2.xyz, r4, c2
    mad_pp r0.yzw, c3.x, r0, r1.wzyx
    mul_pp r0.yzw, r0, r4.w
    mad_pp r1.x, c3.x, -r1.w, r1.w
    mad_pp r0.yzw, r2.wzyx, r1.x, r0
    mul r1.x, r2.w, r3.x
    mul_pp r1.xyz, r1.x, c1
    mul_pp r1.xyz, r0.x, r1
    cmp_pp r1.xyz, -t5.z, c5.w, r1
    mul_pp r0.xyz, r0.wzyx, r1
    mov r0.w, c5.y
    mov_pp oC0, r0

// approximately 38 instruction slots used (4 texture, 34 arithmetic)
"
}
SubProgram "d3d11 " {
// Stats: 28 math, 4 textures
Keywords { "SPOT" "SHADOWS_OFF" }
SetTexture 0 [_MainTex] 2D 1
SetTexture 1 [_LightTexture0] 2D 2
SetTexture 2 [_LightTextureB0] 2D 3
SetTexture 3 [unity_NHxRoughness] 2D 0
ConstBuffer "$Globals" 304
Vector 32 [unity_ColorSpaceDielectricSpec]
Vector 96 [_LightColor0]
Vector 128 [_Color]
Float 200 [_Metallic]
Float 204 [_Glossiness]
BindCB  "$Globals" 0
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer cb0[13], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyzw
      dcl_output o0.xyzw
      dcl_temps 3
   0: dp3 r0.x, v5.xyzx, v5.xyzx
   1: rsq r0.x, r0.x
   2: mul r0.xyz, r0.xxxx, v5.xyzx
   3: dp3 r0.w, -v2.xyzx, r0.xyzx
   4: add r0.w, r0.w, r0.w
   5: mad r1.xyz, r0.xyzx, -r0.wwww, -v2.xyzx
   6: mov r2.x, v3.w
   7: mov r2.y, v4.w
   8: mov r2.z, v5.w
   9: dp3 r0.w, r1.xyzx, r2.xyzx
  10: dp3_sat r0.x, r0.xyzx, r2.xyzx
  11: mul r0.y, r0.w, r0.w
  12: mul r1.x, r0.y, r0.y
  13: add r1.y, -cb0[12].w, l(1.000000)
  14: sample r1.xyzw, r1.xyxx, t3.xyzw, s0
  15: mul r0.y, r1.x, l(16.000000)
  16: sample r1.xyzw, v1.xyxx, t0.xyzw, s1
  17: mad r2.xyz, cb0[8].xyzx, r1.xyzx, -cb0[2].xyzx
  18: mul r1.xyz, r1.xyzx, cb0[8].xyzx
  19: mad r2.xyz, cb0[12].zzzz, r2.xyzx, cb0[2].xyzx
  20: mul r0.yzw, r0.yyyy, r2.xxyz
  21: mad r1.w, -cb0[12].z, cb0[2].w, cb0[2].w
  22: mad r0.yzw, r1.xxyz, r1.wwww, r0.yyzw
  23: div r1.xy, v6.xyxx, v6.wwww
  24: add r1.xy, r1.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  25: sample r1.xyzw, r1.xyxx, t1.xyzw, s2
  26: lt r1.x, l(0.000000), v6.z
  27: and r1.x, r1.x, l(0x3f800000)
  28: mul r1.x, r1.w, r1.x
  29: dp3 r1.y, v6.xyzx, v6.xyzx
  30: sample r2.xyzw, r1.yyyy, t2.xyzw, s3
  31: mul r1.x, r1.x, r2.x
  32: mul r1.xyz, r1.xxxx, cb0[6].xyzx
  33: mul r1.xyz, r0.xxxx, r1.xyzx
  34: mul o0.xyz, r0.yzwy, r1.xyzx
  35: mov o0.w, l(1.000000)
  36: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "d3d11_9x " {
// Stats: 28 math, 4 textures
Keywords { "SPOT" "SHADOWS_OFF" }
SetTexture 0 [_MainTex] 2D 1
SetTexture 1 [_LightTexture0] 2D 2
SetTexture 2 [_LightTextureB0] 2D 3
SetTexture 3 [unity_NHxRoughness] 2D 0
ConstBuffer "$Globals" 304
Vector 32 [unity_ColorSpaceDielectricSpec]
Vector 96 [_LightColor0]
Vector 128 [_Color]
Float 200 [_Metallic]
Float 204 [_Glossiness]
BindCB  "$Globals" 0
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c0         cb0             2         1  ( FLT, FLT, FLT, FLT)
// c1         cb0             6         1  ( FLT, FLT, FLT, FLT)
// c2         cb0             8         1  ( FLT, FLT, FLT, FLT)
// c3         cb0            12         1  ( FLT, FLT, FLT, FLT)
//
//
// Sampler/Resource to DX9 shader sampler mappings:
//
// Target Sampler Source Sampler  Source Resource
// -------------- --------------- ----------------
// s0             s0              t3               
// s1             s1              t0               
// s2             s2              t1               
// s3             s3              t2               
//
//
// Level9 shader bytecode:
//
    ps_2_0
          def c4, 0.5, 1, 16, 0
          dcl t0
          dcl_pp t1.xyz
          dcl_pp t2
          dcl_pp t3
          dcl_pp t4
          dcl_pp t5
          dcl_2d s0
          dcl_2d s1
          dcl_2d s2
          dcl_2d s3
   0:     nrm_pp r0.xyz, t4
   3:     dp3_pp r0.w, -t1, r0
   4:     add_pp r0.w, r0.w, r0.w
   5:     mad_pp r1.xyz, r0, -r0.w, -t1
   6:     mov_pp r2.x, t2.w
   7:     mov_pp r2.y, t3.w
   8:     mov_pp r2.z, t4.w
   9:     dp3_pp r0.w, r1, r2
  10:     dp3_sat_pp r0.x, r0, r2
  11:     mul_pp r0.y, r0.w, r0.w
  12:     mul_pp r1.x, r0.y, r0.y
  13:     mov r0.y, c4.y
  14:     add_pp r1.y, r0.y, -c3.w
  15:     rcp r0.y, t5.w
  16:     mad_pp r2.xy, t5, r0.y, c4.x
  17:     dp3 r3.w, t5, t5
  18:     mov r3.xy, r3.w
  19:     texld r1, r1, s0
  19:     texld r4, t0, s1
  19:     texld_pp r2, r2, s2
  19:     texld_pp r3, r3, s3
  19:     mul_pp r4.w, r1.x, c4.z
  20:     mov r1, c0
  21:     mad_pp r0.yzw, c2.wzyx, r4.wzyx, -r1.wzyx
  22:     mul_pp r2.xyz, r4, c2
  23:     mad_pp r0.yzw, c3.z, r0, r1.wzyx
  24:     mul_pp r0.yzw, r0, r4.w
  25:     mad_pp r1.x, c3.z, -r1.w, r1.w
  26:     mad_pp r0.yzw, r2.wzyx, r1.x, r0
  27:     mul r1.x, r2.w, r3.x
  28:     mul_pp r1.xyz, r1.x, c1
  29:     mul_pp r1.xyz, r0.x, r1
  30:     cmp_pp r1.xyz, -t5.z, c4.w, r1
  31:     mul_pp r0.xyz, r0.wzyx, r1
  32:     mov r0.w, c4.y
  33:     mov_pp oC0, r0

// approximately 38 instruction slots used (4 texture, 34 arithmetic)
      ps_4_0
      dcl_constantbuffer cb0[13], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyzw
      dcl_output o0.xyzw
      dcl_temps 3
   0: dp3 r0.x, v5.xyzx, v5.xyzx
   1: rsq r0.x, r0.x
   2: mul r0.xyz, r0.xxxx, v5.xyzx
   3: dp3 r0.w, -v2.xyzx, r0.xyzx
   4: add r0.w, r0.w, r0.w
   5: mad r1.xyz, r0.xyzx, -r0.wwww, -v2.xyzx
   6: mov r2.x, v3.w
   7: mov r2.y, v4.w
   8: mov r2.z, v5.w
   9: dp3 r0.w, r1.xyzx, r2.xyzx
  10: dp3_sat r0.x, r0.xyzx, r2.xyzx
  11: mul r0.y, r0.w, r0.w
  12: mul r1.x, r0.y, r0.y
  13: add r1.y, -cb0[12].w, l(1.000000)
  14: sample r1.xyzw, r1.xyxx, t3.xyzw, s0
  15: mul r0.y, r1.x, l(16.000000)
  16: sample r1.xyzw, v1.xyxx, t0.xyzw, s1
  17: mad r2.xyz, cb0[8].xyzx, r1.xyzx, -cb0[2].xyzx
  18: mul r1.xyz, r1.xyzx, cb0[8].xyzx
  19: mad r2.xyz, cb0[12].zzzz, r2.xyzx, cb0[2].xyzx
  20: mul r0.yzw, r0.yyyy, r2.xxyz
  21: mad r1.w, -cb0[12].z, cb0[2].w, cb0[2].w
  22: mad r0.yzw, r1.xxyz, r1.wwww, r0.yyzw
  23: div r1.xy, v6.xyxx, v6.wwww
  24: add r1.xy, r1.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  25: sample r1.xyzw, r1.xyxx, t1.xyzw, s2
  26: lt r1.x, l(0.000000), v6.z
  27: and r1.x, r1.x, l(0x3f800000)
  28: mul r1.x, r1.w, r1.x
  29: dp3 r1.y, v6.xyzx, v6.xyzx
  30: sample r2.xyzw, r1.yyyy, t2.xyzw, s3
  31: mul r1.x, r1.x, r2.x
  32: mul r1.xyz, r1.xxxx, cb0[6].xyzx
  33: mul r1.xyz, r0.xxxx, r1.xyzx
  34: mul o0.xyz, r0.yzwy, r1.xyzx
  35: mov o0.w, l(1.000000)
  36: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
Keywords { "POINT_COOKIE" "SHADOWS_OFF" }
"// shader disassembly not supported on opengl"
}
SubProgram "d3d9 " {
// Stats: 30 math, 4 textures
Keywords { "POINT_COOKIE" "SHADOWS_OFF" }
Vector 2 [_Color]
Float 4 [_Glossiness]
Vector 1 [_LightColor0]
Float 3 [_Metallic]
Vector 0 [unity_ColorSpaceDielectricSpec]
SetTexture 0 [unity_NHxRoughness] 2D 0
SetTexture 1 [_MainTex] 2D 1
SetTexture 2 [_LightTexture0] CUBE 2
SetTexture 3 [_LightTextureB0] 2D 3
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   samplerCUBE _LightTexture0;
//   sampler2D _LightTextureB0;
//   sampler2D _MainTex;
//   float _Metallic;
//   float4 unity_ColorSpaceDielectricSpec;
//   sampler2D unity_NHxRoughness;
//
//
// Registers:
//
//   Name                           Reg   Size
//   ------------------------------ ----- ----
//   unity_ColorSpaceDielectricSpec c0       1
//   _LightColor0                   c1       1
//   _Color                         c2       1
//   _Metallic                      c3       1
//   _Glossiness                    c4       1
//   unity_NHxRoughness             s0       1
//   _MainTex                       s1       1
//   _LightTexture0                 s2       1
//   _LightTextureB0                s3       1
//

    ps_2_0
    def c5, 1, 16, 0, 0
    dcl t0.xy
    dcl_pp t1.xyz
    dcl_pp t2
    dcl_pp t3
    dcl_pp t4
    dcl t5.xyz
    dcl_2d s0
    dcl_2d s1
    dcl_cube s2
    dcl_2d s3
    nrm_pp r0.xyz, t4
    dp3_pp r0.w, -t1, r0
    add_pp r0.w, r0.w, r0.w
    mad_pp r1.xyz, r0, -r0.w, -t1
    mov_pp r2.x, t2.w
    mov_pp r2.y, t3.w
    mov_pp r2.z, t4.w
    dp3_pp r0.w, r1, r2
    dp3_sat_pp r0.x, r0, r2
    mul_pp r0.y, r0.w, r0.w
    mul_pp r1.x, r0.y, r0.y
    mov r2.x, c5.x
    add_pp r1.y, r2.x, -c4.x
    dp3 r2.xy, t5, t5
    texld r1, r1, s0
    texld r3, t0, s1
    texld r2, r2, s3
    texld r4, t5, s2
    mul_pp r3.w, r1.x, c5.y
    mov r1, c0
    mad_pp r0.yzw, c2.wzyx, r3.wzyx, -r1.wzyx
    mul_pp r2.yzw, r3.wzyx, c2.wzyx
    mad_pp r0.yzw, c3.x, r0, r1.wzyx
    mul_pp r0.yzw, r0, r3.w
    mad_pp r1.x, c3.x, -r1.w, r1.w
    mad_pp r0.yzw, r2, r1.x, r0
    mul_pp r1.x, r2.x, r4.w
    mul_pp r1.xyz, r1.x, c1
    mul_pp r1.xyz, r0.x, r1
    mul_pp r0.xyz, r0.wzyx, r1
    mov_pp r0.w, c5.x
    mov_pp oC0, r0

// approximately 34 instruction slots used (4 texture, 30 arithmetic)
"
}
SubProgram "d3d11 " {
// Stats: 23 math, 4 textures
Keywords { "POINT_COOKIE" "SHADOWS_OFF" }
SetTexture 0 [_MainTex] 2D 1
SetTexture 1 [_LightTextureB0] 2D 3
SetTexture 2 [_LightTexture0] CUBE 2
SetTexture 3 [unity_NHxRoughness] 2D 0
ConstBuffer "$Globals" 304
Vector 32 [unity_ColorSpaceDielectricSpec]
Vector 96 [_LightColor0]
Vector 128 [_Color]
Float 200 [_Metallic]
Float 204 [_Glossiness]
BindCB  "$Globals" 0
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer cb0[13], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texturecube (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 3
   0: dp3 r0.x, v5.xyzx, v5.xyzx
   1: rsq r0.x, r0.x
   2: mul r0.xyz, r0.xxxx, v5.xyzx
   3: dp3 r0.w, -v2.xyzx, r0.xyzx
   4: add r0.w, r0.w, r0.w
   5: mad r1.xyz, r0.xyzx, -r0.wwww, -v2.xyzx
   6: mov r2.x, v3.w
   7: mov r2.y, v4.w
   8: mov r2.z, v5.w
   9: dp3 r0.w, r1.xyzx, r2.xyzx
  10: dp3_sat r0.x, r0.xyzx, r2.xyzx
  11: mul r0.y, r0.w, r0.w
  12: mul r1.x, r0.y, r0.y
  13: add r1.y, -cb0[12].w, l(1.000000)
  14: sample r1.xyzw, r1.xyxx, t3.xyzw, s0
  15: mul r0.y, r1.x, l(16.000000)
  16: sample r1.xyzw, v1.xyxx, t0.xyzw, s1
  17: mad r2.xyz, cb0[8].xyzx, r1.xyzx, -cb0[2].xyzx
  18: mul r1.xyz, r1.xyzx, cb0[8].xyzx
  19: mad r2.xyz, cb0[12].zzzz, r2.xyzx, cb0[2].xyzx
  20: mul r0.yzw, r0.yyyy, r2.xxyz
  21: mad r1.w, -cb0[12].z, cb0[2].w, cb0[2].w
  22: mad r0.yzw, r1.xxyz, r1.wwww, r0.yyzw
  23: dp3 r1.x, v6.xyzx, v6.xyzx
  24: sample r1.xyzw, r1.xxxx, t1.xyzw, s3
  25: sample r2.xyzw, v6.xyzx, t2.xyzw, s2
  26: mul r1.x, r1.x, r2.w
  27: mul r1.xyz, r1.xxxx, cb0[6].xyzx
  28: mul r1.xyz, r0.xxxx, r1.xyzx
  29: mul o0.xyz, r0.yzwy, r1.xyzx
  30: mov o0.w, l(1.000000)
  31: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "d3d11_9x " {
// Stats: 23 math, 4 textures
Keywords { "POINT_COOKIE" "SHADOWS_OFF" }
SetTexture 0 [_MainTex] 2D 1
SetTexture 1 [_LightTextureB0] 2D 3
SetTexture 2 [_LightTexture0] CUBE 2
SetTexture 3 [unity_NHxRoughness] 2D 0
ConstBuffer "$Globals" 304
Vector 32 [unity_ColorSpaceDielectricSpec]
Vector 96 [_LightColor0]
Vector 128 [_Color]
Float 200 [_Metallic]
Float 204 [_Glossiness]
BindCB  "$Globals" 0
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c0         cb0             2         1  ( FLT, FLT, FLT, FLT)
// c1         cb0             6         1  ( FLT, FLT, FLT, FLT)
// c2         cb0             8         1  ( FLT, FLT, FLT, FLT)
// c3         cb0            12         1  ( FLT, FLT, FLT, FLT)
//
//
// Sampler/Resource to DX9 shader sampler mappings:
//
// Target Sampler Source Sampler  Source Resource
// -------------- --------------- ----------------
// s0             s0              t3               
// s1             s1              t0               
// s2             s2              t2               
// s3             s3              t1               
//
//
// Level9 shader bytecode:
//
    ps_2_0
          def c4, 1, 16, 0, 0
          dcl t0
          dcl_pp t1.xyz
          dcl_pp t2
          dcl_pp t3
          dcl_pp t4
          dcl t5.xyz
          dcl_2d s0
          dcl_2d s1
          dcl_cube s2
          dcl_2d s3
   0:     nrm_pp r0.xyz, t4
   3:     dp3_pp r0.w, -t1, r0
   4:     add_pp r0.w, r0.w, r0.w
   5:     mad_pp r1.xyz, r0, -r0.w, -t1
   6:     mov_pp r2.x, t2.w
   7:     mov_pp r2.y, t3.w
   8:     mov_pp r2.z, t4.w
   9:     dp3_pp r0.w, r1, r2
  10:     dp3_sat_pp r0.x, r0, r2
  11:     mul_pp r0.y, r0.w, r0.w
  12:     mul_pp r1.x, r0.y, r0.y
  13:     mov r0.zw, c3
  14:     add_pp r1.y, -r0.w, c4.x
  15:     dp3 r2.xy, t5, t5
  16:     texld r1, r1, s0
  16:     texld r3, t0, s1
  16:     texld r2, r2, s3
  16:     texld r4, t5, s2
  16:     mul_pp r3.w, r1.x, c4.y
  17:     mov r1.xyz, c0
  18:     mad_pp r1.xyz, c2, r3, -r1
  19:     mul_pp r2.yzw, r3.wzyx, c2.wzyx
  20:     mad_pp r1.xyz, r0.z, r1, c0
  21:     mul_pp r1.xyz, r1, r3.w
  22:     mad_pp r1.w, r0.z, -c0.w, c0.w
  23:     mad_pp r0.yzw, r2, r1.w, r1.wzyx
  24:     mul_pp r1.x, r2.x, r4.w
  25:     mul_pp r1.xyz, r1.x, c1
  26:     mul_pp r1.xyz, r0.x, r1
  27:     mul_pp r0.xyz, r0.wzyx, r1
  28:     mov_pp r0.w, c4.x
  29:     mov_pp oC0, r0

// approximately 34 instruction slots used (4 texture, 30 arithmetic)
      ps_4_0
      dcl_constantbuffer cb0[13], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texturecube (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 3
   0: dp3 r0.x, v5.xyzx, v5.xyzx
   1: rsq r0.x, r0.x
   2: mul r0.xyz, r0.xxxx, v5.xyzx
   3: dp3 r0.w, -v2.xyzx, r0.xyzx
   4: add r0.w, r0.w, r0.w
   5: mad r1.xyz, r0.xyzx, -r0.wwww, -v2.xyzx
   6: mov r2.x, v3.w
   7: mov r2.y, v4.w
   8: mov r2.z, v5.w
   9: dp3 r0.w, r1.xyzx, r2.xyzx
  10: dp3_sat r0.x, r0.xyzx, r2.xyzx
  11: mul r0.y, r0.w, r0.w
  12: mul r1.x, r0.y, r0.y
  13: add r1.y, -cb0[12].w, l(1.000000)
  14: sample r1.xyzw, r1.xyxx, t3.xyzw, s0
  15: mul r0.y, r1.x, l(16.000000)
  16: sample r1.xyzw, v1.xyxx, t0.xyzw, s1
  17: mad r2.xyz, cb0[8].xyzx, r1.xyzx, -cb0[2].xyzx
  18: mul r1.xyz, r1.xyzx, cb0[8].xyzx
  19: mad r2.xyz, cb0[12].zzzz, r2.xyzx, cb0[2].xyzx
  20: mul r0.yzw, r0.yyyy, r2.xxyz
  21: mad r1.w, -cb0[12].z, cb0[2].w, cb0[2].w
  22: mad r0.yzw, r1.xxyz, r1.wwww, r0.yyzw
  23: dp3 r1.x, v6.xyzx, v6.xyzx
  24: sample r1.xyzw, r1.xxxx, t1.xyzw, s3
  25: sample r2.xyzw, v6.xyzx, t2.xyzw, s2
  26: mul r1.x, r1.x, r2.w
  27: mul r1.xyz, r1.xxxx, cb0[6].xyzx
  28: mul r1.xyz, r0.xxxx, r1.xyzx
  29: mul o0.xyz, r0.yzwy, r1.xyzx
  30: mov o0.w, l(1.000000)
  31: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_OFF" }
"// shader disassembly not supported on opengl"
}
SubProgram "d3d9 " {
// Stats: 28 math, 3 textures
Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_OFF" }
Vector 2 [_Color]
Float 4 [_Glossiness]
Vector 1 [_LightColor0]
Float 3 [_Metallic]
Vector 0 [unity_ColorSpaceDielectricSpec]
SetTexture 0 [unity_NHxRoughness] 2D 0
SetTexture 1 [_MainTex] 2D 1
SetTexture 2 [_LightTexture0] 2D 2
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   sampler2D _LightTexture0;
//   sampler2D _MainTex;
//   float _Metallic;
//   float4 unity_ColorSpaceDielectricSpec;
//   sampler2D unity_NHxRoughness;
//
//
// Registers:
//
//   Name                           Reg   Size
//   ------------------------------ ----- ----
//   unity_ColorSpaceDielectricSpec c0       1
//   _LightColor0                   c1       1
//   _Color                         c2       1
//   _Metallic                      c3       1
//   _Glossiness                    c4       1
//   unity_NHxRoughness             s0       1
//   _MainTex                       s1       1
//   _LightTexture0                 s2       1
//

    ps_2_0
    def c5, 1, 16, 0, 0
    dcl t0.xy
    dcl_pp t1.xyz
    dcl_pp t2
    dcl_pp t3
    dcl_pp t4
    dcl t5.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    nrm_pp r0.xyz, t4
    dp3_pp r0.w, -t1, r0
    add_pp r0.w, r0.w, r0.w
    mad_pp r1.xyz, r0, -r0.w, -t1
    mov_pp r2.x, t2.w
    mov_pp r2.y, t3.w
    mov_pp r2.z, t4.w
    dp3_pp r0.w, r1, r2
    dp3_sat_pp r0.x, r0, r2
    mul_pp r0.y, r0.w, r0.w
    mul_pp r1.x, r0.y, r0.y
    mov r2.x, c5.x
    add_pp r1.y, r2.x, -c4.x
    texld r1, r1, s0
    texld r2, t0, s1
    texld_pp r3, t5, s2
    mul_pp r2.w, r1.x, c5.y
    mov r1, c0
    mad_pp r0.yzw, c2.wzyx, r2.wzyx, -r1.wzyx
    mul_pp r2.xyz, r2, c2
    mad_pp r0.yzw, c3.x, r0, r1.wzyx
    mul_pp r0.yzw, r0, r2.w
    mad_pp r2.w, c3.x, -r1.w, r1.w
    mad_pp r0.yzw, r2.wzyx, r2.w, r0
    mul_pp r1.xyz, r3.w, c1
    mul_pp r1.xyz, r0.x, r1
    mul_pp r0.xyz, r0.wzyx, r1
    mov_pp r0.w, c5.x
    mov_pp oC0, r0

// approximately 31 instruction slots used (3 texture, 28 arithmetic)
"
}
SubProgram "d3d11 " {
// Stats: 21 math, 3 textures
Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_OFF" }
SetTexture 0 [_MainTex] 2D 1
SetTexture 1 [_LightTexture0] 2D 2
SetTexture 2 [unity_NHxRoughness] 2D 0
ConstBuffer "$Globals" 304
Vector 32 [unity_ColorSpaceDielectricSpec]
Vector 96 [_LightColor0]
Vector 128 [_Color]
Float 200 [_Metallic]
Float 204 [_Glossiness]
BindCB  "$Globals" 0
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xy          6     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer cb0[13], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xy
      dcl_output o0.xyzw
      dcl_temps 3
   0: dp3 r0.x, v5.xyzx, v5.xyzx
   1: rsq r0.x, r0.x
   2: mul r0.xyz, r0.xxxx, v5.xyzx
   3: dp3 r0.w, -v2.xyzx, r0.xyzx
   4: add r0.w, r0.w, r0.w
   5: mad r1.xyz, r0.xyzx, -r0.wwww, -v2.xyzx
   6: mov r2.x, v3.w
   7: mov r2.y, v4.w
   8: mov r2.z, v5.w
   9: dp3 r0.w, r1.xyzx, r2.xyzx
  10: dp3_sat r0.x, r0.xyzx, r2.xyzx
  11: mul r0.y, r0.w, r0.w
  12: mul r1.x, r0.y, r0.y
  13: add r1.y, -cb0[12].w, l(1.000000)
  14: sample r1.xyzw, r1.xyxx, t2.xyzw, s0
  15: mul r0.y, r1.x, l(16.000000)
  16: sample r1.xyzw, v1.xyxx, t0.xyzw, s1
  17: mad r2.xyz, cb0[8].xyzx, r1.xyzx, -cb0[2].xyzx
  18: mul r1.xyz, r1.xyzx, cb0[8].xyzx
  19: mad r2.xyz, cb0[12].zzzz, r2.xyzx, cb0[2].xyzx
  20: mul r0.yzw, r0.yyyy, r2.xxyz
  21: mad r1.w, -cb0[12].z, cb0[2].w, cb0[2].w
  22: mad r0.yzw, r1.xxyz, r1.wwww, r0.yyzw
  23: sample r1.xyzw, v6.xyxx, t1.xyzw, s2
  24: mul r1.xyz, r1.wwww, cb0[6].xyzx
  25: mul r1.xyz, r0.xxxx, r1.xyzx
  26: mul o0.xyz, r0.yzwy, r1.xyzx
  27: mov o0.w, l(1.000000)
  28: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "d3d11_9x " {
// Stats: 21 math, 3 textures
Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_OFF" }
SetTexture 0 [_MainTex] 2D 1
SetTexture 1 [_LightTexture0] 2D 2
SetTexture 2 [unity_NHxRoughness] 2D 0
ConstBuffer "$Globals" 304
Vector 32 [unity_ColorSpaceDielectricSpec]
Vector 96 [_LightColor0]
Vector 128 [_Color]
Float 200 [_Metallic]
Float 204 [_Glossiness]
BindCB  "$Globals" 0
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xy          6     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c0         cb0             2         1  ( FLT, FLT, FLT, FLT)
// c1         cb0             6         1  ( FLT, FLT, FLT, FLT)
// c2         cb0             8         1  ( FLT, FLT, FLT, FLT)
// c3         cb0            12         1  ( FLT, FLT, FLT, FLT)
//
//
// Sampler/Resource to DX9 shader sampler mappings:
//
// Target Sampler Source Sampler  Source Resource
// -------------- --------------- ----------------
// s0             s0              t2               
// s1             s1              t0               
// s2             s2              t1               
//
//
// Level9 shader bytecode:
//
    ps_2_0
          def c4, 1, 16, 0, 0
          dcl t0
          dcl_pp t1.xyz
          dcl_pp t2
          dcl_pp t3
          dcl_pp t4
          dcl t5.xy
          dcl_2d s0
          dcl_2d s1
          dcl_2d s2
   0:     nrm_pp r0.xyz, t4
   3:     dp3_pp r0.w, -t1, r0
   4:     add_pp r0.w, r0.w, r0.w
   5:     mad_pp r1.xyz, r0, -r0.w, -t1
   6:     mov_pp r2.x, t2.w
   7:     mov_pp r2.y, t3.w
   8:     mov_pp r2.z, t4.w
   9:     dp3_pp r0.w, r1, r2
  10:     dp3_sat_pp r0.x, r0, r2
  11:     mul_pp r0.y, r0.w, r0.w
  12:     mul_pp r1.x, r0.y, r0.y
  13:     mov r0.zw, c3
  14:     add_pp r1.y, -r0.w, c4.x
  15:     texld r1, r1, s0
  15:     texld r2, t0, s1
  15:     texld_pp r3, t5, s2
  15:     mul_pp r2.w, r1.x, c4.y
  16:     mov r1.xyz, c0
  17:     mad_pp r1.xyz, c2, r2, -r1
  18:     mul_pp r2.xyz, r2, c2
  19:     mad_pp r1.xyz, r0.z, r1, c0
  20:     mul_pp r1.xyz, r1, r2.w
  21:     mad_pp r1.w, r0.z, -c0.w, c0.w
  22:     mad_pp r0.yzw, r2.wzyx, r1.w, r1.wzyx
  23:     mul_pp r1.xyz, r3.w, c1
  24:     mul_pp r1.xyz, r0.x, r1
  25:     mul_pp r0.xyz, r0.wzyx, r1
  26:     mov_pp r0.w, c4.x
  27:     mov_pp oC0, r0

// approximately 31 instruction slots used (3 texture, 28 arithmetic)
      ps_4_0
      dcl_constantbuffer cb0[13], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xy
      dcl_output o0.xyzw
      dcl_temps 3
   0: dp3 r0.x, v5.xyzx, v5.xyzx
   1: rsq r0.x, r0.x
   2: mul r0.xyz, r0.xxxx, v5.xyzx
   3: dp3 r0.w, -v2.xyzx, r0.xyzx
   4: add r0.w, r0.w, r0.w
   5: mad r1.xyz, r0.xyzx, -r0.wwww, -v2.xyzx
   6: mov r2.x, v3.w
   7: mov r2.y, v4.w
   8: mov r2.z, v5.w
   9: dp3 r0.w, r1.xyzx, r2.xyzx
  10: dp3_sat r0.x, r0.xyzx, r2.xyzx
  11: mul r0.y, r0.w, r0.w
  12: mul r1.x, r0.y, r0.y
  13: add r1.y, -cb0[12].w, l(1.000000)
  14: sample r1.xyzw, r1.xyxx, t2.xyzw, s0
  15: mul r0.y, r1.x, l(16.000000)
  16: sample r1.xyzw, v1.xyxx, t0.xyzw, s1
  17: mad r2.xyz, cb0[8].xyzx, r1.xyzx, -cb0[2].xyzx
  18: mul r1.xyz, r1.xyzx, cb0[8].xyzx
  19: mad r2.xyz, cb0[12].zzzz, r2.xyzx, cb0[2].xyzx
  20: mul r0.yzw, r0.yyyy, r2.xxyz
  21: mad r1.w, -cb0[12].z, cb0[2].w, cb0[2].w
  22: mad r0.yzw, r1.xxyz, r1.wwww, r0.yyzw
  23: sample r1.xyzw, v6.xyxx, t1.xyzw, s2
  24: mul r1.xyz, r1.wwww, cb0[6].xyzx
  25: mul r1.xyz, r0.xxxx, r1.xyzx
  26: mul o0.xyz, r0.yzwy, r1.xyzx
  27: mov o0.w, l(1.000000)
  28: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_NATIVE" }
"// shader disassembly not supported on opengl"
}
SubProgram "d3d9 " {
// Stats: 37 math, 5 textures
Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_NATIVE" }
Vector 3 [_Color]
Float 5 [_Glossiness]
Vector 2 [_LightColor0]
Vector 0 [_LightShadowData]
Float 4 [_Metallic]
Vector 1 [unity_ColorSpaceDielectricSpec]
SetTexture 0 [unity_NHxRoughness] 2D 0
SetTexture 1 [_MainTex] 2D 1
SetTexture 2 [_ShadowMapTexture] 2D 2
SetTexture 3 [_LightTexture0] 2D 3
SetTexture 4 [_LightTextureB0] 2D 4
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   float4 _LightShadowData;
//   sampler2D _LightTexture0;
//   sampler2D _LightTextureB0;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D _ShadowMapTexture;
//   float4 unity_ColorSpaceDielectricSpec;
//   sampler2D unity_NHxRoughness;
//
//
// Registers:
//
//   Name                           Reg   Size
//   ------------------------------ ----- ----
//   _LightShadowData               c0       1
//   unity_ColorSpaceDielectricSpec c1       1
//   _LightColor0                   c2       1
//   _Color                         c3       1
//   _Metallic                      c4       1
//   _Glossiness                    c5       1
//   unity_NHxRoughness             s0       1
//   _MainTex                       s1       1
//   _ShadowMapTexture              s2       1
//   _LightTexture0                 s3       1
//   _LightTextureB0                s4       1
//

    ps_2_0
    def c6, 0.5, 0, 1, 16
    dcl t0.xy
    dcl_pp t1.xyz
    dcl_pp t2
    dcl_pp t3
    dcl_pp t4
    dcl_pp t5
    dcl_pp t6
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    nrm_pp r0.xyz, t4
    dp3_pp r0.w, -t1, r0
    add_pp r0.w, r0.w, r0.w
    mad_pp r1.xyz, r0, -r0.w, -t1
    mov_pp r2.x, t2.w
    mov_pp r2.y, t3.w
    mov_pp r2.z, t4.w
    dp3_pp r0.w, r1, r2
    dp3_sat_pp r0.x, r0, r2
    mul_pp r0.y, r0.w, r0.w
    mul_pp r1.x, r0.y, r0.y
    mov r0.z, c6.z
    add_pp r1.y, r0.z, -c5.x
    rcp r0.y, t5.w
    mad_pp r2.xy, t5, r0.y, c6.x
    dp3_pp r3.w, t5, t5
    mov_pp r3.xy, r3.w
    texld r1, r1, s0
    texld r4, t0, s1
    texld_pp r2, r2, s3
    texld_pp r3, r3, s4
    texldp_pp r5, t6, s2
    mul_pp r4.w, r1.x, c6.w
    mov r1, c1
    mad_pp r2.xyz, c3, r4, -r1
    mul_pp r3.yzw, r4.wzyx, c3.wzyx
    mad_pp r1.xyz, c4.x, r2, r1
    mul_pp r1.xyz, r1, r4.w
    mad_pp r1.w, c4.x, -r1.w, r1.w
    mad_pp r1.xyz, r3.wzyx, r1.w, r1
    mul r1.w, r2.w, r3.x
    cmp r1.w, -t5.z, c6.y, r1.w
    lrp_pp r2.x, r5.x, r0.z, c0.x
    mul_pp r1.w, r1.w, r2.x
    mul_pp r0.yzw, r1.w, c2.wzyx
    mul_pp r0.xyz, r0.x, r0.wzyx
    mul_pp r0.xyz, r0, r1
    mov r0.w, c6.z
    mov_pp oC0, r0

// approximately 41 instruction slots used (5 texture, 36 arithmetic)
"
}
SubProgram "d3d11 " {
// Stats: 32 math, 4 textures
Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_NATIVE" }
SetTexture 0 [_MainTex] 2D 1
SetTexture 1 [_LightTexture0] 2D 3
SetTexture 2 [_LightTextureB0] 2D 4
SetTexture 3 [unity_NHxRoughness] 2D 0
SetTexture 4 [_ShadowMapTexture] 2D 2
ConstBuffer "$Globals" 304
Vector 32 [unity_ColorSpaceDielectricSpec]
Vector 96 [_LightColor0]
Vector 128 [_Color]
Float 200 [_Metallic]
Float 204 [_Glossiness]
ConstBuffer "UnityShadows" 416
Vector 384 [_LightShadowData]
BindCB  "$Globals" 0
BindCB  "UnityShadows" 1
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer cb0[13], immediateIndexed
      dcl_constantbuffer cb1[25], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_comparison
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyzw
      dcl_input_ps linear v7.xyzw
      dcl_output o0.xyzw
      dcl_temps 3
   0: dp3 r0.x, v5.xyzx, v5.xyzx
   1: rsq r0.x, r0.x
   2: mul r0.xyz, r0.xxxx, v5.xyzx
   3: dp3 r0.w, -v2.xyzx, r0.xyzx
   4: add r0.w, r0.w, r0.w
   5: mad r1.xyz, r0.xyzx, -r0.wwww, -v2.xyzx
   6: mov r2.x, v3.w
   7: mov r2.y, v4.w
   8: mov r2.z, v5.w
   9: dp3 r0.w, r1.xyzx, r2.xyzx
  10: dp3_sat r0.x, r0.xyzx, r2.xyzx
  11: mul r0.y, r0.w, r0.w
  12: mul r1.x, r0.y, r0.y
  13: add r1.y, -cb0[12].w, l(1.000000)
  14: sample r1.xyzw, r1.xyxx, t3.xyzw, s0
  15: mul r0.y, r1.x, l(16.000000)
  16: sample r1.xyzw, v1.xyxx, t0.xyzw, s1
  17: mad r2.xyz, cb0[8].xyzx, r1.xyzx, -cb0[2].xyzx
  18: mul r1.xyz, r1.xyzx, cb0[8].xyzx
  19: mad r2.xyz, cb0[12].zzzz, r2.xyzx, cb0[2].xyzx
  20: mul r0.yzw, r0.yyyy, r2.xxyz
  21: mad r1.w, -cb0[12].z, cb0[2].w, cb0[2].w
  22: mad r0.yzw, r1.xxyz, r1.wwww, r0.yyzw
  23: div r1.xy, v6.xyxx, v6.wwww
  24: add r1.xy, r1.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  25: sample r1.xyzw, r1.xyxx, t1.xyzw, s3
  26: lt r1.x, l(0.000000), v6.z
  27: and r1.x, r1.x, l(0x3f800000)
  28: mul r1.x, r1.w, r1.x
  29: dp3 r1.y, v6.xyzx, v6.xyzx
  30: sample r2.xyzw, r1.yyyy, t2.xyzw, s4
  31: mul r1.x, r1.x, r2.x
  32: div r1.yzw, v7.xxyz, v7.wwww
  33: sample_c_lz r1.y, r1.yzyy, t4.xxxx, s2, r1.w
  34: add r1.z, -cb1[24].x, l(1.000000)
  35: mad r1.y, r1.y, r1.z, cb1[24].x
  36: mul r1.x, r1.y, r1.x
  37: mul r1.xyz, r1.xxxx, cb0[6].xyzx
  38: mul r1.xyz, r0.xxxx, r1.xyzx
  39: mul o0.xyz, r0.yzwy, r1.xyzx
  40: mov o0.w, l(1.000000)
  41: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "d3d11_9x " {
// Stats: 32 math, 4 textures
Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_NATIVE" }
SetTexture 0 [_MainTex] 2D 1
SetTexture 1 [_LightTexture0] 2D 2
SetTexture 2 [_LightTextureB0] 2D 3
SetTexture 3 [unity_NHxRoughness] 2D 0
SetTexture 15 [_ShadowMapTexture] 2D 15
ConstBuffer "$Globals" 304
Vector 32 [unity_ColorSpaceDielectricSpec]
Vector 96 [_LightColor0]
Vector 128 [_Color]
Float 200 [_Metallic]
Float 204 [_Glossiness]
ConstBuffer "UnityShadows" 416
Vector 384 [_LightShadowData]
BindCB  "$Globals" 0
BindCB  "UnityShadows" 1
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Note: shader requires additional functionality:
//       Comparison filtering for feature level 9
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c0         cb0             2         1  ( FLT, FLT, FLT, FLT)
// c1         cb0             6         1  ( FLT, FLT, FLT, FLT)
// c2         cb0             8         1  ( FLT, FLT, FLT, FLT)
// c3         cb0            12         1  ( FLT, FLT, FLT, FLT)
// c4         cb1            24         1  ( FLT, FLT, FLT, FLT)
//
//
// Sampler/Resource to DX9 shader sampler mappings:
//
// Target Sampler Source Sampler  Source Resource
// -------------- --------------- ----------------
// s0             s15             t15              
// s1             s0              t3               
// s2             s1              t0               
// s3             s2              t1               
// s4             s3              t2               
//
//
// Level9 shader bytecode:
//
    ps_2_0
          def c5, 0.5, 1, 16, 0
          dcl t0
          dcl_pp t1.xyz
          dcl_pp t2
          dcl_pp t3
          dcl_pp t4
          dcl_pp t5
          dcl_pp t6
          dcl_2d s0
          dcl_2d s1
          dcl_2d s2
          dcl_2d s3
          dcl_2d s4
   0:     nrm_pp r0.xyz, t4
   3:     dp3_pp r0.w, -t1, r0
   4:     add_pp r0.w, r0.w, r0.w
   5:     mad_pp r1.xyz, r0, -r0.w, -t1
   6:     mov_pp r2.x, t2.w
   7:     mov_pp r2.y, t3.w
   8:     mov_pp r2.z, t4.w
   9:     dp3_pp r0.w, r1, r2
  10:     dp3_sat_pp r0.x, r0, r2
  11:     mul_pp r0.y, r0.w, r0.w
  12:     mul_pp r1.x, r0.y, r0.y
  13:     mov r0.y, c5.y
  14:     add_pp r1.y, r0.y, -c3.w
  15:     rcp r0.z, t5.w
  16:     mad_pp r2.xy, t5, r0.z, c5.x
  17:     dp3_pp r3.w, t5, t5
  18:     mov_pp r3.xy, r3.w
  19:     rcp r0.z, t6.w
  20:     mul r4.xyz, r0.z, t6
  21:     texld r1, r1, s1
  21:     texld r5, t0, s2
  21:     texld_pp r2, r2, s3
  21:     texld_pp r3, r3, s4
  21:     texld_pp r4, r4, s0
  21:     mul_pp r5.w, r1.x, c5.z
  22:     mov r1, c0
  23:     mad_pp r2.xyz, c2, r5, -r1
  24:     mul_pp r3.yzw, r5.wzyx, c2.wzyx
  25:     mad_pp r1.xyz, c3.z, r2, r1
  26:     mul_pp r1.xyz, r1, r5.w
  27:     mad_pp r1.w, c3.z, -r1.w, r1.w
  28:     mad_pp r1.xyz, r3.wzyx, r1.w, r1
  29:     mul r1.w, r2.w, r3.x
  30:     lrp_pp r2.x, r4.x, r0.y, c4.x
  31:     mul r1.w, r1.w, r2.x
  32:     mul_pp r0.yzw, r1.w, c1.wzyx
  33:     mul_pp r0.xyz, r0.x, r0.wzyx
  34:     cmp_pp r0.xyz, -t5.z, c5.w, r0
  35:     mul_pp r0.xyz, r0, r1
  36:     mov r0.w, c5.y
  37:     mov_pp oC0, r0

// approximately 43 instruction slots used (5 texture, 38 arithmetic)
      ps_4_0
      dcl_constantbuffer cb0[13], immediateIndexed
      dcl_constantbuffer cb1[25], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s15, mode_comparison
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t15
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyzw
      dcl_input_ps linear v7.xyzw
      dcl_output o0.xyzw
      dcl_temps 3
   0: dp3 r0.x, v5.xyzx, v5.xyzx
   1: rsq r0.x, r0.x
   2: mul r0.xyz, r0.xxxx, v5.xyzx
   3: dp3 r0.w, -v2.xyzx, r0.xyzx
   4: add r0.w, r0.w, r0.w
   5: mad r1.xyz, r0.xyzx, -r0.wwww, -v2.xyzx
   6: mov r2.x, v3.w
   7: mov r2.y, v4.w
   8: mov r2.z, v5.w
   9: dp3 r0.w, r1.xyzx, r2.xyzx
  10: dp3_sat r0.x, r0.xyzx, r2.xyzx
  11: mul r0.y, r0.w, r0.w
  12: mul r1.x, r0.y, r0.y
  13: add r1.y, -cb0[12].w, l(1.000000)
  14: sample r1.xyzw, r1.xyxx, t3.xyzw, s0
  15: mul r0.y, r1.x, l(16.000000)
  16: sample r1.xyzw, v1.xyxx, t0.xyzw, s1
  17: mad r2.xyz, cb0[8].xyzx, r1.xyzx, -cb0[2].xyzx
  18: mul r1.xyz, r1.xyzx, cb0[8].xyzx
  19: mad r2.xyz, cb0[12].zzzz, r2.xyzx, cb0[2].xyzx
  20: mul r0.yzw, r0.yyyy, r2.xxyz
  21: mad r1.w, -cb0[12].z, cb0[2].w, cb0[2].w
  22: mad r0.yzw, r1.xxyz, r1.wwww, r0.yyzw
  23: div r1.xy, v6.xyxx, v6.wwww
  24: add r1.xy, r1.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  25: sample r1.xyzw, r1.xyxx, t1.xyzw, s2
  26: lt r1.x, l(0.000000), v6.z
  27: and r1.x, r1.x, l(0x3f800000)
  28: mul r1.x, r1.w, r1.x
  29: dp3 r1.y, v6.xyzx, v6.xyzx
  30: sample r2.xyzw, r1.yyyy, t2.xyzw, s3
  31: mul r1.x, r1.x, r2.x
  32: div r1.yzw, v7.xxyz, v7.wwww
  33: sample_c_lz r1.y, r1.yzyy, t15.xxxx, s15, r1.w
  34: add r1.z, -cb1[24].x, l(1.000000)
  35: mad r1.y, r1.y, r1.z, cb1[24].x
  36: mul r1.x, r1.y, r1.x
  37: mul r1.xyz, r1.xxxx, cb0[6].xyzx
  38: mul r1.xyz, r0.xxxx, r1.xyzx
  39: mul o0.xyz, r0.yzwy, r1.xyzx
  40: mov o0.w, l(1.000000)
  41: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
"// shader disassembly not supported on opengl"
}
SubProgram "d3d9 " {
// Stats: 28 math, 3 textures
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
Vector 2 [_Color]
Float 4 [_Glossiness]
Vector 1 [_LightColor0]
Float 3 [_Metallic]
Vector 0 [unity_ColorSpaceDielectricSpec]
SetTexture 0 [unity_NHxRoughness] 2D 0
SetTexture 1 [_MainTex] 2D 1
SetTexture 2 [_ShadowMapTexture] 2D 2
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D _ShadowMapTexture;
//   float4 unity_ColorSpaceDielectricSpec;
//   sampler2D unity_NHxRoughness;
//
//
// Registers:
//
//   Name                           Reg   Size
//   ------------------------------ ----- ----
//   unity_ColorSpaceDielectricSpec c0       1
//   _LightColor0                   c1       1
//   _Color                         c2       1
//   _Metallic                      c3       1
//   _Glossiness                    c4       1
//   unity_NHxRoughness             s0       1
//   _MainTex                       s1       1
//   _ShadowMapTexture              s2       1
//

    ps_2_0
    def c5, 1, 16, 0, 0
    dcl t0.xy
    dcl_pp t1.xyz
    dcl_pp t2
    dcl_pp t3
    dcl_pp t4
    dcl_pp t5
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    nrm_pp r0.xyz, t4
    dp3_pp r0.w, -t1, r0
    add_pp r0.w, r0.w, r0.w
    mad_pp r1.xyz, r0, -r0.w, -t1
    mov_pp r2.x, t2.w
    mov_pp r2.y, t3.w
    mov_pp r2.z, t4.w
    dp3_pp r0.w, r1, r2
    dp3_sat_pp r0.x, r0, r2
    mul_pp r0.y, r0.w, r0.w
    mul_pp r1.x, r0.y, r0.y
    mov r2.x, c5.x
    add_pp r1.y, r2.x, -c4.x
    texld r1, r1, s0
    texld r2, t0, s1
    texldp_pp r3, t5, s2
    mul_pp r2.w, r1.x, c5.y
    mov r1, c0
    mad_pp r0.yzw, c2.wzyx, r2.wzyx, -r1.wzyx
    mul_pp r2.xyz, r2, c2
    mad_pp r0.yzw, c3.x, r0, r1.wzyx
    mul_pp r0.yzw, r0, r2.w
    mad_pp r2.w, c3.x, -r1.w, r1.w
    mad_pp r0.yzw, r2.wzyx, r2.w, r0
    mul_pp r1.xyz, r3.x, c1
    mul_pp r1.xyz, r0.x, r1
    mul_pp r0.xyz, r0.wzyx, r1
    mov_pp r0.w, c5.x
    mov_pp oC0, r0

// approximately 31 instruction slots used (3 texture, 28 arithmetic)
"
}
SubProgram "d3d11 " {
// Stats: 22 math, 3 textures
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
SetTexture 0 [_MainTex] 2D 1
SetTexture 1 [_ShadowMapTexture] 2D 2
SetTexture 2 [unity_NHxRoughness] 2D 0
ConstBuffer "$Globals" 240
Vector 32 [unity_ColorSpaceDielectricSpec]
Vector 96 [_LightColor0]
Vector 128 [_Color]
Float 200 [_Metallic]
Float 204 [_Glossiness]
BindCB  "$Globals" 0
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer cb0[13], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyw
      dcl_output o0.xyzw
      dcl_temps 3
   0: dp3 r0.x, v5.xyzx, v5.xyzx
   1: rsq r0.x, r0.x
   2: mul r0.xyz, r0.xxxx, v5.xyzx
   3: dp3 r0.w, -v2.xyzx, r0.xyzx
   4: add r0.w, r0.w, r0.w
   5: mad r1.xyz, r0.xyzx, -r0.wwww, -v2.xyzx
   6: mov r2.x, v3.w
   7: mov r2.y, v4.w
   8: mov r2.z, v5.w
   9: dp3 r0.w, r1.xyzx, r2.xyzx
  10: dp3_sat r0.x, r0.xyzx, r2.xyzx
  11: mul r0.y, r0.w, r0.w
  12: mul r1.x, r0.y, r0.y
  13: add r1.y, -cb0[12].w, l(1.000000)
  14: sample r1.xyzw, r1.xyxx, t2.xyzw, s0
  15: mul r0.y, r1.x, l(16.000000)
  16: sample r1.xyzw, v1.xyxx, t0.xyzw, s1
  17: mad r2.xyz, cb0[8].xyzx, r1.xyzx, -cb0[2].xyzx
  18: mul r1.xyz, r1.xyzx, cb0[8].xyzx
  19: mad r2.xyz, cb0[12].zzzz, r2.xyzx, cb0[2].xyzx
  20: mul r0.yzw, r0.yyyy, r2.xxyz
  21: mad r1.w, -cb0[12].z, cb0[2].w, cb0[2].w
  22: mad r0.yzw, r1.xxyz, r1.wwww, r0.yyzw
  23: div r1.xy, v6.xyxx, v6.wwww
  24: sample r1.xyzw, r1.xyxx, t1.xyzw, s2
  25: mul r1.xyz, r1.xxxx, cb0[6].xyzx
  26: mul r1.xyz, r0.xxxx, r1.xyzx
  27: mul o0.xyz, r0.yzwy, r1.xyzx
  28: mov o0.w, l(1.000000)
  29: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "d3d11_9x " {
// Stats: 22 math, 3 textures
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
SetTexture 0 [_MainTex] 2D 1
SetTexture 1 [_ShadowMapTexture] 2D 2
SetTexture 2 [unity_NHxRoughness] 2D 0
ConstBuffer "$Globals" 240
Vector 32 [unity_ColorSpaceDielectricSpec]
Vector 96 [_LightColor0]
Vector 128 [_Color]
Float 200 [_Metallic]
Float 204 [_Glossiness]
BindCB  "$Globals" 0
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c0         cb0             2         1  ( FLT, FLT, FLT, FLT)
// c1         cb0             6         1  ( FLT, FLT, FLT, FLT)
// c2         cb0             8         1  ( FLT, FLT, FLT, FLT)
// c3         cb0            12         1  ( FLT, FLT, FLT, FLT)
//
//
// Sampler/Resource to DX9 shader sampler mappings:
//
// Target Sampler Source Sampler  Source Resource
// -------------- --------------- ----------------
// s0             s0              t2               
// s1             s1              t0               
// s2             s2              t1               
//
//
// Level9 shader bytecode:
//
    ps_2_0
          def c4, 1, 16, 0, 0
          dcl t0
          dcl_pp t1.xyz
          dcl_pp t2
          dcl_pp t3
          dcl_pp t4
          dcl_pp t5
          dcl_2d s0
          dcl_2d s1
          dcl_2d s2
   0:     nrm_pp r0.xyz, t4
   3:     dp3_pp r0.w, -t1, r0
   4:     add_pp r0.w, r0.w, r0.w
   5:     mad_pp r1.xyz, r0, -r0.w, -t1
   6:     mov_pp r2.x, t2.w
   7:     mov_pp r2.y, t3.w
   8:     mov_pp r2.z, t4.w
   9:     dp3_pp r0.w, r1, r2
  10:     dp3_sat_pp r0.x, r0, r2
  11:     mul_pp r0.y, r0.w, r0.w
  12:     mul_pp r1.x, r0.y, r0.y
  13:     mov r0.zw, c3
  14:     add_pp r1.y, -r0.w, c4.x
  15:     rcp r0.y, t5.w
  16:     mul_pp r2.xy, r0.y, t5
  17:     texld r1, r1, s0
  17:     texld r3, t0, s1
  17:     texld_pp r2, r2, s2
  17:     mul_pp r3.w, r1.x, c4.y
  18:     mov r1.xyz, c0
  19:     mad_pp r1.xyz, c2, r3, -r1
  20:     mul_pp r2.yzw, r3.wzyx, c2.wzyx
  21:     mad_pp r1.xyz, r0.z, r1, c0
  22:     mul_pp r1.xyz, r1, r3.w
  23:     mad_pp r1.w, r0.z, -c0.w, c0.w
  24:     mad_pp r0.yzw, r2, r1.w, r1.wzyx
  25:     mul_pp r1.xyz, r2.x, c1
  26:     mul_pp r1.xyz, r0.x, r1
  27:     mul_pp r0.xyz, r0.wzyx, r1
  28:     mov_pp r0.w, c4.x
  29:     mov_pp oC0, r0

// approximately 33 instruction slots used (3 texture, 30 arithmetic)
      ps_4_0
      dcl_constantbuffer cb0[13], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyw
      dcl_output o0.xyzw
      dcl_temps 3
   0: dp3 r0.x, v5.xyzx, v5.xyzx
   1: rsq r0.x, r0.x
   2: mul r0.xyz, r0.xxxx, v5.xyzx
   3: dp3 r0.w, -v2.xyzx, r0.xyzx
   4: add r0.w, r0.w, r0.w
   5: mad r1.xyz, r0.xyzx, -r0.wwww, -v2.xyzx
   6: mov r2.x, v3.w
   7: mov r2.y, v4.w
   8: mov r2.z, v5.w
   9: dp3 r0.w, r1.xyzx, r2.xyzx
  10: dp3_sat r0.x, r0.xyzx, r2.xyzx
  11: mul r0.y, r0.w, r0.w
  12: mul r1.x, r0.y, r0.y
  13: add r1.y, -cb0[12].w, l(1.000000)
  14: sample r1.xyzw, r1.xyxx, t2.xyzw, s0
  15: mul r0.y, r1.x, l(16.000000)
  16: sample r1.xyzw, v1.xyxx, t0.xyzw, s1
  17: mad r2.xyz, cb0[8].xyzx, r1.xyzx, -cb0[2].xyzx
  18: mul r1.xyz, r1.xyzx, cb0[8].xyzx
  19: mad r2.xyz, cb0[12].zzzz, r2.xyzx, cb0[2].xyzx
  20: mul r0.yzw, r0.yyyy, r2.xxyz
  21: mad r1.w, -cb0[12].z, cb0[2].w, cb0[2].w
  22: mad r0.yzw, r1.xxyz, r1.wwww, r0.yyzw
  23: div r1.xy, v6.xyxx, v6.wwww
  24: sample r1.xyzw, r1.xyxx, t1.xyzw, s2
  25: mul r1.xyz, r1.xxxx, cb0[6].xyzx
  26: mul r1.xyz, r0.xxxx, r1.xyzx
  27: mul o0.xyz, r0.yzwy, r1.xyzx
  28: mov o0.w, l(1.000000)
  29: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" }
"// shader disassembly not supported on opengl"
}
SubProgram "d3d9 " {
// Stats: 29 math, 4 textures
Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" }
Vector 2 [_Color]
Float 4 [_Glossiness]
Vector 1 [_LightColor0]
Float 3 [_Metallic]
Vector 0 [unity_ColorSpaceDielectricSpec]
SetTexture 0 [unity_NHxRoughness] 2D 0
SetTexture 1 [_MainTex] 2D 1
SetTexture 2 [_ShadowMapTexture] 2D 2
SetTexture 3 [_LightTexture0] 2D 3
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   sampler2D _LightTexture0;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D _ShadowMapTexture;
//   float4 unity_ColorSpaceDielectricSpec;
//   sampler2D unity_NHxRoughness;
//
//
// Registers:
//
//   Name                           Reg   Size
//   ------------------------------ ----- ----
//   unity_ColorSpaceDielectricSpec c0       1
//   _LightColor0                   c1       1
//   _Color                         c2       1
//   _Metallic                      c3       1
//   _Glossiness                    c4       1
//   unity_NHxRoughness             s0       1
//   _MainTex                       s1       1
//   _ShadowMapTexture              s2       1
//   _LightTexture0                 s3       1
//

    ps_2_0
    def c5, 1, 16, 0, 0
    dcl t0.xy
    dcl_pp t1.xyz
    dcl_pp t2
    dcl_pp t3
    dcl_pp t4
    dcl t5.xy
    dcl_pp t6
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    nrm_pp r0.xyz, t4
    dp3_pp r0.w, -t1, r0
    add_pp r0.w, r0.w, r0.w
    mad_pp r1.xyz, r0, -r0.w, -t1
    mov_pp r2.x, t2.w
    mov_pp r2.y, t3.w
    mov_pp r2.z, t4.w
    dp3_pp r0.w, r1, r2
    dp3_sat_pp r0.x, r0, r2
    mul_pp r0.y, r0.w, r0.w
    mul_pp r1.x, r0.y, r0.y
    mov r2.x, c5.x
    add_pp r1.y, r2.x, -c4.x
    texld r1, r1, s0
    texld r2, t0, s1
    texld r3, t5, s3
    texldp_pp r4, t6, s2
    mul_pp r2.w, r1.x, c5.y
    mov r1, c0
    mad_pp r0.yzw, c2.wzyx, r2.wzyx, -r1.wzyx
    mul_pp r2.xyz, r2, c2
    mad_pp r0.yzw, c3.x, r0, r1.wzyx
    mul_pp r0.yzw, r0, r2.w
    mad_pp r2.w, c3.x, -r1.w, r1.w
    mad_pp r0.yzw, r2.wzyx, r2.w, r0
    mul_pp r1.x, r3.w, r4.x
    mul_pp r1.xyz, r1.x, c1
    mul_pp r1.xyz, r0.x, r1
    mul_pp r0.xyz, r0.wzyx, r1
    mov_pp r0.w, c5.x
    mov_pp oC0, r0

// approximately 33 instruction slots used (4 texture, 29 arithmetic)
"
}
SubProgram "d3d11 " {
// Stats: 23 math, 4 textures
Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" }
SetTexture 0 [_MainTex] 2D 1
SetTexture 1 [_LightTexture0] 2D 3
SetTexture 2 [_ShadowMapTexture] 2D 2
SetTexture 3 [unity_NHxRoughness] 2D 0
ConstBuffer "$Globals" 304
Vector 32 [unity_ColorSpaceDielectricSpec]
Vector 96 [_LightColor0]
Vector 128 [_Color]
Float 200 [_Metallic]
Float 204 [_Glossiness]
BindCB  "$Globals" 0
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer cb0[13], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xy
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 3
   0: dp3 r0.x, v5.xyzx, v5.xyzx
   1: rsq r0.x, r0.x
   2: mul r0.xyz, r0.xxxx, v5.xyzx
   3: dp3 r0.w, -v2.xyzx, r0.xyzx
   4: add r0.w, r0.w, r0.w
   5: mad r1.xyz, r0.xyzx, -r0.wwww, -v2.xyzx
   6: mov r2.x, v3.w
   7: mov r2.y, v4.w
   8: mov r2.z, v5.w
   9: dp3 r0.w, r1.xyzx, r2.xyzx
  10: dp3_sat r0.x, r0.xyzx, r2.xyzx
  11: mul r0.y, r0.w, r0.w
  12: mul r1.x, r0.y, r0.y
  13: add r1.y, -cb0[12].w, l(1.000000)
  14: sample r1.xyzw, r1.xyxx, t3.xyzw, s0
  15: mul r0.y, r1.x, l(16.000000)
  16: sample r1.xyzw, v1.xyxx, t0.xyzw, s1
  17: mad r2.xyz, cb0[8].xyzx, r1.xyzx, -cb0[2].xyzx
  18: mul r1.xyz, r1.xyzx, cb0[8].xyzx
  19: mad r2.xyz, cb0[12].zzzz, r2.xyzx, cb0[2].xyzx
  20: mul r0.yzw, r0.yyyy, r2.xxyz
  21: mad r1.w, -cb0[12].z, cb0[2].w, cb0[2].w
  22: mad r0.yzw, r1.xxyz, r1.wwww, r0.yyzw
  23: div r1.xy, v7.xyxx, v7.wwww
  24: sample r1.xyzw, r1.xyxx, t2.xyzw, s2
  25: sample r2.xyzw, v6.xyxx, t1.xyzw, s3
  26: mul r1.x, r1.x, r2.w
  27: mul r1.xyz, r1.xxxx, cb0[6].xyzx
  28: mul r1.xyz, r0.xxxx, r1.xyzx
  29: mul o0.xyz, r0.yzwy, r1.xyzx
  30: mov o0.w, l(1.000000)
  31: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "d3d11_9x " {
// Stats: 23 math, 4 textures
Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" }
SetTexture 0 [_MainTex] 2D 1
SetTexture 1 [_LightTexture0] 2D 3
SetTexture 2 [_ShadowMapTexture] 2D 2
SetTexture 3 [unity_NHxRoughness] 2D 0
ConstBuffer "$Globals" 304
Vector 32 [unity_ColorSpaceDielectricSpec]
Vector 96 [_LightColor0]
Vector 128 [_Color]
Float 200 [_Metallic]
Float 204 [_Glossiness]
BindCB  "$Globals" 0
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c0         cb0             2         1  ( FLT, FLT, FLT, FLT)
// c1         cb0             6         1  ( FLT, FLT, FLT, FLT)
// c2         cb0             8         1  ( FLT, FLT, FLT, FLT)
// c3         cb0            12         1  ( FLT, FLT, FLT, FLT)
//
//
// Sampler/Resource to DX9 shader sampler mappings:
//
// Target Sampler Source Sampler  Source Resource
// -------------- --------------- ----------------
// s0             s0              t3               
// s1             s1              t0               
// s2             s2              t2               
// s3             s3              t1               
//
//
// Level9 shader bytecode:
//
    ps_2_0
          def c4, 1, 16, 0, 0
          dcl t0
          dcl_pp t1.xyz
          dcl_pp t2
          dcl_pp t3
          dcl_pp t4
          dcl t5.xy
          dcl_pp t6
          dcl_2d s0
          dcl_2d s1
          dcl_2d s2
          dcl_2d s3
   0:     nrm_pp r0.xyz, t4
   3:     dp3_pp r0.w, -t1, r0
   4:     add_pp r0.w, r0.w, r0.w
   5:     mad_pp r1.xyz, r0, -r0.w, -t1
   6:     mov_pp r2.x, t2.w
   7:     mov_pp r2.y, t3.w
   8:     mov_pp r2.z, t4.w
   9:     dp3_pp r0.w, r1, r2
  10:     dp3_sat_pp r0.x, r0, r2
  11:     mul_pp r0.y, r0.w, r0.w
  12:     mul_pp r1.x, r0.y, r0.y
  13:     mov r0.zw, c3
  14:     add_pp r1.y, -r0.w, c4.x
  15:     rcp r0.y, t6.w
  16:     mul_pp r2.xy, r0.y, t6
  17:     texld r1, r1, s0
  17:     texld r3, t0, s1
  17:     texld_pp r2, r2, s2
  17:     texld r4, t5, s3
  17:     mul_pp r3.w, r1.x, c4.y
  18:     mov r1.xyz, c0
  19:     mad_pp r1.xyz, c2, r3, -r1
  20:     mul_pp r2.yzw, r3.wzyx, c2.wzyx
  21:     mad_pp r1.xyz, r0.z, r1, c0
  22:     mul_pp r1.xyz, r1, r3.w
  23:     mad_pp r1.w, r0.z, -c0.w, c0.w
  24:     mad_pp r0.yzw, r2, r1.w, r1.wzyx
  25:     mul_pp r1.x, r2.x, r4.w
  26:     mul_pp r1.xyz, r1.x, c1
  27:     mul_pp r1.xyz, r0.x, r1
  28:     mul_pp r0.xyz, r0.wzyx, r1
  29:     mov_pp r0.w, c4.x
  30:     mov_pp oC0, r0

// approximately 35 instruction slots used (4 texture, 31 arithmetic)
      ps_4_0
      dcl_constantbuffer cb0[13], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xy
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 3
   0: dp3 r0.x, v5.xyzx, v5.xyzx
   1: rsq r0.x, r0.x
   2: mul r0.xyz, r0.xxxx, v5.xyzx
   3: dp3 r0.w, -v2.xyzx, r0.xyzx
   4: add r0.w, r0.w, r0.w
   5: mad r1.xyz, r0.xyzx, -r0.wwww, -v2.xyzx
   6: mov r2.x, v3.w
   7: mov r2.y, v4.w
   8: mov r2.z, v5.w
   9: dp3 r0.w, r1.xyzx, r2.xyzx
  10: dp3_sat r0.x, r0.xyzx, r2.xyzx
  11: mul r0.y, r0.w, r0.w
  12: mul r1.x, r0.y, r0.y
  13: add r1.y, -cb0[12].w, l(1.000000)
  14: sample r1.xyzw, r1.xyxx, t3.xyzw, s0
  15: mul r0.y, r1.x, l(16.000000)
  16: sample r1.xyzw, v1.xyxx, t0.xyzw, s1
  17: mad r2.xyz, cb0[8].xyzx, r1.xyzx, -cb0[2].xyzx
  18: mul r1.xyz, r1.xyzx, cb0[8].xyzx
  19: mad r2.xyz, cb0[12].zzzz, r2.xyzx, cb0[2].xyzx
  20: mul r0.yzw, r0.yyyy, r2.xxyz
  21: mad r1.w, -cb0[12].z, cb0[2].w, cb0[2].w
  22: mad r0.yzw, r1.xxyz, r1.wwww, r0.yyzw
  23: div r1.xy, v7.xyxx, v7.wwww
  24: sample r1.xyzw, r1.xyxx, t2.xyzw, s2
  25: sample r2.xyzw, v6.xyxx, t1.xyzw, s3
  26: mul r1.x, r1.x, r2.w
  27: mul r1.xyz, r1.xxxx, cb0[6].xyzx
  28: mul r1.xyz, r0.xxxx, r1.xyzx
  29: mul o0.xyz, r0.yzwy, r1.xyzx
  30: mov o0.w, l(1.000000)
  31: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
Keywords { "POINT" "SHADOWS_CUBE" }
"// shader disassembly not supported on opengl"
}
SubProgram "d3d9 " {
// Stats: 36 math, 4 textures
Keywords { "POINT" "SHADOWS_CUBE" }
Vector 4 [_Color]
Float 6 [_Glossiness]
Vector 3 [_LightColor0]
Vector 0 [_LightPositionRange]
Vector 1 [_LightShadowData]
Float 5 [_Metallic]
Vector 2 [unity_ColorSpaceDielectricSpec]
SetTexture 0 [unity_NHxRoughness] 2D 0
SetTexture 1 [_MainTex] 2D 1
SetTexture 2 [_ShadowMapTexture] CUBE 2
SetTexture 3 [_LightTexture0] 2D 3
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   float4 _LightPositionRange;
//   float4 _LightShadowData;
//   sampler2D _LightTexture0;
//   sampler2D _MainTex;
//   float _Metallic;
//   samplerCUBE _ShadowMapTexture;
//   float4 unity_ColorSpaceDielectricSpec;
//   sampler2D unity_NHxRoughness;
//
//
// Registers:
//
//   Name                           Reg   Size
//   ------------------------------ ----- ----
//   _LightPositionRange            c0       1
//   _LightShadowData               c1       1
//   unity_ColorSpaceDielectricSpec c2       1
//   _LightColor0                   c3       1
//   _Color                         c4       1
//   _Metallic                      c5       1
//   _Glossiness                    c6       1
//   unity_NHxRoughness             s0       1
//   _MainTex                       s1       1
//   _ShadowMapTexture              s2       1
//   _LightTexture0                 s3       1
//

    ps_2_0
    def c7, 0.970000029, 1, 16, 0
    dcl t0.xy
    dcl_pp t1.xyz
    dcl_pp t2
    dcl_pp t3
    dcl_pp t4
    dcl t5.xyz
    dcl t6.xyz
    dcl_2d s0
    dcl_2d s1
    dcl_cube s2
    dcl_2d s3
    nrm_pp r0.xyz, t4
    dp3_pp r0.w, -t1, r0
    add_pp r0.w, r0.w, r0.w
    mad_pp r1.xyz, r0, -r0.w, -t1
    mov_pp r2.x, t2.w
    mov_pp r2.y, t3.w
    mov_pp r2.z, t4.w
    dp3_pp r0.w, r1, r2
    dp3_sat_pp r0.x, r0, r2
    mul_pp r0.y, r0.w, r0.w
    mul_pp r1.x, r0.y, r0.y
    mov r0.y, c7.y
    add_pp r1.y, r0.y, -c6.x
    dp3 r2.xy, t5, t5
    texld r1, r1, s0
    texld r3, t0, s1
    texld r4, t6, s2
    texld r2, r2, s3
    mul_pp r3.w, r1.x, c7.z
    mov r1, c2
    mad_pp r2.yzw, c4.wzyx, r3.wzyx, -r1.wzyx
    mul_pp r3.xyz, r3, c4
    mad_pp r1.xyz, c5.x, r2.wzyx, r1
    mul_pp r1.xyz, r1, r3.w
    mad_pp r1.w, c5.x, -r1.w, r1.w
    mad_pp r1.xyz, r3, r1.w, r1
    dp3 r1.w, t6, t6
    rsq r1.w, r1.w
    rcp r1.w, r1.w
    mul r1.w, r1.w, c0.w
    mad r1.w, r1.w, -c7.x, r4.x
    cmp_pp r1.w, r1.w, r0.y, c1.x
    mul_pp r1.w, r1.w, r2.x
    mul_pp r0.yzw, r1.w, c3.wzyx
    mul_pp r0.xyz, r0.x, r0.wzyx
    mul_pp r0.xyz, r0, r1
    mov_pp r0.w, c7.y
    mov_pp oC0, r0

// approximately 40 instruction slots used (4 texture, 36 arithmetic)
"
}
SubProgram "d3d11 " {
// Stats: 28 math, 4 textures
Keywords { "POINT" "SHADOWS_CUBE" }
SetTexture 0 [_MainTex] 2D 1
SetTexture 1 [_LightTexture0] 2D 3
SetTexture 2 [_ShadowMapTexture] CUBE 2
SetTexture 3 [unity_NHxRoughness] 2D 0
ConstBuffer "$Globals" 304
Vector 32 [unity_ColorSpaceDielectricSpec]
Vector 96 [_LightColor0]
Vector 128 [_Color]
Float 200 [_Metallic]
Float 204 [_Glossiness]
ConstBuffer "UnityLighting" 720
Vector 16 [_LightPositionRange]
ConstBuffer "UnityShadows" 416
Vector 384 [_LightShadowData]
BindCB  "$Globals" 0
BindCB  "UnityLighting" 1
BindCB  "UnityShadows" 2
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer cb0[13], immediateIndexed
      dcl_constantbuffer cb1[2], immediateIndexed
      dcl_constantbuffer cb2[25], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texturecube (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 3
   0: dp3 r0.x, v5.xyzx, v5.xyzx
   1: rsq r0.x, r0.x
   2: mul r0.xyz, r0.xxxx, v5.xyzx
   3: dp3 r0.w, -v2.xyzx, r0.xyzx
   4: add r0.w, r0.w, r0.w
   5: mad r1.xyz, r0.xyzx, -r0.wwww, -v2.xyzx
   6: mov r2.x, v3.w
   7: mov r2.y, v4.w
   8: mov r2.z, v5.w
   9: dp3 r0.w, r1.xyzx, r2.xyzx
  10: dp3_sat r0.x, r0.xyzx, r2.xyzx
  11: mul r0.y, r0.w, r0.w
  12: mul r1.x, r0.y, r0.y
  13: add r1.y, -cb0[12].w, l(1.000000)
  14: sample r1.xyzw, r1.xyxx, t3.xyzw, s0
  15: mul r0.y, r1.x, l(16.000000)
  16: sample r1.xyzw, v1.xyxx, t0.xyzw, s1
  17: mad r2.xyz, cb0[8].xyzx, r1.xyzx, -cb0[2].xyzx
  18: mul r1.xyz, r1.xyzx, cb0[8].xyzx
  19: mad r2.xyz, cb0[12].zzzz, r2.xyzx, cb0[2].xyzx
  20: mul r0.yzw, r0.yyyy, r2.xxyz
  21: mad r1.w, -cb0[12].z, cb0[2].w, cb0[2].w
  22: mad r0.yzw, r1.xxyz, r1.wwww, r0.yyzw
  23: dp3 r1.x, v7.xyzx, v7.xyzx
  24: sqrt r1.x, r1.x
  25: mul r1.x, r1.x, cb1[1].w
  26: mul r1.x, r1.x, l(0.970000)
  27: sample r2.xyzw, v7.xyzx, t2.xyzw, s2
  28: lt r1.x, r2.x, r1.x
  29: movc r1.x, r1.x, cb2[24].x, l(1.000000)
  30: dp3 r1.y, v6.xyzx, v6.xyzx
  31: sample r2.xyzw, r1.yyyy, t1.xyzw, s3
  32: mul r1.x, r1.x, r2.x
  33: mul r1.xyz, r1.xxxx, cb0[6].xyzx
  34: mul r1.xyz, r0.xxxx, r1.xyzx
  35: mul o0.xyz, r0.yzwy, r1.xyzx
  36: mov o0.w, l(1.000000)
  37: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "d3d11_9x " {
// Stats: 28 math, 4 textures
Keywords { "POINT" "SHADOWS_CUBE" }
SetTexture 0 [_MainTex] 2D 1
SetTexture 1 [_LightTexture0] 2D 3
SetTexture 2 [_ShadowMapTexture] CUBE 2
SetTexture 3 [unity_NHxRoughness] 2D 0
ConstBuffer "$Globals" 304
Vector 32 [unity_ColorSpaceDielectricSpec]
Vector 96 [_LightColor0]
Vector 128 [_Color]
Float 200 [_Metallic]
Float 204 [_Glossiness]
ConstBuffer "UnityLighting" 720
Vector 16 [_LightPositionRange]
ConstBuffer "UnityShadows" 416
Vector 384 [_LightShadowData]
BindCB  "$Globals" 0
BindCB  "UnityLighting" 1
BindCB  "UnityShadows" 2
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c0         cb0             2         1  ( FLT, FLT, FLT, FLT)
// c1         cb0             6         1  ( FLT, FLT, FLT, FLT)
// c2         cb0             8         1  ( FLT, FLT, FLT, FLT)
// c3         cb0            12         1  ( FLT, FLT, FLT, FLT)
// c4         cb1             1         1  ( FLT, FLT, FLT, FLT)
// c5         cb2            24         1  ( FLT, FLT, FLT, FLT)
//
//
// Sampler/Resource to DX9 shader sampler mappings:
//
// Target Sampler Source Sampler  Source Resource
// -------------- --------------- ----------------
// s0             s0              t3               
// s1             s1              t0               
// s2             s2              t2               
// s3             s3              t1               
//
//
// Level9 shader bytecode:
//
    ps_2_0
          def c6, 0.970000029, 1, 16, 0
          dcl t0
          dcl_pp t1.xyz
          dcl_pp t2
          dcl_pp t3
          dcl_pp t4
          dcl t5.xyz
          dcl t6.xyz
          dcl_2d s0
          dcl_2d s1
          dcl_cube s2
          dcl_2d s3
   0:     nrm_pp r0.xyz, t4
   3:     dp3_pp r0.w, -t1, r0
   4:     add_pp r0.w, r0.w, r0.w
   5:     mad_pp r1.xyz, r0, -r0.w, -t1
   6:     mov_pp r2.x, t2.w
   7:     mov_pp r2.y, t3.w
   8:     mov_pp r2.z, t4.w
   9:     dp3_pp r0.w, r1, r2
  10:     dp3_sat_pp r0.x, r0, r2
  11:     mul_pp r0.y, r0.w, r0.w
  12:     mul_pp r1.x, r0.y, r0.y
  13:     mov r0.zw, c3
  14:     add_pp r1.y, -r0.w, c6.y
  15:     dp3 r2.xy, t5, t5
  16:     texld r1, r1, s0
  16:     texld r3, t0, s1
  16:     texld r4, t6, s2
  16:     texld r2, r2, s3
  16:     mul_pp r3.w, r1.x, c6.z
  17:     mov r1.xyz, c0
  18:     mad_pp r1.xyz, c2, r3, -r1
  19:     mul_pp r2.yzw, r3.wzyx, c2.wzyx
  20:     mad_pp r1.xyz, r0.z, r1, c0
  21:     mul_pp r1.xyz, r1, r3.w
  22:     mad_pp r1.w, r0.z, -c0.w, c0.w
  23:     mad_pp r0.yzw, r2, r1.w, r1.wzyx
  24:     dp3 r1.x, t6, t6
  25:     rsq r1.x, r1.x
  26:     rcp r1.x, r1.x
  27:     mul r1.x, r1.x, c4.w
  28:     mad r1.x, r1.x, -c6.x, r4.x
  29:     mov r1.y, c6.y
  30:     cmp_pp r1.x, r1.x, r1.y, c5.x
  31:     mul_pp r1.x, r1.x, r2.x
  32:     mul_pp r1.xyz, r1.x, c1
  33:     mul_pp r1.xyz, r0.x, r1
  34:     mul_pp r0.xyz, r0.wzyx, r1
  35:     mov r0.w, c6.y
  36:     mov_pp oC0, r0

// approximately 41 instruction slots used (4 texture, 37 arithmetic)
      ps_4_0
      dcl_constantbuffer cb0[13], immediateIndexed
      dcl_constantbuffer cb1[2], immediateIndexed
      dcl_constantbuffer cb2[25], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texturecube (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 3
   0: dp3 r0.x, v5.xyzx, v5.xyzx
   1: rsq r0.x, r0.x
   2: mul r0.xyz, r0.xxxx, v5.xyzx
   3: dp3 r0.w, -v2.xyzx, r0.xyzx
   4: add r0.w, r0.w, r0.w
   5: mad r1.xyz, r0.xyzx, -r0.wwww, -v2.xyzx
   6: mov r2.x, v3.w
   7: mov r2.y, v4.w
   8: mov r2.z, v5.w
   9: dp3 r0.w, r1.xyzx, r2.xyzx
  10: dp3_sat r0.x, r0.xyzx, r2.xyzx
  11: mul r0.y, r0.w, r0.w
  12: mul r1.x, r0.y, r0.y
  13: add r1.y, -cb0[12].w, l(1.000000)
  14: sample r1.xyzw, r1.xyxx, t3.xyzw, s0
  15: mul r0.y, r1.x, l(16.000000)
  16: sample r1.xyzw, v1.xyxx, t0.xyzw, s1
  17: mad r2.xyz, cb0[8].xyzx, r1.xyzx, -cb0[2].xyzx
  18: mul r1.xyz, r1.xyzx, cb0[8].xyzx
  19: mad r2.xyz, cb0[12].zzzz, r2.xyzx, cb0[2].xyzx
  20: mul r0.yzw, r0.yyyy, r2.xxyz
  21: mad r1.w, -cb0[12].z, cb0[2].w, cb0[2].w
  22: mad r0.yzw, r1.xxyz, r1.wwww, r0.yyzw
  23: dp3 r1.x, v7.xyzx, v7.xyzx
  24: sqrt r1.x, r1.x
  25: mul r1.x, r1.x, cb1[1].w
  26: mul r1.x, r1.x, l(0.970000)
  27: sample r2.xyzw, v7.xyzx, t2.xyzw, s2
  28: lt r1.x, r2.x, r1.x
  29: movc r1.x, r1.x, cb2[24].x, l(1.000000)
  30: dp3 r1.y, v6.xyzx, v6.xyzx
  31: sample r2.xyzw, r1.yyyy, t1.xyzw, s3
  32: mul r1.x, r1.x, r2.x
  33: mul r1.xyz, r1.xxxx, cb0[6].xyzx
  34: mul r1.xyz, r0.xxxx, r1.xyzx
  35: mul o0.xyz, r0.yzwy, r1.xyzx
  36: mov o0.w, l(1.000000)
  37: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
Keywords { "POINT_COOKIE" "SHADOWS_CUBE" }
"// shader disassembly not supported on opengl"
}
SubProgram "d3d9 " {
// Stats: 37 math, 5 textures
Keywords { "POINT_COOKIE" "SHADOWS_CUBE" }
Vector 4 [_Color]
Float 6 [_Glossiness]
Vector 3 [_LightColor0]
Vector 0 [_LightPositionRange]
Vector 1 [_LightShadowData]
Float 5 [_Metallic]
Vector 2 [unity_ColorSpaceDielectricSpec]
SetTexture 0 [unity_NHxRoughness] 2D 0
SetTexture 1 [_MainTex] 2D 1
SetTexture 2 [_ShadowMapTexture] CUBE 2
SetTexture 3 [_LightTexture0] CUBE 3
SetTexture 4 [_LightTextureB0] 2D 4
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   float4 _LightPositionRange;
//   float4 _LightShadowData;
//   samplerCUBE _LightTexture0;
//   sampler2D _LightTextureB0;
//   sampler2D _MainTex;
//   float _Metallic;
//   samplerCUBE _ShadowMapTexture;
//   float4 unity_ColorSpaceDielectricSpec;
//   sampler2D unity_NHxRoughness;
//
//
// Registers:
//
//   Name                           Reg   Size
//   ------------------------------ ----- ----
//   _LightPositionRange            c0       1
//   _LightShadowData               c1       1
//   unity_ColorSpaceDielectricSpec c2       1
//   _LightColor0                   c3       1
//   _Color                         c4       1
//   _Metallic                      c5       1
//   _Glossiness                    c6       1
//   unity_NHxRoughness             s0       1
//   _MainTex                       s1       1
//   _ShadowMapTexture              s2       1
//   _LightTexture0                 s3       1
//   _LightTextureB0                s4       1
//

    ps_2_0
    def c7, 0.970000029, 1, 16, 0
    dcl t0.xy
    dcl_pp t1.xyz
    dcl_pp t2
    dcl_pp t3
    dcl_pp t4
    dcl t5.xyz
    dcl t6.xyz
    dcl_2d s0
    dcl_2d s1
    dcl_cube s2
    dcl_cube s3
    dcl_2d s4
    nrm_pp r0.xyz, t4
    dp3_pp r0.w, -t1, r0
    add_pp r0.w, r0.w, r0.w
    mad_pp r1.xyz, r0, -r0.w, -t1
    mov_pp r2.x, t2.w
    mov_pp r2.y, t3.w
    mov_pp r2.z, t4.w
    dp3_pp r0.w, r1, r2
    dp3_sat_pp r0.x, r0, r2
    mul_pp r0.y, r0.w, r0.w
    mul_pp r1.x, r0.y, r0.y
    mov r0.y, c7.y
    add_pp r1.y, r0.y, -c6.x
    dp3 r2.xy, t5, t5
    texld r1, r1, s0
    texld r3, t0, s1
    texld r4, t6, s2
    texld r2, r2, s4
    texld r5, t5, s3
    mul_pp r3.w, r1.x, c7.z
    mov r1, c2
    mad_pp r2.yzw, c4.wzyx, r3.wzyx, -r1.wzyx
    mul_pp r3.xyz, r3, c4
    mad_pp r1.xyz, c5.x, r2.wzyx, r1
    mul_pp r1.xyz, r1, r3.w
    mad_pp r1.w, c5.x, -r1.w, r1.w
    mad_pp r1.xyz, r3, r1.w, r1
    dp3 r1.w, t6, t6
    rsq r1.w, r1.w
    rcp r1.w, r1.w
    mul r1.w, r1.w, c0.w
    mad r1.w, r1.w, -c7.x, r4.x
    cmp_pp r1.w, r1.w, r0.y, c1.x
    mul r0.y, r2.x, r5.w
    mul_pp r1.w, r1.w, r0.y
    mul_pp r0.yzw, r1.w, c3.wzyx
    mul_pp r0.xyz, r0.x, r0.wzyx
    mul_pp r0.xyz, r0, r1
    mov_pp r0.w, c7.y
    mov_pp oC0, r0

// approximately 42 instruction slots used (5 texture, 37 arithmetic)
"
}
SubProgram "d3d11 " {
// Stats: 29 math, 5 textures
Keywords { "POINT_COOKIE" "SHADOWS_CUBE" }
SetTexture 0 [_MainTex] 2D 1
SetTexture 1 [_LightTextureB0] 2D 4
SetTexture 2 [_LightTexture0] CUBE 3
SetTexture 3 [_ShadowMapTexture] CUBE 2
SetTexture 4 [unity_NHxRoughness] 2D 0
ConstBuffer "$Globals" 304
Vector 32 [unity_ColorSpaceDielectricSpec]
Vector 96 [_LightColor0]
Vector 128 [_Color]
Float 200 [_Metallic]
Float 204 [_Glossiness]
ConstBuffer "UnityLighting" 720
Vector 16 [_LightPositionRange]
ConstBuffer "UnityShadows" 416
Vector 384 [_LightShadowData]
BindCB  "$Globals" 0
BindCB  "UnityLighting" 1
BindCB  "UnityShadows" 2
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer cb0[13], immediateIndexed
      dcl_constantbuffer cb1[2], immediateIndexed
      dcl_constantbuffer cb2[25], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texturecube (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 4
   0: dp3 r0.x, v5.xyzx, v5.xyzx
   1: rsq r0.x, r0.x
   2: mul r0.xyz, r0.xxxx, v5.xyzx
   3: dp3 r0.w, -v2.xyzx, r0.xyzx
   4: add r0.w, r0.w, r0.w
   5: mad r1.xyz, r0.xyzx, -r0.wwww, -v2.xyzx
   6: mov r2.x, v3.w
   7: mov r2.y, v4.w
   8: mov r2.z, v5.w
   9: dp3 r0.w, r1.xyzx, r2.xyzx
  10: dp3_sat r0.x, r0.xyzx, r2.xyzx
  11: mul r0.y, r0.w, r0.w
  12: mul r1.x, r0.y, r0.y
  13: add r1.y, -cb0[12].w, l(1.000000)
  14: sample r1.xyzw, r1.xyxx, t4.xyzw, s0
  15: mul r0.y, r1.x, l(16.000000)
  16: sample r1.xyzw, v1.xyxx, t0.xyzw, s1
  17: mad r2.xyz, cb0[8].xyzx, r1.xyzx, -cb0[2].xyzx
  18: mul r1.xyz, r1.xyzx, cb0[8].xyzx
  19: mad r2.xyz, cb0[12].zzzz, r2.xyzx, cb0[2].xyzx
  20: mul r0.yzw, r0.yyyy, r2.xxyz
  21: mad r1.w, -cb0[12].z, cb0[2].w, cb0[2].w
  22: mad r0.yzw, r1.xxyz, r1.wwww, r0.yyzw
  23: dp3 r1.x, v7.xyzx, v7.xyzx
  24: sqrt r1.x, r1.x
  25: mul r1.x, r1.x, cb1[1].w
  26: mul r1.x, r1.x, l(0.970000)
  27: sample r2.xyzw, v7.xyzx, t3.xyzw, s2
  28: lt r1.x, r2.x, r1.x
  29: movc r1.x, r1.x, cb2[24].x, l(1.000000)
  30: dp3 r1.y, v6.xyzx, v6.xyzx
  31: sample r2.xyzw, r1.yyyy, t1.xyzw, s4
  32: sample r3.xyzw, v6.xyzx, t2.xyzw, s3
  33: mul r1.y, r2.x, r3.w
  34: mul r1.x, r1.x, r1.y
  35: mul r1.xyz, r1.xxxx, cb0[6].xyzx
  36: mul r1.xyz, r0.xxxx, r1.xyzx
  37: mul o0.xyz, r0.yzwy, r1.xyzx
  38: mov o0.w, l(1.000000)
  39: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "d3d11_9x " {
// Stats: 29 math, 5 textures
Keywords { "POINT_COOKIE" "SHADOWS_CUBE" }
SetTexture 0 [_MainTex] 2D 1
SetTexture 1 [_LightTextureB0] 2D 4
SetTexture 2 [_LightTexture0] CUBE 3
SetTexture 3 [_ShadowMapTexture] CUBE 2
SetTexture 4 [unity_NHxRoughness] 2D 0
ConstBuffer "$Globals" 304
Vector 32 [unity_ColorSpaceDielectricSpec]
Vector 96 [_LightColor0]
Vector 128 [_Color]
Float 200 [_Metallic]
Float 204 [_Glossiness]
ConstBuffer "UnityLighting" 720
Vector 16 [_LightPositionRange]
ConstBuffer "UnityShadows" 416
Vector 384 [_LightShadowData]
BindCB  "$Globals" 0
BindCB  "UnityLighting" 1
BindCB  "UnityShadows" 2
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c0         cb0             2         1  ( FLT, FLT, FLT, FLT)
// c1         cb0             6         1  ( FLT, FLT, FLT, FLT)
// c2         cb0             8         1  ( FLT, FLT, FLT, FLT)
// c3         cb0            12         1  ( FLT, FLT, FLT, FLT)
// c4         cb1             1         1  ( FLT, FLT, FLT, FLT)
// c5         cb2            24         1  ( FLT, FLT, FLT, FLT)
//
//
// Sampler/Resource to DX9 shader sampler mappings:
//
// Target Sampler Source Sampler  Source Resource
// -------------- --------------- ----------------
// s0             s0              t4               
// s1             s1              t0               
// s2             s2              t3               
// s3             s3              t2               
// s4             s4              t1               
//
//
// Level9 shader bytecode:
//
    ps_2_0
          def c6, 0.970000029, 1, 16, 0
          dcl t0
          dcl_pp t1.xyz
          dcl_pp t2
          dcl_pp t3
          dcl_pp t4
          dcl t5.xyz
          dcl t6.xyz
          dcl_2d s0
          dcl_2d s1
          dcl_cube s2
          dcl_cube s3
          dcl_2d s4
   0:     nrm_pp r0.xyz, t4
   3:     dp3_pp r0.w, -t1, r0
   4:     add_pp r0.w, r0.w, r0.w
   5:     mad_pp r1.xyz, r0, -r0.w, -t1
   6:     mov_pp r2.x, t2.w
   7:     mov_pp r2.y, t3.w
   8:     mov_pp r2.z, t4.w
   9:     dp3_pp r0.w, r1, r2
  10:     dp3_sat_pp r0.x, r0, r2
  11:     mul_pp r0.y, r0.w, r0.w
  12:     mul_pp r1.x, r0.y, r0.y
  13:     mov r0.zw, c3
  14:     add_pp r1.y, -r0.w, c6.y
  15:     dp3 r2.xy, t5, t5
  16:     texld r1, r1, s0
  16:     texld r3, t0, s1
  16:     texld r4, t6, s2
  16:     texld r2, r2, s4
  16:     texld r5, t5, s3
  16:     mul_pp r3.w, r1.x, c6.z
  17:     mov r1.xyz, c0
  18:     mad_pp r1.xyz, c2, r3, -r1
  19:     mul_pp r2.yzw, r3.wzyx, c2.wzyx
  20:     mad_pp r1.xyz, r0.z, r1, c0
  21:     mul_pp r1.xyz, r1, r3.w
  22:     mad_pp r1.w, r0.z, -c0.w, c0.w
  23:     mad_pp r0.yzw, r2, r1.w, r1.wzyx
  24:     dp3 r1.x, t6, t6
  25:     rsq r1.x, r1.x
  26:     rcp r1.x, r1.x
  27:     mul r1.x, r1.x, c4.w
  28:     mad r1.x, r1.x, -c6.x, r4.x
  29:     mov r1.y, c6.y
  30:     cmp_pp r1.x, r1.x, r1.y, c5.x
  31:     mul r1.y, r2.x, r5.w
  32:     mul_pp r1.x, r1.x, r1.y
  33:     mul_pp r1.xyz, r1.x, c1
  34:     mul_pp r1.xyz, r0.x, r1
  35:     mul_pp r0.xyz, r0.wzyx, r1
  36:     mov r0.w, c6.y
  37:     mov_pp oC0, r0

// approximately 43 instruction slots used (5 texture, 38 arithmetic)
      ps_4_0
      dcl_constantbuffer cb0[13], immediateIndexed
      dcl_constantbuffer cb1[2], immediateIndexed
      dcl_constantbuffer cb2[25], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texturecube (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 4
   0: dp3 r0.x, v5.xyzx, v5.xyzx
   1: rsq r0.x, r0.x
   2: mul r0.xyz, r0.xxxx, v5.xyzx
   3: dp3 r0.w, -v2.xyzx, r0.xyzx
   4: add r0.w, r0.w, r0.w
   5: mad r1.xyz, r0.xyzx, -r0.wwww, -v2.xyzx
   6: mov r2.x, v3.w
   7: mov r2.y, v4.w
   8: mov r2.z, v5.w
   9: dp3 r0.w, r1.xyzx, r2.xyzx
  10: dp3_sat r0.x, r0.xyzx, r2.xyzx
  11: mul r0.y, r0.w, r0.w
  12: mul r1.x, r0.y, r0.y
  13: add r1.y, -cb0[12].w, l(1.000000)
  14: sample r1.xyzw, r1.xyxx, t4.xyzw, s0
  15: mul r0.y, r1.x, l(16.000000)
  16: sample r1.xyzw, v1.xyxx, t0.xyzw, s1
  17: mad r2.xyz, cb0[8].xyzx, r1.xyzx, -cb0[2].xyzx
  18: mul r1.xyz, r1.xyzx, cb0[8].xyzx
  19: mad r2.xyz, cb0[12].zzzz, r2.xyzx, cb0[2].xyzx
  20: mul r0.yzw, r0.yyyy, r2.xxyz
  21: mad r1.w, -cb0[12].z, cb0[2].w, cb0[2].w
  22: mad r0.yzw, r1.xxyz, r1.wwww, r0.yyzw
  23: dp3 r1.x, v7.xyzx, v7.xyzx
  24: sqrt r1.x, r1.x
  25: mul r1.x, r1.x, cb1[1].w
  26: mul r1.x, r1.x, l(0.970000)
  27: sample r2.xyzw, v7.xyzx, t3.xyzw, s2
  28: lt r1.x, r2.x, r1.x
  29: movc r1.x, r1.x, cb2[24].x, l(1.000000)
  30: dp3 r1.y, v6.xyzx, v6.xyzx
  31: sample r2.xyzw, r1.yyyy, t1.xyzw, s4
  32: sample r3.xyzw, v6.xyzx, t2.xyzw, s3
  33: mul r1.y, r2.x, r3.w
  34: mul r1.x, r1.x, r1.y
  35: mul r1.xyz, r1.xxxx, cb0[6].xyzx
  36: mul r1.xyz, r0.xxxx, r1.xyzx
  37: mul o0.xyz, r0.yzwy, r1.xyzx
  38: mov o0.w, l(1.000000)
  39: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
Keywords { "POINT" "SHADOWS_OFF" "_ALPHABLEND_ON" }
"// shader disassembly not supported on opengl"
}
SubProgram "d3d9 " {
// Stats: 29 math, 3 textures
Keywords { "POINT" "SHADOWS_OFF" "_ALPHABLEND_ON" }
Vector 2 [_Color]
Float 4 [_Glossiness]
Vector 1 [_LightColor0]
Float 3 [_Metallic]
Vector 0 [unity_ColorSpaceDielectricSpec]
SetTexture 0 [unity_NHxRoughness] 2D 0
SetTexture 1 [_MainTex] 2D 1
SetTexture 2 [_LightTexture0] 2D 2
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   sampler2D _LightTexture0;
//   sampler2D _MainTex;
//   float _Metallic;
//   float4 unity_ColorSpaceDielectricSpec;
//   sampler2D unity_NHxRoughness;
//
//
// Registers:
//
//   Name                           Reg   Size
//   ------------------------------ ----- ----
//   unity_ColorSpaceDielectricSpec c0       1
//   _LightColor0                   c1       1
//   _Color                         c2       1
//   _Metallic                      c3       1
//   _Glossiness                    c4       1
//   unity_NHxRoughness             s0       1
//   _MainTex                       s1       1
//   _LightTexture0                 s2       1
//

    ps_2_0
    def c5, 1, 16, 0, 0
    dcl t0.xy
    dcl_pp t1.xyz
    dcl_pp t2
    dcl_pp t3
    dcl_pp t4
    dcl t5.xyz
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    nrm_pp r0.xyz, t4
    dp3_pp r0.w, -t1, r0
    add_pp r0.w, r0.w, r0.w
    mad_pp r1.xyz, r0, -r0.w, -t1
    mov_pp r2.x, t2.w
    mov_pp r2.y, t3.w
    mov_pp r2.z, t4.w
    dp3_pp r0.w, r1, r2
    dp3_sat_pp r0.x, r0, r2
    mul_pp r0.y, r0.w, r0.w
    mul_pp r1.x, r0.y, r0.y
    mov r2.x, c5.x
    add_pp r1.y, r2.x, -c4.x
    dp3 r2.xy, t5, t5
    texld r1, r1, s0
    texld r3, t0, s1
    texld_pp r2, r2, s2
    mul_pp r0.y, r1.x, c5.y
    mov r1, c0
    mad_pp r2.yzw, c2.wzyx, r3.wzyx, -r1.wzyx
    mad_pp r1.xyz, c3.x, r2.wzyx, r1
    mul_pp r0.yzw, r0.y, r1.wzyx
    mad_pp r1.x, c3.x, -r1.w, r1.w
    mul_pp r1.yzw, r3.wzyx, c2.wzyx
    mul_pp r3.w, r3.w, c2.w
    mad_pp r0.yzw, r1, r1.x, r0
    mul_pp r1.xyz, r2.x, c1
    mul_pp r1.xyz, r0.x, r1
    mul_pp r3.xyz, r0.wzyx, r1
    mov_pp oC0, r3

// approximately 32 instruction slots used (3 texture, 29 arithmetic)
"
}
SubProgram "d3d11 " {
// Stats: 23 math, 3 textures
Keywords { "POINT" "SHADOWS_OFF" "_ALPHABLEND_ON" }
SetTexture 0 [_MainTex] 2D 1
SetTexture 1 [_LightTexture0] 2D 2
SetTexture 2 [unity_NHxRoughness] 2D 0
ConstBuffer "$Globals" 304
Vector 32 [unity_ColorSpaceDielectricSpec]
Vector 96 [_LightColor0]
Vector 128 [_Color]
Float 200 [_Metallic]
Float 204 [_Glossiness]
BindCB  "$Globals" 0
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer cb0[13], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 3
   0: dp3 r0.x, v5.xyzx, v5.xyzx
   1: rsq r0.x, r0.x
   2: mul r0.xyz, r0.xxxx, v5.xyzx
   3: dp3 r0.w, -v2.xyzx, r0.xyzx
   4: add r0.w, r0.w, r0.w
   5: mad r1.xyz, r0.xyzx, -r0.wwww, -v2.xyzx
   6: mov r2.x, v3.w
   7: mov r2.y, v4.w
   8: mov r2.z, v5.w
   9: dp3 r0.w, r1.xyzx, r2.xyzx
  10: dp3_sat r0.x, r0.xyzx, r2.xyzx
  11: mul r0.y, r0.w, r0.w
  12: mul r1.x, r0.y, r0.y
  13: add r1.y, -cb0[12].w, l(1.000000)
  14: sample r1.xyzw, r1.xyxx, t2.xyzw, s0
  15: mul r0.y, r1.x, l(16.000000)
  16: sample r1.xyzw, v1.xyxx, t0.xyzw, s1
  17: mad r2.xyz, cb0[8].xyzx, r1.xyzx, -cb0[2].xyzx
  18: mad r2.xyz, cb0[12].zzzz, r2.xyzx, cb0[2].xyzx
  19: mul r0.yzw, r0.yyyy, r2.xxyz
  20: mad r2.x, -cb0[12].z, cb0[2].w, cb0[2].w
  21: mul r1.xyz, r1.xyzx, cb0[8].xyzx
  22: mul o0.w, r1.w, cb0[8].w
  23: mad r0.yzw, r1.xxyz, r2.xxxx, r0.yyzw
  24: dp3 r1.x, v6.xyzx, v6.xyzx
  25: sample r1.xyzw, r1.xxxx, t1.xyzw, s2
  26: mul r1.xyz, r1.xxxx, cb0[6].xyzx
  27: mul r1.xyz, r0.xxxx, r1.xyzx
  28: mul o0.xyz, r0.yzwy, r1.xyzx
  29: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "d3d11_9x " {
// Stats: 23 math, 3 textures
Keywords { "POINT" "SHADOWS_OFF" "_ALPHABLEND_ON" }
SetTexture 0 [_MainTex] 2D 1
SetTexture 1 [_LightTexture0] 2D 2
SetTexture 2 [unity_NHxRoughness] 2D 0
ConstBuffer "$Globals" 304
Vector 32 [unity_ColorSpaceDielectricSpec]
Vector 96 [_LightColor0]
Vector 128 [_Color]
Float 200 [_Metallic]
Float 204 [_Glossiness]
BindCB  "$Globals" 0
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c0         cb0             2         1  ( FLT, FLT, FLT, FLT)
// c1         cb0             6         1  ( FLT, FLT, FLT, FLT)
// c2         cb0             8         1  ( FLT, FLT, FLT, FLT)
// c3         cb0            12         1  ( FLT, FLT, FLT, FLT)
//
//
// Sampler/Resource to DX9 shader sampler mappings:
//
// Target Sampler Source Sampler  Source Resource
// -------------- --------------- ----------------
// s0             s0              t2               
// s1             s1              t0               
// s2             s2              t1               
//
//
// Level9 shader bytecode:
//
    ps_2_0
          def c4, 1, 16, 0, 0
          dcl t0
          dcl_pp t1.xyz
          dcl_pp t2
          dcl_pp t3
          dcl_pp t4
          dcl t5.xyz
          dcl_2d s0
          dcl_2d s1
          dcl_2d s2
   0:     nrm_pp r0.xyz, t4
   3:     dp3_pp r0.w, -t1, r0
   4:     add_pp r0.w, r0.w, r0.w
   5:     mad_pp r1.xyz, r0, -r0.w, -t1
   6:     mov_pp r2.x, t2.w
   7:     mov_pp r2.y, t3.w
   8:     mov_pp r2.z, t4.w
   9:     dp3_pp r0.w, r1, r2
  10:     dp3_sat_pp r0.x, r0, r2
  11:     mul_pp r0.y, r0.w, r0.w
  12:     mul_pp r1.x, r0.y, r0.y
  13:     mov r0.zw, c3
  14:     add_pp r1.y, -r0.w, c4.x
  15:     dp3 r2.xy, t5, t5
  16:     texld r1, r1, s0
  16:     texld r3, t0, s1
  16:     texld_pp r2, r2, s2
  16:     mul_pp r0.y, r1.x, c4.y
  17:     mov r1.xyz, c0
  18:     mad_pp r1.xyz, c2, r3, -r1
  19:     mad_pp r1.xyz, r0.z, r1, c0
  20:     mul_pp r1.xyz, r0.y, r1
  21:     mad_pp r1.w, r0.z, -c0.w, c0.w
  22:     mul_pp r0.yzw, r3.wzyx, c2.wzyx
  23:     mul_pp r3.w, r3.w, c2.w
  24:     mad_pp r0.yzw, r0, r1.w, r1.wzyx
  25:     mul_pp r1.xyz, r2.x, c1
  26:     mul_pp r1.xyz, r0.x, r1
  27:     mul_pp r3.xyz, r0.wzyx, r1
  28:     mov_pp oC0, r3

// approximately 32 instruction slots used (3 texture, 29 arithmetic)
      ps_4_0
      dcl_constantbuffer cb0[13], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 3
   0: dp3 r0.x, v5.xyzx, v5.xyzx
   1: rsq r0.x, r0.x
   2: mul r0.xyz, r0.xxxx, v5.xyzx
   3: dp3 r0.w, -v2.xyzx, r0.xyzx
   4: add r0.w, r0.w, r0.w
   5: mad r1.xyz, r0.xyzx, -r0.wwww, -v2.xyzx
   6: mov r2.x, v3.w
   7: mov r2.y, v4.w
   8: mov r2.z, v5.w
   9: dp3 r0.w, r1.xyzx, r2.xyzx
  10: dp3_sat r0.x, r0.xyzx, r2.xyzx
  11: mul r0.y, r0.w, r0.w
  12: mul r1.x, r0.y, r0.y
  13: add r1.y, -cb0[12].w, l(1.000000)
  14: sample r1.xyzw, r1.xyxx, t2.xyzw, s0
  15: mul r0.y, r1.x, l(16.000000)
  16: sample r1.xyzw, v1.xyxx, t0.xyzw, s1
  17: mad r2.xyz, cb0[8].xyzx, r1.xyzx, -cb0[2].xyzx
  18: mad r2.xyz, cb0[12].zzzz, r2.xyzx, cb0[2].xyzx
  19: mul r0.yzw, r0.yyyy, r2.xxyz
  20: mad r2.x, -cb0[12].z, cb0[2].w, cb0[2].w
  21: mul r1.xyz, r1.xyzx, cb0[8].xyzx
  22: mul o0.w, r1.w, cb0[8].w
  23: mad r0.yzw, r1.xxyz, r2.xxxx, r0.yyzw
  24: dp3 r1.x, v6.xyzx, v6.xyzx
  25: sample r1.xyzw, r1.xxxx, t1.xyzw, s2
  26: mul r1.xyz, r1.xxxx, cb0[6].xyzx
  27: mul r1.xyz, r0.xxxx, r1.xyzx
  28: mul o0.xyz, r0.yzwy, r1.xyzx
  29: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "_ALPHABLEND_ON" }
"// shader disassembly not supported on opengl"
}
SubProgram "d3d9 " {
// Stats: 27 math, 2 textures
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "_ALPHABLEND_ON" }
Vector 2 [_Color]
Float 4 [_Glossiness]
Vector 1 [_LightColor0]
Float 3 [_Metallic]
Vector 0 [unity_ColorSpaceDielectricSpec]
SetTexture 0 [unity_NHxRoughness] 2D 0
SetTexture 1 [_MainTex] 2D 1
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   sampler2D _MainTex;
//   float _Metallic;
//   float4 unity_ColorSpaceDielectricSpec;
//   sampler2D unity_NHxRoughness;
//
//
// Registers:
//
//   Name                           Reg   Size
//   ------------------------------ ----- ----
//   unity_ColorSpaceDielectricSpec c0       1
//   _LightColor0                   c1       1
//   _Color                         c2       1
//   _Metallic                      c3       1
//   _Glossiness                    c4       1
//   unity_NHxRoughness             s0       1
//   _MainTex                       s1       1
//

    ps_2_0
    def c5, 1, 16, 0, 0
    dcl t0.xy
    dcl_pp t1.xyz
    dcl_pp t2
    dcl_pp t3
    dcl_pp t4
    dcl_2d s0
    dcl_2d s1
    nrm_pp r0.xyz, t4
    dp3_pp r0.w, -t1, r0
    add_pp r0.w, r0.w, r0.w
    mad_pp r1.xyz, r0, -r0.w, -t1
    mov_pp r2.x, t2.w
    mov_pp r2.y, t3.w
    mov_pp r2.z, t4.w
    dp3_pp r0.w, r1, r2
    dp3_sat_pp r0.x, r0, r2
    mul_pp r0.xyz, r0.x, c1
    mul_pp r0.w, r0.w, r0.w
    mul_pp r1.x, r0.w, r0.w
    mov r0.w, c5.x
    add_pp r1.y, r0.w, -c4.x
    texld r1, r1, s0
    texld r2, t0, s1
    mul_pp r0.w, r1.x, c5.y
    mov r1, c0
    mad_pp r3.xyz, c2, r2, -r1
    mad_pp r1.xyz, c3.x, r3, r1
    mul_pp r1.xyz, r0.w, r1
    mad_pp r0.w, c3.x, -r1.w, r1.w
    mul_pp r2.xyz, r2, c2
    mul_pp r3.w, r2.w, c2.w
    mad_pp r1.xyz, r2, r0.w, r1
    mul_pp r3.xyz, r0, r1
    mov_pp oC0, r3

// approximately 29 instruction slots used (2 texture, 27 arithmetic)
"
}
SubProgram "d3d11 " {
// Stats: 21 math, 2 textures
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "_ALPHABLEND_ON" }
SetTexture 0 [_MainTex] 2D 1
SetTexture 1 [unity_NHxRoughness] 2D 0
ConstBuffer "$Globals" 240
Vector 32 [unity_ColorSpaceDielectricSpec]
Vector 96 [_LightColor0]
Vector 128 [_Color]
Float 200 [_Metallic]
Float 204 [_Glossiness]
BindCB  "$Globals" 0
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer cb0[13], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_output o0.xyzw
      dcl_temps 3
   0: dp3 r0.x, v5.xyzx, v5.xyzx
   1: rsq r0.x, r0.x
   2: mul r0.xyz, r0.xxxx, v5.xyzx
   3: dp3 r0.w, -v2.xyzx, r0.xyzx
   4: add r0.w, r0.w, r0.w
   5: mad r1.xyz, r0.xyzx, -r0.wwww, -v2.xyzx
   6: mov r2.x, v3.w
   7: mov r2.y, v4.w
   8: mov r2.z, v5.w
   9: dp3 r0.w, r1.xyzx, r2.xyzx
  10: dp3_sat r0.x, r0.xyzx, r2.xyzx
  11: mul r0.xyz, r0.xxxx, cb0[6].xyzx
  12: mul r0.w, r0.w, r0.w
  13: mul r1.x, r0.w, r0.w
  14: add r1.y, -cb0[12].w, l(1.000000)
  15: sample r1.xyzw, r1.xyxx, t1.xyzw, s0
  16: mul r0.w, r1.x, l(16.000000)
  17: sample r1.xyzw, v1.xyxx, t0.xyzw, s1
  18: mad r2.xyz, cb0[8].xyzx, r1.xyzx, -cb0[2].xyzx
  19: mad r2.xyz, cb0[12].zzzz, r2.xyzx, cb0[2].xyzx
  20: mul r2.xyz, r0.wwww, r2.xyzx
  21: mad r0.w, -cb0[12].z, cb0[2].w, cb0[2].w
  22: mul r1.xyz, r1.xyzx, cb0[8].xyzx
  23: mul o0.w, r1.w, cb0[8].w
  24: mad r1.xyz, r1.xyzx, r0.wwww, r2.xyzx
  25: mul o0.xyz, r0.xyzx, r1.xyzx
  26: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "d3d11_9x " {
// Stats: 21 math, 2 textures
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "_ALPHABLEND_ON" }
SetTexture 0 [_MainTex] 2D 1
SetTexture 1 [unity_NHxRoughness] 2D 0
ConstBuffer "$Globals" 240
Vector 32 [unity_ColorSpaceDielectricSpec]
Vector 96 [_LightColor0]
Vector 128 [_Color]
Float 200 [_Metallic]
Float 204 [_Glossiness]
BindCB  "$Globals" 0
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c0         cb0             2         1  ( FLT, FLT, FLT, FLT)
// c1         cb0             6         1  ( FLT, FLT, FLT, FLT)
// c2         cb0             8         1  ( FLT, FLT, FLT, FLT)
// c3         cb0            12         1  ( FLT, FLT, FLT, FLT)
//
//
// Sampler/Resource to DX9 shader sampler mappings:
//
// Target Sampler Source Sampler  Source Resource
// -------------- --------------- ----------------
// s0             s0              t1               
// s1             s1              t0               
//
//
// Level9 shader bytecode:
//
    ps_2_0
          def c4, 1, 16, 0, 0
          dcl t0
          dcl_pp t1.xyz
          dcl_pp t2
          dcl_pp t3
          dcl_pp t4
          dcl_2d s0
          dcl_2d s1
   0:     nrm_pp r0.xyz, t4
   3:     dp3_pp r0.w, -t1, r0
   4:     add_pp r0.w, r0.w, r0.w
   5:     mad_pp r1.xyz, r0, -r0.w, -t1
   6:     mov_pp r2.x, t2.w
   7:     mov_pp r2.y, t3.w
   8:     mov_pp r2.z, t4.w
   9:     dp3_pp r0.w, r1, r2
  10:     dp3_sat_pp r0.x, r0, r2
  11:     mul_pp r0.xyz, r0.x, c1
  12:     mul_pp r0.w, r0.w, r0.w
  13:     mul_pp r1.x, r0.w, r0.w
  14:     mov r1.zw, c3
  15:     add_pp r1.y, -r1.w, c4.x
  16:     texld r2, r1, s0
  16:     texld r3, t0, s1
  16:     mul_pp r0.w, r2.x, c4.y
  17:     mov r2.xyz, c0
  18:     mad_pp r2.xyz, c2, r3, -r2
  19:     mad_pp r2.xyz, r1.z, r2, c0
  20:     mul_pp r2.xyz, r0.w, r2
  21:     mad_pp r0.w, r1.z, -c0.w, c0.w
  22:     mul_pp r1.xyz, r3, c2
  23:     mul_pp r3.w, r3.w, c2.w
  24:     mad_pp r1.xyz, r1, r0.w, r2
  25:     mul_pp r3.xyz, r0, r1
  26:     mov_pp oC0, r3

// approximately 29 instruction slots used (2 texture, 27 arithmetic)
      ps_4_0
      dcl_constantbuffer cb0[13], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_output o0.xyzw
      dcl_temps 3
   0: dp3 r0.x, v5.xyzx, v5.xyzx
   1: rsq r0.x, r0.x
   2: mul r0.xyz, r0.xxxx, v5.xyzx
   3: dp3 r0.w, -v2.xyzx, r0.xyzx
   4: add r0.w, r0.w, r0.w
   5: mad r1.xyz, r0.xyzx, -r0.wwww, -v2.xyzx
   6: mov r2.x, v3.w
   7: mov r2.y, v4.w
   8: mov r2.z, v5.w
   9: dp3 r0.w, r1.xyzx, r2.xyzx
  10: dp3_sat r0.x, r0.xyzx, r2.xyzx
  11: mul r0.xyz, r0.xxxx, cb0[6].xyzx
  12: mul r0.w, r0.w, r0.w
  13: mul r1.x, r0.w, r0.w
  14: add r1.y, -cb0[12].w, l(1.000000)
  15: sample r1.xyzw, r1.xyxx, t1.xyzw, s0
  16: mul r0.w, r1.x, l(16.000000)
  17: sample r1.xyzw, v1.xyxx, t0.xyzw, s1
  18: mad r2.xyz, cb0[8].xyzx, r1.xyzx, -cb0[2].xyzx
  19: mad r2.xyz, cb0[12].zzzz, r2.xyzx, cb0[2].xyzx
  20: mul r2.xyz, r0.wwww, r2.xyzx
  21: mad r0.w, -cb0[12].z, cb0[2].w, cb0[2].w
  22: mul r1.xyz, r1.xyzx, cb0[8].xyzx
  23: mul o0.w, r1.w, cb0[8].w
  24: mad r1.xyz, r1.xyzx, r0.wwww, r2.xyzx
  25: mul o0.xyz, r0.xyzx, r1.xyzx
  26: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
Keywords { "SPOT" "SHADOWS_OFF" "_ALPHABLEND_ON" }
"// shader disassembly not supported on opengl"
}
SubProgram "d3d9 " {
// Stats: 34 math, 4 textures
Keywords { "SPOT" "SHADOWS_OFF" "_ALPHABLEND_ON" }
Vector 2 [_Color]
Float 4 [_Glossiness]
Vector 1 [_LightColor0]
Float 3 [_Metallic]
Vector 0 [unity_ColorSpaceDielectricSpec]
SetTexture 0 [unity_NHxRoughness] 2D 0
SetTexture 1 [_MainTex] 2D 1
SetTexture 2 [_LightTexture0] 2D 2
SetTexture 3 [_LightTextureB0] 2D 3
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   sampler2D _LightTexture0;
//   sampler2D _LightTextureB0;
//   sampler2D _MainTex;
//   float _Metallic;
//   float4 unity_ColorSpaceDielectricSpec;
//   sampler2D unity_NHxRoughness;
//
//
// Registers:
//
//   Name                           Reg   Size
//   ------------------------------ ----- ----
//   unity_ColorSpaceDielectricSpec c0       1
//   _LightColor0                   c1       1
//   _Color                         c2       1
//   _Metallic                      c3       1
//   _Glossiness                    c4       1
//   unity_NHxRoughness             s0       1
//   _MainTex                       s1       1
//   _LightTexture0                 s2       1
//   _LightTextureB0                s3       1
//

    ps_2_0
    def c5, 0.5, 1, 16, 0
    dcl t0.xy
    dcl_pp t1.xyz
    dcl_pp t2
    dcl_pp t3
    dcl_pp t4
    dcl_pp t5
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    nrm_pp r0.xyz, t4
    dp3_pp r0.w, -t1, r0
    add_pp r0.w, r0.w, r0.w
    mad_pp r1.xyz, r0, -r0.w, -t1
    mov_pp r2.x, t2.w
    mov_pp r2.y, t3.w
    mov_pp r2.z, t4.w
    dp3_pp r0.w, r1, r2
    dp3_sat_pp r0.x, r0, r2
    mul_pp r0.y, r0.w, r0.w
    mul_pp r1.x, r0.y, r0.y
    mov r0.y, c5.y
    add_pp r1.y, r0.y, -c4.x
    rcp r0.y, t5.w
    mad_pp r2.xy, t5, r0.y, c5.x
    dp3 r3.w, t5, t5
    mov r3.xy, r3.w
    texld r1, r1, s0
    texld r4, t0, s1
    texld_pp r2, r2, s2
    texld_pp r3, r3, s3
    mul_pp r0.y, r1.x, c5.z
    mov r1, c0
    mad_pp r2.xyz, c2, r4, -r1
    mad_pp r1.xyz, c3.x, r2, r1
    mul_pp r0.yzw, r0.y, r1.wzyx
    mad_pp r1.x, c3.x, -r1.w, r1.w
    mul_pp r1.yzw, r4.wzyx, c2.wzyx
    mul_pp r4.w, r4.w, c2.w
    mad_pp r0.yzw, r1, r1.x, r0
    mul r1.x, r2.w, r3.x
    mul_pp r1.xyz, r1.x, c1
    mul_pp r1.xyz, r0.x, r1
    cmp_pp r1.xyz, -t5.z, c5.w, r1
    mul_pp r4.xyz, r0.wzyx, r1
    mov_pp oC0, r4

// approximately 38 instruction slots used (4 texture, 34 arithmetic)
"
}
SubProgram "d3d11 " {
// Stats: 29 math, 4 textures
Keywords { "SPOT" "SHADOWS_OFF" "_ALPHABLEND_ON" }
SetTexture 0 [_MainTex] 2D 1
SetTexture 1 [_LightTexture0] 2D 2
SetTexture 2 [_LightTextureB0] 2D 3
SetTexture 3 [unity_NHxRoughness] 2D 0
ConstBuffer "$Globals" 304
Vector 32 [unity_ColorSpaceDielectricSpec]
Vector 96 [_LightColor0]
Vector 128 [_Color]
Float 200 [_Metallic]
Float 204 [_Glossiness]
BindCB  "$Globals" 0
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer cb0[13], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyzw
      dcl_output o0.xyzw
      dcl_temps 3
   0: dp3 r0.x, v5.xyzx, v5.xyzx
   1: rsq r0.x, r0.x
   2: mul r0.xyz, r0.xxxx, v5.xyzx
   3: dp3 r0.w, -v2.xyzx, r0.xyzx
   4: add r0.w, r0.w, r0.w
   5: mad r1.xyz, r0.xyzx, -r0.wwww, -v2.xyzx
   6: mov r2.x, v3.w
   7: mov r2.y, v4.w
   8: mov r2.z, v5.w
   9: dp3 r0.w, r1.xyzx, r2.xyzx
  10: dp3_sat r0.x, r0.xyzx, r2.xyzx
  11: mul r0.y, r0.w, r0.w
  12: mul r1.x, r0.y, r0.y
  13: add r1.y, -cb0[12].w, l(1.000000)
  14: sample r1.xyzw, r1.xyxx, t3.xyzw, s0
  15: mul r0.y, r1.x, l(16.000000)
  16: sample r1.xyzw, v1.xyxx, t0.xyzw, s1
  17: mad r2.xyz, cb0[8].xyzx, r1.xyzx, -cb0[2].xyzx
  18: mad r2.xyz, cb0[12].zzzz, r2.xyzx, cb0[2].xyzx
  19: mul r0.yzw, r0.yyyy, r2.xxyz
  20: mad r2.x, -cb0[12].z, cb0[2].w, cb0[2].w
  21: mul r1.xyz, r1.xyzx, cb0[8].xyzx
  22: mul o0.w, r1.w, cb0[8].w
  23: mad r0.yzw, r1.xxyz, r2.xxxx, r0.yyzw
  24: div r1.xy, v6.xyxx, v6.wwww
  25: add r1.xy, r1.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  26: sample r1.xyzw, r1.xyxx, t1.xyzw, s2
  27: lt r1.x, l(0.000000), v6.z
  28: and r1.x, r1.x, l(0x3f800000)
  29: mul r1.x, r1.w, r1.x
  30: dp3 r1.y, v6.xyzx, v6.xyzx
  31: sample r2.xyzw, r1.yyyy, t2.xyzw, s3
  32: mul r1.x, r1.x, r2.x
  33: mul r1.xyz, r1.xxxx, cb0[6].xyzx
  34: mul r1.xyz, r0.xxxx, r1.xyzx
  35: mul o0.xyz, r0.yzwy, r1.xyzx
  36: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "d3d11_9x " {
// Stats: 29 math, 4 textures
Keywords { "SPOT" "SHADOWS_OFF" "_ALPHABLEND_ON" }
SetTexture 0 [_MainTex] 2D 1
SetTexture 1 [_LightTexture0] 2D 2
SetTexture 2 [_LightTextureB0] 2D 3
SetTexture 3 [unity_NHxRoughness] 2D 0
ConstBuffer "$Globals" 304
Vector 32 [unity_ColorSpaceDielectricSpec]
Vector 96 [_LightColor0]
Vector 128 [_Color]
Float 200 [_Metallic]
Float 204 [_Glossiness]
BindCB  "$Globals" 0
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c0         cb0             2         1  ( FLT, FLT, FLT, FLT)
// c1         cb0             6         1  ( FLT, FLT, FLT, FLT)
// c2         cb0             8         1  ( FLT, FLT, FLT, FLT)
// c3         cb0            12         1  ( FLT, FLT, FLT, FLT)
//
//
// Sampler/Resource to DX9 shader sampler mappings:
//
// Target Sampler Source Sampler  Source Resource
// -------------- --------------- ----------------
// s0             s0              t3               
// s1             s1              t0               
// s2             s2              t1               
// s3             s3              t2               
//
//
// Level9 shader bytecode:
//
    ps_2_0
          def c4, 0.5, 1, 16, 0
          dcl t0
          dcl_pp t1.xyz
          dcl_pp t2
          dcl_pp t3
          dcl_pp t4
          dcl_pp t5
          dcl_2d s0
          dcl_2d s1
          dcl_2d s2
          dcl_2d s3
   0:     nrm_pp r0.xyz, t4
   3:     dp3_pp r0.w, -t1, r0
   4:     add_pp r0.w, r0.w, r0.w
   5:     mad_pp r1.xyz, r0, -r0.w, -t1
   6:     mov_pp r2.x, t2.w
   7:     mov_pp r2.y, t3.w
   8:     mov_pp r2.z, t4.w
   9:     dp3_pp r0.w, r1, r2
  10:     dp3_sat_pp r0.x, r0, r2
  11:     mul_pp r0.y, r0.w, r0.w
  12:     mul_pp r1.x, r0.y, r0.y
  13:     mov r0.y, c4.y
  14:     add_pp r1.y, r0.y, -c3.w
  15:     rcp r0.y, t5.w
  16:     mad_pp r2.xy, t5, r0.y, c4.x
  17:     dp3 r3.w, t5, t5
  18:     mov r3.xy, r3.w
  19:     texld r1, r1, s0
  19:     texld r4, t0, s1
  19:     texld_pp r2, r2, s2
  19:     texld_pp r3, r3, s3
  19:     mul_pp r0.y, r1.x, c4.z
  20:     mov r1, c0
  21:     mad_pp r2.xyz, c2, r4, -r1
  22:     mad_pp r1.xyz, c3.z, r2, r1
  23:     mul_pp r0.yzw, r0.y, r1.wzyx
  24:     mad_pp r1.x, c3.z, -r1.w, r1.w
  25:     mul_pp r1.yzw, r4.wzyx, c2.wzyx
  26:     mul_pp r4.w, r4.w, c2.w
  27:     mad_pp r0.yzw, r1, r1.x, r0
  28:     mul r1.x, r2.w, r3.x
  29:     mul_pp r1.xyz, r1.x, c1
  30:     mul_pp r1.xyz, r0.x, r1
  31:     cmp_pp r1.xyz, -t5.z, c4.w, r1
  32:     mul_pp r4.xyz, r0.wzyx, r1
  33:     mov_pp oC0, r4

// approximately 38 instruction slots used (4 texture, 34 arithmetic)
      ps_4_0
      dcl_constantbuffer cb0[13], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyzw
      dcl_output o0.xyzw
      dcl_temps 3
   0: dp3 r0.x, v5.xyzx, v5.xyzx
   1: rsq r0.x, r0.x
   2: mul r0.xyz, r0.xxxx, v5.xyzx
   3: dp3 r0.w, -v2.xyzx, r0.xyzx
   4: add r0.w, r0.w, r0.w
   5: mad r1.xyz, r0.xyzx, -r0.wwww, -v2.xyzx
   6: mov r2.x, v3.w
   7: mov r2.y, v4.w
   8: mov r2.z, v5.w
   9: dp3 r0.w, r1.xyzx, r2.xyzx
  10: dp3_sat r0.x, r0.xyzx, r2.xyzx
  11: mul r0.y, r0.w, r0.w
  12: mul r1.x, r0.y, r0.y
  13: add r1.y, -cb0[12].w, l(1.000000)
  14: sample r1.xyzw, r1.xyxx, t3.xyzw, s0
  15: mul r0.y, r1.x, l(16.000000)
  16: sample r1.xyzw, v1.xyxx, t0.xyzw, s1
  17: mad r2.xyz, cb0[8].xyzx, r1.xyzx, -cb0[2].xyzx
  18: mad r2.xyz, cb0[12].zzzz, r2.xyzx, cb0[2].xyzx
  19: mul r0.yzw, r0.yyyy, r2.xxyz
  20: mad r2.x, -cb0[12].z, cb0[2].w, cb0[2].w
  21: mul r1.xyz, r1.xyzx, cb0[8].xyzx
  22: mul o0.w, r1.w, cb0[8].w
  23: mad r0.yzw, r1.xxyz, r2.xxxx, r0.yyzw
  24: div r1.xy, v6.xyxx, v6.wwww
  25: add r1.xy, r1.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  26: sample r1.xyzw, r1.xyxx, t1.xyzw, s2
  27: lt r1.x, l(0.000000), v6.z
  28: and r1.x, r1.x, l(0x3f800000)
  29: mul r1.x, r1.w, r1.x
  30: dp3 r1.y, v6.xyzx, v6.xyzx
  31: sample r2.xyzw, r1.yyyy, t2.xyzw, s3
  32: mul r1.x, r1.x, r2.x
  33: mul r1.xyz, r1.xxxx, cb0[6].xyzx
  34: mul r1.xyz, r0.xxxx, r1.xyzx
  35: mul o0.xyz, r0.yzwy, r1.xyzx
  36: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
Keywords { "POINT_COOKIE" "SHADOWS_OFF" "_ALPHABLEND_ON" }
"// shader disassembly not supported on opengl"
}
SubProgram "d3d9 " {
// Stats: 30 math, 4 textures
Keywords { "POINT_COOKIE" "SHADOWS_OFF" "_ALPHABLEND_ON" }
Vector 2 [_Color]
Float 4 [_Glossiness]
Vector 1 [_LightColor0]
Float 3 [_Metallic]
Vector 0 [unity_ColorSpaceDielectricSpec]
SetTexture 0 [unity_NHxRoughness] 2D 0
SetTexture 1 [_MainTex] 2D 1
SetTexture 2 [_LightTexture0] CUBE 2
SetTexture 3 [_LightTextureB0] 2D 3
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   samplerCUBE _LightTexture0;
//   sampler2D _LightTextureB0;
//   sampler2D _MainTex;
//   float _Metallic;
//   float4 unity_ColorSpaceDielectricSpec;
//   sampler2D unity_NHxRoughness;
//
//
// Registers:
//
//   Name                           Reg   Size
//   ------------------------------ ----- ----
//   unity_ColorSpaceDielectricSpec c0       1
//   _LightColor0                   c1       1
//   _Color                         c2       1
//   _Metallic                      c3       1
//   _Glossiness                    c4       1
//   unity_NHxRoughness             s0       1
//   _MainTex                       s1       1
//   _LightTexture0                 s2       1
//   _LightTextureB0                s3       1
//

    ps_2_0
    def c5, 1, 16, 0, 0
    dcl t0.xy
    dcl_pp t1.xyz
    dcl_pp t2
    dcl_pp t3
    dcl_pp t4
    dcl t5.xyz
    dcl_2d s0
    dcl_2d s1
    dcl_cube s2
    dcl_2d s3
    nrm_pp r0.xyz, t4
    dp3_pp r0.w, -t1, r0
    add_pp r0.w, r0.w, r0.w
    mad_pp r1.xyz, r0, -r0.w, -t1
    mov_pp r2.x, t2.w
    mov_pp r2.y, t3.w
    mov_pp r2.z, t4.w
    dp3_pp r0.w, r1, r2
    dp3_sat_pp r0.x, r0, r2
    mul_pp r0.y, r0.w, r0.w
    mul_pp r1.x, r0.y, r0.y
    mov r2.x, c5.x
    add_pp r1.y, r2.x, -c4.x
    dp3 r2.xy, t5, t5
    texld r1, r1, s0
    texld r3, t0, s1
    texld r2, r2, s3
    texld r4, t5, s2
    mul_pp r0.y, r1.x, c5.y
    mov r1, c0
    mad_pp r2.yzw, c2.wzyx, r3.wzyx, -r1.wzyx
    mad_pp r1.xyz, c3.x, r2.wzyx, r1
    mul_pp r0.yzw, r0.y, r1.wzyx
    mad_pp r1.x, c3.x, -r1.w, r1.w
    mul_pp r1.yzw, r3.wzyx, c2.wzyx
    mul_pp r3.w, r3.w, c2.w
    mad_pp r0.yzw, r1, r1.x, r0
    mul_pp r1.x, r2.x, r4.w
    mul_pp r1.xyz, r1.x, c1
    mul_pp r1.xyz, r0.x, r1
    mul_pp r3.xyz, r0.wzyx, r1
    mov_pp oC0, r3

// approximately 34 instruction slots used (4 texture, 30 arithmetic)
"
}
SubProgram "d3d11 " {
// Stats: 24 math, 4 textures
Keywords { "POINT_COOKIE" "SHADOWS_OFF" "_ALPHABLEND_ON" }
SetTexture 0 [_MainTex] 2D 1
SetTexture 1 [_LightTextureB0] 2D 3
SetTexture 2 [_LightTexture0] CUBE 2
SetTexture 3 [unity_NHxRoughness] 2D 0
ConstBuffer "$Globals" 304
Vector 32 [unity_ColorSpaceDielectricSpec]
Vector 96 [_LightColor0]
Vector 128 [_Color]
Float 200 [_Metallic]
Float 204 [_Glossiness]
BindCB  "$Globals" 0
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer cb0[13], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texturecube (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 3
   0: dp3 r0.x, v5.xyzx, v5.xyzx
   1: rsq r0.x, r0.x
   2: mul r0.xyz, r0.xxxx, v5.xyzx
   3: dp3 r0.w, -v2.xyzx, r0.xyzx
   4: add r0.w, r0.w, r0.w
   5: mad r1.xyz, r0.xyzx, -r0.wwww, -v2.xyzx
   6: mov r2.x, v3.w
   7: mov r2.y, v4.w
   8: mov r2.z, v5.w
   9: dp3 r0.w, r1.xyzx, r2.xyzx
  10: dp3_sat r0.x, r0.xyzx, r2.xyzx
  11: mul r0.y, r0.w, r0.w
  12: mul r1.x, r0.y, r0.y
  13: add r1.y, -cb0[12].w, l(1.000000)
  14: sample r1.xyzw, r1.xyxx, t3.xyzw, s0
  15: mul r0.y, r1.x, l(16.000000)
  16: sample r1.xyzw, v1.xyxx, t0.xyzw, s1
  17: mad r2.xyz, cb0[8].xyzx, r1.xyzx, -cb0[2].xyzx
  18: mad r2.xyz, cb0[12].zzzz, r2.xyzx, cb0[2].xyzx
  19: mul r0.yzw, r0.yyyy, r2.xxyz
  20: mad r2.x, -cb0[12].z, cb0[2].w, cb0[2].w
  21: mul r1.xyz, r1.xyzx, cb0[8].xyzx
  22: mul o0.w, r1.w, cb0[8].w
  23: mad r0.yzw, r1.xxyz, r2.xxxx, r0.yyzw
  24: dp3 r1.x, v6.xyzx, v6.xyzx
  25: sample r1.xyzw, r1.xxxx, t1.xyzw, s3
  26: sample r2.xyzw, v6.xyzx, t2.xyzw, s2
  27: mul r1.x, r1.x, r2.w
  28: mul r1.xyz, r1.xxxx, cb0[6].xyzx
  29: mul r1.xyz, r0.xxxx, r1.xyzx
  30: mul o0.xyz, r0.yzwy, r1.xyzx
  31: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "d3d11_9x " {
// Stats: 24 math, 4 textures
Keywords { "POINT_COOKIE" "SHADOWS_OFF" "_ALPHABLEND_ON" }
SetTexture 0 [_MainTex] 2D 1
SetTexture 1 [_LightTextureB0] 2D 3
SetTexture 2 [_LightTexture0] CUBE 2
SetTexture 3 [unity_NHxRoughness] 2D 0
ConstBuffer "$Globals" 304
Vector 32 [unity_ColorSpaceDielectricSpec]
Vector 96 [_LightColor0]
Vector 128 [_Color]
Float 200 [_Metallic]
Float 204 [_Glossiness]
BindCB  "$Globals" 0
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c0         cb0             2         1  ( FLT, FLT, FLT, FLT)
// c1         cb0             6         1  ( FLT, FLT, FLT, FLT)
// c2         cb0             8         1  ( FLT, FLT, FLT, FLT)
// c3         cb0            12         1  ( FLT, FLT, FLT, FLT)
//
//
// Sampler/Resource to DX9 shader sampler mappings:
//
// Target Sampler Source Sampler  Source Resource
// -------------- --------------- ----------------
// s0             s0              t3               
// s1             s1              t0               
// s2             s2              t2               
// s3             s3              t1               
//
//
// Level9 shader bytecode:
//
    ps_2_0
          def c4, 1, 16, 0, 0
          dcl t0
          dcl_pp t1.xyz
          dcl_pp t2
          dcl_pp t3
          dcl_pp t4
          dcl t5.xyz
          dcl_2d s0
          dcl_2d s1
          dcl_cube s2
          dcl_2d s3
   0:     nrm_pp r0.xyz, t4
   3:     dp3_pp r0.w, -t1, r0
   4:     add_pp r0.w, r0.w, r0.w
   5:     mad_pp r1.xyz, r0, -r0.w, -t1
   6:     mov_pp r2.x, t2.w
   7:     mov_pp r2.y, t3.w
   8:     mov_pp r2.z, t4.w
   9:     dp3_pp r0.w, r1, r2
  10:     dp3_sat_pp r0.x, r0, r2
  11:     mul_pp r0.y, r0.w, r0.w
  12:     mul_pp r1.x, r0.y, r0.y
  13:     mov r0.zw, c3
  14:     add_pp r1.y, -r0.w, c4.x
  15:     dp3 r2.xy, t5, t5
  16:     texld r1, r1, s0
  16:     texld r3, t0, s1
  16:     texld r2, r2, s3
  16:     texld r4, t5, s2
  16:     mul_pp r0.y, r1.x, c4.y
  17:     mov r1.xyz, c0
  18:     mad_pp r1.xyz, c2, r3, -r1
  19:     mad_pp r1.xyz, r0.z, r1, c0
  20:     mul_pp r1.xyz, r0.y, r1
  21:     mad_pp r1.w, r0.z, -c0.w, c0.w
  22:     mul_pp r0.yzw, r3.wzyx, c2.wzyx
  23:     mul_pp r3.w, r3.w, c2.w
  24:     mad_pp r0.yzw, r0, r1.w, r1.wzyx
  25:     mul_pp r1.x, r2.x, r4.w
  26:     mul_pp r1.xyz, r1.x, c1
  27:     mul_pp r1.xyz, r0.x, r1
  28:     mul_pp r3.xyz, r0.wzyx, r1
  29:     mov_pp oC0, r3

// approximately 34 instruction slots used (4 texture, 30 arithmetic)
      ps_4_0
      dcl_constantbuffer cb0[13], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texturecube (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 3
   0: dp3 r0.x, v5.xyzx, v5.xyzx
   1: rsq r0.x, r0.x
   2: mul r0.xyz, r0.xxxx, v5.xyzx
   3: dp3 r0.w, -v2.xyzx, r0.xyzx
   4: add r0.w, r0.w, r0.w
   5: mad r1.xyz, r0.xyzx, -r0.wwww, -v2.xyzx
   6: mov r2.x, v3.w
   7: mov r2.y, v4.w
   8: mov r2.z, v5.w
   9: dp3 r0.w, r1.xyzx, r2.xyzx
  10: dp3_sat r0.x, r0.xyzx, r2.xyzx
  11: mul r0.y, r0.w, r0.w
  12: mul r1.x, r0.y, r0.y
  13: add r1.y, -cb0[12].w, l(1.000000)
  14: sample r1.xyzw, r1.xyxx, t3.xyzw, s0
  15: mul r0.y, r1.x, l(16.000000)
  16: sample r1.xyzw, v1.xyxx, t0.xyzw, s1
  17: mad r2.xyz, cb0[8].xyzx, r1.xyzx, -cb0[2].xyzx
  18: mad r2.xyz, cb0[12].zzzz, r2.xyzx, cb0[2].xyzx
  19: mul r0.yzw, r0.yyyy, r2.xxyz
  20: mad r2.x, -cb0[12].z, cb0[2].w, cb0[2].w
  21: mul r1.xyz, r1.xyzx, cb0[8].xyzx
  22: mul o0.w, r1.w, cb0[8].w
  23: mad r0.yzw, r1.xxyz, r2.xxxx, r0.yyzw
  24: dp3 r1.x, v6.xyzx, v6.xyzx
  25: sample r1.xyzw, r1.xxxx, t1.xyzw, s3
  26: sample r2.xyzw, v6.xyzx, t2.xyzw, s2
  27: mul r1.x, r1.x, r2.w
  28: mul r1.xyz, r1.xxxx, cb0[6].xyzx
  29: mul r1.xyz, r0.xxxx, r1.xyzx
  30: mul o0.xyz, r0.yzwy, r1.xyzx
  31: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_OFF" "_ALPHABLEND_ON" }
"// shader disassembly not supported on opengl"
}
SubProgram "d3d9 " {
// Stats: 28 math, 3 textures
Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_OFF" "_ALPHABLEND_ON" }
Vector 2 [_Color]
Float 4 [_Glossiness]
Vector 1 [_LightColor0]
Float 3 [_Metallic]
Vector 0 [unity_ColorSpaceDielectricSpec]
SetTexture 0 [unity_NHxRoughness] 2D 0
SetTexture 1 [_MainTex] 2D 1
SetTexture 2 [_LightTexture0] 2D 2
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   sampler2D _LightTexture0;
//   sampler2D _MainTex;
//   float _Metallic;
//   float4 unity_ColorSpaceDielectricSpec;
//   sampler2D unity_NHxRoughness;
//
//
// Registers:
//
//   Name                           Reg   Size
//   ------------------------------ ----- ----
//   unity_ColorSpaceDielectricSpec c0       1
//   _LightColor0                   c1       1
//   _Color                         c2       1
//   _Metallic                      c3       1
//   _Glossiness                    c4       1
//   unity_NHxRoughness             s0       1
//   _MainTex                       s1       1
//   _LightTexture0                 s2       1
//

    ps_2_0
    def c5, 1, 16, 0, 0
    dcl t0.xy
    dcl_pp t1.xyz
    dcl_pp t2
    dcl_pp t3
    dcl_pp t4
    dcl t5.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    nrm_pp r0.xyz, t4
    dp3_pp r0.w, -t1, r0
    add_pp r0.w, r0.w, r0.w
    mad_pp r1.xyz, r0, -r0.w, -t1
    mov_pp r2.x, t2.w
    mov_pp r2.y, t3.w
    mov_pp r2.z, t4.w
    dp3_pp r0.w, r1, r2
    dp3_sat_pp r0.x, r0, r2
    mul_pp r0.y, r0.w, r0.w
    mul_pp r1.x, r0.y, r0.y
    mov r2.x, c5.x
    add_pp r1.y, r2.x, -c4.x
    texld r1, r1, s0
    texld r2, t0, s1
    texld_pp r3, t5, s2
    mul_pp r0.y, r1.x, c5.y
    mov r1, c0
    mad_pp r3.xyz, c2, r2, -r1
    mad_pp r1.xyz, c3.x, r3, r1
    mul_pp r0.yzw, r0.y, r1.wzyx
    mad_pp r1.x, c3.x, -r1.w, r1.w
    mul_pp r1.yzw, r2.wzyx, c2.wzyx
    mul_pp r2.w, r2.w, c2.w
    mad_pp r0.yzw, r1, r1.x, r0
    mul_pp r1.xyz, r3.w, c1
    mul_pp r1.xyz, r0.x, r1
    mul_pp r2.xyz, r0.wzyx, r1
    mov_pp oC0, r2

// approximately 31 instruction slots used (3 texture, 28 arithmetic)
"
}
SubProgram "d3d11 " {
// Stats: 22 math, 3 textures
Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_OFF" "_ALPHABLEND_ON" }
SetTexture 0 [_MainTex] 2D 1
SetTexture 1 [_LightTexture0] 2D 2
SetTexture 2 [unity_NHxRoughness] 2D 0
ConstBuffer "$Globals" 304
Vector 32 [unity_ColorSpaceDielectricSpec]
Vector 96 [_LightColor0]
Vector 128 [_Color]
Float 200 [_Metallic]
Float 204 [_Glossiness]
BindCB  "$Globals" 0
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xy          6     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer cb0[13], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xy
      dcl_output o0.xyzw
      dcl_temps 3
   0: dp3 r0.x, v5.xyzx, v5.xyzx
   1: rsq r0.x, r0.x
   2: mul r0.xyz, r0.xxxx, v5.xyzx
   3: dp3 r0.w, -v2.xyzx, r0.xyzx
   4: add r0.w, r0.w, r0.w
   5: mad r1.xyz, r0.xyzx, -r0.wwww, -v2.xyzx
   6: mov r2.x, v3.w
   7: mov r2.y, v4.w
   8: mov r2.z, v5.w
   9: dp3 r0.w, r1.xyzx, r2.xyzx
  10: dp3_sat r0.x, r0.xyzx, r2.xyzx
  11: mul r0.y, r0.w, r0.w
  12: mul r1.x, r0.y, r0.y
  13: add r1.y, -cb0[12].w, l(1.000000)
  14: sample r1.xyzw, r1.xyxx, t2.xyzw, s0
  15: mul r0.y, r1.x, l(16.000000)
  16: sample r1.xyzw, v1.xyxx, t0.xyzw, s1
  17: mad r2.xyz, cb0[8].xyzx, r1.xyzx, -cb0[2].xyzx
  18: mad r2.xyz, cb0[12].zzzz, r2.xyzx, cb0[2].xyzx
  19: mul r0.yzw, r0.yyyy, r2.xxyz
  20: mad r2.x, -cb0[12].z, cb0[2].w, cb0[2].w
  21: mul r1.xyz, r1.xyzx, cb0[8].xyzx
  22: mul o0.w, r1.w, cb0[8].w
  23: mad r0.yzw, r1.xxyz, r2.xxxx, r0.yyzw
  24: sample r1.xyzw, v6.xyxx, t1.xyzw, s2
  25: mul r1.xyz, r1.wwww, cb0[6].xyzx
  26: mul r1.xyz, r0.xxxx, r1.xyzx
  27: mul o0.xyz, r0.yzwy, r1.xyzx
  28: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "d3d11_9x " {
// Stats: 22 math, 3 textures
Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_OFF" "_ALPHABLEND_ON" }
SetTexture 0 [_MainTex] 2D 1
SetTexture 1 [_LightTexture0] 2D 2
SetTexture 2 [unity_NHxRoughness] 2D 0
ConstBuffer "$Globals" 304
Vector 32 [unity_ColorSpaceDielectricSpec]
Vector 96 [_LightColor0]
Vector 128 [_Color]
Float 200 [_Metallic]
Float 204 [_Glossiness]
BindCB  "$Globals" 0
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xy          6     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c0         cb0             2         1  ( FLT, FLT, FLT, FLT)
// c1         cb0             6         1  ( FLT, FLT, FLT, FLT)
// c2         cb0             8         1  ( FLT, FLT, FLT, FLT)
// c3         cb0            12         1  ( FLT, FLT, FLT, FLT)
//
//
// Sampler/Resource to DX9 shader sampler mappings:
//
// Target Sampler Source Sampler  Source Resource
// -------------- --------------- ----------------
// s0             s0              t2               
// s1             s1              t0               
// s2             s2              t1               
//
//
// Level9 shader bytecode:
//
    ps_2_0
          def c4, 1, 16, 0, 0
          dcl t0
          dcl_pp t1.xyz
          dcl_pp t2
          dcl_pp t3
          dcl_pp t4
          dcl t5.xy
          dcl_2d s0
          dcl_2d s1
          dcl_2d s2
   0:     nrm_pp r0.xyz, t4
   3:     dp3_pp r0.w, -t1, r0
   4:     add_pp r0.w, r0.w, r0.w
   5:     mad_pp r1.xyz, r0, -r0.w, -t1
   6:     mov_pp r2.x, t2.w
   7:     mov_pp r2.y, t3.w
   8:     mov_pp r2.z, t4.w
   9:     dp3_pp r0.w, r1, r2
  10:     dp3_sat_pp r0.x, r0, r2
  11:     mul_pp r0.y, r0.w, r0.w
  12:     mul_pp r1.x, r0.y, r0.y
  13:     mov r0.zw, c3
  14:     add_pp r1.y, -r0.w, c4.x
  15:     texld r1, r1, s0
  15:     texld r2, t0, s1
  15:     texld_pp r3, t5, s2
  15:     mul_pp r0.y, r1.x, c4.y
  16:     mov r1.xyz, c0
  17:     mad_pp r1.xyz, c2, r2, -r1
  18:     mad_pp r1.xyz, r0.z, r1, c0
  19:     mul_pp r1.xyz, r0.y, r1
  20:     mad_pp r1.w, r0.z, -c0.w, c0.w
  21:     mul_pp r0.yzw, r2.wzyx, c2.wzyx
  22:     mul_pp r2.w, r2.w, c2.w
  23:     mad_pp r0.yzw, r0, r1.w, r1.wzyx
  24:     mul_pp r1.xyz, r3.w, c1
  25:     mul_pp r1.xyz, r0.x, r1
  26:     mul_pp r2.xyz, r0.wzyx, r1
  27:     mov_pp oC0, r2

// approximately 31 instruction slots used (3 texture, 28 arithmetic)
      ps_4_0
      dcl_constantbuffer cb0[13], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xy
      dcl_output o0.xyzw
      dcl_temps 3
   0: dp3 r0.x, v5.xyzx, v5.xyzx
   1: rsq r0.x, r0.x
   2: mul r0.xyz, r0.xxxx, v5.xyzx
   3: dp3 r0.w, -v2.xyzx, r0.xyzx
   4: add r0.w, r0.w, r0.w
   5: mad r1.xyz, r0.xyzx, -r0.wwww, -v2.xyzx
   6: mov r2.x, v3.w
   7: mov r2.y, v4.w
   8: mov r2.z, v5.w
   9: dp3 r0.w, r1.xyzx, r2.xyzx
  10: dp3_sat r0.x, r0.xyzx, r2.xyzx
  11: mul r0.y, r0.w, r0.w
  12: mul r1.x, r0.y, r0.y
  13: add r1.y, -cb0[12].w, l(1.000000)
  14: sample r1.xyzw, r1.xyxx, t2.xyzw, s0
  15: mul r0.y, r1.x, l(16.000000)
  16: sample r1.xyzw, v1.xyxx, t0.xyzw, s1
  17: mad r2.xyz, cb0[8].xyzx, r1.xyzx, -cb0[2].xyzx
  18: mad r2.xyz, cb0[12].zzzz, r2.xyzx, cb0[2].xyzx
  19: mul r0.yzw, r0.yyyy, r2.xxyz
  20: mad r2.x, -cb0[12].z, cb0[2].w, cb0[2].w
  21: mul r1.xyz, r1.xyzx, cb0[8].xyzx
  22: mul o0.w, r1.w, cb0[8].w
  23: mad r0.yzw, r1.xxyz, r2.xxxx, r0.yyzw
  24: sample r1.xyzw, v6.xyxx, t1.xyzw, s2
  25: mul r1.xyz, r1.wwww, cb0[6].xyzx
  26: mul r1.xyz, r0.xxxx, r1.xyzx
  27: mul o0.xyz, r0.yzwy, r1.xyzx
  28: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_NATIVE" "_ALPHABLEND_ON" }
"// shader disassembly not supported on opengl"
}
SubProgram "d3d9 " {
// Stats: 37 math, 5 textures
Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_NATIVE" "_ALPHABLEND_ON" }
Vector 3 [_Color]
Float 5 [_Glossiness]
Vector 2 [_LightColor0]
Vector 0 [_LightShadowData]
Float 4 [_Metallic]
Vector 1 [unity_ColorSpaceDielectricSpec]
SetTexture 0 [unity_NHxRoughness] 2D 0
SetTexture 1 [_MainTex] 2D 1
SetTexture 2 [_ShadowMapTexture] 2D 2
SetTexture 3 [_LightTexture0] 2D 3
SetTexture 4 [_LightTextureB0] 2D 4
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   float4 _LightShadowData;
//   sampler2D _LightTexture0;
//   sampler2D _LightTextureB0;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D _ShadowMapTexture;
//   float4 unity_ColorSpaceDielectricSpec;
//   sampler2D unity_NHxRoughness;
//
//
// Registers:
//
//   Name                           Reg   Size
//   ------------------------------ ----- ----
//   _LightShadowData               c0       1
//   unity_ColorSpaceDielectricSpec c1       1
//   _LightColor0                   c2       1
//   _Color                         c3       1
//   _Metallic                      c4       1
//   _Glossiness                    c5       1
//   unity_NHxRoughness             s0       1
//   _MainTex                       s1       1
//   _ShadowMapTexture              s2       1
//   _LightTexture0                 s3       1
//   _LightTextureB0                s4       1
//

    ps_2_0
    def c6, 0.5, 0, 1, 16
    dcl t0.xy
    dcl_pp t1.xyz
    dcl_pp t2
    dcl_pp t3
    dcl_pp t4
    dcl_pp t5
    dcl_pp t6
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    nrm_pp r0.xyz, t4
    dp3_pp r0.w, -t1, r0
    add_pp r0.w, r0.w, r0.w
    mad_pp r1.xyz, r0, -r0.w, -t1
    mov_pp r2.x, t2.w
    mov_pp r2.y, t3.w
    mov_pp r2.z, t4.w
    dp3_pp r0.w, r1, r2
    dp3_sat_pp r0.x, r0, r2
    mul_pp r0.y, r0.w, r0.w
    mul_pp r1.x, r0.y, r0.y
    mov r0.z, c6.z
    add_pp r1.y, r0.z, -c5.x
    rcp r0.y, t5.w
    mad_pp r2.xy, t5, r0.y, c6.x
    dp3_pp r3.w, t5, t5
    mov_pp r3.xy, r3.w
    texld r1, r1, s0
    texld r4, t0, s1
    texld_pp r2, r2, s3
    texld_pp r3, r3, s4
    texldp_pp r5, t6, s2
    mul_pp r0.y, r1.x, c6.w
    mov r1, c1
    mad_pp r2.xyz, c3, r4, -r1
    mad_pp r1.xyz, c4.x, r2, r1
    mul_pp r1.xyz, r0.y, r1
    mad_pp r1.w, c4.x, -r1.w, r1.w
    mul_pp r2.xyz, r4, c3
    mul_pp r4.w, r4.w, c3.w
    mad_pp r1.xyz, r2, r1.w, r1
    mul r1.w, r2.w, r3.x
    cmp r1.w, -t5.z, c6.y, r1.w
    lrp_pp r2.x, r5.x, r0.z, c0.x
    mul_pp r1.w, r1.w, r2.x
    mul_pp r0.yzw, r1.w, c2.wzyx
    mul_pp r0.xyz, r0.x, r0.wzyx
    mul_pp r4.xyz, r0, r1
    mov_pp oC0, r4

// approximately 41 instruction slots used (5 texture, 36 arithmetic)
"
}
SubProgram "d3d11 " {
// Stats: 33 math, 4 textures
Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_NATIVE" "_ALPHABLEND_ON" }
SetTexture 0 [_MainTex] 2D 1
SetTexture 1 [_LightTexture0] 2D 3
SetTexture 2 [_LightTextureB0] 2D 4
SetTexture 3 [unity_NHxRoughness] 2D 0
SetTexture 4 [_ShadowMapTexture] 2D 2
ConstBuffer "$Globals" 304
Vector 32 [unity_ColorSpaceDielectricSpec]
Vector 96 [_LightColor0]
Vector 128 [_Color]
Float 200 [_Metallic]
Float 204 [_Glossiness]
ConstBuffer "UnityShadows" 416
Vector 384 [_LightShadowData]
BindCB  "$Globals" 0
BindCB  "UnityShadows" 1
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer cb0[13], immediateIndexed
      dcl_constantbuffer cb1[25], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_comparison
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyzw
      dcl_input_ps linear v7.xyzw
      dcl_output o0.xyzw
      dcl_temps 3
   0: div r0.xy, v6.xyxx, v6.wwww
   1: add r0.xy, r0.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
   2: sample r0.xyzw, r0.xyxx, t1.xyzw, s3
   3: lt r0.x, l(0.000000), v6.z
   4: and r0.x, r0.x, l(0x3f800000)
   5: mul r0.x, r0.w, r0.x
   6: dp3 r0.y, v6.xyzx, v6.xyzx
   7: sample r1.xyzw, r0.yyyy, t2.xyzw, s4
   8: mul r0.x, r0.x, r1.x
   9: div r0.yzw, v7.xxyz, v7.wwww
  10: sample_c_lz r0.y, r0.yzyy, t4.xxxx, s2, r0.w
  11: add r0.z, -cb1[24].x, l(1.000000)
  12: mad r0.y, r0.y, r0.z, cb1[24].x
  13: mul r0.x, r0.y, r0.x
  14: mul r0.xyz, r0.xxxx, cb0[6].xyzx
  15: dp3 r0.w, v5.xyzx, v5.xyzx
  16: rsq r0.w, r0.w
  17: mul r1.xyz, r0.wwww, v5.xyzx
  18: mov r2.x, v3.w
  19: mov r2.y, v4.w
  20: mov r2.z, v5.w
  21: dp3_sat r0.w, r1.xyzx, r2.xyzx
  22: mul r0.xyz, r0.wwww, r0.xyzx
  23: dp3 r0.w, -v2.xyzx, r1.xyzx
  24: add r0.w, r0.w, r0.w
  25: mad r1.xyz, r1.xyzx, -r0.wwww, -v2.xyzx
  26: dp3 r0.w, r1.xyzx, r2.xyzx
  27: mul r0.w, r0.w, r0.w
  28: mul r1.x, r0.w, r0.w
  29: add r1.y, -cb0[12].w, l(1.000000)
  30: sample r1.xyzw, r1.xyxx, t3.xyzw, s0
  31: mul r0.w, r1.x, l(16.000000)
  32: sample r1.xyzw, v1.xyxx, t0.xyzw, s1
  33: mad r2.xyz, cb0[8].xyzx, r1.xyzx, -cb0[2].xyzx
  34: mad r2.xyz, cb0[12].zzzz, r2.xyzx, cb0[2].xyzx
  35: mul r2.xyz, r0.wwww, r2.xyzx
  36: mad r0.w, -cb0[12].z, cb0[2].w, cb0[2].w
  37: mul r1.xyz, r1.xyzx, cb0[8].xyzx
  38: mul o0.w, r1.w, cb0[8].w
  39: mad r1.xyz, r1.xyzx, r0.wwww, r2.xyzx
  40: mul o0.xyz, r0.xyzx, r1.xyzx
  41: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "d3d11_9x " {
// Stats: 33 math, 4 textures
Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_NATIVE" "_ALPHABLEND_ON" }
SetTexture 0 [_MainTex] 2D 1
SetTexture 1 [_LightTexture0] 2D 2
SetTexture 2 [_LightTextureB0] 2D 3
SetTexture 3 [unity_NHxRoughness] 2D 0
SetTexture 15 [_ShadowMapTexture] 2D 15
ConstBuffer "$Globals" 304
Vector 32 [unity_ColorSpaceDielectricSpec]
Vector 96 [_LightColor0]
Vector 128 [_Color]
Float 200 [_Metallic]
Float 204 [_Glossiness]
ConstBuffer "UnityShadows" 416
Vector 384 [_LightShadowData]
BindCB  "$Globals" 0
BindCB  "UnityShadows" 1
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Note: shader requires additional functionality:
//       Comparison filtering for feature level 9
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c0         cb0             2         1  ( FLT, FLT, FLT, FLT)
// c1         cb0             6         1  ( FLT, FLT, FLT, FLT)
// c2         cb0             8         1  ( FLT, FLT, FLT, FLT)
// c3         cb0            12         1  ( FLT, FLT, FLT, FLT)
// c4         cb1            24         1  ( FLT, FLT, FLT, FLT)
//
//
// Sampler/Resource to DX9 shader sampler mappings:
//
// Target Sampler Source Sampler  Source Resource
// -------------- --------------- ----------------
// s0             s15             t15              
// s1             s0              t3               
// s2             s1              t0               
// s3             s2              t1               
// s4             s3              t2               
//
//
// Level9 shader bytecode:
//
    ps_2_0
          def c5, 0.5, 1, 16, 0
          dcl t0
          dcl_pp t1.xyz
          dcl_pp t2
          dcl_pp t3
          dcl_pp t4
          dcl_pp t5
          dcl_pp t6
          dcl_2d s0
          dcl_2d s1
          dcl_2d s2
          dcl_2d s3
          dcl_2d s4
   0:     rcp r0.w, t5.w
   1:     mad_pp r0.xy, t5, r0.w, c5.x
   2:     dp3_pp r1.w, t5, t5
   3:     mov_pp r1.xy, r1.w
   4:     rcp r0.z, t6.w
   5:     mul r2.xyz, r0.z, t6
   6:     mov_pp r3.x, t2.w
   7:     mov_pp r3.y, t3.w
   8:     mov_pp r3.z, t4.w
   9:     nrm_pp r4.xyz, t4
  12:     dp3_pp r2.w, -t1, r4
  13:     add_pp r2.w, r2.w, r2.w
  14:     mad_pp r5.xyz, r4, -r2.w, -t1
  15:     dp3_pp r2.w, r5, r3
  16:     mul_pp r2.w, r2.w, r2.w
  17:     mul_pp r5.x, r2.w, r2.w
  18:     mov r2.w, c5.y
  19:     add_pp r5.y, r2.w, -c3.w
  20:     texld_pp r0, r0, s3
  20:     texld_pp r1, r1, s4
  20:     texld_pp r6, r2, s0
  20:     texld r5, r5, s1
  20:     texld r7, t0, s2
  20:     mul r3.w, r0.w, r1.x
  21:     lrp_pp r4.w, r6.x, r2.w, c4.x
  22:     mul r3.w, r3.w, r4.w
  23:     mul_pp r0.xyz, r3.w, c1
  24:     dp3_sat_pp r0.w, r4, r3
  25:     mul_pp r0.xyz, r0.w, r0
  26:     cmp_pp r0.xyz, -t5.z, c5.w, r0
  27:     mul_pp r0.w, r5.x, c5.z
  28:     mov r1, c0
  29:     mad_pp r2.xyz, c2, r7, -r1
  30:     mad_pp r1.xyz, c3.z, r2, r1
  31:     mul_pp r1.xyz, r0.w, r1
  32:     mad_pp r0.w, c3.z, -r1.w, r1.w
  33:     mul_pp r2.xyz, r7, c2
  34:     mul_pp r3.w, r7.w, c2.w
  35:     mad_pp r1.xyz, r2, r0.w, r1
  36:     mul_pp r3.xyz, r0, r1
  37:     mov_pp oC0, r3

// approximately 43 instruction slots used (5 texture, 38 arithmetic)
      ps_4_0
      dcl_constantbuffer cb0[13], immediateIndexed
      dcl_constantbuffer cb1[25], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s15, mode_comparison
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t15
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyzw
      dcl_input_ps linear v7.xyzw
      dcl_output o0.xyzw
      dcl_temps 3
   0: div r0.xy, v6.xyxx, v6.wwww
   1: add r0.xy, r0.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
   2: sample r0.xyzw, r0.xyxx, t1.xyzw, s2
   3: lt r0.x, l(0.000000), v6.z
   4: and r0.x, r0.x, l(0x3f800000)
   5: mul r0.x, r0.w, r0.x
   6: dp3 r0.y, v6.xyzx, v6.xyzx
   7: sample r1.xyzw, r0.yyyy, t2.xyzw, s3
   8: mul r0.x, r0.x, r1.x
   9: div r0.yzw, v7.xxyz, v7.wwww
  10: sample_c_lz r0.y, r0.yzyy, t15.xxxx, s15, r0.w
  11: add r0.z, -cb1[24].x, l(1.000000)
  12: mad r0.y, r0.y, r0.z, cb1[24].x
  13: mul r0.x, r0.y, r0.x
  14: mul r0.xyz, r0.xxxx, cb0[6].xyzx
  15: dp3 r0.w, v5.xyzx, v5.xyzx
  16: rsq r0.w, r0.w
  17: mul r1.xyz, r0.wwww, v5.xyzx
  18: mov r2.x, v3.w
  19: mov r2.y, v4.w
  20: mov r2.z, v5.w
  21: dp3_sat r0.w, r1.xyzx, r2.xyzx
  22: mul r0.xyz, r0.wwww, r0.xyzx
  23: dp3 r0.w, -v2.xyzx, r1.xyzx
  24: add r0.w, r0.w, r0.w
  25: mad r1.xyz, r1.xyzx, -r0.wwww, -v2.xyzx
  26: dp3 r0.w, r1.xyzx, r2.xyzx
  27: mul r0.w, r0.w, r0.w
  28: mul r1.x, r0.w, r0.w
  29: add r1.y, -cb0[12].w, l(1.000000)
  30: sample r1.xyzw, r1.xyxx, t3.xyzw, s0
  31: mul r0.w, r1.x, l(16.000000)
  32: sample r1.xyzw, v1.xyxx, t0.xyzw, s1
  33: mad r2.xyz, cb0[8].xyzx, r1.xyzx, -cb0[2].xyzx
  34: mad r2.xyz, cb0[12].zzzz, r2.xyzx, cb0[2].xyzx
  35: mul r2.xyz, r0.wwww, r2.xyzx
  36: mad r0.w, -cb0[12].z, cb0[2].w, cb0[2].w
  37: mul r1.xyz, r1.xyzx, cb0[8].xyzx
  38: mul o0.w, r1.w, cb0[8].w
  39: mad r1.xyz, r1.xyzx, r0.wwww, r2.xyzx
  40: mul o0.xyz, r0.xyzx, r1.xyzx
  41: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "_ALPHABLEND_ON" }
"// shader disassembly not supported on opengl"
}
SubProgram "d3d9 " {
// Stats: 28 math, 3 textures
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "_ALPHABLEND_ON" }
Vector 2 [_Color]
Float 4 [_Glossiness]
Vector 1 [_LightColor0]
Float 3 [_Metallic]
Vector 0 [unity_ColorSpaceDielectricSpec]
SetTexture 0 [unity_NHxRoughness] 2D 0
SetTexture 1 [_MainTex] 2D 1
SetTexture 2 [_ShadowMapTexture] 2D 2
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D _ShadowMapTexture;
//   float4 unity_ColorSpaceDielectricSpec;
//   sampler2D unity_NHxRoughness;
//
//
// Registers:
//
//   Name                           Reg   Size
//   ------------------------------ ----- ----
//   unity_ColorSpaceDielectricSpec c0       1
//   _LightColor0                   c1       1
//   _Color                         c2       1
//   _Metallic                      c3       1
//   _Glossiness                    c4       1
//   unity_NHxRoughness             s0       1
//   _MainTex                       s1       1
//   _ShadowMapTexture              s2       1
//

    ps_2_0
    def c5, 1, 16, 0, 0
    dcl t0.xy
    dcl_pp t1.xyz
    dcl_pp t2
    dcl_pp t3
    dcl_pp t4
    dcl_pp t5
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    nrm_pp r0.xyz, t4
    dp3_pp r0.w, -t1, r0
    add_pp r0.w, r0.w, r0.w
    mad_pp r1.xyz, r0, -r0.w, -t1
    mov_pp r2.x, t2.w
    mov_pp r2.y, t3.w
    mov_pp r2.z, t4.w
    dp3_pp r0.w, r1, r2
    dp3_sat_pp r0.x, r0, r2
    mul_pp r0.y, r0.w, r0.w
    mul_pp r1.x, r0.y, r0.y
    mov r2.x, c5.x
    add_pp r1.y, r2.x, -c4.x
    texld r1, r1, s0
    texld r2, t0, s1
    texldp_pp r3, t5, s2
    mul_pp r0.y, r1.x, c5.y
    mov r1, c0
    mad_pp r3.yzw, c2.wzyx, r2.wzyx, -r1.wzyx
    mad_pp r1.xyz, c3.x, r3.wzyx, r1
    mul_pp r0.yzw, r0.y, r1.wzyx
    mad_pp r1.x, c3.x, -r1.w, r1.w
    mul_pp r1.yzw, r2.wzyx, c2.wzyx
    mul_pp r2.w, r2.w, c2.w
    mad_pp r0.yzw, r1, r1.x, r0
    mul_pp r1.xyz, r3.x, c1
    mul_pp r1.xyz, r0.x, r1
    mul_pp r2.xyz, r0.wzyx, r1
    mov_pp oC0, r2

// approximately 31 instruction slots used (3 texture, 28 arithmetic)
"
}
SubProgram "d3d11 " {
// Stats: 23 math, 3 textures
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "_ALPHABLEND_ON" }
SetTexture 0 [_MainTex] 2D 1
SetTexture 1 [_ShadowMapTexture] 2D 2
SetTexture 2 [unity_NHxRoughness] 2D 0
ConstBuffer "$Globals" 240
Vector 32 [unity_ColorSpaceDielectricSpec]
Vector 96 [_LightColor0]
Vector 128 [_Color]
Float 200 [_Metallic]
Float 204 [_Glossiness]
BindCB  "$Globals" 0
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer cb0[13], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyw
      dcl_output o0.xyzw
      dcl_temps 3
   0: dp3 r0.x, v5.xyzx, v5.xyzx
   1: rsq r0.x, r0.x
   2: mul r0.xyz, r0.xxxx, v5.xyzx
   3: dp3 r0.w, -v2.xyzx, r0.xyzx
   4: add r0.w, r0.w, r0.w
   5: mad r1.xyz, r0.xyzx, -r0.wwww, -v2.xyzx
   6: mov r2.x, v3.w
   7: mov r2.y, v4.w
   8: mov r2.z, v5.w
   9: dp3 r0.w, r1.xyzx, r2.xyzx
  10: dp3_sat r0.x, r0.xyzx, r2.xyzx
  11: mul r0.y, r0.w, r0.w
  12: mul r1.x, r0.y, r0.y
  13: add r1.y, -cb0[12].w, l(1.000000)
  14: sample r1.xyzw, r1.xyxx, t2.xyzw, s0
  15: mul r0.y, r1.x, l(16.000000)
  16: sample r1.xyzw, v1.xyxx, t0.xyzw, s1
  17: mad r2.xyz, cb0[8].xyzx, r1.xyzx, -cb0[2].xyzx
  18: mad r2.xyz, cb0[12].zzzz, r2.xyzx, cb0[2].xyzx
  19: mul r0.yzw, r0.yyyy, r2.xxyz
  20: mad r2.x, -cb0[12].z, cb0[2].w, cb0[2].w
  21: mul r1.xyz, r1.xyzx, cb0[8].xyzx
  22: mul o0.w, r1.w, cb0[8].w
  23: mad r0.yzw, r1.xxyz, r2.xxxx, r0.yyzw
  24: div r1.xy, v6.xyxx, v6.wwww
  25: sample r1.xyzw, r1.xyxx, t1.xyzw, s2
  26: mul r1.xyz, r1.xxxx, cb0[6].xyzx
  27: mul r1.xyz, r0.xxxx, r1.xyzx
  28: mul o0.xyz, r0.yzwy, r1.xyzx
  29: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "d3d11_9x " {
// Stats: 23 math, 3 textures
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "_ALPHABLEND_ON" }
SetTexture 0 [_MainTex] 2D 1
SetTexture 1 [_ShadowMapTexture] 2D 2
SetTexture 2 [unity_NHxRoughness] 2D 0
ConstBuffer "$Globals" 240
Vector 32 [unity_ColorSpaceDielectricSpec]
Vector 96 [_LightColor0]
Vector 128 [_Color]
Float 200 [_Metallic]
Float 204 [_Glossiness]
BindCB  "$Globals" 0
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c0         cb0             2         1  ( FLT, FLT, FLT, FLT)
// c1         cb0             6         1  ( FLT, FLT, FLT, FLT)
// c2         cb0             8         1  ( FLT, FLT, FLT, FLT)
// c3         cb0            12         1  ( FLT, FLT, FLT, FLT)
//
//
// Sampler/Resource to DX9 shader sampler mappings:
//
// Target Sampler Source Sampler  Source Resource
// -------------- --------------- ----------------
// s0             s0              t2               
// s1             s1              t0               
// s2             s2              t1               
//
//
// Level9 shader bytecode:
//
    ps_2_0
          def c4, 1, 16, 0, 0
          dcl t0
          dcl_pp t1.xyz
          dcl_pp t2
          dcl_pp t3
          dcl_pp t4
          dcl_pp t5
          dcl_2d s0
          dcl_2d s1
          dcl_2d s2
   0:     nrm_pp r0.xyz, t4
   3:     dp3_pp r0.w, -t1, r0
   4:     add_pp r0.w, r0.w, r0.w
   5:     mad_pp r1.xyz, r0, -r0.w, -t1
   6:     mov_pp r2.x, t2.w
   7:     mov_pp r2.y, t3.w
   8:     mov_pp r2.z, t4.w
   9:     dp3_pp r0.w, r1, r2
  10:     dp3_sat_pp r0.x, r0, r2
  11:     mul_pp r0.y, r0.w, r0.w
  12:     mul_pp r1.x, r0.y, r0.y
  13:     mov r0.zw, c3
  14:     add_pp r1.y, -r0.w, c4.x
  15:     rcp r0.y, t5.w
  16:     mul_pp r2.xy, r0.y, t5
  17:     texld r1, r1, s0
  17:     texld r3, t0, s1
  17:     texld_pp r2, r2, s2
  17:     mul_pp r0.y, r1.x, c4.y
  18:     mov r1.xyz, c0
  19:     mad_pp r1.xyz, c2, r3, -r1
  20:     mad_pp r1.xyz, r0.z, r1, c0
  21:     mul_pp r1.xyz, r0.y, r1
  22:     mad_pp r1.w, r0.z, -c0.w, c0.w
  23:     mul_pp r0.yzw, r3.wzyx, c2.wzyx
  24:     mul_pp r3.w, r3.w, c2.w
  25:     mad_pp r0.yzw, r0, r1.w, r1.wzyx
  26:     mul_pp r1.xyz, r2.x, c1
  27:     mul_pp r1.xyz, r0.x, r1
  28:     mul_pp r3.xyz, r0.wzyx, r1
  29:     mov_pp oC0, r3

// approximately 33 instruction slots used (3 texture, 30 arithmetic)
      ps_4_0
      dcl_constantbuffer cb0[13], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyw
      dcl_output o0.xyzw
      dcl_temps 3
   0: dp3 r0.x, v5.xyzx, v5.xyzx
   1: rsq r0.x, r0.x
   2: mul r0.xyz, r0.xxxx, v5.xyzx
   3: dp3 r0.w, -v2.xyzx, r0.xyzx
   4: add r0.w, r0.w, r0.w
   5: mad r1.xyz, r0.xyzx, -r0.wwww, -v2.xyzx
   6: mov r2.x, v3.w
   7: mov r2.y, v4.w
   8: mov r2.z, v5.w
   9: dp3 r0.w, r1.xyzx, r2.xyzx
  10: dp3_sat r0.x, r0.xyzx, r2.xyzx
  11: mul r0.y, r0.w, r0.w
  12: mul r1.x, r0.y, r0.y
  13: add r1.y, -cb0[12].w, l(1.000000)
  14: sample r1.xyzw, r1.xyxx, t2.xyzw, s0
  15: mul r0.y, r1.x, l(16.000000)
  16: sample r1.xyzw, v1.xyxx, t0.xyzw, s1
  17: mad r2.xyz, cb0[8].xyzx, r1.xyzx, -cb0[2].xyzx
  18: mad r2.xyz, cb0[12].zzzz, r2.xyzx, cb0[2].xyzx
  19: mul r0.yzw, r0.yyyy, r2.xxyz
  20: mad r2.x, -cb0[12].z, cb0[2].w, cb0[2].w
  21: mul r1.xyz, r1.xyzx, cb0[8].xyzx
  22: mul o0.w, r1.w, cb0[8].w
  23: mad r0.yzw, r1.xxyz, r2.xxxx, r0.yyzw
  24: div r1.xy, v6.xyxx, v6.wwww
  25: sample r1.xyzw, r1.xyxx, t1.xyzw, s2
  26: mul r1.xyz, r1.xxxx, cb0[6].xyzx
  27: mul r1.xyz, r0.xxxx, r1.xyzx
  28: mul o0.xyz, r0.yzwy, r1.xyzx
  29: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" "_ALPHABLEND_ON" }
"// shader disassembly not supported on opengl"
}
SubProgram "d3d9 " {
// Stats: 29 math, 4 textures
Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" "_ALPHABLEND_ON" }
Vector 2 [_Color]
Float 4 [_Glossiness]
Vector 1 [_LightColor0]
Float 3 [_Metallic]
Vector 0 [unity_ColorSpaceDielectricSpec]
SetTexture 0 [unity_NHxRoughness] 2D 0
SetTexture 1 [_MainTex] 2D 1
SetTexture 2 [_ShadowMapTexture] 2D 2
SetTexture 3 [_LightTexture0] 2D 3
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   sampler2D _LightTexture0;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D _ShadowMapTexture;
//   float4 unity_ColorSpaceDielectricSpec;
//   sampler2D unity_NHxRoughness;
//
//
// Registers:
//
//   Name                           Reg   Size
//   ------------------------------ ----- ----
//   unity_ColorSpaceDielectricSpec c0       1
//   _LightColor0                   c1       1
//   _Color                         c2       1
//   _Metallic                      c3       1
//   _Glossiness                    c4       1
//   unity_NHxRoughness             s0       1
//   _MainTex                       s1       1
//   _ShadowMapTexture              s2       1
//   _LightTexture0                 s3       1
//

    ps_2_0
    def c5, 1, 16, 0, 0
    dcl t0.xy
    dcl_pp t1.xyz
    dcl_pp t2
    dcl_pp t3
    dcl_pp t4
    dcl t5.xy
    dcl_pp t6
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    nrm_pp r0.xyz, t4
    dp3_pp r0.w, -t1, r0
    add_pp r0.w, r0.w, r0.w
    mad_pp r1.xyz, r0, -r0.w, -t1
    mov_pp r2.x, t2.w
    mov_pp r2.y, t3.w
    mov_pp r2.z, t4.w
    dp3_pp r0.w, r1, r2
    dp3_sat_pp r0.x, r0, r2
    mul_pp r0.y, r0.w, r0.w
    mul_pp r1.x, r0.y, r0.y
    mov r2.x, c5.x
    add_pp r1.y, r2.x, -c4.x
    texld r1, r1, s0
    texld r2, t0, s1
    texld r3, t5, s3
    texldp_pp r4, t6, s2
    mul_pp r0.y, r1.x, c5.y
    mov r1, c0
    mad_pp r3.xyz, c2, r2, -r1
    mad_pp r1.xyz, c3.x, r3, r1
    mul_pp r0.yzw, r0.y, r1.wzyx
    mad_pp r1.x, c3.x, -r1.w, r1.w
    mul_pp r1.yzw, r2.wzyx, c2.wzyx
    mul_pp r2.w, r2.w, c2.w
    mad_pp r0.yzw, r1, r1.x, r0
    mul_pp r1.x, r3.w, r4.x
    mul_pp r1.xyz, r1.x, c1
    mul_pp r1.xyz, r0.x, r1
    mul_pp r2.xyz, r0.wzyx, r1
    mov_pp oC0, r2

// approximately 33 instruction slots used (4 texture, 29 arithmetic)
"
}
SubProgram "d3d11 " {
// Stats: 24 math, 4 textures
Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" "_ALPHABLEND_ON" }
SetTexture 0 [_MainTex] 2D 1
SetTexture 1 [_LightTexture0] 2D 3
SetTexture 2 [_ShadowMapTexture] 2D 2
SetTexture 3 [unity_NHxRoughness] 2D 0
ConstBuffer "$Globals" 304
Vector 32 [unity_ColorSpaceDielectricSpec]
Vector 96 [_LightColor0]
Vector 128 [_Color]
Float 200 [_Metallic]
Float 204 [_Glossiness]
BindCB  "$Globals" 0
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer cb0[13], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xy
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 3
   0: dp3 r0.x, v5.xyzx, v5.xyzx
   1: rsq r0.x, r0.x
   2: mul r0.xyz, r0.xxxx, v5.xyzx
   3: dp3 r0.w, -v2.xyzx, r0.xyzx
   4: add r0.w, r0.w, r0.w
   5: mad r1.xyz, r0.xyzx, -r0.wwww, -v2.xyzx
   6: mov r2.x, v3.w
   7: mov r2.y, v4.w
   8: mov r2.z, v5.w
   9: dp3 r0.w, r1.xyzx, r2.xyzx
  10: dp3_sat r0.x, r0.xyzx, r2.xyzx
  11: mul r0.y, r0.w, r0.w
  12: mul r1.x, r0.y, r0.y
  13: add r1.y, -cb0[12].w, l(1.000000)
  14: sample r1.xyzw, r1.xyxx, t3.xyzw, s0
  15: mul r0.y, r1.x, l(16.000000)
  16: sample r1.xyzw, v1.xyxx, t0.xyzw, s1
  17: mad r2.xyz, cb0[8].xyzx, r1.xyzx, -cb0[2].xyzx
  18: mad r2.xyz, cb0[12].zzzz, r2.xyzx, cb0[2].xyzx
  19: mul r0.yzw, r0.yyyy, r2.xxyz
  20: mad r2.x, -cb0[12].z, cb0[2].w, cb0[2].w
  21: mul r1.xyz, r1.xyzx, cb0[8].xyzx
  22: mul o0.w, r1.w, cb0[8].w
  23: mad r0.yzw, r1.xxyz, r2.xxxx, r0.yyzw
  24: div r1.xy, v7.xyxx, v7.wwww
  25: sample r1.xyzw, r1.xyxx, t2.xyzw, s2
  26: sample r2.xyzw, v6.xyxx, t1.xyzw, s3
  27: mul r1.x, r1.x, r2.w
  28: mul r1.xyz, r1.xxxx, cb0[6].xyzx
  29: mul r1.xyz, r0.xxxx, r1.xyzx
  30: mul o0.xyz, r0.yzwy, r1.xyzx
  31: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "d3d11_9x " {
// Stats: 24 math, 4 textures
Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" "_ALPHABLEND_ON" }
SetTexture 0 [_MainTex] 2D 1
SetTexture 1 [_LightTexture0] 2D 3
SetTexture 2 [_ShadowMapTexture] 2D 2
SetTexture 3 [unity_NHxRoughness] 2D 0
ConstBuffer "$Globals" 304
Vector 32 [unity_ColorSpaceDielectricSpec]
Vector 96 [_LightColor0]
Vector 128 [_Color]
Float 200 [_Metallic]
Float 204 [_Glossiness]
BindCB  "$Globals" 0
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c0         cb0             2         1  ( FLT, FLT, FLT, FLT)
// c1         cb0             6         1  ( FLT, FLT, FLT, FLT)
// c2         cb0             8         1  ( FLT, FLT, FLT, FLT)
// c3         cb0            12         1  ( FLT, FLT, FLT, FLT)
//
//
// Sampler/Resource to DX9 shader sampler mappings:
//
// Target Sampler Source Sampler  Source Resource
// -------------- --------------- ----------------
// s0             s0              t3               
// s1             s1              t0               
// s2             s2              t2               
// s3             s3              t1               
//
//
// Level9 shader bytecode:
//
    ps_2_0
          def c4, 1, 16, 0, 0
          dcl t0
          dcl_pp t1.xyz
          dcl_pp t2
          dcl_pp t3
          dcl_pp t4
          dcl t5.xy
          dcl_pp t6
          dcl_2d s0
          dcl_2d s1
          dcl_2d s2
          dcl_2d s3
   0:     nrm_pp r0.xyz, t4
   3:     dp3_pp r0.w, -t1, r0
   4:     add_pp r0.w, r0.w, r0.w
   5:     mad_pp r1.xyz, r0, -r0.w, -t1
   6:     mov_pp r2.x, t2.w
   7:     mov_pp r2.y, t3.w
   8:     mov_pp r2.z, t4.w
   9:     dp3_pp r0.w, r1, r2
  10:     dp3_sat_pp r0.x, r0, r2
  11:     mul_pp r0.y, r0.w, r0.w
  12:     mul_pp r1.x, r0.y, r0.y
  13:     mov r0.zw, c3
  14:     add_pp r1.y, -r0.w, c4.x
  15:     rcp r0.y, t6.w
  16:     mul_pp r2.xy, r0.y, t6
  17:     texld r1, r1, s0
  17:     texld r3, t0, s1
  17:     texld_pp r2, r2, s2
  17:     texld r4, t5, s3
  17:     mul_pp r0.y, r1.x, c4.y
  18:     mov r1.xyz, c0
  19:     mad_pp r1.xyz, c2, r3, -r1
  20:     mad_pp r1.xyz, r0.z, r1, c0
  21:     mul_pp r1.xyz, r0.y, r1
  22:     mad_pp r1.w, r0.z, -c0.w, c0.w
  23:     mul_pp r0.yzw, r3.wzyx, c2.wzyx
  24:     mul_pp r3.w, r3.w, c2.w
  25:     mad_pp r0.yzw, r0, r1.w, r1.wzyx
  26:     mul_pp r1.x, r2.x, r4.w
  27:     mul_pp r1.xyz, r1.x, c1
  28:     mul_pp r1.xyz, r0.x, r1
  29:     mul_pp r3.xyz, r0.wzyx, r1
  30:     mov_pp oC0, r3

// approximately 35 instruction slots used (4 texture, 31 arithmetic)
      ps_4_0
      dcl_constantbuffer cb0[13], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xy
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 3
   0: dp3 r0.x, v5.xyzx, v5.xyzx
   1: rsq r0.x, r0.x
   2: mul r0.xyz, r0.xxxx, v5.xyzx
   3: dp3 r0.w, -v2.xyzx, r0.xyzx
   4: add r0.w, r0.w, r0.w
   5: mad r1.xyz, r0.xyzx, -r0.wwww, -v2.xyzx
   6: mov r2.x, v3.w
   7: mov r2.y, v4.w
   8: mov r2.z, v5.w
   9: dp3 r0.w, r1.xyzx, r2.xyzx
  10: dp3_sat r0.x, r0.xyzx, r2.xyzx
  11: mul r0.y, r0.w, r0.w
  12: mul r1.x, r0.y, r0.y
  13: add r1.y, -cb0[12].w, l(1.000000)
  14: sample r1.xyzw, r1.xyxx, t3.xyzw, s0
  15: mul r0.y, r1.x, l(16.000000)
  16: sample r1.xyzw, v1.xyxx, t0.xyzw, s1
  17: mad r2.xyz, cb0[8].xyzx, r1.xyzx, -cb0[2].xyzx
  18: mad r2.xyz, cb0[12].zzzz, r2.xyzx, cb0[2].xyzx
  19: mul r0.yzw, r0.yyyy, r2.xxyz
  20: mad r2.x, -cb0[12].z, cb0[2].w, cb0[2].w
  21: mul r1.xyz, r1.xyzx, cb0[8].xyzx
  22: mul o0.w, r1.w, cb0[8].w
  23: mad r0.yzw, r1.xxyz, r2.xxxx, r0.yyzw
  24: div r1.xy, v7.xyxx, v7.wwww
  25: sample r1.xyzw, r1.xyxx, t2.xyzw, s2
  26: sample r2.xyzw, v6.xyxx, t1.xyzw, s3
  27: mul r1.x, r1.x, r2.w
  28: mul r1.xyz, r1.xxxx, cb0[6].xyzx
  29: mul r1.xyz, r0.xxxx, r1.xyzx
  30: mul o0.xyz, r0.yzwy, r1.xyzx
  31: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
Keywords { "POINT" "SHADOWS_CUBE" "_ALPHABLEND_ON" }
"// shader disassembly not supported on opengl"
}
SubProgram "d3d9 " {
// Stats: 36 math, 4 textures
Keywords { "POINT" "SHADOWS_CUBE" "_ALPHABLEND_ON" }
Vector 4 [_Color]
Float 6 [_Glossiness]
Vector 3 [_LightColor0]
Vector 0 [_LightPositionRange]
Vector 1 [_LightShadowData]
Float 5 [_Metallic]
Vector 2 [unity_ColorSpaceDielectricSpec]
SetTexture 0 [unity_NHxRoughness] 2D 0
SetTexture 1 [_MainTex] 2D 1
SetTexture 2 [_ShadowMapTexture] CUBE 2
SetTexture 3 [_LightTexture0] 2D 3
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   float4 _LightPositionRange;
//   float4 _LightShadowData;
//   sampler2D _LightTexture0;
//   sampler2D _MainTex;
//   float _Metallic;
//   samplerCUBE _ShadowMapTexture;
//   float4 unity_ColorSpaceDielectricSpec;
//   sampler2D unity_NHxRoughness;
//
//
// Registers:
//
//   Name                           Reg   Size
//   ------------------------------ ----- ----
//   _LightPositionRange            c0       1
//   _LightShadowData               c1       1
//   unity_ColorSpaceDielectricSpec c2       1
//   _LightColor0                   c3       1
//   _Color                         c4       1
//   _Metallic                      c5       1
//   _Glossiness                    c6       1
//   unity_NHxRoughness             s0       1
//   _MainTex                       s1       1
//   _ShadowMapTexture              s2       1
//   _LightTexture0                 s3       1
//

    ps_2_0
    def c7, 0.970000029, 1, 16, 0
    dcl t0.xy
    dcl_pp t1.xyz
    dcl_pp t2
    dcl_pp t3
    dcl_pp t4
    dcl t5.xyz
    dcl t6.xyz
    dcl_2d s0
    dcl_2d s1
    dcl_cube s2
    dcl_2d s3
    nrm_pp r0.xyz, t4
    dp3_pp r0.w, -t1, r0
    add_pp r0.w, r0.w, r0.w
    mad_pp r1.xyz, r0, -r0.w, -t1
    mov_pp r2.x, t2.w
    mov_pp r2.y, t3.w
    mov_pp r2.z, t4.w
    dp3_pp r0.w, r1, r2
    dp3_sat_pp r0.x, r0, r2
    mul_pp r0.y, r0.w, r0.w
    mul_pp r1.x, r0.y, r0.y
    mov r0.y, c7.y
    add_pp r1.y, r0.y, -c6.x
    dp3 r2.xy, t5, t5
    texld r1, r1, s0
    texld r3, t0, s1
    texld r4, t6, s2
    texld r2, r2, s3
    mul_pp r0.z, r1.x, c7.z
    mov r1, c2
    mad_pp r2.yzw, c4.wzyx, r3.wzyx, -r1.wzyx
    mad_pp r1.xyz, c5.x, r2.wzyx, r1
    mul_pp r1.xyz, r0.z, r1
    mad_pp r1.w, c5.x, -r1.w, r1.w
    mul_pp r2.yzw, r3.wzyx, c4.wzyx
    mul_pp r3.w, r3.w, c4.w
    mad_pp r1.xyz, r2.wzyx, r1.w, r1
    dp3 r1.w, t6, t6
    rsq r1.w, r1.w
    rcp r1.w, r1.w
    mul r1.w, r1.w, c0.w
    mad r1.w, r1.w, -c7.x, r4.x
    cmp_pp r1.w, r1.w, r0.y, c1.x
    mul_pp r1.w, r1.w, r2.x
    mul_pp r0.yzw, r1.w, c3.wzyx
    mul_pp r0.xyz, r0.x, r0.wzyx
    mul_pp r3.xyz, r0, r1
    mov_pp oC0, r3

// approximately 40 instruction slots used (4 texture, 36 arithmetic)
"
}
SubProgram "d3d11 " {
// Stats: 29 math, 4 textures
Keywords { "POINT" "SHADOWS_CUBE" "_ALPHABLEND_ON" }
SetTexture 0 [_MainTex] 2D 1
SetTexture 1 [_LightTexture0] 2D 3
SetTexture 2 [_ShadowMapTexture] CUBE 2
SetTexture 3 [unity_NHxRoughness] 2D 0
ConstBuffer "$Globals" 304
Vector 32 [unity_ColorSpaceDielectricSpec]
Vector 96 [_LightColor0]
Vector 128 [_Color]
Float 200 [_Metallic]
Float 204 [_Glossiness]
ConstBuffer "UnityLighting" 720
Vector 16 [_LightPositionRange]
ConstBuffer "UnityShadows" 416
Vector 384 [_LightShadowData]
BindCB  "$Globals" 0
BindCB  "UnityLighting" 1
BindCB  "UnityShadows" 2
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer cb0[13], immediateIndexed
      dcl_constantbuffer cb1[2], immediateIndexed
      dcl_constantbuffer cb2[25], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texturecube (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 3
   0: dp3 r0.x, v5.xyzx, v5.xyzx
   1: rsq r0.x, r0.x
   2: mul r0.xyz, r0.xxxx, v5.xyzx
   3: dp3 r0.w, -v2.xyzx, r0.xyzx
   4: add r0.w, r0.w, r0.w
   5: mad r1.xyz, r0.xyzx, -r0.wwww, -v2.xyzx
   6: mov r2.x, v3.w
   7: mov r2.y, v4.w
   8: mov r2.z, v5.w
   9: dp3 r0.w, r1.xyzx, r2.xyzx
  10: dp3_sat r0.x, r0.xyzx, r2.xyzx
  11: mul r0.y, r0.w, r0.w
  12: mul r1.x, r0.y, r0.y
  13: add r1.y, -cb0[12].w, l(1.000000)
  14: sample r1.xyzw, r1.xyxx, t3.xyzw, s0
  15: mul r0.y, r1.x, l(16.000000)
  16: sample r1.xyzw, v1.xyxx, t0.xyzw, s1
  17: mad r2.xyz, cb0[8].xyzx, r1.xyzx, -cb0[2].xyzx
  18: mad r2.xyz, cb0[12].zzzz, r2.xyzx, cb0[2].xyzx
  19: mul r0.yzw, r0.yyyy, r2.xxyz
  20: mad r2.x, -cb0[12].z, cb0[2].w, cb0[2].w
  21: mul r1.xyz, r1.xyzx, cb0[8].xyzx
  22: mul o0.w, r1.w, cb0[8].w
  23: mad r0.yzw, r1.xxyz, r2.xxxx, r0.yyzw
  24: dp3 r1.x, v7.xyzx, v7.xyzx
  25: sqrt r1.x, r1.x
  26: mul r1.x, r1.x, cb1[1].w
  27: mul r1.x, r1.x, l(0.970000)
  28: sample r2.xyzw, v7.xyzx, t2.xyzw, s2
  29: lt r1.x, r2.x, r1.x
  30: movc r1.x, r1.x, cb2[24].x, l(1.000000)
  31: dp3 r1.y, v6.xyzx, v6.xyzx
  32: sample r2.xyzw, r1.yyyy, t1.xyzw, s3
  33: mul r1.x, r1.x, r2.x
  34: mul r1.xyz, r1.xxxx, cb0[6].xyzx
  35: mul r1.xyz, r0.xxxx, r1.xyzx
  36: mul o0.xyz, r0.yzwy, r1.xyzx
  37: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "d3d11_9x " {
// Stats: 29 math, 4 textures
Keywords { "POINT" "SHADOWS_CUBE" "_ALPHABLEND_ON" }
SetTexture 0 [_MainTex] 2D 1
SetTexture 1 [_LightTexture0] 2D 3
SetTexture 2 [_ShadowMapTexture] CUBE 2
SetTexture 3 [unity_NHxRoughness] 2D 0
ConstBuffer "$Globals" 304
Vector 32 [unity_ColorSpaceDielectricSpec]
Vector 96 [_LightColor0]
Vector 128 [_Color]
Float 200 [_Metallic]
Float 204 [_Glossiness]
ConstBuffer "UnityLighting" 720
Vector 16 [_LightPositionRange]
ConstBuffer "UnityShadows" 416
Vector 384 [_LightShadowData]
BindCB  "$Globals" 0
BindCB  "UnityLighting" 1
BindCB  "UnityShadows" 2
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c0         cb0             2         1  ( FLT, FLT, FLT, FLT)
// c1         cb0             6         1  ( FLT, FLT, FLT, FLT)
// c2         cb0             8         1  ( FLT, FLT, FLT, FLT)
// c3         cb0            12         1  ( FLT, FLT, FLT, FLT)
// c4         cb1             1         1  ( FLT, FLT, FLT, FLT)
// c5         cb2            24         1  ( FLT, FLT, FLT, FLT)
//
//
// Sampler/Resource to DX9 shader sampler mappings:
//
// Target Sampler Source Sampler  Source Resource
// -------------- --------------- ----------------
// s0             s0              t3               
// s1             s1              t0               
// s2             s2              t2               
// s3             s3              t1               
//
//
// Level9 shader bytecode:
//
    ps_2_0
          def c6, 0.970000029, 1, 16, 0
          dcl t0
          dcl_pp t1.xyz
          dcl_pp t2
          dcl_pp t3
          dcl_pp t4
          dcl t5.xyz
          dcl t6.xyz
          dcl_2d s0
          dcl_2d s1
          dcl_cube s2
          dcl_2d s3
   0:     nrm_pp r0.xyz, t4
   3:     dp3_pp r0.w, -t1, r0
   4:     add_pp r0.w, r0.w, r0.w
   5:     mad_pp r1.xyz, r0, -r0.w, -t1
   6:     mov_pp r2.x, t2.w
   7:     mov_pp r2.y, t3.w
   8:     mov_pp r2.z, t4.w
   9:     dp3_pp r0.w, r1, r2
  10:     dp3_sat_pp r0.x, r0, r2
  11:     mul_pp r0.y, r0.w, r0.w
  12:     mul_pp r1.x, r0.y, r0.y
  13:     mov r0.zw, c3
  14:     add_pp r1.y, -r0.w, c6.y
  15:     dp3 r2.xy, t5, t5
  16:     texld r1, r1, s0
  16:     texld r3, t0, s1
  16:     texld r4, t6, s2
  16:     texld r2, r2, s3
  16:     mul_pp r0.y, r1.x, c6.z
  17:     mov r1.xyz, c0
  18:     mad_pp r1.xyz, c2, r3, -r1
  19:     mad_pp r1.xyz, r0.z, r1, c0
  20:     mul_pp r1.xyz, r0.y, r1
  21:     mad_pp r1.w, r0.z, -c0.w, c0.w
  22:     mul_pp r0.yzw, r3.wzyx, c2.wzyx
  23:     mul_pp r3.w, r3.w, c2.w
  24:     mad_pp r0.yzw, r0, r1.w, r1.wzyx
  25:     dp3 r1.x, t6, t6
  26:     rsq r1.x, r1.x
  27:     rcp r1.x, r1.x
  28:     mul r1.x, r1.x, c4.w
  29:     mad r1.x, r1.x, -c6.x, r4.x
  30:     mov r1.y, c6.y
  31:     cmp_pp r1.x, r1.x, r1.y, c5.x
  32:     mul_pp r1.x, r1.x, r2.x
  33:     mul_pp r1.xyz, r1.x, c1
  34:     mul_pp r1.xyz, r0.x, r1
  35:     mul_pp r3.xyz, r0.wzyx, r1
  36:     mov_pp oC0, r3

// approximately 41 instruction slots used (4 texture, 37 arithmetic)
      ps_4_0
      dcl_constantbuffer cb0[13], immediateIndexed
      dcl_constantbuffer cb1[2], immediateIndexed
      dcl_constantbuffer cb2[25], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texturecube (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 3
   0: dp3 r0.x, v5.xyzx, v5.xyzx
   1: rsq r0.x, r0.x
   2: mul r0.xyz, r0.xxxx, v5.xyzx
   3: dp3 r0.w, -v2.xyzx, r0.xyzx
   4: add r0.w, r0.w, r0.w
   5: mad r1.xyz, r0.xyzx, -r0.wwww, -v2.xyzx
   6: mov r2.x, v3.w
   7: mov r2.y, v4.w
   8: mov r2.z, v5.w
   9: dp3 r0.w, r1.xyzx, r2.xyzx
  10: dp3_sat r0.x, r0.xyzx, r2.xyzx
  11: mul r0.y, r0.w, r0.w
  12: mul r1.x, r0.y, r0.y
  13: add r1.y, -cb0[12].w, l(1.000000)
  14: sample r1.xyzw, r1.xyxx, t3.xyzw, s0
  15: mul r0.y, r1.x, l(16.000000)
  16: sample r1.xyzw, v1.xyxx, t0.xyzw, s1
  17: mad r2.xyz, cb0[8].xyzx, r1.xyzx, -cb0[2].xyzx
  18: mad r2.xyz, cb0[12].zzzz, r2.xyzx, cb0[2].xyzx
  19: mul r0.yzw, r0.yyyy, r2.xxyz
  20: mad r2.x, -cb0[12].z, cb0[2].w, cb0[2].w
  21: mul r1.xyz, r1.xyzx, cb0[8].xyzx
  22: mul o0.w, r1.w, cb0[8].w
  23: mad r0.yzw, r1.xxyz, r2.xxxx, r0.yyzw
  24: dp3 r1.x, v7.xyzx, v7.xyzx
  25: sqrt r1.x, r1.x
  26: mul r1.x, r1.x, cb1[1].w
  27: mul r1.x, r1.x, l(0.970000)
  28: sample r2.xyzw, v7.xyzx, t2.xyzw, s2
  29: lt r1.x, r2.x, r1.x
  30: movc r1.x, r1.x, cb2[24].x, l(1.000000)
  31: dp3 r1.y, v6.xyzx, v6.xyzx
  32: sample r2.xyzw, r1.yyyy, t1.xyzw, s3
  33: mul r1.x, r1.x, r2.x
  34: mul r1.xyz, r1.xxxx, cb0[6].xyzx
  35: mul r1.xyz, r0.xxxx, r1.xyzx
  36: mul o0.xyz, r0.yzwy, r1.xyzx
  37: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "_ALPHABLEND_ON" }
"// shader disassembly not supported on opengl"
}
SubProgram "d3d9 " {
// Stats: 37 math, 5 textures
Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "_ALPHABLEND_ON" }
Vector 4 [_Color]
Float 6 [_Glossiness]
Vector 3 [_LightColor0]
Vector 0 [_LightPositionRange]
Vector 1 [_LightShadowData]
Float 5 [_Metallic]
Vector 2 [unity_ColorSpaceDielectricSpec]
SetTexture 0 [unity_NHxRoughness] 2D 0
SetTexture 1 [_MainTex] 2D 1
SetTexture 2 [_ShadowMapTexture] CUBE 2
SetTexture 3 [_LightTexture0] CUBE 3
SetTexture 4 [_LightTextureB0] 2D 4
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   float4 _LightPositionRange;
//   float4 _LightShadowData;
//   samplerCUBE _LightTexture0;
//   sampler2D _LightTextureB0;
//   sampler2D _MainTex;
//   float _Metallic;
//   samplerCUBE _ShadowMapTexture;
//   float4 unity_ColorSpaceDielectricSpec;
//   sampler2D unity_NHxRoughness;
//
//
// Registers:
//
//   Name                           Reg   Size
//   ------------------------------ ----- ----
//   _LightPositionRange            c0       1
//   _LightShadowData               c1       1
//   unity_ColorSpaceDielectricSpec c2       1
//   _LightColor0                   c3       1
//   _Color                         c4       1
//   _Metallic                      c5       1
//   _Glossiness                    c6       1
//   unity_NHxRoughness             s0       1
//   _MainTex                       s1       1
//   _ShadowMapTexture              s2       1
//   _LightTexture0                 s3       1
//   _LightTextureB0                s4       1
//

    ps_2_0
    def c7, 0.970000029, 1, 16, 0
    dcl t0.xy
    dcl_pp t1.xyz
    dcl_pp t2
    dcl_pp t3
    dcl_pp t4
    dcl t5.xyz
    dcl t6.xyz
    dcl_2d s0
    dcl_2d s1
    dcl_cube s2
    dcl_cube s3
    dcl_2d s4
    nrm_pp r0.xyz, t4
    dp3_pp r0.w, -t1, r0
    add_pp r0.w, r0.w, r0.w
    mad_pp r1.xyz, r0, -r0.w, -t1
    mov_pp r2.x, t2.w
    mov_pp r2.y, t3.w
    mov_pp r2.z, t4.w
    dp3_pp r0.w, r1, r2
    dp3_sat_pp r0.x, r0, r2
    mul_pp r0.y, r0.w, r0.w
    mul_pp r1.x, r0.y, r0.y
    mov r0.y, c7.y
    add_pp r1.y, r0.y, -c6.x
    dp3 r2.xy, t5, t5
    texld r1, r1, s0
    texld r3, t0, s1
    texld r4, t6, s2
    texld r2, r2, s4
    texld r5, t5, s3
    mul_pp r0.z, r1.x, c7.z
    mov r1, c2
    mad_pp r2.yzw, c4.wzyx, r3.wzyx, -r1.wzyx
    mad_pp r1.xyz, c5.x, r2.wzyx, r1
    mul_pp r1.xyz, r0.z, r1
    mad_pp r1.w, c5.x, -r1.w, r1.w
    mul_pp r2.yzw, r3.wzyx, c4.wzyx
    mul_pp r3.w, r3.w, c4.w
    mad_pp r1.xyz, r2.wzyx, r1.w, r1
    dp3 r1.w, t6, t6
    rsq r1.w, r1.w
    rcp r1.w, r1.w
    mul r1.w, r1.w, c0.w
    mad r1.w, r1.w, -c7.x, r4.x
    cmp_pp r1.w, r1.w, r0.y, c1.x
    mul r0.y, r2.x, r5.w
    mul_pp r1.w, r1.w, r0.y
    mul_pp r0.yzw, r1.w, c3.wzyx
    mul_pp r0.xyz, r0.x, r0.wzyx
    mul_pp r3.xyz, r0, r1
    mov_pp oC0, r3

// approximately 42 instruction slots used (5 texture, 37 arithmetic)
"
}
SubProgram "d3d11 " {
// Stats: 30 math, 5 textures
Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "_ALPHABLEND_ON" }
SetTexture 0 [_MainTex] 2D 1
SetTexture 1 [_LightTextureB0] 2D 4
SetTexture 2 [_LightTexture0] CUBE 3
SetTexture 3 [_ShadowMapTexture] CUBE 2
SetTexture 4 [unity_NHxRoughness] 2D 0
ConstBuffer "$Globals" 304
Vector 32 [unity_ColorSpaceDielectricSpec]
Vector 96 [_LightColor0]
Vector 128 [_Color]
Float 200 [_Metallic]
Float 204 [_Glossiness]
ConstBuffer "UnityLighting" 720
Vector 16 [_LightPositionRange]
ConstBuffer "UnityShadows" 416
Vector 384 [_LightShadowData]
BindCB  "$Globals" 0
BindCB  "UnityLighting" 1
BindCB  "UnityShadows" 2
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer cb0[13], immediateIndexed
      dcl_constantbuffer cb1[2], immediateIndexed
      dcl_constantbuffer cb2[25], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texturecube (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 4
   0: dp3 r0.x, v5.xyzx, v5.xyzx
   1: rsq r0.x, r0.x
   2: mul r0.xyz, r0.xxxx, v5.xyzx
   3: dp3 r0.w, -v2.xyzx, r0.xyzx
   4: add r0.w, r0.w, r0.w
   5: mad r1.xyz, r0.xyzx, -r0.wwww, -v2.xyzx
   6: mov r2.x, v3.w
   7: mov r2.y, v4.w
   8: mov r2.z, v5.w
   9: dp3 r0.w, r1.xyzx, r2.xyzx
  10: dp3_sat r0.x, r0.xyzx, r2.xyzx
  11: mul r0.y, r0.w, r0.w
  12: mul r1.x, r0.y, r0.y
  13: add r1.y, -cb0[12].w, l(1.000000)
  14: sample r1.xyzw, r1.xyxx, t4.xyzw, s0
  15: mul r0.y, r1.x, l(16.000000)
  16: sample r1.xyzw, v1.xyxx, t0.xyzw, s1
  17: mad r2.xyz, cb0[8].xyzx, r1.xyzx, -cb0[2].xyzx
  18: mad r2.xyz, cb0[12].zzzz, r2.xyzx, cb0[2].xyzx
  19: mul r0.yzw, r0.yyyy, r2.xxyz
  20: mad r2.x, -cb0[12].z, cb0[2].w, cb0[2].w
  21: mul r1.xyz, r1.xyzx, cb0[8].xyzx
  22: mul o0.w, r1.w, cb0[8].w
  23: mad r0.yzw, r1.xxyz, r2.xxxx, r0.yyzw
  24: dp3 r1.x, v7.xyzx, v7.xyzx
  25: sqrt r1.x, r1.x
  26: mul r1.x, r1.x, cb1[1].w
  27: mul r1.x, r1.x, l(0.970000)
  28: sample r2.xyzw, v7.xyzx, t3.xyzw, s2
  29: lt r1.x, r2.x, r1.x
  30: movc r1.x, r1.x, cb2[24].x, l(1.000000)
  31: dp3 r1.y, v6.xyzx, v6.xyzx
  32: sample r2.xyzw, r1.yyyy, t1.xyzw, s4
  33: sample r3.xyzw, v6.xyzx, t2.xyzw, s3
  34: mul r1.y, r2.x, r3.w
  35: mul r1.x, r1.x, r1.y
  36: mul r1.xyz, r1.xxxx, cb0[6].xyzx
  37: mul r1.xyz, r0.xxxx, r1.xyzx
  38: mul o0.xyz, r0.yzwy, r1.xyzx
  39: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "d3d11_9x " {
// Stats: 30 math, 5 textures
Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "_ALPHABLEND_ON" }
SetTexture 0 [_MainTex] 2D 1
SetTexture 1 [_LightTextureB0] 2D 4
SetTexture 2 [_LightTexture0] CUBE 3
SetTexture 3 [_ShadowMapTexture] CUBE 2
SetTexture 4 [unity_NHxRoughness] 2D 0
ConstBuffer "$Globals" 304
Vector 32 [unity_ColorSpaceDielectricSpec]
Vector 96 [_LightColor0]
Vector 128 [_Color]
Float 200 [_Metallic]
Float 204 [_Glossiness]
ConstBuffer "UnityLighting" 720
Vector 16 [_LightPositionRange]
ConstBuffer "UnityShadows" 416
Vector 384 [_LightShadowData]
BindCB  "$Globals" 0
BindCB  "UnityLighting" 1
BindCB  "UnityShadows" 2
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c0         cb0             2         1  ( FLT, FLT, FLT, FLT)
// c1         cb0             6         1  ( FLT, FLT, FLT, FLT)
// c2         cb0             8         1  ( FLT, FLT, FLT, FLT)
// c3         cb0            12         1  ( FLT, FLT, FLT, FLT)
// c4         cb1             1         1  ( FLT, FLT, FLT, FLT)
// c5         cb2            24         1  ( FLT, FLT, FLT, FLT)
//
//
// Sampler/Resource to DX9 shader sampler mappings:
//
// Target Sampler Source Sampler  Source Resource
// -------------- --------------- ----------------
// s0             s0              t4               
// s1             s1              t0               
// s2             s2              t3               
// s3             s3              t2               
// s4             s4              t1               
//
//
// Level9 shader bytecode:
//
    ps_2_0
          def c6, 0.970000029, 1, 16, 0
          dcl t0
          dcl_pp t1.xyz
          dcl_pp t2
          dcl_pp t3
          dcl_pp t4
          dcl t5.xyz
          dcl t6.xyz
          dcl_2d s0
          dcl_2d s1
          dcl_cube s2
          dcl_cube s3
          dcl_2d s4
   0:     nrm_pp r0.xyz, t4
   3:     dp3_pp r0.w, -t1, r0
   4:     add_pp r0.w, r0.w, r0.w
   5:     mad_pp r1.xyz, r0, -r0.w, -t1
   6:     mov_pp r2.x, t2.w
   7:     mov_pp r2.y, t3.w
   8:     mov_pp r2.z, t4.w
   9:     dp3_pp r0.w, r1, r2
  10:     dp3_sat_pp r0.x, r0, r2
  11:     mul_pp r0.y, r0.w, r0.w
  12:     mul_pp r1.x, r0.y, r0.y
  13:     mov r0.zw, c3
  14:     add_pp r1.y, -r0.w, c6.y
  15:     dp3 r2.xy, t5, t5
  16:     texld r1, r1, s0
  16:     texld r3, t0, s1
  16:     texld r4, t6, s2
  16:     texld r2, r2, s4
  16:     texld r5, t5, s3
  16:     mul_pp r0.y, r1.x, c6.z
  17:     mov r1.xyz, c0
  18:     mad_pp r1.xyz, c2, r3, -r1
  19:     mad_pp r1.xyz, r0.z, r1, c0
  20:     mul_pp r1.xyz, r0.y, r1
  21:     mad_pp r1.w, r0.z, -c0.w, c0.w
  22:     mul_pp r0.yzw, r3.wzyx, c2.wzyx
  23:     mul_pp r3.w, r3.w, c2.w
  24:     mad_pp r0.yzw, r0, r1.w, r1.wzyx
  25:     dp3 r1.x, t6, t6
  26:     rsq r1.x, r1.x
  27:     rcp r1.x, r1.x
  28:     mul r1.x, r1.x, c4.w
  29:     mad r1.x, r1.x, -c6.x, r4.x
  30:     mov r1.y, c6.y
  31:     cmp_pp r1.x, r1.x, r1.y, c5.x
  32:     mul r1.y, r2.x, r5.w
  33:     mul_pp r1.x, r1.x, r1.y
  34:     mul_pp r1.xyz, r1.x, c1
  35:     mul_pp r1.xyz, r0.x, r1
  36:     mul_pp r3.xyz, r0.wzyx, r1
  37:     mov_pp oC0, r3

// approximately 43 instruction slots used (5 texture, 38 arithmetic)
      ps_4_0
      dcl_constantbuffer cb0[13], immediateIndexed
      dcl_constantbuffer cb1[2], immediateIndexed
      dcl_constantbuffer cb2[25], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texturecube (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 4
   0: dp3 r0.x, v5.xyzx, v5.xyzx
   1: rsq r0.x, r0.x
   2: mul r0.xyz, r0.xxxx, v5.xyzx
   3: dp3 r0.w, -v2.xyzx, r0.xyzx
   4: add r0.w, r0.w, r0.w
   5: mad r1.xyz, r0.xyzx, -r0.wwww, -v2.xyzx
   6: mov r2.x, v3.w
   7: mov r2.y, v4.w
   8: mov r2.z, v5.w
   9: dp3 r0.w, r1.xyzx, r2.xyzx
  10: dp3_sat r0.x, r0.xyzx, r2.xyzx
  11: mul r0.y, r0.w, r0.w
  12: mul r1.x, r0.y, r0.y
  13: add r1.y, -cb0[12].w, l(1.000000)
  14: sample r1.xyzw, r1.xyxx, t4.xyzw, s0
  15: mul r0.y, r1.x, l(16.000000)
  16: sample r1.xyzw, v1.xyxx, t0.xyzw, s1
  17: mad r2.xyz, cb0[8].xyzx, r1.xyzx, -cb0[2].xyzx
  18: mad r2.xyz, cb0[12].zzzz, r2.xyzx, cb0[2].xyzx
  19: mul r0.yzw, r0.yyyy, r2.xxyz
  20: mad r2.x, -cb0[12].z, cb0[2].w, cb0[2].w
  21: mul r1.xyz, r1.xyzx, cb0[8].xyzx
  22: mul o0.w, r1.w, cb0[8].w
  23: mad r0.yzw, r1.xxyz, r2.xxxx, r0.yyzw
  24: dp3 r1.x, v7.xyzx, v7.xyzx
  25: sqrt r1.x, r1.x
  26: mul r1.x, r1.x, cb1[1].w
  27: mul r1.x, r1.x, l(0.970000)
  28: sample r2.xyzw, v7.xyzx, t3.xyzw, s2
  29: lt r1.x, r2.x, r1.x
  30: movc r1.x, r1.x, cb2[24].x, l(1.000000)
  31: dp3 r1.y, v6.xyzx, v6.xyzx
  32: sample r2.xyzw, r1.yyyy, t1.xyzw, s4
  33: sample r3.xyzw, v6.xyzx, t2.xyzw, s3
  34: mul r1.y, r2.x, r3.w
  35: mul r1.x, r1.x, r1.y
  36: mul r1.xyz, r1.xxxx, cb0[6].xyzx
  37: mul r1.xyz, r0.xxxx, r1.xyzx
  38: mul o0.xyz, r0.yzwy, r1.xyzx
  39: ret 
// Approximately 0 instruction slots used
"
}
}
 }


 // Stats for Vertex shader:
 //       d3d11 : 25 avg math (9..42)
 //    d3d11_9x : 25 avg math (9..42)
 //        d3d9 : 26 avg math (8..44)
 //      opengl : 4 avg math (1..7), 1 avg texture (0..2), 0 avg branch (0..1)
 // Stats for Fragment shader:
 //       d3d11 : 4 avg math (2..6), 0 avg texture (0..1)
 //    d3d11_9x : 4 avg math (2..6), 0 avg texture (0..1)
 //        d3d9 : 5 avg math (3..8), 1 avg texture (0..2)
 Pass {
  Name "SHADOWCASTER"
  Tags { "LIGHTMODE"="SHADOWCASTER" "SHADOWSUPPORT"="true" "RenderType"="Opaque" "PerformanceChecks"="False" }
  GpuProgramID 488501
Program "vp" {
SubProgram "opengl " {
// Stats: 1 math
Keywords { "SHADOWS_DEPTH" }
"#version 120

#ifdef VERTEX
uniform vec4 _WorldSpaceLightPos0;
uniform vec4 unity_LightShadowBias;

uniform mat4 _Object2World;
uniform mat4 _World2Object;
uniform mat4 unity_MatrixVP;
void main ()
{
  vec3 vertex_1;
  vertex_1 = gl_Vertex.xyz;
  vec4 clipPos_2;
  if ((unity_LightShadowBias.z != 0.0)) {
    vec4 tmpvar_3;
    tmpvar_3.w = 1.0;
    tmpvar_3.xyz = vertex_1;
    vec3 tmpvar_4;
    tmpvar_4 = (_Object2World * tmpvar_3).xyz;
    vec4 v_5;
    v_5.x = _World2Object[0].x;
    v_5.y = _World2Object[1].x;
    v_5.z = _World2Object[2].x;
    v_5.w = _World2Object[3].x;
    vec4 v_6;
    v_6.x = _World2Object[0].y;
    v_6.y = _World2Object[1].y;
    v_6.z = _World2Object[2].y;
    v_6.w = _World2Object[3].y;
    vec4 v_7;
    v_7.x = _World2Object[0].z;
    v_7.y = _World2Object[1].z;
    v_7.z = _World2Object[2].z;
    v_7.w = _World2Object[3].z;
    vec3 tmpvar_8;
    tmpvar_8 = normalize(((
      (v_5.xyz * gl_Normal.x)
     + 
      (v_6.xyz * gl_Normal.y)
    ) + (v_7.xyz * gl_Normal.z)));
    float tmpvar_9;
    tmpvar_9 = dot (tmpvar_8, normalize((_WorldSpaceLightPos0.xyz - 
      (tmpvar_4 * _WorldSpaceLightPos0.w)
    )));
    vec4 tmpvar_10;
    tmpvar_10.w = 1.0;
    tmpvar_10.xyz = (tmpvar_4 - (tmpvar_8 * (unity_LightShadowBias.z * 
      sqrt((1.0 - (tmpvar_9 * tmpvar_9)))
    )));
    clipPos_2 = (unity_MatrixVP * tmpvar_10);
  } else {
    vec4 tmpvar_11;
    tmpvar_11.w = 1.0;
    tmpvar_11.xyz = vertex_1;
    clipPos_2 = (gl_ModelViewProjectionMatrix * tmpvar_11);
  };
  vec4 clipPos_12;
  clipPos_12.xyw = clipPos_2.xyw;
  clipPos_12.z = (clipPos_2.z + clamp ((unity_LightShadowBias.x / clipPos_2.w), 0.0, 1.0));
  clipPos_12.z = mix (clipPos_12.z, max (clipPos_12.z, -(clipPos_2.w)), unity_LightShadowBias.y);
  gl_Position = clipPos_12;
}


#endif
#ifdef FRAGMENT
void main ()
{
  gl_FragData[0] = vec4(0.0, 0.0, 0.0, 0.0);
}


#endif
"
}
SubProgram "d3d9 " {
// Stats: 43 math
Keywords { "SHADOWS_DEPTH" }
Bind "vertex" Vertex
Bind "normal" Normal
Matrix 8 [_Object2World] 3
Matrix 11 [_World2Object] 3
Matrix 0 [glstate_matrix_mvp]
Matrix 4 [unity_MatrixVP]
Vector 14 [_WorldSpaceLightPos0]
Vector 15 [unity_LightShadowBias]
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   row_major float4x4 _Object2World;
//   row_major float4x4 _World2Object;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 glstate_matrix_mvp;
//   float4 unity_LightShadowBias;
//   row_major float4x4 unity_MatrixVP;
//
//
// Registers:
//
//   Name                  Reg   Size
//   --------------------- ----- ----
//   glstate_matrix_mvp    c0       4
//   unity_MatrixVP        c4       4
//   _Object2World         c8       3
//   _World2Object         c11      3
//   _WorldSpaceLightPos0  c14      1
//   unity_LightShadowBias c15      1
//

    vs_2_0
    def c16, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    mul r0.x, c15.z, c15.z
    slt r0.x, -r0.x, r0.x
    mul r0.yzw, v1.y, c12.xxyz
    mad r0.yzw, c11.xxyz, v1.x, r0
    mad r0.yzw, c13.xxyz, v1.z, r0
    nrm r1.xyz, r0.yzww
    mad r2, v0.xyzx, c16.xxxy, c16.yyyx
    dp4 r3.x, c8, r2
    dp4 r3.y, c9, r2
    dp4 r3.z, c10, r2
    mad r0.yzw, r3.xxyz, -c14.w, c14.xxyz
    nrm r4.xyz, r0.yzww
    dp3 r0.y, r1, r4
    mad r0.y, r0.y, -r0.y, c16.x
    rsq r0.y, r0.y
    rcp r0.y, r0.y
    mul r0.y, r0.y, c15.z
    mad r1.xyz, r1, -r0.y, r3
    mov r1.w, c16.x
    dp4 r3.x, c4, r1
    dp4 r3.y, c5, r1
    dp4 r3.z, c6, r1
    dp4 r3.w, c7, r1
    dp4 r1.x, c0, r2
    dp4 r1.y, c1, r2
    dp4 r1.z, c2, r2
    dp4 r1.w, c3, r2
    lrp r2, r0.x, r3, r1
    rcp r0.x, r2.w
    mul r0.x, r0.x, c15.x
    max r0.x, r0.x, c16.y
    min r0.x, r0.x, c16.x
    add r0.x, r0.x, r2.z
    max r0.y, r0.x, c16.y
    lrp r2.z, c15.y, r0.y, r0.x
    mov oT0, r2
    mov oPos, r2

// approximately 41 instruction slots used
"
}
SubProgram "d3d11 " {
// Stats: 41 math
Keywords { "SHADOWS_DEPTH" }
Bind "vertex" Vertex
Bind "normal" Normal
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
ConstBuffer "UnityShadows" 416
Vector 80 [unity_LightShadowBias]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
ConstBuffer "UnityPerFrame" 256
Matrix 144 [unity_MatrixVP]
BindCB  "UnityLighting" 0
BindCB  "UnityShadows" 1
BindCB  "UnityPerDraw" 2
BindCB  "UnityPerFrame" 3
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
//
      vs_4_0
      dcl_constantbuffer cb0[1], immediateIndexed
      dcl_constantbuffer cb1[6], immediateIndexed
      dcl_constantbuffer cb2[19], immediateIndexed
      dcl_constantbuffer cb3[13], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_output_siv o0.xyzw, position
      dcl_temps 3
   0: mul r0.x, v1.x, cb2[16].x
   1: mul r0.y, v1.x, cb2[17].x
   2: mul r0.z, v1.x, cb2[18].x
   3: mul r1.x, v1.y, cb2[16].y
   4: mul r1.y, v1.y, cb2[17].y
   5: mul r1.z, v1.y, cb2[18].y
   6: add r0.xyz, r0.xyzx, r1.xyzx
   7: mul r1.x, v1.z, cb2[16].z
   8: mul r1.y, v1.z, cb2[17].z
   9: mul r1.z, v1.z, cb2[18].z
  10: add r0.xyz, r0.xyzx, r1.xyzx
  11: dp3 r0.w, r0.xyzx, r0.xyzx
  12: rsq r0.w, r0.w
  13: mul r0.xyz, r0.wwww, r0.xyzx
  14: mul r1.xyz, v0.yyyy, cb2[13].xyzx
  15: mad r1.xyz, cb2[12].xyzx, v0.xxxx, r1.xyzx
  16: mad r1.xyz, cb2[14].xyzx, v0.zzzz, r1.xyzx
  17: add r1.xyz, r1.xyzx, cb2[15].xyzx
  18: mad r2.xyz, -r1.xyzx, cb0[0].wwww, cb0[0].xyzx
  19: dp3 r0.w, r2.xyzx, r2.xyzx
  20: rsq r0.w, r0.w
  21: mul r2.xyz, r0.wwww, r2.xyzx
  22: dp3 r0.w, r0.xyzx, r2.xyzx
  23: mad r0.w, -r0.w, r0.w, l(1.000000)
  24: sqrt r0.w, r0.w
  25: mul r0.w, r0.w, cb1[5].z
  26: mad r0.xyz, -r0.xyzx, r0.wwww, r1.xyzx
  27: mul r1.xyzw, r0.yyyy, cb3[10].xyzw
  28: mad r1.xyzw, cb3[9].xyzw, r0.xxxx, r1.xyzw
  29: mad r0.xyzw, cb3[11].xyzw, r0.zzzz, r1.xyzw
  30: add r0.xyzw, r0.xyzw, cb3[12].xyzw
  31: mul r1.xyzw, v0.yyyy, cb2[1].xyzw
  32: mad r1.xyzw, cb2[0].xyzw, v0.xxxx, r1.xyzw
  33: mad r1.xyzw, cb2[2].xyzw, v0.zzzz, r1.xyzw
  34: add r1.xyzw, r1.xyzw, cb2[3].xyzw
  35: ne r2.x, cb1[5].z, l(0.000000)
  36: movc r0.xyzw, r2.xxxx, r0.xyzw, r1.xyzw
  37: div_sat r1.x, cb1[5].x, r0.w
  38: add r0.z, r0.z, r1.x
  39: mov o0.xyw, r0.xyxw
  40: max r0.x, r0.z, l(0.000000)
  41: add r0.x, -r0.z, r0.x
  42: mad o0.z, cb1[5].y, r0.x, r0.z
  43: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "d3d11_9x " {
// Stats: 41 math
Keywords { "SHADOWS_DEPTH" }
Bind "vertex" Vertex
Bind "normal" Normal
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
ConstBuffer "UnityShadows" 416
Vector 80 [unity_LightShadowBias]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
ConstBuffer "UnityPerFrame" 256
Matrix 144 [unity_MatrixVP]
BindCB  "UnityLighting" 0
BindCB  "UnityShadows" 1
BindCB  "UnityPerDraw" 2
BindCB  "UnityPerFrame" 3
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c1         cb0             0         1  ( FLT, FLT, FLT, FLT)
// c2         cb1             5         1  ( FLT, FLT, FLT, FLT)
// c3         cb2             0         4  ( FLT, FLT, FLT, FLT)
// c7         cb2            12         7  ( FLT, FLT, FLT, FLT)
// c14        cb3             9         4  ( FLT, FLT, FLT, FLT)
//
//
// Runtime generated constant mappings:
//
// Target Reg                               Constant Description
// ---------- --------------------------------------------------
// c0                              Vertex Shader position offset
//
//
// Level9 shader bytecode:
//
    vs_2_0
          def c18, 1, 0, 0, 0
          dcl_texcoord v0
          dcl_texcoord1 v1
   0:     mul r0.x, v1.x, c11.x
   1:     mul r0.y, v1.x, c12.x
   2:     mul r0.z, v1.x, c13.x
   3:     mul r1.x, v1.y, c11.y
   4:     mul r1.y, v1.y, c12.y
   5:     mul r1.z, v1.y, c13.y
   6:     add r0.xyz, r0, r1
   7:     mul r1.x, v1.z, c11.z
   8:     mul r1.y, v1.z, c12.z
   9:     mul r1.z, v1.z, c13.z
  10:     add r0.xyz, r0, r1
  11:     nrm r1.xyz, r0
  14:     mul r0.xyz, v0.y, c8
  15:     mad r0.xyz, c7, v0.x, r0
  16:     mad r0.xyz, c9, v0.z, r0
  17:     add r0.xyz, r0, c10
  18:     mad r2.xyz, r0, -c1.w, c1
  19:     nrm r3.xyz, r2
  22:     dp3 r0.w, r1, r3
  23:     mad r0.w, r0.w, -r0.w, c18.x
  24:     rsq r0.w, r0.w
  25:     rcp r0.w, r0.w
  26:     mul r0.w, r0.w, c2.z
  27:     mad r0.xyz, r1, -r0.w, r0
  28:     mul r1, r0.y, c15
  29:     mad r1, c14, r0.x, r1
  30:     mad r0, c16, r0.z, r1
  31:     add r0, r0, c17
  32:     mul r1, v0.y, c4
  33:     mad r1, c3, v0.x, r1
  34:     mad r1, c5, v0.z, r1
  35:     add r1, r1, c6
  36:     mul r2.x, c2.z, c2.z
  37:     slt r2.x, -r2.x, r2.x
  38:     lrp r3, r2.x, r0, r1
  39:     rcp r0.x, r3.w
  40:     mul r0.x, r0.x, c2.x
  41:     max r0.x, r0.x, c18.y
  42:     min r0.x, r0.x, c18.x
  43:     add r0.x, r0.x, r3.z
  44:     max r0.y, r0.x, c18.y
  45:     add r0.y, -r0.x, r0.y
  46:     mad oPos.z, c2.y, r0.y, r0.x
  47:     mad oPos.xy, r3.w, c0, r3
  48:     mov oPos.w, r3.w

// approximately 49 instruction slots used
      vs_4_0
      dcl_constantbuffer cb0[1], immediateIndexed
      dcl_constantbuffer cb1[6], immediateIndexed
      dcl_constantbuffer cb2[19], immediateIndexed
      dcl_constantbuffer cb3[13], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_output_siv o0.xyzw, position
      dcl_temps 3
   0: mul r0.x, v1.x, cb2[16].x
   1: mul r0.y, v1.x, cb2[17].x
   2: mul r0.z, v1.x, cb2[18].x
   3: mul r1.x, v1.y, cb2[16].y
   4: mul r1.y, v1.y, cb2[17].y
   5: mul r1.z, v1.y, cb2[18].y
   6: add r0.xyz, r0.xyzx, r1.xyzx
   7: mul r1.x, v1.z, cb2[16].z
   8: mul r1.y, v1.z, cb2[17].z
   9: mul r1.z, v1.z, cb2[18].z
  10: add r0.xyz, r0.xyzx, r1.xyzx
  11: dp3 r0.w, r0.xyzx, r0.xyzx
  12: rsq r0.w, r0.w
  13: mul r0.xyz, r0.wwww, r0.xyzx
  14: mul r1.xyz, v0.yyyy, cb2[13].xyzx
  15: mad r1.xyz, cb2[12].xyzx, v0.xxxx, r1.xyzx
  16: mad r1.xyz, cb2[14].xyzx, v0.zzzz, r1.xyzx
  17: add r1.xyz, r1.xyzx, cb2[15].xyzx
  18: mad r2.xyz, -r1.xyzx, cb0[0].wwww, cb0[0].xyzx
  19: dp3 r0.w, r2.xyzx, r2.xyzx
  20: rsq r0.w, r0.w
  21: mul r2.xyz, r0.wwww, r2.xyzx
  22: dp3 r0.w, r0.xyzx, r2.xyzx
  23: mad r0.w, -r0.w, r0.w, l(1.000000)
  24: sqrt r0.w, r0.w
  25: mul r0.w, r0.w, cb1[5].z
  26: mad r0.xyz, -r0.xyzx, r0.wwww, r1.xyzx
  27: mul r1.xyzw, r0.yyyy, cb3[10].xyzw
  28: mad r1.xyzw, cb3[9].xyzw, r0.xxxx, r1.xyzw
  29: mad r0.xyzw, cb3[11].xyzw, r0.zzzz, r1.xyzw
  30: add r0.xyzw, r0.xyzw, cb3[12].xyzw
  31: mul r1.xyzw, v0.yyyy, cb2[1].xyzw
  32: mad r1.xyzw, cb2[0].xyzw, v0.xxxx, r1.xyzw
  33: mad r1.xyzw, cb2[2].xyzw, v0.zzzz, r1.xyzw
  34: add r1.xyzw, r1.xyzw, cb2[3].xyzw
  35: ne r2.x, cb1[5].z, l(0.000000)
  36: movc r0.xyzw, r2.xxxx, r0.xyzw, r1.xyzw
  37: div_sat r1.x, cb1[5].x, r0.w
  38: add r0.z, r0.z, r1.x
  39: mov o0.xyw, r0.xyxw
  40: max r0.x, r0.z, l(0.000000)
  41: add r0.x, -r0.z, r0.x
  42: mad o0.z, cb1[5].y, r0.x, r0.z
  43: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
// Stats: 4 math
Keywords { "SHADOWS_CUBE" }
"#version 120

#ifdef VERTEX
uniform vec4 _LightPositionRange;

uniform mat4 _Object2World;
varying vec3 xlv_TEXCOORD0;
void main ()
{
  xlv_TEXCOORD0 = ((_Object2World * gl_Vertex).xyz - _LightPositionRange.xyz);
  gl_Position = (gl_ModelViewProjectionMatrix * gl_Vertex);
}


#endif
#ifdef FRAGMENT
uniform vec4 _LightPositionRange;
uniform vec4 unity_LightShadowBias;
varying vec3 xlv_TEXCOORD0;
void main ()
{
  gl_FragData[0] = vec4(((sqrt(
    dot (xlv_TEXCOORD0, xlv_TEXCOORD0)
  ) + unity_LightShadowBias.x) * _LightPositionRange.w));
}


#endif
"
}
SubProgram "d3d9 " {
// Stats: 8 math
Keywords { "SHADOWS_CUBE" }
Bind "vertex" Vertex
Matrix 4 [_Object2World] 3
Matrix 0 [glstate_matrix_mvp]
Vector 7 [_LightPositionRange]
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _LightPositionRange;
//   row_major float4x4 _Object2World;
//   row_major float4x4 glstate_matrix_mvp;
//
//
// Registers:
//
//   Name                Reg   Size
//   ------------------- ----- ----
//   glstate_matrix_mvp  c0       4
//   _Object2World       c4       3
//   _LightPositionRange c7       1
//

    vs_2_0
    dcl_position v0
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add oT0.xyz, r0, -c7
    dp4 oPos.x, c0, v0
    dp4 oPos.y, c1, v0
    dp4 oPos.z, c2, v0
    dp4 oPos.w, c3, v0

// approximately 8 instruction slots used
"
}
SubProgram "d3d11 " {
// Stats: 9 math
Keywords { "SHADOWS_CUBE" }
Bind "vertex" Vertex
ConstBuffer "UnityLighting" 720
Vector 16 [_LightPositionRange]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
BindCB  "UnityLighting" 0
BindCB  "UnityPerDraw" 1
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float       
// TEXCOORD                 0   xy          2     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyz         0     NONE   float   xyz 
// SV_POSITION              0   xyzw        1      POS   float   xyzw
//
      vs_4_0
      dcl_constantbuffer cb0[2], immediateIndexed
      dcl_constantbuffer cb1[16], immediateIndexed
      dcl_input v0.xyzw
      dcl_output o0.xyz
      dcl_output_siv o1.xyzw, position
      dcl_temps 1
   0: mul r0.xyz, v0.yyyy, cb1[13].xyzx
   1: mad r0.xyz, cb1[12].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[14].xyzx, v0.zzzz, r0.xyzx
   3: mad r0.xyz, cb1[15].xyzx, v0.wwww, r0.xyzx
   4: add o0.xyz, r0.xyzx, -cb0[1].xyzx
   5: mul r0.xyzw, v0.yyyy, cb1[1].xyzw
   6: mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
   7: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   8: mad o1.xyzw, cb1[3].xyzw, v0.wwww, r0.xyzw
   9: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "d3d11_9x " {
// Stats: 9 math
Keywords { "SHADOWS_CUBE" }
Bind "vertex" Vertex
ConstBuffer "UnityLighting" 720
Vector 16 [_LightPositionRange]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
BindCB  "UnityLighting" 0
BindCB  "UnityPerDraw" 1
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float       
// TEXCOORD                 0   xy          2     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyz         0     NONE   float   xyz 
// SV_POSITION              0   xyzw        1      POS   float   xyzw
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c1         cb0             1         1  ( FLT, FLT, FLT, FLT)
// c2         cb1             0         4  ( FLT, FLT, FLT, FLT)
// c6         cb1            12         4  ( FLT, FLT, FLT, FLT)
//
//
// Runtime generated constant mappings:
//
// Target Reg                               Constant Description
// ---------- --------------------------------------------------
// c0                              Vertex Shader position offset
//
//
// Level9 shader bytecode:
//
    vs_2_0
          dcl_texcoord v0
   0:     mul r0.xyz, v0.y, c7
   1:     mad r0.xyz, c6, v0.x, r0
   2:     mad r0.xyz, c8, v0.z, r0
   3:     mad r0.xyz, c9, v0.w, r0
   4:     add oT0.xyz, r0, -c1
   5:     mul r0, v0.y, c3
   6:     mad r0, c2, v0.x, r0
   7:     mad r0, c4, v0.z, r0
   8:     mad r0, c5, v0.w, r0
   9:     mad oPos.xy, r0.w, c0, r0
  10:     mov oPos.zw, r0

// approximately 11 instruction slots used
      vs_4_0
      dcl_constantbuffer cb0[2], immediateIndexed
      dcl_constantbuffer cb1[16], immediateIndexed
      dcl_input v0.xyzw
      dcl_output o0.xyz
      dcl_output_siv o1.xyzw, position
      dcl_temps 1
   0: mul r0.xyz, v0.yyyy, cb1[13].xyzx
   1: mad r0.xyz, cb1[12].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[14].xyzx, v0.zzzz, r0.xyzx
   3: mad r0.xyz, cb1[15].xyzx, v0.wwww, r0.xyzx
   4: add o0.xyz, r0.xyzx, -cb0[1].xyzx
   5: mul r0.xyzw, v0.yyyy, cb1[1].xyzw
   6: mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
   7: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   8: mad o1.xyzw, cb1[3].xyzw, v0.wwww, r0.xyzw
   9: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
// Stats: 4 math, 2 textures, 1 branches
Keywords { "SHADOWS_DEPTH" "_ALPHABLEND_ON" }
"#version 120

#ifdef VERTEX
uniform vec4 _WorldSpaceLightPos0;
uniform vec4 unity_LightShadowBias;

uniform mat4 _Object2World;
uniform mat4 _World2Object;
uniform mat4 unity_MatrixVP;
uniform vec4 _MainTex_ST;
varying vec2 xlv_TEXCOORD1;
void main ()
{
  vec3 vertex_1;
  vertex_1 = gl_Vertex.xyz;
  vec4 clipPos_2;
  if ((unity_LightShadowBias.z != 0.0)) {
    vec4 tmpvar_3;
    tmpvar_3.w = 1.0;
    tmpvar_3.xyz = vertex_1;
    vec3 tmpvar_4;
    tmpvar_4 = (_Object2World * tmpvar_3).xyz;
    vec4 v_5;
    v_5.x = _World2Object[0].x;
    v_5.y = _World2Object[1].x;
    v_5.z = _World2Object[2].x;
    v_5.w = _World2Object[3].x;
    vec4 v_6;
    v_6.x = _World2Object[0].y;
    v_6.y = _World2Object[1].y;
    v_6.z = _World2Object[2].y;
    v_6.w = _World2Object[3].y;
    vec4 v_7;
    v_7.x = _World2Object[0].z;
    v_7.y = _World2Object[1].z;
    v_7.z = _World2Object[2].z;
    v_7.w = _World2Object[3].z;
    vec3 tmpvar_8;
    tmpvar_8 = normalize(((
      (v_5.xyz * gl_Normal.x)
     + 
      (v_6.xyz * gl_Normal.y)
    ) + (v_7.xyz * gl_Normal.z)));
    float tmpvar_9;
    tmpvar_9 = dot (tmpvar_8, normalize((_WorldSpaceLightPos0.xyz - 
      (tmpvar_4 * _WorldSpaceLightPos0.w)
    )));
    vec4 tmpvar_10;
    tmpvar_10.w = 1.0;
    tmpvar_10.xyz = (tmpvar_4 - (tmpvar_8 * (unity_LightShadowBias.z * 
      sqrt((1.0 - (tmpvar_9 * tmpvar_9)))
    )));
    clipPos_2 = (unity_MatrixVP * tmpvar_10);
  } else {
    vec4 tmpvar_11;
    tmpvar_11.w = 1.0;
    tmpvar_11.xyz = vertex_1;
    clipPos_2 = (gl_ModelViewProjectionMatrix * tmpvar_11);
  };
  vec4 clipPos_12;
  clipPos_12.xyw = clipPos_2.xyw;
  clipPos_12.z = (clipPos_2.z + clamp ((unity_LightShadowBias.x / clipPos_2.w), 0.0, 1.0));
  clipPos_12.z = mix (clipPos_12.z, max (clipPos_12.z, -(clipPos_2.w)), unity_LightShadowBias.y);
  xlv_TEXCOORD1 = ((gl_MultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  gl_Position = clipPos_12;
}


#endif
#ifdef FRAGMENT
uniform vec4 _Color;
uniform float _Cutoff;
uniform sampler2D _MainTex;
varying vec2 xlv_TEXCOORD1;
void main ()
{
  float x_1;
  x_1 = ((texture2D (_MainTex, xlv_TEXCOORD1).w * _Color.w) - _Cutoff);
  if ((x_1 < 0.0)) {
    discard;
  };
  gl_FragData[0] = vec4(0.0, 0.0, 0.0, 0.0);
}


#endif
"
}
SubProgram "d3d9 " {
// Stats: 44 math
Keywords { "SHADOWS_DEPTH" "_ALPHABLEND_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Matrix 8 [_Object2World] 3
Matrix 11 [_World2Object] 3
Matrix 0 [glstate_matrix_mvp]
Matrix 4 [unity_MatrixVP]
Vector 16 [_MainTex_ST]
Vector 14 [_WorldSpaceLightPos0]
Vector 15 [unity_LightShadowBias]
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _MainTex_ST;
//   row_major float4x4 _Object2World;
//   row_major float4x4 _World2Object;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 glstate_matrix_mvp;
//   float4 unity_LightShadowBias;
//   row_major float4x4 unity_MatrixVP;
//
//
// Registers:
//
//   Name                  Reg   Size
//   --------------------- ----- ----
//   glstate_matrix_mvp    c0       4
//   unity_MatrixVP        c4       4
//   _Object2World         c8       3
//   _World2Object         c11      3
//   _WorldSpaceLightPos0  c14      1
//   unity_LightShadowBias c15      1
//   _MainTex_ST           c16      1
//

    vs_2_0
    def c17, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    mad oT1.xy, v2, c16, c16.zwzw
    mul r0.x, c15.z, c15.z
    slt r0.x, -r0.x, r0.x
    mul r0.yzw, v1.y, c12.xxyz
    mad r0.yzw, c11.xxyz, v1.x, r0
    mad r0.yzw, c13.xxyz, v1.z, r0
    nrm r1.xyz, r0.yzww
    mad r2, v0.xyzx, c17.xxxy, c17.yyyx
    dp4 r3.x, c8, r2
    dp4 r3.y, c9, r2
    dp4 r3.z, c10, r2
    mad r0.yzw, r3.xxyz, -c14.w, c14.xxyz
    nrm r4.xyz, r0.yzww
    dp3 r0.y, r1, r4
    mad r0.y, r0.y, -r0.y, c17.x
    rsq r0.y, r0.y
    rcp r0.y, r0.y
    mul r0.y, r0.y, c15.z
    mad r1.xyz, r1, -r0.y, r3
    mov r1.w, c17.x
    dp4 r3.x, c4, r1
    dp4 r3.y, c5, r1
    dp4 r3.z, c6, r1
    dp4 r3.w, c7, r1
    dp4 r1.x, c0, r2
    dp4 r1.y, c1, r2
    dp4 r1.z, c2, r2
    dp4 r1.w, c3, r2
    lrp r2, r0.x, r3, r1
    rcp r0.x, r2.w
    mul r0.x, r0.x, c15.x
    max r0.x, r0.x, c17.y
    min r0.x, r0.x, c17.x
    add r0.x, r0.x, r2.z
    max r0.y, r0.x, c17.y
    lrp r2.z, c15.y, r0.y, r0.x
    mov oT0, r2
    mov oPos, r2

// approximately 42 instruction slots used
"
}
SubProgram "d3d11 " {
// Stats: 42 math
Keywords { "SHADOWS_DEPTH" "_ALPHABLEND_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
ConstBuffer "$Globals" 144
Vector 128 [_MainTex_ST]
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
ConstBuffer "UnityShadows" 416
Vector 80 [unity_LightShadowBias]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
ConstBuffer "UnityPerFrame" 256
Matrix 144 [unity_MatrixVP]
BindCB  "$Globals" 0
BindCB  "UnityLighting" 1
BindCB  "UnityShadows" 2
BindCB  "UnityPerDraw" 3
BindCB  "UnityPerFrame" 4
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 1   xy          0     NONE   float   xy  
// SV_POSITION              0   xyzw        1      POS   float   xyzw
//
      vs_4_0
      dcl_constantbuffer cb0[9], immediateIndexed
      dcl_constantbuffer cb1[1], immediateIndexed
      dcl_constantbuffer cb2[6], immediateIndexed
      dcl_constantbuffer cb3[19], immediateIndexed
      dcl_constantbuffer cb4[13], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_output o0.xy
      dcl_output_siv o1.xyzw, position
      dcl_temps 3
   0: mad o0.xy, v2.xyxx, cb0[8].xyxx, cb0[8].zwzz
   1: mul r0.x, v1.x, cb3[16].x
   2: mul r0.y, v1.x, cb3[17].x
   3: mul r0.z, v1.x, cb3[18].x
   4: mul r1.x, v1.y, cb3[16].y
   5: mul r1.y, v1.y, cb3[17].y
   6: mul r1.z, v1.y, cb3[18].y
   7: add r0.xyz, r0.xyzx, r1.xyzx
   8: mul r1.x, v1.z, cb3[16].z
   9: mul r1.y, v1.z, cb3[17].z
  10: mul r1.z, v1.z, cb3[18].z
  11: add r0.xyz, r0.xyzx, r1.xyzx
  12: dp3 r0.w, r0.xyzx, r0.xyzx
  13: rsq r0.w, r0.w
  14: mul r0.xyz, r0.wwww, r0.xyzx
  15: mul r1.xyz, v0.yyyy, cb3[13].xyzx
  16: mad r1.xyz, cb3[12].xyzx, v0.xxxx, r1.xyzx
  17: mad r1.xyz, cb3[14].xyzx, v0.zzzz, r1.xyzx
  18: add r1.xyz, r1.xyzx, cb3[15].xyzx
  19: mad r2.xyz, -r1.xyzx, cb1[0].wwww, cb1[0].xyzx
  20: dp3 r0.w, r2.xyzx, r2.xyzx
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, r2.xyzx
  23: dp3 r0.w, r0.xyzx, r2.xyzx
  24: mad r0.w, -r0.w, r0.w, l(1.000000)
  25: sqrt r0.w, r0.w
  26: mul r0.w, r0.w, cb2[5].z
  27: mad r0.xyz, -r0.xyzx, r0.wwww, r1.xyzx
  28: mul r1.xyzw, r0.yyyy, cb4[10].xyzw
  29: mad r1.xyzw, cb4[9].xyzw, r0.xxxx, r1.xyzw
  30: mad r0.xyzw, cb4[11].xyzw, r0.zzzz, r1.xyzw
  31: add r0.xyzw, r0.xyzw, cb4[12].xyzw
  32: mul r1.xyzw, v0.yyyy, cb3[1].xyzw
  33: mad r1.xyzw, cb3[0].xyzw, v0.xxxx, r1.xyzw
  34: mad r1.xyzw, cb3[2].xyzw, v0.zzzz, r1.xyzw
  35: add r1.xyzw, r1.xyzw, cb3[3].xyzw
  36: ne r2.x, cb2[5].z, l(0.000000)
  37: movc r0.xyzw, r2.xxxx, r0.xyzw, r1.xyzw
  38: div_sat r1.x, cb2[5].x, r0.w
  39: add r0.z, r0.z, r1.x
  40: mov o1.xyw, r0.xyxw
  41: max r0.x, r0.z, l(0.000000)
  42: add r0.x, -r0.z, r0.x
  43: mad o1.z, cb2[5].y, r0.x, r0.z
  44: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "d3d11_9x " {
// Stats: 42 math
Keywords { "SHADOWS_DEPTH" "_ALPHABLEND_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
ConstBuffer "$Globals" 144
Vector 128 [_MainTex_ST]
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
ConstBuffer "UnityShadows" 416
Vector 80 [unity_LightShadowBias]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
ConstBuffer "UnityPerFrame" 256
Matrix 144 [unity_MatrixVP]
BindCB  "$Globals" 0
BindCB  "UnityLighting" 1
BindCB  "UnityShadows" 2
BindCB  "UnityPerDraw" 3
BindCB  "UnityPerFrame" 4
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 1   xy          0     NONE   float   xy  
// SV_POSITION              0   xyzw        1      POS   float   xyzw
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c1         cb0             8         1  ( FLT, FLT, FLT, FLT)
// c2         cb1             0         1  ( FLT, FLT, FLT, FLT)
// c3         cb2             5         1  ( FLT, FLT, FLT, FLT)
// c4         cb3             0         4  ( FLT, FLT, FLT, FLT)
// c8         cb3            12         7  ( FLT, FLT, FLT, FLT)
// c15        cb4             9         4  ( FLT, FLT, FLT, FLT)
//
//
// Runtime generated constant mappings:
//
// Target Reg                               Constant Description
// ---------- --------------------------------------------------
// c0                              Vertex Shader position offset
//
//
// Level9 shader bytecode:
//
    vs_2_0
          def c19, 1, 0, 0, 0
          dcl_texcoord v0
          dcl_texcoord1 v1
          dcl_texcoord2 v2
   0:     mul r0.x, v1.x, c12.x
   1:     mul r0.y, v1.x, c13.x
   2:     mul r0.z, v1.x, c14.x
   3:     mul r1.x, v1.y, c12.y
   4:     mul r1.y, v1.y, c13.y
   5:     mul r1.z, v1.y, c14.y
   6:     add r0.xyz, r0, r1
   7:     mul r1.x, v1.z, c12.z
   8:     mul r1.y, v1.z, c13.z
   9:     mul r1.z, v1.z, c14.z
  10:     add r0.xyz, r0, r1
  11:     nrm r1.xyz, r0
  14:     mul r0.xyz, v0.y, c9
  15:     mad r0.xyz, c8, v0.x, r0
  16:     mad r0.xyz, c10, v0.z, r0
  17:     add r0.xyz, r0, c11
  18:     mad r2.xyz, r0, -c2.w, c2
  19:     nrm r3.xyz, r2
  22:     dp3 r0.w, r1, r3
  23:     mad r0.w, r0.w, -r0.w, c19.x
  24:     rsq r0.w, r0.w
  25:     rcp r0.w, r0.w
  26:     mul r0.w, r0.w, c3.z
  27:     mad r0.xyz, r1, -r0.w, r0
  28:     mul r1, r0.y, c16
  29:     mad r1, c15, r0.x, r1
  30:     mad r0, c17, r0.z, r1
  31:     add r0, r0, c18
  32:     mul r1, v0.y, c5
  33:     mad r1, c4, v0.x, r1
  34:     mad r1, c6, v0.z, r1
  35:     add r1, r1, c7
  36:     mul r2.x, c3.z, c3.z
  37:     slt r2.x, -r2.x, r2.x
  38:     lrp r3, r2.x, r0, r1
  39:     rcp r0.x, r3.w
  40:     mul r0.x, r0.x, c3.x
  41:     max r0.x, r0.x, c19.y
  42:     min r0.x, r0.x, c19.x
  43:     add r0.x, r0.x, r3.z
  44:     max r0.y, r0.x, c19.y
  45:     add r0.y, -r0.x, r0.y
  46:     mad oPos.z, c3.y, r0.y, r0.x
  47:     mad oT0.xy, v2, c1, c1.zwzw
  48:     mad oPos.xy, r3.w, c0, r3
  49:     mov oPos.w, r3.w

// approximately 50 instruction slots used
      vs_4_0
      dcl_constantbuffer cb0[9], immediateIndexed
      dcl_constantbuffer cb1[1], immediateIndexed
      dcl_constantbuffer cb2[6], immediateIndexed
      dcl_constantbuffer cb3[19], immediateIndexed
      dcl_constantbuffer cb4[13], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_output o0.xy
      dcl_output_siv o1.xyzw, position
      dcl_temps 3
   0: mad o0.xy, v2.xyxx, cb0[8].xyxx, cb0[8].zwzz
   1: mul r0.x, v1.x, cb3[16].x
   2: mul r0.y, v1.x, cb3[17].x
   3: mul r0.z, v1.x, cb3[18].x
   4: mul r1.x, v1.y, cb3[16].y
   5: mul r1.y, v1.y, cb3[17].y
   6: mul r1.z, v1.y, cb3[18].y
   7: add r0.xyz, r0.xyzx, r1.xyzx
   8: mul r1.x, v1.z, cb3[16].z
   9: mul r1.y, v1.z, cb3[17].z
  10: mul r1.z, v1.z, cb3[18].z
  11: add r0.xyz, r0.xyzx, r1.xyzx
  12: dp3 r0.w, r0.xyzx, r0.xyzx
  13: rsq r0.w, r0.w
  14: mul r0.xyz, r0.wwww, r0.xyzx
  15: mul r1.xyz, v0.yyyy, cb3[13].xyzx
  16: mad r1.xyz, cb3[12].xyzx, v0.xxxx, r1.xyzx
  17: mad r1.xyz, cb3[14].xyzx, v0.zzzz, r1.xyzx
  18: add r1.xyz, r1.xyzx, cb3[15].xyzx
  19: mad r2.xyz, -r1.xyzx, cb1[0].wwww, cb1[0].xyzx
  20: dp3 r0.w, r2.xyzx, r2.xyzx
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, r2.xyzx
  23: dp3 r0.w, r0.xyzx, r2.xyzx
  24: mad r0.w, -r0.w, r0.w, l(1.000000)
  25: sqrt r0.w, r0.w
  26: mul r0.w, r0.w, cb2[5].z
  27: mad r0.xyz, -r0.xyzx, r0.wwww, r1.xyzx
  28: mul r1.xyzw, r0.yyyy, cb4[10].xyzw
  29: mad r1.xyzw, cb4[9].xyzw, r0.xxxx, r1.xyzw
  30: mad r0.xyzw, cb4[11].xyzw, r0.zzzz, r1.xyzw
  31: add r0.xyzw, r0.xyzw, cb4[12].xyzw
  32: mul r1.xyzw, v0.yyyy, cb3[1].xyzw
  33: mad r1.xyzw, cb3[0].xyzw, v0.xxxx, r1.xyzw
  34: mad r1.xyzw, cb3[2].xyzw, v0.zzzz, r1.xyzw
  35: add r1.xyzw, r1.xyzw, cb3[3].xyzw
  36: ne r2.x, cb2[5].z, l(0.000000)
  37: movc r0.xyzw, r2.xxxx, r0.xyzw, r1.xyzw
  38: div_sat r1.x, cb2[5].x, r0.w
  39: add r0.z, r0.z, r1.x
  40: mov o1.xyw, r0.xyxw
  41: max r0.x, r0.z, l(0.000000)
  42: add r0.x, -r0.z, r0.x
  43: mad o1.z, cb2[5].y, r0.x, r0.z
  44: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
// Stats: 7 math, 2 textures, 1 branches
Keywords { "SHADOWS_CUBE" "_ALPHABLEND_ON" }
"#version 120

#ifdef VERTEX
uniform vec4 _LightPositionRange;

uniform mat4 _Object2World;
uniform vec4 _MainTex_ST;
varying vec3 xlv_TEXCOORD0;
varying vec2 xlv_TEXCOORD1;
void main ()
{
  xlv_TEXCOORD0 = ((_Object2World * gl_Vertex).xyz - _LightPositionRange.xyz);
  xlv_TEXCOORD1 = ((gl_MultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  gl_Position = (gl_ModelViewProjectionMatrix * gl_Vertex);
}


#endif
#ifdef FRAGMENT
uniform vec4 _LightPositionRange;
uniform vec4 unity_LightShadowBias;
uniform vec4 _Color;
uniform float _Cutoff;
uniform sampler2D _MainTex;
varying vec3 xlv_TEXCOORD0;
varying vec2 xlv_TEXCOORD1;
void main ()
{
  float x_1;
  x_1 = ((texture2D (_MainTex, xlv_TEXCOORD1).w * _Color.w) - _Cutoff);
  if ((x_1 < 0.0)) {
    discard;
  };
  gl_FragData[0] = vec4(((sqrt(
    dot (xlv_TEXCOORD0, xlv_TEXCOORD0)
  ) + unity_LightShadowBias.x) * _LightPositionRange.w));
}


#endif
"
}
SubProgram "d3d9 " {
// Stats: 9 math
Keywords { "SHADOWS_CUBE" "_ALPHABLEND_ON" }
Bind "vertex" Vertex
Bind "texcoord" TexCoord0
Matrix 4 [_Object2World] 3
Matrix 0 [glstate_matrix_mvp]
Vector 7 [_LightPositionRange]
Vector 8 [_MainTex_ST]
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _LightPositionRange;
//   float4 _MainTex_ST;
//   row_major float4x4 _Object2World;
//   row_major float4x4 glstate_matrix_mvp;
//
//
// Registers:
//
//   Name                Reg   Size
//   ------------------- ----- ----
//   glstate_matrix_mvp  c0       4
//   _Object2World       c4       3
//   _LightPositionRange c7       1
//   _MainTex_ST         c8       1
//

    vs_2_0
    dcl_position v0
    dcl_texcoord v1
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add oT0.xyz, r0, -c7
    dp4 oPos.x, c0, v0
    dp4 oPos.y, c1, v0
    dp4 oPos.z, c2, v0
    dp4 oPos.w, c3, v0
    mad oT1.xy, v1, c8, c8.zwzw

// approximately 9 instruction slots used
"
}
SubProgram "d3d11 " {
// Stats: 10 math
Keywords { "SHADOWS_CUBE" "_ALPHABLEND_ON" }
Bind "vertex" Vertex
Bind "texcoord" TexCoord0
ConstBuffer "$Globals" 144
Vector 128 [_MainTex_ST]
ConstBuffer "UnityLighting" 720
Vector 16 [_LightPositionRange]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
BindCB  "$Globals" 0
BindCB  "UnityLighting" 1
BindCB  "UnityPerDraw" 2
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float       
// TEXCOORD                 0   xy          2     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyz         0     NONE   float   xyz 
// TEXCOORD                 1   xy          1     NONE   float   xy  
// SV_POSITION              0   xyzw        2      POS   float   xyzw
//
      vs_4_0
      dcl_constantbuffer cb0[9], immediateIndexed
      dcl_constantbuffer cb1[2], immediateIndexed
      dcl_constantbuffer cb2[16], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xy
      dcl_output o0.xyz
      dcl_output o1.xy
      dcl_output_siv o2.xyzw, position
      dcl_temps 1
   0: mul r0.xyz, v0.yyyy, cb2[13].xyzx
   1: mad r0.xyz, cb2[12].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[14].xyzx, v0.zzzz, r0.xyzx
   3: mad r0.xyz, cb2[15].xyzx, v0.wwww, r0.xyzx
   4: add o0.xyz, r0.xyzx, -cb1[1].xyzx
   5: mad o1.xy, v2.xyxx, cb0[8].xyxx, cb0[8].zwzz
   6: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   7: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   8: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   9: mad o2.xyzw, cb2[3].xyzw, v0.wwww, r0.xyzw
  10: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "d3d11_9x " {
// Stats: 10 math
Keywords { "SHADOWS_CUBE" "_ALPHABLEND_ON" }
Bind "vertex" Vertex
Bind "texcoord" TexCoord0
ConstBuffer "$Globals" 144
Vector 128 [_MainTex_ST]
ConstBuffer "UnityLighting" 720
Vector 16 [_LightPositionRange]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
BindCB  "$Globals" 0
BindCB  "UnityLighting" 1
BindCB  "UnityPerDraw" 2
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float       
// TEXCOORD                 0   xy          2     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyz         0     NONE   float   xyz 
// TEXCOORD                 1   xy          1     NONE   float   xy  
// SV_POSITION              0   xyzw        2      POS   float   xyzw
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c1         cb0             8         1  ( FLT, FLT, FLT, FLT)
// c2         cb1             1         1  ( FLT, FLT, FLT, FLT)
// c3         cb2             0         4  ( FLT, FLT, FLT, FLT)
// c7         cb2            12         4  ( FLT, FLT, FLT, FLT)
//
//
// Runtime generated constant mappings:
//
// Target Reg                               Constant Description
// ---------- --------------------------------------------------
// c0                              Vertex Shader position offset
//
//
// Level9 shader bytecode:
//
    vs_2_0
          dcl_texcoord v0
          dcl_texcoord2 v2
   0:     mul r0.xyz, v0.y, c8
   1:     mad r0.xyz, c7, v0.x, r0
   2:     mad r0.xyz, c9, v0.z, r0
   3:     mad r0.xyz, c10, v0.w, r0
   4:     add oT0.xyz, r0, -c2
   5:     mad oT1.xy, v2, c1, c1.zwzw
   6:     mul r0, v0.y, c4
   7:     mad r0, c3, v0.x, r0
   8:     mad r0, c5, v0.z, r0
   9:     mad r0, c6, v0.w, r0
  10:     mad oPos.xy, r0.w, c0, r0
  11:     mov oPos.zw, r0

// approximately 12 instruction slots used
      vs_4_0
      dcl_constantbuffer cb0[9], immediateIndexed
      dcl_constantbuffer cb1[2], immediateIndexed
      dcl_constantbuffer cb2[16], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xy
      dcl_output o0.xyz
      dcl_output o1.xy
      dcl_output_siv o2.xyzw, position
      dcl_temps 1
   0: mul r0.xyz, v0.yyyy, cb2[13].xyzx
   1: mad r0.xyz, cb2[12].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[14].xyzx, v0.zzzz, r0.xyzx
   3: mad r0.xyz, cb2[15].xyzx, v0.wwww, r0.xyzx
   4: add o0.xyz, r0.xyzx, -cb1[1].xyzx
   5: mad o1.xy, v2.xyxx, cb0[8].xyxx, cb0[8].zwzz
   6: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   7: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   8: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   9: mad o2.xyzw, cb2[3].xyzw, v0.wwww, r0.xyzw
  10: ret 
// Approximately 0 instruction slots used
"
}
}
Program "fp" {
SubProgram "opengl " {
Keywords { "SHADOWS_DEPTH" }
"// shader disassembly not supported on opengl"
}
SubProgram "d3d9 " {
// Stats: 3 math
Keywords { "SHADOWS_DEPTH" }
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
    ps_2_0
    dcl t0
    rcp r0.w, t0.w
    mul_pp r0, r0.w, t0.z
    mov_pp oC0, r0

// approximately 3 instruction slots used
"
}
SubProgram "d3d11 " {
Keywords { "SHADOWS_DEPTH" }
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_output o0.xyzw
   0: mov o0.xyzw, l(0,0,0,0)
   1: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "d3d11_9x " {
Keywords { "SHADOWS_DEPTH" }
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
//
// Level9 shader bytecode:
//
    ps_2_0
          def c0, 0, 0, 0, 0
   0:     mov_pp r0, c0.x
   1:     mov_pp oC0, r0

// approximately 2 instruction slots used
      ps_4_0
      dcl_output o0.xyzw
   0: mov o0.xyzw, l(0,0,0,0)
   1: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
Keywords { "SHADOWS_CUBE" }
"// shader disassembly not supported on opengl"
}
SubProgram "d3d9 " {
// Stats: 6 math
Keywords { "SHADOWS_CUBE" }
Vector 0 [_LightPositionRange]
Vector 1 [unity_LightShadowBias]
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _LightPositionRange;
//   float4 unity_LightShadowBias;
//
//
// Registers:
//
//   Name                  Reg   Size
//   --------------------- ----- ----
//   _LightPositionRange   c0       1
//   unity_LightShadowBias c1       1
//

    ps_2_0
    dcl t0.xyz
    dp3 r0.w, t0, t0
    rsq r0.x, r0.w
    rcp r0.x, r0.x
    add r0.x, r0.x, c1.x
    mul_pp r0, r0.x, c0.w
    mov_pp oC0, r0

// approximately 6 instruction slots used
"
}
SubProgram "d3d11 " {
// Stats: 4 math
Keywords { "SHADOWS_CUBE" }
ConstBuffer "UnityLighting" 720
Vector 16 [_LightPositionRange]
ConstBuffer "UnityShadows" 416
Vector 80 [unity_LightShadowBias]
BindCB  "UnityLighting" 0
BindCB  "UnityShadows" 1
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyz         0     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer cb0[2], immediateIndexed
      dcl_constantbuffer cb1[6], immediateIndexed
      dcl_input_ps linear v0.xyz
      dcl_output o0.xyzw
      dcl_temps 1
   0: dp3 r0.x, v0.xyzx, v0.xyzx
   1: sqrt r0.x, r0.x
   2: add r0.x, r0.x, cb1[5].x
   3: mul o0.xyzw, r0.xxxx, cb0[1].wwww
   4: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "d3d11_9x " {
// Stats: 4 math
Keywords { "SHADOWS_CUBE" }
ConstBuffer "UnityLighting" 720
Vector 16 [_LightPositionRange]
ConstBuffer "UnityShadows" 416
Vector 80 [unity_LightShadowBias]
BindCB  "UnityLighting" 0
BindCB  "UnityShadows" 1
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyz         0     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c0         cb0             1         1  ( FLT, FLT, FLT, FLT)
// c1         cb1             5         1  ( FLT, FLT, FLT, FLT)
//
//
// Level9 shader bytecode:
//
    ps_2_0
          dcl t0.xyz
   0:     dp3 r0.w, t0, t0
   1:     rsq r0.x, r0.w
   2:     rcp r0.x, r0.x
   3:     add r0.x, r0.x, c1.x
   4:     mul_pp r0, r0.x, c0.w
   5:     mov_pp oC0, r0

// approximately 6 instruction slots used
      ps_4_0
      dcl_constantbuffer cb0[2], immediateIndexed
      dcl_constantbuffer cb1[6], immediateIndexed
      dcl_input_ps linear v0.xyz
      dcl_output o0.xyzw
      dcl_temps 1
   0: dp3 r0.x, v0.xyzx, v0.xyzx
   1: sqrt r0.x, r0.x
   2: add r0.x, r0.x, cb1[5].x
   3: mul o0.xyzw, r0.xxxx, cb0[1].wwww
   4: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
Keywords { "SHADOWS_DEPTH" "_ALPHABLEND_ON" }
"// shader disassembly not supported on opengl"
}
SubProgram "d3d9 " {
// Stats: 5 math, 2 textures
Keywords { "SHADOWS_DEPTH" "_ALPHABLEND_ON" }
Vector 0 [_Color]
Float 1 [_Cutoff]
SetTexture 0 [_MainTex] 2D 0
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _Color;
//   float _Cutoff;
//   sampler2D _MainTex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   _Color       c0       1
//   _Cutoff      c1       1
//   _MainTex     s0       1
//

    ps_2_0
    dcl t0
    dcl t1.xy
    dcl_2d s0
    texld r0, t1, s0
    mov r1.w, c0.w
    mad_pp r0, r0.w, r1.w, -c1.x
    texkill r0
    rcp r0.x, t0.w
    mul_pp r0, r0.x, t0.z
    mov_pp oC0, r0

// approximately 7 instruction slots used (1 texture, 6 arithmetic)
"
}
SubProgram "d3d11 " {
// Stats: 2 math, 1 textures
Keywords { "SHADOWS_DEPTH" "_ALPHABLEND_ON" }
SetTexture 0 [_MainTex] 2D 0
ConstBuffer "$Globals" 144
Vector 96 [_Color]
Float 112 [_Cutoff]
BindCB  "$Globals" 0
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 1   xy          0     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer cb0[8], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_input_ps linear v0.xy
      dcl_output o0.xyzw
      dcl_temps 1
   0: sample r0.xyzw, v0.xyxx, t0.xyzw, s0
   1: mad r0.x, r0.w, cb0[6].w, -cb0[7].x
   2: lt r0.x, r0.x, l(0.000000)
   3: discard_nz r0.x
   4: mov o0.xyzw, l(0,0,0,0)
   5: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "d3d11_9x " {
// Stats: 2 math, 1 textures
Keywords { "SHADOWS_DEPTH" "_ALPHABLEND_ON" }
SetTexture 0 [_MainTex] 2D 0
ConstBuffer "$Globals" 144
Vector 96 [_Color]
Float 112 [_Cutoff]
BindCB  "$Globals" 0
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 1   xy          0     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c0         cb0             6         2  ( FLT, FLT, FLT, FLT)
//
//
// Sampler/Resource to DX9 shader sampler mappings:
//
// Target Sampler Source Sampler  Source Resource
// -------------- --------------- ----------------
// s0             s0              t0               
//
//
// Level9 shader bytecode:
//
    ps_2_0
          def c2, 0, 0, 0, 0
          dcl t0.xy
          dcl_2d s0
   0:     texld r0, t0, s0
   0:     mov r1.w, c0.w
   1:     mad_pp r0, r0.w, r1.w, -c1.x
   2:     texkill r0
   3:     mov_pp r0, c2.x
   4:     mov_pp oC0, r0

// approximately 6 instruction slots used (1 texture, 5 arithmetic)
      ps_4_0
      dcl_constantbuffer cb0[8], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_input_ps linear v0.xy
      dcl_output o0.xyzw
      dcl_temps 1
   0: sample r0.xyzw, v0.xyxx, t0.xyzw, s0
   1: mad r0.x, r0.w, cb0[6].w, -cb0[7].x
   2: lt r0.x, r0.x, l(0.000000)
   3: discard_nz r0.x
   4: mov o0.xyzw, l(0,0,0,0)
   5: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "opengl " {
Keywords { "SHADOWS_CUBE" "_ALPHABLEND_ON" }
"// shader disassembly not supported on opengl"
}
SubProgram "d3d9 " {
// Stats: 8 math, 2 textures
Keywords { "SHADOWS_CUBE" "_ALPHABLEND_ON" }
Vector 2 [_Color]
Float 3 [_Cutoff]
Vector 0 [_LightPositionRange]
Vector 1 [unity_LightShadowBias]
SetTexture 0 [_MainTex] 2D 0
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _Color;
//   float _Cutoff;
//   float4 _LightPositionRange;
//   sampler2D _MainTex;
//   float4 unity_LightShadowBias;
//
//
// Registers:
//
//   Name                  Reg   Size
//   --------------------- ----- ----
//   _LightPositionRange   c0       1
//   unity_LightShadowBias c1       1
//   _Color                c2       1
//   _Cutoff               c3       1
//   _MainTex              s0       1
//

    ps_2_0
    dcl t0.xyz
    dcl t1.xy
    dcl_2d s0
    texld r0, t1, s0
    mov r1.w, c2.w
    mad_pp r0, r0.w, r1.w, -c3.x
    texkill r0
    dp3 r0.x, t0, t0
    rsq r0.x, r0.x
    rcp r0.x, r0.x
    add r0.x, r0.x, c1.x
    mul_pp r0, r0.x, c0.w
    mov_pp oC0, r0

// approximately 10 instruction slots used (1 texture, 9 arithmetic)
"
}
SubProgram "d3d11 " {
// Stats: 6 math, 1 textures
Keywords { "SHADOWS_CUBE" "_ALPHABLEND_ON" }
SetTexture 0 [_MainTex] 2D 0
ConstBuffer "$Globals" 144
Vector 96 [_Color]
Float 112 [_Cutoff]
ConstBuffer "UnityLighting" 720
Vector 16 [_LightPositionRange]
ConstBuffer "UnityShadows" 416
Vector 80 [unity_LightShadowBias]
BindCB  "$Globals" 0
BindCB  "UnityLighting" 1
BindCB  "UnityShadows" 2
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyz         0     NONE   float   xyz 
// TEXCOORD                 1   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer cb0[8], immediateIndexed
      dcl_constantbuffer cb1[2], immediateIndexed
      dcl_constantbuffer cb2[6], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_input_ps linear v0.xyz
      dcl_input_ps linear v1.xy
      dcl_output o0.xyzw
      dcl_temps 1
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s0
   1: mad r0.x, r0.w, cb0[6].w, -cb0[7].x
   2: lt r0.x, r0.x, l(0.000000)
   3: discard_nz r0.x
   4: dp3 r0.x, v0.xyzx, v0.xyzx
   5: sqrt r0.x, r0.x
   6: add r0.x, r0.x, cb2[5].x
   7: mul o0.xyzw, r0.xxxx, cb1[1].wwww
   8: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "d3d11_9x " {
// Stats: 6 math, 1 textures
Keywords { "SHADOWS_CUBE" "_ALPHABLEND_ON" }
SetTexture 0 [_MainTex] 2D 0
ConstBuffer "$Globals" 144
Vector 96 [_Color]
Float 112 [_Cutoff]
ConstBuffer "UnityLighting" 720
Vector 16 [_LightPositionRange]
ConstBuffer "UnityShadows" 416
Vector 80 [unity_LightShadowBias]
BindCB  "$Globals" 0
BindCB  "UnityLighting" 1
BindCB  "UnityShadows" 2
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyz         0     NONE   float   xyz 
// TEXCOORD                 1   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c0         cb0             6         2  ( FLT, FLT, FLT, FLT)
// c2         cb1             1         1  ( FLT, FLT, FLT, FLT)
// c3         cb2             5         1  ( FLT, FLT, FLT, FLT)
//
//
// Sampler/Resource to DX9 shader sampler mappings:
//
// Target Sampler Source Sampler  Source Resource
// -------------- --------------- ----------------
// s0             s0              t0               
//
//
// Level9 shader bytecode:
//
    ps_2_0
          dcl t0.xyz
          dcl t1.xy
          dcl_2d s0
   0:     texld r0, t1, s0
   0:     mov r1.w, c0.w
   1:     mad_pp r0, r0.w, r1.w, -c1.x
   2:     texkill r0
   3:     dp3 r0.x, t0, t0
   4:     rsq r0.x, r0.x
   5:     rcp r0.x, r0.x
   6:     add r0.x, r0.x, c3.x
   7:     mul_pp r0, r0.x, c2.w
   8:     mov_pp oC0, r0

// approximately 10 instruction slots used (1 texture, 9 arithmetic)
      ps_4_0
      dcl_constantbuffer cb0[8], immediateIndexed
      dcl_constantbuffer cb1[2], immediateIndexed
      dcl_constantbuffer cb2[6], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_input_ps linear v0.xyz
      dcl_input_ps linear v1.xy
      dcl_output o0.xyzw
      dcl_temps 1
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s0
   1: mad r0.x, r0.w, cb0[6].w, -cb0[7].x
   2: lt r0.x, r0.x, l(0.000000)
   3: discard_nz r0.x
   4: dp3 r0.x, v0.xyzx, v0.xyzx
   5: sqrt r0.x, r0.x
   6: add r0.x, r0.x, cb2[5].x
   7: mul o0.xyzw, r0.xxxx, cb1[1].wwww
   8: ret 
// Approximately 0 instruction slots used
"
}
}
 }
}
Fallback "VertexLit"
}